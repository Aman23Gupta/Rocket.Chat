{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/lib/settings.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/settings.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/settings.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/settings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\nimport { SAMLUtils } from './Utils';\nimport {\n\tdefaultAuthnContextTemplate,\n\tdefaultAuthRequestTemplate,\n\tdefaultLogoutResponseTemplate,\n\tdefaultLogoutRequestTemplate,\n\tdefaultNameIDTemplate,\n\tdefaultIdentifierFormat,\n\tdefaultAuthnContext,\n\tdefaultMetadataTemplate,\n\tdefaultMetadataCertificateTemplate,\n} from './constants';\n\nexport const getSamlConfigs = function (service: string): Record<string, any> {\n\tconst configs = {\n\t\tbuttonLabelText: settings.get(`${service}_button_label_text`),\n\t\tbuttonLabelColor: settings.get(`${service}_button_label_color`),\n\t\tbuttonColor: settings.get(`${service}_button_color`),\n\t\tclientConfig: {\n\t\t\tprovider: settings.get(`${service}_provider`),\n\t\t},\n\t\tentryPoint: settings.get(`${service}_entry_point`),\n\t\tidpSLORedirectURL: settings.get(`${service}_idp_slo_redirect_url`),\n\t\tusernameNormalize: settings.get(`${service}_username_normalize`),\n\t\timmutableProperty: settings.get(`${service}_immutable_property`),\n\t\tgenerateUsername: settings.get(`${service}_generate_username`),\n\t\tdebug: settings.get(`${service}_debug`),\n\t\tnameOverwrite: settings.get(`${service}_name_overwrite`),\n\t\tmailOverwrite: settings.get(`${service}_mail_overwrite`),\n\t\tissuer: settings.get(`${service}_issuer`),\n\t\tlogoutBehaviour: settings.get(`${service}_logout_behaviour`),\n\t\tdefaultUserRole: settings.get(`${service}_default_user_role`),\n\t\tsecret: {\n\t\t\tprivateKey: settings.get(`${service}_private_key`),\n\t\t\tpublicCert: settings.get(`${service}_public_cert`),\n\t\t\t// People often overlook the instruction to remove the header and footer of the certificate on this specific setting, so let's do it for them.\n\t\t\tcert: SAMLUtils.normalizeCert((settings.get(`${service}_cert`) as string) || ''),\n\t\t},\n\t\tsignatureValidationType: settings.get(`${service}_signature_validation_type`),\n\t\tuserDataFieldMap: settings.get(`${service}_user_data_fieldmap`),\n\t\tallowedClockDrift: settings.get(`${service}_allowed_clock_drift`),\n\t\tcustomAuthnContext: defaultAuthnContext,\n\t\tauthnContextComparison: 'exact',\n\t\tidentifierFormat: defaultIdentifierFormat,\n\t\tnameIDPolicyTemplate: defaultNameIDTemplate,\n\t\tauthnContextTemplate: defaultAuthnContextTemplate,\n\t\tauthRequestTemplate: defaultAuthRequestTemplate,\n\t\tlogoutResponseTemplate: defaultLogoutResponseTemplate,\n\t\tlogoutRequestTemplate: defaultLogoutRequestTemplate,\n\t\tmetadataCertificateTemplate: defaultMetadataCertificateTemplate,\n\t\tmetadataTemplate: defaultMetadataTemplate,\n\t\tchannelsAttributeUpdate: settings.get(`${service}_channels_update`),\n\t\tincludePrivateChannelsInUpdate: settings.get(`${service}_include_private_channels_update`),\n\t};\n\n\tSAMLUtils.events.emit('loadConfigs', service, configs);\n\treturn configs;\n};\n\nexport const configureSamlService = function (samlConfigs: Record<string, any>): IServiceProviderOptions {\n\tlet privateCert = null;\n\tlet privateKey = null;\n\n\tif (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n\t\tprivateKey = samlConfigs.secret.privateKey;\n\t\tprivateCert = samlConfigs.secret.publicCert;\n\t} else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n\t\tSAMLUtils.error('SAML Service: You must specify both cert and key files.');\n\t}\n\n\tSAMLUtils.updateGlobalSettings(samlConfigs);\n\n\treturn {\n\t\tprovider: samlConfigs.clientConfig.provider,\n\t\tentryPoint: samlConfigs.entryPoint,\n\t\tidpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n\t\tissuer: samlConfigs.issuer,\n\t\tcert: samlConfigs.secret.cert,\n\t\tprivateCert,\n\t\tprivateKey,\n\t\tcustomAuthnContext: samlConfigs.customAuthnContext,\n\t\tauthnContextComparison: samlConfigs.authnContextComparison,\n\t\tdefaultUserRole: samlConfigs.defaultUserRole,\n\t\tallowedClockDrift: parseInt(samlConfigs.allowedClockDrift) || 0,\n\t\tsignatureValidationType: samlConfigs.signatureValidationType,\n\t\tidentifierFormat: samlConfigs.identifierFormat,\n\t\tnameIDPolicyTemplate: samlConfigs.nameIDPolicyTemplate,\n\t\tauthnContextTemplate: samlConfigs.authnContextTemplate,\n\t\tauthRequestTemplate: samlConfigs.authRequestTemplate,\n\t\tlogoutResponseTemplate: samlConfigs.logoutResponseTemplate,\n\t\tlogoutRequestTemplate: samlConfigs.logoutRequestTemplate,\n\t\tmetadataCertificateTemplate: samlConfigs.metadataCertificateTemplate,\n\t\tmetadataTemplate: samlConfigs.metadataTemplate,\n\t\tcallbackUrl: Meteor.absoluteUrl(`_saml/validate/${samlConfigs.clientConfig.provider}`),\n\t};\n};\n\nexport const loadSamlServiceProviders = function (): void {\n\tconst serviceName = 'saml';\n\tconst services = settings.getByRegexp(/^(SAML_Custom_)[a-z]+$/i);\n\n\tif (!services) {\n\t\treturn SAMLUtils.setServiceProvidersList([]);\n\t}\n\n\tconst providers = services\n\t\t.map(([key, value]) => {\n\t\t\tif (value === true) {\n\t\t\t\tconst samlConfigs = getSamlConfigs(key);\n\t\t\t\tSAMLUtils.log(key);\n\t\t\t\tServiceConfiguration.configurations.upsert(\n\t\t\t\t\t{\n\t\t\t\t\t\tservice: serviceName.toLowerCase(),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t$set: samlConfigs,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\treturn configureSamlService(samlConfigs);\n\t\t\t}\n\t\t\tServiceConfiguration.configurations.remove({\n\t\t\t\tservice: serviceName.toLowerCase(),\n\t\t\t});\n\t\t\treturn false;\n\t\t})\n\t\t.filter((e) => e) as IServiceProviderOptions[];\n\n\tSAMLUtils.setServiceProvidersList(providers);\n};\n\nexport const addSamlService = function (name: string): void {\n\tSystemLogger.warn(`Adding ${name} is deprecated`);\n};\n\nexport const addSettings = function (name: string): void {\n\tsettingsRegistry.addGroup('SAML', function () {\n\t\tthis.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_Connection',\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tthis.add(`SAML_Custom_${name}`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Enable',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_provider`, 'provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Provider',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_entry_point`, 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Entry_point',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_idp_slo_redirect_url`, 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_issuer`, 'https://your-rocket-chat/_saml/metadata/provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Issuer',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_debug`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Debug',\n\t\t\t\t});\n\n\t\t\t\tthis.section('SAML_Section_2_Certificate', function () {\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Cert',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_public_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Public_Cert',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_signature_validation_type`, 'All', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Response', i18nLabel: 'SAML_Custom_signature_validation_response' },\n\t\t\t\t\t\t\t{ key: 'Assertion', i18nLabel: 'SAML_Custom_signature_validation_assertion' },\n\t\t\t\t\t\t\t{ key: 'Either', i18nLabel: 'SAML_Custom_signature_validation_either' },\n\t\t\t\t\t\t\t{ key: 'All', i18nLabel: 'SAML_Custom_signature_validation_all' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_signature_validation_type',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_signature_validation_type_description',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_private_key`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Private_Key',\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tthis.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_General',\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tthis.section('SAML_Section_1_User_Interface', function () {\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_button_label_text`, 'SAML', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_button_label_color`, '#FFFFFF', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_button_color`, '#1d74f5', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Color',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.section('SAML_Section_3_Behavior', function () {\n\t\t\t\t\t// Settings to customize behavior\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_generate_username`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Generate_Username',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_username_normalize`, 'None', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'None', i18nLabel: 'SAML_Custom_Username_Normalize_None' },\n\t\t\t\t\t\t\t{ key: 'Lowercase', i18nLabel: 'SAML_Custom_Username_Normalize_Lowercase' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Username_Normalize',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_immutable_property`, 'EMail', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Username', i18nLabel: 'SAML_Custom_Immutable_Property_Username' },\n\t\t\t\t\t\t\t{ key: 'EMail', i18nLabel: 'SAML_Custom_Immutable_Property_EMail' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Immutable_Property',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_name_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_name_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_mail_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_mail_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_logout_behaviour`, 'SAML', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'SAML', i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session' },\n\t\t\t\t\t\t\t{ key: 'Local', i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Logout_Behaviour',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_channels_update_description',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_include_private_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_include_private_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_include_private_channels_update_description',\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_default_user_role`, 'user', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Default_User_Role',\n\t\t\t\t\t\ti18nDescription: 'SAML_Default_User_Role_Description',\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_allowed_clock_drift`, false, {\n\t\t\t\t\t\ttype: 'int',\n\t\t\t\t\t\tinvalidValue: 0,\n\t\t\t\t\t\ti18nLabel: 'SAML_Allowed_Clock_Drift',\n\t\t\t\t\t\ti18nDescription: 'SAML_Allowed_Clock_Drift_Description',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.section('SAML_Section_5_Mapping', function () {\n\t\t\t\t\t// Data Mapping Settings\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_user_data_fieldmap`, '{\"username\":\"username\", \"email\":\"email\", \"name\": \"cn\"}', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_user_data_fieldmap',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_user_data_fieldmap_description',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tSAMLUtils.events.emit('addSettings', name);\n\t});\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/lib/settings.ts"}},"code":"module.export({\n  getSamlConfigs: () => getSamlConfigs,\n  configureSamlService: () => configureSamlService,\n  loadSamlServiceProviders: () => loadSamlServiceProviders,\n  addSamlService: () => addSamlService,\n  addSettings: () => addSettings\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ServiceConfiguration;\nmodule.link(\"meteor/service-configuration\", {\n  ServiceConfiguration(v) {\n    ServiceConfiguration = v;\n  }\n\n}, 1);\nlet settings, settingsRegistry;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  },\n\n  settingsRegistry(v) {\n    settingsRegistry = v;\n  }\n\n}, 2);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 3);\nlet SAMLUtils;\nmodule.link(\"./Utils\", {\n  SAMLUtils(v) {\n    SAMLUtils = v;\n  }\n\n}, 4);\nlet defaultAuthnContextTemplate, defaultAuthRequestTemplate, defaultLogoutResponseTemplate, defaultLogoutRequestTemplate, defaultNameIDTemplate, defaultIdentifierFormat, defaultAuthnContext, defaultMetadataTemplate, defaultMetadataCertificateTemplate;\nmodule.link(\"./constants\", {\n  defaultAuthnContextTemplate(v) {\n    defaultAuthnContextTemplate = v;\n  },\n\n  defaultAuthRequestTemplate(v) {\n    defaultAuthRequestTemplate = v;\n  },\n\n  defaultLogoutResponseTemplate(v) {\n    defaultLogoutResponseTemplate = v;\n  },\n\n  defaultLogoutRequestTemplate(v) {\n    defaultLogoutRequestTemplate = v;\n  },\n\n  defaultNameIDTemplate(v) {\n    defaultNameIDTemplate = v;\n  },\n\n  defaultIdentifierFormat(v) {\n    defaultIdentifierFormat = v;\n  },\n\n  defaultAuthnContext(v) {\n    defaultAuthnContext = v;\n  },\n\n  defaultMetadataTemplate(v) {\n    defaultMetadataTemplate = v;\n  },\n\n  defaultMetadataCertificateTemplate(v) {\n    defaultMetadataCertificateTemplate = v;\n  }\n\n}, 5);\n\nconst getSamlConfigs = function (service) {\n  const configs = {\n    buttonLabelText: settings.get(\"\".concat(service, \"_button_label_text\")),\n    buttonLabelColor: settings.get(\"\".concat(service, \"_button_label_color\")),\n    buttonColor: settings.get(\"\".concat(service, \"_button_color\")),\n    clientConfig: {\n      provider: settings.get(\"\".concat(service, \"_provider\"))\n    },\n    entryPoint: settings.get(\"\".concat(service, \"_entry_point\")),\n    idpSLORedirectURL: settings.get(\"\".concat(service, \"_idp_slo_redirect_url\")),\n    usernameNormalize: settings.get(\"\".concat(service, \"_username_normalize\")),\n    immutableProperty: settings.get(\"\".concat(service, \"_immutable_property\")),\n    generateUsername: settings.get(\"\".concat(service, \"_generate_username\")),\n    debug: settings.get(\"\".concat(service, \"_debug\")),\n    nameOverwrite: settings.get(\"\".concat(service, \"_name_overwrite\")),\n    mailOverwrite: settings.get(\"\".concat(service, \"_mail_overwrite\")),\n    issuer: settings.get(\"\".concat(service, \"_issuer\")),\n    logoutBehaviour: settings.get(\"\".concat(service, \"_logout_behaviour\")),\n    defaultUserRole: settings.get(\"\".concat(service, \"_default_user_role\")),\n    secret: {\n      privateKey: settings.get(\"\".concat(service, \"_private_key\")),\n      publicCert: settings.get(\"\".concat(service, \"_public_cert\")),\n      // People often overlook the instruction to remove the header and footer of the certificate on this specific setting, so let's do it for them.\n      cert: SAMLUtils.normalizeCert(settings.get(\"\".concat(service, \"_cert\")) || '')\n    },\n    signatureValidationType: settings.get(\"\".concat(service, \"_signature_validation_type\")),\n    userDataFieldMap: settings.get(\"\".concat(service, \"_user_data_fieldmap\")),\n    allowedClockDrift: settings.get(\"\".concat(service, \"_allowed_clock_drift\")),\n    customAuthnContext: defaultAuthnContext,\n    authnContextComparison: 'exact',\n    identifierFormat: defaultIdentifierFormat,\n    nameIDPolicyTemplate: defaultNameIDTemplate,\n    authnContextTemplate: defaultAuthnContextTemplate,\n    authRequestTemplate: defaultAuthRequestTemplate,\n    logoutResponseTemplate: defaultLogoutResponseTemplate,\n    logoutRequestTemplate: defaultLogoutRequestTemplate,\n    metadataCertificateTemplate: defaultMetadataCertificateTemplate,\n    metadataTemplate: defaultMetadataTemplate,\n    channelsAttributeUpdate: settings.get(\"\".concat(service, \"_channels_update\")),\n    includePrivateChannelsInUpdate: settings.get(\"\".concat(service, \"_include_private_channels_update\"))\n  };\n  SAMLUtils.events.emit('loadConfigs', service, configs);\n  return configs;\n};\n\nconst configureSamlService = function (samlConfigs) {\n  let privateCert = null;\n  let privateKey = null;\n\n  if (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n    privateKey = samlConfigs.secret.privateKey;\n    privateCert = samlConfigs.secret.publicCert;\n  } else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n    SAMLUtils.error('SAML Service: You must specify both cert and key files.');\n  }\n\n  SAMLUtils.updateGlobalSettings(samlConfigs);\n  return {\n    provider: samlConfigs.clientConfig.provider,\n    entryPoint: samlConfigs.entryPoint,\n    idpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n    issuer: samlConfigs.issuer,\n    cert: samlConfigs.secret.cert,\n    privateCert,\n    privateKey,\n    customAuthnContext: samlConfigs.customAuthnContext,\n    authnContextComparison: samlConfigs.authnContextComparison,\n    defaultUserRole: samlConfigs.defaultUserRole,\n    allowedClockDrift: parseInt(samlConfigs.allowedClockDrift) || 0,\n    signatureValidationType: samlConfigs.signatureValidationType,\n    identifierFormat: samlConfigs.identifierFormat,\n    nameIDPolicyTemplate: samlConfigs.nameIDPolicyTemplate,\n    authnContextTemplate: samlConfigs.authnContextTemplate,\n    authRequestTemplate: samlConfigs.authRequestTemplate,\n    logoutResponseTemplate: samlConfigs.logoutResponseTemplate,\n    logoutRequestTemplate: samlConfigs.logoutRequestTemplate,\n    metadataCertificateTemplate: samlConfigs.metadataCertificateTemplate,\n    metadataTemplate: samlConfigs.metadataTemplate,\n    callbackUrl: Meteor.absoluteUrl(\"_saml/validate/\".concat(samlConfigs.clientConfig.provider))\n  };\n};\n\nconst loadSamlServiceProviders = function () {\n  const serviceName = 'saml';\n  const services = settings.getByRegexp(/^(SAML_Custom_)[a-z]+$/i);\n\n  if (!services) {\n    return SAMLUtils.setServiceProvidersList([]);\n  }\n\n  const providers = services.map(_ref => {\n    let [key, value] = _ref;\n\n    if (value === true) {\n      const samlConfigs = getSamlConfigs(key);\n      SAMLUtils.log(key);\n      ServiceConfiguration.configurations.upsert({\n        service: serviceName.toLowerCase()\n      }, {\n        $set: samlConfigs\n      });\n      return configureSamlService(samlConfigs);\n    }\n\n    ServiceConfiguration.configurations.remove({\n      service: serviceName.toLowerCase()\n    });\n    return false;\n  }).filter(e => e);\n  SAMLUtils.setServiceProvidersList(providers);\n};\n\nconst addSamlService = function (name) {\n  SystemLogger.warn(\"Adding \".concat(name, \" is deprecated\"));\n};\n\nconst addSettings = function (name) {\n  settingsRegistry.addGroup('SAML', function () {\n    this.with({\n      tab: 'SAML_Connection'\n    }, function () {\n      this.add(\"SAML_Custom_\".concat(name), false, {\n        type: 'boolean',\n        i18nLabel: 'Accounts_OAuth_Custom_Enable'\n      });\n      this.add(\"SAML_Custom_\".concat(name, \"_provider\"), 'provider-name', {\n        type: 'string',\n        i18nLabel: 'SAML_Custom_Provider'\n      });\n      this.add(\"SAML_Custom_\".concat(name, \"_entry_point\"), 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n        type: 'string',\n        i18nLabel: 'SAML_Custom_Entry_point'\n      });\n      this.add(\"SAML_Custom_\".concat(name, \"_idp_slo_redirect_url\"), 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n        type: 'string',\n        i18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL'\n      });\n      this.add(\"SAML_Custom_\".concat(name, \"_issuer\"), 'https://your-rocket-chat/_saml/metadata/provider-name', {\n        type: 'string',\n        i18nLabel: 'SAML_Custom_Issuer'\n      });\n      this.add(\"SAML_Custom_\".concat(name, \"_debug\"), false, {\n        type: 'boolean',\n        i18nLabel: 'SAML_Custom_Debug'\n      });\n      this.section('SAML_Section_2_Certificate', function () {\n        this.add(\"SAML_Custom_\".concat(name, \"_cert\"), '', {\n          type: 'string',\n          i18nLabel: 'SAML_Custom_Cert',\n          multiline: true,\n          secret: true\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_public_cert\"), '', {\n          type: 'string',\n          multiline: true,\n          i18nLabel: 'SAML_Custom_Public_Cert'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_signature_validation_type\"), 'All', {\n          type: 'select',\n          values: [{\n            key: 'Response',\n            i18nLabel: 'SAML_Custom_signature_validation_response'\n          }, {\n            key: 'Assertion',\n            i18nLabel: 'SAML_Custom_signature_validation_assertion'\n          }, {\n            key: 'Either',\n            i18nLabel: 'SAML_Custom_signature_validation_either'\n          }, {\n            key: 'All',\n            i18nLabel: 'SAML_Custom_signature_validation_all'\n          }],\n          i18nLabel: 'SAML_Custom_signature_validation_type',\n          i18nDescription: 'SAML_Custom_signature_validation_type_description'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_private_key\"), '', {\n          type: 'string',\n          multiline: true,\n          i18nLabel: 'SAML_Custom_Private_Key',\n          secret: true\n        });\n      });\n    });\n    this.with({\n      tab: 'SAML_General'\n    }, function () {\n      this.section('SAML_Section_1_User_Interface', function () {\n        this.add(\"SAML_Custom_\".concat(name, \"_button_label_text\"), 'SAML', {\n          type: 'string',\n          i18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_button_label_color\"), '#FFFFFF', {\n          type: 'string',\n          i18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_button_color\"), '#1d74f5', {\n          type: 'string',\n          i18nLabel: 'Accounts_OAuth_Custom_Button_Color'\n        });\n      });\n      this.section('SAML_Section_3_Behavior', function () {\n        // Settings to customize behavior\n        this.add(\"SAML_Custom_\".concat(name, \"_generate_username\"), false, {\n          type: 'boolean',\n          i18nLabel: 'SAML_Custom_Generate_Username'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_username_normalize\"), 'None', {\n          type: 'select',\n          values: [{\n            key: 'None',\n            i18nLabel: 'SAML_Custom_Username_Normalize_None'\n          }, {\n            key: 'Lowercase',\n            i18nLabel: 'SAML_Custom_Username_Normalize_Lowercase'\n          }],\n          i18nLabel: 'SAML_Custom_Username_Normalize'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_immutable_property\"), 'EMail', {\n          type: 'select',\n          values: [{\n            key: 'Username',\n            i18nLabel: 'SAML_Custom_Immutable_Property_Username'\n          }, {\n            key: 'EMail',\n            i18nLabel: 'SAML_Custom_Immutable_Property_EMail'\n          }],\n          i18nLabel: 'SAML_Custom_Immutable_Property'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_name_overwrite\"), false, {\n          type: 'boolean',\n          i18nLabel: 'SAML_Custom_name_overwrite'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_mail_overwrite\"), false, {\n          type: 'boolean',\n          i18nLabel: 'SAML_Custom_mail_overwrite'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_logout_behaviour\"), 'SAML', {\n          type: 'select',\n          values: [{\n            key: 'SAML',\n            i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session'\n          }, {\n            key: 'Local',\n            i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat'\n          }],\n          i18nLabel: 'SAML_Custom_Logout_Behaviour'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_channels_update\"), false, {\n          type: 'boolean',\n          i18nLabel: 'SAML_Custom_channels_update',\n          i18nDescription: 'SAML_Custom_channels_update_description'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_include_private_channels_update\"), false, {\n          type: 'boolean',\n          i18nLabel: 'SAML_Custom_include_private_channels_update',\n          i18nDescription: 'SAML_Custom_include_private_channels_update_description'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_default_user_role\"), 'user', {\n          type: 'string',\n          i18nLabel: 'SAML_Default_User_Role',\n          i18nDescription: 'SAML_Default_User_Role_Description'\n        });\n        this.add(\"SAML_Custom_\".concat(name, \"_allowed_clock_drift\"), false, {\n          type: 'int',\n          invalidValue: 0,\n          i18nLabel: 'SAML_Allowed_Clock_Drift',\n          i18nDescription: 'SAML_Allowed_Clock_Drift_Description'\n        });\n      });\n      this.section('SAML_Section_5_Mapping', function () {\n        // Data Mapping Settings\n        this.add(\"SAML_Custom_\".concat(name, \"_user_data_fieldmap\"), '{\"username\":\"username\", \"email\":\"email\", \"name\": \"cn\"}', {\n          type: 'string',\n          i18nLabel: 'SAML_Custom_user_data_fieldmap',\n          i18nDescription: 'SAML_Custom_user_data_fieldmap_description',\n          multiline: true\n        });\n      });\n    });\n    SAMLUtils.events.emit('addSettings', name);\n  });\n};","map":{"version":3,"sources":["app/meteor-accounts-saml/server/lib/settings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\nimport { SAMLUtils } from './Utils';\nimport {\n\tdefaultAuthnContextTemplate,\n\tdefaultAuthRequestTemplate,\n\tdefaultLogoutResponseTemplate,\n\tdefaultLogoutRequestTemplate,\n\tdefaultNameIDTemplate,\n\tdefaultIdentifierFormat,\n\tdefaultAuthnContext,\n\tdefaultMetadataTemplate,\n\tdefaultMetadataCertificateTemplate,\n} from './constants';\n\nexport const getSamlConfigs = function (service: string): Record<string, any> {\n\tconst configs = {\n\t\tbuttonLabelText: settings.get(`${service}_button_label_text`),\n\t\tbuttonLabelColor: settings.get(`${service}_button_label_color`),\n\t\tbuttonColor: settings.get(`${service}_button_color`),\n\t\tclientConfig: {\n\t\t\tprovider: settings.get(`${service}_provider`),\n\t\t},\n\t\tentryPoint: settings.get(`${service}_entry_point`),\n\t\tidpSLORedirectURL: settings.get(`${service}_idp_slo_redirect_url`),\n\t\tusernameNormalize: settings.get(`${service}_username_normalize`),\n\t\timmutableProperty: settings.get(`${service}_immutable_property`),\n\t\tgenerateUsername: settings.get(`${service}_generate_username`),\n\t\tdebug: settings.get(`${service}_debug`),\n\t\tnameOverwrite: settings.get(`${service}_name_overwrite`),\n\t\tmailOverwrite: settings.get(`${service}_mail_overwrite`),\n\t\tissuer: settings.get(`${service}_issuer`),\n\t\tlogoutBehaviour: settings.get(`${service}_logout_behaviour`),\n\t\tdefaultUserRole: settings.get(`${service}_default_user_role`),\n\t\tsecret: {\n\t\t\tprivateKey: settings.get(`${service}_private_key`),\n\t\t\tpublicCert: settings.get(`${service}_public_cert`),\n\t\t\t// People often overlook the instruction to remove the header and footer of the certificate on this specific setting, so let's do it for them.\n\t\t\tcert: SAMLUtils.normalizeCert((settings.get(`${service}_cert`) as string) || ''),\n\t\t},\n\t\tsignatureValidationType: settings.get(`${service}_signature_validation_type`),\n\t\tuserDataFieldMap: settings.get(`${service}_user_data_fieldmap`),\n\t\tallowedClockDrift: settings.get(`${service}_allowed_clock_drift`),\n\t\tcustomAuthnContext: defaultAuthnContext,\n\t\tauthnContextComparison: 'exact',\n\t\tidentifierFormat: defaultIdentifierFormat,\n\t\tnameIDPolicyTemplate: defaultNameIDTemplate,\n\t\tauthnContextTemplate: defaultAuthnContextTemplate,\n\t\tauthRequestTemplate: defaultAuthRequestTemplate,\n\t\tlogoutResponseTemplate: defaultLogoutResponseTemplate,\n\t\tlogoutRequestTemplate: defaultLogoutRequestTemplate,\n\t\tmetadataCertificateTemplate: defaultMetadataCertificateTemplate,\n\t\tmetadataTemplate: defaultMetadataTemplate,\n\t\tchannelsAttributeUpdate: settings.get(`${service}_channels_update`),\n\t\tincludePrivateChannelsInUpdate: settings.get(`${service}_include_private_channels_update`),\n\t};\n\n\tSAMLUtils.events.emit('loadConfigs', service, configs);\n\treturn configs;\n};\n\nexport const configureSamlService = function (samlConfigs: Record<string, any>): IServiceProviderOptions {\n\tlet privateCert = null;\n\tlet privateKey = null;\n\n\tif (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n\t\tprivateKey = samlConfigs.secret.privateKey;\n\t\tprivateCert = samlConfigs.secret.publicCert;\n\t} else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n\t\tSAMLUtils.error('SAML Service: You must specify both cert and key files.');\n\t}\n\n\tSAMLUtils.updateGlobalSettings(samlConfigs);\n\n\treturn {\n\t\tprovider: samlConfigs.clientConfig.provider,\n\t\tentryPoint: samlConfigs.entryPoint,\n\t\tidpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n\t\tissuer: samlConfigs.issuer,\n\t\tcert: samlConfigs.secret.cert,\n\t\tprivateCert,\n\t\tprivateKey,\n\t\tcustomAuthnContext: samlConfigs.customAuthnContext,\n\t\tauthnContextComparison: samlConfigs.authnContextComparison,\n\t\tdefaultUserRole: samlConfigs.defaultUserRole,\n\t\tallowedClockDrift: parseInt(samlConfigs.allowedClockDrift) || 0,\n\t\tsignatureValidationType: samlConfigs.signatureValidationType,\n\t\tidentifierFormat: samlConfigs.identifierFormat,\n\t\tnameIDPolicyTemplate: samlConfigs.nameIDPolicyTemplate,\n\t\tauthnContextTemplate: samlConfigs.authnContextTemplate,\n\t\tauthRequestTemplate: samlConfigs.authRequestTemplate,\n\t\tlogoutResponseTemplate: samlConfigs.logoutResponseTemplate,\n\t\tlogoutRequestTemplate: samlConfigs.logoutRequestTemplate,\n\t\tmetadataCertificateTemplate: samlConfigs.metadataCertificateTemplate,\n\t\tmetadataTemplate: samlConfigs.metadataTemplate,\n\t\tcallbackUrl: Meteor.absoluteUrl(`_saml/validate/${samlConfigs.clientConfig.provider}`),\n\t};\n};\n\nexport const loadSamlServiceProviders = function (): void {\n\tconst serviceName = 'saml';\n\tconst services = settings.getByRegexp(/^(SAML_Custom_)[a-z]+$/i);\n\n\tif (!services) {\n\t\treturn SAMLUtils.setServiceProvidersList([]);\n\t}\n\n\tconst providers = services\n\t\t.map(([key, value]) => {\n\t\t\tif (value === true) {\n\t\t\t\tconst samlConfigs = getSamlConfigs(key);\n\t\t\t\tSAMLUtils.log(key);\n\t\t\t\tServiceConfiguration.configurations.upsert(\n\t\t\t\t\t{\n\t\t\t\t\t\tservice: serviceName.toLowerCase(),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t$set: samlConfigs,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\treturn configureSamlService(samlConfigs);\n\t\t\t}\n\t\t\tServiceConfiguration.configurations.remove({\n\t\t\t\tservice: serviceName.toLowerCase(),\n\t\t\t});\n\t\t\treturn false;\n\t\t})\n\t\t.filter((e) => e) as IServiceProviderOptions[];\n\n\tSAMLUtils.setServiceProvidersList(providers);\n};\n\nexport const addSamlService = function (name: string): void {\n\tSystemLogger.warn(`Adding ${name} is deprecated`);\n};\n\nexport const addSettings = function (name: string): void {\n\tsettingsRegistry.addGroup('SAML', function () {\n\t\tthis.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_Connection',\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tthis.add(`SAML_Custom_${name}`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Enable',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_provider`, 'provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Provider',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_entry_point`, 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Entry_point',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_idp_slo_redirect_url`, 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_issuer`, 'https://your-rocket-chat/_saml/metadata/provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Issuer',\n\t\t\t\t});\n\t\t\t\tthis.add(`SAML_Custom_${name}_debug`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Debug',\n\t\t\t\t});\n\n\t\t\t\tthis.section('SAML_Section_2_Certificate', function () {\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Cert',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_public_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Public_Cert',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_signature_validation_type`, 'All', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Response', i18nLabel: 'SAML_Custom_signature_validation_response' },\n\t\t\t\t\t\t\t{ key: 'Assertion', i18nLabel: 'SAML_Custom_signature_validation_assertion' },\n\t\t\t\t\t\t\t{ key: 'Either', i18nLabel: 'SAML_Custom_signature_validation_either' },\n\t\t\t\t\t\t\t{ key: 'All', i18nLabel: 'SAML_Custom_signature_validation_all' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_signature_validation_type',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_signature_validation_type_description',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_private_key`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Private_Key',\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tthis.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_General',\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tthis.section('SAML_Section_1_User_Interface', function () {\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_button_label_text`, 'SAML', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_button_label_color`, '#FFFFFF', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_button_color`, '#1d74f5', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Color',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.section('SAML_Section_3_Behavior', function () {\n\t\t\t\t\t// Settings to customize behavior\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_generate_username`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Generate_Username',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_username_normalize`, 'None', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'None', i18nLabel: 'SAML_Custom_Username_Normalize_None' },\n\t\t\t\t\t\t\t{ key: 'Lowercase', i18nLabel: 'SAML_Custom_Username_Normalize_Lowercase' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Username_Normalize',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_immutable_property`, 'EMail', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Username', i18nLabel: 'SAML_Custom_Immutable_Property_Username' },\n\t\t\t\t\t\t\t{ key: 'EMail', i18nLabel: 'SAML_Custom_Immutable_Property_EMail' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Immutable_Property',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_name_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_name_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_mail_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_mail_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_logout_behaviour`, 'SAML', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'SAML', i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session' },\n\t\t\t\t\t\t\t{ key: 'Local', i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Logout_Behaviour',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_channels_update_description',\n\t\t\t\t\t});\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_include_private_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_include_private_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_include_private_channels_update_description',\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_default_user_role`, 'user', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Default_User_Role',\n\t\t\t\t\t\ti18nDescription: 'SAML_Default_User_Role_Description',\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_allowed_clock_drift`, false, {\n\t\t\t\t\t\ttype: 'int',\n\t\t\t\t\t\tinvalidValue: 0,\n\t\t\t\t\t\ti18nLabel: 'SAML_Allowed_Clock_Drift',\n\t\t\t\t\t\ti18nDescription: 'SAML_Allowed_Clock_Drift_Description',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.section('SAML_Section_5_Mapping', function () {\n\t\t\t\t\t// Data Mapping Settings\n\t\t\t\t\tthis.add(`SAML_Custom_${name}_user_data_fieldmap`, '{\"username\":\"username\", \"email\":\"email\", \"name\": \"cn\"}', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_user_data_fieldmap',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_user_data_fieldmap_description',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tSAMLUtils.events.emit('addSettings', name);\n\t});\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"31d75af1031fb846688c0f1fac3c72dddff407d0"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/units.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/units.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/units.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/units.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/units.ts"],"names":[],"mappings":"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","sourcesContent":["import { API } from '../../../../../app/api/server';\nimport { deprecationWarning } from '../../../../../app/api/server/helpers/deprecationWarning';\nimport { findUnits, findUnitById, findUnitMonitors } from './lib/units';\nimport { LivechatEnterprise } from '../lib/LivechatEnterprise';\n\nAPI.v1.addRoute(\n\t'livechat/units.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst { text } = this.queryParams;\n\n\t\t\tconst response = await findUnits({\n\t\t\t\tuserId: this.userId,\n\t\t\t\ttext,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(deprecationWarning({ response, endpoint: 'livechat/units.list' }));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units.getOne',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { unitId } = this.queryParams;\n\n\t\t\tif (!unitId) {\n\t\t\t\treturn API.v1.failure('Missing \"unitId\" query parameter');\n\t\t\t}\n\n\t\t\tconst unit = await findUnitById({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tunitId,\n\t\t\t});\n\n\t\t\treturn API.v1.success(deprecationWarning({ response: unit, endpoint: 'livechat/units.getOne' }));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/unitMonitors.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { unitId } = this.queryParams;\n\n\t\t\tif (!unitId) {\n\t\t\t\treturn API.v1.failure('The \"unitId\" parameter is required');\n\t\t\t}\n\t\t\treturn API.v1.success({\n\t\t\t\tmonitors: await findUnitMonitors({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tunitId,\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst { text } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findUnits({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\ttext,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\treturn LivechatEnterprise.saveUnit(null, unitData, unitMonitors, unitDepartments);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:id',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { id } = this.urlParams;\n\t\t\tconst unit = await findUnitById({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tunitId: id,\n\t\t\t});\n\n\t\t\treturn API.v1.success(unit);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn LivechatEnterprise.saveUnit(id, unitData, unitMonitors, unitDepartments);\n\t\t},\n\t\tasync delete() {\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn LivechatEnterprise.removeUnit(id);\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/units.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/units.ts"}},"code":"let API;\nmodule.link(\"../../../../../app/api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 0);\nlet deprecationWarning;\nmodule.link(\"../../../../../app/api/server/helpers/deprecationWarning\", {\n  deprecationWarning(v) {\n    deprecationWarning = v;\n  }\n\n}, 1);\nlet findUnits, findUnitById, findUnitMonitors;\nmodule.link(\"./lib/units\", {\n  findUnits(v) {\n    findUnits = v;\n  },\n\n  findUnitById(v) {\n    findUnitById = v;\n  },\n\n  findUnitMonitors(v) {\n    findUnitMonitors = v;\n  }\n\n}, 2);\nlet LivechatEnterprise;\nmodule.link(\"../lib/LivechatEnterprise\", {\n  LivechatEnterprise(v) {\n    LivechatEnterprise = v;\n  }\n\n}, 3);\nAPI.v1.addRoute('livechat/units.list', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        offset,\n        count\n      } = this.getPaginationItems();\n      const {\n        sort\n      } = this.parseJsonQuery();\n      const {\n        text\n      } = this.queryParams;\n      const response = Promise.await(findUnits({\n        userId: this.userId,\n        text,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      }));\n      return API.v1.success(deprecationWarning({\n        response,\n        endpoint: 'livechat/units.list'\n      }));\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/units.getOne', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        unitId\n      } = this.queryParams;\n\n      if (!unitId) {\n        return API.v1.failure('Missing \"unitId\" query parameter');\n      }\n\n      const unit = Promise.await(findUnitById({\n        userId: this.userId,\n        unitId\n      }));\n      return API.v1.success(deprecationWarning({\n        response: unit,\n        endpoint: 'livechat/units.getOne'\n      }));\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/unitMonitors.list', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        unitId\n      } = this.queryParams;\n\n      if (!unitId) {\n        return API.v1.failure('The \"unitId\" parameter is required');\n      }\n\n      return API.v1.success({\n        monitors: Promise.await(findUnitMonitors({\n          userId: this.userId,\n          unitId\n        }))\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/units', {\n  authRequired: true,\n  permissionsRequired: ['manage-livechat-units']\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        offset,\n        count\n      } = this.getPaginationItems();\n      const {\n        sort\n      } = this.parseJsonQuery();\n      const {\n        text\n      } = this.queryParams;\n      return API.v1.success(Promise.await(findUnits({\n        userId: this.userId,\n        text,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      })));\n    });\n  },\n\n  post() {\n    return Promise.asyncApply(() => {\n      const {\n        unitData,\n        unitMonitors,\n        unitDepartments\n      } = this.bodyParams;\n      return LivechatEnterprise.saveUnit(null, unitData, unitMonitors, unitDepartments);\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/units/:id', {\n  authRequired: true,\n  permissionsRequired: ['manage-livechat-units']\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        id\n      } = this.urlParams;\n      const unit = Promise.await(findUnitById({\n        userId: this.userId,\n        unitId: id\n      }));\n      return API.v1.success(unit);\n    });\n  },\n\n  post() {\n    return Promise.asyncApply(() => {\n      const {\n        unitData,\n        unitMonitors,\n        unitDepartments\n      } = this.bodyParams;\n      const {\n        id\n      } = this.urlParams;\n      return LivechatEnterprise.saveUnit(id, unitData, unitMonitors, unitDepartments);\n    });\n  },\n\n  delete() {\n    return Promise.asyncApply(() => {\n      const {\n        id\n      } = this.urlParams;\n      return LivechatEnterprise.removeUnit(id);\n    });\n  }\n\n});","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/api/units.ts"],"names":[],"mappings":"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","sourcesContent":["import { API } from '../../../../../app/api/server';\nimport { deprecationWarning } from '../../../../../app/api/server/helpers/deprecationWarning';\nimport { findUnits, findUnitById, findUnitMonitors } from './lib/units';\nimport { LivechatEnterprise } from '../lib/LivechatEnterprise';\n\nAPI.v1.addRoute(\n\t'livechat/units.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst { text } = this.queryParams;\n\n\t\t\tconst response = await findUnits({\n\t\t\t\tuserId: this.userId,\n\t\t\t\ttext,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(deprecationWarning({ response, endpoint: 'livechat/units.list' }));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units.getOne',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { unitId } = this.queryParams;\n\n\t\t\tif (!unitId) {\n\t\t\t\treturn API.v1.failure('Missing \"unitId\" query parameter');\n\t\t\t}\n\n\t\t\tconst unit = await findUnitById({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tunitId,\n\t\t\t});\n\n\t\t\treturn API.v1.success(deprecationWarning({ response: unit, endpoint: 'livechat/units.getOne' }));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/unitMonitors.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { unitId } = this.queryParams;\n\n\t\t\tif (!unitId) {\n\t\t\t\treturn API.v1.failure('The \"unitId\" parameter is required');\n\t\t\t}\n\t\t\treturn API.v1.success({\n\t\t\t\tmonitors: await findUnitMonitors({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tunitId,\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst { text } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findUnits({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\ttext,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\treturn LivechatEnterprise.saveUnit(null, unitData, unitMonitors, unitDepartments);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/units/:id',\n\t{ authRequired: true, permissionsRequired: ['manage-livechat-units'] },\n\t{\n\t\tasync get() {\n\t\t\tconst { id } = this.urlParams;\n\t\t\tconst unit = await findUnitById({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tunitId: id,\n\t\t\t});\n\n\t\t\treturn API.v1.success(unit);\n\t\t},\n\t\tasync post() {\n\t\t\tconst { unitData, unitMonitors, unitDepartments } = this.bodyParams;\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn LivechatEnterprise.saveUnit(id, unitData, unitMonitors, unitDepartments);\n\t\t},\n\t\tasync delete() {\n\t\t\tconst { id } = this.urlParams;\n\n\t\t\treturn LivechatEnterprise.removeUnit(id);\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"8fa1eb8cfdeb71f6da71e840cfac9966216de4bf"}

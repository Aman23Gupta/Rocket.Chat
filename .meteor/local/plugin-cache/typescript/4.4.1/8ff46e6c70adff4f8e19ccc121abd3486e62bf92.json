{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/cloud.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/cloud.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/cloud.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/cloud.ts","sourceRoot":"","sources":["app/api/server/v1/cloud.ts"],"names":[],"mappings":"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","sourcesContent":["import { check } from 'meteor/check';\n\nimport { API } from '../api';\nimport { hasRole, hasPermission } from '../../../authorization/server';\nimport { saveRegistrationData } from '../../../cloud/server/functions/saveRegistrationData';\nimport { retrieveRegistrationStatus } from '../../../cloud/server/functions/retrieveRegistrationStatus';\nimport { startRegisterWorkspaceSetupWizard } from '../../../cloud/server/functions/startRegisterWorkspaceSetupWizard';\nimport { getConfirmationPoll } from '../../../cloud/server/functions/getConfirmationPoll';\n\nAPI.v1.addRoute(\n\t'cloud.manualRegister',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tcloudBlob: String,\n\t\t\t});\n\n\t\t\tif (!hasRole(this.userId, 'admin')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst registrationInfo = retrieveRegistrationStatus();\n\n\t\t\tif (registrationInfo.workspaceRegistered) {\n\t\t\t\treturn API.v1.failure('Workspace is already registered');\n\t\t\t}\n\n\t\t\tconst settingsData = JSON.parse(Buffer.from(this.bodyParams.cloudBlob, 'base64').toString());\n\n\t\t\tawait saveRegistrationData(settingsData);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'cloud.createRegistrationIntent',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tresend: Boolean,\n\t\t\t\temail: String,\n\t\t\t});\n\n\t\t\tif (!hasPermission(this.userId, 'manage-cloud')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst intentData = await startRegisterWorkspaceSetupWizard(this.bodyParams.resend, this.bodyParams.email);\n\n\t\t\tif (intentData) {\n\t\t\t\treturn API.v1.success({ intentData });\n\t\t\t}\n\n\t\t\treturn API.v1.failure('Invalid query');\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'cloud.confirmationPoll',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { deviceCode } = this.queryParams;\n\t\t\tcheck(this.queryParams, {\n\t\t\t\tdeviceCode: String,\n\t\t\t});\n\n\t\t\tif (!hasPermission(this.userId, 'manage-cloud')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tif (!deviceCode) {\n\t\t\t\treturn API.v1.failure('Invalid query');\n\t\t\t}\n\n\t\t\tconst pollData = await getConfirmationPoll(deviceCode);\n\t\t\tif (pollData) {\n\t\t\t\tif ('successful' in pollData && pollData.successful) {\n\t\t\t\t\tPromise.await(saveRegistrationData(pollData.payload));\n\t\t\t\t}\n\t\t\t\treturn API.v1.success({ pollData });\n\t\t\t}\n\n\t\t\treturn API.v1.failure('Invalid query');\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/cloud.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/cloud.ts"}},"code":"let check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nlet hasRole, hasPermission;\nmodule.link(\"../../../authorization/server\", {\n  hasRole(v) {\n    hasRole = v;\n  },\n\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 2);\nlet saveRegistrationData;\nmodule.link(\"../../../cloud/server/functions/saveRegistrationData\", {\n  saveRegistrationData(v) {\n    saveRegistrationData = v;\n  }\n\n}, 3);\nlet retrieveRegistrationStatus;\nmodule.link(\"../../../cloud/server/functions/retrieveRegistrationStatus\", {\n  retrieveRegistrationStatus(v) {\n    retrieveRegistrationStatus = v;\n  }\n\n}, 4);\nlet startRegisterWorkspaceSetupWizard;\nmodule.link(\"../../../cloud/server/functions/startRegisterWorkspaceSetupWizard\", {\n  startRegisterWorkspaceSetupWizard(v) {\n    startRegisterWorkspaceSetupWizard = v;\n  }\n\n}, 5);\nlet getConfirmationPoll;\nmodule.link(\"../../../cloud/server/functions/getConfirmationPoll\", {\n  getConfirmationPoll(v) {\n    getConfirmationPoll = v;\n  }\n\n}, 6);\nAPI.v1.addRoute('cloud.manualRegister', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      check(this.bodyParams, {\n        cloudBlob: String\n      });\n\n      if (!hasRole(this.userId, 'admin')) {\n        return API.v1.unauthorized();\n      }\n\n      const registrationInfo = retrieveRegistrationStatus();\n\n      if (registrationInfo.workspaceRegistered) {\n        return API.v1.failure('Workspace is already registered');\n      }\n\n      const settingsData = JSON.parse(Buffer.from(this.bodyParams.cloudBlob, 'base64').toString());\n      Promise.await(saveRegistrationData(settingsData));\n      return API.v1.success();\n    });\n  }\n\n});\nAPI.v1.addRoute('cloud.createRegistrationIntent', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      check(this.bodyParams, {\n        resend: Boolean,\n        email: String\n      });\n\n      if (!hasPermission(this.userId, 'manage-cloud')) {\n        return API.v1.unauthorized();\n      }\n\n      const intentData = Promise.await(startRegisterWorkspaceSetupWizard(this.bodyParams.resend, this.bodyParams.email));\n\n      if (intentData) {\n        return API.v1.success({\n          intentData\n        });\n      }\n\n      return API.v1.failure('Invalid query');\n    });\n  }\n\n});\nAPI.v1.addRoute('cloud.confirmationPoll', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        deviceCode\n      } = this.queryParams;\n      check(this.queryParams, {\n        deviceCode: String\n      });\n\n      if (!hasPermission(this.userId, 'manage-cloud')) {\n        return API.v1.unauthorized();\n      }\n\n      if (!deviceCode) {\n        return API.v1.failure('Invalid query');\n      }\n\n      const pollData = Promise.await(getConfirmationPoll(deviceCode));\n\n      if (pollData) {\n        if ('successful' in pollData && pollData.successful) {\n          Promise.await(saveRegistrationData(pollData.payload));\n        }\n\n        return API.v1.success({\n          pollData\n        });\n      }\n\n      return API.v1.failure('Invalid query');\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/cloud.ts"],"names":[],"mappings":"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","sourcesContent":["import { check } from 'meteor/check';\n\nimport { API } from '../api';\nimport { hasRole, hasPermission } from '../../../authorization/server';\nimport { saveRegistrationData } from '../../../cloud/server/functions/saveRegistrationData';\nimport { retrieveRegistrationStatus } from '../../../cloud/server/functions/retrieveRegistrationStatus';\nimport { startRegisterWorkspaceSetupWizard } from '../../../cloud/server/functions/startRegisterWorkspaceSetupWizard';\nimport { getConfirmationPoll } from '../../../cloud/server/functions/getConfirmationPoll';\n\nAPI.v1.addRoute(\n\t'cloud.manualRegister',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tcloudBlob: String,\n\t\t\t});\n\n\t\t\tif (!hasRole(this.userId, 'admin')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst registrationInfo = retrieveRegistrationStatus();\n\n\t\t\tif (registrationInfo.workspaceRegistered) {\n\t\t\t\treturn API.v1.failure('Workspace is already registered');\n\t\t\t}\n\n\t\t\tconst settingsData = JSON.parse(Buffer.from(this.bodyParams.cloudBlob, 'base64').toString());\n\n\t\t\tawait saveRegistrationData(settingsData);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'cloud.createRegistrationIntent',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tresend: Boolean,\n\t\t\t\temail: String,\n\t\t\t});\n\n\t\t\tif (!hasPermission(this.userId, 'manage-cloud')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst intentData = await startRegisterWorkspaceSetupWizard(this.bodyParams.resend, this.bodyParams.email);\n\n\t\t\tif (intentData) {\n\t\t\t\treturn API.v1.success({ intentData });\n\t\t\t}\n\n\t\t\treturn API.v1.failure('Invalid query');\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'cloud.confirmationPoll',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { deviceCode } = this.queryParams;\n\t\t\tcheck(this.queryParams, {\n\t\t\t\tdeviceCode: String,\n\t\t\t});\n\n\t\t\tif (!hasPermission(this.userId, 'manage-cloud')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tif (!deviceCode) {\n\t\t\t\treturn API.v1.failure('Invalid query');\n\t\t\t}\n\n\t\t\tconst pollData = await getConfirmationPoll(deviceCode);\n\t\t\tif (pollData) {\n\t\t\t\tif ('successful' in pollData && pollData.successful) {\n\t\t\t\t\tPromise.await(saveRegistrationData(pollData.payload));\n\t\t\t\t}\n\t\t\t\treturn API.v1.success({ pollData });\n\t\t\t}\n\n\t\t\treturn API.v1.failure('Invalid query');\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"8ff46e6c70adff4f8e19ccc121abd3486e62bf92"}

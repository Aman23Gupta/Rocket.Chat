{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatVisitors.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/LivechatVisitors.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatVisitors.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/LivechatVisitors.ts","sourceRoot":"","sources":["app/models/server/raw/LivechatVisitors.ts"],"names":[],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { AggregationCursor, Cursor, FilterQuery, FindOneOptions, WithoutProjection } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ILivechatVisitor } from '../../../../definition/ILivechatVisitor';\n\nexport class LivechatVisitorsRaw extends BaseRaw<ILivechatVisitor> {\n\tfindOneById(_id: string, options: WithoutProjection<FindOneOptions<ILivechatVisitor>>): Promise<ILivechatVisitor | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tgetVisitorByToken(token: string, options: WithoutProjection<FindOneOptions<ILivechatVisitor>>): Promise<ILivechatVisitor | null> {\n\t\tconst query = {\n\t\t\ttoken,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tgetVisitorsBetweenDate({ start, end, department }: { start: Date; end: Date; department: string }): Cursor<ILivechatVisitor> {\n\t\tconst query = {\n\t\t\t_updatedAt: {\n\t\t\t\t$gte: new Date(start),\n\t\t\t\t$lt: new Date(end),\n\t\t\t},\n\t\t\t...(department && department !== 'undefined' && { department }),\n\t\t};\n\n\t\treturn this.find(query, { projection: { _id: 1 } });\n\t}\n\n\tfindByNameRegexWithExceptionsAndConditions<P = ILivechatVisitor>(\n\t\tsearchTerm: string,\n\t\texceptions: string[] = [],\n\t\tconditions: FilterQuery<ILivechatVisitor> = {},\n\t\toptions: FindOneOptions<P extends ILivechatVisitor ? ILivechatVisitor : P> = {},\n\t): AggregationCursor<\n\t\tP & {\n\t\t\tcustom_name: string;\n\t\t}\n\t> {\n\t\tif (!Array.isArray(exceptions)) {\n\t\t\texceptions = [exceptions];\n\t\t}\n\n\t\tconst nameRegex = new RegExp(`^${escapeRegExp(searchTerm).trim()}`, 'i');\n\n\t\tconst match = {\n\t\t\t$match: {\n\t\t\t\tname: nameRegex,\n\t\t\t\t_id: {\n\t\t\t\t\t$nin: exceptions,\n\t\t\t\t},\n\t\t\t\t...conditions,\n\t\t\t},\n\t\t};\n\n\t\tconst { projection, sort, skip, limit } = options;\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\t// TODO: move this logic to client\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\t\t\tcustom_name: { $concat: ['$username', ' - ', '$name'] },\n\t\t\t\t...projection,\n\t\t\t},\n\t\t};\n\n\t\tconst order = { $sort: sort || { name: 1 } };\n\t\tconst params: Record<string, unknown>[] = [match, order, skip && { $skip: skip }, limit && { $limit: limit }, project].filter(\n\t\t\tBoolean,\n\t\t) as Record<string, unknown>[];\n\n\t\treturn this.col.aggregate(params);\n\t}\n\n\t/**\n\t * Find visitors by their email or phone or username or name\n\t * @return [{object}] List of Visitors from db\n\t */\n\tfindVisitorsByEmailOrPhoneOrNameOrUsername(\n\t\t_emailOrPhoneOrNameOrUsername: string,\n\t\toptions: FindOneOptions<ILivechatVisitor>,\n\t): Cursor<ILivechatVisitor> {\n\t\tconst filter = new RegExp(_emailOrPhoneOrNameOrUsername, 'i');\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t'visitorEmails.address': filter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'phone.phoneNumber': _emailOrPhoneOrNameOrUsername,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: filter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tusername: filter,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatVisitors.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/LivechatVisitors.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  LivechatVisitorsRaw: () => LivechatVisitorsRaw\n});\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 0);\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 1);\n\nclass LivechatVisitorsRaw extends BaseRaw {\n  findOneById(_id, options) {\n    const query = {\n      _id\n    };\n    return this.findOne(query, options);\n  }\n\n  getVisitorByToken(token, options) {\n    const query = {\n      token\n    };\n    return this.findOne(query, options);\n  }\n\n  getVisitorsBetweenDate(_ref) {\n    let {\n      start,\n      end,\n      department\n    } = _ref;\n\n    const query = _objectSpread({\n      _updatedAt: {\n        $gte: new Date(start),\n        $lt: new Date(end)\n      }\n    }, department && department !== 'undefined' && {\n      department\n    });\n\n    return this.find(query, {\n      projection: {\n        _id: 1\n      }\n    });\n  }\n\n  findByNameRegexWithExceptionsAndConditions(searchTerm) {\n    let exceptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let conditions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    if (!Array.isArray(exceptions)) {\n      exceptions = [exceptions];\n    }\n\n    const nameRegex = new RegExp(\"^\".concat(escapeRegExp(searchTerm).trim()), 'i');\n    const match = {\n      $match: _objectSpread({\n        name: nameRegex,\n        _id: {\n          $nin: exceptions\n        }\n      }, conditions)\n    };\n    const {\n      projection,\n      sort,\n      skip,\n      limit\n    } = options;\n    const project = {\n      $project: _objectSpread({\n        // TODO: move this logic to client\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        custom_name: {\n          $concat: ['$username', ' - ', '$name']\n        }\n      }, projection)\n    };\n    const order = {\n      $sort: sort || {\n        name: 1\n      }\n    };\n    const params = [match, order, skip && {\n      $skip: skip\n    }, limit && {\n      $limit: limit\n    }, project].filter(Boolean);\n    return this.col.aggregate(params);\n  }\n  /**\n   * Find visitors by their email or phone or username or name\n   * @return [{object}] List of Visitors from db\n   */\n\n\n  findVisitorsByEmailOrPhoneOrNameOrUsername(_emailOrPhoneOrNameOrUsername, options) {\n    const filter = new RegExp(_emailOrPhoneOrNameOrUsername, 'i');\n    const query = {\n      $or: [{\n        'visitorEmails.address': filter\n      }, {\n        'phone.phoneNumber': _emailOrPhoneOrNameOrUsername\n      }, {\n        name: filter\n      }, {\n        username: filter\n      }]\n    };\n    return this.find(query, options);\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/LivechatVisitors.ts"],"names":[],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { AggregationCursor, Cursor, FilterQuery, FindOneOptions, WithoutProjection } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ILivechatVisitor } from '../../../../definition/ILivechatVisitor';\n\nexport class LivechatVisitorsRaw extends BaseRaw<ILivechatVisitor> {\n\tfindOneById(_id: string, options: WithoutProjection<FindOneOptions<ILivechatVisitor>>): Promise<ILivechatVisitor | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tgetVisitorByToken(token: string, options: WithoutProjection<FindOneOptions<ILivechatVisitor>>): Promise<ILivechatVisitor | null> {\n\t\tconst query = {\n\t\t\ttoken,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tgetVisitorsBetweenDate({ start, end, department }: { start: Date; end: Date; department: string }): Cursor<ILivechatVisitor> {\n\t\tconst query = {\n\t\t\t_updatedAt: {\n\t\t\t\t$gte: new Date(start),\n\t\t\t\t$lt: new Date(end),\n\t\t\t},\n\t\t\t...(department && department !== 'undefined' && { department }),\n\t\t};\n\n\t\treturn this.find(query, { projection: { _id: 1 } });\n\t}\n\n\tfindByNameRegexWithExceptionsAndConditions<P = ILivechatVisitor>(\n\t\tsearchTerm: string,\n\t\texceptions: string[] = [],\n\t\tconditions: FilterQuery<ILivechatVisitor> = {},\n\t\toptions: FindOneOptions<P extends ILivechatVisitor ? ILivechatVisitor : P> = {},\n\t): AggregationCursor<\n\t\tP & {\n\t\t\tcustom_name: string;\n\t\t}\n\t> {\n\t\tif (!Array.isArray(exceptions)) {\n\t\t\texceptions = [exceptions];\n\t\t}\n\n\t\tconst nameRegex = new RegExp(`^${escapeRegExp(searchTerm).trim()}`, 'i');\n\n\t\tconst match = {\n\t\t\t$match: {\n\t\t\t\tname: nameRegex,\n\t\t\t\t_id: {\n\t\t\t\t\t$nin: exceptions,\n\t\t\t\t},\n\t\t\t\t...conditions,\n\t\t\t},\n\t\t};\n\n\t\tconst { projection, sort, skip, limit } = options;\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\t// TODO: move this logic to client\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\t\t\tcustom_name: { $concat: ['$username', ' - ', '$name'] },\n\t\t\t\t...projection,\n\t\t\t},\n\t\t};\n\n\t\tconst order = { $sort: sort || { name: 1 } };\n\t\tconst params: Record<string, unknown>[] = [match, order, skip && { $skip: skip }, limit && { $limit: limit }, project].filter(\n\t\t\tBoolean,\n\t\t) as Record<string, unknown>[];\n\n\t\treturn this.col.aggregate(params);\n\t}\n\n\t/**\n\t * Find visitors by their email or phone or username or name\n\t * @return [{object}] List of Visitors from db\n\t */\n\tfindVisitorsByEmailOrPhoneOrNameOrUsername(\n\t\t_emailOrPhoneOrNameOrUsername: string,\n\t\toptions: FindOneOptions<ILivechatVisitor>,\n\t): Cursor<ILivechatVisitor> {\n\t\tconst filter = new RegExp(_emailOrPhoneOrNameOrUsername, 'i');\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t'visitorEmails.address': filter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'phone.phoneNumber': _emailOrPhoneOrNameOrUsername,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: filter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tusername: filter,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"28e7e8072ee6e89f710d8fbe77d7cda2d44a9f1b"}

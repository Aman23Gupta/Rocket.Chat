{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/FederationServers.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/FederationServers.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/FederationServers.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/FederationServers.ts","sourceRoot":"","sources":["app/models/server/raw/FederationServers.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,OAAO,EAAE,OAAO,EAAsB,MAAM,WAAW,CAAC;AAExD,MAAM,OAAO,oBAAqB,SAAQ,OAA0B;IACzD,OAAO,GAAyB,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEnE,UAAU,CAAC,MAAc;QACxB,OAAO,IAAI,CAAC,SAAS,CACpB,EAAE,MAAM,EAAE,EACV;YACC,YAAY,EAAE;gBACb,MAAM;aACN;SACD,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,CAChB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,cAAc;QACnB,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,4BAA4B,EAAE,CAAC;QAE3D,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,OAAO,EAAE;YACnC,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC9B;QAED,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IACtD,CAAC;CACD","sourcesContent":["import { UpdateWriteOpResult } from 'mongodb';\n\nimport { Users } from './index';\nimport { IFederationServer } from '../../../../definition/Federation';\nimport { BaseRaw, IndexSpecification } from './BaseRaw';\n\nexport class FederationServersRaw extends BaseRaw<IFederationServer> {\n\tprotected indexes: IndexSpecification[] = [{ key: { domain: 1 } }];\n\n\tsaveDomain(domain: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tasync refreshServers(): Promise<void> {\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/FederationServers.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/FederationServers.ts"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nmodule.export({\n  FederationServersRaw: () => FederationServersRaw\n});\nlet Users;\nmodule.link(\"./index\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 0);\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 1);\n\nclass FederationServersRaw extends BaseRaw {\n  constructor() {\n    super(...arguments);\n    this.indexes = [{\n      key: {\n        domain: 1\n      }\n    }];\n  }\n\n  saveDomain(domain) {\n    return this.updateOne({\n      domain\n    }, {\n      $setOnInsert: {\n        domain\n      }\n    }, {\n      upsert: true\n    });\n  }\n\n  refreshServers() {\n    return Promise.asyncApply(() => {\n      const domains = Promise.await(Users.getDistinctFederationDomains());\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(domains), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n          const domain = _step.value;\n          Promise.await(this.saveDomain(domain));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            Promise.await(_iterator.return());\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      Promise.await(this.deleteMany({\n        domain: {\n          $nin: domains\n        }\n      }));\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/FederationServers.ts"],"names":[],"mappings":"AAEA,IAAA,cAAA;;AAAgB,MAAM,CAAA,IAAN,CAAe,sCAAf,EAAgB;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAhB,EAAgB,CAAhB;AAAhB,MAAA,CAAO,MAAP,CAAc;AAAA,EAAA,oBAAkB,EAAA,MAAA;AAAlB,CAAd;AAAgC,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAI1B,MAAO,oBAAP,SAAoC,OAApC,CAA8D;AAAA;AAAA;AAAA,SACzD,OADyD,GACzB,CAAC;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,MAAM,EAAE;AAAV;AAAP,KAAD,CADyB;AAAA;;AAGnE,EAAA,UAAU,CAAC,MAAD,EAAe;AACxB,WAAO,KAAK,SAAL,CACN;AAAE,MAAA;AAAF,KADM,EAEN;AACC,MAAA,YAAY,EAAE;AACb,QAAA;AADa;AADf,KAFM,EAON;AAAE,MAAA,MAAM,EAAE;AAAV,KAPM,CAAP;AASA;;AAEK,EAAA,cAAc;AAAA,oCAAA;AACnB,YAAM,OAAO,iBAAS,KAAK,CAAC,4BAAN,EAAT,CAAb;AADmB;AAAA;;AAAA;;AAAA;AAGnB,4CAA2B,OAA3B,0HAAoC;AAAA,gBAAnB,MAAmB;AACnC,wBAAM,KAAK,UAAL,CAAgB,MAAhB,CAAN;AACA;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOnB,oBAAM,KAAK,UAAL,CAAgB;AAAE,QAAA,MAAM,EAAE;AAAE,UAAA,IAAI,EAAE;AAAR;AAAV,OAAhB,CAAN;AACA,KARmB;AAAA;;AAf+C","sourcesContent":["import { UpdateWriteOpResult } from 'mongodb';\n\nimport { Users } from './index';\nimport { IFederationServer } from '../../../../definition/Federation';\nimport { BaseRaw, IndexSpecification } from './BaseRaw';\n\nexport class FederationServersRaw extends BaseRaw<IFederationServer> {\n\tprotected indexes: IndexSpecification[] = [{ key: { domain: 1 } }];\n\n\tsaveDomain(domain: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tasync refreshServers(): Promise<void> {\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"f9d150c60a934786dc60197e8462f57a20bbb484"}

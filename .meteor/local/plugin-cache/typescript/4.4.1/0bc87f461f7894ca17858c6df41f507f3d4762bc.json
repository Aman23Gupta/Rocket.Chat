{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/NotificationQueue.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/NotificationQueue.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/NotificationQueue.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/NotificationQueue.ts","sourceRoot":"","sources":["app/models/server/raw/NotificationQueue.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAsB,MAAM,WAAW,CAAC;AAGxD,MAAM,OAAO,oBAAqB,SAAQ,OAAsB;IACrD,OAAO,GAAyB;QACzC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE;QACnB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,kBAAkB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACnD,EAAE,GAAG,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;QACtC,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;QACrC,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;KACnC,CAAC;IAEF,gBAAgB,CAAC,GAAW;QAC3B,OAAO,IAAI,CAAC,SAAS,CACpB,EAAE,GAAG,EAAE,EACP;YACC,MAAM,EAAE;gBACP,OAAO,EAAE,CAAC;aACV;SACD,CACD,CAAC;IACH,CAAC;IAED,YAAY,CAAC,GAAW,EAAE,KAAU;QACnC,OAAO,IAAI,CAAC,SAAS,CACpB;YACC,GAAG;SACH,EACD;YACC,IAAI,EAAE;gBACL,KAAK;aACL;YACD,MAAM,EAAE;gBACP,OAAO,EAAE,CAAC;aACV;SACD,CACD,CAAC;IACH,CAAC;IAED,qBAAqB,CAAC,GAAW;QAChC,OAAO,IAAI,CAAC,UAAU,CACrB;YACC,GAAG;YACH,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SAC3B,EACD;YACC,MAAM,EAAE;gBACP,QAAQ,EAAE,CAAC;aACX;SACD,CACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,GAAW;QACnC,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC;YAChC,GAAG;SACH,CAAC,CAAC;QAEH,OAAO,EAAE,CAAC,YAAY,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,wBAAwB,CAAC,OAAa;QAC3C,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QAEvB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAC7C;YACC,IAAI,EAAE;gBACL;oBACC,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;iBACtE;gBACD;oBACC,GAAG,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC;iBACpE;gBACD;oBACC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;iBACzB;aACD;SACD,EACD;YACC,IAAI,EAAE;gBACL,OAAO,EAAE,GAAG;aACZ;SACD,EACD;YACC,IAAI,EAAE;gBACL,EAAE,EAAE,CAAC;aACL;SACD,CACD,CAAC;QAEF,OAAO,MAAM,CAAC,KAAK,CAAC;IACrB,CAAC;CACD","sourcesContent":["import { UpdateWriteOpResult } from 'mongodb';\n\nimport { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { INotification } from '../../../../definition/INotification';\n\nexport class NotificationQueueRaw extends BaseRaw<INotification> {\n\tprotected indexes: IndexSpecification[] = [\n\t\t{ key: { uid: 1 } },\n\t\t{ key: { ts: 1 }, expireAfterSeconds: 2 * 60 * 60 },\n\t\t{ key: { schedule: 1 }, sparse: true },\n\t\t{ key: { sending: 1 }, sparse: true },\n\t\t{ key: { error: 1 }, sparse: true },\n\t];\n\n\tunsetSendingById(_id: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id },\n\t\t\t{\n\t\t\t\t$unset: {\n\t\t\t\t\tsending: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tsetErrorById(_id: string, error: any): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\t_id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\terror,\n\t\t\t\t},\n\t\t\t\t$unset: {\n\t\t\t\t\tsending: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tclearScheduleByUserId(uid: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateMany(\n\t\t\t{\n\t\t\t\tuid,\n\t\t\t\tschedule: { $exists: true },\n\t\t\t},\n\t\t\t{\n\t\t\t\t$unset: {\n\t\t\t\t\tschedule: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tasync clearQueueByUserId(uid: string): Promise<number | undefined> {\n\t\tconst op = await this.deleteMany({\n\t\t\tuid,\n\t\t});\n\n\t\treturn op.deletedCount;\n\t}\n\n\tasync findNextInQueueOrExpired(expired: Date): Promise<INotification | undefined> {\n\t\tconst now = new Date();\n\n\t\tconst result = await this.col.findOneAndUpdate(\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{\n\t\t\t\t\t\t$or: [{ sending: { $exists: false } }, { sending: { $lte: expired } }],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t$or: [{ schedule: { $exists: false } }, { schedule: { $lte: now } }],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\terror: { $exists: false },\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tsending: now,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn result.value;\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/NotificationQueue.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/NotificationQueue.ts"}},"code":"module.export({\n  NotificationQueueRaw: () => NotificationQueueRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass NotificationQueueRaw extends BaseRaw {\n  constructor() {\n    super(...arguments);\n    this.indexes = [{\n      key: {\n        uid: 1\n      }\n    }, {\n      key: {\n        ts: 1\n      },\n      expireAfterSeconds: 2 * 60 * 60\n    }, {\n      key: {\n        schedule: 1\n      },\n      sparse: true\n    }, {\n      key: {\n        sending: 1\n      },\n      sparse: true\n    }, {\n      key: {\n        error: 1\n      },\n      sparse: true\n    }];\n  }\n\n  unsetSendingById(_id) {\n    return this.updateOne({\n      _id\n    }, {\n      $unset: {\n        sending: 1\n      }\n    });\n  }\n\n  setErrorById(_id, error) {\n    return this.updateOne({\n      _id\n    }, {\n      $set: {\n        error\n      },\n      $unset: {\n        sending: 1\n      }\n    });\n  }\n\n  clearScheduleByUserId(uid) {\n    return this.updateMany({\n      uid,\n      schedule: {\n        $exists: true\n      }\n    }, {\n      $unset: {\n        schedule: 1\n      }\n    });\n  }\n\n  clearQueueByUserId(uid) {\n    return Promise.asyncApply(() => {\n      const op = Promise.await(this.deleteMany({\n        uid\n      }));\n      return op.deletedCount;\n    });\n  }\n\n  findNextInQueueOrExpired(expired) {\n    return Promise.asyncApply(() => {\n      const now = new Date();\n      const result = Promise.await(this.col.findOneAndUpdate({\n        $and: [{\n          $or: [{\n            sending: {\n              $exists: false\n            }\n          }, {\n            sending: {\n              $lte: expired\n            }\n          }]\n        }, {\n          $or: [{\n            schedule: {\n              $exists: false\n            }\n          }, {\n            schedule: {\n              $lte: now\n            }\n          }]\n        }, {\n          error: {\n            $exists: false\n          }\n        }]\n      }, {\n        $set: {\n          sending: now\n        }\n      }, {\n        sort: {\n          ts: 1\n        }\n      }));\n      return result.value;\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/NotificationQueue.ts"],"names":[],"mappings":"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","sourcesContent":["import { UpdateWriteOpResult } from 'mongodb';\n\nimport { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { INotification } from '../../../../definition/INotification';\n\nexport class NotificationQueueRaw extends BaseRaw<INotification> {\n\tprotected indexes: IndexSpecification[] = [\n\t\t{ key: { uid: 1 } },\n\t\t{ key: { ts: 1 }, expireAfterSeconds: 2 * 60 * 60 },\n\t\t{ key: { schedule: 1 }, sparse: true },\n\t\t{ key: { sending: 1 }, sparse: true },\n\t\t{ key: { error: 1 }, sparse: true },\n\t];\n\n\tunsetSendingById(_id: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id },\n\t\t\t{\n\t\t\t\t$unset: {\n\t\t\t\t\tsending: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tsetErrorById(_id: string, error: any): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\t_id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\terror,\n\t\t\t\t},\n\t\t\t\t$unset: {\n\t\t\t\t\tsending: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tclearScheduleByUserId(uid: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateMany(\n\t\t\t{\n\t\t\t\tuid,\n\t\t\t\tschedule: { $exists: true },\n\t\t\t},\n\t\t\t{\n\t\t\t\t$unset: {\n\t\t\t\t\tschedule: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tasync clearQueueByUserId(uid: string): Promise<number | undefined> {\n\t\tconst op = await this.deleteMany({\n\t\t\tuid,\n\t\t});\n\n\t\treturn op.deletedCount;\n\t}\n\n\tasync findNextInQueueOrExpired(expired: Date): Promise<INotification | undefined> {\n\t\tconst now = new Date();\n\n\t\tconst result = await this.col.findOneAndUpdate(\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{\n\t\t\t\t\t\t$or: [{ sending: { $exists: false } }, { sending: { $lte: expired } }],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t$or: [{ schedule: { $exists: false } }, { schedule: { $lte: now } }],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\terror: { $exists: false },\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tsending: now,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn result.value;\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"0bc87f461f7894ca17858c6df41f507f3d4762bc"}

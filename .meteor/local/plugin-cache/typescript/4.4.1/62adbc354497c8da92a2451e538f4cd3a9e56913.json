{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/routing/LoadRotation.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/lib/routing/LoadRotation.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/routing/LoadRotation.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/routing/LoadRotation.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/routing/LoadRotation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,0DAA0D,CAAC;AAC1F,OAAO,EAAE,KAAK,EAAE,MAAM,yCAAyC,CAAC;AAIhE;;GAEG;AACH,MAAM,YAAY;IACT,OAAO,CAAwB;IAEvC;QACC,IAAI,CAAC,OAAO,GAAG;YACd,WAAW,EAAE,KAAK;YAClB,cAAc,EAAE,KAAK;YACrB,SAAS,EAAE,KAAK;YAChB,aAAa,EAAE,KAAK;YACpB,WAAW,EAAE,KAAK;YAClB,mBAAmB,EAAE,IAAI;YACzB,eAAe,EAAE,IAAI;SACrB,CAAC;IACH,CAAC;IAED,IAAI,MAAM;QACT,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,UAAmB,EAAE,aAAsB;QACpE,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,2BAA2B,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QACrF,IAAI,CAAC,SAAS,EAAE;YACf,OAAO;SACP;QAED,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,SAAS,CAAC;QACxC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;IAC9B,CAAC;CACD;AAED,cAAc,CAAC,cAAc,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC","sourcesContent":["import { RoutingManager } from '../../../../../../app/livechat/server/lib/RoutingManager';\nimport { Users } from '../../../../../../app/models/server/raw';\nimport { IRoutingManagerConfig } from '../../../../../../definition/IRoutingManagerConfig';\nimport { IOmnichannelCustomAgent } from '../../../../../../definition/IOmnichannelCustomAgent';\n\n/* Load Rotation Queuing method:\n * Routing method where the agent with the oldest routing time is the next agent to serve incoming chats\n */\nclass LoadRotation {\n\tprivate _config: IRoutingManagerConfig;\n\n\tconstructor() {\n\t\tthis._config = {\n\t\t\tpreviewRoom: false,\n\t\t\tshowConnecting: false,\n\t\t\tshowQueue: false,\n\t\t\tshowQueueLink: false,\n\t\t\treturnQueue: false,\n\t\t\tenableTriggerAction: true,\n\t\t\tautoAssignAgent: true,\n\t\t};\n\t}\n\n\tget config(): IRoutingManagerConfig {\n\t\treturn this._config;\n\t}\n\n\tpublic async getNextAgent(department?: string, ignoreAgentId?: string): Promise<IOmnichannelCustomAgent | undefined> {\n\t\tconst nextAgent = await Users.getLastAvailableAgentRouted(department, ignoreAgentId);\n\t\tif (!nextAgent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { agentId, username } = nextAgent;\n\t\treturn { agentId, username };\n\t}\n}\n\nRoutingManager.registerMethod('Load_Rotation', LoadRotation);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/routing/LoadRotation.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/lib/routing/LoadRotation.ts"}},"code":"let RoutingManager;\nmodule.link(\"../../../../../../app/livechat/server/lib/RoutingManager\", {\n  RoutingManager(v) {\n    RoutingManager = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../../../../app/models/server/raw\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\n\n/* Load Rotation Queuing method:\n * Routing method where the agent with the oldest routing time is the next agent to serve incoming chats\n */\nclass LoadRotation {\n  constructor() {\n    this._config = void 0;\n    this._config = {\n      previewRoom: false,\n      showConnecting: false,\n      showQueue: false,\n      showQueueLink: false,\n      returnQueue: false,\n      enableTriggerAction: true,\n      autoAssignAgent: true\n    };\n  }\n\n  get config() {\n    return this._config;\n  }\n\n  getNextAgent(department, ignoreAgentId) {\n    return Promise.asyncApply(() => {\n      const nextAgent = Promise.await(Users.getLastAvailableAgentRouted(department, ignoreAgentId));\n\n      if (!nextAgent) {\n        return;\n      }\n\n      const {\n        agentId,\n        username\n      } = nextAgent;\n      return {\n        agentId,\n        username\n      };\n    });\n  }\n\n}\n\nRoutingManager.registerMethod('Load_Rotation', LoadRotation);","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/lib/routing/LoadRotation.ts"],"names":[],"mappings":"AAAA,IAAA,cAAA;AAAS,MAAgB,CAAA,IAAhB,CAAsB,0DAAtB,EAAiF;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAjF,EAAiF,CAAjF;AAAiF,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yCAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAK1F;;AAEG;AACH,MAAM,YAAN,CAAkB;AAGjB,EAAA,WAAA,GAAA;AAAA,SAFQ,OAER;AACC,SAAK,OAAL,GAAe;AACd,MAAA,WAAW,EAAE,KADC;AAEd,MAAA,cAAc,EAAE,KAFF;AAGd,MAAA,SAAS,EAAE,KAHG;AAId,MAAA,aAAa,EAAE,KAJD;AAKd,MAAA,WAAW,EAAE,KALC;AAMd,MAAA,mBAAmB,EAAE,IANP;AAOd,MAAA,eAAe,EAAE;AAPH,KAAf;AASA;;AAES,MAAN,MAAM,GAAA;AACT,WAAO,KAAK,OAAZ;AACA;;AAEY,EAAA,YAAY,CAAC,UAAD,EAAsB,aAAtB;AAAA,oCAA4C;AACpE,YAAM,SAAS,iBAAS,KAAK,CAAC,2BAAN,CAAkC,UAAlC,EAA8C,aAA9C,CAAT,CAAf;;AACA,UAAI,CAAC,SAAL,EAAgB;AACf;AACA;;AAED,YAAM;AAAE,QAAA,OAAF;AAAW,QAAA;AAAX,UAAwB,SAA9B;AACA,aAAO;AAAE,QAAA,OAAF;AAAW,QAAA;AAAX,OAAP;AACA,KARwB;AAAA;;AAnBR;;AA8BlB,cAAc,CAAC,cAAf,CAA8B,eAA9B,EAA+C,YAA/C","sourcesContent":["import { RoutingManager } from '../../../../../../app/livechat/server/lib/RoutingManager';\nimport { Users } from '../../../../../../app/models/server/raw';\nimport { IRoutingManagerConfig } from '../../../../../../definition/IRoutingManagerConfig';\nimport { IOmnichannelCustomAgent } from '../../../../../../definition/IOmnichannelCustomAgent';\n\n/* Load Rotation Queuing method:\n * Routing method where the agent with the oldest routing time is the next agent to serve incoming chats\n */\nclass LoadRotation {\n\tprivate _config: IRoutingManagerConfig;\n\n\tconstructor() {\n\t\tthis._config = {\n\t\t\tpreviewRoom: false,\n\t\t\tshowConnecting: false,\n\t\t\tshowQueue: false,\n\t\t\tshowQueueLink: false,\n\t\t\treturnQueue: false,\n\t\t\tenableTriggerAction: true,\n\t\t\tautoAssignAgent: true,\n\t\t};\n\t}\n\n\tget config(): IRoutingManagerConfig {\n\t\treturn this._config;\n\t}\n\n\tpublic async getNextAgent(department?: string, ignoreAgentId?: string): Promise<IOmnichannelCustomAgent | undefined> {\n\t\tconst nextAgent = await Users.getLastAvailableAgentRouted(department, ignoreAgentId);\n\t\tif (!nextAgent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { agentId, username } = nextAgent;\n\t\treturn { agentId, username };\n\t}\n}\n\nRoutingManager.registerMethod('Load_Rotation', LoadRotation);\n"],"sourceRoot":""},"sourceType":"module","hash":"62adbc354497c8da92a2451e538f4cd3a9e56913"}

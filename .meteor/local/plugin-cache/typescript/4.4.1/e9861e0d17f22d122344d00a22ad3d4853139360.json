{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/version-check/server/index.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/version-check/server/index.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/version-check/server/index.ts","inputSourceMap":{"version":3,"file":"app/version-check/server/index.ts","sourceRoot":"","sources":["app/version-check/server/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,kBAAkB,MAAM,gCAAgC,CAAC;AAChE,OAAO,0BAA0B,CAAC;AAClC,OAAO,eAAe,CAAC;AAEvB,MAAM,OAAO,GAAG,eAAe,CAAC;AAEhC,IAAI,UAAU,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE;IAC5C,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;CAC3B;AAED,MAAM,kBAAkB,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE;IACtD,UAAU,CAAC,GAAG,CAAC;QACd,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,CAAC,MAA0C,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QACnF,GAAG;YACF,kBAAkB,EAAE,CAAC;QACtB,CAAC;KACD,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;QACjB,IAAI,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;YAC5E,kBAAkB,EAAE,CAAC;SACrB;IACF,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,aAAa,CAAC,CAAC,iBAAiB,EAAE,sBAAsB,CAAC,EAAE,GAAG,EAAE;IACxE,MAAM,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IAEhG,IAAI,eAAe,IAAI,UAAU,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE;QAC/D,OAAO;KACP;IAED,IAAI,eAAe,EAAE;QACpB,kBAAkB,EAAE,CAAC;QACrB,OAAO;KACP;IAED,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { SyncedCron } from 'meteor/littledata:synced-cron';\n\nimport { settings } from '../../settings/server';\nimport checkVersionUpdate from './functions/checkVersionUpdate';\nimport './methods/banner_dismiss';\nimport './addSettings';\n\nconst jobName = 'version_check';\n\nif (SyncedCron.nextScheduledAtDate(jobName)) {\n\tSyncedCron.remove(jobName);\n}\n\nconst addVersionCheckJob = Meteor.bindEnvironment(() => {\n\tSyncedCron.add({\n\t\tname: jobName,\n\t\tschedule: (parser: { text: (time: string) => string }) => parser.text('at 2:00 am'),\n\t\tjob() {\n\t\t\tcheckVersionUpdate();\n\t\t},\n\t});\n});\n\nMeteor.startup(() => {\n\tMeteor.defer(() => {\n\t\tif (settings.get('Register_Server') && settings.get('Update_EnableChecker')) {\n\t\t\tcheckVersionUpdate();\n\t\t}\n\t});\n});\n\nsettings.watchMultiple(['Register_Server', 'Update_EnableChecker'], () => {\n\tconst checkForUpdates = settings.get('Register_Server') && settings.get('Update_EnableChecker');\n\n\tif (checkForUpdates && SyncedCron.nextScheduledAtDate(jobName)) {\n\t\treturn;\n\t}\n\n\tif (checkForUpdates) {\n\t\taddVersionCheckJob();\n\t\treturn;\n\t}\n\n\tSyncedCron.remove(jobName);\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/version-check/server/index.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/version-check/server/index.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SyncedCron;\nmodule.link(\"meteor/littledata:synced-cron\", {\n  SyncedCron(v) {\n    SyncedCron = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet checkVersionUpdate;\nmodule.link(\"./functions/checkVersionUpdate\", {\n  default(v) {\n    checkVersionUpdate = v;\n  }\n\n}, 3);\nmodule.link(\"./methods/banner_dismiss\");\nmodule.link(\"./addSettings\");\nconst jobName = 'version_check';\n\nif (SyncedCron.nextScheduledAtDate(jobName)) {\n  SyncedCron.remove(jobName);\n}\n\nconst addVersionCheckJob = Meteor.bindEnvironment(() => {\n  SyncedCron.add({\n    name: jobName,\n    schedule: parser => parser.text('at 2:00 am'),\n\n    job() {\n      checkVersionUpdate();\n    }\n\n  });\n});\nMeteor.startup(() => {\n  Meteor.defer(() => {\n    if (settings.get('Register_Server') && settings.get('Update_EnableChecker')) {\n      checkVersionUpdate();\n    }\n  });\n});\nsettings.watchMultiple(['Register_Server', 'Update_EnableChecker'], () => {\n  const checkForUpdates = settings.get('Register_Server') && settings.get('Update_EnableChecker');\n\n  if (checkForUpdates && SyncedCron.nextScheduledAtDate(jobName)) {\n    return;\n  }\n\n  if (checkForUpdates) {\n    addVersionCheckJob();\n    return;\n  }\n\n  SyncedCron.remove(jobName);\n});","map":{"version":3,"sources":["app/version-check/server/index.ts"],"names":[],"mappings":"AAAA,IAAA,MAAA;AAAS,MAAQ,CAAA,IAAR,CAAc,eAAd,EAA8B;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAA9B,EAA8B,CAA9B;AAA8B,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA;AAQvC,MAAM,OAAO,GAAG,eAAhB;;AAEA,IAAI,UAAU,CAAC,mBAAX,CAA+B,OAA/B,CAAJ,EAA6C;AAC5C,EAAA,UAAU,CAAC,MAAX,CAAkB,OAAlB;AACA;;AAED,MAAM,kBAAkB,GAAG,MAAM,CAAC,eAAP,CAAuB,MAAK;AACtD,EAAA,UAAU,CAAC,GAAX,CAAe;AACd,IAAA,IAAI,EAAE,OADQ;AAEd,IAAA,QAAQ,EAAG,MAAD,IAAgD,MAAM,CAAC,IAAP,CAAY,YAAZ,CAF5C;;AAGd,IAAA,GAAG,GAAA;AACF,MAAA,kBAAkB;AAClB;;AALa,GAAf;AAOA,CAR0B,CAA3B;AAUA,MAAM,CAAC,OAAP,CAAe,MAAK;AACnB,EAAA,MAAM,CAAC,KAAP,CAAa,MAAK;AACjB,QAAI,QAAQ,CAAC,GAAT,CAAa,iBAAb,KAAmC,QAAQ,CAAC,GAAT,CAAa,sBAAb,CAAvC,EAA6E;AAC5E,MAAA,kBAAkB;AAClB;AACD,GAJD;AAKA,CAND;AAQA,QAAQ,CAAC,aAAT,CAAuB,CAAC,iBAAD,EAAoB,sBAApB,CAAvB,EAAoE,MAAK;AACxE,QAAM,eAAe,GAAG,QAAQ,CAAC,GAAT,CAAa,iBAAb,KAAmC,QAAQ,CAAC,GAAT,CAAa,sBAAb,CAA3D;;AAEA,MAAI,eAAe,IAAI,UAAU,CAAC,mBAAX,CAA+B,OAA/B,CAAvB,EAAgE;AAC/D;AACA;;AAED,MAAI,eAAJ,EAAqB;AACpB,IAAA,kBAAkB;AAClB;AACA;;AAED,EAAA,UAAU,CAAC,MAAX,CAAkB,OAAlB;AACA,CAbD","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { SyncedCron } from 'meteor/littledata:synced-cron';\n\nimport { settings } from '../../settings/server';\nimport checkVersionUpdate from './functions/checkVersionUpdate';\nimport './methods/banner_dismiss';\nimport './addSettings';\n\nconst jobName = 'version_check';\n\nif (SyncedCron.nextScheduledAtDate(jobName)) {\n\tSyncedCron.remove(jobName);\n}\n\nconst addVersionCheckJob = Meteor.bindEnvironment(() => {\n\tSyncedCron.add({\n\t\tname: jobName,\n\t\tschedule: (parser: { text: (time: string) => string }) => parser.text('at 2:00 am'),\n\t\tjob() {\n\t\t\tcheckVersionUpdate();\n\t\t},\n\t});\n});\n\nMeteor.startup(() => {\n\tMeteor.defer(() => {\n\t\tif (settings.get('Register_Server') && settings.get('Update_EnableChecker')) {\n\t\t\tcheckVersionUpdate();\n\t\t}\n\t});\n});\n\nsettings.watchMultiple(['Register_Server', 'Update_EnableChecker'], () => {\n\tconst checkForUpdates = settings.get('Register_Server') && settings.get('Update_EnableChecker');\n\n\tif (checkForUpdates && SyncedCron.nextScheduledAtDate(jobName)) {\n\t\treturn;\n\t}\n\n\tif (checkForUpdates) {\n\t\taddVersionCheckJob();\n\t\treturn;\n\t}\n\n\tSyncedCron.remove(jobName);\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"e9861e0d17f22d122344d00a22ad3d4853139360"}

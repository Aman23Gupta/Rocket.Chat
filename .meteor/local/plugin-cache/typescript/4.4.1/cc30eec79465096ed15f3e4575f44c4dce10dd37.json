{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/Logger.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/logger/Logger.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/Logger.ts","inputSourceMap":{"version":3,"file":"server/lib/logger/Logger.ts","sourceRoot":"","sources":["server/lib/logger/Logger.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MainLogger } from './getPino';\nimport { getPino } from './getPino';\nimport { logLevel, LogLevelSetting } from './logLevel';\n\nconst getLevel = (level: LogLevelSetting): string => {\n\tswitch (level) {\n\t\tcase '0':\n\t\t\treturn 'warn';\n\t\tcase '1':\n\t\t\treturn 'info';\n\t\tcase '2':\n\t\t\treturn 'debug';\n\t\tdefault:\n\t\t\treturn 'warn';\n\t}\n};\n\nlet defaultLevel = 'warn';\n\nlogLevel.once('changed', (level) => {\n\tdefaultLevel = getLevel(level);\n});\n\nexport class Logger {\n\treadonly logger: MainLogger;\n\n\tconstructor(loggerLabel: string) {\n\t\tthis.logger = getPino(loggerLabel, defaultLevel);\n\n\t\tlogLevel.on('changed', (level) => {\n\t\t\tthis.logger.level = getLevel(level);\n\t\t});\n\t}\n\n\tsection(name: string): MainLogger {\n\t\tconst child = this.logger.child({ section: name }) as MainLogger;\n\n\t\tlogLevel.on('changed', (level) => {\n\t\t\tchild.level = getLevel(level);\n\t\t});\n\n\t\treturn child;\n\t}\n\n\tlevel(newLevel: string): void {\n\t\tthis.logger.level = newLevel;\n\t}\n\n\tlog<T extends object>(obj: T, ...args: any[]): void;\n\n\tlog(msg: string, ...args: any[]): void;\n\n\tlog(msg: string, ...args: any[]): void {\n\t\tthis.logger.info(msg, ...args);\n\t}\n\n\tdebug<T extends object>(obj: T, ...args: any[]): void;\n\n\tdebug(msg: string, ...args: any[]): void;\n\n\tdebug(msg: string, ...args: any[]): void {\n\t\tthis.logger.debug(msg, ...args);\n\t}\n\n\tinfo<T extends object>(obj: T, ...args: any[]): void;\n\n\tinfo(msg: string, ...args: any[]): void;\n\n\tinfo(msg: string, ...args: any[]): void {\n\t\tthis.logger.info(msg, ...args);\n\t}\n\n\tstartup<T extends object>(obj: T, ...args: any[]): void;\n\n\tstartup(msg: string, ...args: any[]): void;\n\n\tstartup(msg: string, ...args: any[]): void {\n\t\tthis.logger.startup(msg, ...args);\n\t}\n\n\tsuccess<T extends object>(obj: T, ...args: any[]): void;\n\n\tsuccess(msg: string, ...args: any[]): void;\n\n\tsuccess(msg: string, ...args: any[]): void {\n\t\tthis.logger.info(msg, ...args);\n\t}\n\n\twarn<T extends object>(obj: T, ...args: any[]): void;\n\n\twarn(msg: string, ...args: any[]): void;\n\n\twarn(msg: string, ...args: any[]): void {\n\t\tthis.logger.warn(msg, ...args);\n\t}\n\n\terror<T extends object>(obj: T, ...args: any[]): void;\n\n\terror(msg: string, ...args: any[]): void;\n\n\terror(msg: string, ...args: any[]): void {\n\t\tthis.logger.error(msg, ...args);\n\t}\n\n\tmethod<T extends object>(obj: T, ...args: any[]): void;\n\n\tmethod(msg: string, ...args: any[]): void;\n\n\tmethod(msg: string, ...args: any[]): void {\n\t\tthis.logger.method(msg, ...args);\n\t}\n\n\tsubscription<T extends object>(obj: T, ...args: any[]): void;\n\n\tsubscription(msg: string, ...args: any[]): void;\n\n\tsubscription(msg: string, ...args: any[]): void {\n\t\tthis.logger.subscription(msg, ...args);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/Logger.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/logger/Logger.ts"}},"code":"module.export({\n  Logger: () => Logger\n});\nlet getPino;\nmodule.link(\"./getPino\", {\n  getPino(v) {\n    getPino = v;\n  }\n\n}, 0);\nlet logLevel;\nmodule.link(\"./logLevel\", {\n  logLevel(v) {\n    logLevel = v;\n  }\n\n}, 1);\n\nconst getLevel = level => {\n  switch (level) {\n    case '0':\n      return 'warn';\n\n    case '1':\n      return 'info';\n\n    case '2':\n      return 'debug';\n\n    default:\n      return 'warn';\n  }\n};\n\nlet defaultLevel = 'warn';\nlogLevel.once('changed', level => {\n  defaultLevel = getLevel(level);\n});\n\nclass Logger {\n  constructor(loggerLabel) {\n    this.logger = void 0;\n    this.logger = getPino(loggerLabel, defaultLevel);\n    logLevel.on('changed', level => {\n      this.logger.level = getLevel(level);\n    });\n  }\n\n  section(name) {\n    const child = this.logger.child({\n      section: name\n    });\n    logLevel.on('changed', level => {\n      child.level = getLevel(level);\n    });\n    return child;\n  }\n\n  level(newLevel) {\n    this.logger.level = newLevel;\n  }\n\n  log(msg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.logger.info(msg, ...args);\n  }\n\n  debug(msg) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    this.logger.debug(msg, ...args);\n  }\n\n  info(msg) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    this.logger.info(msg, ...args);\n  }\n\n  startup(msg) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    this.logger.startup(msg, ...args);\n  }\n\n  success(msg) {\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n\n    this.logger.info(msg, ...args);\n  }\n\n  warn(msg) {\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n\n    this.logger.warn(msg, ...args);\n  }\n\n  error(msg) {\n    for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      args[_key7 - 1] = arguments[_key7];\n    }\n\n    this.logger.error(msg, ...args);\n  }\n\n  method(msg) {\n    for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n      args[_key8 - 1] = arguments[_key8];\n    }\n\n    this.logger.method(msg, ...args);\n  }\n\n  subscription(msg) {\n    for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n      args[_key9 - 1] = arguments[_key9];\n    }\n\n    this.logger.subscription(msg, ...args);\n  }\n\n}","map":{"version":3,"sources":["server/lib/logger/Logger.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MainLogger } from './getPino';\nimport { getPino } from './getPino';\nimport { logLevel, LogLevelSetting } from './logLevel';\n\nconst getLevel = (level: LogLevelSetting): string => {\n\tswitch (level) {\n\t\tcase '0':\n\t\t\treturn 'warn';\n\t\tcase '1':\n\t\t\treturn 'info';\n\t\tcase '2':\n\t\t\treturn 'debug';\n\t\tdefault:\n\t\t\treturn 'warn';\n\t}\n};\n\nlet defaultLevel = 'warn';\n\nlogLevel.once('changed', (level) => {\n\tdefaultLevel = getLevel(level);\n});\n\nexport class Logger {\n\treadonly logger: MainLogger;\n\n\tconstructor(loggerLabel: string) {\n\t\tthis.logger = getPino(loggerLabel, defaultLevel);\n\n\t\tlogLevel.on('changed', (level) => {\n\t\t\tthis.logger.level = getLevel(level);\n\t\t});\n\t}\n\n\tsection(name: string): MainLogger {\n\t\tconst child = this.logger.child({ section: name }) as MainLogger;\n\n\t\tlogLevel.on('changed', (level) => {\n\t\t\tchild.level = getLevel(level);\n\t\t});\n\n\t\treturn child;\n\t}\n\n\tlevel(newLevel: string): void {\n\t\tthis.logger.level = newLevel;\n\t}\n\n\tlog<T extends object>(obj: T, ...args: any[]): void;\n\n\tlog(msg: string, ...args: any[]): void;\n\n\tlog(msg: string, ...args: any[]): void {\n\t\tthis.logger.info(msg, ...args);\n\t}\n\n\tdebug<T extends object>(obj: T, ...args: any[]): void;\n\n\tdebug(msg: string, ...args: any[]): void;\n\n\tdebug(msg: string, ...args: any[]): void {\n\t\tthis.logger.debug(msg, ...args);\n\t}\n\n\tinfo<T extends object>(obj: T, ...args: any[]): void;\n\n\tinfo(msg: string, ...args: any[]): void;\n\n\tinfo(msg: string, ...args: any[]): void {\n\t\tthis.logger.info(msg, ...args);\n\t}\n\n\tstartup<T extends object>(obj: T, ...args: any[]): void;\n\n\tstartup(msg: string, ...args: any[]): void;\n\n\tstartup(msg: string, ...args: any[]): void {\n\t\tthis.logger.startup(msg, ...args);\n\t}\n\n\tsuccess<T extends object>(obj: T, ...args: any[]): void;\n\n\tsuccess(msg: string, ...args: any[]): void;\n\n\tsuccess(msg: string, ...args: any[]): void {\n\t\tthis.logger.info(msg, ...args);\n\t}\n\n\twarn<T extends object>(obj: T, ...args: any[]): void;\n\n\twarn(msg: string, ...args: any[]): void;\n\n\twarn(msg: string, ...args: any[]): void {\n\t\tthis.logger.warn(msg, ...args);\n\t}\n\n\terror<T extends object>(obj: T, ...args: any[]): void;\n\n\terror(msg: string, ...args: any[]): void;\n\n\terror(msg: string, ...args: any[]): void {\n\t\tthis.logger.error(msg, ...args);\n\t}\n\n\tmethod<T extends object>(obj: T, ...args: any[]): void;\n\n\tmethod(msg: string, ...args: any[]): void;\n\n\tmethod(msg: string, ...args: any[]): void {\n\t\tthis.logger.method(msg, ...args);\n\t}\n\n\tsubscription<T extends object>(obj: T, ...args: any[]): void;\n\n\tsubscription(msg: string, ...args: any[]): void;\n\n\tsubscription(msg: string, ...args: any[]): void {\n\t\tthis.logger.subscription(msg, ...args);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"cc30eec79465096ed15f3e4575f44c4dce10dd37"}

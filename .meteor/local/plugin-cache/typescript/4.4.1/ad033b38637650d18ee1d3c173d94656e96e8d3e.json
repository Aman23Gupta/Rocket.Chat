{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/departments.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/departments.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/departments.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/departments.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport { hasPermission } from '../../../../authorization/server';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '../../../../models/server';\nimport { Livechat } from '../../../server/lib/Livechat';\nimport {\n\tfindDepartments,\n\tfindDepartmentById,\n\tfindDepartmentsToAutocomplete,\n\tfindDepartmentsBetweenIds,\n\tfindDepartmentAgents,\n} from '../../../server/api/lib/departments';\n\nAPI.v1.addRoute(\n\t'livechat/department',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\n\t\t\tconst { text, enabled, onlyMyDepartments, excludeDepartmentId } = this.queryParams;\n\n\t\t\tconst { departments, total } = Promise.await(\n\t\t\t\tfindDepartments({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\ttext,\n\t\t\t\t\tenabled,\n\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t\texcludeDepartmentId,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\t// IMO, sort type shouldn't be record, but a generic of the model we're trying to sort\n\t\t\t\t\t\t// or the form { [k: keyof T]: number | string }\n\t\t\t\t\t\tsort: sort as any,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn API.v1.success({ departments, count: departments.length, offset, total });\n\t\t},\n\t\tpost() {\n\t\t\tif (!hasPermission(this.userId, 'manage-livechat-departments')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcheck(this.bodyParams, {\n\t\t\t\t\tdepartment: Object,\n\t\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\t});\n\n\t\t\t\tconst agents = this.bodyParams.agents ? { upsert: this.bodyParams.agents } : {};\n\t\t\t\tconst department = Livechat.saveDepartment(null, this.bodyParams.department, agents);\n\n\t\t\t\tif (department) {\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tdepartment,\n\t\t\t\t\t\tagents: LivechatDepartmentAgents.find({ departmentId: department._id }).fetch(),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { onlyMyDepartments } = this.queryParams;\n\n\t\t\tconst { department, agents } = Promise.await(\n\t\t\t\tfindDepartmentById({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tdepartmentId: this.urlParams._id,\n\t\t\t\t\tincludeAgents: this.queryParams.includeAgents && this.queryParams.includeAgents === 'true',\n\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// TODO: return 404 when department is not found\n\t\t\t// Currently, FE relies on the fact that this endpoint returns an empty payload\n\t\t\t// to show the \"new\" view. Returning 404 breaks it\n\t\t\tconst result = { department, agents };\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t\tput() {\n\t\t\tconst permissionToSave = hasPermission(this.userId, 'manage-livechat-departments');\n\t\t\tconst permissionToAddAgents = hasPermission(this.userId, 'add-livechat-department-agents');\n\n\t\t\tif (!permissionToSave && !permissionToAddAgents) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcheck(this.urlParams, {\n\t\t\t\t\t_id: String,\n\t\t\t\t});\n\n\t\t\t\tcheck(this.bodyParams, {\n\t\t\t\t\tdepartment: Object,\n\t\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\t});\n\n\t\t\t\tconst { _id } = this.urlParams;\n\t\t\t\tconst { department, agents } = this.bodyParams;\n\n\t\t\t\tlet success;\n\t\t\t\tif (permissionToSave) {\n\t\t\t\t\tsuccess = Livechat.saveDepartment(_id, department);\n\t\t\t\t}\n\n\t\t\t\tif (success && agents && permissionToAddAgents) {\n\t\t\t\t\tsuccess = Livechat.saveDepartmentAgents(_id, { upsert: agents });\n\t\t\t\t}\n\n\t\t\t\tif (success) {\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tdepartment: LivechatDepartment.findOneById(_id),\n\t\t\t\t\t\tagents: LivechatDepartmentAgents.find({ departmentId: _id }).fetch(),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t\tdelete() {\n\t\t\tif (!hasPermission(this.userId, 'manage-livechat-departments') && !hasPermission(this.userId, 'remove-livechat-department')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcheck(this.urlParams, {\n\t\t\t\t\t_id: String,\n\t\t\t\t});\n\n\t\t\t\tif (Livechat.removeDepartment(this.urlParams._id)) {\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\t\t\t\treturn API.v1.failure();\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.autocomplete',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { selector, onlyMyDepartments } = this.queryParams;\n\t\t\tif (!selector) {\n\t\t\t\treturn API.v1.failure(\"The 'selector' param is required\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindDepartmentsToAutocomplete({\n\t\t\t\t\t\tuid: this.userId,\n\t\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute<'livechat/department/:departmentId/agents', { authRequired: true }>(\n\t'livechat/department/:departmentId/agents',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\tdepartmentId: String,\n\t\t\t});\n\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\n\t\t\tconst agents = await findDepartmentAgents({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tdepartmentId: this.urlParams.departmentId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(agents);\n\t\t},\n\t\tpost() {\n\t\t\tif (!hasPermission(this.userId, 'manage-livechat-departments') || !hasPermission(this.userId, 'add-livechat-department-agents')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tcheck(this.urlParams, {\n\t\t\t\tdepartmentId: String,\n\t\t\t});\n\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tupsert: Array,\n\t\t\t\t\tremove: Array,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tLivechat.saveDepartmentAgents(this.urlParams.departmentId, this.bodyParams);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.listByIds',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { ids } = this.queryParams;\n\t\t\tconst { fields } = this.parseJsonQuery();\n\t\t\tif (!ids) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param is required\");\n\t\t\t}\n\t\t\tif (!Array.isArray(ids)) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param must be an array\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindDepartmentsBetweenIds({\n\t\t\t\t\t\tuid: this.userId,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tfields,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/departments.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/departments.ts"}},"code":"let Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nlet hasPermission;\nmodule.link(\"../../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 2);\nlet LivechatDepartment, LivechatDepartmentAgents;\nmodule.link(\"../../../../models/server\", {\n  LivechatDepartment(v) {\n    LivechatDepartment = v;\n  },\n\n  LivechatDepartmentAgents(v) {\n    LivechatDepartmentAgents = v;\n  }\n\n}, 3);\nlet Livechat;\nmodule.link(\"../../../server/lib/Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 4);\nlet findDepartments, findDepartmentById, findDepartmentsToAutocomplete, findDepartmentsBetweenIds, findDepartmentAgents;\nmodule.link(\"../../../server/api/lib/departments\", {\n  findDepartments(v) {\n    findDepartments = v;\n  },\n\n  findDepartmentById(v) {\n    findDepartmentById = v;\n  },\n\n  findDepartmentsToAutocomplete(v) {\n    findDepartmentsToAutocomplete = v;\n  },\n\n  findDepartmentsBetweenIds(v) {\n    findDepartmentsBetweenIds = v;\n  },\n\n  findDepartmentAgents(v) {\n    findDepartmentAgents = v;\n  }\n\n}, 5);\nAPI.v1.addRoute('livechat/department', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort\n    } = this.parseJsonQuery();\n    const {\n      text,\n      enabled,\n      onlyMyDepartments,\n      excludeDepartmentId\n    } = this.queryParams;\n    const {\n      departments,\n      total\n    } = Promise.await(findDepartments({\n      userId: this.userId,\n      text,\n      enabled,\n      onlyMyDepartments: onlyMyDepartments === 'true',\n      excludeDepartmentId,\n      pagination: {\n        offset,\n        count,\n        // IMO, sort type shouldn't be record, but a generic of the model we're trying to sort\n        // or the form { [k: keyof T]: number | string }\n        sort: sort\n      }\n    }));\n    return API.v1.success({\n      departments,\n      count: departments.length,\n      offset,\n      total\n    });\n  },\n\n  post() {\n    if (!hasPermission(this.userId, 'manage-livechat-departments')) {\n      return API.v1.unauthorized();\n    }\n\n    try {\n      check(this.bodyParams, {\n        department: Object,\n        agents: Match.Maybe(Array)\n      });\n      const agents = this.bodyParams.agents ? {\n        upsert: this.bodyParams.agents\n      } : {};\n      const department = Livechat.saveDepartment(null, this.bodyParams.department, agents);\n\n      if (department) {\n        return API.v1.success({\n          department,\n          agents: LivechatDepartmentAgents.find({\n            departmentId: department._id\n          }).fetch()\n        });\n      }\n\n      return API.v1.failure();\n    } catch (e) {\n      return API.v1.failure(e);\n    }\n  }\n\n});\nAPI.v1.addRoute('livechat/department/:_id', {\n  authRequired: true\n}, {\n  get() {\n    check(this.urlParams, {\n      _id: String\n    });\n    const {\n      onlyMyDepartments\n    } = this.queryParams;\n    const {\n      department,\n      agents\n    } = Promise.await(findDepartmentById({\n      userId: this.userId,\n      departmentId: this.urlParams._id,\n      includeAgents: this.queryParams.includeAgents && this.queryParams.includeAgents === 'true',\n      onlyMyDepartments: onlyMyDepartments === 'true'\n    })); // TODO: return 404 when department is not found\n    // Currently, FE relies on the fact that this endpoint returns an empty payload\n    // to show the \"new\" view. Returning 404 breaks it\n\n    const result = {\n      department,\n      agents\n    };\n    return API.v1.success(result);\n  },\n\n  put() {\n    const permissionToSave = hasPermission(this.userId, 'manage-livechat-departments');\n    const permissionToAddAgents = hasPermission(this.userId, 'add-livechat-department-agents');\n\n    if (!permissionToSave && !permissionToAddAgents) {\n      return API.v1.unauthorized();\n    }\n\n    try {\n      check(this.urlParams, {\n        _id: String\n      });\n      check(this.bodyParams, {\n        department: Object,\n        agents: Match.Maybe(Array)\n      });\n      const {\n        _id\n      } = this.urlParams;\n      const {\n        department,\n        agents\n      } = this.bodyParams;\n      let success;\n\n      if (permissionToSave) {\n        success = Livechat.saveDepartment(_id, department);\n      }\n\n      if (success && agents && permissionToAddAgents) {\n        success = Livechat.saveDepartmentAgents(_id, {\n          upsert: agents\n        });\n      }\n\n      if (success) {\n        return API.v1.success({\n          department: LivechatDepartment.findOneById(_id),\n          agents: LivechatDepartmentAgents.find({\n            departmentId: _id\n          }).fetch()\n        });\n      }\n\n      return API.v1.failure();\n    } catch (e) {\n      return API.v1.failure(e);\n    }\n  },\n\n  delete() {\n    if (!hasPermission(this.userId, 'manage-livechat-departments') && !hasPermission(this.userId, 'remove-livechat-department')) {\n      return API.v1.unauthorized();\n    }\n\n    try {\n      check(this.urlParams, {\n        _id: String\n      });\n\n      if (Livechat.removeDepartment(this.urlParams._id)) {\n        return API.v1.success();\n      }\n\n      return API.v1.failure();\n    } catch (e) {\n      return API.v1.failure(e);\n    }\n  }\n\n});\nAPI.v1.addRoute('livechat/department.autocomplete', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      selector,\n      onlyMyDepartments\n    } = this.queryParams;\n\n    if (!selector) {\n      return API.v1.failure(\"The 'selector' param is required\");\n    }\n\n    return API.v1.success(Promise.await(findDepartmentsToAutocomplete({\n      uid: this.userId,\n      selector: JSON.parse(selector),\n      onlyMyDepartments: onlyMyDepartments === 'true'\n    })));\n  }\n\n});\nAPI.v1.addRoute('livechat/department/:departmentId/agents', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      check(this.urlParams, {\n        departmentId: String\n      });\n      const {\n        offset,\n        count\n      } = this.getPaginationItems();\n      const {\n        sort\n      } = this.parseJsonQuery();\n      const agents = Promise.await(findDepartmentAgents({\n        userId: this.userId,\n        departmentId: this.urlParams.departmentId,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      }));\n      return API.v1.success(agents);\n    });\n  },\n\n  post() {\n    if (!hasPermission(this.userId, 'manage-livechat-departments') || !hasPermission(this.userId, 'add-livechat-department-agents')) {\n      return API.v1.unauthorized();\n    }\n\n    check(this.urlParams, {\n      departmentId: String\n    });\n    check(this.bodyParams, Match.ObjectIncluding({\n      upsert: Array,\n      remove: Array\n    }));\n    Livechat.saveDepartmentAgents(this.urlParams.departmentId, this.bodyParams);\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('livechat/department.listByIds', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      ids\n    } = this.queryParams;\n    const {\n      fields\n    } = this.parseJsonQuery();\n\n    if (!ids) {\n      return API.v1.failure(\"The 'ids' param is required\");\n    }\n\n    if (!Array.isArray(ids)) {\n      return API.v1.failure(\"The 'ids' param must be an array\");\n    }\n\n    return API.v1.success(Promise.await(findDepartmentsBetweenIds({\n      uid: this.userId,\n      ids,\n      fields\n    })));\n  }\n\n});","map":{"version":3,"sources":["app/livechat/imports/server/rest/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport { hasPermission } from '../../../../authorization/server';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '../../../../models/server';\nimport { Livechat } from '../../../server/lib/Livechat';\nimport {\n\tfindDepartments,\n\tfindDepartmentById,\n\tfindDepartmentsToAutocomplete,\n\tfindDepartmentsBetweenIds,\n\tfindDepartmentAgents,\n} from '../../../server/api/lib/departments';\n\nAPI.v1.addRoute(\n\t'livechat/department',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\n\t\t\tconst { text, enabled, onlyMyDepartments, excludeDepartmentId } = this.queryParams;\n\n\t\t\tconst { departments, total } = Promise.await(\n\t\t\t\tfindDepartments({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\ttext,\n\t\t\t\t\tenabled,\n\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t\texcludeDepartmentId,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\t// IMO, sort type shouldn't be record, but a generic of the model we're trying to sort\n\t\t\t\t\t\t// or the form { [k: keyof T]: number | string }\n\t\t\t\t\t\tsort: sort as any,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn API.v1.success({ departments, count: departments.length, offset, total });\n\t\t},\n\t\tpost() {\n\t\t\tif (!hasPermission(this.userId, 'manage-livechat-departments')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcheck(this.bodyParams, {\n\t\t\t\t\tdepartment: Object,\n\t\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\t});\n\n\t\t\t\tconst agents = this.bodyParams.agents ? { upsert: this.bodyParams.agents } : {};\n\t\t\t\tconst department = Livechat.saveDepartment(null, this.bodyParams.department, agents);\n\n\t\t\t\tif (department) {\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tdepartment,\n\t\t\t\t\t\tagents: LivechatDepartmentAgents.find({ departmentId: department._id }).fetch(),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department/:_id',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { onlyMyDepartments } = this.queryParams;\n\n\t\t\tconst { department, agents } = Promise.await(\n\t\t\t\tfindDepartmentById({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tdepartmentId: this.urlParams._id,\n\t\t\t\t\tincludeAgents: this.queryParams.includeAgents && this.queryParams.includeAgents === 'true',\n\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// TODO: return 404 when department is not found\n\t\t\t// Currently, FE relies on the fact that this endpoint returns an empty payload\n\t\t\t// to show the \"new\" view. Returning 404 breaks it\n\t\t\tconst result = { department, agents };\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t\tput() {\n\t\t\tconst permissionToSave = hasPermission(this.userId, 'manage-livechat-departments');\n\t\t\tconst permissionToAddAgents = hasPermission(this.userId, 'add-livechat-department-agents');\n\n\t\t\tif (!permissionToSave && !permissionToAddAgents) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcheck(this.urlParams, {\n\t\t\t\t\t_id: String,\n\t\t\t\t});\n\n\t\t\t\tcheck(this.bodyParams, {\n\t\t\t\t\tdepartment: Object,\n\t\t\t\t\tagents: Match.Maybe(Array),\n\t\t\t\t});\n\n\t\t\t\tconst { _id } = this.urlParams;\n\t\t\t\tconst { department, agents } = this.bodyParams;\n\n\t\t\t\tlet success;\n\t\t\t\tif (permissionToSave) {\n\t\t\t\t\tsuccess = Livechat.saveDepartment(_id, department);\n\t\t\t\t}\n\n\t\t\t\tif (success && agents && permissionToAddAgents) {\n\t\t\t\t\tsuccess = Livechat.saveDepartmentAgents(_id, { upsert: agents });\n\t\t\t\t}\n\n\t\t\t\tif (success) {\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tdepartment: LivechatDepartment.findOneById(_id),\n\t\t\t\t\t\tagents: LivechatDepartmentAgents.find({ departmentId: _id }).fetch(),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t\tdelete() {\n\t\t\tif (!hasPermission(this.userId, 'manage-livechat-departments') && !hasPermission(this.userId, 'remove-livechat-department')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcheck(this.urlParams, {\n\t\t\t\t\t_id: String,\n\t\t\t\t});\n\n\t\t\t\tif (Livechat.removeDepartment(this.urlParams._id)) {\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\t\t\t\treturn API.v1.failure();\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.autocomplete',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { selector, onlyMyDepartments } = this.queryParams;\n\t\t\tif (!selector) {\n\t\t\t\treturn API.v1.failure(\"The 'selector' param is required\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindDepartmentsToAutocomplete({\n\t\t\t\t\t\tuid: this.userId,\n\t\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t\t\tonlyMyDepartments: onlyMyDepartments === 'true',\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute<'livechat/department/:departmentId/agents', { authRequired: true }>(\n\t'livechat/department/:departmentId/agents',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\tdepartmentId: String,\n\t\t\t});\n\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\n\t\t\tconst agents = await findDepartmentAgents({\n\t\t\t\tuserId: this.userId,\n\t\t\t\tdepartmentId: this.urlParams.departmentId,\n\t\t\t\tpagination: {\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tsort,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn API.v1.success(agents);\n\t\t},\n\t\tpost() {\n\t\t\tif (!hasPermission(this.userId, 'manage-livechat-departments') || !hasPermission(this.userId, 'add-livechat-department-agents')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tcheck(this.urlParams, {\n\t\t\t\tdepartmentId: String,\n\t\t\t});\n\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tupsert: Array,\n\t\t\t\t\tremove: Array,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tLivechat.saveDepartmentAgents(this.urlParams.departmentId, this.bodyParams);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/department.listByIds',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { ids } = this.queryParams;\n\t\t\tconst { fields } = this.parseJsonQuery();\n\t\t\tif (!ids) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param is required\");\n\t\t\t}\n\t\t\tif (!Array.isArray(ids)) {\n\t\t\t\treturn API.v1.failure(\"The 'ids' param must be an array\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindDepartmentsBetweenIds({\n\t\t\t\t\t\tuid: this.userId,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tfields,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"ad033b38637650d18ee1d3c173d94656e96e8d3e"}

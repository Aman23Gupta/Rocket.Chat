{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/deleteMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/deleteMessage.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/deleteMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/deleteMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/deleteMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { FileUpload } from '../../../file-upload/server';\nimport { settings } from '../../../settings/server';\nimport { Messages, Rooms } from '../../../models/server';\nimport { Uploads } from '../../../models/server/raw';\nimport { Notifications } from '../../../notifications/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Apps } from '../../../apps/server';\nimport { IMessage } from '../../../../definition/IMessage';\nimport { IUser } from '../../../../definition/IUser';\n\nexport const deleteMessage = async function (message: IMessage, user: IUser): Promise<void> {\n\tconst deletedMsg = Messages.findOneById(message._id);\n\tconst isThread = deletedMsg.tcount > 0;\n\tconst keepHistory = settings.get('Message_KeepHistory') || isThread;\n\tconst showDeletedStatus = settings.get('Message_ShowDeletedStatus') || isThread;\n\tconst bridges = Apps?.isLoaded() && Apps.getBridges();\n\n\tif (deletedMsg && bridges) {\n\t\tconst prevent = Promise.await(bridges.getListenerBridge().messageEvent('IPreMessageDeletePrevent', deletedMsg));\n\t\tif (prevent) {\n\t\t\tthrow new Meteor.Error('error-app-prevented-deleting', 'A Rocket.Chat App prevented the message deleting.');\n\t\t}\n\t}\n\n\tif (deletedMsg.tmid) {\n\t\tMessages.decreaseReplyCountById(deletedMsg.tmid, -1);\n\t}\n\n\tconst files = (message.files || [message.file]).filter(Boolean); // Keep compatibility with old messages\n\n\tif (keepHistory) {\n\t\tif (showDeletedStatus) {\n\t\t\tMessages.cloneAndSaveAsHistoryById(message._id, user);\n\t\t} else {\n\t\t\tMessages.setHiddenById(message._id, true);\n\t\t}\n\n\t\tfor await (const file of files) {\n\t\t\tfile?._id && (await Uploads.update({ _id: file._id }, { $set: { _hidden: true } }));\n\t\t}\n\t} else {\n\t\tif (!showDeletedStatus) {\n\t\t\tMessages.removeById(message._id);\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tfile?._id && FileUpload.getStore('Uploads').deleteById(file._id);\n\t\t});\n\t}\n\n\tconst room = Rooms.findOneById(message.rid, { fields: { lastMessage: 1, prid: 1, mid: 1 } });\n\tcallbacks.run('afterDeleteMessage', deletedMsg, room);\n\n\t// update last message\n\tif (settings.get('Store_Last_Message')) {\n\t\tif (!room.lastMessage || room.lastMessage._id === message._id) {\n\t\t\tRooms.resetLastMessageById(message.rid, message._id);\n\t\t}\n\t}\n\n\t// decrease message count\n\tRooms.decreaseMessageCountById(message.rid, 1);\n\n\tif (showDeletedStatus) {\n\t\tMessages.setAsDeletedByIdAndUser(message._id, user);\n\t} else {\n\t\tNotifications.notifyRoom(message.rid, 'deleteMessage', { _id: message._id });\n\t}\n\n\tif (bridges) {\n\t\tbridges.getListenerBridge().messageEvent('IPostMessageDeleted', deletedMsg);\n\t}\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/deleteMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/deleteMessage.ts"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nmodule.export({\n  deleteMessage: () => deleteMessage\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet FileUpload;\nmodule.link(\"../../../file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet Messages, Rooms;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 3);\nlet Uploads;\nmodule.link(\"../../../models/server/raw\", {\n  Uploads(v) {\n    Uploads = v;\n  }\n\n}, 4);\nlet Notifications;\nmodule.link(\"../../../notifications/server\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 5);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 6);\nlet Apps;\nmodule.link(\"../../../apps/server\", {\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 7);\n\nconst deleteMessage = function (message, user) {\n  return Promise.asyncApply(() => {\n    var _Apps;\n\n    const deletedMsg = Messages.findOneById(message._id);\n    const isThread = deletedMsg.tcount > 0;\n    const keepHistory = settings.get('Message_KeepHistory') || isThread;\n    const showDeletedStatus = settings.get('Message_ShowDeletedStatus') || isThread;\n    const bridges = ((_Apps = Apps) === null || _Apps === void 0 ? void 0 : _Apps.isLoaded()) && Apps.getBridges();\n\n    if (deletedMsg && bridges) {\n      const prevent = Promise.await(bridges.getListenerBridge().messageEvent('IPreMessageDeletePrevent', deletedMsg));\n\n      if (prevent) {\n        throw new Meteor.Error('error-app-prevented-deleting', 'A Rocket.Chat App prevented the message deleting.');\n      }\n    }\n\n    if (deletedMsg.tmid) {\n      Messages.decreaseReplyCountById(deletedMsg.tmid, -1);\n    }\n\n    const files = (message.files || [message.file]).filter(Boolean); // Keep compatibility with old messages\n\n    if (keepHistory) {\n      if (showDeletedStatus) {\n        Messages.cloneAndSaveAsHistoryById(message._id, user);\n      } else {\n        Messages.setHiddenById(message._id, true);\n      }\n\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(files), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n          const file = _step.value;\n          (file === null || file === void 0 ? void 0 : file._id) && Promise.await(Uploads.update({\n            _id: file._id\n          }, {\n            $set: {\n              _hidden: true\n            }\n          }));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            Promise.await(_iterator.return());\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else {\n      if (!showDeletedStatus) {\n        Messages.removeById(message._id);\n      }\n\n      files.forEach(file => {\n        (file === null || file === void 0 ? void 0 : file._id) && FileUpload.getStore('Uploads').deleteById(file._id);\n      });\n    }\n\n    const room = Rooms.findOneById(message.rid, {\n      fields: {\n        lastMessage: 1,\n        prid: 1,\n        mid: 1\n      }\n    });\n    callbacks.run('afterDeleteMessage', deletedMsg, room); // update last message\n\n    if (settings.get('Store_Last_Message')) {\n      if (!room.lastMessage || room.lastMessage._id === message._id) {\n        Rooms.resetLastMessageById(message.rid, message._id);\n      }\n    } // decrease message count\n\n\n    Rooms.decreaseMessageCountById(message.rid, 1);\n\n    if (showDeletedStatus) {\n      Messages.setAsDeletedByIdAndUser(message._id, user);\n    } else {\n      Notifications.notifyRoom(message.rid, 'deleteMessage', {\n        _id: message._id\n      });\n    }\n\n    if (bridges) {\n      bridges.getListenerBridge().messageEvent('IPostMessageDeleted', deletedMsg);\n    }\n  });\n};","map":{"version":3,"sources":["app/lib/server/functions/deleteMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { FileUpload } from '../../../file-upload/server';\nimport { settings } from '../../../settings/server';\nimport { Messages, Rooms } from '../../../models/server';\nimport { Uploads } from '../../../models/server/raw';\nimport { Notifications } from '../../../notifications/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Apps } from '../../../apps/server';\nimport { IMessage } from '../../../../definition/IMessage';\nimport { IUser } from '../../../../definition/IUser';\n\nexport const deleteMessage = async function (message: IMessage, user: IUser): Promise<void> {\n\tconst deletedMsg = Messages.findOneById(message._id);\n\tconst isThread = deletedMsg.tcount > 0;\n\tconst keepHistory = settings.get('Message_KeepHistory') || isThread;\n\tconst showDeletedStatus = settings.get('Message_ShowDeletedStatus') || isThread;\n\tconst bridges = Apps?.isLoaded() && Apps.getBridges();\n\n\tif (deletedMsg && bridges) {\n\t\tconst prevent = Promise.await(bridges.getListenerBridge().messageEvent('IPreMessageDeletePrevent', deletedMsg));\n\t\tif (prevent) {\n\t\t\tthrow new Meteor.Error('error-app-prevented-deleting', 'A Rocket.Chat App prevented the message deleting.');\n\t\t}\n\t}\n\n\tif (deletedMsg.tmid) {\n\t\tMessages.decreaseReplyCountById(deletedMsg.tmid, -1);\n\t}\n\n\tconst files = (message.files || [message.file]).filter(Boolean); // Keep compatibility with old messages\n\n\tif (keepHistory) {\n\t\tif (showDeletedStatus) {\n\t\t\tMessages.cloneAndSaveAsHistoryById(message._id, user);\n\t\t} else {\n\t\t\tMessages.setHiddenById(message._id, true);\n\t\t}\n\n\t\tfor await (const file of files) {\n\t\t\tfile?._id && (await Uploads.update({ _id: file._id }, { $set: { _hidden: true } }));\n\t\t}\n\t} else {\n\t\tif (!showDeletedStatus) {\n\t\t\tMessages.removeById(message._id);\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tfile?._id && FileUpload.getStore('Uploads').deleteById(file._id);\n\t\t});\n\t}\n\n\tconst room = Rooms.findOneById(message.rid, { fields: { lastMessage: 1, prid: 1, mid: 1 } });\n\tcallbacks.run('afterDeleteMessage', deletedMsg, room);\n\n\t// update last message\n\tif (settings.get('Store_Last_Message')) {\n\t\tif (!room.lastMessage || room.lastMessage._id === message._id) {\n\t\t\tRooms.resetLastMessageById(message.rid, message._id);\n\t\t}\n\t}\n\n\t// decrease message count\n\tRooms.decreaseMessageCountById(message.rid, 1);\n\n\tif (showDeletedStatus) {\n\t\tMessages.setAsDeletedByIdAndUser(message._id, user);\n\t} else {\n\t\tNotifications.notifyRoom(message.rid, 'deleteMessage', { _id: message._id });\n\t}\n\n\tif (bridges) {\n\t\tbridges.getListenerBridge().messageEvent('IPostMessageDeleted', deletedMsg);\n\t}\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"714a30b62528e8c6c34a3f3906be57afd755020e"}

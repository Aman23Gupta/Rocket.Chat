{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/parsers/LogoutResponse.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/lib/parsers/LogoutResponse.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/parsers/LogoutResponse.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/parsers/LogoutResponse.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/parsers/LogoutResponse.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AAIrC,MAAM,OAAO,oBAAoB;IAChC,sBAAsB,CAA0B;IAEhD,YAAY,sBAA+C;QAC1D,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;IACtD,CAAC;IAEM,QAAQ,CAAC,SAAiB,EAAE,QAAyC;QAC3E,SAAS,CAAC,GAAG,CAAC,mBAAmB,SAAS,EAAE,CAAC,CAAC;QAE9C,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,eAAe,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC1E,IAAI,CAAC,GAAG,EAAE;YACT,OAAO,QAAQ,CAAC,cAAc,CAAC,CAAC;SAChC;QAED,MAAM,QAAQ,GAAG,GAAG,CAAC,sBAAsB,CAAC,sCAAsC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QACzG,IAAI,CAAC,QAAQ,EAAE;YACd,OAAO,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;SAC3C;QAED,oDAAoD;QACpD,IAAI,YAAY,CAAC;QACjB,IAAI;YACH,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;YACrD,SAAS,CAAC,GAAG,CAAC,mBAAmB,YAAY,EAAE,CAAC,CAAC;SACjD;QAAC,OAAO,CAAC,EAAE;YACX,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YACpC,MAAM,GAAG,GAAG,GAAG,CAAC,sBAAsB,CAAC,sCAAsC,EAAE,eAAe,CAAC,CAAC;YAChG,SAAS,CAAC,GAAG,CAAC,mFAAmF,GAAG,EAAE,CAAC,CAAC;SACxG;QAED,IAAI,CAAC,YAAY,EAAE;YAClB,OAAO,QAAQ,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;SACtD;QAED,MAAM,iBAAiB,GAAG,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;YAC/B,OAAO,QAAQ,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC;SAC5D;QAED,OAAO,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACrC,CAAC;CACD","sourcesContent":["import xmldom from 'xmldom';\n\nimport { SAMLUtils } from '../Utils';\nimport { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport { ILogoutResponseValidateCallback } from '../../definition/callbacks';\n\nexport class LogoutResponseParser {\n\tserviceProviderOptions: IServiceProviderOptions;\n\n\tconstructor(serviceProviderOptions: IServiceProviderOptions) {\n\t\tthis.serviceProviderOptions = serviceProviderOptions;\n\t}\n\n\tpublic validate(xmlString: string, callback: ILogoutResponseValidateCallback): void {\n\t\tSAMLUtils.log(`LogoutResponse: ${xmlString}`);\n\n\t\tconst doc = new xmldom.DOMParser().parseFromString(xmlString, 'text/xml');\n\t\tif (!doc) {\n\t\t\treturn callback('No Doc Found');\n\t\t}\n\n\t\tconst response = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse')[0];\n\t\tif (!response) {\n\t\t\treturn callback('No Response Found', null);\n\t\t}\n\n\t\t// TBD. Check if this msg corresponds to one we sent\n\t\tlet inResponseTo;\n\t\ttry {\n\t\t\tinResponseTo = response.getAttribute('InResponseTo');\n\t\t\tSAMLUtils.log(`In Response to: ${inResponseTo}`);\n\t\t} catch (e) {\n\t\t\tSAMLUtils.log(`Caught error: ${e}`);\n\t\t\tconst msg = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'StatusMessage');\n\t\t\tSAMLUtils.log(`Unexpected msg from IDP. Does your session still exist at IDP? Idp returned: \\n ${msg}`);\n\t\t}\n\n\t\tif (!inResponseTo) {\n\t\t\treturn callback('Unexpected Response from IDP', null);\n\t\t}\n\n\t\tconst statusValidateObj = SAMLUtils.validateStatus(doc);\n\t\tif (!statusValidateObj.success) {\n\t\t\treturn callback('Error. Logout not confirmed by IDP', null);\n\t\t}\n\n\t\treturn callback(null, inResponseTo);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/parsers/LogoutResponse.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/lib/parsers/LogoutResponse.ts"}},"code":"module.export({\n  LogoutResponseParser: () => LogoutResponseParser\n});\nlet xmldom;\nmodule.link(\"xmldom\", {\n  default(v) {\n    xmldom = v;\n  }\n\n}, 0);\nlet SAMLUtils;\nmodule.link(\"../Utils\", {\n  SAMLUtils(v) {\n    SAMLUtils = v;\n  }\n\n}, 1);\n\nclass LogoutResponseParser {\n  constructor(serviceProviderOptions) {\n    this.serviceProviderOptions = void 0;\n    this.serviceProviderOptions = serviceProviderOptions;\n  }\n\n  validate(xmlString, callback) {\n    SAMLUtils.log(\"LogoutResponse: \".concat(xmlString));\n    const doc = new xmldom.DOMParser().parseFromString(xmlString, 'text/xml');\n\n    if (!doc) {\n      return callback('No Doc Found');\n    }\n\n    const response = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse')[0];\n\n    if (!response) {\n      return callback('No Response Found', null);\n    } // TBD. Check if this msg corresponds to one we sent\n\n\n    let inResponseTo;\n\n    try {\n      inResponseTo = response.getAttribute('InResponseTo');\n      SAMLUtils.log(\"In Response to: \".concat(inResponseTo));\n    } catch (e) {\n      SAMLUtils.log(\"Caught error: \".concat(e));\n      const msg = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'StatusMessage');\n      SAMLUtils.log(\"Unexpected msg from IDP. Does your session still exist at IDP? Idp returned: \\n \".concat(msg));\n    }\n\n    if (!inResponseTo) {\n      return callback('Unexpected Response from IDP', null);\n    }\n\n    const statusValidateObj = SAMLUtils.validateStatus(doc);\n\n    if (!statusValidateObj.success) {\n      return callback('Error. Logout not confirmed by IDP', null);\n    }\n\n    return callback(null, inResponseTo);\n  }\n\n}","map":{"version":3,"sources":["app/meteor-accounts-saml/server/lib/parsers/LogoutResponse.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAa;AAAA,EAAA,oBAAe,EAAA,MAAA;AAAf,CAAb;AAA4B,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAMtB,MAAO,oBAAP,CAA2B;AAGhC,EAAA,WAAA,CAAY,sBAAZ,EAA2D;AAAA,SAF3D,sBAE2D;AAC1D,SAAK,sBAAL,GAA8B,sBAA9B;AACA;;AAEM,EAAA,QAAQ,CAAC,SAAD,EAAoB,QAApB,EAA6D;AAC3E,IAAA,SAAS,CAAC,GAAV,2BAAiC,SAAjC;AAEA,UAAM,GAAG,GAAG,IAAI,MAAM,CAAC,SAAX,GAAuB,eAAvB,CAAuC,SAAvC,EAAkD,UAAlD,CAAZ;;AACA,QAAI,CAAC,GAAL,EAAU;AACT,aAAO,QAAQ,CAAC,cAAD,CAAf;AACA;;AAED,UAAM,QAAQ,GAAG,GAAG,CAAC,sBAAJ,CAA2B,sCAA3B,EAAmE,gBAAnE,EAAqF,CAArF,CAAjB;;AACA,QAAI,CAAC,QAAL,EAAe;AACd,aAAO,QAAQ,CAAC,mBAAD,EAAsB,IAAtB,CAAf;AACA,KAX0E,CAa3E;;;AACA,QAAI,YAAJ;;AACA,QAAI;AACH,MAAA,YAAY,GAAG,QAAQ,CAAC,YAAT,CAAsB,cAAtB,CAAf;AACA,MAAA,SAAS,CAAC,GAAV,2BAAiC,YAAjC;AACA,KAHD,CAGE,OAAO,CAAP,EAAU;AACX,MAAA,SAAS,CAAC,GAAV,yBAA+B,CAA/B;AACA,YAAM,GAAG,GAAG,GAAG,CAAC,sBAAJ,CAA2B,sCAA3B,EAAmE,eAAnE,CAAZ;AACA,MAAA,SAAS,CAAC,GAAV,2FAAiG,GAAjG;AACA;;AAED,QAAI,CAAC,YAAL,EAAmB;AAClB,aAAO,QAAQ,CAAC,8BAAD,EAAiC,IAAjC,CAAf;AACA;;AAED,UAAM,iBAAiB,GAAG,SAAS,CAAC,cAAV,CAAyB,GAAzB,CAA1B;;AACA,QAAI,CAAC,iBAAiB,CAAC,OAAvB,EAAgC;AAC/B,aAAO,QAAQ,CAAC,oCAAD,EAAuC,IAAvC,CAAf;AACA;;AAED,WAAO,QAAQ,CAAC,IAAD,EAAO,YAAP,CAAf;AACA;;AAzC+B","sourcesContent":["import xmldom from 'xmldom';\n\nimport { SAMLUtils } from '../Utils';\nimport { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport { ILogoutResponseValidateCallback } from '../../definition/callbacks';\n\nexport class LogoutResponseParser {\n\tserviceProviderOptions: IServiceProviderOptions;\n\n\tconstructor(serviceProviderOptions: IServiceProviderOptions) {\n\t\tthis.serviceProviderOptions = serviceProviderOptions;\n\t}\n\n\tpublic validate(xmlString: string, callback: ILogoutResponseValidateCallback): void {\n\t\tSAMLUtils.log(`LogoutResponse: ${xmlString}`);\n\n\t\tconst doc = new xmldom.DOMParser().parseFromString(xmlString, 'text/xml');\n\t\tif (!doc) {\n\t\t\treturn callback('No Doc Found');\n\t\t}\n\n\t\tconst response = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse')[0];\n\t\tif (!response) {\n\t\t\treturn callback('No Response Found', null);\n\t\t}\n\n\t\t// TBD. Check if this msg corresponds to one we sent\n\t\tlet inResponseTo;\n\t\ttry {\n\t\t\tinResponseTo = response.getAttribute('InResponseTo');\n\t\t\tSAMLUtils.log(`In Response to: ${inResponseTo}`);\n\t\t} catch (e) {\n\t\t\tSAMLUtils.log(`Caught error: ${e}`);\n\t\t\tconst msg = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'StatusMessage');\n\t\t\tSAMLUtils.log(`Unexpected msg from IDP. Does your session still exist at IDP? Idp returned: \\n ${msg}`);\n\t\t}\n\n\t\tif (!inResponseTo) {\n\t\t\treturn callback('Unexpected Response from IDP', null);\n\t\t}\n\n\t\tconst statusValidateObj = SAMLUtils.validateStatus(doc);\n\t\tif (!statusValidateObj.success) {\n\t\t\treturn callback('Error. Logout not confirmed by IDP', null);\n\t\t}\n\n\t\treturn callback(null, inResponseTo);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"679a526e10284c5b90ec4f8a87b6f845efe80e9d"}

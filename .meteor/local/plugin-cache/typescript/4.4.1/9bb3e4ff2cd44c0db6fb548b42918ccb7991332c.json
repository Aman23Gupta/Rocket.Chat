{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/rooms.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/rooms.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/rooms.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/rooms.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/rooms.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,GAAG,EAAE,MAAM,+BAA+B,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,yCAAyC,CAAC;AACxE,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AAChF,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAG/D,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,sBAAsB,EACtB,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB;IACC,IAAI;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACpC,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,uBAAuB,CAAC,EAAE;YACzE,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACxC;QAED,MAAM,IAAI,GAAqB,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACjE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE;YAC5B,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;SACzC;QAED,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE;YAC5B,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,2EAA2E,CAAC,CAAC;SACnG;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACf,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,kDAAkD,CAAC,CAAC;SAC1E;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;SACtC;QAED,MAAM,YAAY,GAAG,aAAa,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1F,IAAI,CAAC,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,8BAA8B,CAAC,EAAE;YACjF,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACxC;QAED,MAAM,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAG,IAAY,CAAC,IAAI,EAAE,CAAC;QACtF,MAAM,OAAO,GAAG,OAAO,CAAC,EAAE,CAAC,8BAA8B,EAAE;YAC1D,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE;SAC9C,CAAC,CAAC;QAEH,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QAE5D,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;CACD,CACD,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { API } from '../../../../../app/api/server';\nimport { hasPermission } from '../../../../../app/authorization/server';\nimport { Subscriptions, LivechatRooms } from '../../../../../app/models/server';\nimport { LivechatEnterprise } from '../lib/LivechatEnterprise';\nimport { IOmnichannelRoom } from '../../../../../definition/IRoom';\n\nAPI.v1.addRoute(\n\t'livechat/room.onHold',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { roomId } = this.bodyParams;\n\t\t\tif (!roomId || roomId.trim() === '') {\n\t\t\t\treturn API.v1.failure('Invalid room Id');\n\t\t\t}\n\n\t\t\tif (!this.userId || !hasPermission(this.userId, 'on-hold-livechat-room')) {\n\t\t\t\treturn API.v1.failure('Not authorized');\n\t\t\t}\n\n\t\t\tconst room: IOmnichannelRoom = LivechatRooms.findOneById(roomId);\n\t\t\tif (!room || room.t !== 'l') {\n\t\t\t\treturn API.v1.failure('Invalid room Id');\n\t\t\t}\n\n\t\t\tif (room.lastMessage?.token) {\n\t\t\t\treturn API.v1.failure('You cannot place chat on-hold, when the Contact has sent the last message');\n\t\t\t}\n\n\t\t\tif (room.onHold) {\n\t\t\t\treturn API.v1.failure('Room is already On-Hold');\n\t\t\t}\n\n\t\t\tif (!room.open) {\n\t\t\t\treturn API.v1.failure('Room cannot be placed on hold after being closed');\n\t\t\t}\n\n\t\t\tconst user = Meteor.user();\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.failure('Invalid user');\n\t\t\t}\n\n\t\t\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(roomId, user._id, { _id: 1 });\n\t\t\tif (!subscription && !hasPermission(this.userId, 'on-hold-others-livechat-room')) {\n\t\t\t\treturn API.v1.failure('Not authorized');\n\t\t\t}\n\n\t\t\tconst onHoldBy = { _id: user._id, username: user.username, name: (user as any).name };\n\t\t\tconst comment = TAPi18n.__('Omnichannel_On_Hold_manually', {\n\t\t\t\tuser: onHoldBy.name || `@${onHoldBy.username}`,\n\t\t\t});\n\n\t\t\tLivechatEnterprise.placeRoomOnHold(room, comment, onHoldBy);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/rooms.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/rooms.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../../../../../app/api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nlet hasPermission;\nmodule.link(\"../../../../../app/authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 3);\nlet Subscriptions, LivechatRooms;\nmodule.link(\"../../../../../app/models/server\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 4);\nlet LivechatEnterprise;\nmodule.link(\"../lib/LivechatEnterprise\", {\n  LivechatEnterprise(v) {\n    LivechatEnterprise = v;\n  }\n\n}, 5);\nAPI.v1.addRoute('livechat/room.onHold', {\n  authRequired: true\n}, {\n  post() {\n    var _room$lastMessage;\n\n    const {\n      roomId\n    } = this.bodyParams;\n\n    if (!roomId || roomId.trim() === '') {\n      return API.v1.failure('Invalid room Id');\n    }\n\n    if (!this.userId || !hasPermission(this.userId, 'on-hold-livechat-room')) {\n      return API.v1.failure('Not authorized');\n    }\n\n    const room = LivechatRooms.findOneById(roomId);\n\n    if (!room || room.t !== 'l') {\n      return API.v1.failure('Invalid room Id');\n    }\n\n    if ((_room$lastMessage = room.lastMessage) !== null && _room$lastMessage !== void 0 && _room$lastMessage.token) {\n      return API.v1.failure('You cannot place chat on-hold, when the Contact has sent the last message');\n    }\n\n    if (room.onHold) {\n      return API.v1.failure('Room is already On-Hold');\n    }\n\n    if (!room.open) {\n      return API.v1.failure('Room cannot be placed on hold after being closed');\n    }\n\n    const user = Meteor.user();\n\n    if (!user) {\n      return API.v1.failure('Invalid user');\n    }\n\n    const subscription = Subscriptions.findOneByRoomIdAndUserId(roomId, user._id, {\n      _id: 1\n    });\n\n    if (!subscription && !hasPermission(this.userId, 'on-hold-others-livechat-room')) {\n      return API.v1.failure('Not authorized');\n    }\n\n    const onHoldBy = {\n      _id: user._id,\n      username: user.username,\n      name: user.name\n    };\n\n    const comment = TAPi18n.__('Omnichannel_On_Hold_manually', {\n      user: onHoldBy.name || \"@\".concat(onHoldBy.username)\n    });\n\n    LivechatEnterprise.placeRoomOnHold(room, comment, onHoldBy);\n    return API.v1.success();\n  }\n\n});","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/api/rooms.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { API } from '../../../../../app/api/server';\nimport { hasPermission } from '../../../../../app/authorization/server';\nimport { Subscriptions, LivechatRooms } from '../../../../../app/models/server';\nimport { LivechatEnterprise } from '../lib/LivechatEnterprise';\nimport { IOmnichannelRoom } from '../../../../../definition/IRoom';\n\nAPI.v1.addRoute(\n\t'livechat/room.onHold',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { roomId } = this.bodyParams;\n\t\t\tif (!roomId || roomId.trim() === '') {\n\t\t\t\treturn API.v1.failure('Invalid room Id');\n\t\t\t}\n\n\t\t\tif (!this.userId || !hasPermission(this.userId, 'on-hold-livechat-room')) {\n\t\t\t\treturn API.v1.failure('Not authorized');\n\t\t\t}\n\n\t\t\tconst room: IOmnichannelRoom = LivechatRooms.findOneById(roomId);\n\t\t\tif (!room || room.t !== 'l') {\n\t\t\t\treturn API.v1.failure('Invalid room Id');\n\t\t\t}\n\n\t\t\tif (room.lastMessage?.token) {\n\t\t\t\treturn API.v1.failure('You cannot place chat on-hold, when the Contact has sent the last message');\n\t\t\t}\n\n\t\t\tif (room.onHold) {\n\t\t\t\treturn API.v1.failure('Room is already On-Hold');\n\t\t\t}\n\n\t\t\tif (!room.open) {\n\t\t\t\treturn API.v1.failure('Room cannot be placed on hold after being closed');\n\t\t\t}\n\n\t\t\tconst user = Meteor.user();\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.failure('Invalid user');\n\t\t\t}\n\n\t\t\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(roomId, user._id, { _id: 1 });\n\t\t\tif (!subscription && !hasPermission(this.userId, 'on-hold-others-livechat-room')) {\n\t\t\t\treturn API.v1.failure('Not authorized');\n\t\t\t}\n\n\t\t\tconst onHoldBy = { _id: user._id, username: user.username, name: (user as any).name };\n\t\t\tconst comment = TAPi18n.__('Omnichannel_On_Hold_manually', {\n\t\t\t\tuser: onHoldBy.name || `@${onHoldBy.username}`,\n\t\t\t});\n\n\t\t\tLivechatEnterprise.placeRoomOnHold(room, comment, onHoldBy);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"9bb3e4ff2cd44c0db6fb548b42918ccb7991332c"}

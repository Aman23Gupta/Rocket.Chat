{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/BannersDismiss.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/BannersDismiss.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/BannersDismiss.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/BannersDismiss.ts","sourceRoot":"","sources":["app/models/server/raw/BannersDismiss.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,iBAAkB,SAAQ,OAAuB;IACjC;IAA5B,YAA4B,GAA+B,EAAE,KAAkC;QAC9F,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QADS,QAAG,GAAH,GAAG,CAA4B;QAG1D,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IAgBD,uBAAuB,CACtB,MAAc,EACd,SAAmB,EACnB,OAAuI;QAEvI,MAAM,KAAK,GAAG;YACb,MAAM;YACN,QAAQ,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE;SAC5B,CAAC;QAEF,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvE,CAAC;CACD","sourcesContent":["import { Collection, Cursor, FindOneOptions, WithoutProjection } from 'mongodb';\n\nimport { IBannerDismiss } from '../../../../definition/IBanner';\nimport { BaseRaw } from './BaseRaw';\n\nexport class BannersDismissRaw extends BaseRaw<IBannerDismiss> {\n\tconstructor(public readonly col: Collection<IBannerDismiss>, trash?: Collection<IBannerDismiss>) {\n\t\tsuper(col, trash);\n\n\t\tthis.col.createIndexes([{ key: { userId: 1, bannerId: 1 } }]);\n\t}\n\n\tfindByUserIdAndBannerId(userId: string, bannerIds: string[]): Cursor<IBannerDismiss>;\n\n\tfindByUserIdAndBannerId(\n\t\tuserId: string,\n\t\tbannerIds: string[],\n\t\toptions: WithoutProjection<FindOneOptions<IBannerDismiss>>,\n\t): Cursor<IBannerDismiss>;\n\n\tfindByUserIdAndBannerId<P>(\n\t\tuserId: string,\n\t\tbannerIds: string[],\n\t\toptions: FindOneOptions<P extends IBannerDismiss ? IBannerDismiss : P>,\n\t): Cursor<P>;\n\n\tfindByUserIdAndBannerId<P>(\n\t\tuserId: string,\n\t\tbannerIds: string[],\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<IBannerDismiss>> | FindOneOptions<P extends IBannerDismiss ? IBannerDismiss : P>,\n\t): Cursor<P> | Cursor<IBannerDismiss> {\n\t\tconst query = {\n\t\t\tuserId,\n\t\t\tbannerId: { $in: bannerIds },\n\t\t};\n\n\t\treturn options ? this.col.find(query, options) : this.col.find(query);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/BannersDismiss.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/BannersDismiss.ts"}},"code":"module.export({\n  BannersDismissRaw: () => BannersDismissRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass BannersDismissRaw extends BaseRaw {\n  constructor(col, trash) {\n    super(col, trash);\n    this.col = void 0;\n    this.col = col;\n    this.col.createIndexes([{\n      key: {\n        userId: 1,\n        bannerId: 1\n      }\n    }]);\n  }\n\n  findByUserIdAndBannerId(userId, bannerIds, options) {\n    const query = {\n      userId,\n      bannerId: {\n        $in: bannerIds\n      }\n    };\n    return options ? this.col.find(query, options) : this.col.find(query);\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/BannersDismiss.ts"],"names":[],"mappings":"AAGA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,iBAAe,EAAA,MAAY;AAA3B,CAAT;AAAoC,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAE9B,MAAO,iBAAP,SAAiC,OAAjC,CAAwD;AAC7D,EAAA,WAAA,CAA4B,GAA5B,EAA6D,KAA7D,EAA+F;AAC9F,UAAM,GAAN,EAAW,KAAX;AAD8F,SAAnE,GAAmE;AAAnE,SAAA,GAAA,GAAA,GAAA;AAG3B,SAAK,GAAL,CAAS,aAAT,CAAuB,CAAC;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,MAAM,EAAE,CAAV;AAAa,QAAA,QAAQ,EAAE;AAAvB;AAAP,KAAD,CAAvB;AACA;;AAgBD,EAAA,uBAAuB,CACtB,MADsB,EAEtB,SAFsB,EAGtB,OAHsB,EAGiH;AAEvI,UAAM,KAAK,GAAG;AACb,MAAA,MADa;AAEb,MAAA,QAAQ,EAAE;AAAE,QAAA,GAAG,EAAE;AAAP;AAFG,KAAd;AAKA,WAAO,OAAO,GAAG,KAAK,GAAL,CAAS,IAAT,CAAc,KAAd,EAAqB,OAArB,CAAH,GAAmC,KAAK,GAAL,CAAS,IAAT,CAAc,KAAd,CAAjD;AACA;;AAhC4D","sourcesContent":["import { Collection, Cursor, FindOneOptions, WithoutProjection } from 'mongodb';\n\nimport { IBannerDismiss } from '../../../../definition/IBanner';\nimport { BaseRaw } from './BaseRaw';\n\nexport class BannersDismissRaw extends BaseRaw<IBannerDismiss> {\n\tconstructor(public readonly col: Collection<IBannerDismiss>, trash?: Collection<IBannerDismiss>) {\n\t\tsuper(col, trash);\n\n\t\tthis.col.createIndexes([{ key: { userId: 1, bannerId: 1 } }]);\n\t}\n\n\tfindByUserIdAndBannerId(userId: string, bannerIds: string[]): Cursor<IBannerDismiss>;\n\n\tfindByUserIdAndBannerId(\n\t\tuserId: string,\n\t\tbannerIds: string[],\n\t\toptions: WithoutProjection<FindOneOptions<IBannerDismiss>>,\n\t): Cursor<IBannerDismiss>;\n\n\tfindByUserIdAndBannerId<P>(\n\t\tuserId: string,\n\t\tbannerIds: string[],\n\t\toptions: FindOneOptions<P extends IBannerDismiss ? IBannerDismiss : P>,\n\t): Cursor<P>;\n\n\tfindByUserIdAndBannerId<P>(\n\t\tuserId: string,\n\t\tbannerIds: string[],\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<IBannerDismiss>> | FindOneOptions<P extends IBannerDismiss ? IBannerDismiss : P>,\n\t): Cursor<P> | Cursor<IBannerDismiss> {\n\t\tconst query = {\n\t\t\tuserId,\n\t\t\tbannerId: { $in: bannerIds },\n\t\t};\n\n\t\treturn options ? this.col.find(query, options) : this.col.find(query);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"7448a6c958a081feb0ec148da2189f7a1a232b80"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/AutoCloseOnHoldScheduler.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/lib/AutoCloseOnHoldScheduler.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/AutoCloseOnHoldScheduler.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/AutoCloseOnHoldScheduler.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/AutoCloseOnHoldScheduler.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AAExE,MAAM,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AACtD,MAAM,cAAc,GAAG,0CAA0C,CAAC;AAElE,MAAM,6BAA6B;IAClC,SAAS,CAAS;IAElB,OAAO,CAAU;IAEV,IAAI;QACV,IAAI,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACP;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC;YAC3B,KAAK,EAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC,KAAa,CAAC,MAAM,CAAC,EAAE,EAAE;YAChF,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE;YAClC,kBAAkB,EAAE,CAAC;SACrB,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,MAAc,EAAE,OAAe,EAAE,OAAe;QACzE,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAElC,MAAM,OAAO,GAAG,GAAG,cAAc,IAAI,MAAM,EAAE,CAAC;QAC9C,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAE3D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3D,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;IACnE,CAAC;IAEM,KAAK,CAAC,cAAc,CAAC,MAAc;QACzC,MAAM,OAAO,GAAG,GAAG,cAAc,IAAI,MAAM,EAAE,CAAC;QAC9C,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAChD,CAAC;IAEO,KAAK,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,KAAU,EAAE;QACrD,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;QAEjC,MAAM,OAAO,GAAG;YACf,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC;YACvC,OAAO;YACP,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,SAAS;SAClB,CAAC;QAEF,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;CACD;AAED,MAAM,CAAC,MAAM,wBAAwB,GAAG,IAAI,6BAA6B,EAAE,CAAC;AAE5E,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,wBAAwB,CAAC,IAAI,EAAE,CAAC;AACjC,CAAC,CAAC,CAAC","sourcesContent":["import Agenda from 'agenda';\nimport { MongoInternals } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport moment from 'moment';\n\nimport { Livechat } from '../../../../../app/livechat/server';\nimport { LivechatRooms, Users } from '../../../../../app/models/server';\n\nconst schedulerUser = Users.findOneById('rocket.cat');\nconst SCHEDULER_NAME = 'omnichannel_auto_close_on_hold_scheduler';\n\nclass AutoCloseOnHoldSchedulerClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tpublic init(): void {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t});\n\n\t\tthis.scheduler.start();\n\t\tthis.running = true;\n\t}\n\n\tpublic async scheduleRoom(roomId: string, timeout: number, comment: string): Promise<void> {\n\t\tawait this.unscheduleRoom(roomId);\n\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tconst when = moment(new Date()).add(timeout, 's').toDate();\n\n\t\tthis.scheduler.define(jobName, this.executeJob.bind(this));\n\t\tawait this.scheduler.schedule(when, jobName, { roomId, comment });\n\t}\n\n\tpublic async unscheduleRoom(roomId: string): Promise<void> {\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tawait this.scheduler.cancel({ name: jobName });\n\t}\n\n\tprivate async executeJob({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { roomId, comment } = data;\n\n\t\tconst payload = {\n\t\t\tuser: schedulerUser,\n\t\t\troom: LivechatRooms.findOneById(roomId),\n\t\t\tcomment,\n\t\t\toptions: {},\n\t\t\tvisitor: undefined,\n\t\t};\n\n\t\tLivechat.closeRoom(payload);\n\t}\n}\n\nexport const AutoCloseOnHoldScheduler = new AutoCloseOnHoldSchedulerClass();\n\nMeteor.startup(() => {\n\tAutoCloseOnHoldScheduler.init();\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/AutoCloseOnHoldScheduler.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/lib/AutoCloseOnHoldScheduler.ts"}},"code":"module.export({\n  AutoCloseOnHoldScheduler: () => AutoCloseOnHoldScheduler\n});\nlet Agenda;\nmodule.link(\"agenda\", {\n  default(v) {\n    Agenda = v;\n  }\n\n}, 0);\nlet MongoInternals;\nmodule.link(\"meteor/mongo\", {\n  MongoInternals(v) {\n    MongoInternals = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 3);\nlet Livechat;\nmodule.link(\"../../../../../app/livechat/server\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 4);\nlet LivechatRooms, Users;\nmodule.link(\"../../../../../app/models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 5);\nconst schedulerUser = Users.findOneById('rocket.cat');\nconst SCHEDULER_NAME = 'omnichannel_auto_close_on_hold_scheduler';\n\nclass AutoCloseOnHoldSchedulerClass {\n  constructor() {\n    this.scheduler = void 0;\n    this.running = void 0;\n  }\n\n  init() {\n    if (this.running) {\n      return;\n    }\n\n    this.scheduler = new Agenda({\n      mongo: MongoInternals.defaultRemoteCollectionDriver().mongo.client.db(),\n      db: {\n        collection: SCHEDULER_NAME\n      },\n      defaultConcurrency: 1\n    });\n    this.scheduler.start();\n    this.running = true;\n  }\n\n  scheduleRoom(roomId, timeout, comment) {\n    return Promise.asyncApply(() => {\n      Promise.await(this.unscheduleRoom(roomId));\n      const jobName = \"\".concat(SCHEDULER_NAME, \"-\").concat(roomId);\n      const when = moment(new Date()).add(timeout, 's').toDate();\n      this.scheduler.define(jobName, this.executeJob.bind(this));\n      Promise.await(this.scheduler.schedule(when, jobName, {\n        roomId,\n        comment\n      }));\n    });\n  }\n\n  unscheduleRoom(roomId) {\n    return Promise.asyncApply(() => {\n      const jobName = \"\".concat(SCHEDULER_NAME, \"-\").concat(roomId);\n      Promise.await(this.scheduler.cancel({\n        name: jobName\n      }));\n    });\n  }\n\n  executeJob() {\n    return Promise.asyncApply(() => {\n      let {\n        attrs: {\n          data\n        }\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const {\n        roomId,\n        comment\n      } = data;\n      const payload = {\n        user: schedulerUser,\n        room: LivechatRooms.findOneById(roomId),\n        comment,\n        options: {},\n        visitor: undefined\n      };\n      Livechat.closeRoom(payload);\n    });\n  }\n\n}\n\nconst AutoCloseOnHoldScheduler = new AutoCloseOnHoldSchedulerClass();\nMeteor.startup(() => {\n  AutoCloseOnHoldScheduler.init();\n});","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/lib/AutoCloseOnHoldScheduler.ts"],"names":[],"mappings":"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","sourcesContent":["import Agenda from 'agenda';\nimport { MongoInternals } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport moment from 'moment';\n\nimport { Livechat } from '../../../../../app/livechat/server';\nimport { LivechatRooms, Users } from '../../../../../app/models/server';\n\nconst schedulerUser = Users.findOneById('rocket.cat');\nconst SCHEDULER_NAME = 'omnichannel_auto_close_on_hold_scheduler';\n\nclass AutoCloseOnHoldSchedulerClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tpublic init(): void {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t});\n\n\t\tthis.scheduler.start();\n\t\tthis.running = true;\n\t}\n\n\tpublic async scheduleRoom(roomId: string, timeout: number, comment: string): Promise<void> {\n\t\tawait this.unscheduleRoom(roomId);\n\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tconst when = moment(new Date()).add(timeout, 's').toDate();\n\n\t\tthis.scheduler.define(jobName, this.executeJob.bind(this));\n\t\tawait this.scheduler.schedule(when, jobName, { roomId, comment });\n\t}\n\n\tpublic async unscheduleRoom(roomId: string): Promise<void> {\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tawait this.scheduler.cancel({ name: jobName });\n\t}\n\n\tprivate async executeJob({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { roomId, comment } = data;\n\n\t\tconst payload = {\n\t\t\tuser: schedulerUser,\n\t\t\troom: LivechatRooms.findOneById(roomId),\n\t\t\tcomment,\n\t\t\toptions: {},\n\t\t\tvisitor: undefined,\n\t\t};\n\n\t\tLivechat.closeRoom(payload);\n\t}\n}\n\nexport const AutoCloseOnHoldScheduler = new AutoCloseOnHoldSchedulerClass();\n\nMeteor.startup(() => {\n\tAutoCloseOnHoldScheduler.init();\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"67540157c0b68463f5397e6fe41917d552fec63f"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatDepartment.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/LivechatDepartment.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatDepartment.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/LivechatDepartment.ts","sourceRoot":"","sources":["app/models/server/raw/LivechatDepartment.ts"],"names":[],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { FindOneOptions, Cursor, FilterQuery, WriteOpResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ILivechatDepartmentRecord } from '../../../../definition/ILivechatDepartmentRecord';\n\nexport class LivechatDepartmentRaw extends BaseRaw<ILivechatDepartmentRecord> {\n\tfindInIds(departmentsIds: string[], options: FindOneOptions<ILivechatDepartmentRecord>): Cursor<ILivechatDepartmentRecord> {\n\t\tconst query = { _id: { $in: departmentsIds } };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByNameRegexWithExceptionsAndConditions(\n\t\tsearchTerm: string,\n\t\texceptions: string[] = [],\n\t\tconditions: FilterQuery<ILivechatDepartmentRecord> = {},\n\t\toptions: FindOneOptions<ILivechatDepartmentRecord> = {},\n\t): Cursor<ILivechatDepartmentRecord> {\n\t\tif (!Array.isArray(exceptions)) {\n\t\t\texceptions = [exceptions];\n\t\t}\n\n\t\tconst nameRegex = new RegExp(`^${escapeRegExp(searchTerm).trim()}`, 'i');\n\n\t\tconst query = {\n\t\t\tname: nameRegex,\n\t\t\t_id: {\n\t\t\t\t$nin: exceptions,\n\t\t\t},\n\t\t\t...conditions,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByBusinessHourId(businessHourId: string, options: FindOneOptions<ILivechatDepartmentRecord>): Cursor<ILivechatDepartmentRecord> {\n\t\tconst query = { businessHourId };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledByBusinessHourId(\n\t\tbusinessHourId: string,\n\t\toptions: FindOneOptions<ILivechatDepartmentRecord>,\n\t): Cursor<ILivechatDepartmentRecord> {\n\t\tconst query = { businessHourId, enabled: true };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledByListOfBusinessHourIdsAndDepartmentIds(\n\t\tbusinessHourIds: string[],\n\t\tdepartmentIds: string[],\n\t\toptions: FindOneOptions<ILivechatDepartmentRecord>,\n\t): Cursor<ILivechatDepartmentRecord> {\n\t\tconst query: FilterQuery<ILivechatDepartmentRecord> = {\n\t\t\tenabled: true,\n\t\t\tbusinessHourId: {\n\t\t\t\t$in: businessHourIds,\n\t\t\t},\n\t\t\t_id: {\n\t\t\t\t$in: departmentIds,\n\t\t\t},\n\t\t};\n\t\treturn this.find(query, options);\n\t}\n\n\taddBusinessHourToDepartmentsByIds(ids: string[] = [], businessHourId: string): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tbusinessHourId,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.update(query, update, { multi: true });\n\t}\n\n\tremoveBusinessHourFromDepartmentsByIdsAndBusinessHourId(ids: string[] = [], businessHourId: string): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.update(query, update, { multi: true });\n\t}\n\n\tremoveBusinessHourFromDepartmentsByBusinessHourId(businessHourId: string): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.update(query, update, { multi: true });\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatDepartment.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/LivechatDepartment.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  LivechatDepartmentRaw: () => LivechatDepartmentRaw\n});\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 0);\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 1);\n\nclass LivechatDepartmentRaw extends BaseRaw {\n  findInIds(departmentsIds, options) {\n    const query = {\n      _id: {\n        $in: departmentsIds\n      }\n    };\n    return this.find(query, options);\n  }\n\n  findByNameRegexWithExceptionsAndConditions(searchTerm) {\n    let exceptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let conditions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    if (!Array.isArray(exceptions)) {\n      exceptions = [exceptions];\n    }\n\n    const nameRegex = new RegExp(\"^\".concat(escapeRegExp(searchTerm).trim()), 'i');\n\n    const query = _objectSpread({\n      name: nameRegex,\n      _id: {\n        $nin: exceptions\n      }\n    }, conditions);\n\n    return this.find(query, options);\n  }\n\n  findByBusinessHourId(businessHourId, options) {\n    const query = {\n      businessHourId\n    };\n    return this.find(query, options);\n  }\n\n  findEnabledByBusinessHourId(businessHourId, options) {\n    const query = {\n      businessHourId,\n      enabled: true\n    };\n    return this.find(query, options);\n  }\n\n  findEnabledByListOfBusinessHourIdsAndDepartmentIds(businessHourIds, departmentIds, options) {\n    const query = {\n      enabled: true,\n      businessHourId: {\n        $in: businessHourIds\n      },\n      _id: {\n        $in: departmentIds\n      }\n    };\n    return this.find(query, options);\n  }\n\n  addBusinessHourToDepartmentsByIds() {\n    let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let businessHourId = arguments.length > 1 ? arguments[1] : undefined;\n    const query = {\n      _id: {\n        $in: ids\n      }\n    };\n    const update = {\n      $set: {\n        businessHourId\n      }\n    };\n    return this.col.update(query, update, {\n      multi: true\n    });\n  }\n\n  removeBusinessHourFromDepartmentsByIdsAndBusinessHourId() {\n    let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let businessHourId = arguments.length > 1 ? arguments[1] : undefined;\n    const query = {\n      _id: {\n        $in: ids\n      },\n      businessHourId\n    };\n    const update = {\n      $unset: {\n        businessHourId: 1\n      }\n    };\n    return this.col.update(query, update, {\n      multi: true\n    });\n  }\n\n  removeBusinessHourFromDepartmentsByBusinessHourId(businessHourId) {\n    const query = {\n      businessHourId\n    };\n    const update = {\n      $unset: {\n        businessHourId: 1\n      }\n    };\n    return this.col.update(query, update, {\n      multi: true\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/LivechatDepartment.ts"],"names":[],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { FindOneOptions, Cursor, FilterQuery, WriteOpResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ILivechatDepartmentRecord } from '../../../../definition/ILivechatDepartmentRecord';\n\nexport class LivechatDepartmentRaw extends BaseRaw<ILivechatDepartmentRecord> {\n\tfindInIds(departmentsIds: string[], options: FindOneOptions<ILivechatDepartmentRecord>): Cursor<ILivechatDepartmentRecord> {\n\t\tconst query = { _id: { $in: departmentsIds } };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByNameRegexWithExceptionsAndConditions(\n\t\tsearchTerm: string,\n\t\texceptions: string[] = [],\n\t\tconditions: FilterQuery<ILivechatDepartmentRecord> = {},\n\t\toptions: FindOneOptions<ILivechatDepartmentRecord> = {},\n\t): Cursor<ILivechatDepartmentRecord> {\n\t\tif (!Array.isArray(exceptions)) {\n\t\t\texceptions = [exceptions];\n\t\t}\n\n\t\tconst nameRegex = new RegExp(`^${escapeRegExp(searchTerm).trim()}`, 'i');\n\n\t\tconst query = {\n\t\t\tname: nameRegex,\n\t\t\t_id: {\n\t\t\t\t$nin: exceptions,\n\t\t\t},\n\t\t\t...conditions,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByBusinessHourId(businessHourId: string, options: FindOneOptions<ILivechatDepartmentRecord>): Cursor<ILivechatDepartmentRecord> {\n\t\tconst query = { businessHourId };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledByBusinessHourId(\n\t\tbusinessHourId: string,\n\t\toptions: FindOneOptions<ILivechatDepartmentRecord>,\n\t): Cursor<ILivechatDepartmentRecord> {\n\t\tconst query = { businessHourId, enabled: true };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledByListOfBusinessHourIdsAndDepartmentIds(\n\t\tbusinessHourIds: string[],\n\t\tdepartmentIds: string[],\n\t\toptions: FindOneOptions<ILivechatDepartmentRecord>,\n\t): Cursor<ILivechatDepartmentRecord> {\n\t\tconst query: FilterQuery<ILivechatDepartmentRecord> = {\n\t\t\tenabled: true,\n\t\t\tbusinessHourId: {\n\t\t\t\t$in: businessHourIds,\n\t\t\t},\n\t\t\t_id: {\n\t\t\t\t$in: departmentIds,\n\t\t\t},\n\t\t};\n\t\treturn this.find(query, options);\n\t}\n\n\taddBusinessHourToDepartmentsByIds(ids: string[] = [], businessHourId: string): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tbusinessHourId,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.update(query, update, { multi: true });\n\t}\n\n\tremoveBusinessHourFromDepartmentsByIdsAndBusinessHourId(ids: string[] = [], businessHourId: string): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.update(query, update, { multi: true });\n\t}\n\n\tremoveBusinessHourFromDepartmentsByBusinessHourId(businessHourId: string): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.col.update(query, update, { multi: true });\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"ab1bef2e5d461d003361e74822dffb0e57e83087"}

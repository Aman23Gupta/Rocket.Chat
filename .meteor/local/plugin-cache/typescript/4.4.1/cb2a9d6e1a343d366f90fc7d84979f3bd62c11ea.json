{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/business-hour/Helper.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/business-hour/Helper.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/business-hour/Helper.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/business-hour/Helper.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/business-hour/Helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport moment from 'moment-timezone';\n\nimport { LivechatBusinessHours, LivechatDepartment, LivechatDepartmentAgents, Users } from '../../../../../app/models/server/raw';\nimport { ILivechatBusinessHour, LivechatBusinessHourTypes } from '../../../../../definition/ILivechatBusinessHour';\n\nconst getAllAgentIdsWithoutDepartment = async (): Promise<string[]> => {\n\tconst agentIdsWithDepartment = (\n\t\tawait LivechatDepartmentAgents.find({ departmentEnabled: true }, { projection: { agentId: 1 } }).toArray()\n\t).map((dept: any) => dept.agentId);\n\tconst agentIdsWithoutDepartment = (\n\t\tawait Users.findUsersInRolesWithQuery(\n\t\t\t'livechat-agent',\n\t\t\t{\n\t\t\t\t_id: { $nin: agentIdsWithDepartment },\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t).toArray()\n\t).map((user: any) => user._id);\n\treturn agentIdsWithoutDepartment;\n};\n\nconst getAgentIdsToHandle = async (businessHour: Record<string, any>): Promise<string[]> => {\n\tif (businessHour.type === LivechatBusinessHourTypes.DEFAULT) {\n\t\treturn getAllAgentIdsWithoutDepartment();\n\t}\n\tconst departmentIds = (\n\t\tawait LivechatDepartment.findEnabledByBusinessHourId(businessHour._id, {\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray()\n\t).map((dept: any) => dept._id);\n\treturn (\n\t\tawait LivechatDepartmentAgents.findByDepartmentIds(departmentIds, {\n\t\t\tprojection: { agentId: 1 },\n\t\t}).toArray()\n\t).map((dept: any) => dept.agentId);\n};\n\nexport const openBusinessHour = async (businessHour: Record<string, any>): Promise<void> => {\n\tconst agentIds: string[] = await getAgentIdsToHandle(businessHour);\n\tawait Users.addBusinessHourByAgentIds(agentIds, businessHour._id);\n\tUsers.updateLivechatStatusBasedOnBusinessHours();\n};\n\nexport const closeBusinessHour = async (businessHour: Record<string, any>): Promise<void> => {\n\tconst agentIds: string[] = await getAgentIdsToHandle(businessHour);\n\tawait Users.removeBusinessHourByAgentIds(agentIds, businessHour._id);\n\tUsers.updateLivechatStatusBasedOnBusinessHours();\n};\n\nexport const removeBusinessHourByAgentIds = async (agentIds: string[], businessHourId: string): Promise<void> => {\n\tif (!agentIds.length) {\n\t\treturn;\n\t}\n\tawait Users.removeBusinessHourByAgentIds(agentIds, businessHourId);\n\tUsers.updateLivechatStatusBasedOnBusinessHours();\n};\n\nexport const resetDefaultBusinessHourIfNeeded = async (): Promise<void> => {\n\tMeteor.call('license:isEnterprise', async (err: any, isEnterprise: any) => {\n\t\tif (err) {\n\t\t\tthrow err;\n\t\t}\n\t\tif (isEnterprise) {\n\t\t\treturn;\n\t\t}\n\t\tconst defaultBusinessHour = await LivechatBusinessHours.findOneDefaultBusinessHour<Pick<ILivechatBusinessHour, '_id'>>({\n\t\t\tprojection: { _id: 1 },\n\t\t});\n\t\tif (!defaultBusinessHour) {\n\t\t\treturn;\n\t\t}\n\t\tLivechatBusinessHours.update(\n\t\t\t{ _id: defaultBusinessHour._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\ttimezone: {\n\t\t\t\t\t\tname: moment.tz.guess(),\n\t\t\t\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t});\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/business-hour/Helper.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/business-hour/Helper.ts"}},"code":"module.export({\n  openBusinessHour: () => openBusinessHour,\n  closeBusinessHour: () => closeBusinessHour,\n  removeBusinessHourByAgentIds: () => removeBusinessHourByAgentIds,\n  resetDefaultBusinessHourIfNeeded: () => resetDefaultBusinessHourIfNeeded\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment-timezone\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet LivechatBusinessHours, LivechatDepartment, LivechatDepartmentAgents, Users;\nmodule.link(\"../../../../../app/models/server/raw\", {\n  LivechatBusinessHours(v) {\n    LivechatBusinessHours = v;\n  },\n\n  LivechatDepartment(v) {\n    LivechatDepartment = v;\n  },\n\n  LivechatDepartmentAgents(v) {\n    LivechatDepartmentAgents = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet LivechatBusinessHourTypes;\nmodule.link(\"../../../../../definition/ILivechatBusinessHour\", {\n  LivechatBusinessHourTypes(v) {\n    LivechatBusinessHourTypes = v;\n  }\n\n}, 3);\n\nconst getAllAgentIdsWithoutDepartment = () => Promise.asyncApply(() => {\n  const agentIdsWithDepartment = Promise.await(LivechatDepartmentAgents.find({\n    departmentEnabled: true\n  }, {\n    projection: {\n      agentId: 1\n    }\n  }).toArray()).map(dept => dept.agentId);\n  const agentIdsWithoutDepartment = Promise.await(Users.findUsersInRolesWithQuery('livechat-agent', {\n    _id: {\n      $nin: agentIdsWithDepartment\n    }\n  }, {\n    projection: {\n      _id: 1\n    }\n  }).toArray()).map(user => user._id);\n  return agentIdsWithoutDepartment;\n});\n\nconst getAgentIdsToHandle = businessHour => Promise.asyncApply(() => {\n  if (businessHour.type === LivechatBusinessHourTypes.DEFAULT) {\n    return getAllAgentIdsWithoutDepartment();\n  }\n\n  const departmentIds = Promise.await(LivechatDepartment.findEnabledByBusinessHourId(businessHour._id, {\n    projection: {\n      _id: 1\n    }\n  }).toArray()).map(dept => dept._id);\n  return Promise.await(LivechatDepartmentAgents.findByDepartmentIds(departmentIds, {\n    projection: {\n      agentId: 1\n    }\n  }).toArray()).map(dept => dept.agentId);\n});\n\nconst openBusinessHour = businessHour => Promise.asyncApply(() => {\n  const agentIds = Promise.await(getAgentIdsToHandle(businessHour));\n  Promise.await(Users.addBusinessHourByAgentIds(agentIds, businessHour._id));\n  Users.updateLivechatStatusBasedOnBusinessHours();\n});\n\nconst closeBusinessHour = businessHour => Promise.asyncApply(() => {\n  const agentIds = Promise.await(getAgentIdsToHandle(businessHour));\n  Promise.await(Users.removeBusinessHourByAgentIds(agentIds, businessHour._id));\n  Users.updateLivechatStatusBasedOnBusinessHours();\n});\n\nconst removeBusinessHourByAgentIds = (agentIds, businessHourId) => Promise.asyncApply(() => {\n  if (!agentIds.length) {\n    return;\n  }\n\n  Promise.await(Users.removeBusinessHourByAgentIds(agentIds, businessHourId));\n  Users.updateLivechatStatusBasedOnBusinessHours();\n});\n\nconst resetDefaultBusinessHourIfNeeded = () => Promise.asyncApply(() => {\n  Meteor.call('license:isEnterprise', (err, isEnterprise) => Promise.asyncApply(() => {\n    if (err) {\n      throw err;\n    }\n\n    if (isEnterprise) {\n      return;\n    }\n\n    const defaultBusinessHour = Promise.await(LivechatBusinessHours.findOneDefaultBusinessHour({\n      projection: {\n        _id: 1\n      }\n    }));\n\n    if (!defaultBusinessHour) {\n      return;\n    }\n\n    LivechatBusinessHours.update({\n      _id: defaultBusinessHour._id\n    }, {\n      $set: {\n        timezone: {\n          name: moment.tz.guess(),\n          utc: String(moment().utcOffset() / 60)\n        }\n      }\n    });\n  }));\n});","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/business-hour/Helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport moment from 'moment-timezone';\n\nimport { LivechatBusinessHours, LivechatDepartment, LivechatDepartmentAgents, Users } from '../../../../../app/models/server/raw';\nimport { ILivechatBusinessHour, LivechatBusinessHourTypes } from '../../../../../definition/ILivechatBusinessHour';\n\nconst getAllAgentIdsWithoutDepartment = async (): Promise<string[]> => {\n\tconst agentIdsWithDepartment = (\n\t\tawait LivechatDepartmentAgents.find({ departmentEnabled: true }, { projection: { agentId: 1 } }).toArray()\n\t).map((dept: any) => dept.agentId);\n\tconst agentIdsWithoutDepartment = (\n\t\tawait Users.findUsersInRolesWithQuery(\n\t\t\t'livechat-agent',\n\t\t\t{\n\t\t\t\t_id: { $nin: agentIdsWithDepartment },\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t).toArray()\n\t).map((user: any) => user._id);\n\treturn agentIdsWithoutDepartment;\n};\n\nconst getAgentIdsToHandle = async (businessHour: Record<string, any>): Promise<string[]> => {\n\tif (businessHour.type === LivechatBusinessHourTypes.DEFAULT) {\n\t\treturn getAllAgentIdsWithoutDepartment();\n\t}\n\tconst departmentIds = (\n\t\tawait LivechatDepartment.findEnabledByBusinessHourId(businessHour._id, {\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray()\n\t).map((dept: any) => dept._id);\n\treturn (\n\t\tawait LivechatDepartmentAgents.findByDepartmentIds(departmentIds, {\n\t\t\tprojection: { agentId: 1 },\n\t\t}).toArray()\n\t).map((dept: any) => dept.agentId);\n};\n\nexport const openBusinessHour = async (businessHour: Record<string, any>): Promise<void> => {\n\tconst agentIds: string[] = await getAgentIdsToHandle(businessHour);\n\tawait Users.addBusinessHourByAgentIds(agentIds, businessHour._id);\n\tUsers.updateLivechatStatusBasedOnBusinessHours();\n};\n\nexport const closeBusinessHour = async (businessHour: Record<string, any>): Promise<void> => {\n\tconst agentIds: string[] = await getAgentIdsToHandle(businessHour);\n\tawait Users.removeBusinessHourByAgentIds(agentIds, businessHour._id);\n\tUsers.updateLivechatStatusBasedOnBusinessHours();\n};\n\nexport const removeBusinessHourByAgentIds = async (agentIds: string[], businessHourId: string): Promise<void> => {\n\tif (!agentIds.length) {\n\t\treturn;\n\t}\n\tawait Users.removeBusinessHourByAgentIds(agentIds, businessHourId);\n\tUsers.updateLivechatStatusBasedOnBusinessHours();\n};\n\nexport const resetDefaultBusinessHourIfNeeded = async (): Promise<void> => {\n\tMeteor.call('license:isEnterprise', async (err: any, isEnterprise: any) => {\n\t\tif (err) {\n\t\t\tthrow err;\n\t\t}\n\t\tif (isEnterprise) {\n\t\t\treturn;\n\t\t}\n\t\tconst defaultBusinessHour = await LivechatBusinessHours.findOneDefaultBusinessHour<Pick<ILivechatBusinessHour, '_id'>>({\n\t\t\tprojection: { _id: 1 },\n\t\t});\n\t\tif (!defaultBusinessHour) {\n\t\t\treturn;\n\t\t}\n\t\tLivechatBusinessHours.update(\n\t\t\t{ _id: defaultBusinessHour._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\ttimezone: {\n\t\t\t\t\t\tname: moment.tz.guess(),\n\t\t\t\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t});\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"cb2a9d6e1a343d366f90fc7d84979f3bd62c11ea"}

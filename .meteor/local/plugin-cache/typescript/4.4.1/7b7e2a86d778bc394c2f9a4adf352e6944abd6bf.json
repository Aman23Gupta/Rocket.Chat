{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/loginHandler.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/loginHandler.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/loginHandler.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/loginHandler.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/loginHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AAEjE,MAAM,SAAS,GAAG,CAAC,OAAe,EAAuB,EAAE,CAAC,CAAC;IAC5D,IAAI,EAAE,MAAM;IACZ,sDAAsD;IACtD,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC,YAAY,EAAE,OAAO,CAAC;CAC3E,CAAC,CAAC;AAEH,QAAQ,CAAC,oBAAoB,CAAC,MAAM,EAAE,UAAU,YAAY;IAC3D,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,eAAe,IAAI,OAAO,YAAY,CAAC,eAAe,KAAK,QAAQ,EAAE;QAC5G,OAAO,SAAS,CAAC;KACjB;IAED,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC;IACzF,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;IAE9C,IAAI,CAAC,WAAW,EAAE;QACjB,OAAO,SAAS,CAAC,iCAAiC,CAAC,CAAC;KACpD;IAED,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;QACzB,OAAO,SAAS,CAAC,8BAA8B,CAAC,CAAC;KACjD;IAED,IAAI;QACH,MAAM,UAAU,GAAG,SAAS,CAAC,sBAAsB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzE,MAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QAEtE,OAAO,WAAW,CAAC;KACnB;IAAC,OAAO,KAAU,EAAE;QACpB,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,IAAI,KAAK,YAAY,MAAM,CAAC,KAAK,EAAE;YAClC,SAAS,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAW,CAAC;SACrD;aAAM,IAAI,KAAK,YAAY,KAAK,EAAE;YAClC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;SAC1B;QAED,IAAI,SAAS,EAAE;YACd,MAAM,gBAAgB,GAAG,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YAC/C,IAAI,gBAAgB,IAAI,gBAAgB,KAAK,SAAS,EAAE;gBACvD,OAAO,GAAG,gBAAgB,CAAC;aAC3B;SACD;QAED,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC;KAC1B;AACF,CAAC,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { SAMLUtils } from './lib/Utils';\nimport { SAML } from './lib/SAML';\nimport { SystemLogger } from '../../../server/lib/logger/system';\n\nconst makeError = (message: string): Record<string, any> => ({\n\ttype: 'saml',\n\t// @ts-ignore - LoginCancelledError does in fact exist\n\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, message),\n});\n\nAccounts.registerLoginHandler('saml', function (loginRequest) {\n\tif (!loginRequest.saml || !loginRequest.credentialToken || typeof loginRequest.credentialToken !== 'string') {\n\t\treturn undefined;\n\t}\n\n\tconst loginResult = Promise.await(SAML.retrieveCredential(loginRequest.credentialToken));\n\tSAMLUtils.log({ msg: 'RESULT', loginResult });\n\n\tif (!loginResult) {\n\t\treturn makeError('No matching login attempt found');\n\t}\n\n\tif (!loginResult.profile) {\n\t\treturn makeError('No profile information found');\n\t}\n\n\ttry {\n\t\tconst userObject = SAMLUtils.mapProfileToUserObject(loginResult.profile);\n\t\tconst updatedUser = SAML.insertOrUpdateSAMLUser(userObject);\n\t\tSAMLUtils.events.emit('updateCustomFields', loginResult, updatedUser);\n\n\t\treturn updatedUser;\n\t} catch (error: any) {\n\t\tSystemLogger.error(error);\n\n\t\tlet message = error.toString();\n\t\tlet errorCode = '';\n\n\t\tif (error instanceof Meteor.Error) {\n\t\t\terrorCode = (error.error || error.message) as string;\n\t\t} else if (error instanceof Error) {\n\t\t\terrorCode = error.message;\n\t\t}\n\n\t\tif (errorCode) {\n\t\t\tconst localizedMessage = TAPi18n.__(errorCode);\n\t\t\tif (localizedMessage && localizedMessage !== errorCode) {\n\t\t\t\tmessage = localizedMessage;\n\t\t\t}\n\t\t}\n\n\t\treturn makeError(message);\n\t}\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/loginHandler.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/loginHandler.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 2);\nlet SAMLUtils;\nmodule.link(\"./lib/Utils\", {\n  SAMLUtils(v) {\n    SAMLUtils = v;\n  }\n\n}, 3);\nlet SAML;\nmodule.link(\"./lib/SAML\", {\n  SAML(v) {\n    SAML = v;\n  }\n\n}, 4);\nlet SystemLogger;\nmodule.link(\"../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 5);\n\nconst makeError = message => ({\n  type: 'saml',\n  // @ts-ignore - LoginCancelledError does in fact exist\n  error: new Meteor.Error(Accounts.LoginCancelledError.numericError, message)\n});\n\nAccounts.registerLoginHandler('saml', function (loginRequest) {\n  if (!loginRequest.saml || !loginRequest.credentialToken || typeof loginRequest.credentialToken !== 'string') {\n    return undefined;\n  }\n\n  const loginResult = Promise.await(SAML.retrieveCredential(loginRequest.credentialToken));\n  SAMLUtils.log({\n    msg: 'RESULT',\n    loginResult\n  });\n\n  if (!loginResult) {\n    return makeError('No matching login attempt found');\n  }\n\n  if (!loginResult.profile) {\n    return makeError('No profile information found');\n  }\n\n  try {\n    const userObject = SAMLUtils.mapProfileToUserObject(loginResult.profile);\n    const updatedUser = SAML.insertOrUpdateSAMLUser(userObject);\n    SAMLUtils.events.emit('updateCustomFields', loginResult, updatedUser);\n    return updatedUser;\n  } catch (error) {\n    SystemLogger.error(error);\n    let message = error.toString();\n    let errorCode = '';\n\n    if (error instanceof Meteor.Error) {\n      errorCode = error.error || error.message;\n    } else if (error instanceof Error) {\n      errorCode = error.message;\n    }\n\n    if (errorCode) {\n      const localizedMessage = TAPi18n.__(errorCode);\n\n      if (localizedMessage && localizedMessage !== errorCode) {\n        message = localizedMessage;\n      }\n    }\n\n    return makeError(message);\n  }\n});","map":{"version":3,"sources":["app/meteor-accounts-saml/server/loginHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { SAMLUtils } from './lib/Utils';\nimport { SAML } from './lib/SAML';\nimport { SystemLogger } from '../../../server/lib/logger/system';\n\nconst makeError = (message: string): Record<string, any> => ({\n\ttype: 'saml',\n\t// @ts-ignore - LoginCancelledError does in fact exist\n\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, message),\n});\n\nAccounts.registerLoginHandler('saml', function (loginRequest) {\n\tif (!loginRequest.saml || !loginRequest.credentialToken || typeof loginRequest.credentialToken !== 'string') {\n\t\treturn undefined;\n\t}\n\n\tconst loginResult = Promise.await(SAML.retrieveCredential(loginRequest.credentialToken));\n\tSAMLUtils.log({ msg: 'RESULT', loginResult });\n\n\tif (!loginResult) {\n\t\treturn makeError('No matching login attempt found');\n\t}\n\n\tif (!loginResult.profile) {\n\t\treturn makeError('No profile information found');\n\t}\n\n\ttry {\n\t\tconst userObject = SAMLUtils.mapProfileToUserObject(loginResult.profile);\n\t\tconst updatedUser = SAML.insertOrUpdateSAMLUser(userObject);\n\t\tSAMLUtils.events.emit('updateCustomFields', loginResult, updatedUser);\n\n\t\treturn updatedUser;\n\t} catch (error: any) {\n\t\tSystemLogger.error(error);\n\n\t\tlet message = error.toString();\n\t\tlet errorCode = '';\n\n\t\tif (error instanceof Meteor.Error) {\n\t\t\terrorCode = (error.error || error.message) as string;\n\t\t} else if (error instanceof Error) {\n\t\t\terrorCode = error.message;\n\t\t}\n\n\t\tif (errorCode) {\n\t\t\tconst localizedMessage = TAPi18n.__(errorCode);\n\t\t\tif (localizedMessage && localizedMessage !== errorCode) {\n\t\t\t\tmessage = localizedMessage;\n\t\t\t}\n\t\t}\n\n\t\treturn makeError(message);\n\t}\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"7b7e2a86d778bc394c2f9a4adf352e6944abd6bf"}

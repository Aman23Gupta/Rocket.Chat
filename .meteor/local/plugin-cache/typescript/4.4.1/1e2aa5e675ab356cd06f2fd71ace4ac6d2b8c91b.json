{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/broker.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/broker.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/broker.ts","inputSourceMap":{"version":3,"file":"ee/server/broker.ts","sourceRoot":"","sources":["ee/server/broker.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServiceBroker, Context, ServiceSchema, Serializers } from 'moleculer';\nimport EJSON from 'ejson';\n\nimport { asyncLocalStorage, License } from '../../server/sdk';\nimport { api } from '../../server/sdk/api';\nimport { IBroker, IBrokerNode, IServiceMetrics } from '../../server/sdk/types/IBroker';\nimport { ServiceClass } from '../../server/sdk/types/ServiceClass';\nimport { EventSignatures } from '../../server/sdk/lib/Events';\nimport { LocalBroker } from '../../server/sdk/lib/LocalBroker';\n\nconst events: { [k: string]: string } = {\n\tonNodeConnected: '$node.connected',\n\tonNodeUpdated: '$node.updated',\n\tonNodeDisconnected: '$node.disconnected',\n};\n\nconst lifecycle: { [k: string]: string } = {\n\tcreated: 'created',\n\tstarted: 'started',\n\tstopped: 'stopped',\n};\n\nconst {\n\tINTERNAL_SERVICES_ONLY = 'false',\n\tSERVICES_ALLOWED = '',\n\tWAIT_FOR_SERVICES_TIMEOUT = '10000', // 10 seconds\n\tWAIT_FOR_SERVICES_WHITELIST_TIMEOUT = '600000', // 10 minutes\n} = process.env;\n\nconst waitForServicesTimeout = parseInt(WAIT_FOR_SERVICES_TIMEOUT, 10) || 10000;\nconst waitForServicesWhitelistTimeout = parseInt(WAIT_FOR_SERVICES_WHITELIST_TIMEOUT, 10) || 600000;\n\nclass NetworkBroker implements IBroker {\n\tprivate broker: ServiceBroker;\n\n\tprivate localBroker = new LocalBroker();\n\n\tprivate allowed: Promise<boolean>;\n\n\tprivate started: Promise<void>;\n\n\tprivate whitelist = {\n\t\tevents: ['license.module', 'watch.settings'],\n\t\tactions: ['license.hasLicense'],\n\t};\n\n\t// whether only internal services are allowed to be registered\n\tprivate internalOnly = ['true', 'yes'].includes(INTERNAL_SERVICES_ONLY.toLowerCase());\n\n\t// list of allowed services to run - has precedence over `internalOnly`\n\tprivate allowedList = new Set<string>(\n\t\tSERVICES_ALLOWED?.split(',')\n\t\t\t.map((i) => i.trim())\n\t\t\t.filter((i) => i),\n\t);\n\n\tmetrics: IServiceMetrics;\n\n\tconstructor(broker: ServiceBroker) {\n\t\tthis.broker = broker;\n\n\t\tapi.setBroker(this);\n\n\t\tthis.metrics = broker.metrics;\n\n\t\tthis.started = this.broker.start();\n\n\t\tthis.allowed = License.hasLicense('scalability');\n\t}\n\n\tisWhitelisted(list: string[], item: string): boolean {\n\t\treturn list.includes(item);\n\t}\n\n\tisActionWhitelisted(method: string): boolean {\n\t\treturn this.isWhitelisted(this.whitelist.actions, method);\n\t}\n\n\tisEventWhitelisted(event: string): boolean {\n\t\treturn this.isWhitelisted(this.whitelist.events, event);\n\t}\n\n\tasync call(method: string, data: any): Promise<any> {\n\t\tawait this.started;\n\n\t\tif (!(this.isActionWhitelisted(method) || (await this.allowed))) {\n\t\t\treturn this.localBroker.call(method, data);\n\t\t}\n\n\t\tconst context = asyncLocalStorage.getStore();\n\t\tif (context?.ctx?.call) {\n\t\t\treturn context.ctx.call(method, data);\n\t\t}\n\n\t\tconst services: { name: string }[] = await this.broker.call('$node.services', {\n\t\t\tonlyAvailable: true,\n\t\t});\n\t\tif (!services.find((service) => service.name === method.split('.')[0])) {\n\t\t\treturn new Error('method-not-available');\n\t\t}\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tasync waitAndCall(method: string, data: any): Promise<any> {\n\t\tawait this.started;\n\n\t\tif (!(this.isActionWhitelisted(method) || (await this.allowed))) {\n\t\t\treturn this.localBroker.call(method, data);\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.broker.waitForServices(\n\t\t\t\tmethod.split('.')[0],\n\t\t\t\tthis.isActionWhitelisted(method) ? waitForServicesWhitelistTimeout : waitForServicesTimeout,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\n\t\tconst context = asyncLocalStorage.getStore();\n\t\tif (context?.ctx?.call) {\n\t\t\treturn context.ctx.call(method, data);\n\t\t}\n\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tdestroyService(instance: ServiceClass): void {\n\t\tthis.localBroker.destroyService(instance);\n\n\t\tthis.broker.destroyService(instance.getName());\n\t}\n\n\tcreateService(instance: ServiceClass): void {\n\t\tif (!this.isServiceAllowed(instance)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.localBroker.createService(instance);\n\n\t\tconst name = instance.getName();\n\n\t\t// Listen for module license\n\t\tinstance.onEvent('license.module', async ({ module, valid }) => {\n\t\t\tif (module === 'scalability') {\n\t\t\t\t// Should we believe on the event only? Could it be a call from the CE version?\n\t\t\t\tthis.allowed = valid ? License.hasLicense('scalability') : Promise.resolve(false);\n\t\t\t\t// console.log('on license.module', { allowed: this.allowed });\n\t\t\t}\n\t\t});\n\n\t\tconst service: ServiceSchema = {\n\t\t\tname,\n\t\t\tactions: {},\n\t\t\tevents: instance.getEvents().reduce<Record<string, Function>>((map, eventName) => {\n\t\t\t\tif (this.isEventWhitelisted(eventName)) {\n\t\t\t\t\tmap[eventName] = (data: Parameters<EventSignatures[typeof eventName]>): void => instance.emit(eventName, ...data);\n\t\t\t\t\treturn map;\n\t\t\t\t}\n\n\t\t\t\tmap[eventName] = (data: Parameters<EventSignatures[typeof eventName]>): any => {\n\t\t\t\t\tthis.allowed.then((allowed) => allowed && instance.emit(eventName, ...data));\n\t\t\t\t};\n\n\t\t\t\treturn map;\n\t\t\t}, {}),\n\t\t};\n\n\t\tif (!service.events || !service.actions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst methods =\n\t\t\tinstance.constructor?.name === 'Object'\n\t\t\t\t? Object.getOwnPropertyNames(instance)\n\t\t\t\t: Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\t\tfor (const method of methods) {\n\t\t\tif (method === 'constructor') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst i = instance as any;\n\n\t\t\tif (method.match(/^on[A-Z]/)) {\n\t\t\t\tservice.events[events[method]] = i[method].bind(i);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lifecycle[method]) {\n\t\t\t\tservice[method] = (): void =>\n\t\t\t\t\tasyncLocalStorage.run(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\tnodeID: this.broker.nodeID,\n\t\t\t\t\t\t\trequestID: null,\n\t\t\t\t\t\t\tbroker: this,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ti[method].bind(i),\n\t\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tservice.actions[method] = async (ctx: Context<[]>): Promise<any> => {\n\t\t\t\tif (!this.isActionWhitelisted(`${name}.${method}`) && !(await this.allowed)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn asyncLocalStorage.run(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: ctx.id,\n\t\t\t\t\t\tnodeID: ctx.nodeID,\n\t\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t\t\tbroker: this,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t},\n\t\t\t\t\t() => i[method](...ctx.params),\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\n\t\tthis.broker.createService(service);\n\t}\n\n\tasync broadcast<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tif (!(this.isEventWhitelisted(event) || (await this.allowed))) {\n\t\t\treturn this.localBroker.broadcast(event, ...args);\n\t\t}\n\t\treturn this.broker.broadcast(event, args);\n\t}\n\n\tasync broadcastLocal<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tthis.broker.broadcastLocal(event, args);\n\t}\n\n\tasync nodeList(): Promise<IBrokerNode[]> {\n\t\treturn this.broker.call('$node.list');\n\t}\n\n\tprivate isServiceAllowed(instance: ServiceClass): boolean {\n\t\t// check if the service is in the list of allowed services if the list is not empty\n\t\tif (this.allowedList.size > 0 && !this.allowedList.has(instance.getName())) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// allow only internal services if internalOnly is true\n\t\tif (this.internalOnly && !instance.isInternal()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nconst Base = Serializers.Base as unknown as new () => {};\n\nclass EJSONSerializer extends Base {\n\tserialize(obj: {}): Buffer {\n\t\treturn Buffer.from(EJSON.stringify(obj));\n\t}\n\n\tdeserialize(buf: Buffer): any {\n\t\treturn EJSON.parse(buf.toString());\n\t}\n}\n\nconst {\n\tTRANSPORTER = '',\n\tCACHE = 'Memory',\n\t// SERIALIZER = 'MsgPack',\n\tSERIALIZER = 'EJSON',\n\tMOLECULER_LOG_LEVEL = 'error',\n\tBALANCE_STRATEGY = 'RoundRobin',\n\tBALANCE_PREFER_LOCAL = 'false',\n\tRETRY_FACTOR = '2',\n\tRETRY_MAX_DELAY = '1000',\n\tRETRY_DELAY = '100',\n\tRETRY_RETRIES = '5',\n\tRETRY_ENABLED = 'false',\n\tREQUEST_TIMEOUT = '10',\n\tHEARTBEAT_INTERVAL = '10',\n\tHEARTBEAT_TIMEOUT = '30',\n\tBULKHEAD_ENABLED = 'false',\n\tBULKHEAD_CONCURRENCY = '10',\n\tBULKHEAD_MAX_QUEUE_SIZE = '10000',\n\tMS_METRICS = 'false',\n\tMS_METRICS_PORT = '9458',\n\tTRACING_ENABLED = 'false',\n\tSKIP_PROCESS_EVENT_REGISTRATION = 'true',\n} = process.env;\n\n// only starts network broker if transporter properly configured\nif (TRANSPORTER.match(/^(?:nats|TCP)/)) {\n\tconst network = new ServiceBroker({\n\t\t// TODO: Reevaluate, without this setting it was preventing the process to stop\n\t\tskipProcessEventRegistration: SKIP_PROCESS_EVENT_REGISTRATION === 'true',\n\t\ttransporter: TRANSPORTER,\n\t\tmetrics: {\n\t\t\tenabled: MS_METRICS === 'true',\n\t\t\treporter: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'Prometheus',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tport: MS_METRICS_PORT,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tcacher: CACHE,\n\t\tserializer: SERIALIZER === 'EJSON' ? new EJSONSerializer() : SERIALIZER,\n\t\tlogLevel: MOLECULER_LOG_LEVEL as any,\n\t\t// logLevel: {\n\t\t// \t// \"TRACING\": \"trace\",\n\t\t// \t// \"TRANS*\": \"warn\",\n\t\t// \tBROKER: 'debug',\n\t\t// \tTRANSIT: 'debug',\n\t\t// \t'**': 'info',\n\t\t// },\n\t\tlogger: {\n\t\t\ttype: 'Console',\n\t\t\toptions: {\n\t\t\t\tformatter: 'short',\n\t\t\t},\n\t\t},\n\t\tregistry: {\n\t\t\tstrategy: BALANCE_STRATEGY,\n\t\t\tpreferLocal: BALANCE_PREFER_LOCAL !== 'false',\n\t\t},\n\n\t\trequestTimeout: parseInt(REQUEST_TIMEOUT) * 1000,\n\t\tretryPolicy: {\n\t\t\tenabled: RETRY_ENABLED === 'true',\n\t\t\tretries: parseInt(RETRY_RETRIES),\n\t\t\tdelay: parseInt(RETRY_DELAY),\n\t\t\tmaxDelay: parseInt(RETRY_MAX_DELAY),\n\t\t\tfactor: parseInt(RETRY_FACTOR),\n\t\t\tcheck: (err: any): boolean => err && !!err.retryable,\n\t\t},\n\n\t\tmaxCallLevel: 100,\n\t\theartbeatInterval: parseInt(HEARTBEAT_INTERVAL),\n\t\theartbeatTimeout: parseInt(HEARTBEAT_TIMEOUT),\n\n\t\t// circuitBreaker: {\n\t\t// \tenabled: false,\n\t\t// \tthreshold: 0.5,\n\t\t// \twindowTime: 60,\n\t\t// \tminRequestCount: 20,\n\t\t// \thalfOpenTime: 10 * 1000,\n\t\t// \tcheck: (err: any): boolean => err && err.code >= 500,\n\t\t// },\n\n\t\tbulkhead: {\n\t\t\tenabled: BULKHEAD_ENABLED === 'true',\n\t\t\tconcurrency: parseInt(BULKHEAD_CONCURRENCY),\n\t\t\tmaxQueueSize: parseInt(BULKHEAD_MAX_QUEUE_SIZE),\n\t\t},\n\n\t\ttracing: {\n\t\t\tenabled: TRACING_ENABLED === 'true',\n\t\t\texporter: {\n\t\t\t\ttype: 'Jaeger',\n\t\t\t\toptions: {\n\t\t\t\t\tendpoint: null,\n\t\t\t\t\thost: 'jaeger',\n\t\t\t\t\tport: 6832,\n\t\t\t\t\tsampler: {\n\t\t\t\t\t\t// Sampler type. More info: https://www.jaegertracing.io/docs/1.14/sampling/#client-sampling-configuration\n\t\t\t\t\t\ttype: 'Const',\n\t\t\t\t\t\t// Sampler specific options.\n\t\t\t\t\t\toptions: {},\n\t\t\t\t\t},\n\t\t\t\t\t// Additional options for `Jaeger.Tracer`\n\t\t\t\t\ttracerOptions: {},\n\t\t\t\t\t// Default tags. They will be added into all span tags.\n\t\t\t\t\tdefaultTags: null,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\n\tnew NetworkBroker(network);\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/broker.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/broker.ts"}},"code":"!function (module1) {\n  let ServiceBroker, Serializers;\n  module1.link(\"moleculer\", {\n    ServiceBroker(v) {\n      ServiceBroker = v;\n    },\n\n    Serializers(v) {\n      Serializers = v;\n    }\n\n  }, 0);\n  let EJSON;\n  module1.link(\"ejson\", {\n    default(v) {\n      EJSON = v;\n    }\n\n  }, 1);\n  let asyncLocalStorage, License;\n  module1.link(\"../../server/sdk\", {\n    asyncLocalStorage(v) {\n      asyncLocalStorage = v;\n    },\n\n    License(v) {\n      License = v;\n    }\n\n  }, 2);\n  let api;\n  module1.link(\"../../server/sdk/api\", {\n    api(v) {\n      api = v;\n    }\n\n  }, 3);\n  let LocalBroker;\n  module1.link(\"../../server/sdk/lib/LocalBroker\", {\n    LocalBroker(v) {\n      LocalBroker = v;\n    }\n\n  }, 4);\n  const events = {\n    onNodeConnected: '$node.connected',\n    onNodeUpdated: '$node.updated',\n    onNodeDisconnected: '$node.disconnected'\n  };\n  const lifecycle = {\n    created: 'created',\n    started: 'started',\n    stopped: 'stopped'\n  };\n  const {\n    INTERNAL_SERVICES_ONLY = 'false',\n    SERVICES_ALLOWED = '',\n    WAIT_FOR_SERVICES_TIMEOUT = '10000',\n    // 10 seconds\n    WAIT_FOR_SERVICES_WHITELIST_TIMEOUT = '600000' // 10 minutes\n\n  } = process.env;\n  const waitForServicesTimeout = parseInt(WAIT_FOR_SERVICES_TIMEOUT, 10) || 10000;\n  const waitForServicesWhitelistTimeout = parseInt(WAIT_FOR_SERVICES_WHITELIST_TIMEOUT, 10) || 600000;\n\n  class NetworkBroker {\n    // whether only internal services are allowed to be registered\n    // list of allowed services to run - has precedence over `internalOnly`\n    constructor(broker) {\n      this.broker = void 0;\n      this.localBroker = new LocalBroker();\n      this.allowed = void 0;\n      this.started = void 0;\n      this.whitelist = {\n        events: ['license.module', 'watch.settings'],\n        actions: ['license.hasLicense']\n      };\n      this.internalOnly = ['true', 'yes'].includes(INTERNAL_SERVICES_ONLY.toLowerCase());\n      this.allowedList = new Set(SERVICES_ALLOWED === null || SERVICES_ALLOWED === void 0 ? void 0 : SERVICES_ALLOWED.split(',').map(i => i.trim()).filter(i => i));\n      this.metrics = void 0;\n      this.broker = broker;\n      api.setBroker(this);\n      this.metrics = broker.metrics;\n      this.started = this.broker.start();\n      this.allowed = License.hasLicense('scalability');\n    }\n\n    isWhitelisted(list, item) {\n      return list.includes(item);\n    }\n\n    isActionWhitelisted(method) {\n      return this.isWhitelisted(this.whitelist.actions, method);\n    }\n\n    isEventWhitelisted(event) {\n      return this.isWhitelisted(this.whitelist.events, event);\n    }\n\n    call(method, data) {\n      return Promise.asyncApply(() => {\n        var _context$ctx;\n\n        Promise.await(this.started);\n\n        if (!(this.isActionWhitelisted(method) || Promise.await(this.allowed))) {\n          return this.localBroker.call(method, data);\n        }\n\n        const context = asyncLocalStorage.getStore();\n\n        if (context !== null && context !== void 0 && (_context$ctx = context.ctx) !== null && _context$ctx !== void 0 && _context$ctx.call) {\n          return context.ctx.call(method, data);\n        }\n\n        const services = Promise.await(this.broker.call('$node.services', {\n          onlyAvailable: true\n        }));\n\n        if (!services.find(service => service.name === method.split('.')[0])) {\n          return new Error('method-not-available');\n        }\n\n        return this.broker.call(method, data);\n      });\n    }\n\n    waitAndCall(method, data) {\n      return Promise.asyncApply(() => {\n        var _context$ctx2;\n\n        Promise.await(this.started);\n\n        if (!(this.isActionWhitelisted(method) || Promise.await(this.allowed))) {\n          return this.localBroker.call(method, data);\n        }\n\n        try {\n          Promise.await(this.broker.waitForServices(method.split('.')[0], this.isActionWhitelisted(method) ? waitForServicesWhitelistTimeout : waitForServicesTimeout));\n        } catch (err) {\n          console.error(err);\n        }\n\n        const context = asyncLocalStorage.getStore();\n\n        if (context !== null && context !== void 0 && (_context$ctx2 = context.ctx) !== null && _context$ctx2 !== void 0 && _context$ctx2.call) {\n          return context.ctx.call(method, data);\n        }\n\n        return this.broker.call(method, data);\n      });\n    }\n\n    destroyService(instance) {\n      this.localBroker.destroyService(instance);\n      this.broker.destroyService(instance.getName());\n    }\n\n    createService(instance) {\n      var _instance$constructor;\n\n      if (!this.isServiceAllowed(instance)) {\n        return;\n      }\n\n      this.localBroker.createService(instance);\n      const name = instance.getName(); // Listen for module license\n\n      instance.onEvent('license.module', _ref => Promise.asyncApply(() => {\n        let {\n          module,\n          valid\n        } = _ref;\n\n        if (module === 'scalability') {\n          // Should we believe on the event only? Could it be a call from the CE version?\n          this.allowed = valid ? License.hasLicense('scalability') : Promise.resolve(false); // console.log('on license.module', { allowed: this.allowed });\n        }\n      }));\n      const service = {\n        name,\n        actions: {},\n        events: instance.getEvents().reduce((map, eventName) => {\n          if (this.isEventWhitelisted(eventName)) {\n            map[eventName] = data => instance.emit(eventName, ...data);\n\n            return map;\n          }\n\n          map[eventName] = data => {\n            this.allowed.then(allowed => allowed && instance.emit(eventName, ...data));\n          };\n\n          return map;\n        }, {})\n      };\n\n      if (!service.events || !service.actions) {\n        return;\n      }\n\n      const methods = ((_instance$constructor = instance.constructor) === null || _instance$constructor === void 0 ? void 0 : _instance$constructor.name) === 'Object' ? Object.getOwnPropertyNames(instance) : Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\n      for (const method of methods) {\n        if (method === 'constructor') {\n          continue;\n        }\n\n        const i = instance;\n\n        if (method.match(/^on[A-Z]/)) {\n          service.events[events[method]] = i[method].bind(i);\n          continue;\n        }\n\n        if (lifecycle[method]) {\n          service[method] = () => asyncLocalStorage.run({\n            id: '',\n            nodeID: this.broker.nodeID,\n            requestID: null,\n            broker: this\n          }, i[method].bind(i));\n\n          continue;\n        }\n\n        service.actions[method] = ctx => Promise.asyncApply(() => {\n          if (!this.isActionWhitelisted(\"\".concat(name, \".\").concat(method)) && !Promise.await(this.allowed)) {\n            return;\n          }\n\n          return asyncLocalStorage.run({\n            id: ctx.id,\n            nodeID: ctx.nodeID,\n            requestID: ctx.requestID,\n            broker: this,\n            ctx\n          }, () => i[method](...ctx.params));\n        });\n      }\n\n      this.broker.createService(service);\n    }\n\n    broadcast(event) {\n      return Promise.asyncApply(() => {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        if (!(this.isEventWhitelisted(event) || Promise.await(this.allowed))) {\n          return this.localBroker.broadcast(event, ...args);\n        }\n\n        return this.broker.broadcast(event, args);\n      });\n    }\n\n    broadcastLocal(event) {\n      return Promise.asyncApply(() => {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        this.broker.broadcastLocal(event, args);\n      });\n    }\n\n    nodeList() {\n      return Promise.asyncApply(() => {\n        return this.broker.call('$node.list');\n      });\n    }\n\n    isServiceAllowed(instance) {\n      // check if the service is in the list of allowed services if the list is not empty\n      if (this.allowedList.size > 0 && !this.allowedList.has(instance.getName())) {\n        return false;\n      } // allow only internal services if internalOnly is true\n\n\n      if (this.internalOnly && !instance.isInternal()) {\n        return false;\n      }\n\n      return true;\n    }\n\n  }\n\n  const Base = Serializers.Base;\n\n  class EJSONSerializer extends Base {\n    serialize(obj) {\n      return Buffer.from(EJSON.stringify(obj));\n    }\n\n    deserialize(buf) {\n      return EJSON.parse(buf.toString());\n    }\n\n  }\n\n  const {\n    TRANSPORTER = '',\n    CACHE = 'Memory',\n    // SERIALIZER = 'MsgPack',\n    SERIALIZER = 'EJSON',\n    MOLECULER_LOG_LEVEL = 'error',\n    BALANCE_STRATEGY = 'RoundRobin',\n    BALANCE_PREFER_LOCAL = 'false',\n    RETRY_FACTOR = '2',\n    RETRY_MAX_DELAY = '1000',\n    RETRY_DELAY = '100',\n    RETRY_RETRIES = '5',\n    RETRY_ENABLED = 'false',\n    REQUEST_TIMEOUT = '10',\n    HEARTBEAT_INTERVAL = '10',\n    HEARTBEAT_TIMEOUT = '30',\n    BULKHEAD_ENABLED = 'false',\n    BULKHEAD_CONCURRENCY = '10',\n    BULKHEAD_MAX_QUEUE_SIZE = '10000',\n    MS_METRICS = 'false',\n    MS_METRICS_PORT = '9458',\n    TRACING_ENABLED = 'false',\n    SKIP_PROCESS_EVENT_REGISTRATION = 'true'\n  } = process.env; // only starts network broker if transporter properly configured\n\n  if (TRANSPORTER.match(/^(?:nats|TCP)/)) {\n    const network = new ServiceBroker({\n      // TODO: Reevaluate, without this setting it was preventing the process to stop\n      skipProcessEventRegistration: SKIP_PROCESS_EVENT_REGISTRATION === 'true',\n      transporter: TRANSPORTER,\n      metrics: {\n        enabled: MS_METRICS === 'true',\n        reporter: [{\n          type: 'Prometheus',\n          options: {\n            port: MS_METRICS_PORT\n          }\n        }]\n      },\n      cacher: CACHE,\n      serializer: SERIALIZER === 'EJSON' ? new EJSONSerializer() : SERIALIZER,\n      logLevel: MOLECULER_LOG_LEVEL,\n      // logLevel: {\n      // \t// \"TRACING\": \"trace\",\n      // \t// \"TRANS*\": \"warn\",\n      // \tBROKER: 'debug',\n      // \tTRANSIT: 'debug',\n      // \t'**': 'info',\n      // },\n      logger: {\n        type: 'Console',\n        options: {\n          formatter: 'short'\n        }\n      },\n      registry: {\n        strategy: BALANCE_STRATEGY,\n        preferLocal: BALANCE_PREFER_LOCAL !== 'false'\n      },\n      requestTimeout: parseInt(REQUEST_TIMEOUT) * 1000,\n      retryPolicy: {\n        enabled: RETRY_ENABLED === 'true',\n        retries: parseInt(RETRY_RETRIES),\n        delay: parseInt(RETRY_DELAY),\n        maxDelay: parseInt(RETRY_MAX_DELAY),\n        factor: parseInt(RETRY_FACTOR),\n        check: err => err && !!err.retryable\n      },\n      maxCallLevel: 100,\n      heartbeatInterval: parseInt(HEARTBEAT_INTERVAL),\n      heartbeatTimeout: parseInt(HEARTBEAT_TIMEOUT),\n      // circuitBreaker: {\n      // \tenabled: false,\n      // \tthreshold: 0.5,\n      // \twindowTime: 60,\n      // \tminRequestCount: 20,\n      // \thalfOpenTime: 10 * 1000,\n      // \tcheck: (err: any): boolean => err && err.code >= 500,\n      // },\n      bulkhead: {\n        enabled: BULKHEAD_ENABLED === 'true',\n        concurrency: parseInt(BULKHEAD_CONCURRENCY),\n        maxQueueSize: parseInt(BULKHEAD_MAX_QUEUE_SIZE)\n      },\n      tracing: {\n        enabled: TRACING_ENABLED === 'true',\n        exporter: {\n          type: 'Jaeger',\n          options: {\n            endpoint: null,\n            host: 'jaeger',\n            port: 6832,\n            sampler: {\n              // Sampler type. More info: https://www.jaegertracing.io/docs/1.14/sampling/#client-sampling-configuration\n              type: 'Const',\n              // Sampler specific options.\n              options: {}\n            },\n            // Additional options for `Jaeger.Tracer`\n            tracerOptions: {},\n            // Default tags. They will be added into all span tags.\n            defaultTags: null\n          }\n        }\n      }\n    });\n    new NetworkBroker(network);\n  }\n}.call(this, module);","map":{"version":3,"sources":["ee/server/broker.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServiceBroker, Context, ServiceSchema, Serializers } from 'moleculer';\nimport EJSON from 'ejson';\n\nimport { asyncLocalStorage, License } from '../../server/sdk';\nimport { api } from '../../server/sdk/api';\nimport { IBroker, IBrokerNode, IServiceMetrics } from '../../server/sdk/types/IBroker';\nimport { ServiceClass } from '../../server/sdk/types/ServiceClass';\nimport { EventSignatures } from '../../server/sdk/lib/Events';\nimport { LocalBroker } from '../../server/sdk/lib/LocalBroker';\n\nconst events: { [k: string]: string } = {\n\tonNodeConnected: '$node.connected',\n\tonNodeUpdated: '$node.updated',\n\tonNodeDisconnected: '$node.disconnected',\n};\n\nconst lifecycle: { [k: string]: string } = {\n\tcreated: 'created',\n\tstarted: 'started',\n\tstopped: 'stopped',\n};\n\nconst {\n\tINTERNAL_SERVICES_ONLY = 'false',\n\tSERVICES_ALLOWED = '',\n\tWAIT_FOR_SERVICES_TIMEOUT = '10000', // 10 seconds\n\tWAIT_FOR_SERVICES_WHITELIST_TIMEOUT = '600000', // 10 minutes\n} = process.env;\n\nconst waitForServicesTimeout = parseInt(WAIT_FOR_SERVICES_TIMEOUT, 10) || 10000;\nconst waitForServicesWhitelistTimeout = parseInt(WAIT_FOR_SERVICES_WHITELIST_TIMEOUT, 10) || 600000;\n\nclass NetworkBroker implements IBroker {\n\tprivate broker: ServiceBroker;\n\n\tprivate localBroker = new LocalBroker();\n\n\tprivate allowed: Promise<boolean>;\n\n\tprivate started: Promise<void>;\n\n\tprivate whitelist = {\n\t\tevents: ['license.module', 'watch.settings'],\n\t\tactions: ['license.hasLicense'],\n\t};\n\n\t// whether only internal services are allowed to be registered\n\tprivate internalOnly = ['true', 'yes'].includes(INTERNAL_SERVICES_ONLY.toLowerCase());\n\n\t// list of allowed services to run - has precedence over `internalOnly`\n\tprivate allowedList = new Set<string>(\n\t\tSERVICES_ALLOWED?.split(',')\n\t\t\t.map((i) => i.trim())\n\t\t\t.filter((i) => i),\n\t);\n\n\tmetrics: IServiceMetrics;\n\n\tconstructor(broker: ServiceBroker) {\n\t\tthis.broker = broker;\n\n\t\tapi.setBroker(this);\n\n\t\tthis.metrics = broker.metrics;\n\n\t\tthis.started = this.broker.start();\n\n\t\tthis.allowed = License.hasLicense('scalability');\n\t}\n\n\tisWhitelisted(list: string[], item: string): boolean {\n\t\treturn list.includes(item);\n\t}\n\n\tisActionWhitelisted(method: string): boolean {\n\t\treturn this.isWhitelisted(this.whitelist.actions, method);\n\t}\n\n\tisEventWhitelisted(event: string): boolean {\n\t\treturn this.isWhitelisted(this.whitelist.events, event);\n\t}\n\n\tasync call(method: string, data: any): Promise<any> {\n\t\tawait this.started;\n\n\t\tif (!(this.isActionWhitelisted(method) || (await this.allowed))) {\n\t\t\treturn this.localBroker.call(method, data);\n\t\t}\n\n\t\tconst context = asyncLocalStorage.getStore();\n\t\tif (context?.ctx?.call) {\n\t\t\treturn context.ctx.call(method, data);\n\t\t}\n\n\t\tconst services: { name: string }[] = await this.broker.call('$node.services', {\n\t\t\tonlyAvailable: true,\n\t\t});\n\t\tif (!services.find((service) => service.name === method.split('.')[0])) {\n\t\t\treturn new Error('method-not-available');\n\t\t}\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tasync waitAndCall(method: string, data: any): Promise<any> {\n\t\tawait this.started;\n\n\t\tif (!(this.isActionWhitelisted(method) || (await this.allowed))) {\n\t\t\treturn this.localBroker.call(method, data);\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.broker.waitForServices(\n\t\t\t\tmethod.split('.')[0],\n\t\t\t\tthis.isActionWhitelisted(method) ? waitForServicesWhitelistTimeout : waitForServicesTimeout,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\n\t\tconst context = asyncLocalStorage.getStore();\n\t\tif (context?.ctx?.call) {\n\t\t\treturn context.ctx.call(method, data);\n\t\t}\n\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tdestroyService(instance: ServiceClass): void {\n\t\tthis.localBroker.destroyService(instance);\n\n\t\tthis.broker.destroyService(instance.getName());\n\t}\n\n\tcreateService(instance: ServiceClass): void {\n\t\tif (!this.isServiceAllowed(instance)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.localBroker.createService(instance);\n\n\t\tconst name = instance.getName();\n\n\t\t// Listen for module license\n\t\tinstance.onEvent('license.module', async ({ module, valid }) => {\n\t\t\tif (module === 'scalability') {\n\t\t\t\t// Should we believe on the event only? Could it be a call from the CE version?\n\t\t\t\tthis.allowed = valid ? License.hasLicense('scalability') : Promise.resolve(false);\n\t\t\t\t// console.log('on license.module', { allowed: this.allowed });\n\t\t\t}\n\t\t});\n\n\t\tconst service: ServiceSchema = {\n\t\t\tname,\n\t\t\tactions: {},\n\t\t\tevents: instance.getEvents().reduce<Record<string, Function>>((map, eventName) => {\n\t\t\t\tif (this.isEventWhitelisted(eventName)) {\n\t\t\t\t\tmap[eventName] = (data: Parameters<EventSignatures[typeof eventName]>): void => instance.emit(eventName, ...data);\n\t\t\t\t\treturn map;\n\t\t\t\t}\n\n\t\t\t\tmap[eventName] = (data: Parameters<EventSignatures[typeof eventName]>): any => {\n\t\t\t\t\tthis.allowed.then((allowed) => allowed && instance.emit(eventName, ...data));\n\t\t\t\t};\n\n\t\t\t\treturn map;\n\t\t\t}, {}),\n\t\t};\n\n\t\tif (!service.events || !service.actions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst methods =\n\t\t\tinstance.constructor?.name === 'Object'\n\t\t\t\t? Object.getOwnPropertyNames(instance)\n\t\t\t\t: Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\t\tfor (const method of methods) {\n\t\t\tif (method === 'constructor') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst i = instance as any;\n\n\t\t\tif (method.match(/^on[A-Z]/)) {\n\t\t\t\tservice.events[events[method]] = i[method].bind(i);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lifecycle[method]) {\n\t\t\t\tservice[method] = (): void =>\n\t\t\t\t\tasyncLocalStorage.run(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\tnodeID: this.broker.nodeID,\n\t\t\t\t\t\t\trequestID: null,\n\t\t\t\t\t\t\tbroker: this,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ti[method].bind(i),\n\t\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tservice.actions[method] = async (ctx: Context<[]>): Promise<any> => {\n\t\t\t\tif (!this.isActionWhitelisted(`${name}.${method}`) && !(await this.allowed)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn asyncLocalStorage.run(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: ctx.id,\n\t\t\t\t\t\tnodeID: ctx.nodeID,\n\t\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t\t\tbroker: this,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t},\n\t\t\t\t\t() => i[method](...ctx.params),\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\n\t\tthis.broker.createService(service);\n\t}\n\n\tasync broadcast<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tif (!(this.isEventWhitelisted(event) || (await this.allowed))) {\n\t\t\treturn this.localBroker.broadcast(event, ...args);\n\t\t}\n\t\treturn this.broker.broadcast(event, args);\n\t}\n\n\tasync broadcastLocal<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tthis.broker.broadcastLocal(event, args);\n\t}\n\n\tasync nodeList(): Promise<IBrokerNode[]> {\n\t\treturn this.broker.call('$node.list');\n\t}\n\n\tprivate isServiceAllowed(instance: ServiceClass): boolean {\n\t\t// check if the service is in the list of allowed services if the list is not empty\n\t\tif (this.allowedList.size > 0 && !this.allowedList.has(instance.getName())) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// allow only internal services if internalOnly is true\n\t\tif (this.internalOnly && !instance.isInternal()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nconst Base = Serializers.Base as unknown as new () => {};\n\nclass EJSONSerializer extends Base {\n\tserialize(obj: {}): Buffer {\n\t\treturn Buffer.from(EJSON.stringify(obj));\n\t}\n\n\tdeserialize(buf: Buffer): any {\n\t\treturn EJSON.parse(buf.toString());\n\t}\n}\n\nconst {\n\tTRANSPORTER = '',\n\tCACHE = 'Memory',\n\t// SERIALIZER = 'MsgPack',\n\tSERIALIZER = 'EJSON',\n\tMOLECULER_LOG_LEVEL = 'error',\n\tBALANCE_STRATEGY = 'RoundRobin',\n\tBALANCE_PREFER_LOCAL = 'false',\n\tRETRY_FACTOR = '2',\n\tRETRY_MAX_DELAY = '1000',\n\tRETRY_DELAY = '100',\n\tRETRY_RETRIES = '5',\n\tRETRY_ENABLED = 'false',\n\tREQUEST_TIMEOUT = '10',\n\tHEARTBEAT_INTERVAL = '10',\n\tHEARTBEAT_TIMEOUT = '30',\n\tBULKHEAD_ENABLED = 'false',\n\tBULKHEAD_CONCURRENCY = '10',\n\tBULKHEAD_MAX_QUEUE_SIZE = '10000',\n\tMS_METRICS = 'false',\n\tMS_METRICS_PORT = '9458',\n\tTRACING_ENABLED = 'false',\n\tSKIP_PROCESS_EVENT_REGISTRATION = 'true',\n} = process.env;\n\n// only starts network broker if transporter properly configured\nif (TRANSPORTER.match(/^(?:nats|TCP)/)) {\n\tconst network = new ServiceBroker({\n\t\t// TODO: Reevaluate, without this setting it was preventing the process to stop\n\t\tskipProcessEventRegistration: SKIP_PROCESS_EVENT_REGISTRATION === 'true',\n\t\ttransporter: TRANSPORTER,\n\t\tmetrics: {\n\t\t\tenabled: MS_METRICS === 'true',\n\t\t\treporter: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'Prometheus',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tport: MS_METRICS_PORT,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tcacher: CACHE,\n\t\tserializer: SERIALIZER === 'EJSON' ? new EJSONSerializer() : SERIALIZER,\n\t\tlogLevel: MOLECULER_LOG_LEVEL as any,\n\t\t// logLevel: {\n\t\t// \t// \"TRACING\": \"trace\",\n\t\t// \t// \"TRANS*\": \"warn\",\n\t\t// \tBROKER: 'debug',\n\t\t// \tTRANSIT: 'debug',\n\t\t// \t'**': 'info',\n\t\t// },\n\t\tlogger: {\n\t\t\ttype: 'Console',\n\t\t\toptions: {\n\t\t\t\tformatter: 'short',\n\t\t\t},\n\t\t},\n\t\tregistry: {\n\t\t\tstrategy: BALANCE_STRATEGY,\n\t\t\tpreferLocal: BALANCE_PREFER_LOCAL !== 'false',\n\t\t},\n\n\t\trequestTimeout: parseInt(REQUEST_TIMEOUT) * 1000,\n\t\tretryPolicy: {\n\t\t\tenabled: RETRY_ENABLED === 'true',\n\t\t\tretries: parseInt(RETRY_RETRIES),\n\t\t\tdelay: parseInt(RETRY_DELAY),\n\t\t\tmaxDelay: parseInt(RETRY_MAX_DELAY),\n\t\t\tfactor: parseInt(RETRY_FACTOR),\n\t\t\tcheck: (err: any): boolean => err && !!err.retryable,\n\t\t},\n\n\t\tmaxCallLevel: 100,\n\t\theartbeatInterval: parseInt(HEARTBEAT_INTERVAL),\n\t\theartbeatTimeout: parseInt(HEARTBEAT_TIMEOUT),\n\n\t\t// circuitBreaker: {\n\t\t// \tenabled: false,\n\t\t// \tthreshold: 0.5,\n\t\t// \twindowTime: 60,\n\t\t// \tminRequestCount: 20,\n\t\t// \thalfOpenTime: 10 * 1000,\n\t\t// \tcheck: (err: any): boolean => err && err.code >= 500,\n\t\t// },\n\n\t\tbulkhead: {\n\t\t\tenabled: BULKHEAD_ENABLED === 'true',\n\t\t\tconcurrency: parseInt(BULKHEAD_CONCURRENCY),\n\t\t\tmaxQueueSize: parseInt(BULKHEAD_MAX_QUEUE_SIZE),\n\t\t},\n\n\t\ttracing: {\n\t\t\tenabled: TRACING_ENABLED === 'true',\n\t\t\texporter: {\n\t\t\t\ttype: 'Jaeger',\n\t\t\t\toptions: {\n\t\t\t\t\tendpoint: null,\n\t\t\t\t\thost: 'jaeger',\n\t\t\t\t\tport: 6832,\n\t\t\t\t\tsampler: {\n\t\t\t\t\t\t// Sampler type. More info: https://www.jaegertracing.io/docs/1.14/sampling/#client-sampling-configuration\n\t\t\t\t\t\ttype: 'Const',\n\t\t\t\t\t\t// Sampler specific options.\n\t\t\t\t\t\toptions: {},\n\t\t\t\t\t},\n\t\t\t\t\t// Additional options for `Jaeger.Tracer`\n\t\t\t\t\ttracerOptions: {},\n\t\t\t\t\t// Default tags. They will be added into all span tags.\n\t\t\t\t\tdefaultTags: null,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\n\tnew NetworkBroker(network);\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"1e2aa5e675ab356cd06f2fd71ace4ac6d2b8c91b"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Db } from 'mongodb';\nimport Agenda from 'agenda';\nimport { MongoInternals } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { settings } from '../../../../../app/settings/server';\nimport { Logger } from '../../../../../app/logger/server';\nimport { LivechatRooms, Users, LivechatInquiry } from '../../../../../app/models/server';\nimport { Livechat } from '../../../../../app/livechat/server/lib/Livechat';\nimport { IUser } from '../../../../../definition/IUser';\nimport { IOmnichannelRoom } from '../../../../../definition/IRoom';\n\nconst SCHEDULER_NAME = 'omnichannel_queue_inactivity_monitor';\n\nexport class OmnichannelQueueInactivityMonitorClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tlogger: Logger;\n\n\t_name: string;\n\n\tuser: IUser;\n\n\tmessage: string;\n\n\t_db: Db;\n\n\tbindedCloseRoom: any;\n\n\tconstructor() {\n\t\tthis._db = MongoInternals.defaultRemoteCollectionDriver().mongo.db;\n\t\tthis.running = false;\n\t\tthis._name = 'Omnichannel-Queue-Inactivity-Monitor';\n\t\tthis.logger = new Logger('QueueInactivityMonitor');\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t});\n\t\tthis.createIndex();\n\t\tthis.user = Users.findOneById('rocket.cat');\n\t\tconst language = settings.get<string>('Language') || 'en';\n\t\tthis.message = TAPi18n.__('Closed_automatically_chat_queued_too_long', { lng: language });\n\t\tthis.bindedCloseRoom = Meteor.bindEnvironment(this.closeRoom.bind(this));\n\t}\n\n\tgetName(inquiryId: string): string {\n\t\treturn `${this._name}-${inquiryId}`;\n\t}\n\n\tcreateIndex(): void {\n\t\tthis._db.collection(SCHEDULER_NAME).createIndex(\n\t\t\t{\n\t\t\t\t'data.inquiryId': 1,\n\t\t\t},\n\t\t\t{ unique: true },\n\t\t);\n\t}\n\n\tstart(): void {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tPromise.await(this.scheduler.start());\n\t\tthis.running = true;\n\t}\n\n\tscheduleInquiry(inquiryId: string, time: Date): void {\n\t\tPromise.await(this.stopInquiry(inquiryId));\n\t\tthis.logger.debug(`Scheduling automatic close of inquiry ${inquiryId} at ${time}`);\n\t\tconst name = this.getName(inquiryId);\n\t\tthis.scheduler.define(name, this.bindedCloseRoom);\n\n\t\tconst job = this.scheduler.create(name, { inquiryId });\n\t\tjob.schedule(time);\n\t\tjob.unique({ 'data.inquiryId': inquiryId });\n\t\tPromise.await(job.save());\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.scheduler.cancel({});\n\t}\n\n\tasync stopInquiry(inquiryId: string): Promise<void> {\n\t\tconst name = this.getName(inquiryId);\n\t\tawait this.scheduler.cancel({ name });\n\t}\n\n\tcloseRoomAction(room: IOmnichannelRoom): void {\n\t\tconst comment = this.message;\n\t\tLivechat.closeRoom({\n\t\t\tcomment,\n\t\t\troom,\n\t\t\tuser: this.user,\n\t\t\tvisitor: null,\n\t\t});\n\t}\n\n\tcloseRoom({ attrs: { data } }: any = {}): void {\n\t\tconst { inquiryId } = data;\n\t\tconst inquiry = LivechatInquiry.findOneById(inquiryId);\n\n\t\tthis.logger.debug(`Processing inquiry item ${inquiryId}`);\n\t\tif (!inquiry || inquiry.status !== 'queued') {\n\t\t\tthis.logger.debug(`Skipping inquiry ${inquiryId}. Invalid or not queued anymore`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.closeRoomAction(LivechatRooms.findOneById(inquiry.rid));\n\t\tPromise.await(this.stopInquiry(inquiryId));\n\t\tthis.logger.debug(`Running succesful. Closed inquiry ${inquiry._id} because of inactivity`);\n\t}\n}\n\nexport const OmnichannelQueueInactivityMonitor = new OmnichannelQueueInactivityMonitorClass();\n\nMeteor.startup(() => {\n\tOmnichannelQueueInactivityMonitor.start();\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts"}},"code":"module.export({\n  OmnichannelQueueInactivityMonitorClass: () => OmnichannelQueueInactivityMonitorClass,\n  OmnichannelQueueInactivityMonitor: () => OmnichannelQueueInactivityMonitor\n});\nlet Agenda;\nmodule.link(\"agenda\", {\n  default(v) {\n    Agenda = v;\n  }\n\n}, 0);\nlet MongoInternals;\nmodule.link(\"meteor/mongo\", {\n  MongoInternals(v) {\n    MongoInternals = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet Logger;\nmodule.link(\"../../../../../app/logger/server\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 5);\nlet LivechatRooms, Users, LivechatInquiry;\nmodule.link(\"../../../../../app/models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  LivechatInquiry(v) {\n    LivechatInquiry = v;\n  }\n\n}, 6);\nlet Livechat;\nmodule.link(\"../../../../../app/livechat/server/lib/Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 7);\nconst SCHEDULER_NAME = 'omnichannel_queue_inactivity_monitor';\n\nclass OmnichannelQueueInactivityMonitorClass {\n  constructor() {\n    this.scheduler = void 0;\n    this.running = void 0;\n    this.logger = void 0;\n    this._name = void 0;\n    this.user = void 0;\n    this.message = void 0;\n    this._db = void 0;\n    this.bindedCloseRoom = void 0;\n    this._db = MongoInternals.defaultRemoteCollectionDriver().mongo.db;\n    this.running = false;\n    this._name = 'Omnichannel-Queue-Inactivity-Monitor';\n    this.logger = new Logger('QueueInactivityMonitor');\n    this.scheduler = new Agenda({\n      mongo: MongoInternals.defaultRemoteCollectionDriver().mongo.client.db(),\n      db: {\n        collection: SCHEDULER_NAME\n      },\n      defaultConcurrency: 1\n    });\n    this.createIndex();\n    this.user = Users.findOneById('rocket.cat');\n    const language = settings.get('Language') || 'en';\n    this.message = TAPi18n.__('Closed_automatically_chat_queued_too_long', {\n      lng: language\n    });\n    this.bindedCloseRoom = Meteor.bindEnvironment(this.closeRoom.bind(this));\n  }\n\n  getName(inquiryId) {\n    return \"\".concat(this._name, \"-\").concat(inquiryId);\n  }\n\n  createIndex() {\n    this._db.collection(SCHEDULER_NAME).createIndex({\n      'data.inquiryId': 1\n    }, {\n      unique: true\n    });\n  }\n\n  start() {\n    if (this.running) {\n      return;\n    }\n\n    Promise.await(this.scheduler.start());\n    this.running = true;\n  }\n\n  scheduleInquiry(inquiryId, time) {\n    Promise.await(this.stopInquiry(inquiryId));\n    this.logger.debug(\"Scheduling automatic close of inquiry \".concat(inquiryId, \" at \").concat(time));\n    const name = this.getName(inquiryId);\n    this.scheduler.define(name, this.bindedCloseRoom);\n    const job = this.scheduler.create(name, {\n      inquiryId\n    });\n    job.schedule(time);\n    job.unique({\n      'data.inquiryId': inquiryId\n    });\n    Promise.await(job.save());\n  }\n\n  stop() {\n    return Promise.asyncApply(() => {\n      if (!this.running) {\n        return;\n      }\n\n      Promise.await(this.scheduler.cancel({}));\n    });\n  }\n\n  stopInquiry(inquiryId) {\n    return Promise.asyncApply(() => {\n      const name = this.getName(inquiryId);\n      Promise.await(this.scheduler.cancel({\n        name\n      }));\n    });\n  }\n\n  closeRoomAction(room) {\n    const comment = this.message;\n    Livechat.closeRoom({\n      comment,\n      room,\n      user: this.user,\n      visitor: null\n    });\n  }\n\n  closeRoom() {\n    let {\n      attrs: {\n        data\n      }\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      inquiryId\n    } = data;\n    const inquiry = LivechatInquiry.findOneById(inquiryId);\n    this.logger.debug(\"Processing inquiry item \".concat(inquiryId));\n\n    if (!inquiry || inquiry.status !== 'queued') {\n      this.logger.debug(\"Skipping inquiry \".concat(inquiryId, \". Invalid or not queued anymore\"));\n      return;\n    }\n\n    this.closeRoomAction(LivechatRooms.findOneById(inquiry.rid));\n    Promise.await(this.stopInquiry(inquiryId));\n    this.logger.debug(\"Running succesful. Closed inquiry \".concat(inquiry._id, \" because of inactivity\"));\n  }\n\n}\n\nconst OmnichannelQueueInactivityMonitor = new OmnichannelQueueInactivityMonitorClass();\nMeteor.startup(() => {\n  OmnichannelQueueInactivityMonitor.start();\n});","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Db } from 'mongodb';\nimport Agenda from 'agenda';\nimport { MongoInternals } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { settings } from '../../../../../app/settings/server';\nimport { Logger } from '../../../../../app/logger/server';\nimport { LivechatRooms, Users, LivechatInquiry } from '../../../../../app/models/server';\nimport { Livechat } from '../../../../../app/livechat/server/lib/Livechat';\nimport { IUser } from '../../../../../definition/IUser';\nimport { IOmnichannelRoom } from '../../../../../definition/IRoom';\n\nconst SCHEDULER_NAME = 'omnichannel_queue_inactivity_monitor';\n\nexport class OmnichannelQueueInactivityMonitorClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tlogger: Logger;\n\n\t_name: string;\n\n\tuser: IUser;\n\n\tmessage: string;\n\n\t_db: Db;\n\n\tbindedCloseRoom: any;\n\n\tconstructor() {\n\t\tthis._db = MongoInternals.defaultRemoteCollectionDriver().mongo.db;\n\t\tthis.running = false;\n\t\tthis._name = 'Omnichannel-Queue-Inactivity-Monitor';\n\t\tthis.logger = new Logger('QueueInactivityMonitor');\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t});\n\t\tthis.createIndex();\n\t\tthis.user = Users.findOneById('rocket.cat');\n\t\tconst language = settings.get<string>('Language') || 'en';\n\t\tthis.message = TAPi18n.__('Closed_automatically_chat_queued_too_long', { lng: language });\n\t\tthis.bindedCloseRoom = Meteor.bindEnvironment(this.closeRoom.bind(this));\n\t}\n\n\tgetName(inquiryId: string): string {\n\t\treturn `${this._name}-${inquiryId}`;\n\t}\n\n\tcreateIndex(): void {\n\t\tthis._db.collection(SCHEDULER_NAME).createIndex(\n\t\t\t{\n\t\t\t\t'data.inquiryId': 1,\n\t\t\t},\n\t\t\t{ unique: true },\n\t\t);\n\t}\n\n\tstart(): void {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tPromise.await(this.scheduler.start());\n\t\tthis.running = true;\n\t}\n\n\tscheduleInquiry(inquiryId: string, time: Date): void {\n\t\tPromise.await(this.stopInquiry(inquiryId));\n\t\tthis.logger.debug(`Scheduling automatic close of inquiry ${inquiryId} at ${time}`);\n\t\tconst name = this.getName(inquiryId);\n\t\tthis.scheduler.define(name, this.bindedCloseRoom);\n\n\t\tconst job = this.scheduler.create(name, { inquiryId });\n\t\tjob.schedule(time);\n\t\tjob.unique({ 'data.inquiryId': inquiryId });\n\t\tPromise.await(job.save());\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.scheduler.cancel({});\n\t}\n\n\tasync stopInquiry(inquiryId: string): Promise<void> {\n\t\tconst name = this.getName(inquiryId);\n\t\tawait this.scheduler.cancel({ name });\n\t}\n\n\tcloseRoomAction(room: IOmnichannelRoom): void {\n\t\tconst comment = this.message;\n\t\tLivechat.closeRoom({\n\t\t\tcomment,\n\t\t\troom,\n\t\t\tuser: this.user,\n\t\t\tvisitor: null,\n\t\t});\n\t}\n\n\tcloseRoom({ attrs: { data } }: any = {}): void {\n\t\tconst { inquiryId } = data;\n\t\tconst inquiry = LivechatInquiry.findOneById(inquiryId);\n\n\t\tthis.logger.debug(`Processing inquiry item ${inquiryId}`);\n\t\tif (!inquiry || inquiry.status !== 'queued') {\n\t\t\tthis.logger.debug(`Skipping inquiry ${inquiryId}. Invalid or not queued anymore`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.closeRoomAction(LivechatRooms.findOneById(inquiry.rid));\n\t\tPromise.await(this.stopInquiry(inquiryId));\n\t\tthis.logger.debug(`Running succesful. Closed inquiry ${inquiry._id} because of inactivity`);\n\t}\n}\n\nexport const OmnichannelQueueInactivityMonitor = new OmnichannelQueueInactivityMonitorClass();\n\nMeteor.startup(() => {\n\tOmnichannelQueueInactivityMonitor.start();\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"b95602f9b91c49cb7364051ca46c0b49a8726593"}

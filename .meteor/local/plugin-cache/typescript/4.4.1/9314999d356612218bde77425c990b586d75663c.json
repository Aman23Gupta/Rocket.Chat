{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/analytics/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/analytics/service.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/analytics/service.ts","inputSourceMap":{"version":3,"file":"server/services/analytics/service.ts","sourceRoot":"","sources":["server/services/analytics/service.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAE5D,OAAO,EAAE,YAAY,EAAE,MAAM,0CAA0C,CAAC;AAGxE,MAAM,OAAO,gBAAiB,SAAQ,YAAY;IACvC,IAAI,GAAG,WAAW,CAAC;IAErB,SAAS,CAAe;IAEhC,YAAY,EAAM;QACjB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,KAAK,CAAC,eAAe;QACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,KAAK,CAAC,mBAAmB;QACxB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAwB,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC,CAAC;QACjG,OAAO,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,qBAAqB;QAC1B,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACjG,CAAC;CACD","sourcesContent":["import type { Db } from 'mongodb';\n\nimport { ServiceClass } from '../../sdk/types/ServiceClass';\nimport { IAnalyticsService } from '../../sdk/types/IAnalyticsService';\nimport { AnalyticsRaw } from '../../../app/models/server/raw/Analytics';\nimport { IAnalyticsSeatRequest } from '../../../definition/IAnalytic';\n\nexport class AnalyticsService extends ServiceClass implements IAnalyticsService {\n\tprotected name = 'analytics';\n\n\tprivate Analytics: AnalyticsRaw;\n\n\tconstructor(db: Db) {\n\t\tsuper();\n\t\tthis.Analytics = new AnalyticsRaw(db.collection('rocketchat_analytics'));\n\t}\n\n\tasync saveSeatRequest(): Promise<void> {\n\t\tthis.Analytics.update({ type: 'seat-request' }, { $inc: { count: 1 } }, { upsert: true });\n\t}\n\n\tasync getSeatRequestCount(): Promise<number> {\n\t\tconst result = await this.Analytics.findOne<IAnalyticsSeatRequest>({ type: 'seat-request' }, {});\n\t\treturn result?.count ? result.count : 0;\n\t}\n\n\tasync resetSeatRequestCount(): Promise<void> {\n\t\tawait this.Analytics.update({ type: 'seat-request' }, { $set: { count: 0 } }, { upsert: true });\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/analytics/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/analytics/service.ts"}},"code":"module.export({\n  AnalyticsService: () => AnalyticsService\n});\nlet ServiceClass;\nmodule.link(\"../../sdk/types/ServiceClass\", {\n  ServiceClass(v) {\n    ServiceClass = v;\n  }\n\n}, 0);\nlet AnalyticsRaw;\nmodule.link(\"../../../app/models/server/raw/Analytics\", {\n  AnalyticsRaw(v) {\n    AnalyticsRaw = v;\n  }\n\n}, 1);\n\nclass AnalyticsService extends ServiceClass {\n  constructor(db) {\n    super();\n    this.name = 'analytics';\n    this.Analytics = void 0;\n    this.Analytics = new AnalyticsRaw(db.collection('rocketchat_analytics'));\n  }\n\n  saveSeatRequest() {\n    return Promise.asyncApply(() => {\n      this.Analytics.update({\n        type: 'seat-request'\n      }, {\n        $inc: {\n          count: 1\n        }\n      }, {\n        upsert: true\n      });\n    });\n  }\n\n  getSeatRequestCount() {\n    return Promise.asyncApply(() => {\n      const result = Promise.await(this.Analytics.findOne({\n        type: 'seat-request'\n      }, {}));\n      return result !== null && result !== void 0 && result.count ? result.count : 0;\n    });\n  }\n\n  resetSeatRequestCount() {\n    return Promise.asyncApply(() => {\n      Promise.await(this.Analytics.update({\n        type: 'seat-request'\n      }, {\n        $set: {\n          count: 0\n        }\n      }, {\n        upsert: true\n      }));\n    });\n  }\n\n}","map":{"version":3,"sources":["server/services/analytics/service.ts"],"names":[],"mappings":"AAEA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,gBAAoB,EAAA,MAAA;AAApB,CAAT;AAA6B,IAA8B,YAA9B;AAA+B,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0CAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAKtD,MAAO,gBAAP,SAAgC,YAAhC,CAA4C;AAKjD,EAAA,WAAA,CAAY,EAAZ,EAAkB;AACjB;AADiB,SAJR,IAIQ,GAJD,WAIC;AAAA,SAFV,SAEU;AAEjB,SAAK,SAAL,GAAiB,IAAI,YAAJ,CAAiB,EAAE,CAAC,UAAH,CAAc,sBAAd,CAAjB,CAAjB;AACA;;AAEK,EAAA,eAAe;AAAA,oCAAA;AACpB,WAAK,SAAL,CAAe,MAAf,CAAsB;AAAE,QAAA,IAAI,EAAE;AAAR,OAAtB,EAAgD;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA,KAAK,EAAE;AAAT;AAAR,OAAhD,EAAwE;AAAE,QAAA,MAAM,EAAE;AAAV,OAAxE;AACA,KAFoB;AAAA;;AAIf,EAAA,mBAAmB;AAAA,oCAAA;AACxB,YAAM,MAAM,iBAAS,KAAK,SAAL,CAAe,OAAf,CAA8C;AAAE,QAAA,IAAI,EAAE;AAAR,OAA9C,EAAwE,EAAxE,CAAT,CAAZ;AACA,aAAO,MAAM,SAAN,IAAA,MAAM,WAAN,IAAA,MAAM,CAAE,KAAR,GAAgB,MAAM,CAAC,KAAvB,GAA+B,CAAtC;AACA,KAHwB;AAAA;;AAKnB,EAAA,qBAAqB;AAAA,oCAAA;AAC1B,oBAAM,KAAK,SAAL,CAAe,MAAf,CAAsB;AAAE,QAAA,IAAI,EAAE;AAAR,OAAtB,EAAgD;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA,KAAK,EAAE;AAAT;AAAR,OAAhD,EAAwE;AAAE,QAAA,MAAM,EAAE;AAAV,OAAxE,CAAN;AACA,KAF0B;AAAA;;AAnBsB","sourcesContent":["import type { Db } from 'mongodb';\n\nimport { ServiceClass } from '../../sdk/types/ServiceClass';\nimport { IAnalyticsService } from '../../sdk/types/IAnalyticsService';\nimport { AnalyticsRaw } from '../../../app/models/server/raw/Analytics';\nimport { IAnalyticsSeatRequest } from '../../../definition/IAnalytic';\n\nexport class AnalyticsService extends ServiceClass implements IAnalyticsService {\n\tprotected name = 'analytics';\n\n\tprivate Analytics: AnalyticsRaw;\n\n\tconstructor(db: Db) {\n\t\tsuper();\n\t\tthis.Analytics = new AnalyticsRaw(db.collection('rocketchat_analytics'));\n\t}\n\n\tasync saveSeatRequest(): Promise<void> {\n\t\tthis.Analytics.update({ type: 'seat-request' }, { $inc: { count: 1 } }, { upsert: true });\n\t}\n\n\tasync getSeatRequestCount(): Promise<number> {\n\t\tconst result = await this.Analytics.findOne<IAnalyticsSeatRequest>({ type: 'seat-request' }, {});\n\t\treturn result?.count ? result.count : 0;\n\t}\n\n\tasync resetSeatRequestCount(): Promise<void> {\n\t\tawait this.Analytics.update({ type: 'seat-request' }, { $set: { count: 0 } }, { upsert: true });\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"9314999d356612218bde77425c990b586d75663c"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/generators/LogoutRequest.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/lib/generators/LogoutRequest.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/generators/LogoutRequest.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/generators/LogoutRequest.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/generators/LogoutRequest.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,MAAM,cAAc,CAAC;AAKrF;;EAEE;AACF,MAAM,OAAO,aAAa;IACzB,MAAM,CAAC,QAAQ,CAAC,sBAA+C,EAAE,MAAc,EAAE,YAAoB;QACpG,MAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;QACrF,MAAM,OAAO,GAAG,SAAS,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,qBAAqB,IAAI,4BAA4B,EAAE,IAAI,CAAC,CAAC;QAE/H,SAAS,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACzD,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEvB,OAAO;YACN,OAAO;YACP,EAAE,EAAE,IAAI,CAAC,KAAK;SACd,CAAC;IACH,CAAC;IAED,MAAM,CAAC,oBAAoB,CAC1B,sBAA+C,EAC/C,MAAc,EACd,YAAoB;QAEpB,gDAAgD;QAChD,6BAA6B;QAC7B,yFAAyF;QAEzF,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC;QAC9C,MAAM,OAAO,GAAG,SAAS,CAAC,eAAe,EAAE,CAAC;QAE5C,OAAO;YACN,KAAK,EAAE,EAAE;YACT,OAAO;YACP,iBAAiB,EAAE,sBAAsB,CAAC,iBAAiB;YAC3D,MAAM,EAAE,sBAAsB,CAAC,MAAM;YACrC,gBAAgB,EAAE,sBAAsB,CAAC,gBAAgB,IAAI,uBAAuB;YACpF,MAAM;YACN,YAAY;SACZ,CAAC;IACH,CAAC;CACD","sourcesContent":["import { SAMLUtils } from '../Utils';\nimport { defaultIdentifierFormat, defaultLogoutRequestTemplate } from '../constants';\nimport { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport { ISAMLRequest } from '../../definition/ISAMLRequest';\nimport { ILogoutRequestVariables } from '../../definition/ILogoutRequestVariables';\n\n/*\n\tA Logout Request is used when the user is logged out of Rocket.Chat and the Service Provider is configured to also logout from the Identity Provider.\n*/\nexport class LogoutRequest {\n\tstatic generate(serviceProviderOptions: IServiceProviderOptions, nameID: string, sessionIndex: string): ISAMLRequest {\n\t\tconst data = this.getDataForNewRequest(serviceProviderOptions, nameID, sessionIndex);\n\t\tconst request = SAMLUtils.fillTemplateData(serviceProviderOptions.logoutRequestTemplate || defaultLogoutRequestTemplate, data);\n\n\t\tSAMLUtils.log('------- SAML Logout request -----------');\n\t\tSAMLUtils.log(request);\n\n\t\treturn {\n\t\t\trequest,\n\t\t\tid: data.newId,\n\t\t};\n\t}\n\n\tstatic getDataForNewRequest(\n\t\tserviceProviderOptions: IServiceProviderOptions,\n\t\tnameID: string,\n\t\tsessionIndex: string,\n\t): ILogoutRequestVariables {\n\t\t// nameId: <nameId as submitted during SAML SSO>\n\t\t// sessionIndex: sessionIndex\n\t\t// --- NO SAMLsettings: <Meteor.setting.saml  entry for the provider you want to SLO from\n\n\t\tconst id = `_${SAMLUtils.generateUniqueID()}`;\n\t\tconst instant = SAMLUtils.generateInstant();\n\n\t\treturn {\n\t\t\tnewId: id,\n\t\t\tinstant,\n\t\t\tidpSLORedirectURL: serviceProviderOptions.idpSLORedirectURL,\n\t\t\tissuer: serviceProviderOptions.issuer,\n\t\t\tidentifierFormat: serviceProviderOptions.identifierFormat || defaultIdentifierFormat,\n\t\t\tnameID,\n\t\t\tsessionIndex,\n\t\t};\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/lib/generators/LogoutRequest.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/lib/generators/LogoutRequest.ts"}},"code":"module.export({\n  LogoutRequest: () => LogoutRequest\n});\nlet SAMLUtils;\nmodule.link(\"../Utils\", {\n  SAMLUtils(v) {\n    SAMLUtils = v;\n  }\n\n}, 0);\nlet defaultIdentifierFormat, defaultLogoutRequestTemplate;\nmodule.link(\"../constants\", {\n  defaultIdentifierFormat(v) {\n    defaultIdentifierFormat = v;\n  },\n\n  defaultLogoutRequestTemplate(v) {\n    defaultLogoutRequestTemplate = v;\n  }\n\n}, 1);\n\nclass LogoutRequest {\n  static generate(serviceProviderOptions, nameID, sessionIndex) {\n    const data = this.getDataForNewRequest(serviceProviderOptions, nameID, sessionIndex);\n    const request = SAMLUtils.fillTemplateData(serviceProviderOptions.logoutRequestTemplate || defaultLogoutRequestTemplate, data);\n    SAMLUtils.log('------- SAML Logout request -----------');\n    SAMLUtils.log(request);\n    return {\n      request,\n      id: data.newId\n    };\n  }\n\n  static getDataForNewRequest(serviceProviderOptions, nameID, sessionIndex) {\n    // nameId: <nameId as submitted during SAML SSO>\n    // sessionIndex: sessionIndex\n    // --- NO SAMLsettings: <Meteor.setting.saml  entry for the provider you want to SLO from\n    const id = \"_\".concat(SAMLUtils.generateUniqueID());\n    const instant = SAMLUtils.generateInstant();\n    return {\n      newId: id,\n      instant,\n      idpSLORedirectURL: serviceProviderOptions.idpSLORedirectURL,\n      issuer: serviceProviderOptions.issuer,\n      identifierFormat: serviceProviderOptions.identifierFormat || defaultIdentifierFormat,\n      nameID,\n      sessionIndex\n    };\n  }\n\n}","map":{"version":3,"sources":["app/meteor-accounts-saml/server/lib/generators/LogoutRequest.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,aAAiB,EAAA,MAAA;AAAjB,CAAT;AAAqC,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,uBAAA,EAAA,4BAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,uBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,4BAAA,CAAA,CAAA,EAAA;AAAA,IAAA,4BAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAS/B,MAAO,aAAP,CAAoB;AACV,SAAR,QAAQ,CAAC,sBAAD,EAAkD,MAAlD,EAAkE,YAAlE,EAAsF;AACpG,UAAM,IAAI,GAAG,KAAK,oBAAL,CAA0B,sBAA1B,EAAkD,MAAlD,EAA0D,YAA1D,CAAb;AACA,UAAM,OAAO,GAAG,SAAS,CAAC,gBAAV,CAA2B,sBAAsB,CAAC,qBAAvB,IAAgD,4BAA3E,EAAyG,IAAzG,CAAhB;AAEA,IAAA,SAAS,CAAC,GAAV,CAAc,yCAAd;AACA,IAAA,SAAS,CAAC,GAAV,CAAc,OAAd;AAEA,WAAO;AACN,MAAA,OADM;AAEN,MAAA,EAAE,EAAE,IAAI,CAAC;AAFH,KAAP;AAIA;;AAE0B,SAApB,oBAAoB,CAC1B,sBAD0B,EAE1B,MAF0B,EAG1B,YAH0B,EAGN;AAEpB;AACA;AACA;AAEA,UAAM,EAAE,cAAO,SAAS,CAAC,gBAAV,EAAP,CAAR;AACA,UAAM,OAAO,GAAG,SAAS,CAAC,eAAV,EAAhB;AAEA,WAAO;AACN,MAAA,KAAK,EAAE,EADD;AAEN,MAAA,OAFM;AAGN,MAAA,iBAAiB,EAAE,sBAAsB,CAAC,iBAHpC;AAIN,MAAA,MAAM,EAAE,sBAAsB,CAAC,MAJzB;AAKN,MAAA,gBAAgB,EAAE,sBAAsB,CAAC,gBAAvB,IAA2C,uBALvD;AAMN,MAAA,MANM;AAON,MAAA;AAPM,KAAP;AASA;;AAnCwB","sourcesContent":["import { SAMLUtils } from '../Utils';\nimport { defaultIdentifierFormat, defaultLogoutRequestTemplate } from '../constants';\nimport { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport { ISAMLRequest } from '../../definition/ISAMLRequest';\nimport { ILogoutRequestVariables } from '../../definition/ILogoutRequestVariables';\n\n/*\n\tA Logout Request is used when the user is logged out of Rocket.Chat and the Service Provider is configured to also logout from the Identity Provider.\n*/\nexport class LogoutRequest {\n\tstatic generate(serviceProviderOptions: IServiceProviderOptions, nameID: string, sessionIndex: string): ISAMLRequest {\n\t\tconst data = this.getDataForNewRequest(serviceProviderOptions, nameID, sessionIndex);\n\t\tconst request = SAMLUtils.fillTemplateData(serviceProviderOptions.logoutRequestTemplate || defaultLogoutRequestTemplate, data);\n\n\t\tSAMLUtils.log('------- SAML Logout request -----------');\n\t\tSAMLUtils.log(request);\n\n\t\treturn {\n\t\t\trequest,\n\t\t\tid: data.newId,\n\t\t};\n\t}\n\n\tstatic getDataForNewRequest(\n\t\tserviceProviderOptions: IServiceProviderOptions,\n\t\tnameID: string,\n\t\tsessionIndex: string,\n\t): ILogoutRequestVariables {\n\t\t// nameId: <nameId as submitted during SAML SSO>\n\t\t// sessionIndex: sessionIndex\n\t\t// --- NO SAMLsettings: <Meteor.setting.saml  entry for the provider you want to SLO from\n\n\t\tconst id = `_${SAMLUtils.generateUniqueID()}`;\n\t\tconst instant = SAMLUtils.generateInstant();\n\n\t\treturn {\n\t\t\tnewId: id,\n\t\t\tinstant,\n\t\t\tidpSLORedirectURL: serviceProviderOptions.idpSLORedirectURL,\n\t\t\tissuer: serviceProviderOptions.issuer,\n\t\t\tidentifierFormat: serviceProviderOptions.identifierFormat || defaultIdentifierFormat,\n\t\t\tnameID,\n\t\t\tsessionIndex,\n\t\t};\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"1333eb901cf98542c514117ef6ac4ac74bd0e467"}

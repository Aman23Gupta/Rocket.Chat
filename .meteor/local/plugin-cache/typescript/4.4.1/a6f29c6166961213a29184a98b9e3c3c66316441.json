{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/configuration/oauth.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/configuration/oauth.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/configuration/oauth.ts","inputSourceMap":{"version":3,"file":"ee/server/configuration/oauth.ts","sourceRoot":"","sources":["ee/server/configuration/oauth.ts"],"names":[],"mappings":"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","sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\n\nimport { OAuthEEManager } from '../lib/oauth/Manager';\nimport { onLicense } from '../../app/license/server';\nimport { callbacks } from '../../../lib/callbacks';\nimport { settings } from '../../../app/settings/server';\nimport { Logger } from '../../../app/logger/server';\n\ninterface IOAuthUserService {\n\tserviceName: string;\n\tserviceData: Record<string, any>;\n\tuser: Record<string, any>;\n}\n\ninterface IOAuthUserIdentity {\n\tserviceName: string;\n\tidentity: Record<string, any>;\n\tuser: Record<string, any>;\n}\n\ninterface IOAuthSettings {\n\tmapChannels: string;\n\tmergeRoles: string;\n\trolesToSync: string;\n\trolesClaim: string;\n\tgroupsClaim: string;\n\tchannelsAdmin: string;\n\tchannelsMap: string;\n}\n\nconst logger = new Logger('EECustomOAuth');\n\nfunction getOAuthSettings(serviceName: string): IOAuthSettings {\n\treturn {\n\t\tmapChannels: settings.get(`Accounts_OAuth_Custom-${serviceName}-map_channels`) as string,\n\t\tmergeRoles: settings.get(`Accounts_OAuth_Custom-${serviceName}-merge_roles`) as string,\n\t\trolesToSync: settings.get(`Accounts_OAuth_Custom-${serviceName}-roles_to_sync`) as string,\n\t\trolesClaim: settings.get(`Accounts_OAuth_Custom-${serviceName}-roles_claim`) as string,\n\t\tgroupsClaim: settings.get(`Accounts_OAuth_Custom-${serviceName}-groups_claim`) as string,\n\t\tchannelsAdmin: settings.get(`Accounts_OAuth_Custom-${serviceName}-channels_admin`) as string,\n\t\tchannelsMap: settings.get(`Accounts_OAuth_Custom-${serviceName}-channels_map`) as string,\n\t};\n}\n\nfunction getChannelsMap(channelsMap: string): Record<string, any> | undefined {\n\tchannelsMap = (channelsMap || '{}').trim();\n\n\ttry {\n\t\treturn JSON.parse(channelsMap);\n\t} catch (err) {\n\t\tlogger.error(`Unexpected error : ${err}`);\n\t}\n}\n\nonLicense('oauth-enterprise', () => {\n\tcallbacks.add('afterProcessOAuthUser', (auth: IOAuthUserService) => {\n\t\tauth.serviceName = capitalize(auth.serviceName);\n\t\tconst settings = getOAuthSettings(auth.serviceName);\n\n\t\tif (settings.mapChannels) {\n\t\t\tconst channelsMap = getChannelsMap(settings.channelsMap);\n\t\t\tOAuthEEManager.mapSSOGroupsToChannels(auth.user, auth.serviceData, settings.groupsClaim, channelsMap, settings.channelsAdmin);\n\t\t}\n\n\t\tif (settings.mergeRoles) {\n\t\t\tOAuthEEManager.updateRolesFromSSO(\n\t\t\t\tauth.user,\n\t\t\t\tauth.serviceData,\n\t\t\t\tsettings.rolesClaim,\n\t\t\t\tsettings.rolesToSync.split(',').map((role) => role.trim()),\n\t\t\t);\n\t\t}\n\t});\n\n\tcallbacks.add('afterValidateNewOAuthUser', (auth: IOAuthUserIdentity) => {\n\t\tauth.serviceName = capitalize(auth.serviceName);\n\t\tconst settings = getOAuthSettings(auth.serviceName);\n\n\t\tif (settings.mapChannels) {\n\t\t\tconst channelsMap = getChannelsMap(settings.channelsMap);\n\t\t\tOAuthEEManager.mapSSOGroupsToChannels(auth.user, auth.identity, settings.groupsClaim, channelsMap, settings.channelsAdmin);\n\t\t}\n\n\t\tif (settings.mergeRoles) {\n\t\t\tauth.user.roles = OAuthEEManager.mapRolesFromSSO(auth.identity, settings.rolesClaim);\n\t\t}\n\t});\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/configuration/oauth.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/configuration/oauth.ts"}},"code":"let capitalize;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  capitalize(v) {\n    capitalize = v;\n  }\n\n}, 0);\nlet OAuthEEManager;\nmodule.link(\"../lib/oauth/Manager\", {\n  OAuthEEManager(v) {\n    OAuthEEManager = v;\n  }\n\n}, 1);\nlet onLicense;\nmodule.link(\"../../app/license/server\", {\n  onLicense(v) {\n    onLicense = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet Logger;\nmodule.link(\"../../../app/logger/server\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 5);\nconst logger = new Logger('EECustomOAuth');\n\nfunction getOAuthSettings(serviceName) {\n  return {\n    mapChannels: settings.get(\"Accounts_OAuth_Custom-\".concat(serviceName, \"-map_channels\")),\n    mergeRoles: settings.get(\"Accounts_OAuth_Custom-\".concat(serviceName, \"-merge_roles\")),\n    rolesToSync: settings.get(\"Accounts_OAuth_Custom-\".concat(serviceName, \"-roles_to_sync\")),\n    rolesClaim: settings.get(\"Accounts_OAuth_Custom-\".concat(serviceName, \"-roles_claim\")),\n    groupsClaim: settings.get(\"Accounts_OAuth_Custom-\".concat(serviceName, \"-groups_claim\")),\n    channelsAdmin: settings.get(\"Accounts_OAuth_Custom-\".concat(serviceName, \"-channels_admin\")),\n    channelsMap: settings.get(\"Accounts_OAuth_Custom-\".concat(serviceName, \"-channels_map\"))\n  };\n}\n\nfunction getChannelsMap(channelsMap) {\n  channelsMap = (channelsMap || '{}').trim();\n\n  try {\n    return JSON.parse(channelsMap);\n  } catch (err) {\n    logger.error(\"Unexpected error : \".concat(err));\n  }\n}\n\nonLicense('oauth-enterprise', () => {\n  callbacks.add('afterProcessOAuthUser', auth => {\n    auth.serviceName = capitalize(auth.serviceName);\n    const settings = getOAuthSettings(auth.serviceName);\n\n    if (settings.mapChannels) {\n      const channelsMap = getChannelsMap(settings.channelsMap);\n      OAuthEEManager.mapSSOGroupsToChannels(auth.user, auth.serviceData, settings.groupsClaim, channelsMap, settings.channelsAdmin);\n    }\n\n    if (settings.mergeRoles) {\n      OAuthEEManager.updateRolesFromSSO(auth.user, auth.serviceData, settings.rolesClaim, settings.rolesToSync.split(',').map(role => role.trim()));\n    }\n  });\n  callbacks.add('afterValidateNewOAuthUser', auth => {\n    auth.serviceName = capitalize(auth.serviceName);\n    const settings = getOAuthSettings(auth.serviceName);\n\n    if (settings.mapChannels) {\n      const channelsMap = getChannelsMap(settings.channelsMap);\n      OAuthEEManager.mapSSOGroupsToChannels(auth.user, auth.identity, settings.groupsClaim, channelsMap, settings.channelsAdmin);\n    }\n\n    if (settings.mergeRoles) {\n      auth.user.roles = OAuthEEManager.mapRolesFromSSO(auth.identity, settings.rolesClaim);\n    }\n  });\n});","map":{"version":3,"sources":["ee/server/configuration/oauth.ts"],"names":[],"mappings":"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","sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\n\nimport { OAuthEEManager } from '../lib/oauth/Manager';\nimport { onLicense } from '../../app/license/server';\nimport { callbacks } from '../../../lib/callbacks';\nimport { settings } from '../../../app/settings/server';\nimport { Logger } from '../../../app/logger/server';\n\ninterface IOAuthUserService {\n\tserviceName: string;\n\tserviceData: Record<string, any>;\n\tuser: Record<string, any>;\n}\n\ninterface IOAuthUserIdentity {\n\tserviceName: string;\n\tidentity: Record<string, any>;\n\tuser: Record<string, any>;\n}\n\ninterface IOAuthSettings {\n\tmapChannels: string;\n\tmergeRoles: string;\n\trolesToSync: string;\n\trolesClaim: string;\n\tgroupsClaim: string;\n\tchannelsAdmin: string;\n\tchannelsMap: string;\n}\n\nconst logger = new Logger('EECustomOAuth');\n\nfunction getOAuthSettings(serviceName: string): IOAuthSettings {\n\treturn {\n\t\tmapChannels: settings.get(`Accounts_OAuth_Custom-${serviceName}-map_channels`) as string,\n\t\tmergeRoles: settings.get(`Accounts_OAuth_Custom-${serviceName}-merge_roles`) as string,\n\t\trolesToSync: settings.get(`Accounts_OAuth_Custom-${serviceName}-roles_to_sync`) as string,\n\t\trolesClaim: settings.get(`Accounts_OAuth_Custom-${serviceName}-roles_claim`) as string,\n\t\tgroupsClaim: settings.get(`Accounts_OAuth_Custom-${serviceName}-groups_claim`) as string,\n\t\tchannelsAdmin: settings.get(`Accounts_OAuth_Custom-${serviceName}-channels_admin`) as string,\n\t\tchannelsMap: settings.get(`Accounts_OAuth_Custom-${serviceName}-channels_map`) as string,\n\t};\n}\n\nfunction getChannelsMap(channelsMap: string): Record<string, any> | undefined {\n\tchannelsMap = (channelsMap || '{}').trim();\n\n\ttry {\n\t\treturn JSON.parse(channelsMap);\n\t} catch (err) {\n\t\tlogger.error(`Unexpected error : ${err}`);\n\t}\n}\n\nonLicense('oauth-enterprise', () => {\n\tcallbacks.add('afterProcessOAuthUser', (auth: IOAuthUserService) => {\n\t\tauth.serviceName = capitalize(auth.serviceName);\n\t\tconst settings = getOAuthSettings(auth.serviceName);\n\n\t\tif (settings.mapChannels) {\n\t\t\tconst channelsMap = getChannelsMap(settings.channelsMap);\n\t\t\tOAuthEEManager.mapSSOGroupsToChannels(auth.user, auth.serviceData, settings.groupsClaim, channelsMap, settings.channelsAdmin);\n\t\t}\n\n\t\tif (settings.mergeRoles) {\n\t\t\tOAuthEEManager.updateRolesFromSSO(\n\t\t\t\tauth.user,\n\t\t\t\tauth.serviceData,\n\t\t\t\tsettings.rolesClaim,\n\t\t\t\tsettings.rolesToSync.split(',').map((role) => role.trim()),\n\t\t\t);\n\t\t}\n\t});\n\n\tcallbacks.add('afterValidateNewOAuthUser', (auth: IOAuthUserIdentity) => {\n\t\tauth.serviceName = capitalize(auth.serviceName);\n\t\tconst settings = getOAuthSettings(auth.serviceName);\n\n\t\tif (settings.mapChannels) {\n\t\t\tconst channelsMap = getChannelsMap(settings.channelsMap);\n\t\t\tOAuthEEManager.mapSSOGroupsToChannels(auth.user, auth.identity, settings.groupsClaim, channelsMap, settings.channelsAdmin);\n\t\t}\n\n\t\tif (settings.mergeRoles) {\n\t\t\tauth.user.roles = OAuthEEManager.mapRolesFromSSO(auth.identity, settings.rolesClaim);\n\t\t}\n\t});\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"a6f29c6166961213a29184a98b9e3c3c66316441"}

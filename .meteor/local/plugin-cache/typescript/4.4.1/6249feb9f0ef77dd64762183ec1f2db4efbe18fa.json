{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/environmental.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/bridges/environmental.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/environmental.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/environmental.ts","sourceRoot":"","sources":["app/apps/server/bridges/environmental.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,2BAA2B,EAAE,MAAM,qEAAqE,CAAC;AAIlH,MAAM,OAAO,8BAA+B,SAAQ,2BAA2B;IAIjD;IAH7B,OAAO,CAAgB;IAEvB,6CAA6C;IAC7C,YAA6B,IAA2B;QACvD,KAAK,EAAE,CAAC;QADoB,SAAI,GAAJ,IAAI,CAAuB;QAEvD,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;IACxD,CAAC;IAES,KAAK,CAAC,cAAc,CAAC,UAAkB,EAAE,KAAa;QAC/D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,gDAAgD,UAAU,GAAG,CAAC,CAAC;QAElG,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE;YAChD,MAAM,IAAI,KAAK,CAAC,+BAA+B,UAAU,oBAAoB,CAAC,CAAC;SAC/E;QAED,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAES,KAAK,CAAC,UAAU,CAAC,UAAkB,EAAE,KAAa;QAC3D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,0DAA0D,UAAU,GAAG,CAAC,CAAC;QAE5G,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;IACxD,CAAC;IAES,KAAK,CAAC,KAAK,CAAC,UAAkB,EAAE,KAAa;QACtD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,qDAAqD,UAAU,GAAG,CAAC,CAAC;QAEvG,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE;YAChD,MAAM,IAAI,KAAK,CAAC,+BAA+B,UAAU,oBAAoB,CAAC,CAAC;SAC/E;QAED,OAAO,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,WAAW,CAAC;IACvD,CAAC;CACD","sourcesContent":["import { EnvironmentalVariableBridge } from '@rocket.chat/apps-engine/server/bridges/EnvironmentalVariableBridge';\n\nimport { AppServerOrchestrator } from '../orchestrator';\n\nexport class AppEnvironmentalVariableBridge extends EnvironmentalVariableBridge {\n\tallowed: Array<string>;\n\n\t// eslint-disable-next-line no-empty-function\n\tconstructor(private readonly orch: AppServerOrchestrator) {\n\t\tsuper();\n\t\tthis.allowed = ['NODE_ENV', 'ROOT_URL', 'INSTANCE_IP'];\n\t}\n\n\tprotected async getValueByName(envVarName: string, appId: string): Promise<string | undefined> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the environmental variable value ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn process.env[envVarName];\n\t}\n\n\tprotected async isReadable(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is readable ${envVarName}.`);\n\n\t\treturn this.allowed.includes(envVarName.toUpperCase());\n\t}\n\n\tprotected async isSet(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is set ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn typeof process.env[envVarName] !== 'undefined';\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/environmental.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/bridges/environmental.ts"}},"code":"module.export({\n  AppEnvironmentalVariableBridge: () => AppEnvironmentalVariableBridge\n});\nlet EnvironmentalVariableBridge;\nmodule.link(\"@rocket.chat/apps-engine/server/bridges/EnvironmentalVariableBridge\", {\n  EnvironmentalVariableBridge(v) {\n    EnvironmentalVariableBridge = v;\n  }\n\n}, 0);\n\nclass AppEnvironmentalVariableBridge extends EnvironmentalVariableBridge {\n  // eslint-disable-next-line no-empty-function\n  constructor(orch) {\n    super();\n    this.orch = void 0;\n    this.allowed = void 0;\n    this.orch = orch;\n    this.allowed = ['NODE_ENV', 'ROOT_URL', 'INSTANCE_IP'];\n  }\n\n  getValueByName(envVarName, appId) {\n    return Promise.asyncApply(() => {\n      this.orch.debugLog(\"The App \".concat(appId, \" is getting the environmental variable value \").concat(envVarName, \".\"));\n\n      if (!Promise.await(this.isReadable(envVarName, appId))) {\n        throw new Error(\"The environmental variable \\\"\".concat(envVarName, \"\\\" is not readable.\"));\n      }\n\n      return process.env[envVarName];\n    });\n  }\n\n  isReadable(envVarName, appId) {\n    return Promise.asyncApply(() => {\n      this.orch.debugLog(\"The App \".concat(appId, \" is checking if the environmental variable is readable \").concat(envVarName, \".\"));\n      return this.allowed.includes(envVarName.toUpperCase());\n    });\n  }\n\n  isSet(envVarName, appId) {\n    return Promise.asyncApply(() => {\n      this.orch.debugLog(\"The App \".concat(appId, \" is checking if the environmental variable is set \").concat(envVarName, \".\"));\n\n      if (!Promise.await(this.isReadable(envVarName, appId))) {\n        throw new Error(\"The environmental variable \\\"\".concat(envVarName, \"\\\" is not readable.\"));\n      }\n\n      return typeof process.env[envVarName] !== 'undefined';\n    });\n  }\n\n}","map":{"version":3,"sources":["app/apps/server/bridges/environmental.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,8BAAmC,EAAA,MAAA;AAAnC,CAAT;AAA4C,IAAA,2BAAA;AAAsE,MAAA,CAAA,IAAA,CAAA,qEAAA,EAAA;AAAA,EAAA,2BAAA,CAAA,CAAA,EAAA;AAAA,IAAA,2BAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAI5G,MAAO,8BAAP,SAA8C,2BAA9C,CAAyE;AAG9E;AACA,EAAA,WAAA,CAA6B,IAA7B,EAAwD;AACvD;AADuD,SAA3B,IAA2B;AAAA,SAHxD,OAGwD;AAA3B,SAAA,IAAA,GAAA,IAAA;AAE5B,SAAK,OAAL,GAAe,CAAC,UAAD,EAAa,UAAb,EAAyB,aAAzB,CAAf;AACA;;AAEe,EAAA,cAAc,CAAC,UAAD,EAAqB,KAArB;AAAA,oCAAkC;AAC/D,WAAK,IAAL,CAAU,QAAV,mBAA8B,KAA9B,0DAAmF,UAAnF;;AAEA,UAAI,eAAQ,KAAK,UAAL,CAAgB,UAAhB,EAA4B,KAA5B,CAAR,CAAJ,EAAiD;AAChD,cAAM,IAAI,KAAJ,wCAAyC,UAAzC,yBAAN;AACA;;AAED,aAAO,OAAO,CAAC,GAAR,CAAY,UAAZ,CAAP;AACA,KAR6B;AAAA;;AAUd,EAAA,UAAU,CAAC,UAAD,EAAqB,KAArB;AAAA,oCAAkC;AAC3D,WAAK,IAAL,CAAU,QAAV,mBAA8B,KAA9B,oEAA6F,UAA7F;AAEA,aAAO,KAAK,OAAL,CAAa,QAAb,CAAsB,UAAU,CAAC,WAAX,EAAtB,CAAP;AACA,KAJyB;AAAA;;AAMV,EAAA,KAAK,CAAC,UAAD,EAAqB,KAArB;AAAA,oCAAkC;AACtD,WAAK,IAAL,CAAU,QAAV,mBAA8B,KAA9B,+DAAwF,UAAxF;;AAEA,UAAI,eAAQ,KAAK,UAAL,CAAgB,UAAhB,EAA4B,KAA5B,CAAR,CAAJ,EAAiD;AAChD,cAAM,IAAI,KAAJ,wCAAyC,UAAzC,yBAAN;AACA;;AAED,aAAO,OAAO,OAAO,CAAC,GAAR,CAAY,UAAZ,CAAP,KAAmC,WAA1C;AACA,KARoB;AAAA;;AAzByD","sourcesContent":["import { EnvironmentalVariableBridge } from '@rocket.chat/apps-engine/server/bridges/EnvironmentalVariableBridge';\n\nimport { AppServerOrchestrator } from '../orchestrator';\n\nexport class AppEnvironmentalVariableBridge extends EnvironmentalVariableBridge {\n\tallowed: Array<string>;\n\n\t// eslint-disable-next-line no-empty-function\n\tconstructor(private readonly orch: AppServerOrchestrator) {\n\t\tsuper();\n\t\tthis.allowed = ['NODE_ENV', 'ROOT_URL', 'INSTANCE_IP'];\n\t}\n\n\tprotected async getValueByName(envVarName: string, appId: string): Promise<string | undefined> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the environmental variable value ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn process.env[envVarName];\n\t}\n\n\tprotected async isReadable(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is readable ${envVarName}.`);\n\n\t\treturn this.allowed.includes(envVarName.toUpperCase());\n\t}\n\n\tprotected async isSet(envVarName: string, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is checking if the environmental variable is set ${envVarName}.`);\n\n\t\tif (!(await this.isReadable(envVarName, appId))) {\n\t\t\tthrow new Error(`The environmental variable \"${envVarName}\" is not readable.`);\n\t\t}\n\n\t\treturn typeof process.env[envVarName] !== 'undefined';\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"6249feb9f0ef77dd64762183ec1f2db4efbe18fa"}

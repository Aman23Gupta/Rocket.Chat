{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/methods/resumeOnHold.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/methods/resumeOnHold.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/methods/resumeOnHold.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/methods/resumeOnHold.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/methods/resumeOnHold.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { LivechatRooms, LivechatInquiry, Messages, Users, LivechatVisitors } from '../../../../../app/models/server';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { callbacks } from '../../../../../lib/callbacks';\n\nconst resolveOnHoldCommentInfo = (options: { clientAction: boolean }, room: any, onHoldChatResumedBy: any): string => {\n\tlet comment = '';\n\tif (options.clientAction) {\n\t\tcomment = TAPi18n.__('Omnichannel_on_hold_chat_manually', {\n\t\t\tuser: onHoldChatResumedBy.name || onHoldChatResumedBy.username,\n\t\t});\n\t} else {\n\t\tconst {\n\t\t\tv: { _id: visitorId },\n\t\t} = room;\n\t\tconst visitor = LivechatVisitors.findOneById(visitorId, { name: 1, username: 1 });\n\t\tif (!visitor) {\n\t\t\tthrow new Meteor.Error('error-invalid_visitor', 'Visitor Not found');\n\t\t}\n\t\tconst guest = visitor.name || visitor.username;\n\t\tcomment = TAPi18n.__('Omnichannel_on_hold_chat_automatically', { guest });\n\t}\n\n\treturn comment;\n};\n\nMeteor.methods({\n\tasync 'livechat:resumeOnHold'(roomId, options = { clientAction: false }) {\n\t\tconst room = await LivechatRooms.findOneById(roomId);\n\t\tif (!room || room.t !== 'l') {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'livechat:resumeOnHold',\n\t\t\t});\n\t\t}\n\n\t\tif (!room.onHold) {\n\t\t\tthrow new Meteor.Error('room-closed', 'Room is not OnHold', {\n\t\t\t\tmethod: 'livechat:resumeOnHold',\n\t\t\t});\n\t\t}\n\n\t\tconst inquiry = LivechatInquiry.findOneByRoomId(roomId, {});\n\t\tif (!inquiry) {\n\t\t\tthrow new Meteor.Error('inquiry-not-found', 'Error! No inquiry found for this room', {\n\t\t\t\tmethod: 'livechat:resumeOnHold',\n\t\t\t});\n\t\t}\n\n\t\tconst {\n\t\t\tservedBy: { _id: agentId, username },\n\t\t} = room;\n\t\tawait RoutingManager.takeInquiry(inquiry, { agentId, username }, options);\n\n\t\tconst onHoldChatResumedBy = options.clientAction ? Meteor.user() : Users.findOneById('rocket.cat');\n\n\t\tconst comment = resolveOnHoldCommentInfo(options, room, onHoldChatResumedBy);\n\t\t(Messages as any).createOnHoldResumedHistoryWithRoomIdMessageAndUser(roomId, comment, onHoldChatResumedBy);\n\n\t\tconst updatedRoom = LivechatRooms.findOneById(roomId);\n\t\tupdatedRoom && Meteor.defer(() => callbacks.run('livechat:afterOnHoldChatResumed', updatedRoom));\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/methods/resumeOnHold.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/methods/resumeOnHold.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\nlet LivechatRooms, LivechatInquiry, Messages, Users, LivechatVisitors;\nmodule.link(\"../../../../../app/models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  LivechatInquiry(v) {\n    LivechatInquiry = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  }\n\n}, 2);\nlet RoutingManager;\nmodule.link(\"../../../../../app/livechat/server/lib/RoutingManager\", {\n  RoutingManager(v) {\n    RoutingManager = v;\n  }\n\n}, 3);\nlet callbacks;\nmodule.link(\"../../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 4);\n\nconst resolveOnHoldCommentInfo = (options, room, onHoldChatResumedBy) => {\n  let comment = '';\n\n  if (options.clientAction) {\n    comment = TAPi18n.__('Omnichannel_on_hold_chat_manually', {\n      user: onHoldChatResumedBy.name || onHoldChatResumedBy.username\n    });\n  } else {\n    const {\n      v: {\n        _id: visitorId\n      }\n    } = room;\n    const visitor = LivechatVisitors.findOneById(visitorId, {\n      name: 1,\n      username: 1\n    });\n\n    if (!visitor) {\n      throw new Meteor.Error('error-invalid_visitor', 'Visitor Not found');\n    }\n\n    const guest = visitor.name || visitor.username;\n    comment = TAPi18n.__('Omnichannel_on_hold_chat_automatically', {\n      guest\n    });\n  }\n\n  return comment;\n};\n\nMeteor.methods({\n  'livechat:resumeOnHold'(roomId) {\n    return Promise.asyncApply(() => {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        clientAction: false\n      };\n      const room = Promise.await(LivechatRooms.findOneById(roomId));\n\n      if (!room || room.t !== 'l') {\n        throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n          method: 'livechat:resumeOnHold'\n        });\n      }\n\n      if (!room.onHold) {\n        throw new Meteor.Error('room-closed', 'Room is not OnHold', {\n          method: 'livechat:resumeOnHold'\n        });\n      }\n\n      const inquiry = LivechatInquiry.findOneByRoomId(roomId, {});\n\n      if (!inquiry) {\n        throw new Meteor.Error('inquiry-not-found', 'Error! No inquiry found for this room', {\n          method: 'livechat:resumeOnHold'\n        });\n      }\n\n      const {\n        servedBy: {\n          _id: agentId,\n          username\n        }\n      } = room;\n      Promise.await(RoutingManager.takeInquiry(inquiry, {\n        agentId,\n        username\n      }, options));\n      const onHoldChatResumedBy = options.clientAction ? Meteor.user() : Users.findOneById('rocket.cat');\n      const comment = resolveOnHoldCommentInfo(options, room, onHoldChatResumedBy);\n      Messages.createOnHoldResumedHistoryWithRoomIdMessageAndUser(roomId, comment, onHoldChatResumedBy);\n      const updatedRoom = LivechatRooms.findOneById(roomId);\n      updatedRoom && Meteor.defer(() => callbacks.run('livechat:afterOnHoldChatResumed', updatedRoom));\n    });\n  }\n\n});","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/methods/resumeOnHold.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { LivechatRooms, LivechatInquiry, Messages, Users, LivechatVisitors } from '../../../../../app/models/server';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { callbacks } from '../../../../../lib/callbacks';\n\nconst resolveOnHoldCommentInfo = (options: { clientAction: boolean }, room: any, onHoldChatResumedBy: any): string => {\n\tlet comment = '';\n\tif (options.clientAction) {\n\t\tcomment = TAPi18n.__('Omnichannel_on_hold_chat_manually', {\n\t\t\tuser: onHoldChatResumedBy.name || onHoldChatResumedBy.username,\n\t\t});\n\t} else {\n\t\tconst {\n\t\t\tv: { _id: visitorId },\n\t\t} = room;\n\t\tconst visitor = LivechatVisitors.findOneById(visitorId, { name: 1, username: 1 });\n\t\tif (!visitor) {\n\t\t\tthrow new Meteor.Error('error-invalid_visitor', 'Visitor Not found');\n\t\t}\n\t\tconst guest = visitor.name || visitor.username;\n\t\tcomment = TAPi18n.__('Omnichannel_on_hold_chat_automatically', { guest });\n\t}\n\n\treturn comment;\n};\n\nMeteor.methods({\n\tasync 'livechat:resumeOnHold'(roomId, options = { clientAction: false }) {\n\t\tconst room = await LivechatRooms.findOneById(roomId);\n\t\tif (!room || room.t !== 'l') {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'livechat:resumeOnHold',\n\t\t\t});\n\t\t}\n\n\t\tif (!room.onHold) {\n\t\t\tthrow new Meteor.Error('room-closed', 'Room is not OnHold', {\n\t\t\t\tmethod: 'livechat:resumeOnHold',\n\t\t\t});\n\t\t}\n\n\t\tconst inquiry = LivechatInquiry.findOneByRoomId(roomId, {});\n\t\tif (!inquiry) {\n\t\t\tthrow new Meteor.Error('inquiry-not-found', 'Error! No inquiry found for this room', {\n\t\t\t\tmethod: 'livechat:resumeOnHold',\n\t\t\t});\n\t\t}\n\n\t\tconst {\n\t\t\tservedBy: { _id: agentId, username },\n\t\t} = room;\n\t\tawait RoutingManager.takeInquiry(inquiry, { agentId, username }, options);\n\n\t\tconst onHoldChatResumedBy = options.clientAction ? Meteor.user() : Users.findOneById('rocket.cat');\n\n\t\tconst comment = resolveOnHoldCommentInfo(options, room, onHoldChatResumedBy);\n\t\t(Messages as any).createOnHoldResumedHistoryWithRoomIdMessageAndUser(roomId, comment, onHoldChatResumedBy);\n\n\t\tconst updatedRoom = LivechatRooms.findOneById(roomId);\n\t\tupdatedRoom && Meteor.defer(() => callbacks.run('livechat:afterOnHoldChatResumed', updatedRoom));\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"d3b82536eaa5c6b56459edfbf5dbfe1902f1bacc"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/LivechatBusinessHours.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/models/LivechatBusinessHours.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/LivechatBusinessHours.ts","inputSourceMap":{"version":3,"file":"app/models/server/models/LivechatBusinessHours.ts","sourceRoot":"","sources":["app/models/server/models/LivechatBusinessHours.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAEnC,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAC/B,OAAO,EAAyB,yBAAyB,EAAE,MAAM,8CAA8C,CAAC;AAEhH,MAAM,CAAC,MAAM,4BAA4B,GAAG,GAA0B,EAAE;IACvE,MAAM,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC5F,MAAM,UAAU,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC1C,OAAO;QACN,GAAG,EAAE,IAAI,QAAQ,EAAE,CAAC,WAAW,EAAE;QACjC,IAAI,EAAE,EAAE;QACR,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,yBAAyB,CAAC,OAAO;QACvC,EAAE,EAAE,IAAI,IAAI,EAAE;QACd,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YACpC,GAAG;YACH,KAAK,EAAE;gBACN,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE;oBACJ,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACpE,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;iBAChE;gBACD,IAAI,EAAE;oBACL,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC9D,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;iBAC1D;aACD;YACD,MAAM,EAAE;gBACP,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE;oBACJ,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACpE,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;iBAChE;gBACD,IAAI,EAAE;oBACL,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC9D,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;iBAC1D;aACD;YACD,IAAI,EAAE,KAAK,GAAG,CAAC;YACf,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC;SAC/B,CAAC,CAAC;QACH,QAAQ,EAAE;YACT,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;YACvB,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC;SACtC;KACD,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,OAAO,qBAAsB,SAAQ,IAAI;IAC9C;QACC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAEjC,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;CACD;AAED,eAAe,IAAI,qBAAqB,EAAE,CAAC","sourcesContent":["import moment from 'moment-timezone';\nimport { ObjectId } from 'mongodb';\n\nimport { Base } from './_Base';\nimport { ILivechatBusinessHour, LivechatBusinessHourTypes } from '../../../../definition/ILivechatBusinessHour';\n\nexport const createDefaultBusinessHourRow = (): ILivechatBusinessHour => {\n\tconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\tconst closedDays = ['Saturday', 'Sunday'];\n\treturn {\n\t\t_id: new ObjectId().toHexString(),\n\t\tname: '',\n\t\tactive: true,\n\t\ttype: LivechatBusinessHourTypes.DEFAULT,\n\t\tts: new Date(),\n\t\tworkHours: days.map((day, index) => ({\n\t\t\tday,\n\t\t\tstart: {\n\t\t\t\ttime: '08:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfinish: {\n\t\t\t\ttime: '20:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcode: index + 1,\n\t\t\topen: !closedDays.includes(day),\n\t\t})),\n\t\ttimezone: {\n\t\t\tname: moment.tz.guess(),\n\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t},\n\t};\n};\n\nexport class LivechatBusinessHours extends Base {\n\tconstructor() {\n\t\tsuper('livechat_business_hours');\n\n\t\tthis.tryEnsureIndex({ name: 1 }, { unique: true });\n\t}\n}\n\nexport default new LivechatBusinessHours();\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/LivechatBusinessHours.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/models/LivechatBusinessHours.ts"}},"code":"module.export({\n  createDefaultBusinessHourRow: () => createDefaultBusinessHourRow,\n  LivechatBusinessHours: () => LivechatBusinessHours\n});\nlet moment;\nmodule.link(\"moment-timezone\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet ObjectId;\nmodule.link(\"mongodb\", {\n  ObjectId(v) {\n    ObjectId = v;\n  }\n\n}, 1);\nlet Base;\nmodule.link(\"./_Base\", {\n  Base(v) {\n    Base = v;\n  }\n\n}, 2);\nlet LivechatBusinessHourTypes;\nmodule.link(\"../../../../definition/ILivechatBusinessHour\", {\n  LivechatBusinessHourTypes(v) {\n    LivechatBusinessHourTypes = v;\n  }\n\n}, 3);\n\nconst createDefaultBusinessHourRow = () => {\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const closedDays = ['Saturday', 'Sunday'];\n  return {\n    _id: new ObjectId().toHexString(),\n    name: '',\n    active: true,\n    type: LivechatBusinessHourTypes.DEFAULT,\n    ts: new Date(),\n    workHours: days.map((day, index) => ({\n      day,\n      start: {\n        time: '08:00',\n        utc: {\n          dayOfWeek: moment(\"\".concat(day, \":08:00\"), 'dddd:HH:mm').utc().format('dddd'),\n          time: moment(\"\".concat(day, \":08:00\"), 'dddd:HH:mm').utc().format('HH:mm')\n        },\n        cron: {\n          dayOfWeek: moment(\"\".concat(day, \":08:00\"), 'dddd:HH:mm').format('dddd'),\n          time: moment(\"\".concat(day, \":08:00\"), 'dddd:HH:mm').format('HH:mm')\n        }\n      },\n      finish: {\n        time: '20:00',\n        utc: {\n          dayOfWeek: moment(\"\".concat(day, \":20:00\"), 'dddd:HH:mm').utc().format('dddd'),\n          time: moment(\"\".concat(day, \":20:00\"), 'dddd:HH:mm').utc().format('HH:mm')\n        },\n        cron: {\n          dayOfWeek: moment(\"\".concat(day, \":20:00\"), 'dddd:HH:mm').format('dddd'),\n          time: moment(\"\".concat(day, \":20:00\"), 'dddd:HH:mm').format('HH:mm')\n        }\n      },\n      code: index + 1,\n      open: !closedDays.includes(day)\n    })),\n    timezone: {\n      name: moment.tz.guess(),\n      utc: String(moment().utcOffset() / 60)\n    }\n  };\n};\n\nclass LivechatBusinessHours extends Base {\n  constructor() {\n    super('livechat_business_hours');\n    this.tryEnsureIndex({\n      name: 1\n    }, {\n      unique: true\n    });\n  }\n\n}\n\nmodule.exportDefault(new LivechatBusinessHours());","map":{"version":3,"sources":["app/models/server/models/LivechatBusinessHours.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from 'moment-timezone';\nimport { ObjectId } from 'mongodb';\n\nimport { Base } from './_Base';\nimport { ILivechatBusinessHour, LivechatBusinessHourTypes } from '../../../../definition/ILivechatBusinessHour';\n\nexport const createDefaultBusinessHourRow = (): ILivechatBusinessHour => {\n\tconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\tconst closedDays = ['Saturday', 'Sunday'];\n\treturn {\n\t\t_id: new ObjectId().toHexString(),\n\t\tname: '',\n\t\tactive: true,\n\t\ttype: LivechatBusinessHourTypes.DEFAULT,\n\t\tts: new Date(),\n\t\tworkHours: days.map((day, index) => ({\n\t\t\tday,\n\t\t\tstart: {\n\t\t\t\ttime: '08:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfinish: {\n\t\t\t\ttime: '20:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcode: index + 1,\n\t\t\topen: !closedDays.includes(day),\n\t\t})),\n\t\ttimezone: {\n\t\t\tname: moment.tz.guess(),\n\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t},\n\t};\n};\n\nexport class LivechatBusinessHours extends Base {\n\tconstructor() {\n\t\tsuper('livechat_business_hours');\n\n\t\tthis.tryEnsureIndex({ name: 1 }, { unique: true });\n\t}\n}\n\nexport default new LivechatBusinessHours();\n"],"sourceRoot":""},"sourceType":"module","hash":"b609289edd968db8e6d184aa1d86c52e7abc8c2b"}

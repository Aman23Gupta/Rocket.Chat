{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatAgentActivity.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/LivechatAgentActivity.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatAgentActivity.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/LivechatAgentActivity.ts","sourceRoot":"","sources":["app/models/server/raw/LivechatAgentActivity.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { AggregationCursor } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ILivechatAgentActivity } from '../../../../definition/ILivechatAgentActivity';\n\nexport class LivechatAgentActivityRaw extends BaseRaw<ILivechatAgentActivity> {\n\tfindAllAverageAvailableServiceTime({ date, departmentId }: { date: Date; departmentId: string }): Promise<ILivechatAgentActivity[]> {\n\t\tconst match = { $match: { date } };\n\t\tconst lookup = {\n\t\t\t$lookup: {\n\t\t\t\tfrom: 'rocketchat_livechat_department_agents',\n\t\t\t\tlocalField: 'agentId',\n\t\t\t\tforeignField: 'agentId',\n\t\t\t\tas: 'departments',\n\t\t\t},\n\t\t};\n\t\tconst unwind = {\n\t\t\t$unwind: {\n\t\t\t\tpath: '$departments',\n\t\t\t\tpreserveNullAndEmptyArrays: true,\n\t\t\t},\n\t\t};\n\t\tconst departmentsMatch = {\n\t\t\t$match: {\n\t\t\t\t'departments.departmentId': departmentId,\n\t\t\t},\n\t\t};\n\t\tconst sumAvailableTimeWithCurrentTime = {\n\t\t\t$sum: [{ $divide: [{ $subtract: [new Date(), '$lastStartedAt'] }, 1000] }, '$availableTime'],\n\t\t};\n\t\tconst group = {\n\t\t\t$group: {\n\t\t\t\t_id: null,\n\t\t\t\tallAvailableTimeInSeconds: {\n\t\t\t\t\t$sum: {\n\t\t\t\t\t\t$cond: [{ $ifNull: ['$lastStoppedAt', false] }, '$availableTime', sumAvailableTimeWithCurrentTime],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trooms: { $sum: 1 },\n\t\t\t},\n\t\t};\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\taverageAvailableServiceTimeInSeconds: {\n\t\t\t\t\t$trunc: {\n\t\t\t\t\t\t$cond: [{ $eq: ['$rooms', 0] }, 0, { $divide: ['$allAvailableTimeInSeconds', '$rooms'] }],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tconst params = [match] as object[];\n\t\tif (departmentId && departmentId !== 'undefined') {\n\t\t\tparams.push(lookup);\n\t\t\tparams.push(unwind);\n\t\t\tparams.push(departmentsMatch);\n\t\t}\n\t\tparams.push(group);\n\t\tparams.push(project);\n\t\treturn this.col.aggregate(params).toArray();\n\t}\n\n\tfindAvailableServiceTimeHistory({\n\t\tstart,\n\t\tend,\n\t\tfullReport,\n\t\tonlyCount = false,\n\t\toptions = {},\n\t}: {\n\t\tstart: string;\n\t\tend: string;\n\t\tfullReport: boolean;\n\t\tonlyCount: boolean;\n\t\toptions: any;\n\t}): AggregationCursor<ILivechatAgentActivity> {\n\t\tconst match = {\n\t\t\t$match: {\n\t\t\t\tdate: {\n\t\t\t\t\t$gte: parseInt(moment(start).format('YYYYMMDD')),\n\t\t\t\t\t$lte: parseInt(moment(end).format('YYYYMMDD')),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tconst lookup = {\n\t\t\t$lookup: {\n\t\t\t\tfrom: 'users',\n\t\t\t\tlocalField: 'agentId',\n\t\t\t\tforeignField: '_id',\n\t\t\t\tas: 'user',\n\t\t\t},\n\t\t};\n\t\tconst unwind = {\n\t\t\t$unwind: {\n\t\t\t\tpath: '$user',\n\t\t\t},\n\t\t};\n\t\tconst group = {\n\t\t\t$group: {\n\t\t\t\t_id: { _id: '$user._id', username: '$user.username' },\n\t\t\t\tserviceHistory: { $first: '$serviceHistory' },\n\t\t\t\tavailableTimeInSeconds: { $sum: '$availableTime' },\n\t\t\t},\n\t\t};\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\t_id: 0,\n\t\t\t\tusername: '$_id.username',\n\t\t\t\tavailableTimeInSeconds: 1,\n\t\t\t\t...(fullReport && { serviceHistory: 1 }),\n\t\t\t},\n\t\t};\n\n\t\tconst sort = { $sort: options.sort || { username: 1 } };\n\t\tconst params = [match, lookup, unwind, group, project, sort] as object[];\n\t\tif (onlyCount) {\n\t\t\tparams.push({ $count: 'total' });\n\t\t\treturn this.col.aggregate(params);\n\t\t}\n\t\tif (options.offset) {\n\t\t\tparams.push({ $skip: options.offset });\n\t\t}\n\t\tif (options.count) {\n\t\t\tparams.push({ $limit: options.count });\n\t\t}\n\t\treturn this.col.aggregate(params, { allowDiskUse: true });\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatAgentActivity.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/LivechatAgentActivity.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  LivechatAgentActivityRaw: () => LivechatAgentActivityRaw\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 1);\n\nclass LivechatAgentActivityRaw extends BaseRaw {\n  findAllAverageAvailableServiceTime(_ref) {\n    let {\n      date,\n      departmentId\n    } = _ref;\n    const match = {\n      $match: {\n        date\n      }\n    };\n    const lookup = {\n      $lookup: {\n        from: 'rocketchat_livechat_department_agents',\n        localField: 'agentId',\n        foreignField: 'agentId',\n        as: 'departments'\n      }\n    };\n    const unwind = {\n      $unwind: {\n        path: '$departments',\n        preserveNullAndEmptyArrays: true\n      }\n    };\n    const departmentsMatch = {\n      $match: {\n        'departments.departmentId': departmentId\n      }\n    };\n    const sumAvailableTimeWithCurrentTime = {\n      $sum: [{\n        $divide: [{\n          $subtract: [new Date(), '$lastStartedAt']\n        }, 1000]\n      }, '$availableTime']\n    };\n    const group = {\n      $group: {\n        _id: null,\n        allAvailableTimeInSeconds: {\n          $sum: {\n            $cond: [{\n              $ifNull: ['$lastStoppedAt', false]\n            }, '$availableTime', sumAvailableTimeWithCurrentTime]\n          }\n        },\n        rooms: {\n          $sum: 1\n        }\n      }\n    };\n    const project = {\n      $project: {\n        averageAvailableServiceTimeInSeconds: {\n          $trunc: {\n            $cond: [{\n              $eq: ['$rooms', 0]\n            }, 0, {\n              $divide: ['$allAvailableTimeInSeconds', '$rooms']\n            }]\n          }\n        }\n      }\n    };\n    const params = [match];\n\n    if (departmentId && departmentId !== 'undefined') {\n      params.push(lookup);\n      params.push(unwind);\n      params.push(departmentsMatch);\n    }\n\n    params.push(group);\n    params.push(project);\n    return this.col.aggregate(params).toArray();\n  }\n\n  findAvailableServiceTimeHistory(_ref2) {\n    let {\n      start,\n      end,\n      fullReport,\n      onlyCount = false,\n      options = {}\n    } = _ref2;\n    const match = {\n      $match: {\n        date: {\n          $gte: parseInt(moment(start).format('YYYYMMDD')),\n          $lte: parseInt(moment(end).format('YYYYMMDD'))\n        }\n      }\n    };\n    const lookup = {\n      $lookup: {\n        from: 'users',\n        localField: 'agentId',\n        foreignField: '_id',\n        as: 'user'\n      }\n    };\n    const unwind = {\n      $unwind: {\n        path: '$user'\n      }\n    };\n    const group = {\n      $group: {\n        _id: {\n          _id: '$user._id',\n          username: '$user.username'\n        },\n        serviceHistory: {\n          $first: '$serviceHistory'\n        },\n        availableTimeInSeconds: {\n          $sum: '$availableTime'\n        }\n      }\n    };\n    const project = {\n      $project: _objectSpread({\n        _id: 0,\n        username: '$_id.username',\n        availableTimeInSeconds: 1\n      }, fullReport && {\n        serviceHistory: 1\n      })\n    };\n    const sort = {\n      $sort: options.sort || {\n        username: 1\n      }\n    };\n    const params = [match, lookup, unwind, group, project, sort];\n\n    if (onlyCount) {\n      params.push({\n        $count: 'total'\n      });\n      return this.col.aggregate(params);\n    }\n\n    if (options.offset) {\n      params.push({\n        $skip: options.offset\n      });\n    }\n\n    if (options.count) {\n      params.push({\n        $limit: options.count\n      });\n    }\n\n    return this.col.aggregate(params, {\n      allowDiskUse: true\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/LivechatAgentActivity.ts"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAa,MAAM,CAAA,IAAN,CAAe,sCAAf,EAAe;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAf,EAAe,CAAf;AAAb,MAAA,CAAO,MAAP,CAAa;AAAA,EAAA,wBAAe,EAAA,MAAA;AAAf,CAAb;AAA4B,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAMtB,MAAO,wBAAP,SAAwC,OAAxC,CAAuE;AAC5E,EAAA,kCAAkC,OAA6D;AAAA,QAA5D;AAAE,MAAA,IAAF;AAAQ,MAAA;AAAR,KAA4D;AAC9F,UAAM,KAAK,GAAG;AAAE,MAAA,MAAM,EAAE;AAAE,QAAA;AAAF;AAAV,KAAd;AACA,UAAM,MAAM,GAAG;AACd,MAAA,OAAO,EAAE;AACR,QAAA,IAAI,EAAE,uCADE;AAER,QAAA,UAAU,EAAE,SAFJ;AAGR,QAAA,YAAY,EAAE,SAHN;AAIR,QAAA,EAAE,EAAE;AAJI;AADK,KAAf;AAQA,UAAM,MAAM,GAAG;AACd,MAAA,OAAO,EAAE;AACR,QAAA,IAAI,EAAE,cADE;AAER,QAAA,0BAA0B,EAAE;AAFpB;AADK,KAAf;AAMA,UAAM,gBAAgB,GAAG;AACxB,MAAA,MAAM,EAAE;AACP,oCAA4B;AADrB;AADgB,KAAzB;AAKA,UAAM,+BAA+B,GAAG;AACvC,MAAA,IAAI,EAAE,CAAC;AAAE,QAAA,OAAO,EAAE,CAAC;AAAE,UAAA,SAAS,EAAE,CAAC,IAAI,IAAJ,EAAD,EAAa,gBAAb;AAAb,SAAD,EAAgD,IAAhD;AAAX,OAAD,EAAqE,gBAArE;AADiC,KAAxC;AAGA,UAAM,KAAK,GAAG;AACb,MAAA,MAAM,EAAE;AACP,QAAA,GAAG,EAAE,IADE;AAEP,QAAA,yBAAyB,EAAE;AAC1B,UAAA,IAAI,EAAE;AACL,YAAA,KAAK,EAAE,CAAC;AAAE,cAAA,OAAO,EAAE,CAAC,gBAAD,EAAmB,KAAnB;AAAX,aAAD,EAAyC,gBAAzC,EAA2D,+BAA3D;AADF;AADoB,SAFpB;AAOP,QAAA,KAAK,EAAE;AAAE,UAAA,IAAI,EAAE;AAAR;AAPA;AADK,KAAd;AAWA,UAAM,OAAO,GAAG;AACf,MAAA,QAAQ,EAAE;AACT,QAAA,oCAAoC,EAAE;AACrC,UAAA,MAAM,EAAE;AACP,YAAA,KAAK,EAAE,CAAC;AAAE,cAAA,GAAG,EAAE,CAAC,QAAD,EAAW,CAAX;AAAP,aAAD,EAAyB,CAAzB,EAA4B;AAAE,cAAA,OAAO,EAAE,CAAC,4BAAD,EAA+B,QAA/B;AAAX,aAA5B;AADA;AAD6B;AAD7B;AADK,KAAhB;AASA,UAAM,MAAM,GAAG,CAAC,KAAD,CAAf;;AACA,QAAI,YAAY,IAAI,YAAY,KAAK,WAArC,EAAkD;AACjD,MAAA,MAAM,CAAC,IAAP,CAAY,MAAZ;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,MAAZ;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,gBAAZ;AACA;;AACD,IAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,OAAZ;AACA,WAAO,KAAK,GAAL,CAAS,SAAT,CAAmB,MAAnB,EAA2B,OAA3B,EAAP;AACA;;AAED,EAAA,+BAA+B,QAY9B;AAAA,QAZ+B;AAC/B,MAAA,KAD+B;AAE/B,MAAA,GAF+B;AAG/B,MAAA,UAH+B;AAI/B,MAAA,SAAS,GAAG,KAJmB;AAK/B,MAAA,OAAO,GAAG;AALqB,KAY/B;AACA,UAAM,KAAK,GAAG;AACb,MAAA,MAAM,EAAE;AACP,QAAA,IAAI,EAAE;AACL,UAAA,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAD,CAAN,CAAc,MAAd,CAAqB,UAArB,CAAD,CADT;AAEL,UAAA,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAD,CAAN,CAAY,MAAZ,CAAmB,UAAnB,CAAD;AAFT;AADC;AADK,KAAd;AAQA,UAAM,MAAM,GAAG;AACd,MAAA,OAAO,EAAE;AACR,QAAA,IAAI,EAAE,OADE;AAER,QAAA,UAAU,EAAE,SAFJ;AAGR,QAAA,YAAY,EAAE,KAHN;AAIR,QAAA,EAAE,EAAE;AAJI;AADK,KAAf;AAQA,UAAM,MAAM,GAAG;AACd,MAAA,OAAO,EAAE;AACR,QAAA,IAAI,EAAE;AADE;AADK,KAAf;AAKA,UAAM,KAAK,GAAG;AACb,MAAA,MAAM,EAAE;AACP,QAAA,GAAG,EAAE;AAAE,UAAA,GAAG,EAAE,WAAP;AAAoB,UAAA,QAAQ,EAAE;AAA9B,SADE;AAEP,QAAA,cAAc,EAAE;AAAE,UAAA,MAAM,EAAE;AAAV,SAFT;AAGP,QAAA,sBAAsB,EAAE;AAAE,UAAA,IAAI,EAAE;AAAR;AAHjB;AADK,KAAd;AAOA,UAAM,OAAO,GAAG;AACf,MAAA,QAAQ;AACP,QAAA,GAAG,EAAE,CADE;AAEP,QAAA,QAAQ,EAAE,eAFH;AAGP,QAAA,sBAAsB,EAAE;AAHjB,SAIH,UAAU,IAAI;AAAE,QAAA,cAAc,EAAE;AAAlB,OAJX;AADO,KAAhB;AASA,UAAM,IAAI,GAAG;AAAE,MAAA,KAAK,EAAE,OAAO,CAAC,IAAR,IAAgB;AAAE,QAAA,QAAQ,EAAE;AAAZ;AAAzB,KAAb;AACA,UAAM,MAAM,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,OAA/B,EAAwC,IAAxC,CAAf;;AACA,QAAI,SAAJ,EAAe;AACd,MAAA,MAAM,CAAC,IAAP,CAAY;AAAE,QAAA,MAAM,EAAE;AAAV,OAAZ;AACA,aAAO,KAAK,GAAL,CAAS,SAAT,CAAmB,MAAnB,CAAP;AACA;;AACD,QAAI,OAAO,CAAC,MAAZ,EAAoB;AACnB,MAAA,MAAM,CAAC,IAAP,CAAY;AAAE,QAAA,KAAK,EAAE,OAAO,CAAC;AAAjB,OAAZ;AACA;;AACD,QAAI,OAAO,CAAC,KAAZ,EAAmB;AAClB,MAAA,MAAM,CAAC,IAAP,CAAY;AAAE,QAAA,MAAM,EAAE,OAAO,CAAC;AAAlB,OAAZ;AACA;;AACD,WAAO,KAAK,GAAL,CAAS,SAAT,CAAmB,MAAnB,EAA2B;AAAE,MAAA,YAAY,EAAE;AAAhB,KAA3B,CAAP;AACA;;AAvH2E","sourcesContent":["import moment from 'moment';\nimport { AggregationCursor } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ILivechatAgentActivity } from '../../../../definition/ILivechatAgentActivity';\n\nexport class LivechatAgentActivityRaw extends BaseRaw<ILivechatAgentActivity> {\n\tfindAllAverageAvailableServiceTime({ date, departmentId }: { date: Date; departmentId: string }): Promise<ILivechatAgentActivity[]> {\n\t\tconst match = { $match: { date } };\n\t\tconst lookup = {\n\t\t\t$lookup: {\n\t\t\t\tfrom: 'rocketchat_livechat_department_agents',\n\t\t\t\tlocalField: 'agentId',\n\t\t\t\tforeignField: 'agentId',\n\t\t\t\tas: 'departments',\n\t\t\t},\n\t\t};\n\t\tconst unwind = {\n\t\t\t$unwind: {\n\t\t\t\tpath: '$departments',\n\t\t\t\tpreserveNullAndEmptyArrays: true,\n\t\t\t},\n\t\t};\n\t\tconst departmentsMatch = {\n\t\t\t$match: {\n\t\t\t\t'departments.departmentId': departmentId,\n\t\t\t},\n\t\t};\n\t\tconst sumAvailableTimeWithCurrentTime = {\n\t\t\t$sum: [{ $divide: [{ $subtract: [new Date(), '$lastStartedAt'] }, 1000] }, '$availableTime'],\n\t\t};\n\t\tconst group = {\n\t\t\t$group: {\n\t\t\t\t_id: null,\n\t\t\t\tallAvailableTimeInSeconds: {\n\t\t\t\t\t$sum: {\n\t\t\t\t\t\t$cond: [{ $ifNull: ['$lastStoppedAt', false] }, '$availableTime', sumAvailableTimeWithCurrentTime],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trooms: { $sum: 1 },\n\t\t\t},\n\t\t};\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\taverageAvailableServiceTimeInSeconds: {\n\t\t\t\t\t$trunc: {\n\t\t\t\t\t\t$cond: [{ $eq: ['$rooms', 0] }, 0, { $divide: ['$allAvailableTimeInSeconds', '$rooms'] }],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tconst params = [match] as object[];\n\t\tif (departmentId && departmentId !== 'undefined') {\n\t\t\tparams.push(lookup);\n\t\t\tparams.push(unwind);\n\t\t\tparams.push(departmentsMatch);\n\t\t}\n\t\tparams.push(group);\n\t\tparams.push(project);\n\t\treturn this.col.aggregate(params).toArray();\n\t}\n\n\tfindAvailableServiceTimeHistory({\n\t\tstart,\n\t\tend,\n\t\tfullReport,\n\t\tonlyCount = false,\n\t\toptions = {},\n\t}: {\n\t\tstart: string;\n\t\tend: string;\n\t\tfullReport: boolean;\n\t\tonlyCount: boolean;\n\t\toptions: any;\n\t}): AggregationCursor<ILivechatAgentActivity> {\n\t\tconst match = {\n\t\t\t$match: {\n\t\t\t\tdate: {\n\t\t\t\t\t$gte: parseInt(moment(start).format('YYYYMMDD')),\n\t\t\t\t\t$lte: parseInt(moment(end).format('YYYYMMDD')),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tconst lookup = {\n\t\t\t$lookup: {\n\t\t\t\tfrom: 'users',\n\t\t\t\tlocalField: 'agentId',\n\t\t\t\tforeignField: '_id',\n\t\t\t\tas: 'user',\n\t\t\t},\n\t\t};\n\t\tconst unwind = {\n\t\t\t$unwind: {\n\t\t\t\tpath: '$user',\n\t\t\t},\n\t\t};\n\t\tconst group = {\n\t\t\t$group: {\n\t\t\t\t_id: { _id: '$user._id', username: '$user.username' },\n\t\t\t\tserviceHistory: { $first: '$serviceHistory' },\n\t\t\t\tavailableTimeInSeconds: { $sum: '$availableTime' },\n\t\t\t},\n\t\t};\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\t_id: 0,\n\t\t\t\tusername: '$_id.username',\n\t\t\t\tavailableTimeInSeconds: 1,\n\t\t\t\t...(fullReport && { serviceHistory: 1 }),\n\t\t\t},\n\t\t};\n\n\t\tconst sort = { $sort: options.sort || { username: 1 } };\n\t\tconst params = [match, lookup, unwind, group, project, sort] as object[];\n\t\tif (onlyCount) {\n\t\t\tparams.push({ $count: 'total' });\n\t\t\treturn this.col.aggregate(params);\n\t\t}\n\t\tif (options.offset) {\n\t\t\tparams.push({ $skip: options.offset });\n\t\t}\n\t\tif (options.count) {\n\t\t\tparams.push({ $limit: options.count });\n\t\t}\n\t\treturn this.col.aggregate(params, { allowDiskUse: true });\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"ca894f2a531d4c9facb8acd7fa90a7dbcded91ac"}

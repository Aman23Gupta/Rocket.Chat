{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/compareUserPassword.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/compareUserPassword.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/compareUserPassword.ts","inputSourceMap":{"version":3,"file":"server/lib/compareUserPassword.ts","sourceRoot":"","sources":["server/lib/compareUserPassword.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAKhD;;;;GAIG;AACH,MAAM,UAAU,mBAAmB,CAAC,IAAW,EAAE,IAAe;IAC/D,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE;QAC9C,OAAO,KAAK,CAAC;KACb;IAED,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QAC3C,OAAO,KAAK,CAAC;KACb;IAED,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,IAAI;QAC9B,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE;QACxC,SAAS,EAAE,SAAkB;KAC7B,CAAC;IAEF,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAE1D,IAAI,SAAS,CAAC,KAAK,EAAE;QACpB,OAAO,KAAK,CAAC;KACb;IAED,OAAO,IAAI,CAAC;AACb,CAAC","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\n\nimport { IUser } from '../../definition/IUser';\nimport { IPassword } from '../../definition/IPassword';\n\n/**\n * Check if a given password is the one user by given user or if the user doesn't have a password\n * @param {object} user User object\n * @param {object} pass Object with { plain: 'plain-test-password' } or { sha256: 'sha256password' }\n */\nexport function compareUserPassword(user: IUser, pass: IPassword): boolean {\n\tif (!user?.services?.password?.bcrypt?.trim()) {\n\t\treturn false;\n\t}\n\n\tif (!pass || (!pass.plain && !pass.sha256)) {\n\t\treturn false;\n\t}\n\n\tconst password = pass.plain || {\n\t\tdigest: pass.sha256?.toLowerCase() || '',\n\t\talgorithm: 'sha-256' as const,\n\t};\n\n\tconst passCheck = Accounts._checkPassword(user, password);\n\n\tif (passCheck.error) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/compareUserPassword.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/compareUserPassword.ts"}},"code":"module.export({\n  compareUserPassword: () => compareUserPassword\n});\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\n\nfunction compareUserPassword(user, pass) {\n  var _user$services, _user$services$passwo, _user$services$passwo2, _pass$sha;\n\n  if (!(user !== null && user !== void 0 && (_user$services = user.services) !== null && _user$services !== void 0 && (_user$services$passwo = _user$services.password) !== null && _user$services$passwo !== void 0 && (_user$services$passwo2 = _user$services$passwo.bcrypt) !== null && _user$services$passwo2 !== void 0 && _user$services$passwo2.trim())) {\n    return false;\n  }\n\n  if (!pass || !pass.plain && !pass.sha256) {\n    return false;\n  }\n\n  const password = pass.plain || {\n    digest: ((_pass$sha = pass.sha256) === null || _pass$sha === void 0 ? void 0 : _pass$sha.toLowerCase()) || '',\n    algorithm: 'sha-256'\n  };\n\n  const passCheck = Accounts._checkPassword(user, password);\n\n  if (passCheck.error) {\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["server/lib/compareUserPassword.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,mBAAgB,EAAA,MAAA;AAAhB,CAAT;AAAgD,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAU1C,SAAU,mBAAV,CAA8B,IAA9B,EAA2C,IAA3C,EAA0D;AAAA;;AAC/D,MAAI,EAAC,IAAD,aAAC,IAAD,iCAAC,IAAI,CAAE,QAAP,oEAAC,eAAgB,QAAjB,4EAAC,sBAA0B,MAA3B,mDAAC,uBAAkC,IAAlC,EAAD,CAAJ,EAA+C;AAC9C,WAAO,KAAP;AACA;;AAED,MAAI,CAAC,IAAD,IAAU,CAAC,IAAI,CAAC,KAAN,IAAe,CAAC,IAAI,CAAC,MAAnC,EAA4C;AAC3C,WAAO,KAAP;AACA;;AAED,QAAM,QAAQ,GAAG,IAAI,CAAC,KAAL,IAAc;AAC9B,IAAA,MAAM,EAAE,cAAA,IAAI,CAAC,MAAL,wDAAa,WAAb,OAA8B,EADR;AAE9B,IAAA,SAAS,EAAE;AAFmB,GAA/B;;AAKA,QAAM,SAAS,GAAG,QAAQ,CAAC,cAAT,CAAwB,IAAxB,EAA8B,QAA9B,CAAlB;;AAEA,MAAI,SAAS,CAAC,KAAd,EAAqB;AACpB,WAAO,KAAP;AACA;;AAED,SAAO,IAAP;AACA","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\n\nimport { IUser } from '../../definition/IUser';\nimport { IPassword } from '../../definition/IPassword';\n\n/**\n * Check if a given password is the one user by given user or if the user doesn't have a password\n * @param {object} user User object\n * @param {object} pass Object with { plain: 'plain-test-password' } or { sha256: 'sha256password' }\n */\nexport function compareUserPassword(user: IUser, pass: IPassword): boolean {\n\tif (!user?.services?.password?.bcrypt?.trim()) {\n\t\treturn false;\n\t}\n\n\tif (!pass || (!pass.plain && !pass.sha256)) {\n\t\treturn false;\n\t}\n\n\tconst password = pass.plain || {\n\t\tdigest: pass.sha256?.toLowerCase() || '',\n\t\talgorithm: 'sha-256' as const,\n\t};\n\n\tconst passCheck = Accounts._checkPassword(user, password);\n\n\tif (passCheck.error) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"1549951d041fb8207ecd841f3f964577f282682e"}

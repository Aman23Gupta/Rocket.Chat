{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/leaveRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/methods/leaveRoom.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/leaveRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/methods/leaveRoom.ts","sourceRoot":"","sources":["app/lib/server/methods/leaveRoom.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAC;AACrE,OAAO,EAAE,KAAK,EAAE,MAAM,4BAA4B,CAAC;AAEnD,MAAM,CAAC,OAAO,CAAC;IACd,KAAK,CAAC,SAAS,CAAC,GAAG;QAClB,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAEnB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;YACrB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;SACtF;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QAE3B,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,KAAK,CAAC,EAAE;YAC3F,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;SACpF;QAED,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,EAAE;YACvH,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;SACpF;QAED,MAAM,YAAY,GAAG,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;YAC1E,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;SAClB,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,EAAE;YAClB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE,0BAA0B,EAAE;gBAC5E,MAAM,EAAE,WAAW;aACnB,CAAC,CAAC;SACH;QAED,oHAAoH;QACpH,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;YACzC,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9D,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YAChD,IAAI,SAAS,KAAK,CAAC,EAAE;gBACpB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,uEAAuE,EAAE;oBAC3H,MAAM,EAAE,WAAW;iBACnB,CAAC,CAAC;aACH;SACD;QAED,OAAO,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { hasPermission, hasRole } from '../../../authorization/server';\nimport { Subscriptions, Rooms } from '../../../models/server';\nimport { removeUserFromRoom } from '../functions';\nimport { roomTypes, RoomMemberActions } from '../../../utils/server';\nimport { Roles } from '../../../models/server/raw';\n\nMeteor.methods({\n\tasync leaveRoom(rid) {\n\t\tcheck(rid, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'leaveRoom' });\n\t\t}\n\n\t\tconst room = Rooms.findOneById(rid);\n\t\tconst user = Meteor.user();\n\n\t\tif (!user || !roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.LEAVE)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'leaveRoom' });\n\t\t}\n\n\t\tif ((room.t === 'c' && !hasPermission(user._id, 'leave-c')) || (room.t === 'p' && !hasPermission(user._id, 'leave-p'))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'leaveRoom' });\n\t\t}\n\n\t\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id, {\n\t\t\tfields: { _id: 1 },\n\t\t});\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-user-not-in-room', 'You are not in this room', {\n\t\t\t\tmethod: 'leaveRoom',\n\t\t\t});\n\t\t}\n\n\t\t// If user is room owner, check if there are other owners. If there isn't anyone else, warn user to set a new owner.\n\t\tif (hasRole(user._id, 'owner', room._id)) {\n\t\t\tconst cursor = await Roles.findUsersInRole('owner', room._id);\n\t\t\tconst numOwners = Promise.await(cursor.count());\n\t\t\tif (numOwners === 1) {\n\t\t\t\tthrow new Meteor.Error('error-you-are-last-owner', 'You are the last owner. Please set new owner before leaving the room.', {\n\t\t\t\t\tmethod: 'leaveRoom',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn removeUserFromRoom(rid, user);\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/leaveRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/methods/leaveRoom.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet hasPermission, hasRole;\nmodule.link(\"../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  hasRole(v) {\n    hasRole = v;\n  }\n\n}, 2);\nlet Subscriptions, Rooms;\nmodule.link(\"../../../models/server\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 3);\nlet removeUserFromRoom;\nmodule.link(\"../functions\", {\n  removeUserFromRoom(v) {\n    removeUserFromRoom = v;\n  }\n\n}, 4);\nlet roomTypes, RoomMemberActions;\nmodule.link(\"../../../utils/server\", {\n  roomTypes(v) {\n    roomTypes = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  }\n\n}, 5);\nlet Roles;\nmodule.link(\"../../../models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 6);\nMeteor.methods({\n  leaveRoom(rid) {\n    return Promise.asyncApply(() => {\n      check(rid, String);\n\n      if (!Meteor.userId()) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'leaveRoom'\n        });\n      }\n\n      const room = Rooms.findOneById(rid);\n      const user = Meteor.user();\n\n      if (!user || !roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.LEAVE)) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'leaveRoom'\n        });\n      }\n\n      if (room.t === 'c' && !hasPermission(user._id, 'leave-c') || room.t === 'p' && !hasPermission(user._id, 'leave-p')) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'leaveRoom'\n        });\n      }\n\n      const subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id, {\n        fields: {\n          _id: 1\n        }\n      });\n\n      if (!subscription) {\n        throw new Meteor.Error('error-user-not-in-room', 'You are not in this room', {\n          method: 'leaveRoom'\n        });\n      } // If user is room owner, check if there are other owners. If there isn't anyone else, warn user to set a new owner.\n\n\n      if (hasRole(user._id, 'owner', room._id)) {\n        const cursor = Promise.await(Roles.findUsersInRole('owner', room._id));\n        const numOwners = Promise.await(cursor.count());\n\n        if (numOwners === 1) {\n          throw new Meteor.Error('error-you-are-last-owner', 'You are the last owner. Please set new owner before leaving the room.', {\n            method: 'leaveRoom'\n          });\n        }\n      }\n\n      return removeUserFromRoom(rid, user);\n    });\n  }\n\n});","map":{"version":3,"sources":["app/lib/server/methods/leaveRoom.ts"],"names":[],"mappings":"AAAA,IAAA,MAAA;AAAS,MAAQ,CAAA,IAAR,CAAc,eAAd,EAA8B;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAA9B,EAA8B,CAA9B;AAA8B,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA,EAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA,EAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA,EAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AASvC,MAAM,CAAC,OAAP,CAAe;AACR,EAAA,SAAN,CAAgB,GAAhB;AAAA,oCAAmB;AAClB,MAAA,KAAK,CAAC,GAAD,EAAM,MAAN,CAAL;;AAEA,UAAI,CAAC,MAAM,CAAC,MAAP,EAAL,EAAsB;AACrB,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAE,UAAA,MAAM,EAAE;AAAV,SAAvD,CAAN;AACA;;AAED,YAAM,IAAI,GAAG,KAAK,CAAC,WAAN,CAAkB,GAAlB,CAAb;AACA,YAAM,IAAI,GAAG,MAAM,CAAC,IAAP,EAAb;;AAEA,UAAI,CAAC,IAAD,IAAS,CAAC,SAAS,CAAC,SAAV,CAAoB,IAAI,CAAC,CAAzB,EAA4B,iBAA5B,CAA8C,IAA9C,EAAoD,iBAAiB,CAAC,KAAtE,CAAd,EAA4F;AAC3F,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,mBAAjB,EAAsC,aAAtC,EAAqD;AAAE,UAAA,MAAM,EAAE;AAAV,SAArD,CAAN;AACA;;AAED,UAAK,IAAI,CAAC,CAAL,KAAW,GAAX,IAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAN,EAAW,SAAX,CAAjC,IAA4D,IAAI,CAAC,CAAL,KAAW,GAAX,IAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAN,EAAW,SAAX,CAAhG,EAAwH;AACvH,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,mBAAjB,EAAsC,aAAtC,EAAqD;AAAE,UAAA,MAAM,EAAE;AAAV,SAArD,CAAN;AACA;;AAED,YAAM,YAAY,GAAG,aAAa,CAAC,wBAAd,CAAuC,GAAvC,EAA4C,IAAI,CAAC,GAAjD,EAAsD;AAC1E,QAAA,MAAM,EAAE;AAAE,UAAA,GAAG,EAAE;AAAP;AADkE,OAAtD,CAArB;;AAGA,UAAI,CAAC,YAAL,EAAmB;AAClB,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,wBAAjB,EAA2C,0BAA3C,EAAuE;AAC5E,UAAA,MAAM,EAAE;AADoE,SAAvE,CAAN;AAGA,OAzBiB,CA2BlB;;;AACA,UAAI,OAAO,CAAC,IAAI,CAAC,GAAN,EAAW,OAAX,EAAoB,IAAI,CAAC,GAAzB,CAAX,EAA0C;AACzC,cAAM,MAAM,iBAAS,KAAK,CAAC,eAAN,CAAsB,OAAtB,EAA+B,IAAI,CAAC,GAApC,CAAT,CAAZ;AACA,cAAM,SAAS,GAAG,OAAO,CAAC,KAAR,CAAc,MAAM,CAAC,KAAP,EAAd,CAAlB;;AACA,YAAI,SAAS,KAAK,CAAlB,EAAqB;AACpB,gBAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,0BAAjB,EAA6C,uEAA7C,EAAsH;AAC3H,YAAA,MAAM,EAAE;AADmH,WAAtH,CAAN;AAGA;AACD;;AAED,aAAO,kBAAkB,CAAC,GAAD,EAAM,IAAN,CAAzB;AACA,KAvCD;AAAA;;AADc,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { hasPermission, hasRole } from '../../../authorization/server';\nimport { Subscriptions, Rooms } from '../../../models/server';\nimport { removeUserFromRoom } from '../functions';\nimport { roomTypes, RoomMemberActions } from '../../../utils/server';\nimport { Roles } from '../../../models/server/raw';\n\nMeteor.methods({\n\tasync leaveRoom(rid) {\n\t\tcheck(rid, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'leaveRoom' });\n\t\t}\n\n\t\tconst room = Rooms.findOneById(rid);\n\t\tconst user = Meteor.user();\n\n\t\tif (!user || !roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.LEAVE)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'leaveRoom' });\n\t\t}\n\n\t\tif ((room.t === 'c' && !hasPermission(user._id, 'leave-c')) || (room.t === 'p' && !hasPermission(user._id, 'leave-p'))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'leaveRoom' });\n\t\t}\n\n\t\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id, {\n\t\t\tfields: { _id: 1 },\n\t\t});\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-user-not-in-room', 'You are not in this room', {\n\t\t\t\tmethod: 'leaveRoom',\n\t\t\t});\n\t\t}\n\n\t\t// If user is room owner, check if there are other owners. If there isn't anyone else, warn user to set a new owner.\n\t\tif (hasRole(user._id, 'owner', room._id)) {\n\t\t\tconst cursor = await Roles.findUsersInRole('owner', room._id);\n\t\t\tconst numOwners = Promise.await(cursor.count());\n\t\t\tif (numOwners === 1) {\n\t\t\t\tthrow new Meteor.Error('error-you-are-last-owner', 'You are the last owner. Please set new owner before leaving the room.', {\n\t\t\t\t\tmethod: 'leaveRoom',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn removeUserFromRoom(rid, user);\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"3c877fa7a9502b19c2ab462147027f36359ecc06"}

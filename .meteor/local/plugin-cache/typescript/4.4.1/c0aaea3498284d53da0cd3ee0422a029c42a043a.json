{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v253.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v253.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v253.ts","inputSourceMap":{"version":3,"file":"server/startup/migrations/v253.ts","sourceRoot":"","sources":["server/startup/migrations/v253.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,cAAc,MAAM,kDAAkD,CAAC;AAE9E,yDAAyD;AACzD,YAAY,CAAC;IACZ,OAAO,EAAE,GAAG;IACZ,KAAK,CAAC,EAAE;QACP,IAAI;YACH,MAAM,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YACjD,MAAM,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SACxE;QAAC,OAAO,CAAC,EAAE;YACX,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;SACxC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { addMigration } from '../../lib/migrations';\nimport CannedResponse from '../../../ee/app/models/server/raw/CannedResponse';\n\n// This will remove old indexes and re-create the new one\naddMigration({\n\tversion: 253,\n\tasync up() {\n\t\ttry {\n\t\t\tawait CannedResponse.col.dropIndex('shortcut_1');\n\t\t\tawait CannedResponse.col.createIndex({ shortcut: 1 }, { unique: true });\n\t\t} catch (e) {\n\t\t\t// should we allow the error to kill the app? Or just log it?\n\t\t\tconsole.error('Cannot drop indexes', e);\n\t\t}\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v253.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v253.ts"}},"code":"let addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 0);\nlet CannedResponse;\nmodule.link(\"../../../ee/app/models/server/raw/CannedResponse\", {\n  default(v) {\n    CannedResponse = v;\n  }\n\n}, 1);\n// This will remove old indexes and re-create the new one\naddMigration({\n  version: 253,\n\n  up() {\n    return Promise.asyncApply(() => {\n      try {\n        Promise.await(CannedResponse.col.dropIndex('shortcut_1'));\n        Promise.await(CannedResponse.col.createIndex({\n          shortcut: 1\n        }, {\n          unique: true\n        }));\n      } catch (e) {\n        // should we allow the error to kill the app? Or just log it?\n        console.error('Cannot drop indexes', e);\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v253.ts"],"names":[],"mappings":"AAAA,IAAA,YAAA;AAAS,MAAc,CAAA,IAAd,CAAoB,sBAApB,EAA2C;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAA3C,EAA2C,CAA3C;AAA2C,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kDAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAGpD;AACA,YAAY,CAAC;AACZ,EAAA,OAAO,EAAE,GADG;;AAEN,EAAA,EAAN;AAAA,oCAAQ;AACP,UAAI;AACH,sBAAM,cAAc,CAAC,GAAf,CAAmB,SAAnB,CAA6B,YAA7B,CAAN;AACA,sBAAM,cAAc,CAAC,GAAf,CAAmB,WAAnB,CAA+B;AAAE,UAAA,QAAQ,EAAE;AAAZ,SAA/B,EAAgD;AAAE,UAAA,MAAM,EAAE;AAAV,SAAhD,CAAN;AACA,OAHD,CAGE,OAAO,CAAP,EAAU;AACX;AACA,QAAA,OAAO,CAAC,KAAR,CAAc,qBAAd,EAAqC,CAArC;AACA;AACD,KARD;AAAA;;AAFY,CAAD,CAAZ","sourcesContent":["import { addMigration } from '../../lib/migrations';\nimport CannedResponse from '../../../ee/app/models/server/raw/CannedResponse';\n\n// This will remove old indexes and re-create the new one\naddMigration({\n\tversion: 253,\n\tasync up() {\n\t\ttry {\n\t\t\tawait CannedResponse.col.dropIndex('shortcut_1');\n\t\t\tawait CannedResponse.col.createIndex({ shortcut: 1 }, { unique: true });\n\t\t} catch (e) {\n\t\t\t// should we allow the error to kill the app? Or just log it?\n\t\t\tconsole.error('Cannot drop indexes', e);\n\t\t}\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"c0aaea3498284d53da0cd3ee0422a029c42a043a"}

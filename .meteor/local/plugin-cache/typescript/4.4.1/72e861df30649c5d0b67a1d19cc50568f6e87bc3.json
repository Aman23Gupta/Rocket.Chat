{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/definition/ISetting.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"definition/ISetting.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/definition/ISetting.ts","inputSourceMap":{"version":3,"file":"definition/ISetting.ts","sourceRoot":"","sources":["definition/ISetting.ts"],"names":[],"mappings":"AAOA,MAAM,CAAN,IAAY,aAGX;AAHD,WAAY,aAAa;IACxB,gCAAe,CAAA;IACf,0CAAyB,CAAA;AAC1B,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;AAsHD,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,OAAiB,EAA2B,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC;AAErG,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,OAAqB,EAAiC,EAAE,CAAC,OAAO,CAAC,UAAU,KAAK,IAAI,CAAC;AAEzH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,OAAqB,EAA4B,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC;AAE5G,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,OAAqB,EAA2B,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC;AAEzG,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,OAAqB,EAA6B,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC;AAE/G,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,OAAqB,EAA4B,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC","sourcesContent":["import { FilterQuery } from 'mongodb';\n\nexport type SettingId = string;\nexport type GroupId = SettingId;\nexport type TabId = SettingId;\nexport type SectionName = string;\n\nexport enum SettingEditor {\n\tCOLOR = 'color',\n\tEXPRESSION = 'expression',\n}\ntype AssetValue = { defaultUrl?: string };\nexport type SettingValueMultiSelect = (string | number)[];\nexport type SettingValueRoomPick = Array<{ _id: string; name: string }> | string;\nexport type SettingValue = string | boolean | number | SettingValueMultiSelect | Date | AssetValue | undefined;\n\nexport interface ISettingSelectOption {\n\tkey: string | number;\n\ti18nLabel: string;\n}\n\nexport type ISetting = ISettingBase | ISettingEnterprise | ISettingColor | ISettingCode | ISettingAction;\n\nexport interface ISettingBase {\n\t_id: SettingId;\n\ttype:\n\t\t| 'boolean'\n\t\t| 'timezone'\n\t\t| 'string'\n\t\t| 'relativeUrl'\n\t\t| 'password'\n\t\t| 'int'\n\t\t| 'select'\n\t\t| 'multiSelect'\n\t\t| 'language'\n\t\t| 'color'\n\t\t| 'font'\n\t\t| 'code'\n\t\t| 'action'\n\t\t| 'asset'\n\t\t| 'roomPick'\n\t\t| 'group'\n\t\t| 'date';\n\tpublic: boolean;\n\tenv: boolean;\n\tgroup?: GroupId;\n\tsection?: SectionName;\n\ttab?: TabId;\n\ti18nLabel: string;\n\tvalue: SettingValue;\n\tpackageValue: SettingValue;\n\tblocked: boolean;\n\tenableQuery?: string | FilterQuery<ISetting> | FilterQuery<ISetting>[];\n\tdisplayQuery?: string | FilterQuery<ISetting> | FilterQuery<ISetting>[];\n\tsorter: number;\n\tproperties?: unknown;\n\tenterprise?: boolean;\n\trequiredOnWizard?: boolean;\n\thidden?: boolean;\n\tmodules?: Array<string>;\n\tinvalidValue?: SettingValue;\n\tvalueSource?: string;\n\tsecret?: boolean;\n\ti18nDescription?: string;\n\tautocomplete?: boolean;\n\tprocessEnvValue?: SettingValue;\n\tmeteorSettingsValue?: SettingValue;\n\tts: Date;\n\tcreatedAt: Date;\n\t_updatedAt?: Date;\n\tmultiline?: boolean;\n\tvalues?: Array<ISettingSelectOption>;\n\tplaceholder?: string;\n\twizard?: {\n\t\tstep: number;\n\t\torder: number;\n\t} | null;\n\tpersistent?: boolean; // todo: remove\n\treadonly?: boolean; // todo: remove\n\talert?: string; // todo: check if this is still used\n\tprivate?: boolean; // todo: remove\n}\n\nexport interface ISettingGroup {\n\t_id: string;\n\thidden: boolean;\n\tblocked: boolean;\n\tts?: Date;\n\tsorter: number;\n\ti18nLabel: string;\n\tdisplayQuery?: string | FilterQuery<ISetting> | FilterQuery<ISetting>[];\n\ti18nDescription: string;\n\tvalue?: undefined;\n\ttype: 'group';\n\n\talert?: string; // todo: check if this is needed\n}\n\nexport interface ISettingEnterprise extends ISettingBase {\n\tenterprise: true;\n\tinvalidValue: SettingValue;\n}\n\nexport interface ISettingColor extends ISettingBase {\n\ttype: 'color';\n\teditor: SettingEditor;\n\tpackageEditor?: SettingEditor;\n}\nexport interface ISettingCode extends ISettingBase {\n\ttype: 'code';\n\tcode?: string;\n}\n\nexport interface ISettingAction extends ISettingBase {\n\ttype: 'action';\n\tvalue: string;\n\tactionText?: string;\n}\nexport interface ISettingAsset extends ISettingBase {\n\ttype: 'asset';\n\tvalue: AssetValue;\n}\n\nexport interface ISettingDate extends ISettingBase {\n\ttype: 'date';\n\tvalue: Date;\n}\n\nexport const isDateSetting = (setting: ISetting): setting is ISettingDate => setting.type === 'date';\n\nexport const isSettingEnterprise = (setting: ISettingBase): setting is ISettingEnterprise => setting.enterprise === true;\n\nexport const isSettingColor = (setting: ISettingBase): setting is ISettingColor => setting.type === 'color';\n\nexport const isSettingCode = (setting: ISettingBase): setting is ISettingCode => setting.type === 'code';\n\nexport const isSettingAction = (setting: ISettingBase): setting is ISettingAction => setting.type === 'action';\n\nexport const isSettingAsset = (setting: ISettingBase): setting is ISettingAsset => setting.type === 'asset';\n\nexport interface ISettingStatistics {\n\taccount2fa?: boolean;\n\tcannedResponsesEnabled?: boolean;\n\te2e?: boolean;\n\te2eDefaultDirectRoom?: boolean;\n\te2eDefaultPrivateRoom?: boolean;\n\tsmtpHost?: string;\n\tsmtpPort?: string;\n\tfromEmail?: string;\n\tframeworkDevMode?: boolean;\n\tframeworkEnable?: boolean;\n\tsurveyEnabled?: boolean;\n\tupdateChecker?: boolean;\n\tliveStream?: boolean;\n\tbroadcasting?: boolean;\n\tallowEditing?: boolean;\n\tallowDeleting?: boolean;\n\tallowUnrecognizedSlashCommand?: boolean;\n\tallowBadWordsFilter?: boolean;\n\treadReceiptEnabled?: boolean;\n\treadReceiptStoreUsers?: boolean;\n\totrEnable?: boolean;\n\tpushEnable?: boolean;\n\tglobalSearchEnabled?: boolean;\n\tthreadsEnabled?: boolean;\n\tbigBlueButton?: boolean;\n\tjitsiEnabled?: boolean;\n\twebRTCEnableChannel?: boolean;\n\twebRTCEnablePrivate?: boolean;\n\twebRTCEnableDirect?: boolean;\n}\n\nexport interface ISettingStatisticsObject {\n\taccounts?: {\n\t\taccount2fa?: boolean;\n\t};\n\tcannedResponses?: {\n\t\tcannedResponsesEnabled?: boolean;\n\t};\n\te2ee?: {\n\t\te2e?: boolean;\n\t\te2eDefaultDirectRoom?: boolean;\n\t\te2eDefaultPrivateRoom?: boolean;\n\t};\n\temail?: {\n\t\tsmtp?: {\n\t\t\tsmtpHost?: string;\n\t\t\tsmtpPort?: string;\n\t\t\tfromEmail?: string;\n\t\t};\n\t};\n\tgeneral?: {\n\t\tapps?: {\n\t\t\tframeworkDevMode?: boolean;\n\t\t\tframeworkEnable?: boolean;\n\t\t};\n\t\tnps?: {\n\t\t\tsurveyEnabled?: boolean;\n\t\t};\n\t\tupdate?: {\n\t\t\tupdateChecker?: boolean;\n\t\t};\n\t};\n\tliveStreamAndBroadcasting?: {\n\t\tliveStream?: boolean;\n\t\tbroadcasting?: boolean;\n\t};\n\tmessage?: {\n\t\tallowEditing?: boolean;\n\t\tallowDeleting?: boolean;\n\t\tallowUnrecognizedSlashCommand?: boolean;\n\t\tallowBadWordsFilter?: boolean;\n\t\treadReceiptEnabled?: boolean;\n\t\treadReceiptStoreUsers?: boolean;\n\t};\n\totr?: {\n\t\totrEnable?: boolean;\n\t};\n\tpush?: {\n\t\tpushEnable?: boolean;\n\t};\n\tsearch?: {\n\t\tdefaultProvider?: {\n\t\t\tglobalSearchEnabled?: boolean;\n\t\t};\n\t};\n\tthreads?: {\n\t\tthreadsEnabled?: boolean;\n\t};\n\tvideoConference?: {\n\t\tbigBlueButton?: boolean;\n\t\tjitsiEnabled?: boolean;\n\t};\n\twebRTC?: {\n\t\twebRTCEnableChannel?: boolean;\n\t\twebRTCEnablePrivate?: boolean;\n\t\twebRTCEnableDirect?: boolean;\n\t};\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/definition/ISetting.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"definition/ISetting.ts"}},"code":"module.export({\n  SettingEditor: () => SettingEditor,\n  isDateSetting: () => isDateSetting,\n  isSettingEnterprise: () => isSettingEnterprise,\n  isSettingColor: () => isSettingColor,\n  isSettingCode: () => isSettingCode,\n  isSettingAction: () => isSettingAction,\n  isSettingAsset: () => isSettingAsset\n});\nvar SettingEditor;\n\n(function (SettingEditor) {\n  SettingEditor[\"COLOR\"] = \"color\";\n  SettingEditor[\"EXPRESSION\"] = \"expression\";\n})(SettingEditor || module.runSetters(SettingEditor = {}, [\"SettingEditor\"]));\n\nconst isDateSetting = setting => setting.type === 'date';\n\nconst isSettingEnterprise = setting => setting.enterprise === true;\n\nconst isSettingColor = setting => setting.type === 'color';\n\nconst isSettingCode = setting => setting.type === 'code';\n\nconst isSettingAction = setting => setting.type === 'action';\n\nconst isSettingAsset = setting => setting.type === 'asset';","map":{"version":3,"sources":["definition/ISetting.ts"],"names":[],"mappings":"AAOA,MAAM,CAAN,MAAA,CAAY;AAAA,EAAA,aAGX,EAAA,MAAA,aAHW;AAGX,EAAA,aAAA,EAAA,MAAA,aAHW;AAGX,EAAA,mBAAA,EAAA,MAAA,mBAHW;AAGX,EAAA,cAAA,EAAA,MAAA,cAHW;AAGX,EAAA,aAAA,EAAA,MAAA,aAHW;AAGX,EAAA,eAAA,EAAA,MAAA,eAHW;AAGX,EAAA,cAAA,EAAA,MAAA;AAHW,CAAZ;AAAA,IAAY,aAAZ;;AAAA,CAAA,UAAY,aAAZ,EAAyB;AACxB,EAAA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,aAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,CAHD,EAAY,aAAa,sBAAb,aAAa,GAAA,EAAA,oBAAzB;;AAyHO,MAAM,aAAa,GAAI,OAAD,IAAgD,OAAO,CAAC,IAAR,KAAiB,MAAvF;;AAEA,MAAM,mBAAmB,GAAI,OAAD,IAA0D,OAAO,CAAC,UAAR,KAAuB,IAA7G;;AAEA,MAAM,cAAc,GAAI,OAAD,IAAqD,OAAO,CAAC,IAAR,KAAiB,OAA7F;;AAEA,MAAM,aAAa,GAAI,OAAD,IAAoD,OAAO,CAAC,IAAR,KAAiB,MAA3F;;AAEA,MAAM,eAAe,GAAI,OAAD,IAAsD,OAAO,CAAC,IAAR,KAAiB,QAA/F;;AAEA,MAAM,cAAc,GAAI,OAAD,IAAqD,OAAO,CAAC,IAAR,KAAiB,OAA7F","sourcesContent":["import { FilterQuery } from 'mongodb';\n\nexport type SettingId = string;\nexport type GroupId = SettingId;\nexport type TabId = SettingId;\nexport type SectionName = string;\n\nexport enum SettingEditor {\n\tCOLOR = 'color',\n\tEXPRESSION = 'expression',\n}\ntype AssetValue = { defaultUrl?: string };\nexport type SettingValueMultiSelect = (string | number)[];\nexport type SettingValueRoomPick = Array<{ _id: string; name: string }> | string;\nexport type SettingValue = string | boolean | number | SettingValueMultiSelect | Date | AssetValue | undefined;\n\nexport interface ISettingSelectOption {\n\tkey: string | number;\n\ti18nLabel: string;\n}\n\nexport type ISetting = ISettingBase | ISettingEnterprise | ISettingColor | ISettingCode | ISettingAction;\n\nexport interface ISettingBase {\n\t_id: SettingId;\n\ttype:\n\t\t| 'boolean'\n\t\t| 'timezone'\n\t\t| 'string'\n\t\t| 'relativeUrl'\n\t\t| 'password'\n\t\t| 'int'\n\t\t| 'select'\n\t\t| 'multiSelect'\n\t\t| 'language'\n\t\t| 'color'\n\t\t| 'font'\n\t\t| 'code'\n\t\t| 'action'\n\t\t| 'asset'\n\t\t| 'roomPick'\n\t\t| 'group'\n\t\t| 'date';\n\tpublic: boolean;\n\tenv: boolean;\n\tgroup?: GroupId;\n\tsection?: SectionName;\n\ttab?: TabId;\n\ti18nLabel: string;\n\tvalue: SettingValue;\n\tpackageValue: SettingValue;\n\tblocked: boolean;\n\tenableQuery?: string | FilterQuery<ISetting> | FilterQuery<ISetting>[];\n\tdisplayQuery?: string | FilterQuery<ISetting> | FilterQuery<ISetting>[];\n\tsorter: number;\n\tproperties?: unknown;\n\tenterprise?: boolean;\n\trequiredOnWizard?: boolean;\n\thidden?: boolean;\n\tmodules?: Array<string>;\n\tinvalidValue?: SettingValue;\n\tvalueSource?: string;\n\tsecret?: boolean;\n\ti18nDescription?: string;\n\tautocomplete?: boolean;\n\tprocessEnvValue?: SettingValue;\n\tmeteorSettingsValue?: SettingValue;\n\tts: Date;\n\tcreatedAt: Date;\n\t_updatedAt?: Date;\n\tmultiline?: boolean;\n\tvalues?: Array<ISettingSelectOption>;\n\tplaceholder?: string;\n\twizard?: {\n\t\tstep: number;\n\t\torder: number;\n\t} | null;\n\tpersistent?: boolean; // todo: remove\n\treadonly?: boolean; // todo: remove\n\talert?: string; // todo: check if this is still used\n\tprivate?: boolean; // todo: remove\n}\n\nexport interface ISettingGroup {\n\t_id: string;\n\thidden: boolean;\n\tblocked: boolean;\n\tts?: Date;\n\tsorter: number;\n\ti18nLabel: string;\n\tdisplayQuery?: string | FilterQuery<ISetting> | FilterQuery<ISetting>[];\n\ti18nDescription: string;\n\tvalue?: undefined;\n\ttype: 'group';\n\n\talert?: string; // todo: check if this is needed\n}\n\nexport interface ISettingEnterprise extends ISettingBase {\n\tenterprise: true;\n\tinvalidValue: SettingValue;\n}\n\nexport interface ISettingColor extends ISettingBase {\n\ttype: 'color';\n\teditor: SettingEditor;\n\tpackageEditor?: SettingEditor;\n}\nexport interface ISettingCode extends ISettingBase {\n\ttype: 'code';\n\tcode?: string;\n}\n\nexport interface ISettingAction extends ISettingBase {\n\ttype: 'action';\n\tvalue: string;\n\tactionText?: string;\n}\nexport interface ISettingAsset extends ISettingBase {\n\ttype: 'asset';\n\tvalue: AssetValue;\n}\n\nexport interface ISettingDate extends ISettingBase {\n\ttype: 'date';\n\tvalue: Date;\n}\n\nexport const isDateSetting = (setting: ISetting): setting is ISettingDate => setting.type === 'date';\n\nexport const isSettingEnterprise = (setting: ISettingBase): setting is ISettingEnterprise => setting.enterprise === true;\n\nexport const isSettingColor = (setting: ISettingBase): setting is ISettingColor => setting.type === 'color';\n\nexport const isSettingCode = (setting: ISettingBase): setting is ISettingCode => setting.type === 'code';\n\nexport const isSettingAction = (setting: ISettingBase): setting is ISettingAction => setting.type === 'action';\n\nexport const isSettingAsset = (setting: ISettingBase): setting is ISettingAsset => setting.type === 'asset';\n\nexport interface ISettingStatistics {\n\taccount2fa?: boolean;\n\tcannedResponsesEnabled?: boolean;\n\te2e?: boolean;\n\te2eDefaultDirectRoom?: boolean;\n\te2eDefaultPrivateRoom?: boolean;\n\tsmtpHost?: string;\n\tsmtpPort?: string;\n\tfromEmail?: string;\n\tframeworkDevMode?: boolean;\n\tframeworkEnable?: boolean;\n\tsurveyEnabled?: boolean;\n\tupdateChecker?: boolean;\n\tliveStream?: boolean;\n\tbroadcasting?: boolean;\n\tallowEditing?: boolean;\n\tallowDeleting?: boolean;\n\tallowUnrecognizedSlashCommand?: boolean;\n\tallowBadWordsFilter?: boolean;\n\treadReceiptEnabled?: boolean;\n\treadReceiptStoreUsers?: boolean;\n\totrEnable?: boolean;\n\tpushEnable?: boolean;\n\tglobalSearchEnabled?: boolean;\n\tthreadsEnabled?: boolean;\n\tbigBlueButton?: boolean;\n\tjitsiEnabled?: boolean;\n\twebRTCEnableChannel?: boolean;\n\twebRTCEnablePrivate?: boolean;\n\twebRTCEnableDirect?: boolean;\n}\n\nexport interface ISettingStatisticsObject {\n\taccounts?: {\n\t\taccount2fa?: boolean;\n\t};\n\tcannedResponses?: {\n\t\tcannedResponsesEnabled?: boolean;\n\t};\n\te2ee?: {\n\t\te2e?: boolean;\n\t\te2eDefaultDirectRoom?: boolean;\n\t\te2eDefaultPrivateRoom?: boolean;\n\t};\n\temail?: {\n\t\tsmtp?: {\n\t\t\tsmtpHost?: string;\n\t\t\tsmtpPort?: string;\n\t\t\tfromEmail?: string;\n\t\t};\n\t};\n\tgeneral?: {\n\t\tapps?: {\n\t\t\tframeworkDevMode?: boolean;\n\t\t\tframeworkEnable?: boolean;\n\t\t};\n\t\tnps?: {\n\t\t\tsurveyEnabled?: boolean;\n\t\t};\n\t\tupdate?: {\n\t\t\tupdateChecker?: boolean;\n\t\t};\n\t};\n\tliveStreamAndBroadcasting?: {\n\t\tliveStream?: boolean;\n\t\tbroadcasting?: boolean;\n\t};\n\tmessage?: {\n\t\tallowEditing?: boolean;\n\t\tallowDeleting?: boolean;\n\t\tallowUnrecognizedSlashCommand?: boolean;\n\t\tallowBadWordsFilter?: boolean;\n\t\treadReceiptEnabled?: boolean;\n\t\treadReceiptStoreUsers?: boolean;\n\t};\n\totr?: {\n\t\totrEnable?: boolean;\n\t};\n\tpush?: {\n\t\tpushEnable?: boolean;\n\t};\n\tsearch?: {\n\t\tdefaultProvider?: {\n\t\t\tglobalSearchEnabled?: boolean;\n\t\t};\n\t};\n\tthreads?: {\n\t\tthreadsEnabled?: boolean;\n\t};\n\tvideoConference?: {\n\t\tbigBlueButton?: boolean;\n\t\tjitsiEnabled?: boolean;\n\t};\n\twebRTC?: {\n\t\twebRTCEnableChannel?: boolean;\n\t\twebRTCEnablePrivate?: boolean;\n\t\twebRTCEnableDirect?: boolean;\n\t};\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"72e861df30649c5d0b67a1d19cc50568f6e87bc3"}

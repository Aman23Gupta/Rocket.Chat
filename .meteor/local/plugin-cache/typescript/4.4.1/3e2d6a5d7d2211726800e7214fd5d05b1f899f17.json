{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/statistics/getSettingsStatistics.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/statistics/getSettingsStatistics.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/statistics/getSettingsStatistics.ts","inputSourceMap":{"version":3,"file":"server/lib/statistics/getSettingsStatistics.ts","sourceRoot":"","sources":["server/lib/statistics/getSettingsStatistics.ts"],"names":[],"mappings":"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","sourcesContent":["import { Settings } from '../../../app/models/server/raw';\nimport { ISettingStatistics, ISettingStatisticsObject } from '../../../definition/ISetting';\n\nconst setSettingsStatistics = async (settings: ISettingStatistics): Promise<ISettingStatisticsObject> => {\n\tconst {\n\t\taccount2fa,\n\t\tcannedResponsesEnabled,\n\t\te2e,\n\t\te2eDefaultDirectRoom,\n\t\te2eDefaultPrivateRoom,\n\t\tsmtpHost,\n\t\tsmtpPort,\n\t\tfromEmail,\n\t\tframeworkDevMode,\n\t\tframeworkEnable,\n\t\tsurveyEnabled,\n\t\tupdateChecker,\n\t\tliveStream,\n\t\tbroadcasting,\n\t\tallowEditing,\n\t\tallowDeleting,\n\t\tallowUnrecognizedSlashCommand,\n\t\tallowBadWordsFilter,\n\t\treadReceiptEnabled,\n\t\treadReceiptStoreUsers,\n\t\tglobalSearchEnabled,\n\t\totrEnable,\n\t\tpushEnable,\n\t\tthreadsEnabled,\n\t\tbigBlueButton,\n\t\tjitsiEnabled,\n\t\twebRTCEnableChannel,\n\t\twebRTCEnablePrivate,\n\t\twebRTCEnableDirect,\n\t} = settings;\n\n\t// If Canned Response does not exist add blank object to the statistic else add canned response object\n\tconst cannedRes = !cannedResponsesEnabled ? {} : { cannedResponses: { cannedResponsesEnabled } };\n\n\tconst statisticObject = {\n\t\taccounts: {\n\t\t\taccount2fa,\n\t\t},\n\t\t...cannedRes,\n\t\te2ee: {\n\t\t\te2e,\n\t\t\te2eDefaultDirectRoom,\n\t\t\te2eDefaultPrivateRoom,\n\t\t},\n\t\temail: {\n\t\t\tsmtp: {\n\t\t\t\tsmtpHost,\n\t\t\t\tsmtpPort,\n\t\t\t\tfromEmail,\n\t\t\t},\n\t\t},\n\t\tgeneral: {\n\t\t\tapps: {\n\t\t\t\tframeworkDevMode,\n\t\t\t\tframeworkEnable,\n\t\t\t},\n\t\t\tnps: {\n\t\t\t\tsurveyEnabled,\n\t\t\t},\n\t\t\tupdate: {\n\t\t\t\tupdateChecker,\n\t\t\t},\n\t\t},\n\t\tliveStreamAndBroadcasting: {\n\t\t\tliveStream,\n\t\t\tbroadcasting,\n\t\t},\n\t\tmessage: {\n\t\t\tallowEditing,\n\t\t\tallowDeleting,\n\t\t\tallowUnrecognizedSlashCommand,\n\t\t\tallowBadWordsFilter,\n\t\t\treadReceiptEnabled,\n\t\t\treadReceiptStoreUsers,\n\t\t},\n\t\totr: {\n\t\t\totrEnable,\n\t\t},\n\t\tpush: {\n\t\t\tpushEnable,\n\t\t},\n\t\tsearch: {\n\t\t\tdefaultProvider: {\n\t\t\t\tglobalSearchEnabled,\n\t\t\t},\n\t\t},\n\t\tthreads: {\n\t\t\tthreadsEnabled,\n\t\t},\n\t\tvideoConference: {\n\t\t\tbigBlueButton,\n\t\t\tjitsiEnabled,\n\t\t},\n\t\twebRTC: {\n\t\t\twebRTCEnableChannel,\n\t\t\twebRTCEnablePrivate,\n\t\t\twebRTCEnableDirect,\n\t\t},\n\t};\n\treturn statisticObject;\n};\nexport const getSettingsStatistics = async (): Promise<ISettingStatisticsObject> => {\n\ttry {\n\t\tconst settingsBase = [\n\t\t\t{ key: 'Accounts_TwoFactorAuthentication_Enabled', alias: 'account2fa' },\n\t\t\t{ key: 'E2E_Enable', alias: 'e2e' },\n\t\t\t{ key: 'E2E_Enabled_Default_DirectRooms', alias: 'e2eDefaultDirectRoom' },\n\t\t\t{ key: 'E2E_Enabled_Default_PrivateRooms', alias: 'e2eDefaultPrivateRoom' },\n\t\t\t{ key: 'SMTP_Host', alias: 'smtpHost' },\n\t\t\t{ key: 'SMTP_Port', alias: 'smtpPort' },\n\t\t\t{ key: 'From_Email', alias: 'fromEmail' },\n\t\t\t{ key: 'Apps_Framework_Development_Mode', alias: 'frameworkDevMode' },\n\t\t\t{ key: 'Apps_Framework_enabled', alias: 'frameworkEnable' },\n\t\t\t{ key: 'NPS_survey_enabled', alias: 'surveyEnabled' },\n\t\t\t{ key: 'Update_EnableChecker', alias: 'updateChecker' },\n\t\t\t{ key: 'Livestream_enabled', alias: 'liveStream' },\n\t\t\t{ key: 'Broadcasting_enabled', alias: 'broadcasting' },\n\t\t\t{ key: 'Message_AllowEditing', alias: 'allowEditing' },\n\t\t\t{ key: 'Message_AllowDeleting', alias: 'allowDeleting' },\n\t\t\t{ key: 'Message_AllowUnrecognizedSlashCommand', alias: 'allowUnrecognizedSlashCommand' },\n\t\t\t{ key: 'Message_AllowBadWordsFilter', alias: 'allowBadWordsFilter' },\n\t\t\t{ key: 'Message_Read_Receipt_Enabled', alias: 'readReceiptEnabled' },\n\t\t\t{ key: 'Message_Read_Receipt_Store_Users', alias: 'readReceiptStoreUsers' },\n\t\t\t{ key: 'Search.defaultProvider.GlobalSearchEnabled', alias: 'globalSearchEnabled' },\n\t\t\t{ key: 'OTR_Enable', alias: 'otrEnable' },\n\t\t\t{ key: 'Push_enable', alias: 'pushEnable' },\n\t\t\t{ key: 'Threads_enabled', alias: 'threadsEnabled' },\n\t\t\t{ key: 'bigbluebutton_Enabled', alias: 'bigBlueButton' },\n\t\t\t{ key: 'Jitsi_Enabled', alias: 'jitsiEnabled' },\n\t\t\t{ key: 'WebRTC_Enable_Channel', alias: 'webRTCEnableChannel' },\n\t\t\t{ key: 'WebRTC_Enable_Private', alias: 'webRTCEnablePrivate' },\n\t\t\t{ key: 'WebRTC_Enable_Direct', alias: 'webRTCEnableDirect' },\n\t\t\t{ key: 'Canned_Responses_Enable', alias: 'cannedResponses' },\n\t\t];\n\n\t\t// Mapping only _id values\n\t\tconst settingsIDs = settingsBase.map((el) => el.key);\n\n\t\tconst settingsStatistics = (\n\t\t\tawait Settings.findByIds(settingsIDs)\n\t\t\t\t.map((el): ISettingStatistics => {\n\t\t\t\t\tconst alias = settingsBase.find((obj) => obj.key === el._id)?.alias || {};\n\n\t\t\t\t\tif (!!alias && Object.keys(el).length) return { [String(alias)]: el.value };\n\t\t\t\t\treturn alias;\n\t\t\t\t})\n\t\t\t\t.filter((el: ISettingStatistics) => Object.keys(el).length) // Filter to remove all empty objects\n\t\t\t\t.toArray()\n\t\t).reduce((a, b) => Object.assign(a, b), {}); // Convert array to objects\n\t\tconst staticticObject = await setSettingsStatistics(settingsStatistics);\n\n\t\treturn staticticObject;\n\t} catch (error: any) {\n\t\treturn error;\n\t}\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/statistics/getSettingsStatistics.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/statistics/getSettingsStatistics.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  getSettingsStatistics: () => getSettingsStatistics\n});\nlet Settings;\nmodule.link(\"../../../app/models/server/raw\", {\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 0);\n\nconst setSettingsStatistics = settings => Promise.asyncApply(() => {\n  const {\n    account2fa,\n    cannedResponsesEnabled,\n    e2e,\n    e2eDefaultDirectRoom,\n    e2eDefaultPrivateRoom,\n    smtpHost,\n    smtpPort,\n    fromEmail,\n    frameworkDevMode,\n    frameworkEnable,\n    surveyEnabled,\n    updateChecker,\n    liveStream,\n    broadcasting,\n    allowEditing,\n    allowDeleting,\n    allowUnrecognizedSlashCommand,\n    allowBadWordsFilter,\n    readReceiptEnabled,\n    readReceiptStoreUsers,\n    globalSearchEnabled,\n    otrEnable,\n    pushEnable,\n    threadsEnabled,\n    bigBlueButton,\n    jitsiEnabled,\n    webRTCEnableChannel,\n    webRTCEnablePrivate,\n    webRTCEnableDirect\n  } = settings; // If Canned Response does not exist add blank object to the statistic else add canned response object\n\n  const cannedRes = !cannedResponsesEnabled ? {} : {\n    cannedResponses: {\n      cannedResponsesEnabled\n    }\n  };\n\n  const statisticObject = _objectSpread(_objectSpread({\n    accounts: {\n      account2fa\n    }\n  }, cannedRes), {}, {\n    e2ee: {\n      e2e,\n      e2eDefaultDirectRoom,\n      e2eDefaultPrivateRoom\n    },\n    email: {\n      smtp: {\n        smtpHost,\n        smtpPort,\n        fromEmail\n      }\n    },\n    general: {\n      apps: {\n        frameworkDevMode,\n        frameworkEnable\n      },\n      nps: {\n        surveyEnabled\n      },\n      update: {\n        updateChecker\n      }\n    },\n    liveStreamAndBroadcasting: {\n      liveStream,\n      broadcasting\n    },\n    message: {\n      allowEditing,\n      allowDeleting,\n      allowUnrecognizedSlashCommand,\n      allowBadWordsFilter,\n      readReceiptEnabled,\n      readReceiptStoreUsers\n    },\n    otr: {\n      otrEnable\n    },\n    push: {\n      pushEnable\n    },\n    search: {\n      defaultProvider: {\n        globalSearchEnabled\n      }\n    },\n    threads: {\n      threadsEnabled\n    },\n    videoConference: {\n      bigBlueButton,\n      jitsiEnabled\n    },\n    webRTC: {\n      webRTCEnableChannel,\n      webRTCEnablePrivate,\n      webRTCEnableDirect\n    }\n  });\n\n  return statisticObject;\n});\n\nconst getSettingsStatistics = () => Promise.asyncApply(() => {\n  try {\n    const settingsBase = [{\n      key: 'Accounts_TwoFactorAuthentication_Enabled',\n      alias: 'account2fa'\n    }, {\n      key: 'E2E_Enable',\n      alias: 'e2e'\n    }, {\n      key: 'E2E_Enabled_Default_DirectRooms',\n      alias: 'e2eDefaultDirectRoom'\n    }, {\n      key: 'E2E_Enabled_Default_PrivateRooms',\n      alias: 'e2eDefaultPrivateRoom'\n    }, {\n      key: 'SMTP_Host',\n      alias: 'smtpHost'\n    }, {\n      key: 'SMTP_Port',\n      alias: 'smtpPort'\n    }, {\n      key: 'From_Email',\n      alias: 'fromEmail'\n    }, {\n      key: 'Apps_Framework_Development_Mode',\n      alias: 'frameworkDevMode'\n    }, {\n      key: 'Apps_Framework_enabled',\n      alias: 'frameworkEnable'\n    }, {\n      key: 'NPS_survey_enabled',\n      alias: 'surveyEnabled'\n    }, {\n      key: 'Update_EnableChecker',\n      alias: 'updateChecker'\n    }, {\n      key: 'Livestream_enabled',\n      alias: 'liveStream'\n    }, {\n      key: 'Broadcasting_enabled',\n      alias: 'broadcasting'\n    }, {\n      key: 'Message_AllowEditing',\n      alias: 'allowEditing'\n    }, {\n      key: 'Message_AllowDeleting',\n      alias: 'allowDeleting'\n    }, {\n      key: 'Message_AllowUnrecognizedSlashCommand',\n      alias: 'allowUnrecognizedSlashCommand'\n    }, {\n      key: 'Message_AllowBadWordsFilter',\n      alias: 'allowBadWordsFilter'\n    }, {\n      key: 'Message_Read_Receipt_Enabled',\n      alias: 'readReceiptEnabled'\n    }, {\n      key: 'Message_Read_Receipt_Store_Users',\n      alias: 'readReceiptStoreUsers'\n    }, {\n      key: 'Search.defaultProvider.GlobalSearchEnabled',\n      alias: 'globalSearchEnabled'\n    }, {\n      key: 'OTR_Enable',\n      alias: 'otrEnable'\n    }, {\n      key: 'Push_enable',\n      alias: 'pushEnable'\n    }, {\n      key: 'Threads_enabled',\n      alias: 'threadsEnabled'\n    }, {\n      key: 'bigbluebutton_Enabled',\n      alias: 'bigBlueButton'\n    }, {\n      key: 'Jitsi_Enabled',\n      alias: 'jitsiEnabled'\n    }, {\n      key: 'WebRTC_Enable_Channel',\n      alias: 'webRTCEnableChannel'\n    }, {\n      key: 'WebRTC_Enable_Private',\n      alias: 'webRTCEnablePrivate'\n    }, {\n      key: 'WebRTC_Enable_Direct',\n      alias: 'webRTCEnableDirect'\n    }, {\n      key: 'Canned_Responses_Enable',\n      alias: 'cannedResponses'\n    }]; // Mapping only _id values\n\n    const settingsIDs = settingsBase.map(el => el.key);\n    const settingsStatistics = Promise.await(Settings.findByIds(settingsIDs).map(el => {\n      var _settingsBase$find;\n\n      const alias = ((_settingsBase$find = settingsBase.find(obj => obj.key === el._id)) === null || _settingsBase$find === void 0 ? void 0 : _settingsBase$find.alias) || {};\n      if (!!alias && Object.keys(el).length) return {\n        [String(alias)]: el.value\n      };\n      return alias;\n    }).filter(el => Object.keys(el).length) // Filter to remove all empty objects\n    .toArray()).reduce((a, b) => Object.assign(a, b), {}); // Convert array to objects\n\n    const staticticObject = Promise.await(setSettingsStatistics(settingsStatistics));\n    return staticticObject;\n  } catch (error) {\n    return error;\n  }\n});","map":{"version":3,"sources":["server/lib/statistics/getSettingsStatistics.ts"],"names":[],"mappings":"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","sourcesContent":["import { Settings } from '../../../app/models/server/raw';\nimport { ISettingStatistics, ISettingStatisticsObject } from '../../../definition/ISetting';\n\nconst setSettingsStatistics = async (settings: ISettingStatistics): Promise<ISettingStatisticsObject> => {\n\tconst {\n\t\taccount2fa,\n\t\tcannedResponsesEnabled,\n\t\te2e,\n\t\te2eDefaultDirectRoom,\n\t\te2eDefaultPrivateRoom,\n\t\tsmtpHost,\n\t\tsmtpPort,\n\t\tfromEmail,\n\t\tframeworkDevMode,\n\t\tframeworkEnable,\n\t\tsurveyEnabled,\n\t\tupdateChecker,\n\t\tliveStream,\n\t\tbroadcasting,\n\t\tallowEditing,\n\t\tallowDeleting,\n\t\tallowUnrecognizedSlashCommand,\n\t\tallowBadWordsFilter,\n\t\treadReceiptEnabled,\n\t\treadReceiptStoreUsers,\n\t\tglobalSearchEnabled,\n\t\totrEnable,\n\t\tpushEnable,\n\t\tthreadsEnabled,\n\t\tbigBlueButton,\n\t\tjitsiEnabled,\n\t\twebRTCEnableChannel,\n\t\twebRTCEnablePrivate,\n\t\twebRTCEnableDirect,\n\t} = settings;\n\n\t// If Canned Response does not exist add blank object to the statistic else add canned response object\n\tconst cannedRes = !cannedResponsesEnabled ? {} : { cannedResponses: { cannedResponsesEnabled } };\n\n\tconst statisticObject = {\n\t\taccounts: {\n\t\t\taccount2fa,\n\t\t},\n\t\t...cannedRes,\n\t\te2ee: {\n\t\t\te2e,\n\t\t\te2eDefaultDirectRoom,\n\t\t\te2eDefaultPrivateRoom,\n\t\t},\n\t\temail: {\n\t\t\tsmtp: {\n\t\t\t\tsmtpHost,\n\t\t\t\tsmtpPort,\n\t\t\t\tfromEmail,\n\t\t\t},\n\t\t},\n\t\tgeneral: {\n\t\t\tapps: {\n\t\t\t\tframeworkDevMode,\n\t\t\t\tframeworkEnable,\n\t\t\t},\n\t\t\tnps: {\n\t\t\t\tsurveyEnabled,\n\t\t\t},\n\t\t\tupdate: {\n\t\t\t\tupdateChecker,\n\t\t\t},\n\t\t},\n\t\tliveStreamAndBroadcasting: {\n\t\t\tliveStream,\n\t\t\tbroadcasting,\n\t\t},\n\t\tmessage: {\n\t\t\tallowEditing,\n\t\t\tallowDeleting,\n\t\t\tallowUnrecognizedSlashCommand,\n\t\t\tallowBadWordsFilter,\n\t\t\treadReceiptEnabled,\n\t\t\treadReceiptStoreUsers,\n\t\t},\n\t\totr: {\n\t\t\totrEnable,\n\t\t},\n\t\tpush: {\n\t\t\tpushEnable,\n\t\t},\n\t\tsearch: {\n\t\t\tdefaultProvider: {\n\t\t\t\tglobalSearchEnabled,\n\t\t\t},\n\t\t},\n\t\tthreads: {\n\t\t\tthreadsEnabled,\n\t\t},\n\t\tvideoConference: {\n\t\t\tbigBlueButton,\n\t\t\tjitsiEnabled,\n\t\t},\n\t\twebRTC: {\n\t\t\twebRTCEnableChannel,\n\t\t\twebRTCEnablePrivate,\n\t\t\twebRTCEnableDirect,\n\t\t},\n\t};\n\treturn statisticObject;\n};\nexport const getSettingsStatistics = async (): Promise<ISettingStatisticsObject> => {\n\ttry {\n\t\tconst settingsBase = [\n\t\t\t{ key: 'Accounts_TwoFactorAuthentication_Enabled', alias: 'account2fa' },\n\t\t\t{ key: 'E2E_Enable', alias: 'e2e' },\n\t\t\t{ key: 'E2E_Enabled_Default_DirectRooms', alias: 'e2eDefaultDirectRoom' },\n\t\t\t{ key: 'E2E_Enabled_Default_PrivateRooms', alias: 'e2eDefaultPrivateRoom' },\n\t\t\t{ key: 'SMTP_Host', alias: 'smtpHost' },\n\t\t\t{ key: 'SMTP_Port', alias: 'smtpPort' },\n\t\t\t{ key: 'From_Email', alias: 'fromEmail' },\n\t\t\t{ key: 'Apps_Framework_Development_Mode', alias: 'frameworkDevMode' },\n\t\t\t{ key: 'Apps_Framework_enabled', alias: 'frameworkEnable' },\n\t\t\t{ key: 'NPS_survey_enabled', alias: 'surveyEnabled' },\n\t\t\t{ key: 'Update_EnableChecker', alias: 'updateChecker' },\n\t\t\t{ key: 'Livestream_enabled', alias: 'liveStream' },\n\t\t\t{ key: 'Broadcasting_enabled', alias: 'broadcasting' },\n\t\t\t{ key: 'Message_AllowEditing', alias: 'allowEditing' },\n\t\t\t{ key: 'Message_AllowDeleting', alias: 'allowDeleting' },\n\t\t\t{ key: 'Message_AllowUnrecognizedSlashCommand', alias: 'allowUnrecognizedSlashCommand' },\n\t\t\t{ key: 'Message_AllowBadWordsFilter', alias: 'allowBadWordsFilter' },\n\t\t\t{ key: 'Message_Read_Receipt_Enabled', alias: 'readReceiptEnabled' },\n\t\t\t{ key: 'Message_Read_Receipt_Store_Users', alias: 'readReceiptStoreUsers' },\n\t\t\t{ key: 'Search.defaultProvider.GlobalSearchEnabled', alias: 'globalSearchEnabled' },\n\t\t\t{ key: 'OTR_Enable', alias: 'otrEnable' },\n\t\t\t{ key: 'Push_enable', alias: 'pushEnable' },\n\t\t\t{ key: 'Threads_enabled', alias: 'threadsEnabled' },\n\t\t\t{ key: 'bigbluebutton_Enabled', alias: 'bigBlueButton' },\n\t\t\t{ key: 'Jitsi_Enabled', alias: 'jitsiEnabled' },\n\t\t\t{ key: 'WebRTC_Enable_Channel', alias: 'webRTCEnableChannel' },\n\t\t\t{ key: 'WebRTC_Enable_Private', alias: 'webRTCEnablePrivate' },\n\t\t\t{ key: 'WebRTC_Enable_Direct', alias: 'webRTCEnableDirect' },\n\t\t\t{ key: 'Canned_Responses_Enable', alias: 'cannedResponses' },\n\t\t];\n\n\t\t// Mapping only _id values\n\t\tconst settingsIDs = settingsBase.map((el) => el.key);\n\n\t\tconst settingsStatistics = (\n\t\t\tawait Settings.findByIds(settingsIDs)\n\t\t\t\t.map((el): ISettingStatistics => {\n\t\t\t\t\tconst alias = settingsBase.find((obj) => obj.key === el._id)?.alias || {};\n\n\t\t\t\t\tif (!!alias && Object.keys(el).length) return { [String(alias)]: el.value };\n\t\t\t\t\treturn alias;\n\t\t\t\t})\n\t\t\t\t.filter((el: ISettingStatistics) => Object.keys(el).length) // Filter to remove all empty objects\n\t\t\t\t.toArray()\n\t\t).reduce((a, b) => Object.assign(a, b), {}); // Convert array to objects\n\t\tconst staticticObject = await setSettingsStatistics(settingsStatistics);\n\n\t\treturn staticticObject;\n\t} catch (error: any) {\n\t\treturn error;\n\t}\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"3e2d6a5d7d2211726800e7214fd5d05b1f899f17"}

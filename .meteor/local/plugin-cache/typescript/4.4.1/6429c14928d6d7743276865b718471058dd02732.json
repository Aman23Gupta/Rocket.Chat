{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/lib/engagementDashboard/channels.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/lib/engagementDashboard/channels.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/lib/engagementDashboard/channels.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/engagementDashboard/channels.ts","sourceRoot":"","sources":["ee/server/lib/engagementDashboard/channels.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,KAAK,EAAE,MAAM,mCAAmC,CAAC;AAC1D,OAAO,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,MAAM,QAAQ,CAAC;AAGpE,MAAM,CAAC,MAAM,mCAAmC,GAAG,KAAK,EAAE,EACzD,KAAK,EACL,GAAG,EACH,OAAO,GAAG,EAAE,GAQZ,EAeE,EAAE;IACJ,MAAM,gBAAgB,GAAG,wBAAwB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC9D,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IACjE,MAAM,eAAe,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IAE1F,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,2CAA2C,CAAC;QACxE,KAAK,EAAE,gBAAgB,CAAC,KAAK,CAAC;QAC9B,GAAG,EAAE,gBAAgB,CAAC,GAAG,CAAC;QAC1B,eAAe,EAAE,gBAAgB,CAAC,eAAe,CAAC;QAClD,aAAa,EAAE,gBAAgB,CAAC,aAAa,CAAC;QAC9C,OAAO;KACP,CAAC,CAAC,OAAO,EAAE,CAAC;IAEb,MAAM,KAAK,GACV,CACC,MAAM,KAAK,CAAC,2CAA2C,CAAC;QACvD,KAAK,EAAE,gBAAgB,CAAC,KAAK,CAAC;QAC9B,GAAG,EAAE,gBAAgB,CAAC,GAAG,CAAC;QAC1B,eAAe,EAAE,gBAAgB,CAAC,eAAe,CAAC;QAClD,aAAa,EAAE,gBAAgB,CAAC,aAAa,CAAC;QAC9C,SAAS,EAAE,IAAI;KACf,CAAC,CAAC,OAAO,EAAE,CACZ,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;IAElB,OAAO;QACN,QAAQ;QACR,KAAK;KACL,CAAC;AACH,CAAC,CAAC","sourcesContent":["import moment from 'moment';\n\nimport { Rooms } from '../../../../app/models/server/raw';\nimport { convertDateToInt, diffBetweenDaysInclusive } from './date';\nimport { IDirectMessageRoom, IRoom } from '../../../../definition/IRoom';\n\nexport const findAllChannelsWithNumberOfMessages = async ({\n\tstart,\n\tend,\n\toptions = {},\n}: {\n\tstart: Date;\n\tend: Date;\n\toptions: {\n\t\toffset?: number;\n\t\tcount?: number;\n\t};\n}): Promise<{\n\tchannels: {\n\t\troom: {\n\t\t\t_id: IRoom['_id'];\n\t\t\tname: IRoom['name'] | IRoom['fname'];\n\t\t\tts: IRoom['ts'];\n\t\t\tt: IRoom['t'];\n\t\t\t_updatedAt: IRoom['_updatedAt'];\n\t\t\tusernames?: IDirectMessageRoom['usernames'];\n\t\t};\n\t\tmessages: number;\n\t\tlastWeekMessages: number;\n\t\tdiffFromLastWeek: number;\n\t}[];\n\ttotal: number;\n}> => {\n\tconst daysBetweenDates = diffBetweenDaysInclusive(end, start);\n\tconst endOfLastWeek = moment(start).subtract(1, 'days').toDate();\n\tconst startOfLastWeek = moment(endOfLastWeek).subtract(daysBetweenDates, 'days').toDate();\n\n\tconst channels = await Rooms.findChannelsWithNumberOfMessagesBetweenDate({\n\t\tstart: convertDateToInt(start),\n\t\tend: convertDateToInt(end),\n\t\tstartOfLastWeek: convertDateToInt(startOfLastWeek),\n\t\tendOfLastWeek: convertDateToInt(endOfLastWeek),\n\t\toptions,\n\t}).toArray();\n\n\tconst total =\n\t\t(\n\t\t\tawait Rooms.findChannelsWithNumberOfMessagesBetweenDate({\n\t\t\t\tstart: convertDateToInt(start),\n\t\t\t\tend: convertDateToInt(end),\n\t\t\t\tstartOfLastWeek: convertDateToInt(startOfLastWeek),\n\t\t\t\tendOfLastWeek: convertDateToInt(endOfLastWeek),\n\t\t\t\tonlyCount: true,\n\t\t\t}).toArray()\n\t\t)[0]?.total ?? 0;\n\n\treturn {\n\t\tchannels,\n\t\ttotal,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/lib/engagementDashboard/channels.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/lib/engagementDashboard/channels.ts"}},"code":"module.export({\n  findAllChannelsWithNumberOfMessages: () => findAllChannelsWithNumberOfMessages\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet Rooms;\nmodule.link(\"../../../../app/models/server/raw\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 1);\nlet convertDateToInt, diffBetweenDaysInclusive;\nmodule.link(\"./date\", {\n  convertDateToInt(v) {\n    convertDateToInt = v;\n  },\n\n  diffBetweenDaysInclusive(v) {\n    diffBetweenDaysInclusive = v;\n  }\n\n}, 2);\n\nconst findAllChannelsWithNumberOfMessages = _ref => Promise.asyncApply(() => {\n  var _await$Rooms$findChan, _await$Rooms$findChan2;\n\n  let {\n    start,\n    end,\n    options = {}\n  } = _ref;\n  const daysBetweenDates = diffBetweenDaysInclusive(end, start);\n  const endOfLastWeek = moment(start).subtract(1, 'days').toDate();\n  const startOfLastWeek = moment(endOfLastWeek).subtract(daysBetweenDates, 'days').toDate();\n  const channels = Promise.await(Rooms.findChannelsWithNumberOfMessagesBetweenDate({\n    start: convertDateToInt(start),\n    end: convertDateToInt(end),\n    startOfLastWeek: convertDateToInt(startOfLastWeek),\n    endOfLastWeek: convertDateToInt(endOfLastWeek),\n    options\n  }).toArray());\n  const total = (_await$Rooms$findChan = (_await$Rooms$findChan2 = Promise.await(Rooms.findChannelsWithNumberOfMessagesBetweenDate({\n    start: convertDateToInt(start),\n    end: convertDateToInt(end),\n    startOfLastWeek: convertDateToInt(startOfLastWeek),\n    endOfLastWeek: convertDateToInt(endOfLastWeek),\n    onlyCount: true\n  }).toArray())[0]) === null || _await$Rooms$findChan2 === void 0 ? void 0 : _await$Rooms$findChan2.total) !== null && _await$Rooms$findChan !== void 0 ? _await$Rooms$findChan : 0;\n  return {\n    channels,\n    total\n  };\n});","map":{"version":3,"sources":["ee/server/lib/engagementDashboard/channels.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAa;AAAA,EAAA,mCAAe,EAAA,MAAA;AAAf,CAAb;AAA4B,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA,EAAA,wBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,wBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,wBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAMrB,MAAM,mCAAmC,GAAG,iCA0B9C;AAAA;;AAAA,MA1BqD;AACzD,IAAA,KADyD;AAEzD,IAAA,GAFyD;AAGzD,IAAA,OAAO,GAAG;AAH+C,GA0BrD;AACJ,QAAM,gBAAgB,GAAG,wBAAwB,CAAC,GAAD,EAAM,KAAN,CAAjD;AACA,QAAM,aAAa,GAAG,MAAM,CAAC,KAAD,CAAN,CAAc,QAAd,CAAuB,CAAvB,EAA0B,MAA1B,EAAkC,MAAlC,EAAtB;AACA,QAAM,eAAe,GAAG,MAAM,CAAC,aAAD,CAAN,CAAsB,QAAtB,CAA+B,gBAA/B,EAAiD,MAAjD,EAAyD,MAAzD,EAAxB;AAEA,QAAM,QAAQ,iBAAS,KAAK,CAAC,2CAAN,CAAkD;AACxE,IAAA,KAAK,EAAE,gBAAgB,CAAC,KAAD,CADiD;AAExE,IAAA,GAAG,EAAE,gBAAgB,CAAC,GAAD,CAFmD;AAGxE,IAAA,eAAe,EAAE,gBAAgB,CAAC,eAAD,CAHuC;AAIxE,IAAA,aAAa,EAAE,gBAAgB,CAAC,aAAD,CAJyC;AAKxE,IAAA;AALwE,GAAlD,EAMpB,OANoB,EAAT,CAAd;AAQA,QAAM,KAAK,sDACV,cACO,KAAK,CAAC,2CAAN,CAAkD;AACvD,IAAA,KAAK,EAAE,gBAAgB,CAAC,KAAD,CADgC;AAEvD,IAAA,GAAG,EAAE,gBAAgB,CAAC,GAAD,CAFkC;AAGvD,IAAA,eAAe,EAAE,gBAAgB,CAAC,eAAD,CAHsB;AAIvD,IAAA,aAAa,EAAE,gBAAgB,CAAC,aAAD,CAJwB;AAKvD,IAAA,SAAS,EAAE;AAL4C,GAAlD,EAMH,OANG,EADP,EAQE,CARF,CADU,2DACV,uBAQM,KATI,yEASK,CAThB;AAWA,SAAO;AACN,IAAA,QADM;AAEN,IAAA;AAFM,GAAP;AAIA,CAtDkD,CAA5C","sourcesContent":["import moment from 'moment';\n\nimport { Rooms } from '../../../../app/models/server/raw';\nimport { convertDateToInt, diffBetweenDaysInclusive } from './date';\nimport { IDirectMessageRoom, IRoom } from '../../../../definition/IRoom';\n\nexport const findAllChannelsWithNumberOfMessages = async ({\n\tstart,\n\tend,\n\toptions = {},\n}: {\n\tstart: Date;\n\tend: Date;\n\toptions: {\n\t\toffset?: number;\n\t\tcount?: number;\n\t};\n}): Promise<{\n\tchannels: {\n\t\troom: {\n\t\t\t_id: IRoom['_id'];\n\t\t\tname: IRoom['name'] | IRoom['fname'];\n\t\t\tts: IRoom['ts'];\n\t\t\tt: IRoom['t'];\n\t\t\t_updatedAt: IRoom['_updatedAt'];\n\t\t\tusernames?: IDirectMessageRoom['usernames'];\n\t\t};\n\t\tmessages: number;\n\t\tlastWeekMessages: number;\n\t\tdiffFromLastWeek: number;\n\t}[];\n\ttotal: number;\n}> => {\n\tconst daysBetweenDates = diffBetweenDaysInclusive(end, start);\n\tconst endOfLastWeek = moment(start).subtract(1, 'days').toDate();\n\tconst startOfLastWeek = moment(endOfLastWeek).subtract(daysBetweenDates, 'days').toDate();\n\n\tconst channels = await Rooms.findChannelsWithNumberOfMessagesBetweenDate({\n\t\tstart: convertDateToInt(start),\n\t\tend: convertDateToInt(end),\n\t\tstartOfLastWeek: convertDateToInt(startOfLastWeek),\n\t\tendOfLastWeek: convertDateToInt(endOfLastWeek),\n\t\toptions,\n\t}).toArray();\n\n\tconst total =\n\t\t(\n\t\t\tawait Rooms.findChannelsWithNumberOfMessagesBetweenDate({\n\t\t\t\tstart: convertDateToInt(start),\n\t\t\t\tend: convertDateToInt(end),\n\t\t\t\tstartOfLastWeek: convertDateToInt(startOfLastWeek),\n\t\t\t\tendOfLastWeek: convertDateToInt(endOfLastWeek),\n\t\t\t\tonlyCount: true,\n\t\t\t}).toArray()\n\t\t)[0]?.total ?? 0;\n\n\treturn {\n\t\tchannels,\n\t\ttotal,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"6429c14928d6d7743276865b718471058dd02732"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Avatars.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/Avatars.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Avatars.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/Avatars.ts","sourceRoot":"","sources":["app/models/server/raw/Avatars.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAsB,MAAM,WAAW,CAAC;AAGxD,MAAM,OAAO,UAAW,SAAQ,OAAU;IAC/B,OAAO,GAAyB;QACzC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;QAClC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;KACjC,CAAC;IAEF,oBAAoB,CAAC,IAAY,EAAE,MAAc,EAAE,KAAa,EAAE,IAAsB,EAAE,KAAa;QACtG,MAAM,QAAQ,GAAG;YAChB,IAAI;YACJ,MAAM;YACN,KAAK;YACL,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;YACrC,UAAU,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC;QAEF,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAErC,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,kBAAkB,CAAC,MAAc,EAAE,MAAc,EAAE,IAAY;QAC9D,IAAI,CAAC,MAAM,EAAE;YACZ,OAAO;SACP;QAED,MAAM,MAAM,GAAG;YACd,GAAG,EAAE,MAAM;YACX,MAAM;SACN,CAAC;QAEF,MAAM,MAAM,GAAG;YACd,IAAI,EAAE;gBACL,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,CAAC;aACX;SACD,CAAC;QAEF,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,IAAY;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,GAAW;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,MAAc,EAAE,IAAY;QACpD,MAAM,MAAM,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;QAC/B,MAAM,MAAM,GAAG;YACd,IAAI,EAAE;gBACL,IAAI;aACJ;SACD,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,MAAc;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IACxC,CAAC;CACD","sourcesContent":["import { DeleteWriteOpResultObject, UpdateWriteOpResult } from 'mongodb';\n\nimport { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { IAvatar as T } from '../../../../definition/IAvatar';\n\nexport class AvatarsRaw extends BaseRaw<T> {\n\tprotected indexes: IndexSpecification[] = [\n\t\t{ key: { name: 1 }, sparse: true },\n\t\t{ key: { rid: 1 }, sparse: true },\n\t];\n\n\tinsertAvatarFileInit(name: string, userId: string, store: string, file: { name: string }, extra: object): Promise<UpdateWriteOpResult> {\n\t\tconst fileData = {\n\t\t\tname,\n\t\t\tuserId,\n\t\t\tstore,\n\t\t\tcomplete: false,\n\t\t\tuploading: true,\n\t\t\tprogress: 0,\n\t\t\textension: file.name.split('.').pop(),\n\t\t\tuploadedAt: new Date(),\n\t\t};\n\n\t\tObject.assign(fileData, file, extra);\n\n\t\treturn this.updateOne({ _id: name }, fileData, { upsert: true });\n\t}\n\n\tupdateFileComplete(fileId: string, userId: string, file: object): Promise<UpdateWriteOpResult> | undefined {\n\t\tif (!fileId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filter = {\n\t\t\t_id: fileId,\n\t\t\tuserId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tcomplete: true,\n\t\t\t\tuploading: false,\n\t\t\t\tprogress: 1,\n\t\t\t},\n\t\t};\n\n\t\tupdate.$set = Object.assign(file, update.$set);\n\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync findOneByName(name: string): Promise<T | null> {\n\t\treturn this.findOne({ name });\n\t}\n\n\tasync findOneByRoomId(rid: string): Promise<T | null> {\n\t\treturn this.findOne({ rid });\n\t}\n\n\tasync updateFileNameById(fileId: string, name: string): Promise<UpdateWriteOpResult> {\n\t\tconst filter = { _id: fileId };\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tname,\n\t\t\t},\n\t\t};\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync deleteFile(fileId: string): Promise<DeleteWriteOpResultObject> {\n\t\treturn this.deleteOne({ _id: fileId });\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Avatars.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/Avatars.ts"}},"code":"module.export({\n  AvatarsRaw: () => AvatarsRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass AvatarsRaw extends BaseRaw {\n  constructor() {\n    super(...arguments);\n    this.indexes = [{\n      key: {\n        name: 1\n      },\n      sparse: true\n    }, {\n      key: {\n        rid: 1\n      },\n      sparse: true\n    }];\n  }\n\n  insertAvatarFileInit(name, userId, store, file, extra) {\n    const fileData = {\n      name,\n      userId,\n      store,\n      complete: false,\n      uploading: true,\n      progress: 0,\n      extension: file.name.split('.').pop(),\n      uploadedAt: new Date()\n    };\n    Object.assign(fileData, file, extra);\n    return this.updateOne({\n      _id: name\n    }, fileData, {\n      upsert: true\n    });\n  }\n\n  updateFileComplete(fileId, userId, file) {\n    if (!fileId) {\n      return;\n    }\n\n    const filter = {\n      _id: fileId,\n      userId\n    };\n    const update = {\n      $set: {\n        complete: true,\n        uploading: false,\n        progress: 1\n      }\n    };\n    update.$set = Object.assign(file, update.$set);\n    return this.updateOne(filter, update);\n  }\n\n  findOneByName(name) {\n    return Promise.asyncApply(() => {\n      return this.findOne({\n        name\n      });\n    });\n  }\n\n  findOneByRoomId(rid) {\n    return Promise.asyncApply(() => {\n      return this.findOne({\n        rid\n      });\n    });\n  }\n\n  updateFileNameById(fileId, name) {\n    return Promise.asyncApply(() => {\n      const filter = {\n        _id: fileId\n      };\n      const update = {\n        $set: {\n          name\n        }\n      };\n      return this.updateOne(filter, update);\n    });\n  }\n\n  deleteFile(fileId) {\n    return Promise.asyncApply(() => {\n      return this.deleteOne({\n        _id: fileId\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/Avatars.ts"],"names":[],"mappings":"AAEA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,UAAmC,EAAA,MAAA;AAAnC,CAAT;AAAwD,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAGlD,MAAO,UAAP,SAA0B,OAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/B,OAD+B,GACC,CACzC;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,IAAI,EAAE;AAAR,OAAP;AAAoB,MAAA,MAAM,EAAE;AAA5B,KADyC,EAEzC;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,GAAG,EAAE;AAAP,OAAP;AAAmB,MAAA,MAAM,EAAE;AAA3B,KAFyC,CADD;AAAA;;AAMzC,EAAA,oBAAoB,CAAC,IAAD,EAAe,MAAf,EAA+B,KAA/B,EAA8C,IAA9C,EAAsE,KAAtE,EAAmF;AACtG,UAAM,QAAQ,GAAG;AAChB,MAAA,IADgB;AAEhB,MAAA,MAFgB;AAGhB,MAAA,KAHgB;AAIhB,MAAA,QAAQ,EAAE,KAJM;AAKhB,MAAA,SAAS,EAAE,IALK;AAMhB,MAAA,QAAQ,EAAE,CANM;AAOhB,MAAA,SAAS,EAAE,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,GAAhB,EAAqB,GAArB,EAPK;AAQhB,MAAA,UAAU,EAAE,IAAI,IAAJ;AARI,KAAjB;AAWA,IAAA,MAAM,CAAC,MAAP,CAAc,QAAd,EAAwB,IAAxB,EAA8B,KAA9B;AAEA,WAAO,KAAK,SAAL,CAAe;AAAE,MAAA,GAAG,EAAE;AAAP,KAAf,EAA8B,QAA9B,EAAwC;AAAE,MAAA,MAAM,EAAE;AAAV,KAAxC,CAAP;AACA;;AAED,EAAA,kBAAkB,CAAC,MAAD,EAAiB,MAAjB,EAAiC,IAAjC,EAA6C;AAC9D,QAAI,CAAC,MAAL,EAAa;AACZ;AACA;;AAED,UAAM,MAAM,GAAG;AACd,MAAA,GAAG,EAAE,MADS;AAEd,MAAA;AAFc,KAAf;AAKA,UAAM,MAAM,GAAG;AACd,MAAA,IAAI,EAAE;AACL,QAAA,QAAQ,EAAE,IADL;AAEL,QAAA,SAAS,EAAE,KAFN;AAGL,QAAA,QAAQ,EAAE;AAHL;AADQ,KAAf;AAQA,IAAA,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,MAAM,CAAC,IAA3B,CAAd;AAEA,WAAO,KAAK,SAAL,CAAe,MAAf,EAAuB,MAAvB,CAAP;AACA;;AAEK,EAAA,aAAa,CAAC,IAAD;AAAA,oCAAa;AAC/B,aAAO,KAAK,OAAL,CAAa;AAAE,QAAA;AAAF,OAAb,CAAP;AACA,KAFkB;AAAA;;AAIb,EAAA,eAAe,CAAC,GAAD;AAAA,oCAAY;AAChC,aAAO,KAAK,OAAL,CAAa;AAAE,QAAA;AAAF,OAAb,CAAP;AACA,KAFoB;AAAA;;AAIf,EAAA,kBAAkB,CAAC,MAAD,EAAiB,IAAjB;AAAA,oCAA6B;AACpD,YAAM,MAAM,GAAG;AAAE,QAAA,GAAG,EAAE;AAAP,OAAf;AACA,YAAM,MAAM,GAAG;AACd,QAAA,IAAI,EAAE;AACL,UAAA;AADK;AADQ,OAAf;AAKA,aAAO,KAAK,SAAL,CAAe,MAAf,EAAuB,MAAvB,CAAP;AACA,KARuB;AAAA;;AAUlB,EAAA,UAAU,CAAC,MAAD;AAAA,oCAAe;AAC9B,aAAO,KAAK,SAAL,CAAe;AAAE,QAAA,GAAG,EAAE;AAAP,OAAf,CAAP;AACA,KAFe;AAAA;;AAhEyB","sourcesContent":["import { DeleteWriteOpResultObject, UpdateWriteOpResult } from 'mongodb';\n\nimport { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { IAvatar as T } from '../../../../definition/IAvatar';\n\nexport class AvatarsRaw extends BaseRaw<T> {\n\tprotected indexes: IndexSpecification[] = [\n\t\t{ key: { name: 1 }, sparse: true },\n\t\t{ key: { rid: 1 }, sparse: true },\n\t];\n\n\tinsertAvatarFileInit(name: string, userId: string, store: string, file: { name: string }, extra: object): Promise<UpdateWriteOpResult> {\n\t\tconst fileData = {\n\t\t\tname,\n\t\t\tuserId,\n\t\t\tstore,\n\t\t\tcomplete: false,\n\t\t\tuploading: true,\n\t\t\tprogress: 0,\n\t\t\textension: file.name.split('.').pop(),\n\t\t\tuploadedAt: new Date(),\n\t\t};\n\n\t\tObject.assign(fileData, file, extra);\n\n\t\treturn this.updateOne({ _id: name }, fileData, { upsert: true });\n\t}\n\n\tupdateFileComplete(fileId: string, userId: string, file: object): Promise<UpdateWriteOpResult> | undefined {\n\t\tif (!fileId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filter = {\n\t\t\t_id: fileId,\n\t\t\tuserId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tcomplete: true,\n\t\t\t\tuploading: false,\n\t\t\t\tprogress: 1,\n\t\t\t},\n\t\t};\n\n\t\tupdate.$set = Object.assign(file, update.$set);\n\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync findOneByName(name: string): Promise<T | null> {\n\t\treturn this.findOne({ name });\n\t}\n\n\tasync findOneByRoomId(rid: string): Promise<T | null> {\n\t\treturn this.findOne({ rid });\n\t}\n\n\tasync updateFileNameById(fileId: string, name: string): Promise<UpdateWriteOpResult> {\n\t\tconst filter = { _id: fileId };\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tname,\n\t\t\t},\n\t\t};\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync deleteFile(fileId: string): Promise<DeleteWriteOpResultObject> {\n\t\treturn this.deleteOne({ _id: fileId });\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"951a20bb0183214e55b05af5fffb590ff1b18857"}

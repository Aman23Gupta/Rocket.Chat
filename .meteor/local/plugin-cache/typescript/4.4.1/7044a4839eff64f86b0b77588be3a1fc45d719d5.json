{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v232.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v232.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v232.ts","inputSourceMap":{"version":3,"file":"server/startup/migrations/v232.ts","sourceRoot":"","sources":["server/startup/migrations/v232.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,gCAAgC,CAAC;AAC9D,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;AACjE,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAE7D,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AAExD,YAAY,CAAC;IACZ,OAAO,EAAE,GAAG;IACZ,EAAE;QACD,MAAM,KAAK,GAAG;YACb,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,mCAAmC,CAAC,EAAE;YACnD,KAAK,EAAE,IAAI;SACX,CAAC;QAEF,MAAM,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAChD,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAExD,MAAM,IAAI,GAAG,YAAY,EAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,IAAI,CAAC,oBAAoB,IAAI,WAAW,IAAI,WAAW,CAAC,EAAE;YAClE,OAAO;SACP;QAED,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;QAElF,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7G,MAAM,GAAG,GACR,qQAAqQ,CAAC;QACvQ,aAAa;QACb,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;QAE3E,IAAI,CAAC,UAAU,EAAE;YAChB,OAAO;SACP;QAED,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1D,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { addMigration } from '../../lib/migrations';\nimport { isEnterprise } from '../../../ee/app/license/server';\nimport { Users, Settings } from '../../../app/models/server/raw';\nimport { Banner } from '../../sdk';\nimport { BannerPlatform } from '../../../definition/IBanner';\nimport { IUser } from '../../../definition/IUser';\nimport { settings } from '../../../app/settings/server';\n\naddMigration({\n\tversion: 232,\n\tup() {\n\t\tconst query = {\n\t\t\t_id: { $in: [/^Accounts_OAuth_Custom-?([^-_]+)$/] },\n\t\t\tvalue: true,\n\t\t};\n\n\t\tconst isCustomOAuthEnabled = !!Promise.await(Settings.findOne(query));\n\t\tconst LDAPEnabled = settings.get('LDAP_Enable');\n\t\tconst SAMLEnabled = settings.get('SAML_Custom_Default');\n\n\t\tconst isEE = isEnterprise();\n\n\t\tif (!isEE && (isCustomOAuthEnabled || LDAPEnabled || SAMLEnabled)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst admins = Promise.await(Users.find<IUser>({ roles: 'admin' }, {}).toArray());\n\n\t\tconst banners = admins.map((a) => Promise.await(Banner.getBannersForUser(a._id, BannerPlatform.Web))).flat();\n\t\tconst msg =\n\t\t\t'Please notice that after the next release (4.0) advanced functionalities of LDAP, SAML, and Custom Oauth will be available only in Enterprise Edition and Gold plan. Check the official announcement for more info: https://go.rocket.chat/i/authentication-changes';\n\t\t// @ts-ignore\n\t\tconst authBanner = banners.find((b) => b.view.blocks[0].text.text === msg);\n\n\t\tif (!authBanner) {\n\t\t\treturn;\n\t\t}\n\n\t\tadmins.map((a) => Banner.dismiss(a._id, authBanner._id));\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v232.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v232.ts"}},"code":"let addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 0);\nlet isEnterprise;\nmodule.link(\"../../../ee/app/license/server\", {\n  isEnterprise(v) {\n    isEnterprise = v;\n  }\n\n}, 1);\nlet Users, Settings;\nmodule.link(\"../../../app/models/server/raw\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 2);\nlet Banner;\nmodule.link(\"../../sdk\", {\n  Banner(v) {\n    Banner = v;\n  }\n\n}, 3);\nlet BannerPlatform;\nmodule.link(\"../../../definition/IBanner\", {\n  BannerPlatform(v) {\n    BannerPlatform = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\naddMigration({\n  version: 232,\n\n  up() {\n    const query = {\n      _id: {\n        $in: [/^Accounts_OAuth_Custom-?([^-_]+)$/]\n      },\n      value: true\n    };\n    const isCustomOAuthEnabled = !!Promise.await(Settings.findOne(query));\n    const LDAPEnabled = settings.get('LDAP_Enable');\n    const SAMLEnabled = settings.get('SAML_Custom_Default');\n    const isEE = isEnterprise();\n\n    if (!isEE && (isCustomOAuthEnabled || LDAPEnabled || SAMLEnabled)) {\n      return;\n    }\n\n    const admins = Promise.await(Users.find({\n      roles: 'admin'\n    }, {}).toArray());\n    const banners = admins.map(a => Promise.await(Banner.getBannersForUser(a._id, BannerPlatform.Web))).flat();\n    const msg = 'Please notice that after the next release (4.0) advanced functionalities of LDAP, SAML, and Custom Oauth will be available only in Enterprise Edition and Gold plan. Check the official announcement for more info: https://go.rocket.chat/i/authentication-changes'; // @ts-ignore\n\n    const authBanner = banners.find(b => b.view.blocks[0].text.text === msg);\n\n    if (!authBanner) {\n      return;\n    }\n\n    admins.map(a => Banner.dismiss(a._id, authBanner._id));\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v232.ts"],"names":[],"mappings":"AAAA,IAAA,YAAA;AAAS,MAAc,CAAA,IAAd,CAAoB,sBAApB,EAA2C;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAA3C,EAA2C,CAA3C;AAA2C,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA,EAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQpD,YAAY,CAAC;AACZ,EAAA,OAAO,EAAE,GADG;;AAEZ,EAAA,EAAE,GAAA;AACD,UAAM,KAAK,GAAG;AACb,MAAA,GAAG,EAAE;AAAE,QAAA,GAAG,EAAE,CAAC,mCAAD;AAAP,OADQ;AAEb,MAAA,KAAK,EAAE;AAFM,KAAd;AAKA,UAAM,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC,KAAR,CAAc,QAAQ,CAAC,OAAT,CAAiB,KAAjB,CAAd,CAA/B;AACA,UAAM,WAAW,GAAG,QAAQ,CAAC,GAAT,CAAa,aAAb,CAApB;AACA,UAAM,WAAW,GAAG,QAAQ,CAAC,GAAT,CAAa,qBAAb,CAApB;AAEA,UAAM,IAAI,GAAG,YAAY,EAAzB;;AAEA,QAAI,CAAC,IAAD,KAAU,oBAAoB,IAAI,WAAxB,IAAuC,WAAjD,CAAJ,EAAmE;AAClE;AACA;;AAED,UAAM,MAAM,GAAG,OAAO,CAAC,KAAR,CAAc,KAAK,CAAC,IAAN,CAAkB;AAAE,MAAA,KAAK,EAAE;AAAT,KAAlB,EAAsC,EAAtC,EAA0C,OAA1C,EAAd,CAAf;AAEA,UAAM,OAAO,GAAG,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,OAAO,CAAC,KAAR,CAAc,MAAM,CAAC,iBAAP,CAAyB,CAAC,CAAC,GAA3B,EAAgC,cAAc,CAAC,GAA/C,CAAd,CAAlB,EAAsF,IAAtF,EAAhB;AACA,UAAM,GAAG,GACR,qQADD,CAnBC,CAqBD;;AACA,UAAM,UAAU,GAAG,OAAO,CAAC,IAAR,CAAc,CAAD,IAAO,CAAC,CAAC,IAAF,CAAO,MAAP,CAAc,CAAd,EAAiB,IAAjB,CAAsB,IAAtB,KAA+B,GAAnD,CAAnB;;AAEA,QAAI,CAAC,UAAL,EAAiB;AAChB;AACA;;AAED,IAAA,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,MAAM,CAAC,OAAP,CAAe,CAAC,CAAC,GAAjB,EAAsB,UAAU,CAAC,GAAjC,CAAlB;AACA;;AA/BW,CAAD,CAAZ","sourcesContent":["import { addMigration } from '../../lib/migrations';\nimport { isEnterprise } from '../../../ee/app/license/server';\nimport { Users, Settings } from '../../../app/models/server/raw';\nimport { Banner } from '../../sdk';\nimport { BannerPlatform } from '../../../definition/IBanner';\nimport { IUser } from '../../../definition/IUser';\nimport { settings } from '../../../app/settings/server';\n\naddMigration({\n\tversion: 232,\n\tup() {\n\t\tconst query = {\n\t\t\t_id: { $in: [/^Accounts_OAuth_Custom-?([^-_]+)$/] },\n\t\t\tvalue: true,\n\t\t};\n\n\t\tconst isCustomOAuthEnabled = !!Promise.await(Settings.findOne(query));\n\t\tconst LDAPEnabled = settings.get('LDAP_Enable');\n\t\tconst SAMLEnabled = settings.get('SAML_Custom_Default');\n\n\t\tconst isEE = isEnterprise();\n\n\t\tif (!isEE && (isCustomOAuthEnabled || LDAPEnabled || SAMLEnabled)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst admins = Promise.await(Users.find<IUser>({ roles: 'admin' }, {}).toArray());\n\n\t\tconst banners = admins.map((a) => Promise.await(Banner.getBannersForUser(a._id, BannerPlatform.Web))).flat();\n\t\tconst msg =\n\t\t\t'Please notice that after the next release (4.0) advanced functionalities of LDAP, SAML, and Custom Oauth will be available only in Enterprise Edition and Gold plan. Check the official announcement for more info: https://go.rocket.chat/i/authentication-changes';\n\t\t// @ts-ignore\n\t\tconst authBanner = banners.find((b) => b.view.blocks[0].text.text === msg);\n\n\t\tif (!authBanner) {\n\t\t\treturn;\n\t\t}\n\n\t\tadmins.map((a) => Banner.dismiss(a._id, authBanner._id));\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"7044a4839eff64f86b0b77588be3a1fc45d719d5"}

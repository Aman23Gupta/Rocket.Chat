{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/ServerEvents.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/ServerEvents.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/ServerEvents.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/ServerEvents.ts","sourceRoot":"","sources":["app/models/server/raw/ServerEvents.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAsB,MAAM,WAAW,CAAC;AACxD,OAAO,EAAgB,gBAAgB,EAAE,MAAM,qCAAqC,CAAC;AAErF,MAAM,OAAO,eAAgB,SAAQ,OAAqB;IAC/C,OAAO,GAAyB,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAE7H,KAAK,CAAC,yBAAyB,CAAC,EAAU;QACzC,OAAO,IAAI,CAAC,OAAO,CAClB;YACC,EAAE;YACF,CAAC,EAAE,gBAAgB,CAAC,oBAAoB;SACxC,EACD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CACpB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,+BAA+B,CAAC,QAAgB;QACrD,OAAO,IAAI,CAAC,OAAO,CAClB;YACC,YAAY,EAAE,QAAQ;YACtB,GAAG,EAAE,gBAAgB,CAAC,oBAAoB;SAC1C,EACD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CACpB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kCAAkC,CAAC,QAAgB,EAAE,KAAW;QACrE,OAAO,IAAI,CAAC,IAAI,CAAC;YAChB,YAAY,EAAE,QAAQ;YACtB,GAAG,EAAE,gBAAgB,CAAC,oBAAoB;YAC1C,IAAI,EAAE;gBACL,IAAI,EAAE,KAAK;aACX;SACD,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,4BAA4B,CAAC,EAAU,EAAE,KAAW;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC;YAChB,EAAE;YACF,CAAC,EAAE,gBAAgB,CAAC,oBAAoB;YACxC,EAAE,EAAE;gBACH,IAAI,EAAE,KAAK;aACX;SACD,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,uBAAuB,CAAC,EAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC;YAChB,EAAE;YACF,CAAC,EAAE,gBAAgB,CAAC,oBAAoB;SACxC,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,6BAA6B,CAAC,QAAgB;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC;YAChB,YAAY,EAAE,QAAQ;YACtB,GAAG,EAAE,gBAAgB,CAAC,oBAAoB;SAC1C,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;CACD","sourcesContent":["import { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { IServerEvent, IServerEventType } from '../../../../definition/IServerEvent';\n\nexport class ServerEventsRaw extends BaseRaw<IServerEvent> {\n\tprotected indexes: IndexSpecification[] = [{ key: { t: 1, ip: 1, ts: -1 } }, { key: { 't': 1, 'u.username': 1, 'ts': -1 } }];\n\n\tasync findLastFailedAttemptByIp(ip: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\tip,\n\t\t\t\tt: IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastFailedAttemptByUsername(username: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\t'u.username': username,\n\t\t\t\t't': IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync countFailedAttemptsByUsernameSince(username: string, since: Date): Promise<number> {\n\t\treturn this.find({\n\t\t\t'u.username': username,\n\t\t\t't': IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t'ts': {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t}).count();\n\t}\n\n\tcountFailedAttemptsByIpSince(ip: string, since: Date): Promise<number> {\n\t\treturn this.find({\n\t\t\tip,\n\t\t\tt: IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\tts: {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t}).count();\n\t}\n\n\tcountFailedAttemptsByIp(ip: string): Promise<number> {\n\t\treturn this.find({\n\t\t\tip,\n\t\t\tt: IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t}).count();\n\t}\n\n\tcountFailedAttemptsByUsername(username: string): Promise<number> {\n\t\treturn this.find({\n\t\t\t'u.username': username,\n\t\t\t't': IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t}).count();\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/ServerEvents.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/ServerEvents.ts"}},"code":"module.export({\n  ServerEventsRaw: () => ServerEventsRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\nlet IServerEventType;\nmodule.link(\"../../../../definition/IServerEvent\", {\n  IServerEventType(v) {\n    IServerEventType = v;\n  }\n\n}, 1);\n\nclass ServerEventsRaw extends BaseRaw {\n  constructor() {\n    super(...arguments);\n    this.indexes = [{\n      key: {\n        t: 1,\n        ip: 1,\n        ts: -1\n      }\n    }, {\n      key: {\n        't': 1,\n        'u.username': 1,\n        'ts': -1\n      }\n    }];\n  }\n\n  findLastFailedAttemptByIp(ip) {\n    return Promise.asyncApply(() => {\n      return this.findOne({\n        ip,\n        t: IServerEventType.FAILED_LOGIN_ATTEMPT\n      }, {\n        sort: {\n          ts: -1\n        }\n      });\n    });\n  }\n\n  findLastFailedAttemptByUsername(username) {\n    return Promise.asyncApply(() => {\n      return this.findOne({\n        'u.username': username,\n        't': IServerEventType.FAILED_LOGIN_ATTEMPT\n      }, {\n        sort: {\n          ts: -1\n        }\n      });\n    });\n  }\n\n  countFailedAttemptsByUsernameSince(username, since) {\n    return Promise.asyncApply(() => {\n      return this.find({\n        'u.username': username,\n        't': IServerEventType.FAILED_LOGIN_ATTEMPT,\n        'ts': {\n          $gte: since\n        }\n      }).count();\n    });\n  }\n\n  countFailedAttemptsByIpSince(ip, since) {\n    return this.find({\n      ip,\n      t: IServerEventType.FAILED_LOGIN_ATTEMPT,\n      ts: {\n        $gte: since\n      }\n    }).count();\n  }\n\n  countFailedAttemptsByIp(ip) {\n    return this.find({\n      ip,\n      t: IServerEventType.FAILED_LOGIN_ATTEMPT\n    }).count();\n  }\n\n  countFailedAttemptsByUsername(username) {\n    return this.find({\n      'u.username': username,\n      't': IServerEventType.FAILED_LOGIN_ATTEMPT\n    }).count();\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/ServerEvents.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,eAAmC,EAAA,MAAW;AAA9C,CAAT;AAAwD,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qCAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAGlD,MAAO,eAAP,SAA+B,OAA/B,CAAoD;AAAA;AAAA;AAAA,SAC/C,OAD+C,GACf,CAAC;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,CAAC,EAAE,CAAL;AAAQ,QAAA,EAAE,EAAE,CAAZ;AAAe,QAAA,EAAE,EAAE,CAAC;AAApB;AAAP,KAAD,EAAmC;AAAE,MAAA,GAAG,EAAE;AAAE,aAAK,CAAP;AAAU,sBAAc,CAAxB;AAA2B,cAAM,CAAC;AAAlC;AAAP,KAAnC,CADe;AAAA;;AAGnD,EAAA,yBAAyB,CAAC,EAAD;AAAA,oCAAW;AACzC,aAAO,KAAK,OAAL,CACN;AACC,QAAA,EADD;AAEC,QAAA,CAAC,EAAE,gBAAgB,CAAC;AAFrB,OADM,EAKN;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA,EAAE,EAAE,CAAC;AAAP;AAAR,OALM,CAAP;AAOA,KAR8B;AAAA;;AAUzB,EAAA,+BAA+B,CAAC,QAAD;AAAA,oCAAiB;AACrD,aAAO,KAAK,OAAL,CACN;AACC,sBAAc,QADf;AAEC,aAAK,gBAAgB,CAAC;AAFvB,OADM,EAKN;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA,EAAE,EAAE,CAAC;AAAP;AAAR,OALM,CAAP;AAOA,KARoC;AAAA;;AAU/B,EAAA,kCAAkC,CAAC,QAAD,EAAmB,KAAnB;AAAA,oCAA8B;AACrE,aAAO,KAAK,IAAL,CAAU;AAChB,sBAAc,QADE;AAEhB,aAAK,gBAAgB,CAAC,oBAFN;AAGhB,cAAM;AACL,UAAA,IAAI,EAAE;AADD;AAHU,OAAV,EAMJ,KANI,EAAP;AAOA,KARuC;AAAA;;AAUxC,EAAA,4BAA4B,CAAC,EAAD,EAAa,KAAb,EAAwB;AACnD,WAAO,KAAK,IAAL,CAAU;AAChB,MAAA,EADgB;AAEhB,MAAA,CAAC,EAAE,gBAAgB,CAAC,oBAFJ;AAGhB,MAAA,EAAE,EAAE;AACH,QAAA,IAAI,EAAE;AADH;AAHY,KAAV,EAMJ,KANI,EAAP;AAOA;;AAED,EAAA,uBAAuB,CAAC,EAAD,EAAW;AACjC,WAAO,KAAK,IAAL,CAAU;AAChB,MAAA,EADgB;AAEhB,MAAA,CAAC,EAAE,gBAAgB,CAAC;AAFJ,KAAV,EAGJ,KAHI,EAAP;AAIA;;AAED,EAAA,6BAA6B,CAAC,QAAD,EAAiB;AAC7C,WAAO,KAAK,IAAL,CAAU;AAChB,oBAAc,QADE;AAEhB,WAAK,gBAAgB,CAAC;AAFN,KAAV,EAGJ,KAHI,EAAP;AAIA;;AAvDwD","sourcesContent":["import { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { IServerEvent, IServerEventType } from '../../../../definition/IServerEvent';\n\nexport class ServerEventsRaw extends BaseRaw<IServerEvent> {\n\tprotected indexes: IndexSpecification[] = [{ key: { t: 1, ip: 1, ts: -1 } }, { key: { 't': 1, 'u.username': 1, 'ts': -1 } }];\n\n\tasync findLastFailedAttemptByIp(ip: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\tip,\n\t\t\t\tt: IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync findLastFailedAttemptByUsername(username: string): Promise<IServerEvent | null> {\n\t\treturn this.findOne<IServerEvent>(\n\t\t\t{\n\t\t\t\t'u.username': username,\n\t\t\t\t't': IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t},\n\t\t\t{ sort: { ts: -1 } },\n\t\t);\n\t}\n\n\tasync countFailedAttemptsByUsernameSince(username: string, since: Date): Promise<number> {\n\t\treturn this.find({\n\t\t\t'u.username': username,\n\t\t\t't': IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\t'ts': {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t}).count();\n\t}\n\n\tcountFailedAttemptsByIpSince(ip: string, since: Date): Promise<number> {\n\t\treturn this.find({\n\t\t\tip,\n\t\t\tt: IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t\tts: {\n\t\t\t\t$gte: since,\n\t\t\t},\n\t\t}).count();\n\t}\n\n\tcountFailedAttemptsByIp(ip: string): Promise<number> {\n\t\treturn this.find({\n\t\t\tip,\n\t\t\tt: IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t}).count();\n\t}\n\n\tcountFailedAttemptsByUsername(username: string): Promise<number> {\n\t\treturn this.find({\n\t\t\t'u.username': username,\n\t\t\t't': IServerEventType.FAILED_LOGIN_ATTEMPT,\n\t\t}).count();\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"a2bba793002193c3275ccfa8b107f756932c26f0"}

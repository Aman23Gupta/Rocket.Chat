{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/filterBadWords.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/methods/filterBadWords.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/filterBadWords.ts","inputSourceMap":{"version":3,"file":"app/lib/server/methods/filterBadWords.ts","sourceRoot":"","sources":["app/lib/server/methods/filterBadWords.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AACzC,OAAO,MAAM,MAAM,WAAW,CAAC;AAE/B,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AAGtD,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;AACrC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,QAAQ,CAAC,aAAa,CAAC,CAAC,6BAA6B,EAAE,4BAA4B,EAAE,2BAA2B,CAAC,EAAE,GAAG,EAAE;QACvH,GAAG,CAAC,OAAO,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;IACH,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE;QACpB,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,MAAM,mBAAmB,GAAG,QAAQ,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAExE,SAAS,CAAC,MAAM,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;QAExD,IAAI,CAAC,mBAAmB,EAAE;YACzB,OAAO;SACP;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,4BAA4B,CAAuB,CAAC;QACtF,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAuB,CAAC;QAElF,MAAM,OAAO,GAAG;YACf,IAAI,EACH,YAAY;gBACX,EAAE,KAAK,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBAC1B,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;YACxB,wDAAwD;YACxD,OAAO,EAAE,SAAS;YAClB,UAAU,EAAE,SAAS;YACrB,WAAW,EAAE,SAAS;YACtB,KAAK,EAAE,SAAS;YAChB,YAAY,EAAE,SAAS;YACvB,SAAS,EAAE,SAAS;SACpB,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAI,SAAS,EAAE,MAAM,EAAE;YACtB,MAAM,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACvE;QAED,SAAS,CAAC,GAAG,CACZ,mBAAmB,EACnB,CAAC,OAAiB,EAAE,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;gBACjB,OAAO,OAAO,CAAC;aACf;YACD,IAAI;gBACH,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aACxC;oBAAS;gBACT,6CAA6C;gBAC7C,OAAO,OAAO,CAAC;aACf;QACF,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,IAAI,EACvB,gBAAgB,CAChB,CAAC;IACH,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport Filter from 'bad-words';\n\nimport { settings } from '../../../settings/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { IMessage } from '../../../../definition/IMessage';\n\nconst Dep = new Tracker.Dependency();\nMeteor.startup(() => {\n\tsettings.watchMultiple(['Message_AllowBadWordsFilter', 'Message_BadWordsFilterList', 'Message_BadWordsWhitelist'], () => {\n\t\tDep.changed();\n\t});\n\tTracker.autorun(() => {\n\t\tDep.depend();\n\t\tconst allowBadWordsFilter = settings.get('Message_AllowBadWordsFilter');\n\n\t\tcallbacks.remove('beforeSaveMessage', 'filterBadWords');\n\n\t\tif (!allowBadWordsFilter) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst badWordsList = settings.get('Message_BadWordsFilterList') as string | undefined;\n\t\tconst whiteList = settings.get('Message_BadWordsWhitelist') as string | undefined;\n\n\t\tconst options = {\n\t\t\tlist:\n\t\t\t\tbadWordsList\n\t\t\t\t\t?.split(',')\n\t\t\t\t\t.map((word) => word.trim())\n\t\t\t\t\t.filter(Boolean) || [],\n\t\t\t// library definition does not allow optional definition\n\t\t\texclude: undefined,\n\t\t\tsplitRegex: undefined,\n\t\t\tplaceHolder: undefined,\n\t\t\tregex: undefined,\n\t\t\treplaceRegex: undefined,\n\t\t\temptyList: undefined,\n\t\t};\n\n\t\tconst filter = new Filter(options);\n\n\t\tif (whiteList?.length) {\n\t\t\tfilter.removeWords(...whiteList.split(',').map((word) => word.trim()));\n\t\t}\n\n\t\tcallbacks.add(\n\t\t\t'beforeSaveMessage',\n\t\t\t(message: IMessage) => {\n\t\t\t\tif (!message.msg) {\n\t\t\t\t\treturn message;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tmessage.msg = filter.clean(message.msg);\n\t\t\t\t} finally {\n\t\t\t\t\t// eslint-disable-next-line no-unsafe-finally\n\t\t\t\t\treturn message;\n\t\t\t\t}\n\t\t\t},\n\t\t\tcallbacks.priority.HIGH,\n\t\t\t'filterBadWords',\n\t\t);\n\t});\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/filterBadWords.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/methods/filterBadWords.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 1);\nlet Filter;\nmodule.link(\"bad-words\", {\n  default(v) {\n    Filter = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 4);\nconst Dep = new Tracker.Dependency();\nMeteor.startup(() => {\n  settings.watchMultiple(['Message_AllowBadWordsFilter', 'Message_BadWordsFilterList', 'Message_BadWordsWhitelist'], () => {\n    Dep.changed();\n  });\n  Tracker.autorun(() => {\n    Dep.depend();\n    const allowBadWordsFilter = settings.get('Message_AllowBadWordsFilter');\n    callbacks.remove('beforeSaveMessage', 'filterBadWords');\n\n    if (!allowBadWordsFilter) {\n      return;\n    }\n\n    const badWordsList = settings.get('Message_BadWordsFilterList');\n    const whiteList = settings.get('Message_BadWordsWhitelist');\n    const options = {\n      list: (badWordsList === null || badWordsList === void 0 ? void 0 : badWordsList.split(',').map(word => word.trim()).filter(Boolean)) || [],\n      // library definition does not allow optional definition\n      exclude: undefined,\n      splitRegex: undefined,\n      placeHolder: undefined,\n      regex: undefined,\n      replaceRegex: undefined,\n      emptyList: undefined\n    };\n    const filter = new Filter(options);\n\n    if (whiteList !== null && whiteList !== void 0 && whiteList.length) {\n      filter.removeWords(...whiteList.split(',').map(word => word.trim()));\n    }\n\n    callbacks.add('beforeSaveMessage', message => {\n      if (!message.msg) {\n        return message;\n      }\n\n      try {\n        message.msg = filter.clean(message.msg);\n      } finally {\n        // eslint-disable-next-line no-unsafe-finally\n        return message;\n      }\n    }, callbacks.priority.HIGH, 'filterBadWords');\n  });\n});","map":{"version":3,"sources":["app/lib/server/methods/filterBadWords.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport Filter from 'bad-words';\n\nimport { settings } from '../../../settings/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { IMessage } from '../../../../definition/IMessage';\n\nconst Dep = new Tracker.Dependency();\nMeteor.startup(() => {\n\tsettings.watchMultiple(['Message_AllowBadWordsFilter', 'Message_BadWordsFilterList', 'Message_BadWordsWhitelist'], () => {\n\t\tDep.changed();\n\t});\n\tTracker.autorun(() => {\n\t\tDep.depend();\n\t\tconst allowBadWordsFilter = settings.get('Message_AllowBadWordsFilter');\n\n\t\tcallbacks.remove('beforeSaveMessage', 'filterBadWords');\n\n\t\tif (!allowBadWordsFilter) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst badWordsList = settings.get('Message_BadWordsFilterList') as string | undefined;\n\t\tconst whiteList = settings.get('Message_BadWordsWhitelist') as string | undefined;\n\n\t\tconst options = {\n\t\t\tlist:\n\t\t\t\tbadWordsList\n\t\t\t\t\t?.split(',')\n\t\t\t\t\t.map((word) => word.trim())\n\t\t\t\t\t.filter(Boolean) || [],\n\t\t\t// library definition does not allow optional definition\n\t\t\texclude: undefined,\n\t\t\tsplitRegex: undefined,\n\t\t\tplaceHolder: undefined,\n\t\t\tregex: undefined,\n\t\t\treplaceRegex: undefined,\n\t\t\temptyList: undefined,\n\t\t};\n\n\t\tconst filter = new Filter(options);\n\n\t\tif (whiteList?.length) {\n\t\t\tfilter.removeWords(...whiteList.split(',').map((word) => word.trim()));\n\t\t}\n\n\t\tcallbacks.add(\n\t\t\t'beforeSaveMessage',\n\t\t\t(message: IMessage) => {\n\t\t\t\tif (!message.msg) {\n\t\t\t\t\treturn message;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tmessage.msg = filter.clean(message.msg);\n\t\t\t\t} finally {\n\t\t\t\t\t// eslint-disable-next-line no-unsafe-finally\n\t\t\t\t\treturn message;\n\t\t\t\t}\n\t\t\t},\n\t\t\tcallbacks.priority.HIGH,\n\t\t\t'filterBadWords',\n\t\t);\n\t});\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"59d9c3de991550fad5bb74278f8ac82ac197d1f8"}

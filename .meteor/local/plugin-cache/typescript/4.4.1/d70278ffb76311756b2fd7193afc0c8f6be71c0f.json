{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/ExportOperations.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/ExportOperations.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/ExportOperations.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/ExportOperations.ts","sourceRoot":"","sources":["app/models/server/raw/ExportOperations.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAsB,MAAM,WAAW,CAAC;AAKxD,MAAM,OAAO,mBAAoB,SAAQ,OAAU;IACxC,OAAO,GAAyB,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAE3F,cAAc;QACb,MAAM,KAAK,GAAG;YACb,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE;SAC1C,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,IAAO;QACnB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;YACnC,GAAG,IAAI;YACP,SAAS,EAAE,IAAI,IAAI,EAAE;SACrB,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC,UAAU,CAAC;IAC1B,CAAC;IAED,uBAAuB,CAAC,MAAc,EAAE,UAAU,GAAG,KAAK;QACzD,MAAM,KAAK,GAAG;YACb,MAAM;YACN,UAAU;SACV,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,6BAA6B,CAAC,UAAgB;QAC7C,MAAM,KAAK,GAAG;YACb,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE;YAC1C,SAAS,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE;SAC9B,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,eAAe,CAAC,IAAO;QACtB,MAAM,MAAM,GAAG;YACd,IAAI,EAAE;gBACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;gBACzC,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;aAC3B;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC;CACD","sourcesContent":["import { Cursor, UpdateWriteOpResult } from 'mongodb';\n\nimport { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { IExportOperation } from '../../../../definition/IExportOperation';\n\ntype T = IExportOperation;\n\nexport class ExportOperationsRaw extends BaseRaw<T> {\n\tprotected indexes: IndexSpecification[] = [{ key: { userId: 1 } }, { key: { status: 1 } }];\n\n\tfindOnePending(): Promise<T | null> {\n\t\tconst query = {\n\t\t\tstatus: { $nin: ['completed', 'skipped'] },\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n\n\tasync create(data: T): Promise<string> {\n\t\tconst result = await this.insertOne({\n\t\t\t...data,\n\t\t\tcreatedAt: new Date(),\n\t\t});\n\n\t\treturn result.insertedId;\n\t}\n\n\tfindLastOperationByUser(userId: string, fullExport = false): Promise<T | null> {\n\t\tconst query = {\n\t\t\tuserId,\n\t\t\tfullExport,\n\t\t};\n\n\t\treturn this.findOne(query, { sort: { createdAt: -1 } });\n\t}\n\n\tfindAllPendingBeforeMyRequest(requestDay: Date): Cursor<T> {\n\t\tconst query = {\n\t\t\tstatus: { $nin: ['completed', 'skipped'] },\n\t\t\tcreatedAt: { $lt: requestDay },\n\t\t};\n\n\t\treturn this.find(query);\n\t}\n\n\tupdateOperation(data: T): Promise<UpdateWriteOpResult> {\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\troomList: data.roomList,\n\t\t\t\tstatus: data.status,\n\t\t\t\tfileList: data.fileList,\n\t\t\t\tgeneratedFile: data.generatedFile,\n\t\t\t\tfileId: data.fileId,\n\t\t\t\tuserNameTable: data.userNameTable,\n\t\t\t\tuserData: data.userData,\n\t\t\t\tgeneratedUserFile: data.generatedUserFile,\n\t\t\t\tgeneratedAvatar: data.generatedAvatar,\n\t\t\t\texportPath: data.exportPath,\n\t\t\t\tassetsPath: data.assetsPath,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne({ _id: data._id }, update);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/ExportOperations.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/ExportOperations.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  ExportOperationsRaw: () => ExportOperationsRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass ExportOperationsRaw extends BaseRaw {\n  constructor() {\n    super(...arguments);\n    this.indexes = [{\n      key: {\n        userId: 1\n      }\n    }, {\n      key: {\n        status: 1\n      }\n    }];\n  }\n\n  findOnePending() {\n    const query = {\n      status: {\n        $nin: ['completed', 'skipped']\n      }\n    };\n    return this.findOne(query);\n  }\n\n  create(data) {\n    return Promise.asyncApply(() => {\n      const result = Promise.await(this.insertOne(_objectSpread(_objectSpread({}, data), {}, {\n        createdAt: new Date()\n      })));\n      return result.insertedId;\n    });\n  }\n\n  findLastOperationByUser(userId) {\n    let fullExport = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const query = {\n      userId,\n      fullExport\n    };\n    return this.findOne(query, {\n      sort: {\n        createdAt: -1\n      }\n    });\n  }\n\n  findAllPendingBeforeMyRequest(requestDay) {\n    const query = {\n      status: {\n        $nin: ['completed', 'skipped']\n      },\n      createdAt: {\n        $lt: requestDay\n      }\n    };\n    return this.find(query);\n  }\n\n  updateOperation(data) {\n    const update = {\n      $set: {\n        roomList: data.roomList,\n        status: data.status,\n        fileList: data.fileList,\n        generatedFile: data.generatedFile,\n        fileId: data.fileId,\n        userNameTable: data.userNameTable,\n        userData: data.userData,\n        generatedUserFile: data.generatedUserFile,\n        generatedAvatar: data.generatedAvatar,\n        exportPath: data.exportPath,\n        assetsPath: data.assetsPath\n      }\n    };\n    return this.updateOne({\n      _id: data._id\n    }, update);\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/ExportOperations.ts"],"names":[],"mappings":"AAEA,IAAA,aAAA;;AAAsC,MAAM,CAAA,IAAN,CAAM,sCAAN,EAAkB;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAlB,EAAkB,CAAlB;AAAtC,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,mBAAmC,EAAW,MAAC;AAA/C,CAAT;AAAwD,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAKlD,MAAO,mBAAP,SAAmC,OAAnC,CAA6C;AAAA;AAAA;AAAA,SACxC,OADwC,GACR,CAAC;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,MAAM,EAAE;AAAV;AAAP,KAAD,EAAyB;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,MAAM,EAAE;AAAV;AAAP,KAAzB,CADQ;AAAA;;AAGlD,EAAA,cAAc,GAAA;AACb,UAAM,KAAK,GAAG;AACb,MAAA,MAAM,EAAE;AAAE,QAAA,IAAI,EAAE,CAAC,WAAD,EAAc,SAAd;AAAR;AADK,KAAd;AAIA,WAAO,KAAK,OAAL,CAAa,KAAb,CAAP;AACA;;AAEK,EAAA,MAAM,CAAC,IAAD;AAAA,oCAAQ;AACnB,YAAM,MAAM,iBAAS,KAAK,SAAL,iCACjB,IADiB;AAEpB,QAAA,SAAS,EAAE,IAAI,IAAJ;AAFS,SAAT,CAAZ;AAKA,aAAO,MAAM,CAAC,UAAd;AACA,KAPW;AAAA;;AASZ,EAAA,uBAAuB,CAAC,MAAD,EAAmC;AAAA,QAAlB,UAAkB,uEAAL,KAAK;AACzD,UAAM,KAAK,GAAG;AACb,MAAA,MADa;AAEb,MAAA;AAFa,KAAd;AAKA,WAAO,KAAK,OAAL,CAAa,KAAb,EAAoB;AAAE,MAAA,IAAI,EAAE;AAAE,QAAA,SAAS,EAAE,CAAC;AAAd;AAAR,KAApB,CAAP;AACA;;AAED,EAAA,6BAA6B,CAAC,UAAD,EAAiB;AAC7C,UAAM,KAAK,GAAG;AACb,MAAA,MAAM,EAAE;AAAE,QAAA,IAAI,EAAE,CAAC,WAAD,EAAc,SAAd;AAAR,OADK;AAEb,MAAA,SAAS,EAAE;AAAE,QAAA,GAAG,EAAE;AAAP;AAFE,KAAd;AAKA,WAAO,KAAK,IAAL,CAAU,KAAV,CAAP;AACA;;AAED,EAAA,eAAe,CAAC,IAAD,EAAQ;AACtB,UAAM,MAAM,GAAG;AACd,MAAA,IAAI,EAAE;AACL,QAAA,QAAQ,EAAE,IAAI,CAAC,QADV;AAEL,QAAA,MAAM,EAAE,IAAI,CAAC,MAFR;AAGL,QAAA,QAAQ,EAAE,IAAI,CAAC,QAHV;AAIL,QAAA,aAAa,EAAE,IAAI,CAAC,aAJf;AAKL,QAAA,MAAM,EAAE,IAAI,CAAC,MALR;AAML,QAAA,aAAa,EAAE,IAAI,CAAC,aANf;AAOL,QAAA,QAAQ,EAAE,IAAI,CAAC,QAPV;AAQL,QAAA,iBAAiB,EAAE,IAAI,CAAC,iBARnB;AASL,QAAA,eAAe,EAAE,IAAI,CAAC,eATjB;AAUL,QAAA,UAAU,EAAE,IAAI,CAAC,UAVZ;AAWL,QAAA,UAAU,EAAE,IAAI,CAAC;AAXZ;AADQ,KAAf;AAgBA,WAAO,KAAK,SAAL,CAAe;AAAE,MAAA,GAAG,EAAE,IAAI,CAAC;AAAZ,KAAf,EAAkC,MAAlC,CAAP;AACA;;AAxDiD","sourcesContent":["import { Cursor, UpdateWriteOpResult } from 'mongodb';\n\nimport { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { IExportOperation } from '../../../../definition/IExportOperation';\n\ntype T = IExportOperation;\n\nexport class ExportOperationsRaw extends BaseRaw<T> {\n\tprotected indexes: IndexSpecification[] = [{ key: { userId: 1 } }, { key: { status: 1 } }];\n\n\tfindOnePending(): Promise<T | null> {\n\t\tconst query = {\n\t\t\tstatus: { $nin: ['completed', 'skipped'] },\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n\n\tasync create(data: T): Promise<string> {\n\t\tconst result = await this.insertOne({\n\t\t\t...data,\n\t\t\tcreatedAt: new Date(),\n\t\t});\n\n\t\treturn result.insertedId;\n\t}\n\n\tfindLastOperationByUser(userId: string, fullExport = false): Promise<T | null> {\n\t\tconst query = {\n\t\t\tuserId,\n\t\t\tfullExport,\n\t\t};\n\n\t\treturn this.findOne(query, { sort: { createdAt: -1 } });\n\t}\n\n\tfindAllPendingBeforeMyRequest(requestDay: Date): Cursor<T> {\n\t\tconst query = {\n\t\t\tstatus: { $nin: ['completed', 'skipped'] },\n\t\t\tcreatedAt: { $lt: requestDay },\n\t\t};\n\n\t\treturn this.find(query);\n\t}\n\n\tupdateOperation(data: T): Promise<UpdateWriteOpResult> {\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\troomList: data.roomList,\n\t\t\t\tstatus: data.status,\n\t\t\t\tfileList: data.fileList,\n\t\t\t\tgeneratedFile: data.generatedFile,\n\t\t\t\tfileId: data.fileId,\n\t\t\t\tuserNameTable: data.userNameTable,\n\t\t\t\tuserData: data.userData,\n\t\t\t\tgeneratedUserFile: data.generatedUserFile,\n\t\t\t\tgeneratedAvatar: data.generatedAvatar,\n\t\t\t\texportPath: data.exportPath,\n\t\t\t\tassetsPath: data.assetsPath,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne({ _id: data._id }, update);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"d70278ffb76311756b2fd7193afc0c8f6be71c0f"}

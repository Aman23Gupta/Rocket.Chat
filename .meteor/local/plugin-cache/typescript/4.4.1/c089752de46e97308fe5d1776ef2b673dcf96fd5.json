{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/authorization/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/authorization/service.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/authorization/service.ts","inputSourceMap":{"version":3,"file":"server/services/authorization/service.ts","sourceRoot":"","sources":["server/services/authorization/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Db, Collection } from 'mongodb';\nimport mem from 'mem';\n\nimport { IAuthorization, RoomAccessValidator } from '../../sdk/types/IAuthorization';\nimport { ServiceClass } from '../../sdk/types/ServiceClass';\nimport { AuthorizationUtils } from '../../../app/authorization/lib/AuthorizationUtils';\nimport { IUser } from '../../../definition/IUser';\nimport { canAccessRoom } from './canAccessRoom';\nimport { SubscriptionsRaw } from '../../../app/models/server/raw/Subscriptions';\nimport { SettingsRaw } from '../../../app/models/server/raw/Settings';\nimport { RoomsRaw } from '../../../app/models/server/raw/Rooms';\nimport { TeamMemberRaw } from '../../../app/models/server/raw/TeamMember';\nimport { TeamRaw } from '../../../app/models/server/raw/Team';\nimport { RolesRaw } from '../../../app/models/server/raw/Roles';\nimport { UsersRaw } from '../../../app/models/server/raw/Users';\nimport { IRole } from '../../../definition/IRole';\nimport { ISubscription } from '../../../definition/ISubscription';\n\nimport './canAccessRoomLivechat';\nimport './canAccessRoomTokenpass';\n\nexport let Subscriptions: SubscriptionsRaw;\nexport let Settings: SettingsRaw;\nexport let Rooms: RoomsRaw;\nexport let TeamMembers: TeamMemberRaw;\nexport let Team: TeamRaw;\n\n// Register as class\nexport class Authorization extends ServiceClass implements IAuthorization {\n\tprotected name = 'authorization';\n\n\tprivate Permissions: Collection;\n\n\tprivate Users: UsersRaw;\n\n\tprivate Roles: RolesRaw;\n\n\tprivate getRolesCached = mem(this.getRoles.bind(this), {\n\t\tmaxAge: 1000,\n\t\tcacheKey: JSON.stringify,\n\t});\n\n\tprivate rolesHasPermissionCached = mem(this.rolesHasPermission.bind(this), {\n\t\tcacheKey: JSON.stringify,\n\t\t...(process.env.TEST_MODE === 'true' && { maxAge: 1 }),\n\t});\n\n\tconstructor(db: Db) {\n\t\tsuper();\n\n\t\tthis.Permissions = db.collection('rocketchat_permissions');\n\n\t\tthis.Users = new UsersRaw(db.collection('users'));\n\n\t\tSubscriptions = new SubscriptionsRaw(db.collection('rocketchat_subscription'), {\n\t\t\tUsers: this.Users,\n\t\t});\n\n\t\tthis.Roles = new RolesRaw(db.collection('rocketchat_roles'), {\n\t\t\tUsers: this.Users,\n\t\t\tSubscriptions,\n\t\t});\n\n\t\tSettings = new SettingsRaw(db.collection('rocketchat_settings'));\n\t\tRooms = new RoomsRaw(db.collection('rocketchat_room'));\n\t\tTeamMembers = new TeamMemberRaw(db.collection('rocketchat_team_member'));\n\t\tTeam = new TeamRaw(db.collection('rocketchat_team'));\n\n\t\tconst clearCache = (): void => {\n\t\t\tmem.clear(this.getRolesCached);\n\t\t\tmem.clear(this.rolesHasPermissionCached);\n\t\t};\n\n\t\tthis.onEvent('watch.roles', clearCache);\n\t\tthis.onEvent('permission.changed', clearCache);\n\t}\n\n\tasync hasAllPermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, permissions, scope);\n\t}\n\n\tasync hasPermission(userId: string, permissionId: string, scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, [permissionId], scope);\n\t}\n\n\tasync hasAtLeastOnePermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.atLeastOne(userId, permissions, scope);\n\t}\n\n\tasync canAccessRoom(...args: Parameters<RoomAccessValidator>): Promise<boolean> {\n\t\treturn canAccessRoom(...args);\n\t}\n\n\tasync addRoleRestrictions(role: string, permissions: string[]): Promise<void> {\n\t\tAuthorizationUtils.addRolePermissionWhiteList(role, permissions);\n\t}\n\n\tasync getUsersFromPublicRoles(): Promise<Pick<IUser, '_id' | 'username' | 'roles'>[]> {\n\t\tconst roleIds = await this.getPublicRoles();\n\n\t\treturn this.getUserFromRoles(roleIds);\n\t}\n\n\tprivate getPublicRoles = mem(\n\t\tasync (): Promise<string[]> => {\n\t\t\tconst roles = await this.Roles.find<Pick<IRole, '_id'>>(\n\t\t\t\t{ scope: 'Users', description: { $exists: true, $ne: '' } },\n\t\t\t\t{ projection: { _id: 1 } },\n\t\t\t).toArray();\n\n\t\t\treturn roles.map(({ _id }) => _id);\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate getUserFromRoles = mem(\n\t\tasync (roleIds: string[]) => {\n\t\t\tconst options = {\n\t\t\t\tsort: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t},\n\t\t\t\tprojection: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst users = await this.Users.findUsersInRoles(roleIds, null, options).toArray();\n\n\t\t\treturn users.map((user) => ({\n\t\t\t\t...user,\n\t\t\t\troles: user.roles.filter((roleId: string) => roleIds.includes(roleId)),\n\t\t\t}));\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate async rolesHasPermission(permission: string, roles: string[]): Promise<boolean> {\n\t\tif (AuthorizationUtils.isPermissionRestrictedForRoleList(permission, roles)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = await this.Permissions.findOne({ _id: permission, roles: { $in: roles } }, { projection: { _id: 1 } });\n\t\treturn !!result;\n\t}\n\n\tprivate async getRoles(uid: string, scope?: string): Promise<string[]> {\n\t\tconst { roles: userRoles = [] } = (await this.Users.findOneById(uid, { projection: { roles: 1 } })) || {};\n\t\tconst { roles: subscriptionsRoles = [] } =\n\t\t\t(scope &&\n\t\t\t\t(await Subscriptions.findOne<Pick<ISubscription, 'roles'>>({ 'rid': scope, 'u._id': uid }, { projection: { roles: 1 } }))) ||\n\t\t\t{};\n\t\treturn [...userRoles, ...subscriptionsRoles].sort((a, b) => a.localeCompare(b));\n\t}\n\n\tprivate async atLeastOne(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor (const permission of permissions) {\n\t\t\tif (await this.rolesHasPermissionCached(permission, sortedRoles)) { // eslint-disable-line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async all(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor (const permission of permissions) {\n\t\t\tif (!await this.rolesHasPermissionCached(permission, sortedRoles)) { // eslint-disable-line\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/authorization/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/authorization/service.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  Subscriptions: () => Subscriptions,\n  Settings: () => Settings,\n  Rooms: () => Rooms,\n  TeamMembers: () => TeamMembers,\n  Team: () => Team,\n  Authorization: () => Authorization\n});\nlet mem;\nmodule.link(\"mem\", {\n  default(v) {\n    mem = v;\n  }\n\n}, 0);\nlet ServiceClass;\nmodule.link(\"../../sdk/types/ServiceClass\", {\n  ServiceClass(v) {\n    ServiceClass = v;\n  }\n\n}, 1);\nlet AuthorizationUtils;\nmodule.link(\"../../../app/authorization/lib/AuthorizationUtils\", {\n  AuthorizationUtils(v) {\n    AuthorizationUtils = v;\n  }\n\n}, 2);\nlet canAccessRoom;\nmodule.link(\"./canAccessRoom\", {\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  }\n\n}, 3);\nlet SubscriptionsRaw;\nmodule.link(\"../../../app/models/server/raw/Subscriptions\", {\n  SubscriptionsRaw(v) {\n    SubscriptionsRaw = v;\n  }\n\n}, 4);\nlet SettingsRaw;\nmodule.link(\"../../../app/models/server/raw/Settings\", {\n  SettingsRaw(v) {\n    SettingsRaw = v;\n  }\n\n}, 5);\nlet RoomsRaw;\nmodule.link(\"../../../app/models/server/raw/Rooms\", {\n  RoomsRaw(v) {\n    RoomsRaw = v;\n  }\n\n}, 6);\nlet TeamMemberRaw;\nmodule.link(\"../../../app/models/server/raw/TeamMember\", {\n  TeamMemberRaw(v) {\n    TeamMemberRaw = v;\n  }\n\n}, 7);\nlet TeamRaw;\nmodule.link(\"../../../app/models/server/raw/Team\", {\n  TeamRaw(v) {\n    TeamRaw = v;\n  }\n\n}, 8);\nlet RolesRaw;\nmodule.link(\"../../../app/models/server/raw/Roles\", {\n  RolesRaw(v) {\n    RolesRaw = v;\n  }\n\n}, 9);\nlet UsersRaw;\nmodule.link(\"../../../app/models/server/raw/Users\", {\n  UsersRaw(v) {\n    UsersRaw = v;\n  }\n\n}, 10);\nmodule.link(\"./canAccessRoomLivechat\");\nmodule.link(\"./canAccessRoomTokenpass\");\nlet Subscriptions;\nlet Settings;\nlet Rooms;\nlet TeamMembers;\nlet Team;\n\nclass Authorization extends ServiceClass {\n  constructor(db) {\n    super();\n    this.name = 'authorization';\n    this.Permissions = void 0;\n    this.Users = void 0;\n    this.Roles = void 0;\n    this.getRolesCached = mem(this.getRoles.bind(this), {\n      maxAge: 1000,\n      cacheKey: JSON.stringify\n    });\n    this.rolesHasPermissionCached = mem(this.rolesHasPermission.bind(this), _objectSpread({\n      cacheKey: JSON.stringify\n    }, process.env.TEST_MODE === 'true' && {\n      maxAge: 1\n    }));\n    this.getPublicRoles = mem(() => Promise.asyncApply(() => {\n      const roles = Promise.await(this.Roles.find({\n        scope: 'Users',\n        description: {\n          $exists: true,\n          $ne: ''\n        }\n      }, {\n        projection: {\n          _id: 1\n        }\n      }).toArray());\n      return roles.map(_ref => {\n        let {\n          _id\n        } = _ref;\n        return _id;\n      });\n    }), {\n      maxAge: 10000\n    });\n    this.getUserFromRoles = mem(roleIds => Promise.asyncApply(() => {\n      const options = {\n        sort: {\n          username: 1\n        },\n        projection: {\n          username: 1,\n          roles: 1\n        }\n      };\n      const users = Promise.await(this.Users.findUsersInRoles(roleIds, null, options).toArray());\n      return users.map(user => _objectSpread(_objectSpread({}, user), {}, {\n        roles: user.roles.filter(roleId => roleIds.includes(roleId))\n      }));\n    }), {\n      maxAge: 10000\n    });\n    this.Permissions = db.collection('rocketchat_permissions');\n    this.Users = new UsersRaw(db.collection('users'));\n    module.runSetters(Subscriptions = new SubscriptionsRaw(db.collection('rocketchat_subscription'), {\n      Users: this.Users\n    }), [\"Subscriptions\"]);\n    this.Roles = new RolesRaw(db.collection('rocketchat_roles'), {\n      Users: this.Users,\n      Subscriptions\n    });\n    module.runSetters(Settings = new SettingsRaw(db.collection('rocketchat_settings')), [\"Settings\"]);\n    module.runSetters(Rooms = new RoomsRaw(db.collection('rocketchat_room')), [\"Rooms\"]);\n    module.runSetters(TeamMembers = new TeamMemberRaw(db.collection('rocketchat_team_member')), [\"TeamMembers\"]);\n    module.runSetters(Team = new TeamRaw(db.collection('rocketchat_team')), [\"Team\"]);\n\n    const clearCache = () => {\n      mem.clear(this.getRolesCached);\n      mem.clear(this.rolesHasPermissionCached);\n    };\n\n    this.onEvent('watch.roles', clearCache);\n    this.onEvent('permission.changed', clearCache);\n  }\n\n  hasAllPermission(userId, permissions, scope) {\n    return Promise.asyncApply(() => {\n      if (!userId) {\n        return false;\n      }\n\n      return this.all(userId, permissions, scope);\n    });\n  }\n\n  hasPermission(userId, permissionId, scope) {\n    return Promise.asyncApply(() => {\n      if (!userId) {\n        return false;\n      }\n\n      return this.all(userId, [permissionId], scope);\n    });\n  }\n\n  hasAtLeastOnePermission(userId, permissions, scope) {\n    return Promise.asyncApply(() => {\n      if (!userId) {\n        return false;\n      }\n\n      return this.atLeastOne(userId, permissions, scope);\n    });\n  }\n\n  canAccessRoom() {\n    return Promise.asyncApply(() => {\n      return canAccessRoom(...arguments);\n    });\n  }\n\n  addRoleRestrictions(role, permissions) {\n    return Promise.asyncApply(() => {\n      AuthorizationUtils.addRolePermissionWhiteList(role, permissions);\n    });\n  }\n\n  getUsersFromPublicRoles() {\n    return Promise.asyncApply(() => {\n      const roleIds = Promise.await(this.getPublicRoles());\n      return this.getUserFromRoles(roleIds);\n    });\n  }\n\n  rolesHasPermission(permission, roles) {\n    return Promise.asyncApply(() => {\n      if (AuthorizationUtils.isPermissionRestrictedForRoleList(permission, roles)) {\n        return false;\n      }\n\n      const result = Promise.await(this.Permissions.findOne({\n        _id: permission,\n        roles: {\n          $in: roles\n        }\n      }, {\n        projection: {\n          _id: 1\n        }\n      }));\n      return !!result;\n    });\n  }\n\n  getRoles(uid, scope) {\n    return Promise.asyncApply(() => {\n      const {\n        roles: userRoles = []\n      } = Promise.await(this.Users.findOneById(uid, {\n        projection: {\n          roles: 1\n        }\n      })) || {};\n      const {\n        roles: subscriptionsRoles = []\n      } = scope && Promise.await(Subscriptions.findOne({\n        'rid': scope,\n        'u._id': uid\n      }, {\n        projection: {\n          roles: 1\n        }\n      })) || {};\n      return [...userRoles, ...subscriptionsRoles].sort((a, b) => a.localeCompare(b));\n    });\n  }\n\n  atLeastOne(uid) {\n    return Promise.asyncApply(() => {\n      let permissions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let scope = arguments.length > 2 ? arguments[2] : undefined;\n      const sortedRoles = Promise.await(this.getRolesCached(uid, scope));\n\n      for (const permission of permissions) {\n        if (Promise.await(this.rolesHasPermissionCached(permission, sortedRoles))) {\n          // eslint-disable-line\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n\n  all(uid) {\n    return Promise.asyncApply(() => {\n      let permissions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let scope = arguments.length > 2 ? arguments[2] : undefined;\n      const sortedRoles = Promise.await(this.getRolesCached(uid, scope));\n\n      for (const permission of permissions) {\n        if (!Promise.await(this.rolesHasPermissionCached(permission, sortedRoles))) {\n          // eslint-disable-line\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n}","map":{"version":3,"sources":["server/services/authorization/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Db, Collection } from 'mongodb';\nimport mem from 'mem';\n\nimport { IAuthorization, RoomAccessValidator } from '../../sdk/types/IAuthorization';\nimport { ServiceClass } from '../../sdk/types/ServiceClass';\nimport { AuthorizationUtils } from '../../../app/authorization/lib/AuthorizationUtils';\nimport { IUser } from '../../../definition/IUser';\nimport { canAccessRoom } from './canAccessRoom';\nimport { SubscriptionsRaw } from '../../../app/models/server/raw/Subscriptions';\nimport { SettingsRaw } from '../../../app/models/server/raw/Settings';\nimport { RoomsRaw } from '../../../app/models/server/raw/Rooms';\nimport { TeamMemberRaw } from '../../../app/models/server/raw/TeamMember';\nimport { TeamRaw } from '../../../app/models/server/raw/Team';\nimport { RolesRaw } from '../../../app/models/server/raw/Roles';\nimport { UsersRaw } from '../../../app/models/server/raw/Users';\nimport { IRole } from '../../../definition/IRole';\nimport { ISubscription } from '../../../definition/ISubscription';\n\nimport './canAccessRoomLivechat';\nimport './canAccessRoomTokenpass';\n\nexport let Subscriptions: SubscriptionsRaw;\nexport let Settings: SettingsRaw;\nexport let Rooms: RoomsRaw;\nexport let TeamMembers: TeamMemberRaw;\nexport let Team: TeamRaw;\n\n// Register as class\nexport class Authorization extends ServiceClass implements IAuthorization {\n\tprotected name = 'authorization';\n\n\tprivate Permissions: Collection;\n\n\tprivate Users: UsersRaw;\n\n\tprivate Roles: RolesRaw;\n\n\tprivate getRolesCached = mem(this.getRoles.bind(this), {\n\t\tmaxAge: 1000,\n\t\tcacheKey: JSON.stringify,\n\t});\n\n\tprivate rolesHasPermissionCached = mem(this.rolesHasPermission.bind(this), {\n\t\tcacheKey: JSON.stringify,\n\t\t...(process.env.TEST_MODE === 'true' && { maxAge: 1 }),\n\t});\n\n\tconstructor(db: Db) {\n\t\tsuper();\n\n\t\tthis.Permissions = db.collection('rocketchat_permissions');\n\n\t\tthis.Users = new UsersRaw(db.collection('users'));\n\n\t\tSubscriptions = new SubscriptionsRaw(db.collection('rocketchat_subscription'), {\n\t\t\tUsers: this.Users,\n\t\t});\n\n\t\tthis.Roles = new RolesRaw(db.collection('rocketchat_roles'), {\n\t\t\tUsers: this.Users,\n\t\t\tSubscriptions,\n\t\t});\n\n\t\tSettings = new SettingsRaw(db.collection('rocketchat_settings'));\n\t\tRooms = new RoomsRaw(db.collection('rocketchat_room'));\n\t\tTeamMembers = new TeamMemberRaw(db.collection('rocketchat_team_member'));\n\t\tTeam = new TeamRaw(db.collection('rocketchat_team'));\n\n\t\tconst clearCache = (): void => {\n\t\t\tmem.clear(this.getRolesCached);\n\t\t\tmem.clear(this.rolesHasPermissionCached);\n\t\t};\n\n\t\tthis.onEvent('watch.roles', clearCache);\n\t\tthis.onEvent('permission.changed', clearCache);\n\t}\n\n\tasync hasAllPermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, permissions, scope);\n\t}\n\n\tasync hasPermission(userId: string, permissionId: string, scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, [permissionId], scope);\n\t}\n\n\tasync hasAtLeastOnePermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.atLeastOne(userId, permissions, scope);\n\t}\n\n\tasync canAccessRoom(...args: Parameters<RoomAccessValidator>): Promise<boolean> {\n\t\treturn canAccessRoom(...args);\n\t}\n\n\tasync addRoleRestrictions(role: string, permissions: string[]): Promise<void> {\n\t\tAuthorizationUtils.addRolePermissionWhiteList(role, permissions);\n\t}\n\n\tasync getUsersFromPublicRoles(): Promise<Pick<IUser, '_id' | 'username' | 'roles'>[]> {\n\t\tconst roleIds = await this.getPublicRoles();\n\n\t\treturn this.getUserFromRoles(roleIds);\n\t}\n\n\tprivate getPublicRoles = mem(\n\t\tasync (): Promise<string[]> => {\n\t\t\tconst roles = await this.Roles.find<Pick<IRole, '_id'>>(\n\t\t\t\t{ scope: 'Users', description: { $exists: true, $ne: '' } },\n\t\t\t\t{ projection: { _id: 1 } },\n\t\t\t).toArray();\n\n\t\t\treturn roles.map(({ _id }) => _id);\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate getUserFromRoles = mem(\n\t\tasync (roleIds: string[]) => {\n\t\t\tconst options = {\n\t\t\t\tsort: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t},\n\t\t\t\tprojection: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst users = await this.Users.findUsersInRoles(roleIds, null, options).toArray();\n\n\t\t\treturn users.map((user) => ({\n\t\t\t\t...user,\n\t\t\t\troles: user.roles.filter((roleId: string) => roleIds.includes(roleId)),\n\t\t\t}));\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate async rolesHasPermission(permission: string, roles: string[]): Promise<boolean> {\n\t\tif (AuthorizationUtils.isPermissionRestrictedForRoleList(permission, roles)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = await this.Permissions.findOne({ _id: permission, roles: { $in: roles } }, { projection: { _id: 1 } });\n\t\treturn !!result;\n\t}\n\n\tprivate async getRoles(uid: string, scope?: string): Promise<string[]> {\n\t\tconst { roles: userRoles = [] } = (await this.Users.findOneById(uid, { projection: { roles: 1 } })) || {};\n\t\tconst { roles: subscriptionsRoles = [] } =\n\t\t\t(scope &&\n\t\t\t\t(await Subscriptions.findOne<Pick<ISubscription, 'roles'>>({ 'rid': scope, 'u._id': uid }, { projection: { roles: 1 } }))) ||\n\t\t\t{};\n\t\treturn [...userRoles, ...subscriptionsRoles].sort((a, b) => a.localeCompare(b));\n\t}\n\n\tprivate async atLeastOne(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor (const permission of permissions) {\n\t\t\tif (await this.rolesHasPermissionCached(permission, sortedRoles)) { // eslint-disable-line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async all(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor (const permission of permissions) {\n\t\t\tif (!await this.rolesHasPermissionCached(permission, sortedRoles)) { // eslint-disable-line\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"c089752de46e97308fe5d1776ef2b673dcf96fd5"}

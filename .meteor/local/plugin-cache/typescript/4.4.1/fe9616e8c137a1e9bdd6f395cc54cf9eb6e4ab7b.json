{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Team.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/Team.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Team.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/Team.ts","sourceRoot":"","sources":["app/models/server/raw/Team.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tCollection,\n\tWithoutProjection,\n\tFindOneOptions,\n\tCursor,\n\tUpdateWriteOpResult,\n\tDeleteWriteOpResultObject,\n\tFilterQuery,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ITeam, TEAM_TYPE } from '../../../../definition/ITeam';\n\nexport class TeamRaw extends BaseRaw<ITeam> {\n\tconstructor(public readonly col: Collection<ITeam>, trash?: Collection<ITeam>) {\n\t\tsuper(col, trash);\n\n\t\tthis.col.createIndex({ name: 1 }, { unique: true });\n\n\t\t// this.col.createIndexes([\n\t\t// \t{ key: { status: 1, expireAt: 1 } },\n\t\t// ]);\n\t}\n\n\tfindByNames(names: Array<string>): Cursor<ITeam>;\n\n\tfindByNames(names: Array<string>, options: WithoutProjection<FindOneOptions<ITeam>>): Cursor<ITeam>;\n\n\tfindByNames<P>(names: Array<string>, options: FindOneOptions<P extends ITeam ? ITeam : P>): Cursor<P>;\n\n\tfindByNames<P>(\n\t\tnames: Array<string>,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Cursor<P> | Cursor<ITeam> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({ name: { $in: names } });\n\t\t}\n\t\treturn this.col.find({ name: { $in: names } }, options);\n\t}\n\n\tfindByIds(ids: Array<string>, query?: FilterQuery<ITeam>): Cursor<ITeam>;\n\n\tfindByIds(ids: Array<string>, options: WithoutProjection<FindOneOptions<ITeam>>, query?: FilterQuery<ITeam>): Cursor<ITeam>;\n\n\tfindByIds<P>(ids: Array<string>, options: FindOneOptions<P extends ITeam ? ITeam : P>, query?: FilterQuery<ITeam>): Cursor<P>;\n\n\tfindByIds<P>(\n\t\tids: Array<string>,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t\tquery?: FilterQuery<ITeam>,\n\t): Cursor<P> | Cursor<ITeam> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({ _id: { $in: ids }, ...query });\n\t\t}\n\n\t\treturn this.col.find({ _id: { $in: ids }, ...query }, options);\n\t}\n\n\tfindByIdsAndType(ids: Array<string>, type: TEAM_TYPE): Cursor<ITeam>;\n\n\tfindByIdsAndType(ids: Array<string>, type: TEAM_TYPE, options: WithoutProjection<FindOneOptions<ITeam>>): Cursor<ITeam>;\n\n\tfindByIdsAndType<P>(ids: Array<string>, type: TEAM_TYPE, options: FindOneOptions<P extends ITeam ? ITeam : P>): Cursor<P>;\n\n\tfindByIdsAndType<P>(\n\t\tids: Array<string>,\n\t\ttype: TEAM_TYPE,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Cursor<P> | Cursor<ITeam> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({ _id: { $in: ids }, type });\n\t\t}\n\t\treturn this.col.find({ _id: { $in: ids }, type }, options);\n\t}\n\n\tfindByType(type: number): Cursor<ITeam>;\n\n\tfindByType(type: number, options: WithoutProjection<FindOneOptions<ITeam>>): Cursor<ITeam>;\n\n\tfindByType<P>(type: number, options: FindOneOptions<P extends ITeam ? ITeam : P>): Cursor<P>;\n\n\tfindByType<P>(\n\t\ttype: number,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Cursor<ITeam> | Cursor<P> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({ type }, options);\n\t\t}\n\t\treturn this.col.find({ type }, options);\n\t}\n\n\tfindByNameAndTeamIds(name: string | RegExp, teamIds: Array<string>): Cursor<ITeam>;\n\n\tfindByNameAndTeamIds(name: string | RegExp, teamIds: Array<string>, options: WithoutProjection<FindOneOptions<ITeam>>): Cursor<ITeam>;\n\n\tfindByNameAndTeamIds<P>(name: string | RegExp, teamIds: Array<string>, options: FindOneOptions<P extends ITeam ? ITeam : P>): Cursor<P>;\n\n\tfindByNameAndTeamIds<P>(\n\t\tname: string | RegExp,\n\t\tteamIds: Array<string>,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Cursor<P> | Cursor<ITeam> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({\n\t\t\t\tname,\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: {\n\t\t\t\t\t\t\t$in: teamIds,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t\treturn this.col.find(\n\t\t\t{\n\t\t\t\tname,\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: {\n\t\t\t\t\t\t\t$in: teamIds,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\t}\n\n\tfindOneByName(name: string | RegExp): Promise<ITeam | null>;\n\n\tfindOneByName(name: string | RegExp, options: WithoutProjection<FindOneOptions<ITeam>>): Promise<ITeam | null>;\n\n\tfindOneByName<P>(name: string | RegExp, options: FindOneOptions<P>): Promise<P | null>;\n\n\tfindOneByName<P>(\n\t\tname: string | RegExp,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Promise<P | null> | Promise<ITeam | null> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.findOne({ name });\n\t\t}\n\t\treturn this.col.findOne({ name }, options);\n\t}\n\n\tfindOneByMainRoomId(roomId: string): Promise<ITeam | null>;\n\n\tfindOneByMainRoomId(roomId: string, options: WithoutProjection<FindOneOptions<ITeam>>): Promise<ITeam | null>;\n\n\tfindOneByMainRoomId<P>(roomId: string, options: FindOneOptions<P>): Promise<P | null>;\n\n\tfindOneByMainRoomId<P>(\n\t\troomId: string,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Promise<P | null> | Promise<ITeam | null> {\n\t\treturn options ? this.col.findOne({ roomId }, options) : this.col.findOne({ roomId });\n\t}\n\n\tupdateMainRoomForTeam(id: string, roomId: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\t_id: id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\troomId,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tdeleteOneById(id: string): Promise<DeleteWriteOpResultObject> {\n\t\treturn this.col.deleteOne({\n\t\t\t_id: id,\n\t\t});\n\t}\n\n\tdeleteOneByName(name: string): Promise<DeleteWriteOpResultObject> {\n\t\treturn this.col.deleteOne({ name });\n\t}\n\n\tupdateNameAndType(teamId: string, nameAndType: { name?: string; type?: TEAM_TYPE }): Promise<UpdateWriteOpResult> {\n\t\tconst query = {\n\t\t\t_id: teamId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {},\n\t\t};\n\n\t\tif (nameAndType.name) {\n\t\t\tObject.assign(update.$set, { name: nameAndType.name });\n\t\t}\n\n\t\tif (typeof nameAndType.type !== 'undefined') {\n\t\t\tObject.assign(update.$set, { type: nameAndType.type });\n\t\t}\n\n\t\treturn this.updateOne(query, update);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Team.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/Team.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  TeamRaw: () => TeamRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass TeamRaw extends BaseRaw {\n  constructor(col, trash) {\n    super(col, trash);\n    this.col = void 0;\n    this.col = col;\n    this.col.createIndex({\n      name: 1\n    }, {\n      unique: true\n    }); // this.col.createIndexes([\n    // \t{ key: { status: 1, expireAt: 1 } },\n    // ]);\n  }\n\n  findByNames(names, options) {\n    if (options === undefined) {\n      return this.col.find({\n        name: {\n          $in: names\n        }\n      });\n    }\n\n    return this.col.find({\n      name: {\n        $in: names\n      }\n    }, options);\n  }\n\n  findByIds(ids, options, query) {\n    if (options === undefined) {\n      return this.col.find(_objectSpread({\n        _id: {\n          $in: ids\n        }\n      }, query));\n    }\n\n    return this.col.find(_objectSpread({\n      _id: {\n        $in: ids\n      }\n    }, query), options);\n  }\n\n  findByIdsAndType(ids, type, options) {\n    if (options === undefined) {\n      return this.col.find({\n        _id: {\n          $in: ids\n        },\n        type\n      });\n    }\n\n    return this.col.find({\n      _id: {\n        $in: ids\n      },\n      type\n    }, options);\n  }\n\n  findByType(type, options) {\n    if (options === undefined) {\n      return this.col.find({\n        type\n      }, options);\n    }\n\n    return this.col.find({\n      type\n    }, options);\n  }\n\n  findByNameAndTeamIds(name, teamIds, options) {\n    if (options === undefined) {\n      return this.col.find({\n        name,\n        $or: [{\n          type: 0\n        }, {\n          _id: {\n            $in: teamIds\n          }\n        }]\n      });\n    }\n\n    return this.col.find({\n      name,\n      $or: [{\n        type: 0\n      }, {\n        _id: {\n          $in: teamIds\n        }\n      }]\n    }, options);\n  }\n\n  findOneByName(name, options) {\n    if (options === undefined) {\n      return this.col.findOne({\n        name\n      });\n    }\n\n    return this.col.findOne({\n      name\n    }, options);\n  }\n\n  findOneByMainRoomId(roomId, options) {\n    return options ? this.col.findOne({\n      roomId\n    }, options) : this.col.findOne({\n      roomId\n    });\n  }\n\n  updateMainRoomForTeam(id, roomId) {\n    return this.updateOne({\n      _id: id\n    }, {\n      $set: {\n        roomId\n      }\n    });\n  }\n\n  deleteOneById(id) {\n    return this.col.deleteOne({\n      _id: id\n    });\n  }\n\n  deleteOneByName(name) {\n    return this.col.deleteOne({\n      name\n    });\n  }\n\n  updateNameAndType(teamId, nameAndType) {\n    const query = {\n      _id: teamId\n    };\n    const update = {\n      $set: {}\n    };\n\n    if (nameAndType.name) {\n      Object.assign(update.$set, {\n        name: nameAndType.name\n      });\n    }\n\n    if (typeof nameAndType.type !== 'undefined') {\n      Object.assign(update.$set, {\n        type: nameAndType.type\n      });\n    }\n\n    return this.updateOne(query, update);\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/Team.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tCollection,\n\tWithoutProjection,\n\tFindOneOptions,\n\tCursor,\n\tUpdateWriteOpResult,\n\tDeleteWriteOpResultObject,\n\tFilterQuery,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ITeam, TEAM_TYPE } from '../../../../definition/ITeam';\n\nexport class TeamRaw extends BaseRaw<ITeam> {\n\tconstructor(public readonly col: Collection<ITeam>, trash?: Collection<ITeam>) {\n\t\tsuper(col, trash);\n\n\t\tthis.col.createIndex({ name: 1 }, { unique: true });\n\n\t\t// this.col.createIndexes([\n\t\t// \t{ key: { status: 1, expireAt: 1 } },\n\t\t// ]);\n\t}\n\n\tfindByNames(names: Array<string>): Cursor<ITeam>;\n\n\tfindByNames(names: Array<string>, options: WithoutProjection<FindOneOptions<ITeam>>): Cursor<ITeam>;\n\n\tfindByNames<P>(names: Array<string>, options: FindOneOptions<P extends ITeam ? ITeam : P>): Cursor<P>;\n\n\tfindByNames<P>(\n\t\tnames: Array<string>,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Cursor<P> | Cursor<ITeam> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({ name: { $in: names } });\n\t\t}\n\t\treturn this.col.find({ name: { $in: names } }, options);\n\t}\n\n\tfindByIds(ids: Array<string>, query?: FilterQuery<ITeam>): Cursor<ITeam>;\n\n\tfindByIds(ids: Array<string>, options: WithoutProjection<FindOneOptions<ITeam>>, query?: FilterQuery<ITeam>): Cursor<ITeam>;\n\n\tfindByIds<P>(ids: Array<string>, options: FindOneOptions<P extends ITeam ? ITeam : P>, query?: FilterQuery<ITeam>): Cursor<P>;\n\n\tfindByIds<P>(\n\t\tids: Array<string>,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t\tquery?: FilterQuery<ITeam>,\n\t): Cursor<P> | Cursor<ITeam> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({ _id: { $in: ids }, ...query });\n\t\t}\n\n\t\treturn this.col.find({ _id: { $in: ids }, ...query }, options);\n\t}\n\n\tfindByIdsAndType(ids: Array<string>, type: TEAM_TYPE): Cursor<ITeam>;\n\n\tfindByIdsAndType(ids: Array<string>, type: TEAM_TYPE, options: WithoutProjection<FindOneOptions<ITeam>>): Cursor<ITeam>;\n\n\tfindByIdsAndType<P>(ids: Array<string>, type: TEAM_TYPE, options: FindOneOptions<P extends ITeam ? ITeam : P>): Cursor<P>;\n\n\tfindByIdsAndType<P>(\n\t\tids: Array<string>,\n\t\ttype: TEAM_TYPE,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Cursor<P> | Cursor<ITeam> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({ _id: { $in: ids }, type });\n\t\t}\n\t\treturn this.col.find({ _id: { $in: ids }, type }, options);\n\t}\n\n\tfindByType(type: number): Cursor<ITeam>;\n\n\tfindByType(type: number, options: WithoutProjection<FindOneOptions<ITeam>>): Cursor<ITeam>;\n\n\tfindByType<P>(type: number, options: FindOneOptions<P extends ITeam ? ITeam : P>): Cursor<P>;\n\n\tfindByType<P>(\n\t\ttype: number,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Cursor<ITeam> | Cursor<P> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({ type }, options);\n\t\t}\n\t\treturn this.col.find({ type }, options);\n\t}\n\n\tfindByNameAndTeamIds(name: string | RegExp, teamIds: Array<string>): Cursor<ITeam>;\n\n\tfindByNameAndTeamIds(name: string | RegExp, teamIds: Array<string>, options: WithoutProjection<FindOneOptions<ITeam>>): Cursor<ITeam>;\n\n\tfindByNameAndTeamIds<P>(name: string | RegExp, teamIds: Array<string>, options: FindOneOptions<P extends ITeam ? ITeam : P>): Cursor<P>;\n\n\tfindByNameAndTeamIds<P>(\n\t\tname: string | RegExp,\n\t\tteamIds: Array<string>,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Cursor<P> | Cursor<ITeam> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.find({\n\t\t\t\tname,\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: {\n\t\t\t\t\t\t\t$in: teamIds,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t\treturn this.col.find(\n\t\t\t{\n\t\t\t\tname,\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: {\n\t\t\t\t\t\t\t$in: teamIds,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\t}\n\n\tfindOneByName(name: string | RegExp): Promise<ITeam | null>;\n\n\tfindOneByName(name: string | RegExp, options: WithoutProjection<FindOneOptions<ITeam>>): Promise<ITeam | null>;\n\n\tfindOneByName<P>(name: string | RegExp, options: FindOneOptions<P>): Promise<P | null>;\n\n\tfindOneByName<P>(\n\t\tname: string | RegExp,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Promise<P | null> | Promise<ITeam | null> {\n\t\tif (options === undefined) {\n\t\t\treturn this.col.findOne({ name });\n\t\t}\n\t\treturn this.col.findOne({ name }, options);\n\t}\n\n\tfindOneByMainRoomId(roomId: string): Promise<ITeam | null>;\n\n\tfindOneByMainRoomId(roomId: string, options: WithoutProjection<FindOneOptions<ITeam>>): Promise<ITeam | null>;\n\n\tfindOneByMainRoomId<P>(roomId: string, options: FindOneOptions<P>): Promise<P | null>;\n\n\tfindOneByMainRoomId<P>(\n\t\troomId: string,\n\t\toptions?: undefined | WithoutProjection<FindOneOptions<ITeam>> | FindOneOptions<P extends ITeam ? ITeam : P>,\n\t): Promise<P | null> | Promise<ITeam | null> {\n\t\treturn options ? this.col.findOne({ roomId }, options) : this.col.findOne({ roomId });\n\t}\n\n\tupdateMainRoomForTeam(id: string, roomId: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\t_id: id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\troomId,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tdeleteOneById(id: string): Promise<DeleteWriteOpResultObject> {\n\t\treturn this.col.deleteOne({\n\t\t\t_id: id,\n\t\t});\n\t}\n\n\tdeleteOneByName(name: string): Promise<DeleteWriteOpResultObject> {\n\t\treturn this.col.deleteOne({ name });\n\t}\n\n\tupdateNameAndType(teamId: string, nameAndType: { name?: string; type?: TEAM_TYPE }): Promise<UpdateWriteOpResult> {\n\t\tconst query = {\n\t\t\t_id: teamId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {},\n\t\t};\n\n\t\tif (nameAndType.name) {\n\t\t\tObject.assign(update.$set, { name: nameAndType.name });\n\t\t}\n\n\t\tif (typeof nameAndType.type !== 'undefined') {\n\t\t\tObject.assign(update.$set, { type: nameAndType.type });\n\t\t}\n\n\t\treturn this.updateOne(query, update);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"fe9616e8c137a1e9bdd6f395cc54cf9eb6e4ab7b"}

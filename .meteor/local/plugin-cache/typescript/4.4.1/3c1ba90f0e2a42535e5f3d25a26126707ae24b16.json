{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/afterVerifyEmail.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/afterVerifyEmail.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/afterVerifyEmail.ts","inputSourceMap":{"version":3,"file":"server/methods/afterVerifyEmail.ts","sourceRoot":"","sources":["server/methods/afterVerifyEmail.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AAGpD,MAAM,eAAe,GAA0B,IAAI,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAElF,MAAM,CAAC,OAAO,CAAC;IACd,KAAK,CAAC,gBAAgB;QACrB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE/B,IAAI,CAAC,MAAM,EAAE;YACZ,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,kBAAkB;aAC1B,CAAC,CAAC;SACH;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAU,CAAC;QAChD,IAAI,IAAI,EAAE,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC/C,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAElE,MAAM,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAEpF,IAAI,aAAa,EAAE;gBAClB,MAAM,OAAO,CAAC,GAAG,CAChB,oBAAoB,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;oBACvC,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC7C,IAAI,UAAU,EAAE;wBACf,MAAM,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;qBAC7C;oBACD,MAAM,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/C,CAAC,CAAC,CACF,CAAC;aACF;SACD;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Users } from '../../app/models/server';\nimport { Roles } from '../../app/models/server/raw';\nimport { IUser } from '../../definition/IUser';\n\nconst rolesToChangeTo: Map<string, [string]> = new Map([['anonymous', ['user']]]);\n\nMeteor.methods({\n\tasync afterVerifyEmail() {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'afterVerifyEmail',\n\t\t\t});\n\t\t}\n\n\t\tconst user = Users.findOneById(userId) as IUser;\n\t\tif (user?.emails && Array.isArray(user.emails)) {\n\t\t\tconst verifiedEmail = user.emails.find((email) => email.verified);\n\n\t\t\tconst rolesThatNeedChanges = user.roles.filter((role) => rolesToChangeTo.has(role));\n\n\t\t\tif (verifiedEmail) {\n\t\t\t\tawait Promise.all(\n\t\t\t\t\trolesThatNeedChanges.map(async (role) => {\n\t\t\t\t\t\tconst rolesToAdd = rolesToChangeTo.get(role);\n\t\t\t\t\t\tif (rolesToAdd) {\n\t\t\t\t\t\t\tawait Roles.addUserRoles(userId, rolesToAdd);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait Roles.removeUserRoles(user._id, [role]);\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/afterVerifyEmail.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/afterVerifyEmail.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../app/models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.link(\"../../app/models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nconst rolesToChangeTo = new Map([['anonymous', ['user']]]);\nMeteor.methods({\n  afterVerifyEmail() {\n    return Promise.asyncApply(() => {\n      const userId = Meteor.userId();\n\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'afterVerifyEmail'\n        });\n      }\n\n      const user = Users.findOneById(userId);\n\n      if (user !== null && user !== void 0 && user.emails && Array.isArray(user.emails)) {\n        const verifiedEmail = user.emails.find(email => email.verified);\n        const rolesThatNeedChanges = user.roles.filter(role => rolesToChangeTo.has(role));\n\n        if (verifiedEmail) {\n          Promise.await(Promise.all(rolesThatNeedChanges.map(role => Promise.asyncApply(() => {\n            const rolesToAdd = rolesToChangeTo.get(role);\n\n            if (rolesToAdd) {\n              Promise.await(Roles.addUserRoles(userId, rolesToAdd));\n            }\n\n            Promise.await(Roles.removeUserRoles(user._id, [role]));\n          }))));\n        }\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["server/methods/afterVerifyEmail.ts"],"names":[],"mappings":"AAAA,IAAA,MAAA;AAAS,MAAQ,CAAA,IAAR,CAAc,eAAd,EAA8B;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAA9B,EAA8B,CAA9B;AAA8B,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAMvC,MAAM,eAAe,GAA0B,IAAI,GAAJ,CAAQ,CAAC,CAAC,WAAD,EAAc,CAAC,MAAD,CAAd,CAAD,CAAR,CAA/C;AAEA,MAAM,CAAC,OAAP,CAAe;AACR,EAAA,gBAAN;AAAA,oCAAsB;AACrB,YAAM,MAAM,GAAG,MAAM,CAAC,MAAP,EAAf;;AAEA,UAAI,CAAC,MAAL,EAAa;AACZ,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAC5D,UAAA,MAAM,EAAE;AADoD,SAAvD,CAAN;AAGA;;AAED,YAAM,IAAI,GAAG,KAAK,CAAC,WAAN,CAAkB,MAAlB,CAAb;;AACA,UAAI,IAAI,SAAJ,IAAA,IAAI,WAAJ,IAAA,IAAI,CAAE,MAAN,IAAgB,KAAK,CAAC,OAAN,CAAc,IAAI,CAAC,MAAnB,CAApB,EAAgD;AAC/C,cAAM,aAAa,GAAG,IAAI,CAAC,MAAL,CAAY,IAAZ,CAAkB,KAAD,IAAW,KAAK,CAAC,QAAlC,CAAtB;AAEA,cAAM,oBAAoB,GAAG,IAAI,CAAC,KAAL,CAAW,MAAX,CAAmB,IAAD,IAAU,eAAe,CAAC,GAAhB,CAAoB,IAApB,CAA5B,CAA7B;;AAEA,YAAI,aAAJ,EAAmB;AAClB,wBAAM,OAAO,CAAC,GAAR,CACL,oBAAoB,CAAC,GAArB,CAAgC,IAAP,6BAAe;AACvC,kBAAM,UAAU,GAAG,eAAe,CAAC,GAAhB,CAAoB,IAApB,CAAnB;;AACA,gBAAI,UAAJ,EAAgB;AACf,4BAAM,KAAK,CAAC,YAAN,CAAmB,MAAnB,EAA2B,UAA3B,CAAN;AACA;;AACD,0BAAM,KAAK,CAAC,eAAN,CAAsB,IAAI,CAAC,GAA3B,EAAgC,CAAC,IAAD,CAAhC,CAAN;AACA,WANwB,CAAzB,CADK,CAAN;AASA;AACD;AACD,KA3BD;AAAA;;AADc,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Users } from '../../app/models/server';\nimport { Roles } from '../../app/models/server/raw';\nimport { IUser } from '../../definition/IUser';\n\nconst rolesToChangeTo: Map<string, [string]> = new Map([['anonymous', ['user']]]);\n\nMeteor.methods({\n\tasync afterVerifyEmail() {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'afterVerifyEmail',\n\t\t\t});\n\t\t}\n\n\t\tconst user = Users.findOneById(userId) as IUser;\n\t\tif (user?.emails && Array.isArray(user.emails)) {\n\t\t\tconst verifiedEmail = user.emails.find((email) => email.verified);\n\n\t\t\tconst rolesThatNeedChanges = user.roles.filter((role) => rolesToChangeTo.has(role));\n\n\t\t\tif (verifiedEmail) {\n\t\t\t\tawait Promise.all(\n\t\t\t\t\trolesThatNeedChanges.map(async (role) => {\n\t\t\t\t\t\tconst rolesToAdd = rolesToChangeTo.get(role);\n\t\t\t\t\t\tif (rolesToAdd) {\n\t\t\t\t\t\t\tawait Roles.addUserRoles(userId, rolesToAdd);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait Roles.removeUserRoles(user._id, [role]);\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"3c1ba90f0e2a42535e5f3d25a26126707ae24b16"}

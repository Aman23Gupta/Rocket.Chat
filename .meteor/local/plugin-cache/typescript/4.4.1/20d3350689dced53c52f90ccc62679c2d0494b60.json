{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Banners.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/Banners.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Banners.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/Banners.ts","sourceRoot":"","sources":["app/models/server/raw/Banners.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,cAAc,EAAW,MAAM,gCAAgC,CAAC;AACzE,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAGpC,MAAM,OAAO,UAAW,SAAQ,OAAU;IACb;IAA5B,YAA4B,GAAkB,EAAE,KAAqB;QACpE,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QADS,QAAG,GAAH,GAAG,CAAe;QAG7C,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAE5E,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,MAAM,CAAC,GAAY;QAClB,MAAM,eAAe,GAAG,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC5G,IAAI,eAAe,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SACpC;QAED,IAAI,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,QAAQ,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;SAC/D;QAED,IAAI,GAAG,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SACxD;QAED,OAAO,IAAI,CAAC,SAAS,CAAC;YACrB,MAAM,EAAE,IAAI;YACZ,GAAG,GAAG;SACN,CAAC,CAAC;IACJ,CAAC;IAED,oBAAoB,CACnB,KAAe,EACf,QAAwB,EACxB,QAAiB,EACjB,OAA8C;QAE9C,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QAEzB,MAAM,KAAK,GAAG;YACb,GAAG,CAAC,QAAQ,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC;YAClC,QAAQ;YACR,OAAO,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;YACxB,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;YACzB,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;YACtB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC;SAC/D,CAAC;QAEF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,OAAO,CAAC,QAAgB;QACvB,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;IAC5H,CAAC;CACD","sourcesContent":["import { Collection, Cursor, FindOneOptions, UpdateWriteOpResult, WithoutProjection, InsertOneWriteOpResult } from 'mongodb';\n\nimport { BannerPlatform, IBanner } from '../../../../definition/IBanner';\nimport { BaseRaw } from './BaseRaw';\n\ntype T = IBanner;\nexport class BannersRaw extends BaseRaw<T> {\n\tconstructor(public readonly col: Collection<T>, trash?: Collection<T>) {\n\t\tsuper(col, trash);\n\n\t\tthis.col.createIndexes([{ key: { platform: 1, startAt: 1, expireAt: 1 } }]);\n\n\t\tthis.col.createIndexes([{ key: { platform: 1, startAt: 1, expireAt: 1, active: 1 } }]);\n\t}\n\n\tcreate(doc: IBanner): Promise<InsertOneWriteOpResult<IBanner>> {\n\t\tconst invalidPlatform = doc.platform?.some((platform) => !Object.values(BannerPlatform).includes(platform));\n\t\tif (invalidPlatform) {\n\t\t\tthrow new Error('Invalid platform');\n\t\t}\n\n\t\tif (doc.startAt > doc.expireAt) {\n\t\t\tthrow new Error('Start date cannot be later than expire date');\n\t\t}\n\n\t\tif (doc.expireAt < new Date()) {\n\t\t\tthrow new Error('Cannot create banner already expired');\n\t\t}\n\n\t\treturn this.insertOne({\n\t\t\tactive: true,\n\t\t\t...doc,\n\t\t});\n\t}\n\n\tfindActiveByRoleOrId(\n\t\troles: string[],\n\t\tplatform: BannerPlatform,\n\t\tbannerId?: string,\n\t\toptions?: WithoutProjection<FindOneOptions<T>>,\n\t): Cursor<T> {\n\t\tconst today = new Date();\n\n\t\tconst query = {\n\t\t\t...(bannerId && { _id: bannerId }),\n\t\t\tplatform,\n\t\t\tstartAt: { $lte: today },\n\t\t\texpireAt: { $gte: today },\n\t\t\tactive: { $ne: false },\n\t\t\t$or: [{ roles: { $in: roles } }, { roles: { $exists: false } }],\n\t\t};\n\n\t\treturn this.col.find(query, options);\n\t}\n\n\tdisable(bannerId: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.col.updateOne({ _id: bannerId, active: { $ne: false } }, { $set: { active: false, inactivedAt: new Date() } });\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Banners.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/Banners.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  BannersRaw: () => BannersRaw\n});\nlet BannerPlatform;\nmodule.link(\"../../../../definition/IBanner\", {\n  BannerPlatform(v) {\n    BannerPlatform = v;\n  }\n\n}, 0);\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 1);\n\nclass BannersRaw extends BaseRaw {\n  constructor(col, trash) {\n    super(col, trash);\n    this.col = void 0;\n    this.col = col;\n    this.col.createIndexes([{\n      key: {\n        platform: 1,\n        startAt: 1,\n        expireAt: 1\n      }\n    }]);\n    this.col.createIndexes([{\n      key: {\n        platform: 1,\n        startAt: 1,\n        expireAt: 1,\n        active: 1\n      }\n    }]);\n  }\n\n  create(doc) {\n    var _doc$platform;\n\n    const invalidPlatform = (_doc$platform = doc.platform) === null || _doc$platform === void 0 ? void 0 : _doc$platform.some(platform => !Object.values(BannerPlatform).includes(platform));\n\n    if (invalidPlatform) {\n      throw new Error('Invalid platform');\n    }\n\n    if (doc.startAt > doc.expireAt) {\n      throw new Error('Start date cannot be later than expire date');\n    }\n\n    if (doc.expireAt < new Date()) {\n      throw new Error('Cannot create banner already expired');\n    }\n\n    return this.insertOne(_objectSpread({\n      active: true\n    }, doc));\n  }\n\n  findActiveByRoleOrId(roles, platform, bannerId, options) {\n    const today = new Date();\n\n    const query = _objectSpread(_objectSpread({}, bannerId && {\n      _id: bannerId\n    }), {}, {\n      platform,\n      startAt: {\n        $lte: today\n      },\n      expireAt: {\n        $gte: today\n      },\n      active: {\n        $ne: false\n      },\n      $or: [{\n        roles: {\n          $in: roles\n        }\n      }, {\n        roles: {\n          $exists: false\n        }\n      }]\n    });\n\n    return this.col.find(query, options);\n  }\n\n  disable(bannerId) {\n    return this.col.updateOne({\n      _id: bannerId,\n      active: {\n        $ne: false\n      }\n    }, {\n      $set: {\n        active: false,\n        inactivedAt: new Date()\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/Banners.ts"],"names":[],"mappings":"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","sourcesContent":["import { Collection, Cursor, FindOneOptions, UpdateWriteOpResult, WithoutProjection, InsertOneWriteOpResult } from 'mongodb';\n\nimport { BannerPlatform, IBanner } from '../../../../definition/IBanner';\nimport { BaseRaw } from './BaseRaw';\n\ntype T = IBanner;\nexport class BannersRaw extends BaseRaw<T> {\n\tconstructor(public readonly col: Collection<T>, trash?: Collection<T>) {\n\t\tsuper(col, trash);\n\n\t\tthis.col.createIndexes([{ key: { platform: 1, startAt: 1, expireAt: 1 } }]);\n\n\t\tthis.col.createIndexes([{ key: { platform: 1, startAt: 1, expireAt: 1, active: 1 } }]);\n\t}\n\n\tcreate(doc: IBanner): Promise<InsertOneWriteOpResult<IBanner>> {\n\t\tconst invalidPlatform = doc.platform?.some((platform) => !Object.values(BannerPlatform).includes(platform));\n\t\tif (invalidPlatform) {\n\t\t\tthrow new Error('Invalid platform');\n\t\t}\n\n\t\tif (doc.startAt > doc.expireAt) {\n\t\t\tthrow new Error('Start date cannot be later than expire date');\n\t\t}\n\n\t\tif (doc.expireAt < new Date()) {\n\t\t\tthrow new Error('Cannot create banner already expired');\n\t\t}\n\n\t\treturn this.insertOne({\n\t\t\tactive: true,\n\t\t\t...doc,\n\t\t});\n\t}\n\n\tfindActiveByRoleOrId(\n\t\troles: string[],\n\t\tplatform: BannerPlatform,\n\t\tbannerId?: string,\n\t\toptions?: WithoutProjection<FindOneOptions<T>>,\n\t): Cursor<T> {\n\t\tconst today = new Date();\n\n\t\tconst query = {\n\t\t\t...(bannerId && { _id: bannerId }),\n\t\t\tplatform,\n\t\t\tstartAt: { $lte: today },\n\t\t\texpireAt: { $gte: today },\n\t\t\tactive: { $ne: false },\n\t\t\t$or: [{ roles: { $in: roles } }, { roles: { $exists: false } }],\n\t\t};\n\n\t\treturn this.col.find(query, options);\n\t}\n\n\tdisable(bannerId: string): Promise<UpdateWriteOpResult> {\n\t\treturn this.col.updateOne({ _id: bannerId, active: { $ne: false } }, { $set: { active: false, inactivedAt: new Date() } });\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"20d3350689dced53c52f90ccc62679c2d0494b60"}

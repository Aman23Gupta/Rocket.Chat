{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/uploads.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/bridges/uploads.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/uploads.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/uploads.ts","sourceRoot":"","sources":["app/apps/server/bridges/uploads.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { UploadBridge } from '@rocket.chat/apps-engine/server/bridges/UploadBridge';\nimport { IUpload } from '@rocket.chat/apps-engine/definition/uploads';\nimport { IUploadDetails } from '@rocket.chat/apps-engine/definition/uploads/IUploadDetails';\n\nimport { FileUpload } from '../../../file-upload/server';\nimport { determineFileType } from '../../lib/misc/determineFileType';\nimport { AppServerOrchestrator } from '../orchestrator';\n\nconst getUploadDetails = (details: IUploadDetails): Partial<IUploadDetails> => {\n\tif (details.visitorToken) {\n\t\tconst { userId, ...result } = details;\n\t\treturn result;\n\t}\n\treturn details;\n};\nexport class AppUploadBridge extends UploadBridge {\n\t// eslint-disable-next-line no-empty-function\n\tconstructor(private readonly orch: AppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(id: string, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${id}\"`);\n\n\t\treturn this.orch.getConverters()?.get('uploads').convertById(id);\n\t}\n\n\tprotected async getBuffer(upload: IUpload, appId: string): Promise<Buffer> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${upload.id}\"`);\n\n\t\tconst rocketChatUpload = this.orch.getConverters()?.get('uploads').convertToRocketChat(upload);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tFileUpload.getBuffer(rocketChatUpload, (error: Error, result: Buffer) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected async createUpload(details: IUploadDetails, buffer: Buffer, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is creating an upload \"${details.name}\"`);\n\n\t\tif (!details.userId && !details.visitorToken) {\n\t\t\tthrow new Error('Missing user to perform the upload operation');\n\t\t}\n\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\tdetails.type = determineFileType(buffer, details.name);\n\n\t\treturn new Promise(\n\t\t\tMeteor.bindEnvironment((resolve, reject) => {\n\t\t\t\ttry {\n\t\t\t\t\tMeteor.runAsUser(details.userId, () => {\n\t\t\t\t\t\tconst uploadedFile = fileStore.insertSync(getUploadDetails(details), buffer);\n\t\t\t\t\t\tthis.orch.debugLog(`The App ${appId} has created an upload`, uploadedFile);\n\t\t\t\t\t\tif (details.visitorToken) {\n\t\t\t\t\t\t\tMeteor.call('sendFileLivechatMessage', details.rid, details.visitorToken, uploadedFile);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMeteor.call('sendFileMessage', details.rid, null, uploadedFile);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(this.orch.getConverters()?.get('uploads').convertToApp(uploadedFile));\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/uploads.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/bridges/uploads.ts"}},"code":"const _excluded = [\"userId\"];\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\nmodule.export({\n  AppUploadBridge: () => AppUploadBridge\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet UploadBridge;\nmodule.link(\"@rocket.chat/apps-engine/server/bridges/UploadBridge\", {\n  UploadBridge(v) {\n    UploadBridge = v;\n  }\n\n}, 1);\nlet FileUpload;\nmodule.link(\"../../../file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 2);\nlet determineFileType;\nmodule.link(\"../../lib/misc/determineFileType\", {\n  determineFileType(v) {\n    determineFileType = v;\n  }\n\n}, 3);\n\nconst getUploadDetails = details => {\n  if (details.visitorToken) {\n    const {\n      userId\n    } = details,\n          result = _objectWithoutProperties(details, _excluded);\n\n    return result;\n  }\n\n  return details;\n};\n\nclass AppUploadBridge extends UploadBridge {\n  // eslint-disable-next-line no-empty-function\n  constructor(orch) {\n    super();\n    this.orch = void 0;\n    this.orch = orch;\n  }\n\n  getById(id, appId) {\n    return Promise.asyncApply(() => {\n      var _this$orch$getConvert;\n\n      this.orch.debugLog(\"The App \".concat(appId, \" is getting the upload: \\\"\").concat(id, \"\\\"\"));\n      return (_this$orch$getConvert = this.orch.getConverters()) === null || _this$orch$getConvert === void 0 ? void 0 : _this$orch$getConvert.get('uploads').convertById(id);\n    });\n  }\n\n  getBuffer(upload, appId) {\n    return Promise.asyncApply(() => {\n      var _this$orch$getConvert2;\n\n      this.orch.debugLog(\"The App \".concat(appId, \" is getting the upload: \\\"\").concat(upload.id, \"\\\"\"));\n      const rocketChatUpload = (_this$orch$getConvert2 = this.orch.getConverters()) === null || _this$orch$getConvert2 === void 0 ? void 0 : _this$orch$getConvert2.get('uploads').convertToRocketChat(upload);\n      return new Promise((resolve, reject) => {\n        FileUpload.getBuffer(rocketChatUpload, (error, result) => {\n          if (error) {\n            return reject(error);\n          }\n\n          resolve(result);\n        });\n      });\n    });\n  }\n\n  createUpload(details, buffer, appId) {\n    return Promise.asyncApply(() => {\n      this.orch.debugLog(\"The App \".concat(appId, \" is creating an upload \\\"\").concat(details.name, \"\\\"\"));\n\n      if (!details.userId && !details.visitorToken) {\n        throw new Error('Missing user to perform the upload operation');\n      }\n\n      const fileStore = FileUpload.getStore('Uploads');\n      details.type = determineFileType(buffer, details.name);\n      return new Promise(Meteor.bindEnvironment((resolve, reject) => {\n        try {\n          Meteor.runAsUser(details.userId, () => {\n            var _this$orch$getConvert3;\n\n            const uploadedFile = fileStore.insertSync(getUploadDetails(details), buffer);\n            this.orch.debugLog(\"The App \".concat(appId, \" has created an upload\"), uploadedFile);\n\n            if (details.visitorToken) {\n              Meteor.call('sendFileLivechatMessage', details.rid, details.visitorToken, uploadedFile);\n            } else {\n              Meteor.call('sendFileMessage', details.rid, null, uploadedFile);\n            }\n\n            resolve((_this$orch$getConvert3 = this.orch.getConverters()) === null || _this$orch$getConvert3 === void 0 ? void 0 : _this$orch$getConvert3.get('uploads').convertToApp(uploadedFile));\n          });\n        } catch (err) {\n          reject(err);\n        }\n      }));\n    });\n  }\n\n}","map":{"version":3,"sources":["app/apps/server/bridges/uploads.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { UploadBridge } from '@rocket.chat/apps-engine/server/bridges/UploadBridge';\nimport { IUpload } from '@rocket.chat/apps-engine/definition/uploads';\nimport { IUploadDetails } from '@rocket.chat/apps-engine/definition/uploads/IUploadDetails';\n\nimport { FileUpload } from '../../../file-upload/server';\nimport { determineFileType } from '../../lib/misc/determineFileType';\nimport { AppServerOrchestrator } from '../orchestrator';\n\nconst getUploadDetails = (details: IUploadDetails): Partial<IUploadDetails> => {\n\tif (details.visitorToken) {\n\t\tconst { userId, ...result } = details;\n\t\treturn result;\n\t}\n\treturn details;\n};\nexport class AppUploadBridge extends UploadBridge {\n\t// eslint-disable-next-line no-empty-function\n\tconstructor(private readonly orch: AppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(id: string, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${id}\"`);\n\n\t\treturn this.orch.getConverters()?.get('uploads').convertById(id);\n\t}\n\n\tprotected async getBuffer(upload: IUpload, appId: string): Promise<Buffer> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${upload.id}\"`);\n\n\t\tconst rocketChatUpload = this.orch.getConverters()?.get('uploads').convertToRocketChat(upload);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tFileUpload.getBuffer(rocketChatUpload, (error: Error, result: Buffer) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected async createUpload(details: IUploadDetails, buffer: Buffer, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is creating an upload \"${details.name}\"`);\n\n\t\tif (!details.userId && !details.visitorToken) {\n\t\t\tthrow new Error('Missing user to perform the upload operation');\n\t\t}\n\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\tdetails.type = determineFileType(buffer, details.name);\n\n\t\treturn new Promise(\n\t\t\tMeteor.bindEnvironment((resolve, reject) => {\n\t\t\t\ttry {\n\t\t\t\t\tMeteor.runAsUser(details.userId, () => {\n\t\t\t\t\t\tconst uploadedFile = fileStore.insertSync(getUploadDetails(details), buffer);\n\t\t\t\t\t\tthis.orch.debugLog(`The App ${appId} has created an upload`, uploadedFile);\n\t\t\t\t\t\tif (details.visitorToken) {\n\t\t\t\t\t\t\tMeteor.call('sendFileLivechatMessage', details.rid, details.visitorToken, uploadedFile);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMeteor.call('sendFileMessage', details.rid, null, uploadedFile);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(this.orch.getConverters()?.get('uploads').convertToApp(uploadedFile));\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"9969d98d62e2d472f5ce17d0f662d662eaaa4aa8"}

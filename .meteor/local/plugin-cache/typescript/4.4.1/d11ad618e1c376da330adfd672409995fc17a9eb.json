{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Permissions.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/Permissions.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Permissions.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/Permissions.ts","sourceRoot":"","sources":["app/models/server/raw/Permissions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAGpC,MAAM,OAAO,cAAe,SAAQ,OAAoB;IACvD,KAAK,CAAC,cAAc,CAAC,IAAY,EAAE,KAAe;QACjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAChC;YACC,GAAG,EAAE,IAAI;YACT,KAAK;SACL,EACD,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CACtB,CAAC;QAEF,IAAI,MAAM,EAAE;YACX,OAAO,MAAM,CAAC,GAAG,CAAC;SAClB;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC9G,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,KAAe;QACvC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAA2B,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAE5F,IAAI,MAAM,EAAE;YACX,OAAO,MAAM,CAAC,GAAG,CAAC;SAClB;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5G,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,UAAkB,EAAE,IAAY;QAC7C,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,UAAkB,EAAE,KAAe;QACjD,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,UAAkB,EAAE,IAAY;QAChD,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACjF,CAAC;CACD","sourcesContent":["import { BaseRaw } from './BaseRaw';\nimport { IPermission } from '../../../../definition/IPermission';\n\nexport class PermissionsRaw extends BaseRaw<IPermission> {\n\tasync createOrUpdate(name: string, roles: string[]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOne<Pick<IPermission, '_id'>>(\n\t\t\t{\n\t\t\t\t_id: name,\n\t\t\t\troles,\n\t\t\t},\n\t\t\t{ fields: { _id: 1 } },\n\t\t);\n\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\treturn this.update({ _id: name }, { $set: { roles } }, { upsert: true }).then((result) => result.result._id);\n\t}\n\n\tasync create(id: string, roles: string[]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOneById<Pick<IPermission, '_id'>>(id, { fields: { _id: 1 } });\n\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\treturn this.update({ _id: id }, { $set: { roles } }, { upsert: true }).then((result) => result.result._id);\n\t}\n\n\tasync addRole(permission: string, role: string): Promise<void> {\n\t\tawait this.update({ _id: permission, roles: { $ne: role } }, { $addToSet: { roles: role } });\n\t}\n\n\tasync setRoles(permission: string, roles: string[]): Promise<void> {\n\t\tawait this.update({ _id: permission }, { $set: { roles } });\n\t}\n\n\tasync removeRole(permission: string, role: string): Promise<void> {\n\t\tawait this.update({ _id: permission, roles: role }, { $pull: { roles: role } });\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Permissions.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/Permissions.ts"}},"code":"module.export({\n  PermissionsRaw: () => PermissionsRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass PermissionsRaw extends BaseRaw {\n  createOrUpdate(name, roles) {\n    return Promise.asyncApply(() => {\n      const exists = Promise.await(this.findOne({\n        _id: name,\n        roles\n      }, {\n        fields: {\n          _id: 1\n        }\n      }));\n\n      if (exists) {\n        return exists._id;\n      }\n\n      return this.update({\n        _id: name\n      }, {\n        $set: {\n          roles\n        }\n      }, {\n        upsert: true\n      }).then(result => result.result._id);\n    });\n  }\n\n  create(id, roles) {\n    return Promise.asyncApply(() => {\n      const exists = Promise.await(this.findOneById(id, {\n        fields: {\n          _id: 1\n        }\n      }));\n\n      if (exists) {\n        return exists._id;\n      }\n\n      return this.update({\n        _id: id\n      }, {\n        $set: {\n          roles\n        }\n      }, {\n        upsert: true\n      }).then(result => result.result._id);\n    });\n  }\n\n  addRole(permission, role) {\n    return Promise.asyncApply(() => {\n      Promise.await(this.update({\n        _id: permission,\n        roles: {\n          $ne: role\n        }\n      }, {\n        $addToSet: {\n          roles: role\n        }\n      }));\n    });\n  }\n\n  setRoles(permission, roles) {\n    return Promise.asyncApply(() => {\n      Promise.await(this.update({\n        _id: permission\n      }, {\n        $set: {\n          roles\n        }\n      }));\n    });\n  }\n\n  removeRole(permission, role) {\n    return Promise.asyncApply(() => {\n      Promise.await(this.update({\n        _id: permission,\n        roles: role\n      }, {\n        $pull: {\n          roles: role\n        }\n      }));\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/Permissions.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,cAAe,EAAA,MAAA;AAAf,CAAT;AAAoC,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAG9B,MAAO,cAAP,SAA8B,OAA9B,CAAkD;AACjD,EAAA,cAAc,CAAC,IAAD,EAAe,KAAf;AAAA,oCAA8B;AACjD,YAAM,MAAM,iBAAS,KAAK,OAAL,CACpB;AACC,QAAA,GAAG,EAAE,IADN;AAEC,QAAA;AAFD,OADoB,EAKpB;AAAE,QAAA,MAAM,EAAE;AAAE,UAAA,GAAG,EAAE;AAAP;AAAV,OALoB,CAAT,CAAZ;;AAQA,UAAI,MAAJ,EAAY;AACX,eAAO,MAAM,CAAC,GAAd;AACA;;AAED,aAAO,KAAK,MAAL,CAAY;AAAE,QAAA,GAAG,EAAE;AAAP,OAAZ,EAA2B;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA;AAAF;AAAR,OAA3B,EAAgD;AAAE,QAAA,MAAM,EAAE;AAAV,OAAhD,EAAkE,IAAlE,CAAwE,MAAD,IAAY,MAAM,CAAC,MAAP,CAAc,GAAjG,CAAP;AACA,KAdmB;AAAA;;AAgBd,EAAA,MAAM,CAAC,EAAD,EAAa,KAAb;AAAA,oCAA4B;AACvC,YAAM,MAAM,iBAAS,KAAK,WAAL,CAA2C,EAA3C,EAA+C;AAAE,QAAA,MAAM,EAAE;AAAE,UAAA,GAAG,EAAE;AAAP;AAAV,OAA/C,CAAT,CAAZ;;AAEA,UAAI,MAAJ,EAAY;AACX,eAAO,MAAM,CAAC,GAAd;AACA;;AAED,aAAO,KAAK,MAAL,CAAY;AAAE,QAAA,GAAG,EAAE;AAAP,OAAZ,EAAyB;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA;AAAF;AAAR,OAAzB,EAA8C;AAAE,QAAA,MAAM,EAAE;AAAV,OAA9C,EAAgE,IAAhE,CAAsE,MAAD,IAAY,MAAM,CAAC,MAAP,CAAc,GAA/F,CAAP;AACA,KARW;AAAA;;AAUN,EAAA,OAAO,CAAC,UAAD,EAAqB,IAArB;AAAA,oCAAiC;AAC7C,oBAAM,KAAK,MAAL,CAAY;AAAE,QAAA,GAAG,EAAE,UAAP;AAAmB,QAAA,KAAK,EAAE;AAAE,UAAA,GAAG,EAAE;AAAP;AAA1B,OAAZ,EAAuD;AAAE,QAAA,SAAS,EAAE;AAAE,UAAA,KAAK,EAAE;AAAT;AAAb,OAAvD,CAAN;AACA,KAFY;AAAA;;AAIP,EAAA,QAAQ,CAAC,UAAD,EAAqB,KAArB;AAAA,oCAAoC;AACjD,oBAAM,KAAK,MAAL,CAAY;AAAE,QAAA,GAAG,EAAE;AAAP,OAAZ,EAAiC;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA;AAAF;AAAR,OAAjC,CAAN;AACA,KAFa;AAAA;;AAIR,EAAA,UAAU,CAAC,UAAD,EAAqB,IAArB;AAAA,oCAAiC;AAChD,oBAAM,KAAK,MAAL,CAAY;AAAE,QAAA,GAAG,EAAE,UAAP;AAAmB,QAAA,KAAK,EAAE;AAA1B,OAAZ,EAA8C;AAAE,QAAA,KAAK,EAAE;AAAE,UAAA,KAAK,EAAE;AAAT;AAAT,OAA9C,CAAN;AACA,KAFe;AAAA;;AAnCuC","sourcesContent":["import { BaseRaw } from './BaseRaw';\nimport { IPermission } from '../../../../definition/IPermission';\n\nexport class PermissionsRaw extends BaseRaw<IPermission> {\n\tasync createOrUpdate(name: string, roles: string[]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOne<Pick<IPermission, '_id'>>(\n\t\t\t{\n\t\t\t\t_id: name,\n\t\t\t\troles,\n\t\t\t},\n\t\t\t{ fields: { _id: 1 } },\n\t\t);\n\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\treturn this.update({ _id: name }, { $set: { roles } }, { upsert: true }).then((result) => result.result._id);\n\t}\n\n\tasync create(id: string, roles: string[]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOneById<Pick<IPermission, '_id'>>(id, { fields: { _id: 1 } });\n\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\treturn this.update({ _id: id }, { $set: { roles } }, { upsert: true }).then((result) => result.result._id);\n\t}\n\n\tasync addRole(permission: string, role: string): Promise<void> {\n\t\tawait this.update({ _id: permission, roles: { $ne: role } }, { $addToSet: { roles: role } });\n\t}\n\n\tasync setRoles(permission: string, roles: string[]): Promise<void> {\n\t\tawait this.update({ _id: permission }, { $set: { roles } });\n\t}\n\n\tasync removeRole(permission: string, role: string): Promise<void> {\n\t\tawait this.update({ _id: permission, roles: role }, { $pull: { roles: role } });\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"d11ad618e1c376da330adfd672409995fc17a9eb"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/departments.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/lib/departments.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/departments.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/departments.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import { FilterQuery, SortOptionObject } from 'mongodb';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '../../../../models/server/raw';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { PaginatedResult } from '../../../../../definition/rest/helpers/PaginatedResult';\nimport { ILivechatDepartmentRecord } from '../../../../../definition/ILivechatDepartmentRecord';\nimport { ILivechatDepartmentAgents } from '../../../../../definition/ILivechatDepartmentAgents';\n\ntype Pagination<T> = { pagination: { offset: number; count: number; sort: SortOptionObject<T> } };\ntype FindDepartmentParams = {\n\tuserId: string;\n\tonlyMyDepartments?: boolean;\n\ttext?: string;\n\tenabled?: boolean;\n\texcludeDepartmentId?: string;\n} & Pagination<ILivechatDepartmentRecord>;\ntype FindDepartmentByIdParams = {\n\tuserId: string;\n\tdepartmentId: string;\n\tincludeAgents?: boolean;\n\tonlyMyDepartments?: boolean;\n};\ntype FindDepartmentToAutocompleteParams = {\n\tuid: string;\n\tselector: {\n\t\texceptions: string[];\n\t\tconditions: FilterQuery<ILivechatDepartmentRecord>;\n\t\tterm: string;\n\t};\n\tonlyMyDepartments?: boolean;\n};\ntype FindDepartmentAgentsParams = {\n\tuserId: string;\n\tdepartmentId: string;\n} & Pagination<ILivechatDepartmentAgents>;\n\nexport async function findDepartments({\n\tuserId,\n\tonlyMyDepartments = false,\n\ttext,\n\tenabled,\n\texcludeDepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentParams): Promise<PaginatedResult<{ departments: ILivechatDepartmentRecord[] }>> {\n\tif (!(await hasPermissionAsync(userId, 'view-livechat-departments')) && !(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tlet query = {\n\t\t$or: [{ type: { $eq: 'd' } }, { type: { $exists: false } }],\n\t\t...(enabled && { enabled: Boolean(enabled) }),\n\t\t...(text && { name: new RegExp(escapeRegExp(text), 'i') }),\n\t\t...(excludeDepartmentId && { _id: { $ne: excludeDepartmentId } }),\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tquery = callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst cursor = LivechatDepartment.find(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst departments = await cursor.toArray();\n\n\treturn {\n\t\tdepartments,\n\t\tcount: departments.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentById({\n\tuserId,\n\tdepartmentId,\n\tincludeAgents = true,\n\tonlyMyDepartments = false,\n}: FindDepartmentByIdParams): Promise<{\n\tdepartment: ILivechatDepartmentRecord | null;\n\tagents?: ILivechatDepartmentAgents[];\n}> {\n\tconst canViewLivechatDepartments = await hasPermissionAsync(userId, 'view-livechat-departments');\n\tif (!canViewLivechatDepartments && !(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tlet query = { _id: departmentId };\n\n\tif (onlyMyDepartments) {\n\t\tquery = callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst result = {\n\t\tdepartment: await LivechatDepartment.findOne(query),\n\t\t...(includeAgents &&\n\t\t\tcanViewLivechatDepartments && {\n\t\t\t\tagents: await LivechatDepartmentAgents.find({ departmentId }).toArray(),\n\t\t\t}),\n\t};\n\n\treturn result;\n}\n\nexport async function findDepartmentsToAutocomplete({\n\tuid,\n\tselector,\n\tonlyMyDepartments = false,\n}: FindDepartmentToAutocompleteParams): Promise<{ items: ILivechatDepartmentRecord[] }> {\n\tif (!(await hasPermissionAsync(uid, 'view-livechat-departments')) && !(await hasPermissionAsync(uid, 'view-l-room'))) {\n\t\treturn { items: [] };\n\t}\n\tconst { exceptions = [] } = selector;\n\tlet { conditions = {} } = selector;\n\n\tconst options = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t},\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tconditions = callbacks.run('livechat.applyDepartmentRestrictions', conditions, { userId: uid });\n\t}\n\n\tconst items = await LivechatDepartment.findByNameRegexWithExceptionsAndConditions(\n\t\tselector.term,\n\t\texceptions,\n\t\tconditions,\n\t\toptions,\n\t).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findDepartmentAgents({\n\tuserId,\n\tdepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentAgentsParams): Promise<PaginatedResult<{ agents: ILivechatDepartmentAgents[] }>> {\n\tif (!(await hasPermissionAsync(userId, 'view-livechat-departments')) && !(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tconst cursor = LivechatDepartmentAgents.findAgentsByDepartmentId<ILivechatDepartmentAgents>(departmentId, {\n\t\tsort: sort || { username: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst agents = await cursor.toArray();\n\n\treturn {\n\t\tagents,\n\t\tcount: agents.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentsBetweenIds({\n\tuid,\n\tids,\n\tfields,\n}: {\n\tuid: string;\n\tids: string[];\n\tfields: Record<string, unknown>;\n}): Promise<{ departments: ILivechatDepartmentRecord[] }> {\n\tif (!(await hasPermissionAsync(uid, 'view-livechat-departments')) && !(await hasPermissionAsync(uid, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tconst departments = await LivechatDepartment.findInIds(ids, fields).toArray();\n\treturn { departments };\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/departments.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/lib/departments.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  findDepartments: () => findDepartments,\n  findDepartmentById: () => findDepartmentById,\n  findDepartmentsToAutocomplete: () => findDepartmentsToAutocomplete,\n  findDepartmentAgents: () => findDepartmentAgents,\n  findDepartmentsBetweenIds: () => findDepartmentsBetweenIds\n});\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 0);\nlet hasPermissionAsync;\nmodule.link(\"../../../../authorization/server/functions/hasPermission\", {\n  hasPermissionAsync(v) {\n    hasPermissionAsync = v;\n  }\n\n}, 1);\nlet LivechatDepartment, LivechatDepartmentAgents;\nmodule.link(\"../../../../models/server/raw\", {\n  LivechatDepartment(v) {\n    LivechatDepartment = v;\n  },\n\n  LivechatDepartmentAgents(v) {\n    LivechatDepartmentAgents = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\n\nfunction findDepartments(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      onlyMyDepartments = false,\n      text,\n      enabled,\n      excludeDepartmentId,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'view-livechat-departments')) && !Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    let query = _objectSpread(_objectSpread(_objectSpread({\n      $or: [{\n        type: {\n          $eq: 'd'\n        }\n      }, {\n        type: {\n          $exists: false\n        }\n      }]\n    }, enabled && {\n      enabled: Boolean(enabled)\n    }), text && {\n      name: new RegExp(escapeRegExp(text), 'i')\n    }), excludeDepartmentId && {\n      _id: {\n        $ne: excludeDepartmentId\n      }\n    });\n\n    if (onlyMyDepartments) {\n      query = callbacks.run('livechat.applyDepartmentRestrictions', query, {\n        userId\n      });\n    }\n\n    const cursor = LivechatDepartment.find(query, {\n      sort: sort || {\n        name: 1\n      },\n      skip: offset,\n      limit: count\n    });\n    const total = Promise.await(cursor.count());\n    const departments = Promise.await(cursor.toArray());\n    return {\n      departments,\n      count: departments.length,\n      offset,\n      total\n    };\n  });\n}\n\nfunction findDepartmentById(_ref2) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      departmentId,\n      includeAgents = true,\n      onlyMyDepartments = false\n    } = _ref2;\n    const canViewLivechatDepartments = Promise.await(hasPermissionAsync(userId, 'view-livechat-departments'));\n\n    if (!canViewLivechatDepartments && !Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    let query = {\n      _id: departmentId\n    };\n\n    if (onlyMyDepartments) {\n      query = callbacks.run('livechat.applyDepartmentRestrictions', query, {\n        userId\n      });\n    }\n\n    const result = _objectSpread({\n      department: Promise.await(LivechatDepartment.findOne(query))\n    }, includeAgents && canViewLivechatDepartments && {\n      agents: Promise.await(LivechatDepartmentAgents.find({\n        departmentId\n      }).toArray())\n    });\n\n    return result;\n  });\n}\n\nfunction findDepartmentsToAutocomplete(_ref3) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      selector,\n      onlyMyDepartments = false\n    } = _ref3;\n\n    if (!Promise.await(hasPermissionAsync(uid, 'view-livechat-departments')) && !Promise.await(hasPermissionAsync(uid, 'view-l-room'))) {\n      return {\n        items: []\n      };\n    }\n\n    const {\n      exceptions = []\n    } = selector;\n    let {\n      conditions = {}\n    } = selector;\n    const options = {\n      projection: {\n        _id: 1,\n        name: 1\n      },\n      sort: {\n        name: 1\n      }\n    };\n\n    if (onlyMyDepartments) {\n      conditions = callbacks.run('livechat.applyDepartmentRestrictions', conditions, {\n        userId: uid\n      });\n    }\n\n    const items = Promise.await(LivechatDepartment.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditions, options).toArray());\n    return {\n      items\n    };\n  });\n}\n\nfunction findDepartmentAgents(_ref4) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      departmentId,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref4;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'view-livechat-departments')) && !Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const cursor = LivechatDepartmentAgents.findAgentsByDepartmentId(departmentId, {\n      sort: sort || {\n        username: 1\n      },\n      skip: offset,\n      limit: count\n    });\n    const total = Promise.await(cursor.count());\n    const agents = Promise.await(cursor.toArray());\n    return {\n      agents,\n      count: agents.length,\n      offset,\n      total\n    };\n  });\n}\n\nfunction findDepartmentsBetweenIds(_ref5) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      ids,\n      fields\n    } = _ref5;\n\n    if (!Promise.await(hasPermissionAsync(uid, 'view-livechat-departments')) && !Promise.await(hasPermissionAsync(uid, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const departments = Promise.await(LivechatDepartment.findInIds(ids, fields).toArray());\n    return {\n      departments\n    };\n  });\n}","map":{"version":3,"sources":["app/livechat/server/api/lib/departments.ts"],"names":[],"mappings":"AACA,IAAA,aAAA;;AAAS,MAAc,CAAA,IAAd,CAAoB,sCAApB,EAAkD;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAlD,EAAkD,CAAlD;AAAT,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,eAAoB,EAAA,MAAA,eAApB;AAAoB,EAAA,kBAA8B,EAAA,MAAA,kBAAlD;AAAkD,EAAA,6BAAA,EAAA,MAAA,6BAAlD;AAAkD,EAAA,oBAAA,EAAA,MAAA,oBAAlD;AAAkD,EAAA,yBAAA,EAAA,MAAA;AAAlD,CAAT;AAA2D,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0DAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA,EAAA,wBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,wBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,wBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAqCpD,SAAe,eAAf;AAAA,kCAOgB;AAAA,QAPe;AACrC,MAAA,MADqC;AAErC,MAAA,iBAAiB,GAAG,KAFiB;AAGrC,MAAA,IAHqC;AAIrC,MAAA,OAJqC;AAKrC,MAAA,mBALqC;AAMrC,MAAA,UAAU,EAAE;AAAE,QAAA,MAAF;AAAU,QAAA,KAAV;AAAiB,QAAA;AAAjB;AANyB,KAOf;;AACtB,QAAI,eAAQ,kBAAkB,CAAC,MAAD,EAAS,2BAAT,CAA1B,KAAoE,eAAQ,kBAAkB,CAAC,MAAD,EAAS,aAAT,CAA1B,CAAxE,EAA4H;AAC3H,YAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACA;;AAED,QAAI,KAAK;AACR,MAAA,GAAG,EAAE,CAAC;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA,GAAG,EAAE;AAAP;AAAR,OAAD,EAAyB;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA,OAAO,EAAE;AAAX;AAAR,OAAzB;AADG,OAEJ,OAAO,IAAI;AAAE,MAAA,OAAO,EAAE,OAAO,CAAC,OAAD;AAAlB,KAFP,GAGJ,IAAI,IAAI;AAAE,MAAA,IAAI,EAAE,IAAI,MAAJ,CAAW,YAAY,CAAC,IAAD,CAAvB,EAA+B,GAA/B;AAAR,KAHJ,GAIJ,mBAAmB,IAAI;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,GAAG,EAAE;AAAP;AAAP,KAJnB,CAAT;;AAOA,QAAI,iBAAJ,EAAuB;AACtB,MAAA,KAAK,GAAG,SAAS,CAAC,GAAV,CAAc,sCAAd,EAAsD,KAAtD,EAA6D;AAAE,QAAA;AAAF,OAA7D,CAAR;AACA;;AAED,UAAM,MAAM,GAAG,kBAAkB,CAAC,IAAnB,CAAwB,KAAxB,EAA+B;AAC7C,MAAA,IAAI,EAAE,IAAI,IAAI;AAAE,QAAA,IAAI,EAAE;AAAR,OAD+B;AAE7C,MAAA,IAAI,EAAE,MAFuC;AAG7C,MAAA,KAAK,EAAE;AAHsC,KAA/B,CAAf;AAMA,UAAM,KAAK,iBAAS,MAAM,CAAC,KAAP,EAAT,CAAX;AAEA,UAAM,WAAW,iBAAS,MAAM,CAAC,OAAP,EAAT,CAAjB;AAEA,WAAO;AACN,MAAA,WADM;AAEN,MAAA,KAAK,EAAE,WAAW,CAAC,MAFb;AAGN,MAAA,MAHM;AAIN,MAAA;AAJM,KAAP;AAMA,GAvCM;AAAA;;AAyCA,SAAe,kBAAf;AAAA,kCAKoB;AAAA,QALc;AACxC,MAAA,MADwC;AAExC,MAAA,YAFwC;AAGxC,MAAA,aAAa,GAAG,IAHwB;AAIxC,MAAA,iBAAiB,GAAG;AAJoB,KAKd;AAI1B,UAAM,0BAA0B,iBAAS,kBAAkB,CAAC,MAAD,EAAS,2BAAT,CAA3B,CAAhC;;AACA,QAAI,CAAC,0BAAD,IAA+B,eAAQ,kBAAkB,CAAC,MAAD,EAAS,aAAT,CAA1B,CAAnC,EAAuF;AACtF,YAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACA;;AAED,QAAI,KAAK,GAAG;AAAE,MAAA,GAAG,EAAE;AAAP,KAAZ;;AAEA,QAAI,iBAAJ,EAAuB;AACtB,MAAA,KAAK,GAAG,SAAS,CAAC,GAAV,CAAc,sCAAd,EAAsD,KAAtD,EAA6D;AAAE,QAAA;AAAF,OAA7D,CAAR;AACA;;AAED,UAAM,MAAM;AACX,MAAA,UAAU,gBAAQ,kBAAkB,CAAC,OAAnB,CAA2B,KAA3B,CAAR;AADC,OAEP,aAAa,IAChB,0BADG,IAC2B;AAC7B,MAAA,MAAM,gBAAQ,wBAAwB,CAAC,IAAzB,CAA8B;AAAE,QAAA;AAAF,OAA9B,EAAgD,OAAhD,EAAR;AADuB,KAHpB,CAAZ;;AAQA,WAAO,MAAP;AACA,GA7BM;AAAA;;AA+BA,SAAe,6BAAf;AAAA,kCAI8B;AAAA,QAJe;AACnD,MAAA,GADmD;AAEnD,MAAA,QAFmD;AAGnD,MAAA,iBAAiB,GAAG;AAH+B,KAIf;;AACpC,QAAI,eAAQ,kBAAkB,CAAC,GAAD,EAAM,2BAAN,CAA1B,KAAiE,eAAQ,kBAAkB,CAAC,GAAD,EAAM,aAAN,CAA1B,CAArE,EAAsH;AACrH,aAAO;AAAE,QAAA,KAAK,EAAE;AAAT,OAAP;AACA;;AACD,UAAM;AAAE,MAAA,UAAU,GAAG;AAAf,QAAsB,QAA5B;AACA,QAAI;AAAE,MAAA,UAAU,GAAG;AAAf,QAAsB,QAA1B;AAEA,UAAM,OAAO,GAAG;AACf,MAAA,UAAU,EAAE;AACX,QAAA,GAAG,EAAE,CADM;AAEX,QAAA,IAAI,EAAE;AAFK,OADG;AAKf,MAAA,IAAI,EAAE;AACL,QAAA,IAAI,EAAE;AADD;AALS,KAAhB;;AAUA,QAAI,iBAAJ,EAAuB;AACtB,MAAA,UAAU,GAAG,SAAS,CAAC,GAAV,CAAc,sCAAd,EAAsD,UAAtD,EAAkE;AAAE,QAAA,MAAM,EAAE;AAAV,OAAlE,CAAb;AACA;;AAED,UAAM,KAAK,iBAAS,kBAAkB,CAAC,0CAAnB,CACnB,QAAQ,CAAC,IADU,EAEnB,UAFmB,EAGnB,UAHmB,EAInB,OAJmB,EAKlB,OALkB,EAAT,CAAX;AAMA,WAAO;AACN,MAAA;AADM,KAAP;AAGA,GAlCM;AAAA;;AAoCA,SAAe,oBAAf;AAAA,kCAIsB;AAAA,QAJc;AAC1C,MAAA,MAD0C;AAE1C,MAAA,YAF0C;AAG1C,MAAA,UAAU,EAAE;AAAE,QAAA,MAAF;AAAU,QAAA,KAAV;AAAiB,QAAA;AAAjB;AAH8B,KAId;;AAC5B,QAAI,eAAQ,kBAAkB,CAAC,MAAD,EAAS,2BAAT,CAA1B,KAAoE,eAAQ,kBAAkB,CAAC,MAAD,EAAS,aAAT,CAA1B,CAAxE,EAA4H;AAC3H,YAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACA;;AAED,UAAM,MAAM,GAAG,wBAAwB,CAAC,wBAAzB,CAA6E,YAA7E,EAA2F;AACzG,MAAA,IAAI,EAAE,IAAI,IAAI;AAAE,QAAA,QAAQ,EAAE;AAAZ,OAD2F;AAEzG,MAAA,IAAI,EAAE,MAFmG;AAGzG,MAAA,KAAK,EAAE;AAHkG,KAA3F,CAAf;AAMA,UAAM,KAAK,iBAAS,MAAM,CAAC,KAAP,EAAT,CAAX;AAEA,UAAM,MAAM,iBAAS,MAAM,CAAC,OAAP,EAAT,CAAZ;AAEA,WAAO;AACN,MAAA,MADM;AAEN,MAAA,KAAK,EAAE,MAAM,CAAC,MAFR;AAGN,MAAA,MAHM;AAIN,MAAA;AAJM,KAAP;AAMA,GAzBM;AAAA;;AA2BA,SAAe,yBAAf;AAAA,kCAQN;AAAA,QAR+C;AAC/C,MAAA,GAD+C;AAE/C,MAAA,GAF+C;AAG/C,MAAA;AAH+C,KAQ/C;;AACA,QAAI,eAAQ,kBAAkB,CAAC,GAAD,EAAM,2BAAN,CAA1B,KAAiE,eAAQ,kBAAkB,CAAC,GAAD,EAAM,aAAN,CAA1B,CAArE,EAAsH;AACrH,YAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACA;;AAED,UAAM,WAAW,iBAAS,kBAAkB,CAAC,SAAnB,CAA6B,GAA7B,EAAkC,MAAlC,EAA0C,OAA1C,EAAT,CAAjB;AACA,WAAO;AAAE,MAAA;AAAF,KAAP;AACA,GAfM;AAAA","sourcesContent":["import { FilterQuery, SortOptionObject } from 'mongodb';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '../../../../models/server/raw';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { PaginatedResult } from '../../../../../definition/rest/helpers/PaginatedResult';\nimport { ILivechatDepartmentRecord } from '../../../../../definition/ILivechatDepartmentRecord';\nimport { ILivechatDepartmentAgents } from '../../../../../definition/ILivechatDepartmentAgents';\n\ntype Pagination<T> = { pagination: { offset: number; count: number; sort: SortOptionObject<T> } };\ntype FindDepartmentParams = {\n\tuserId: string;\n\tonlyMyDepartments?: boolean;\n\ttext?: string;\n\tenabled?: boolean;\n\texcludeDepartmentId?: string;\n} & Pagination<ILivechatDepartmentRecord>;\ntype FindDepartmentByIdParams = {\n\tuserId: string;\n\tdepartmentId: string;\n\tincludeAgents?: boolean;\n\tonlyMyDepartments?: boolean;\n};\ntype FindDepartmentToAutocompleteParams = {\n\tuid: string;\n\tselector: {\n\t\texceptions: string[];\n\t\tconditions: FilterQuery<ILivechatDepartmentRecord>;\n\t\tterm: string;\n\t};\n\tonlyMyDepartments?: boolean;\n};\ntype FindDepartmentAgentsParams = {\n\tuserId: string;\n\tdepartmentId: string;\n} & Pagination<ILivechatDepartmentAgents>;\n\nexport async function findDepartments({\n\tuserId,\n\tonlyMyDepartments = false,\n\ttext,\n\tenabled,\n\texcludeDepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentParams): Promise<PaginatedResult<{ departments: ILivechatDepartmentRecord[] }>> {\n\tif (!(await hasPermissionAsync(userId, 'view-livechat-departments')) && !(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tlet query = {\n\t\t$or: [{ type: { $eq: 'd' } }, { type: { $exists: false } }],\n\t\t...(enabled && { enabled: Boolean(enabled) }),\n\t\t...(text && { name: new RegExp(escapeRegExp(text), 'i') }),\n\t\t...(excludeDepartmentId && { _id: { $ne: excludeDepartmentId } }),\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tquery = callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst cursor = LivechatDepartment.find(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst departments = await cursor.toArray();\n\n\treturn {\n\t\tdepartments,\n\t\tcount: departments.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentById({\n\tuserId,\n\tdepartmentId,\n\tincludeAgents = true,\n\tonlyMyDepartments = false,\n}: FindDepartmentByIdParams): Promise<{\n\tdepartment: ILivechatDepartmentRecord | null;\n\tagents?: ILivechatDepartmentAgents[];\n}> {\n\tconst canViewLivechatDepartments = await hasPermissionAsync(userId, 'view-livechat-departments');\n\tif (!canViewLivechatDepartments && !(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tlet query = { _id: departmentId };\n\n\tif (onlyMyDepartments) {\n\t\tquery = callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst result = {\n\t\tdepartment: await LivechatDepartment.findOne(query),\n\t\t...(includeAgents &&\n\t\t\tcanViewLivechatDepartments && {\n\t\t\t\tagents: await LivechatDepartmentAgents.find({ departmentId }).toArray(),\n\t\t\t}),\n\t};\n\n\treturn result;\n}\n\nexport async function findDepartmentsToAutocomplete({\n\tuid,\n\tselector,\n\tonlyMyDepartments = false,\n}: FindDepartmentToAutocompleteParams): Promise<{ items: ILivechatDepartmentRecord[] }> {\n\tif (!(await hasPermissionAsync(uid, 'view-livechat-departments')) && !(await hasPermissionAsync(uid, 'view-l-room'))) {\n\t\treturn { items: [] };\n\t}\n\tconst { exceptions = [] } = selector;\n\tlet { conditions = {} } = selector;\n\n\tconst options = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t},\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tconditions = callbacks.run('livechat.applyDepartmentRestrictions', conditions, { userId: uid });\n\t}\n\n\tconst items = await LivechatDepartment.findByNameRegexWithExceptionsAndConditions(\n\t\tselector.term,\n\t\texceptions,\n\t\tconditions,\n\t\toptions,\n\t).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findDepartmentAgents({\n\tuserId,\n\tdepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentAgentsParams): Promise<PaginatedResult<{ agents: ILivechatDepartmentAgents[] }>> {\n\tif (!(await hasPermissionAsync(userId, 'view-livechat-departments')) && !(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tconst cursor = LivechatDepartmentAgents.findAgentsByDepartmentId<ILivechatDepartmentAgents>(departmentId, {\n\t\tsort: sort || { username: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst agents = await cursor.toArray();\n\n\treturn {\n\t\tagents,\n\t\tcount: agents.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentsBetweenIds({\n\tuid,\n\tids,\n\tfields,\n}: {\n\tuid: string;\n\tids: string[];\n\tfields: Record<string, unknown>;\n}): Promise<{ departments: ILivechatDepartmentRecord[] }> {\n\tif (!(await hasPermissionAsync(uid, 'view-livechat-departments')) && !(await hasPermissionAsync(uid, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tconst departments = await LivechatDepartment.findInIds(ids, fields).toArray();\n\treturn { departments };\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"17410a4024c215471ca0b2be4ed422152ef59057"}

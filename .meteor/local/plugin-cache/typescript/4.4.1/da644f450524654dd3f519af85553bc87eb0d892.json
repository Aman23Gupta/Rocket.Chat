{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/closeOmnichannelConversations.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/closeOmnichannelConversations.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/closeOmnichannelConversations.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/closeOmnichannelConversations.ts","sourceRoot":"","sources":["app/lib/server/functions/closeOmnichannelConversations.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAEvD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,uCAAuC,CAAC;AAOjE,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAAC,IAAW,EAAE,eAAkC,EAAQ,EAAE;IACtG,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACjF,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAS,UAAU,CAAC,IAAI,IAAI,CAAC;IAC1D,MAAM,OAAO,GAAG,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC;IACnE,SAAS,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;QAC/B,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { LivechatRooms } from '../../../models/server';\nimport { IUser } from '../../../../definition/IUser';\nimport { settings } from '../../../settings/server';\nimport { Livechat } from '../../../livechat/server/lib/Livechat';\n\ntype SubscribedRooms = {\n\trid: string;\n\tt: string;\n};\n\nexport const closeOmnichannelConversations = (user: IUser, subscribedRooms: SubscribedRooms[]): void => {\n\tconst roomsInfo = LivechatRooms.findByIds(subscribedRooms.map(({ rid }) => rid));\n\tconst language = settings.get<string>('Language') || 'en';\n\tconst comment = TAPi18n.__('Agent_deactivated', { lng: language });\n\troomsInfo.forEach((room: any) => {\n\t\tLivechat.closeRoom({ user, visitor: {}, room, comment });\n\t});\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/closeOmnichannelConversations.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/closeOmnichannelConversations.ts"}},"code":"module.export({\n  closeOmnichannelConversations: () => closeOmnichannelConversations\n});\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 0);\nlet LivechatRooms;\nmodule.link(\"../../../models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet Livechat;\nmodule.link(\"../../../livechat/server/lib/Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 3);\n\nconst closeOmnichannelConversations = (user, subscribedRooms) => {\n  const roomsInfo = LivechatRooms.findByIds(subscribedRooms.map(_ref => {\n    let {\n      rid\n    } = _ref;\n    return rid;\n  }));\n  const language = settings.get('Language') || 'en';\n\n  const comment = TAPi18n.__('Agent_deactivated', {\n    lng: language\n  });\n\n  roomsInfo.forEach(room => {\n    Livechat.closeRoom({\n      user,\n      visitor: {},\n      room,\n      comment\n    });\n  });\n};","map":{"version":3,"sources":["app/lib/server/functions/closeOmnichannelConversations.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,6BAAe,EAAA,MAAA;AAAf,CAAT;AAAqD,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uCAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAY9C,MAAM,6BAA6B,GAAG,CAAC,IAAD,EAAc,eAAd,KAA0D;AACtG,QAAM,SAAS,GAAG,aAAa,CAAC,SAAd,CAAwB,eAAe,CAAC,GAAhB,CAAoB;AAAA,QAAC;AAAE,MAAA;AAAF,KAAD;AAAA,WAAa,GAAb;AAAA,GAApB,CAAxB,CAAlB;AACA,QAAM,QAAQ,GAAG,QAAQ,CAAC,GAAT,CAAqB,UAArB,KAAoC,IAArD;;AACA,QAAM,OAAO,GAAG,OAAO,CAAC,EAAR,CAAW,mBAAX,EAAgC;AAAE,IAAA,GAAG,EAAE;AAAP,GAAhC,CAAhB;;AACA,EAAA,SAAS,CAAC,OAAV,CAAmB,IAAD,IAAc;AAC/B,IAAA,QAAQ,CAAC,SAAT,CAAmB;AAAE,MAAA,IAAF;AAAQ,MAAA,OAAO,EAAE,EAAjB;AAAqB,MAAA,IAArB;AAA2B,MAAA;AAA3B,KAAnB;AACA,GAFD;AAGA,CAPM","sourcesContent":["import { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { LivechatRooms } from '../../../models/server';\nimport { IUser } from '../../../../definition/IUser';\nimport { settings } from '../../../settings/server';\nimport { Livechat } from '../../../livechat/server/lib/Livechat';\n\ntype SubscribedRooms = {\n\trid: string;\n\tt: string;\n};\n\nexport const closeOmnichannelConversations = (user: IUser, subscribedRooms: SubscribedRooms[]): void => {\n\tconst roomsInfo = LivechatRooms.findByIds(subscribedRooms.map(({ rid }) => rid));\n\tconst language = settings.get<string>('Language') || 'en';\n\tconst comment = TAPi18n.__('Agent_deactivated', { lng: language });\n\troomsInfo.forEach((room: any) => {\n\t\tLivechat.closeRoom({ user, visitor: {}, room, comment });\n\t});\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"da644f450524654dd3f519af85553bc87eb0d892"}

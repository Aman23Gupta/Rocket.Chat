{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/client/providers/ModalProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/providers/ModalProvider.tsx","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/client/providers/ModalProvider.tsx","inputSourceMap":{"version":3,"file":"client/providers/ModalProvider.tsx","sourceRoot":"","sources":["client/providers/ModalProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAiC,MAAM,OAAO,CAAC;AAEtF,OAAO,EAAE,KAAK,EAAE,MAAM,qCAAqC,CAAC;AAC5D,OAAO,WAAW,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AAEvE,MAAM,aAAa,GAAO,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC1C,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,CAAY,IAAI,CAAC,CAAC;IAElE,MAAM,YAAY,GAAG,OAAO,CAC3B,GAAG,EAAE,CACJ,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;QACpB,QAAQ,EAAE,eAAe;KACzB,CAAC,EACH,EAAE,CACF,CAAC;IAEF,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAEpC,OAAO,CACN,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAC1C;GAAA,CAAC,QAAQ,CACT;GAAA,CAAC,YAAY,IAAI,CAChB,CAAC,WAAW,CACX;KAAA,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,QAAQ,CAC7D;IAAA,EAAE,WAAW,CAAC,CACd,CACF;EAAA,EAAE,YAAY,CAAC,QAAQ,CAAC,CACxB,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAuB,aAAa,CAAC,CAAC","sourcesContent":["import { Modal } from '@rocket.chat/fuselage';\nimport React, { useState, useMemo, memo, FC, ComponentProps, ReactNode } from 'react';\n\nimport { modal } from '../../app/ui-utils/client/lib/modal';\nimport ModalPortal from '../components/ModalPortal';\nimport { ModalContext } from '../contexts/ModalContext';\nimport { useImperativeModal } from '../views/hooks/useImperativeModal';\n\nconst ModalProvider: FC = ({ children }) => {\n\tconst [currentModal, setCurrentModal] = useState<ReactNode>(null);\n\n\tconst contextValue = useMemo<ComponentProps<typeof ModalContext.Provider>['value']>(\n\t\t() =>\n\t\t\tObject.assign(modal, {\n\t\t\t\tsetModal: setCurrentModal,\n\t\t\t}),\n\t\t[],\n\t);\n\n\tuseImperativeModal(setCurrentModal);\n\n\treturn (\n\t\t<ModalContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{currentModal && (\n\t\t\t\t<ModalPortal>\n\t\t\t\t\t<Modal.Backdrop zIndex={9999}>{currentModal}</Modal.Backdrop>\n\t\t\t\t</ModalPortal>\n\t\t\t)}\n\t\t</ModalContext.Provider>\n\t);\n};\n\nexport default memo<typeof ModalProvider>(ModalProvider);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/client/providers/ModalProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/providers/ModalProvider.tsx"}},"code":"let Modal;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Modal(v) {\n    Modal = v;\n  }\n\n}, 0);\nlet React, useState, useMemo, memo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useState(v) {\n    useState = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  memo(v) {\n    memo = v;\n  }\n\n}, 1);\nlet modal;\nmodule.link(\"../../app/ui-utils/client/lib/modal\", {\n  modal(v) {\n    modal = v;\n  }\n\n}, 2);\nlet ModalPortal;\nmodule.link(\"../components/ModalPortal\", {\n  default(v) {\n    ModalPortal = v;\n  }\n\n}, 3);\nlet ModalContext;\nmodule.link(\"../contexts/ModalContext\", {\n  ModalContext(v) {\n    ModalContext = v;\n  }\n\n}, 4);\nlet useImperativeModal;\nmodule.link(\"../views/hooks/useImperativeModal\", {\n  useImperativeModal(v) {\n    useImperativeModal = v;\n  }\n\n}, 5);\n\nconst ModalProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const [currentModal, setCurrentModal] = useState(null);\n  const contextValue = useMemo(() => Object.assign(modal, {\n    setModal: setCurrentModal\n  }), []);\n  useImperativeModal(setCurrentModal);\n  return /*#__PURE__*/React.createElement(ModalContext.Provider, {\n    value: contextValue\n  }, children, currentModal && /*#__PURE__*/React.createElement(ModalPortal, null, /*#__PURE__*/React.createElement(Modal.Backdrop, {\n    zIndex: 9999\n  }, currentModal)));\n};\n\nmodule.exportDefault( /*#__PURE__*/memo(ModalProvider));","map":{"version":3,"sources":["client/providers/ModalProvider.tsx"],"names":[],"mappings":"AAAA,IAAA,KAAA;AAAS,MAAO,CAAA,IAAP,CAAa,uBAAb,EAAqC;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAArC,EAAqC,CAArC;AAAqC,IAAA,KAAA,EAAA,QAAA,EAAA,OAAA,EAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qCAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAQ9C,MAAM,aAAa,GAAO,QAAiB;AAAA,MAAhB;AAAE,IAAA;AAAF,GAAgB;AAC1C,QAAM,CAAC,YAAD,EAAe,eAAf,IAAkC,QAAQ,CAAY,IAAZ,CAAhD;AAEA,QAAM,YAAY,GAAG,OAAO,CAC3B,MACC,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB;AACpB,IAAA,QAAQ,EAAE;AADU,GAArB,CAF0B,EAK3B,EAL2B,CAA5B;AAQA,EAAA,kBAAkB,CAAC,eAAD,CAAlB;AAEA,sBACC,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAA9B,KACE,QADF,EAEE,YAAY,iBACZ,oBAAC,WAAD,qBACC,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,MAAM,EAAE;AAAxB,KAA+B,YAA/B,CADD,CAHF,CADD;AAUA,CAvBD;;AARA,MAAA,CAAO,aAAP,eAiCe,IAAI,CAAuB,aAAvB,CAjCnB","sourcesContent":["import { Modal } from '@rocket.chat/fuselage';\nimport React, { useState, useMemo, memo, FC, ComponentProps, ReactNode } from 'react';\n\nimport { modal } from '../../app/ui-utils/client/lib/modal';\nimport ModalPortal from '../components/ModalPortal';\nimport { ModalContext } from '../contexts/ModalContext';\nimport { useImperativeModal } from '../views/hooks/useImperativeModal';\n\nconst ModalProvider: FC = ({ children }) => {\n\tconst [currentModal, setCurrentModal] = useState<ReactNode>(null);\n\n\tconst contextValue = useMemo<ComponentProps<typeof ModalContext.Provider>['value']>(\n\t\t() =>\n\t\t\tObject.assign(modal, {\n\t\t\t\tsetModal: setCurrentModal,\n\t\t\t}),\n\t\t[],\n\t);\n\n\tuseImperativeModal(setCurrentModal);\n\n\treturn (\n\t\t<ModalContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{currentModal && (\n\t\t\t\t<ModalPortal>\n\t\t\t\t\t<Modal.Backdrop zIndex={9999}>{currentModal}</Modal.Backdrop>\n\t\t\t\t</ModalPortal>\n\t\t\t)}\n\t\t</ModalContext.Provider>\n\t);\n};\n\nexport default memo<typeof ModalProvider>(ModalProvider);\n"],"sourceRoot":""},"sourceType":"module","hash":"7fecbfe6dc9536fb10bb9341762831c0ce3b9095"}

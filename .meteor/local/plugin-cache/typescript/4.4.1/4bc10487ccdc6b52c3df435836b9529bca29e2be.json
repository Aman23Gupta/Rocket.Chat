{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/removeRoomOwner.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/removeRoomOwner.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/removeRoomOwner.ts","inputSourceMap":{"version":3,"file":"server/methods/removeRoomOwner.ts","sourceRoot":"","sources":["server/methods/removeRoomOwner.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { hasPermission, getUsersInRole } from '../../app/authorization/server';\nimport { Users, Subscriptions, Messages } from '../../app/models/server';\nimport { settings } from '../../app/settings/server';\nimport { api } from '../sdk/api';\nimport { Team } from '../sdk';\n\nMeteor.methods({\n\tasync removeRoomOwner(rid, userId) {\n\t\tcheck(rid, String);\n\t\tcheck(userId, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tif (!hasPermission(Meteor.userId(), 'set-owner', rid)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tconst user = Users.findOneById(userId);\n\t\tif (!user || !user.username) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tif (Array.isArray(subscription.roles) === false || subscription.roles.includes('owner') === false) {\n\t\t\tthrow new Meteor.Error('error-user-not-owner', 'User is not an owner', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tconst numOwners = await (await getUsersInRole('owner', rid)).count();\n\n\t\tif (numOwners === 1) {\n\t\t\tthrow new Meteor.Error('error-remove-last-owner', 'This is the last owner. Please set a new owner before removing this one.', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tSubscriptions.removeRoleById(subscription._id, 'owner');\n\n\t\tconst fromUser = Users.findOneById(Meteor.userId());\n\n\t\tMessages.createSubscriptionRoleRemovedWithRoomIdAndUser(rid, user, {\n\t\t\tu: {\n\t\t\t\t_id: fromUser._id,\n\t\t\t\tusername: fromUser.username,\n\t\t\t},\n\t\t\trole: 'owner',\n\t\t});\n\n\t\tconst team = await Team.getOneByMainRoomId(rid);\n\t\tif (team) {\n\t\t\tawait Team.removeRolesFromMember(team._id, userId, ['owner']);\n\t\t}\n\n\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\ttype: 'removed',\n\t\t\t\t_id: 'owner',\n\t\t\t\tu: {\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\tname: user.name,\n\t\t\t\t},\n\t\t\t\tscope: rid,\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/removeRoomOwner.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/removeRoomOwner.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet hasPermission, getUsersInRole;\nmodule.link(\"../../app/authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  getUsersInRole(v) {\n    getUsersInRole = v;\n  }\n\n}, 2);\nlet Users, Subscriptions, Messages;\nmodule.link(\"../../app/models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet api;\nmodule.link(\"../sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 5);\nlet Team;\nmodule.link(\"../sdk\", {\n  Team(v) {\n    Team = v;\n  }\n\n}, 6);\nMeteor.methods({\n  removeRoomOwner(rid, userId) {\n    return Promise.asyncApply(() => {\n      check(rid, String);\n      check(userId, String);\n\n      if (!Meteor.userId()) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'removeRoomOwner'\n        });\n      }\n\n      if (!hasPermission(Meteor.userId(), 'set-owner', rid)) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'removeRoomOwner'\n        });\n      }\n\n      const user = Users.findOneById(userId);\n\n      if (!user || !user.username) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'removeRoomOwner'\n        });\n      }\n\n      const subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\n      if (!subscription) {\n        throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n          method: 'removeRoomOwner'\n        });\n      }\n\n      if (Array.isArray(subscription.roles) === false || subscription.roles.includes('owner') === false) {\n        throw new Meteor.Error('error-user-not-owner', 'User is not an owner', {\n          method: 'removeRoomOwner'\n        });\n      }\n\n      const numOwners = Promise.await(Promise.await(getUsersInRole('owner', rid)).count());\n\n      if (numOwners === 1) {\n        throw new Meteor.Error('error-remove-last-owner', 'This is the last owner. Please set a new owner before removing this one.', {\n          method: 'removeRoomOwner'\n        });\n      }\n\n      Subscriptions.removeRoleById(subscription._id, 'owner');\n      const fromUser = Users.findOneById(Meteor.userId());\n      Messages.createSubscriptionRoleRemovedWithRoomIdAndUser(rid, user, {\n        u: {\n          _id: fromUser._id,\n          username: fromUser.username\n        },\n        role: 'owner'\n      });\n      const team = Promise.await(Team.getOneByMainRoomId(rid));\n\n      if (team) {\n        Promise.await(Team.removeRolesFromMember(team._id, userId, ['owner']));\n      }\n\n      if (settings.get('UI_DisplayRoles')) {\n        api.broadcast('user.roleUpdate', {\n          type: 'removed',\n          _id: 'owner',\n          u: {\n            _id: user._id,\n            username: user.username,\n            name: user.name\n          },\n          scope: rid\n        });\n      }\n\n      return true;\n    });\n  }\n\n});","map":{"version":3,"sources":["server/methods/removeRoomOwner.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { hasPermission, getUsersInRole } from '../../app/authorization/server';\nimport { Users, Subscriptions, Messages } from '../../app/models/server';\nimport { settings } from '../../app/settings/server';\nimport { api } from '../sdk/api';\nimport { Team } from '../sdk';\n\nMeteor.methods({\n\tasync removeRoomOwner(rid, userId) {\n\t\tcheck(rid, String);\n\t\tcheck(userId, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tif (!hasPermission(Meteor.userId(), 'set-owner', rid)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tconst user = Users.findOneById(userId);\n\t\tif (!user || !user.username) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tif (Array.isArray(subscription.roles) === false || subscription.roles.includes('owner') === false) {\n\t\t\tthrow new Meteor.Error('error-user-not-owner', 'User is not an owner', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tconst numOwners = await (await getUsersInRole('owner', rid)).count();\n\n\t\tif (numOwners === 1) {\n\t\t\tthrow new Meteor.Error('error-remove-last-owner', 'This is the last owner. Please set a new owner before removing this one.', {\n\t\t\t\tmethod: 'removeRoomOwner',\n\t\t\t});\n\t\t}\n\n\t\tSubscriptions.removeRoleById(subscription._id, 'owner');\n\n\t\tconst fromUser = Users.findOneById(Meteor.userId());\n\n\t\tMessages.createSubscriptionRoleRemovedWithRoomIdAndUser(rid, user, {\n\t\t\tu: {\n\t\t\t\t_id: fromUser._id,\n\t\t\t\tusername: fromUser.username,\n\t\t\t},\n\t\t\trole: 'owner',\n\t\t});\n\n\t\tconst team = await Team.getOneByMainRoomId(rid);\n\t\tif (team) {\n\t\t\tawait Team.removeRolesFromMember(team._id, userId, ['owner']);\n\t\t}\n\n\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\ttype: 'removed',\n\t\t\t\t_id: 'owner',\n\t\t\t\tu: {\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\tname: user.name,\n\t\t\t\t},\n\t\t\t\tscope: rid,\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"4bc10487ccdc6b52c3df435836b9529bca29e2be"}

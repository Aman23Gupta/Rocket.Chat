{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/modules/streamer/streamer.module.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/modules/streamer/streamer.module.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/modules/streamer/streamer.module.ts","inputSourceMap":{"version":3,"file":"server/modules/streamer/streamer.module.ts","sourceRoot":"","sources":["server/modules/streamer/streamer.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'eventemitter3';\nimport type { IPublication, Rule, Connection, DDPSubscription, IStreamer, IRules, TransformMessage } from 'meteor/rocketchat:streamer';\n\nimport { SystemLogger } from '../../lib/logger/system';\n\nclass StreamerCentralClass extends EventEmitter {\n\tpublic instances: Record<string, Streamer> = {};\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport const StreamerCentral = new StreamerCentralClass();\n\nexport abstract class Streamer extends EventEmitter implements IStreamer {\n\tpublic subscriptions = new Set<DDPSubscription>();\n\n\tprotected subscriptionsByEventName = new Map<string, Set<DDPSubscription>>();\n\n\tpublic retransmit = true;\n\n\tpublic retransmitToSelf = false;\n\n\tpublic serverOnly = false;\n\n\tprivate _allowRead: IRules = {};\n\n\tprivate _allowWrite: IRules = {};\n\n\tprivate _allowEmit: IRules = {};\n\n\tconstructor(\n\t\tpublic name: string,\n\t\t{ retransmit = true, retransmitToSelf = false }: { retransmit?: boolean; retransmitToSelf?: boolean } = {},\n\t) {\n\t\tsuper();\n\n\t\tif (StreamerCentral.instances[name]) {\n\t\t\tconsole.warn('Streamer instance already exists:', name);\n\t\t\treturn StreamerCentral.instances[name];\n\t\t}\n\n\t\tStreamerCentral.instances[name] = this;\n\n\t\tthis.retransmit = retransmit;\n\t\tthis.retransmitToSelf = retransmitToSelf;\n\n\t\tthis.iniPublication();\n\t\t// DDPStreamer doesn't have this\n\t\tthis.initMethod();\n\n\t\tthis.allowRead('none');\n\t\tthis.allowEmit('all');\n\t\tthis.allowWrite('none');\n\t}\n\n\tget subscriptionName(): string {\n\t\treturn `stream-${this.name}`;\n\t}\n\n\tprivate allow(rules: IRules, name: string) {\n\t\treturn (eventName: string | boolean | Rule, fn?: string | boolean | Rule): void => {\n\t\t\tif (fn === undefined) {\n\t\t\t\tfn = eventName;\n\t\t\t\teventName = '__all__';\n\t\t\t}\n\n\t\t\tif (typeof eventName !== 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof fn === 'function') {\n\t\t\t\trules[eventName] = fn;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof fn === 'string' && ['all', 'none', 'logged'].indexOf(fn) === -1) {\n\t\t\t\tSystemLogger.error(`${name} shortcut '${fn}' is invalid`);\n\t\t\t}\n\n\t\t\tif (fn === 'all' || fn === true) {\n\t\t\t\trules[eventName] = async function (): Promise<boolean> {\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (fn === 'none' || fn === false) {\n\t\t\t\trules[eventName] = async function (): Promise<boolean> {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (fn === 'logged') {\n\t\t\t\trules[eventName] = async function (): Promise<boolean> {\n\t\t\t\t\treturn Boolean(this.userId);\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\tallowRead(eventName: string | boolean | Rule, fn?: Rule | 'all' | 'none' | 'logged'): void {\n\t\tthis.allow(this._allowRead, 'allowRead')(eventName, fn);\n\t}\n\n\tallowWrite(eventName: string | boolean | Rule, fn?: Rule | 'all' | 'none' | 'logged'): void {\n\t\tthis.allow(this._allowWrite, 'allowWrite')(eventName, fn);\n\t}\n\n\tallowEmit(eventName: string | boolean | Rule, fn?: Rule | 'all' | 'none' | 'logged'): void {\n\t\tthis.allow(this._allowEmit, 'allowEmit')(eventName, fn);\n\t}\n\n\tprivate isAllowed(rules: IRules) {\n\t\treturn async (scope: IPublication, eventName: string, args: any): Promise<boolean | object> => {\n\t\t\tif (rules[eventName]) {\n\t\t\t\treturn rules[eventName].call(scope, eventName, ...args);\n\t\t\t}\n\n\t\t\treturn rules.__all__.call(scope, eventName, ...args);\n\t\t};\n\t}\n\n\tasync isReadAllowed(scope: IPublication, eventName: string, args: any): Promise<boolean | object> {\n\t\treturn this.isAllowed(this._allowRead)(scope, eventName, args);\n\t}\n\n\tasync isEmitAllowed(scope: IPublication, eventName: string, ...args: any[]): Promise<boolean | object> {\n\t\treturn this.isAllowed(this._allowEmit)(scope, eventName, args);\n\t}\n\n\tasync isWriteAllowed(scope: IPublication, eventName: string, args: any): Promise<boolean | object> {\n\t\treturn this.isAllowed(this._allowWrite)(scope, eventName, args);\n\t}\n\n\taddSubscription(subscription: DDPSubscription, eventName: string): void {\n\t\tthis.subscriptions.add(subscription);\n\n\t\tconst subByEventName = this.subscriptionsByEventName.get(eventName) || new Set();\n\t\tsubByEventName.add(subscription);\n\n\t\tthis.subscriptionsByEventName.set(eventName, subByEventName);\n\t}\n\n\tremoveSubscription(subscription: DDPSubscription, eventName: string): void {\n\t\tthis.subscriptions.delete(subscription);\n\n\t\tconst subByEventName = this.subscriptionsByEventName.get(eventName);\n\t\tif (subByEventName) {\n\t\t\tsubByEventName.delete(subscription);\n\t\t}\n\t}\n\n\tasync _publish(\n\t\tpublication: IPublication,\n\t\teventName: string,\n\t\toptions: boolean | { useCollection?: boolean; args?: any } = false,\n\t): Promise<void> {\n\t\tlet useCollection;\n\t\tlet args = [];\n\n\t\tif (typeof options === 'boolean') {\n\t\t\tuseCollection = options;\n\t\t} else {\n\t\t\tif (options.useCollection) {\n\t\t\t\tuseCollection = options.useCollection;\n\t\t\t}\n\n\t\t\tif (options.args) {\n\t\t\t\targs = options.args;\n\t\t\t}\n\t\t}\n\n\t\tif (eventName.length === 0) {\n\t\t\tpublication.stop();\n\t\t\tthrow new Error('invalid-event-name');\n\t\t}\n\n\t\tif ((await this.isReadAllowed(publication, eventName, args)) !== true) {\n\t\t\tpublication.stop();\n\t\t\tthrow new Error('not-allowed');\n\t\t}\n\n\t\tconst subscription = {\n\t\t\tsubscription: publication,\n\t\t\teventName,\n\t\t};\n\n\t\tthis.addSubscription(subscription, eventName);\n\n\t\tpublication.onStop(() => {\n\t\t\tthis.removeSubscription(subscription, eventName);\n\t\t});\n\n\t\t// DDPStreamer doesn't have this\n\t\tif (useCollection === true) {\n\t\t\t// Collection compatibility\n\t\t\tpublication._session.sendAdded(this.subscriptionName, 'id', {\n\t\t\t\teventName,\n\t\t\t});\n\t\t}\n\n\t\tpublication.ready();\n\n\t\tsuper.emit('_afterPublish', this, publication, eventName, options);\n\t}\n\n\tabstract registerPublication(\n\t\tname: string,\n\t\tfn: (eventName: string, options: boolean | { useCollection?: boolean; args?: any }) => Promise<void>,\n\t): void;\n\n\tiniPublication(): void {\n\t\tconst _publish = this._publish.bind(this);\n\t\tthis.registerPublication(\n\t\t\tthis.subscriptionName,\n\t\t\tasync function (this: IPublication, eventName: string, options: boolean | { useCollection?: boolean; args?: any }) {\n\t\t\t\treturn _publish(this, eventName, options);\n\t\t\t},\n\t\t);\n\t}\n\n\tabstract registerMethod(methods: Record<string, (eventName: string, ...args: any[]) => any>): void;\n\n\tinitMethod(): void {\n\t\tconst isWriteAllowed = this.isWriteAllowed.bind(this);\n\t\tconst __emit = this.__emit.bind(this);\n\t\tconst _emit = this._emit.bind(this);\n\t\tconst { retransmit } = this;\n\n\t\tconst method: Record<string, (eventName: string, ...args: any[]) => any> = {\n\t\t\tasync [this.subscriptionName](this: IPublication, eventName, ...args): Promise<void> {\n\t\t\t\tif ((await isWriteAllowed(this, eventName, args)) !== true) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t__emit(eventName, ...args);\n\n\t\t\t\tif (retransmit === true) {\n\t\t\t\t\t_emit(eventName, args, this.connection, true);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\ttry {\n\t\t\tthis.registerMethod(method);\n\t\t} catch (e) {\n\t\t\tSystemLogger.error(e);\n\t\t}\n\t}\n\n\tabstract changedPayload(collection: string, id: string, fields: Record<string, any>): string | false;\n\n\t_emit(eventName: string, args: any[], origin: Connection | undefined, broadcast: boolean, transform?: TransformMessage): boolean {\n\t\tif (broadcast === true) {\n\t\t\tStreamerCentral.emit('broadcast', this.name, eventName, args);\n\t\t}\n\n\t\tconst subscriptions = this.subscriptionsByEventName.get(eventName);\n\t\tif (!subscriptions || !subscriptions.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (transform) {\n\t\t\tthis.sendToManySubscriptions(subscriptions, origin, eventName, args, transform);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tconst msg = this.changedPayload(this.subscriptionName, 'id', {\n\t\t\teventName,\n\t\t\targs,\n\t\t});\n\n\t\tif (!msg) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.sendToManySubscriptions(subscriptions, origin, eventName, args, msg);\n\n\t\treturn true;\n\t}\n\n\tasync sendToManySubscriptions(\n\t\tsubscriptions: Set<DDPSubscription>,\n\t\torigin: Connection | undefined,\n\t\teventName: string,\n\t\targs: any[],\n\t\tgetMsg: string | TransformMessage,\n\t): Promise<void> {\n\t\tsubscriptions.forEach(async (subscription) => {\n\t\t\tif (this.retransmitToSelf === false && origin && origin === subscription.subscription.connection) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst allowed = await this.isEmitAllowed(subscription.subscription, eventName, ...args);\n\t\t\tif (allowed) {\n\t\t\t\tconst msg = typeof getMsg === 'string' ? getMsg : getMsg(this, subscription, eventName, args, allowed);\n\t\t\t\tif (msg) {\n\t\t\t\t\tsubscription.subscription._session.socket?.send(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\temit(eventName: string | symbol, ...args: any[]): boolean {\n\t\treturn this._emit(eventName as string, args, undefined, true);\n\t}\n\n\t__emit(eventName: string, ...args: any[]): boolean {\n\t\treturn super.emit(eventName, ...args);\n\t}\n\n\temitWithoutBroadcast(eventName: string, ...args: any[]): void {\n\t\tthis._emit(eventName, args, undefined, false);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/modules/streamer/streamer.module.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/modules/streamer/streamer.module.ts"}},"code":"module.export({\n  StreamerCentral: () => StreamerCentral,\n  Streamer: () => Streamer\n});\nlet EventEmitter;\nmodule.link(\"eventemitter3\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 0);\nlet SystemLogger;\nmodule.link(\"../../lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 1);\n\nclass StreamerCentralClass extends EventEmitter {\n  constructor() {\n    super();\n    this.instances = {};\n  }\n\n}\n\nconst StreamerCentral = new StreamerCentralClass();\n\nclass Streamer extends EventEmitter {\n  constructor(name) {\n    let {\n      retransmit = true,\n      retransmitToSelf = false\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    this.name = void 0;\n    this.subscriptions = new Set();\n    this.subscriptionsByEventName = new Map();\n    this.retransmit = true;\n    this.retransmitToSelf = false;\n    this.serverOnly = false;\n    this._allowRead = {};\n    this._allowWrite = {};\n    this._allowEmit = {};\n    this.name = name;\n\n    if (StreamerCentral.instances[name]) {\n      console.warn('Streamer instance already exists:', name);\n      return StreamerCentral.instances[name];\n    }\n\n    StreamerCentral.instances[name] = this;\n    this.retransmit = retransmit;\n    this.retransmitToSelf = retransmitToSelf;\n    this.iniPublication(); // DDPStreamer doesn't have this\n\n    this.initMethod();\n    this.allowRead('none');\n    this.allowEmit('all');\n    this.allowWrite('none');\n  }\n\n  get subscriptionName() {\n    return \"stream-\".concat(this.name);\n  }\n\n  allow(rules, name) {\n    return (eventName, fn) => {\n      if (fn === undefined) {\n        fn = eventName;\n        eventName = '__all__';\n      }\n\n      if (typeof eventName !== 'string') {\n        return;\n      }\n\n      if (typeof fn === 'function') {\n        rules[eventName] = fn;\n        return;\n      }\n\n      if (typeof fn === 'string' && ['all', 'none', 'logged'].indexOf(fn) === -1) {\n        SystemLogger.error(\"\".concat(name, \" shortcut '\").concat(fn, \"' is invalid\"));\n      }\n\n      if (fn === 'all' || fn === true) {\n        rules[eventName] = function () {\n          return Promise.asyncApply(() => {\n            return true;\n          });\n        };\n\n        return;\n      }\n\n      if (fn === 'none' || fn === false) {\n        rules[eventName] = function () {\n          return Promise.asyncApply(() => {\n            return false;\n          });\n        };\n\n        return;\n      }\n\n      if (fn === 'logged') {\n        rules[eventName] = function () {\n          return Promise.asyncApply(() => {\n            return Boolean(this.userId);\n          });\n        };\n      }\n    };\n  }\n\n  allowRead(eventName, fn) {\n    this.allow(this._allowRead, 'allowRead')(eventName, fn);\n  }\n\n  allowWrite(eventName, fn) {\n    this.allow(this._allowWrite, 'allowWrite')(eventName, fn);\n  }\n\n  allowEmit(eventName, fn) {\n    this.allow(this._allowEmit, 'allowEmit')(eventName, fn);\n  }\n\n  isAllowed(rules) {\n    return (scope, eventName, args) => Promise.asyncApply(() => {\n      if (rules[eventName]) {\n        return rules[eventName].call(scope, eventName, ...args);\n      }\n\n      return rules.__all__.call(scope, eventName, ...args);\n    });\n  }\n\n  isReadAllowed(scope, eventName, args) {\n    return Promise.asyncApply(() => {\n      return this.isAllowed(this._allowRead)(scope, eventName, args);\n    });\n  }\n\n  isEmitAllowed(scope, eventName) {\n    return Promise.asyncApply(() => {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      return this.isAllowed(this._allowEmit)(scope, eventName, args);\n    });\n  }\n\n  isWriteAllowed(scope, eventName, args) {\n    return Promise.asyncApply(() => {\n      return this.isAllowed(this._allowWrite)(scope, eventName, args);\n    });\n  }\n\n  addSubscription(subscription, eventName) {\n    this.subscriptions.add(subscription);\n    const subByEventName = this.subscriptionsByEventName.get(eventName) || new Set();\n    subByEventName.add(subscription);\n    this.subscriptionsByEventName.set(eventName, subByEventName);\n  }\n\n  removeSubscription(subscription, eventName) {\n    this.subscriptions.delete(subscription);\n    const subByEventName = this.subscriptionsByEventName.get(eventName);\n\n    if (subByEventName) {\n      subByEventName.delete(subscription);\n    }\n  }\n\n  _publish(publication, eventName) {\n    return Promise.asyncApply(() => {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      let useCollection;\n      let args = [];\n\n      if (typeof options === 'boolean') {\n        useCollection = options;\n      } else {\n        if (options.useCollection) {\n          useCollection = options.useCollection;\n        }\n\n        if (options.args) {\n          args = options.args;\n        }\n      }\n\n      if (eventName.length === 0) {\n        publication.stop();\n        throw new Error('invalid-event-name');\n      }\n\n      if (Promise.await(this.isReadAllowed(publication, eventName, args)) !== true) {\n        publication.stop();\n        throw new Error('not-allowed');\n      }\n\n      const subscription = {\n        subscription: publication,\n        eventName\n      };\n      this.addSubscription(subscription, eventName);\n      publication.onStop(() => {\n        this.removeSubscription(subscription, eventName);\n      }); // DDPStreamer doesn't have this\n\n      if (useCollection === true) {\n        // Collection compatibility\n        publication._session.sendAdded(this.subscriptionName, 'id', {\n          eventName\n        });\n      }\n\n      publication.ready();\n      super.emit('_afterPublish', this, publication, eventName, options);\n    });\n  }\n\n  iniPublication() {\n    const _publish = this._publish.bind(this);\n\n    this.registerPublication(this.subscriptionName, function (eventName, options) {\n      return Promise.asyncApply(() => {\n        return _publish(this, eventName, options);\n      });\n    });\n  }\n\n  initMethod() {\n    const isWriteAllowed = this.isWriteAllowed.bind(this);\n\n    const __emit = this.__emit.bind(this);\n\n    const _emit = this._emit.bind(this);\n\n    const {\n      retransmit\n    } = this;\n    const method = {\n      [this.subscriptionName](eventName) {\n        return Promise.asyncApply(() => {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          if (Promise.await(isWriteAllowed(this, eventName, args)) !== true) {\n            return;\n          }\n\n          __emit(eventName, ...args);\n\n          if (retransmit === true) {\n            _emit(eventName, args, this.connection, true);\n          }\n        });\n      }\n\n    };\n\n    try {\n      this.registerMethod(method);\n    } catch (e) {\n      SystemLogger.error(e);\n    }\n  }\n\n  _emit(eventName, args, origin, broadcast, transform) {\n    if (broadcast === true) {\n      StreamerCentral.emit('broadcast', this.name, eventName, args);\n    }\n\n    const subscriptions = this.subscriptionsByEventName.get(eventName);\n\n    if (!subscriptions || !subscriptions.size) {\n      return false;\n    }\n\n    if (transform) {\n      this.sendToManySubscriptions(subscriptions, origin, eventName, args, transform);\n      return true;\n    }\n\n    const msg = this.changedPayload(this.subscriptionName, 'id', {\n      eventName,\n      args\n    });\n\n    if (!msg) {\n      return false;\n    }\n\n    this.sendToManySubscriptions(subscriptions, origin, eventName, args, msg);\n    return true;\n  }\n\n  sendToManySubscriptions(subscriptions, origin, eventName, args, getMsg) {\n    return Promise.asyncApply(() => {\n      subscriptions.forEach(subscription => Promise.asyncApply(() => {\n        if (this.retransmitToSelf === false && origin && origin === subscription.subscription.connection) {\n          return;\n        }\n\n        const allowed = Promise.await(this.isEmitAllowed(subscription.subscription, eventName, ...args));\n\n        if (allowed) {\n          const msg = typeof getMsg === 'string' ? getMsg : getMsg(this, subscription, eventName, args, allowed);\n\n          if (msg) {\n            var _subscription$subscri;\n\n            (_subscription$subscri = subscription.subscription._session.socket) === null || _subscription$subscri === void 0 ? void 0 : _subscription$subscri.send(msg);\n          }\n        }\n      }));\n    });\n  }\n\n  emit(eventName) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return this._emit(eventName, args, undefined, true);\n  }\n\n  __emit(eventName) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    return super.emit(eventName, ...args);\n  }\n\n  emitWithoutBroadcast(eventName) {\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n\n    this._emit(eventName, args, undefined, false);\n  }\n\n}","map":{"version":3,"sources":["server/modules/streamer/streamer.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'eventemitter3';\nimport type { IPublication, Rule, Connection, DDPSubscription, IStreamer, IRules, TransformMessage } from 'meteor/rocketchat:streamer';\n\nimport { SystemLogger } from '../../lib/logger/system';\n\nclass StreamerCentralClass extends EventEmitter {\n\tpublic instances: Record<string, Streamer> = {};\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport const StreamerCentral = new StreamerCentralClass();\n\nexport abstract class Streamer extends EventEmitter implements IStreamer {\n\tpublic subscriptions = new Set<DDPSubscription>();\n\n\tprotected subscriptionsByEventName = new Map<string, Set<DDPSubscription>>();\n\n\tpublic retransmit = true;\n\n\tpublic retransmitToSelf = false;\n\n\tpublic serverOnly = false;\n\n\tprivate _allowRead: IRules = {};\n\n\tprivate _allowWrite: IRules = {};\n\n\tprivate _allowEmit: IRules = {};\n\n\tconstructor(\n\t\tpublic name: string,\n\t\t{ retransmit = true, retransmitToSelf = false }: { retransmit?: boolean; retransmitToSelf?: boolean } = {},\n\t) {\n\t\tsuper();\n\n\t\tif (StreamerCentral.instances[name]) {\n\t\t\tconsole.warn('Streamer instance already exists:', name);\n\t\t\treturn StreamerCentral.instances[name];\n\t\t}\n\n\t\tStreamerCentral.instances[name] = this;\n\n\t\tthis.retransmit = retransmit;\n\t\tthis.retransmitToSelf = retransmitToSelf;\n\n\t\tthis.iniPublication();\n\t\t// DDPStreamer doesn't have this\n\t\tthis.initMethod();\n\n\t\tthis.allowRead('none');\n\t\tthis.allowEmit('all');\n\t\tthis.allowWrite('none');\n\t}\n\n\tget subscriptionName(): string {\n\t\treturn `stream-${this.name}`;\n\t}\n\n\tprivate allow(rules: IRules, name: string) {\n\t\treturn (eventName: string | boolean | Rule, fn?: string | boolean | Rule): void => {\n\t\t\tif (fn === undefined) {\n\t\t\t\tfn = eventName;\n\t\t\t\teventName = '__all__';\n\t\t\t}\n\n\t\t\tif (typeof eventName !== 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof fn === 'function') {\n\t\t\t\trules[eventName] = fn;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof fn === 'string' && ['all', 'none', 'logged'].indexOf(fn) === -1) {\n\t\t\t\tSystemLogger.error(`${name} shortcut '${fn}' is invalid`);\n\t\t\t}\n\n\t\t\tif (fn === 'all' || fn === true) {\n\t\t\t\trules[eventName] = async function (): Promise<boolean> {\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (fn === 'none' || fn === false) {\n\t\t\t\trules[eventName] = async function (): Promise<boolean> {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (fn === 'logged') {\n\t\t\t\trules[eventName] = async function (): Promise<boolean> {\n\t\t\t\t\treturn Boolean(this.userId);\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\tallowRead(eventName: string | boolean | Rule, fn?: Rule | 'all' | 'none' | 'logged'): void {\n\t\tthis.allow(this._allowRead, 'allowRead')(eventName, fn);\n\t}\n\n\tallowWrite(eventName: string | boolean | Rule, fn?: Rule | 'all' | 'none' | 'logged'): void {\n\t\tthis.allow(this._allowWrite, 'allowWrite')(eventName, fn);\n\t}\n\n\tallowEmit(eventName: string | boolean | Rule, fn?: Rule | 'all' | 'none' | 'logged'): void {\n\t\tthis.allow(this._allowEmit, 'allowEmit')(eventName, fn);\n\t}\n\n\tprivate isAllowed(rules: IRules) {\n\t\treturn async (scope: IPublication, eventName: string, args: any): Promise<boolean | object> => {\n\t\t\tif (rules[eventName]) {\n\t\t\t\treturn rules[eventName].call(scope, eventName, ...args);\n\t\t\t}\n\n\t\t\treturn rules.__all__.call(scope, eventName, ...args);\n\t\t};\n\t}\n\n\tasync isReadAllowed(scope: IPublication, eventName: string, args: any): Promise<boolean | object> {\n\t\treturn this.isAllowed(this._allowRead)(scope, eventName, args);\n\t}\n\n\tasync isEmitAllowed(scope: IPublication, eventName: string, ...args: any[]): Promise<boolean | object> {\n\t\treturn this.isAllowed(this._allowEmit)(scope, eventName, args);\n\t}\n\n\tasync isWriteAllowed(scope: IPublication, eventName: string, args: any): Promise<boolean | object> {\n\t\treturn this.isAllowed(this._allowWrite)(scope, eventName, args);\n\t}\n\n\taddSubscription(subscription: DDPSubscription, eventName: string): void {\n\t\tthis.subscriptions.add(subscription);\n\n\t\tconst subByEventName = this.subscriptionsByEventName.get(eventName) || new Set();\n\t\tsubByEventName.add(subscription);\n\n\t\tthis.subscriptionsByEventName.set(eventName, subByEventName);\n\t}\n\n\tremoveSubscription(subscription: DDPSubscription, eventName: string): void {\n\t\tthis.subscriptions.delete(subscription);\n\n\t\tconst subByEventName = this.subscriptionsByEventName.get(eventName);\n\t\tif (subByEventName) {\n\t\t\tsubByEventName.delete(subscription);\n\t\t}\n\t}\n\n\tasync _publish(\n\t\tpublication: IPublication,\n\t\teventName: string,\n\t\toptions: boolean | { useCollection?: boolean; args?: any } = false,\n\t): Promise<void> {\n\t\tlet useCollection;\n\t\tlet args = [];\n\n\t\tif (typeof options === 'boolean') {\n\t\t\tuseCollection = options;\n\t\t} else {\n\t\t\tif (options.useCollection) {\n\t\t\t\tuseCollection = options.useCollection;\n\t\t\t}\n\n\t\t\tif (options.args) {\n\t\t\t\targs = options.args;\n\t\t\t}\n\t\t}\n\n\t\tif (eventName.length === 0) {\n\t\t\tpublication.stop();\n\t\t\tthrow new Error('invalid-event-name');\n\t\t}\n\n\t\tif ((await this.isReadAllowed(publication, eventName, args)) !== true) {\n\t\t\tpublication.stop();\n\t\t\tthrow new Error('not-allowed');\n\t\t}\n\n\t\tconst subscription = {\n\t\t\tsubscription: publication,\n\t\t\teventName,\n\t\t};\n\n\t\tthis.addSubscription(subscription, eventName);\n\n\t\tpublication.onStop(() => {\n\t\t\tthis.removeSubscription(subscription, eventName);\n\t\t});\n\n\t\t// DDPStreamer doesn't have this\n\t\tif (useCollection === true) {\n\t\t\t// Collection compatibility\n\t\t\tpublication._session.sendAdded(this.subscriptionName, 'id', {\n\t\t\t\teventName,\n\t\t\t});\n\t\t}\n\n\t\tpublication.ready();\n\n\t\tsuper.emit('_afterPublish', this, publication, eventName, options);\n\t}\n\n\tabstract registerPublication(\n\t\tname: string,\n\t\tfn: (eventName: string, options: boolean | { useCollection?: boolean; args?: any }) => Promise<void>,\n\t): void;\n\n\tiniPublication(): void {\n\t\tconst _publish = this._publish.bind(this);\n\t\tthis.registerPublication(\n\t\t\tthis.subscriptionName,\n\t\t\tasync function (this: IPublication, eventName: string, options: boolean | { useCollection?: boolean; args?: any }) {\n\t\t\t\treturn _publish(this, eventName, options);\n\t\t\t},\n\t\t);\n\t}\n\n\tabstract registerMethod(methods: Record<string, (eventName: string, ...args: any[]) => any>): void;\n\n\tinitMethod(): void {\n\t\tconst isWriteAllowed = this.isWriteAllowed.bind(this);\n\t\tconst __emit = this.__emit.bind(this);\n\t\tconst _emit = this._emit.bind(this);\n\t\tconst { retransmit } = this;\n\n\t\tconst method: Record<string, (eventName: string, ...args: any[]) => any> = {\n\t\t\tasync [this.subscriptionName](this: IPublication, eventName, ...args): Promise<void> {\n\t\t\t\tif ((await isWriteAllowed(this, eventName, args)) !== true) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t__emit(eventName, ...args);\n\n\t\t\t\tif (retransmit === true) {\n\t\t\t\t\t_emit(eventName, args, this.connection, true);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\ttry {\n\t\t\tthis.registerMethod(method);\n\t\t} catch (e) {\n\t\t\tSystemLogger.error(e);\n\t\t}\n\t}\n\n\tabstract changedPayload(collection: string, id: string, fields: Record<string, any>): string | false;\n\n\t_emit(eventName: string, args: any[], origin: Connection | undefined, broadcast: boolean, transform?: TransformMessage): boolean {\n\t\tif (broadcast === true) {\n\t\t\tStreamerCentral.emit('broadcast', this.name, eventName, args);\n\t\t}\n\n\t\tconst subscriptions = this.subscriptionsByEventName.get(eventName);\n\t\tif (!subscriptions || !subscriptions.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (transform) {\n\t\t\tthis.sendToManySubscriptions(subscriptions, origin, eventName, args, transform);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tconst msg = this.changedPayload(this.subscriptionName, 'id', {\n\t\t\teventName,\n\t\t\targs,\n\t\t});\n\n\t\tif (!msg) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.sendToManySubscriptions(subscriptions, origin, eventName, args, msg);\n\n\t\treturn true;\n\t}\n\n\tasync sendToManySubscriptions(\n\t\tsubscriptions: Set<DDPSubscription>,\n\t\torigin: Connection | undefined,\n\t\teventName: string,\n\t\targs: any[],\n\t\tgetMsg: string | TransformMessage,\n\t): Promise<void> {\n\t\tsubscriptions.forEach(async (subscription) => {\n\t\t\tif (this.retransmitToSelf === false && origin && origin === subscription.subscription.connection) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst allowed = await this.isEmitAllowed(subscription.subscription, eventName, ...args);\n\t\t\tif (allowed) {\n\t\t\t\tconst msg = typeof getMsg === 'string' ? getMsg : getMsg(this, subscription, eventName, args, allowed);\n\t\t\t\tif (msg) {\n\t\t\t\t\tsubscription.subscription._session.socket?.send(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\temit(eventName: string | symbol, ...args: any[]): boolean {\n\t\treturn this._emit(eventName as string, args, undefined, true);\n\t}\n\n\t__emit(eventName: string, ...args: any[]): boolean {\n\t\treturn super.emit(eventName, ...args);\n\t}\n\n\temitWithoutBroadcast(eventName: string, ...args: any[]): void {\n\t\tthis._emit(eventName, args, undefined, false);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"f54c2a4452e668c0ba00a2dad919767730042dbf"}

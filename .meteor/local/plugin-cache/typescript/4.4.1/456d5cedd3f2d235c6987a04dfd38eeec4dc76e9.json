{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/mailer/server/api.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/mailer/server/api.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/mailer/server/api.ts","inputSourceMap":{"version":3,"file":"app/mailer/server/api.ts","sourceRoot":"","sources":["app/mailer/server/api.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AACrD,OAAO,CAAC,MAAM,YAAY,CAAC;AAC3B,OAAO,CAAC,MAAM,mBAAmB,CAAC;AAClC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,SAAS,MAAM,mBAAmB,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAC;AAEzD,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAE5D,IAAI,aAAiC,CAAC;AACtC,IAAI,aAAiC,CAAC;AACtC,IAAI,IAAwB,CAAC;AAE7B,gDAAgD;AAChD,0EAA0E;AAC1E,IAAI,GAAG,GAAG,IAAI,CAAC;AACf,QAAQ,CAAC,KAAK,CAAS,UAAU,EAAE,CAAC,KAAK,EAAE,EAAE;IAC5C,GAAG,GAAG,KAAK,IAAI,IAAI,CAAC;AACrB,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,GAAW,EAAE,GAAW,EAAE,KAAK,GAAG,EAAE,EAAU,EAAE,CAC1E,GAAG,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,GAAG,SAAS,GAAG,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;AAEpE,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,GAAW,EAAU,EAAE,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAEnH,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,GAAW,EAAE,OAAmC,EAAE,EAAU,EAAE;IACrF,IAAI,CAAC,GAAG,EAAE;QACT,OAAO,EAAE,CAAC;KACV;IAED,MAAM,OAAO,GAAG;QACf,wDAAwD;QACxD,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAS,WAAW,CAAC;QAC5C,wDAAwD;QACxD,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAS,UAAU,CAAC;QAC1C,wDAAwD;QACxD,cAAc,EAAE,QAAQ,CAAC,GAAG,CAAS,UAAU,CAAC,EAAE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;QACtE,GAAG,CAAC,IAAI,CAAC,IAAI;YACZ,CAAC,CAAC;gBACA,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;gBACxC,KAAK,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;aAC5C;YACH,CAAC,CAAC,EAAE,CAAC;QACN,GAAG,IAAI;KACP,CAAC;IAEF,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3G,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,CAAC,WAAW,CAAC,CAAC;AAEpC,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,GAAW,EAAE,OAAmC,EAAE,EAAU,EAAE;IAC5F,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAS,WAAW,CAAC,CAAC;IACnD,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAS,UAAU,CAAC,CAAC;IAEjD,OAAO,OAAO,CAAC,GAAG,EAAE;QACnB,wDAAwD;QACxD,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;QACtD,wDAAwD;QACxD,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;QACnD,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAA4B,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAC/E,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBAC1C,GAAG,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;aACnF;YACD,OAAO,GAAG,CAAC;QACZ,CAAC,EAAE,EAAE,CAAC;KACN,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,IAAY,EAAE,OAAmC,EAAE,EAAU,EAAE;IACnF,IAAI,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE;QAC1C,OAAO,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3B;IAED,IAAI,CAAC,IAAI,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;KACzC;IAED,OAAO,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7D,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,IAAY,EAAU,EAAE;IACjD,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAS,aAAa,CAAC,CAAC;IAChD,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACpD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,QAAyB,EAAE,EAA0B,EAAE,MAAM,GAAG,IAAI,EAAQ,EAAE;IACzG,IAAI,IAAI,GAAG,EAAE,CAAC;IAEd,QAAQ,CAAC,KAAK,CAAS,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;QAC1C,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;QACnB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,CAAS,aAAa,EAAE,GAAG,EAAE;QAC1C,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,QAAyB,EAAE,EAA0B,EAAQ,EAAE;IACjG,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,MAAM,aAAa,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAEvE,QAAQ,CAAC,KAAK,CAAS,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI,IAAI,aAAa,EAAE,CAAC,CAAC;IACtE,QAAQ,CAAC,KAAK,CAAS,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI,IAAI,aAAa,EAAE,CAAC,CAAC;IACtE,QAAQ,CAAC,KAAK,CAAS,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,IAAI,aAAa,EAAE,CAAC,CAAC;IACrE,QAAQ,CAAC,KAAK,CAAS,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;QAC1C,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;QACnB,OAAO,IAAI,IAAI,aAAa,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,QAAQ,CAAC,aAAa,CAAC,CAAC,cAAc,EAAE,cAAc,CAAC,EAAE,GAAG,EAAE;IAC7D,WAAW,CACV,cAAc,EACd,CAAC,KAAK,EAAE,EAAE;QACT,aAAa,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;QACrC,IAAI,GAAG,SAAS,CAAC,GAAG,aAAa,aAAa,aAAa,EAAE,CAAC,CAAC;IAChE,CAAC,EACD,KAAK,CACL,CAAC;IAEF,WAAW,CACV,cAAc,EACd,CAAC,KAAK,EAAE,EAAE;QACT,aAAa,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;QACrC,IAAI,GAAG,SAAS,CAAC,GAAG,aAAa,aAAa,aAAa,EAAE,CAAC,CAAC;IAChE,CAAC,EACD,KAAK,CACL,CAAC;IAEF,IAAI,GAAG,SAAS,CAAC,GAAG,aAAa,aAAa,aAAa,EAAE,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,QAA2B,EAAW,EAAE,CACzE,EAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AAE9E,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,EAC1B,EAAE,EACF,IAAI,EACJ,OAAO,EACP,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,OAAO,GASP,EAAQ,EAAE;IACV,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE;QAC5B,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;KACxC;IAED,IAAI,CAAC,IAAI,EAAE;QACV,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;KACjD;IAED,IAAI,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE;QAC1C,IAAI,GAAG,SAAS,CAAC;KACjB;IAED,MAAM,KAAK,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;IAElE,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAEjF,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,EACpB,EAAE,EACF,IAAI,EACJ,OAAO,EACP,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,OAAO,GAUP,EAAQ,EAAE,CACV,UAAU,CAAC;IACV,EAAE;IACF,IAAI;IACJ,OAAO;IACP,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;IAC/B,IAAI,EAAE,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,SAAS;IACnG,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;IACzC,OAAO;CACP,CAAC,CAAC;AAEJ,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,IAAY,EAAE,IAAc,EAAgB,EAAE;IACxF,IAAI,kBAAkB,CAAC,IAAI,CAAC,EAAE;QAC7B,OAAO;KACP;IAED,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,4BAA4B,EAAE,sBAAsB,EAAE;QAC5E,QAAQ,EAAE,IAAI;KACd,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,GAAuB,EAAE,CAAC,aAAa,CAAC;AAEjE,MAAM,CAAC,MAAM,SAAS,GAAG,GAAuB,EAAE,CAAC,aAAa,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Email } from 'meteor/email';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport _ from 'underscore';\nimport s from 'underscore.string';\nimport juice from 'juice';\nimport stripHtml from 'string-strip-html';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport { settings } from '../../settings/server';\nimport { ISetting } from '../../../definition/ISetting';\nimport { replaceVariables } from './replaceVariables';\nimport { Apps } from '../../apps/server';\nimport { validateEmail } from '../../../lib/emailValidator';\n\nlet contentHeader: string | undefined;\nlet contentFooter: string | undefined;\nlet body: string | undefined;\n\n// define server language for email translations\n// @TODO: change TAPi18n.__ function to use the server language by default\nlet lng = 'en';\nsettings.watch<string>('Language', (value) => {\n\tlng = value || 'en';\n});\n\nexport const replacekey = (str: string, key: string, value = ''): string =>\n\tstr.replace(new RegExp(`(\\\\[${key}\\\\]|__${key}__)`, 'igm'), value);\n\nexport const translate = (str: string): string => replaceVariables(str, (_match, key) => TAPi18n.__(key, { lng }));\n\nexport const replace = (str: string, data: { [key: string]: unknown } = {}): string => {\n\tif (!str) {\n\t\treturn '';\n\t}\n\n\tconst options = {\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_Name: settings.get<string>('Site_Name'),\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_URL: settings.get<string>('Site_Url'),\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_URL_Slash: settings.get<string>('Site_Url')?.replace(/\\/?$/, '/'),\n\t\t...(data.name\n\t\t\t? {\n\t\t\t\t\tfname: s.strLeft(String(data.name), ' '),\n\t\t\t\t\tlname: s.strRightBack(String(data.name), ' '),\n\t\t\t  }\n\t\t\t: {}),\n\t\t...data,\n\t};\n\n\treturn Object.entries(options).reduce((ret, [key, value]) => replacekey(ret, key, value), translate(str));\n};\n\nconst nonEscapeKeys = ['room_path'];\n\nexport const replaceEscaped = (str: string, data: { [key: string]: unknown } = {}): string => {\n\tconst siteName = settings.get<string>('Site_Name');\n\tconst siteUrl = settings.get<string>('Site_Url');\n\n\treturn replace(str, {\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_Name: siteName ? escapeHTML(siteName) : undefined,\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_Url: siteUrl ? escapeHTML(siteUrl) : undefined,\n\t\t...Object.entries(data).reduce<{ [key: string]: string }>((ret, [key, value]) => {\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tret[key] = nonEscapeKeys.includes(key) ? String(value) : escapeHTML(String(value));\n\t\t\t}\n\t\t\treturn ret;\n\t\t}, {}),\n\t});\n};\n\nexport const wrap = (html: string, data: { [key: string]: unknown } = {}): string => {\n\tif (settings.get('email_plain_text_only')) {\n\t\treturn replace(html, data);\n\t}\n\n\tif (!body) {\n\t\tthrow new Error('`body` is not set yet');\n\t}\n\n\treturn replaceEscaped(body.replace('{{body}}', html), data);\n};\nexport const inlinecss = (html: string): string => {\n\tconst css = settings.get<string>('email_style');\n\treturn css ? juice.inlineContent(html, css) : html;\n};\n\nexport const getTemplate = (template: ISetting['_id'], fn: (html: string) => void, escape = true): void => {\n\tlet html = '';\n\n\tsettings.watch<string>(template, (value) => {\n\t\thtml = value || '';\n\t\tfn(escape ? inlinecss(html) : html);\n\t});\n\n\tsettings.watch<string>('email_style', () => {\n\t\tfn(escape ? inlinecss(html) : html);\n\t});\n};\n\nexport const getTemplateWrapped = (template: ISetting['_id'], fn: (html: string) => void): void => {\n\tlet html = '';\n\tconst wrapInlineCSS = _.debounce(() => fn(wrap(inlinecss(html))), 100);\n\n\tsettings.watch<string>('Email_Header', () => html && wrapInlineCSS());\n\tsettings.watch<string>('Email_Footer', () => html && wrapInlineCSS());\n\tsettings.watch<string>('email_style', () => html && wrapInlineCSS());\n\tsettings.watch<string>(template, (value) => {\n\t\thtml = value || '';\n\t\treturn html && wrapInlineCSS();\n\t});\n};\n\nsettings.watchMultiple(['Email_Header', 'Email_Footer'], () => {\n\tgetTemplate(\n\t\t'Email_Header',\n\t\t(value) => {\n\t\t\tcontentHeader = replace(value || '');\n\t\t\tbody = inlinecss(`${contentHeader} {{body}} ${contentFooter}`);\n\t\t},\n\t\tfalse,\n\t);\n\n\tgetTemplate(\n\t\t'Email_Footer',\n\t\t(value) => {\n\t\t\tcontentFooter = replace(value || '');\n\t\t\tbody = inlinecss(`${contentHeader} {{body}} ${contentFooter}`);\n\t\t},\n\t\tfalse,\n\t);\n\n\tbody = inlinecss(`${contentHeader} {{body}} ${contentFooter}`);\n});\n\nexport const checkAddressFormat = (adresses: string | string[]): boolean =>\n\t([] as string[]).concat(adresses).every((address) => validateEmail(address));\n\nexport const sendNoWrap = ({\n\tto,\n\tfrom,\n\treplyTo,\n\tsubject,\n\thtml,\n\ttext,\n\theaders,\n}: {\n\tto: string;\n\tfrom: string;\n\treplyTo?: string;\n\tsubject: string;\n\thtml?: string;\n\ttext?: string;\n\theaders?: string;\n}): void => {\n\tif (!checkAddressFormat(to)) {\n\t\tthrow new Meteor.Error('invalid email');\n\t}\n\n\tif (!text) {\n\t\ttext = html ? stripHtml(html).result : undefined;\n\t}\n\n\tif (settings.get('email_plain_text_only')) {\n\t\thtml = undefined;\n\t}\n\n\tconst email = { to, from, replyTo, subject, html, text, headers };\n\n\tconst eventResult = Promise.await(Apps.triggerEvent('IPreEmailSent', { email }));\n\n\tMeteor.defer(() => Email.send(eventResult || email));\n};\n\nexport const send = ({\n\tto,\n\tfrom,\n\treplyTo,\n\tsubject,\n\thtml,\n\ttext,\n\tdata,\n\theaders,\n}: {\n\tto: string;\n\tfrom: string;\n\treplyTo?: string;\n\tsubject: string;\n\thtml?: string;\n\ttext?: string;\n\theaders?: string;\n\tdata?: { [key: string]: unknown };\n}): void =>\n\tsendNoWrap({\n\t\tto,\n\t\tfrom,\n\t\treplyTo,\n\t\tsubject: replace(subject, data),\n\t\ttext: (text && replace(text, data)) || (html && stripHtml(replace(html, data)).result) || undefined,\n\t\thtml: html ? wrap(html, data) : undefined,\n\t\theaders,\n\t});\n\nexport const checkAddressFormatAndThrow = (from: string, func: Function): asserts from => {\n\tif (checkAddressFormat(from)) {\n\t\treturn;\n\t}\n\n\tthrow new Meteor.Error('error-invalid-from-address', 'Invalid from address', {\n\t\tfunction: func,\n\t});\n};\n\nexport const getHeader = (): string | undefined => contentHeader;\n\nexport const getFooter = (): string | undefined => contentFooter;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/mailer/server/api.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/mailer/server/api.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  replacekey: () => replacekey,\n  translate: () => translate,\n  replace: () => replace,\n  replaceEscaped: () => replaceEscaped,\n  wrap: () => wrap,\n  inlinecss: () => inlinecss,\n  getTemplate: () => getTemplate,\n  getTemplateWrapped: () => getTemplateWrapped,\n  checkAddressFormat: () => checkAddressFormat,\n  sendNoWrap: () => sendNoWrap,\n  send: () => send,\n  checkAddressFormatAndThrow: () => checkAddressFormatAndThrow,\n  getHeader: () => getHeader,\n  getFooter: () => getFooter\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Email;\nmodule.link(\"meteor/email\", {\n  Email(v) {\n    Email = v;\n  }\n\n}, 1);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 2);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 3);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 4);\nlet juice;\nmodule.link(\"juice\", {\n  default(v) {\n    juice = v;\n  }\n\n}, 5);\nlet stripHtml;\nmodule.link(\"string-strip-html\", {\n  default(v) {\n    stripHtml = v;\n  }\n\n}, 6);\nlet escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n\n}, 7);\nlet settings;\nmodule.link(\"../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 8);\nlet replaceVariables;\nmodule.link(\"./replaceVariables\", {\n  replaceVariables(v) {\n    replaceVariables = v;\n  }\n\n}, 9);\nlet Apps;\nmodule.link(\"../../apps/server\", {\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 10);\nlet validateEmail;\nmodule.link(\"../../../lib/emailValidator\", {\n  validateEmail(v) {\n    validateEmail = v;\n  }\n\n}, 11);\nlet contentHeader;\nlet contentFooter;\nlet body; // define server language for email translations\n// @TODO: change TAPi18n.__ function to use the server language by default\n\nlet lng = 'en';\nsettings.watch('Language', value => {\n  lng = value || 'en';\n});\n\nconst replacekey = function (str, key) {\n  let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return str.replace(new RegExp(\"(\\\\[\".concat(key, \"\\\\]|__\").concat(key, \"__)\"), 'igm'), value);\n};\n\nconst translate = str => replaceVariables(str, (_match, key) => TAPi18n.__(key, {\n  lng\n}));\n\nconst replace = function (str) {\n  var _settings$get;\n\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!str) {\n    return '';\n  }\n\n  const options = _objectSpread(_objectSpread({\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    Site_Name: settings.get('Site_Name'),\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    Site_URL: settings.get('Site_Url'),\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    Site_URL_Slash: (_settings$get = settings.get('Site_Url')) === null || _settings$get === void 0 ? void 0 : _settings$get.replace(/\\/?$/, '/')\n  }, data.name ? {\n    fname: s.strLeft(String(data.name), ' '),\n    lname: s.strRightBack(String(data.name), ' ')\n  } : {}), data);\n\n  return Object.entries(options).reduce((ret, _ref) => {\n    let [key, value] = _ref;\n    return replacekey(ret, key, value);\n  }, translate(str));\n};\n\nconst nonEscapeKeys = ['room_path'];\n\nconst replaceEscaped = function (str) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const siteName = settings.get('Site_Name');\n  const siteUrl = settings.get('Site_Url');\n  return replace(str, _objectSpread({\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    Site_Name: siteName ? escapeHTML(siteName) : undefined,\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    Site_Url: siteUrl ? escapeHTML(siteUrl) : undefined\n  }, Object.entries(data).reduce((ret, _ref2) => {\n    let [key, value] = _ref2;\n\n    if (value !== undefined && value !== null) {\n      ret[key] = nonEscapeKeys.includes(key) ? String(value) : escapeHTML(String(value));\n    }\n\n    return ret;\n  }, {})));\n};\n\nconst wrap = function (html) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (settings.get('email_plain_text_only')) {\n    return replace(html, data);\n  }\n\n  if (!body) {\n    throw new Error('`body` is not set yet');\n  }\n\n  return replaceEscaped(body.replace('{{body}}', html), data);\n};\n\nconst inlinecss = html => {\n  const css = settings.get('email_style');\n  return css ? juice.inlineContent(html, css) : html;\n};\n\nconst getTemplate = function (template, fn) {\n  let escape = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let html = '';\n  settings.watch(template, value => {\n    html = value || '';\n    fn(escape ? inlinecss(html) : html);\n  });\n  settings.watch('email_style', () => {\n    fn(escape ? inlinecss(html) : html);\n  });\n};\n\nconst getTemplateWrapped = (template, fn) => {\n  let html = '';\n\n  const wrapInlineCSS = _.debounce(() => fn(wrap(inlinecss(html))), 100);\n\n  settings.watch('Email_Header', () => html && wrapInlineCSS());\n  settings.watch('Email_Footer', () => html && wrapInlineCSS());\n  settings.watch('email_style', () => html && wrapInlineCSS());\n  settings.watch(template, value => {\n    html = value || '';\n    return html && wrapInlineCSS();\n  });\n};\n\nsettings.watchMultiple(['Email_Header', 'Email_Footer'], () => {\n  getTemplate('Email_Header', value => {\n    contentHeader = replace(value || '');\n    body = inlinecss(\"\".concat(contentHeader, \" {{body}} \").concat(contentFooter));\n  }, false);\n  getTemplate('Email_Footer', value => {\n    contentFooter = replace(value || '');\n    body = inlinecss(\"\".concat(contentHeader, \" {{body}} \").concat(contentFooter));\n  }, false);\n  body = inlinecss(\"\".concat(contentHeader, \" {{body}} \").concat(contentFooter));\n});\n\nconst checkAddressFormat = adresses => [].concat(adresses).every(address => validateEmail(address));\n\nconst sendNoWrap = _ref3 => {\n  let {\n    to,\n    from,\n    replyTo,\n    subject,\n    html,\n    text,\n    headers\n  } = _ref3;\n\n  if (!checkAddressFormat(to)) {\n    throw new Meteor.Error('invalid email');\n  }\n\n  if (!text) {\n    text = html ? stripHtml(html).result : undefined;\n  }\n\n  if (settings.get('email_plain_text_only')) {\n    html = undefined;\n  }\n\n  const email = {\n    to,\n    from,\n    replyTo,\n    subject,\n    html,\n    text,\n    headers\n  };\n  const eventResult = Promise.await(Apps.triggerEvent('IPreEmailSent', {\n    email\n  }));\n  Meteor.defer(() => Email.send(eventResult || email));\n};\n\nconst send = _ref4 => {\n  let {\n    to,\n    from,\n    replyTo,\n    subject,\n    html,\n    text,\n    data,\n    headers\n  } = _ref4;\n  return sendNoWrap({\n    to,\n    from,\n    replyTo,\n    subject: replace(subject, data),\n    text: text && replace(text, data) || html && stripHtml(replace(html, data)).result || undefined,\n    html: html ? wrap(html, data) : undefined,\n    headers\n  });\n};\n\nconst checkAddressFormatAndThrow = (from, func) => {\n  if (checkAddressFormat(from)) {\n    return;\n  }\n\n  throw new Meteor.Error('error-invalid-from-address', 'Invalid from address', {\n    function: func\n  });\n};\n\nconst getHeader = () => contentHeader;\n\nconst getFooter = () => contentFooter;","map":{"version":3,"sources":["app/mailer/server/api.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Email } from 'meteor/email';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport _ from 'underscore';\nimport s from 'underscore.string';\nimport juice from 'juice';\nimport stripHtml from 'string-strip-html';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport { settings } from '../../settings/server';\nimport { ISetting } from '../../../definition/ISetting';\nimport { replaceVariables } from './replaceVariables';\nimport { Apps } from '../../apps/server';\nimport { validateEmail } from '../../../lib/emailValidator';\n\nlet contentHeader: string | undefined;\nlet contentFooter: string | undefined;\nlet body: string | undefined;\n\n// define server language for email translations\n// @TODO: change TAPi18n.__ function to use the server language by default\nlet lng = 'en';\nsettings.watch<string>('Language', (value) => {\n\tlng = value || 'en';\n});\n\nexport const replacekey = (str: string, key: string, value = ''): string =>\n\tstr.replace(new RegExp(`(\\\\[${key}\\\\]|__${key}__)`, 'igm'), value);\n\nexport const translate = (str: string): string => replaceVariables(str, (_match, key) => TAPi18n.__(key, { lng }));\n\nexport const replace = (str: string, data: { [key: string]: unknown } = {}): string => {\n\tif (!str) {\n\t\treturn '';\n\t}\n\n\tconst options = {\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_Name: settings.get<string>('Site_Name'),\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_URL: settings.get<string>('Site_Url'),\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_URL_Slash: settings.get<string>('Site_Url')?.replace(/\\/?$/, '/'),\n\t\t...(data.name\n\t\t\t? {\n\t\t\t\t\tfname: s.strLeft(String(data.name), ' '),\n\t\t\t\t\tlname: s.strRightBack(String(data.name), ' '),\n\t\t\t  }\n\t\t\t: {}),\n\t\t...data,\n\t};\n\n\treturn Object.entries(options).reduce((ret, [key, value]) => replacekey(ret, key, value), translate(str));\n};\n\nconst nonEscapeKeys = ['room_path'];\n\nexport const replaceEscaped = (str: string, data: { [key: string]: unknown } = {}): string => {\n\tconst siteName = settings.get<string>('Site_Name');\n\tconst siteUrl = settings.get<string>('Site_Url');\n\n\treturn replace(str, {\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_Name: siteName ? escapeHTML(siteName) : undefined,\n\t\t// eslint-disable-next-line @typescript-eslint/camelcase\n\t\tSite_Url: siteUrl ? escapeHTML(siteUrl) : undefined,\n\t\t...Object.entries(data).reduce<{ [key: string]: string }>((ret, [key, value]) => {\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tret[key] = nonEscapeKeys.includes(key) ? String(value) : escapeHTML(String(value));\n\t\t\t}\n\t\t\treturn ret;\n\t\t}, {}),\n\t});\n};\n\nexport const wrap = (html: string, data: { [key: string]: unknown } = {}): string => {\n\tif (settings.get('email_plain_text_only')) {\n\t\treturn replace(html, data);\n\t}\n\n\tif (!body) {\n\t\tthrow new Error('`body` is not set yet');\n\t}\n\n\treturn replaceEscaped(body.replace('{{body}}', html), data);\n};\nexport const inlinecss = (html: string): string => {\n\tconst css = settings.get<string>('email_style');\n\treturn css ? juice.inlineContent(html, css) : html;\n};\n\nexport const getTemplate = (template: ISetting['_id'], fn: (html: string) => void, escape = true): void => {\n\tlet html = '';\n\n\tsettings.watch<string>(template, (value) => {\n\t\thtml = value || '';\n\t\tfn(escape ? inlinecss(html) : html);\n\t});\n\n\tsettings.watch<string>('email_style', () => {\n\t\tfn(escape ? inlinecss(html) : html);\n\t});\n};\n\nexport const getTemplateWrapped = (template: ISetting['_id'], fn: (html: string) => void): void => {\n\tlet html = '';\n\tconst wrapInlineCSS = _.debounce(() => fn(wrap(inlinecss(html))), 100);\n\n\tsettings.watch<string>('Email_Header', () => html && wrapInlineCSS());\n\tsettings.watch<string>('Email_Footer', () => html && wrapInlineCSS());\n\tsettings.watch<string>('email_style', () => html && wrapInlineCSS());\n\tsettings.watch<string>(template, (value) => {\n\t\thtml = value || '';\n\t\treturn html && wrapInlineCSS();\n\t});\n};\n\nsettings.watchMultiple(['Email_Header', 'Email_Footer'], () => {\n\tgetTemplate(\n\t\t'Email_Header',\n\t\t(value) => {\n\t\t\tcontentHeader = replace(value || '');\n\t\t\tbody = inlinecss(`${contentHeader} {{body}} ${contentFooter}`);\n\t\t},\n\t\tfalse,\n\t);\n\n\tgetTemplate(\n\t\t'Email_Footer',\n\t\t(value) => {\n\t\t\tcontentFooter = replace(value || '');\n\t\t\tbody = inlinecss(`${contentHeader} {{body}} ${contentFooter}`);\n\t\t},\n\t\tfalse,\n\t);\n\n\tbody = inlinecss(`${contentHeader} {{body}} ${contentFooter}`);\n});\n\nexport const checkAddressFormat = (adresses: string | string[]): boolean =>\n\t([] as string[]).concat(adresses).every((address) => validateEmail(address));\n\nexport const sendNoWrap = ({\n\tto,\n\tfrom,\n\treplyTo,\n\tsubject,\n\thtml,\n\ttext,\n\theaders,\n}: {\n\tto: string;\n\tfrom: string;\n\treplyTo?: string;\n\tsubject: string;\n\thtml?: string;\n\ttext?: string;\n\theaders?: string;\n}): void => {\n\tif (!checkAddressFormat(to)) {\n\t\tthrow new Meteor.Error('invalid email');\n\t}\n\n\tif (!text) {\n\t\ttext = html ? stripHtml(html).result : undefined;\n\t}\n\n\tif (settings.get('email_plain_text_only')) {\n\t\thtml = undefined;\n\t}\n\n\tconst email = { to, from, replyTo, subject, html, text, headers };\n\n\tconst eventResult = Promise.await(Apps.triggerEvent('IPreEmailSent', { email }));\n\n\tMeteor.defer(() => Email.send(eventResult || email));\n};\n\nexport const send = ({\n\tto,\n\tfrom,\n\treplyTo,\n\tsubject,\n\thtml,\n\ttext,\n\tdata,\n\theaders,\n}: {\n\tto: string;\n\tfrom: string;\n\treplyTo?: string;\n\tsubject: string;\n\thtml?: string;\n\ttext?: string;\n\theaders?: string;\n\tdata?: { [key: string]: unknown };\n}): void =>\n\tsendNoWrap({\n\t\tto,\n\t\tfrom,\n\t\treplyTo,\n\t\tsubject: replace(subject, data),\n\t\ttext: (text && replace(text, data)) || (html && stripHtml(replace(html, data)).result) || undefined,\n\t\thtml: html ? wrap(html, data) : undefined,\n\t\theaders,\n\t});\n\nexport const checkAddressFormatAndThrow = (from: string, func: Function): asserts from => {\n\tif (checkAddressFormat(from)) {\n\t\treturn;\n\t}\n\n\tthrow new Meteor.Error('error-invalid-from-address', 'Invalid from address', {\n\t\tfunction: func,\n\t});\n};\n\nexport const getHeader = (): string | undefined => contentHeader;\n\nexport const getFooter = (): string | undefined => contentFooter;\n"],"sourceRoot":""},"sourceType":"module","hash":"456d5cedd3f2d235c6987a04dfd38eeec4dc76e9"}

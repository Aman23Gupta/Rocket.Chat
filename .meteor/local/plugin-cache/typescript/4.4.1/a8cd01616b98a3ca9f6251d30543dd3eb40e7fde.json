{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/onAgentAssignmentFailed.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/hooks/onAgentAssignmentFailed.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/onAgentAssignmentFailed.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/hooks/onAgentAssignmentFailed.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/hooks/onAgentAssignmentFailed.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjG,OAAO,EAAE,YAAY,EAAE,MAAM,qDAAqD,CAAC;AACnF,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,sBAAsB,EAAE,MAAM,+CAA+C,CAAC;AAEvF,MAAM,6BAA6B,GAAG,KAAK,EAAE,EAC5C,OAAO,EACP,IAAI,EACJ,OAAO,GAQP,EAAgB,EAAE;IAClB,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,EAAE;QACtB,QAAQ,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;QACjE,OAAO;KACP;IAED,IAAI,IAAI,CAAC,MAAM,EAAE;QAChB,QAAQ,CAAC,KAAK,CAAC,sEAAsE,CAAC,CAAC;QACvF,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QAE7B,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;QACnC,eAAe,CAAC,iCAAiC,CAAC,SAAS,CAAC,CAAC;QAC7D,aAAa,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAC1C,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACrC,sBAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAErC,MAAM,UAAU,GAAG,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAE1D,MAAM,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAErC,QAAQ,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC3C,OAAO;KACP;IAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAAE;QAC5C,QAAQ,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;QAC/D,OAAO;KACP;IAED,MAAM,EAAE,sBAAsB,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,EAAE,sBAAsB,EAAE,GAAG,OAAO,CAAC;IAC7F,IAAI,CAAC,sBAAsB,EAAE;QAC5B,QAAQ,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;QAC5E,OAAO;KACP;IAED,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC;IAEhD,IAAI,CAAC,eAAe,IAAI,CAAC,eAAe,IAAI,eAAe,KAAK,eAAe,EAAE;QAChF,QAAQ,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;QAC1E,OAAO;KACP;IAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACvB,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAEF,SAAS,CAAC,GAAG,CACZ,kCAAkC,EAClC,6BAA6B,EAC7B,SAAS,CAAC,QAAQ,CAAC,IAAI,EACvB,kCAAkC,CAClC,CAAC","sourcesContent":["import { callbacks } from '../../../../../lib/callbacks';\nimport { LivechatInquiry, Subscriptions, LivechatRooms } from '../../../../../app/models/server';\nimport { queueInquiry } from '../../../../../app/livechat/server/lib/QueueManager';\nimport { settings } from '../../../../../app/settings/server';\nimport { cbLogger } from '../lib/logger';\nimport { dispatchAgentDelegated } from '../../../../../app/livechat/server/lib/Helper';\n\nconst handleOnAgentAssignmentFailed = async ({\n\tinquiry,\n\troom,\n\toptions,\n}: {\n\tinquiry: any;\n\troom: any;\n\toptions: {\n\t\tforwardingToDepartment?: { oldDepartmentId: string; transferData: any };\n\t\tclientAction?: boolean;\n\t};\n}): Promise<any> => {\n\tif (!inquiry || !room) {\n\t\tcbLogger.debug('Skipping callback. No inquiry or room provided');\n\t\treturn;\n\t}\n\n\tif (room.onHold) {\n\t\tcbLogger.debug('Room is on hold. Removing current assignations before queueing again');\n\t\tconst { _id: roomId } = room;\n\n\t\tconst { _id: inquiryId } = inquiry;\n\t\tLivechatInquiry.queueInquiryAndRemoveDefaultAgent(inquiryId);\n\t\tLivechatRooms.removeAgentByRoomId(roomId);\n\t\tSubscriptions.removeByRoomId(roomId);\n\t\tdispatchAgentDelegated(roomId, null);\n\n\t\tconst newInquiry = LivechatInquiry.findOneById(inquiryId);\n\n\t\tawait queueInquiry(room, newInquiry);\n\n\t\tcbLogger.debug('Room queued successfully');\n\t\treturn;\n\t}\n\n\tif (!settings.get('Livechat_waiting_queue')) {\n\t\tcbLogger.debug('Skipping callback. Queue disabled by setting');\n\t\treturn;\n\t}\n\n\tconst { forwardingToDepartment: { oldDepartmentId } = {}, forwardingToDepartment } = options;\n\tif (!forwardingToDepartment) {\n\t\tcbLogger.debug('Skipping callback. Room not being forwarded to department');\n\t\treturn;\n\t}\n\n\tconst { department: newDepartmentId } = inquiry;\n\n\tif (!newDepartmentId || !oldDepartmentId || newDepartmentId === oldDepartmentId) {\n\t\tcbLogger.debug('Skipping callback. New and old departments are the same');\n\t\treturn;\n\t}\n\n\troom.chatQueued = true;\n\treturn room;\n};\n\ncallbacks.add(\n\t'livechat.onAgentAssignmentFailed',\n\thandleOnAgentAssignmentFailed,\n\tcallbacks.priority.HIGH,\n\t'livechat-agent-assignment-failed',\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/onAgentAssignmentFailed.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/hooks/onAgentAssignmentFailed.ts"}},"code":"let callbacks;\nmodule.link(\"../../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 0);\nlet LivechatInquiry, Subscriptions, LivechatRooms;\nmodule.link(\"../../../../../app/models/server\", {\n  LivechatInquiry(v) {\n    LivechatInquiry = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 1);\nlet queueInquiry;\nmodule.link(\"../../../../../app/livechat/server/lib/QueueManager\", {\n  queueInquiry(v) {\n    queueInquiry = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet cbLogger;\nmodule.link(\"../lib/logger\", {\n  cbLogger(v) {\n    cbLogger = v;\n  }\n\n}, 4);\nlet dispatchAgentDelegated;\nmodule.link(\"../../../../../app/livechat/server/lib/Helper\", {\n  dispatchAgentDelegated(v) {\n    dispatchAgentDelegated = v;\n  }\n\n}, 5);\n\nconst handleOnAgentAssignmentFailed = _ref => Promise.asyncApply(() => {\n  let {\n    inquiry,\n    room,\n    options\n  } = _ref;\n\n  if (!inquiry || !room) {\n    cbLogger.debug('Skipping callback. No inquiry or room provided');\n    return;\n  }\n\n  if (room.onHold) {\n    cbLogger.debug('Room is on hold. Removing current assignations before queueing again');\n    const {\n      _id: roomId\n    } = room;\n    const {\n      _id: inquiryId\n    } = inquiry;\n    LivechatInquiry.queueInquiryAndRemoveDefaultAgent(inquiryId);\n    LivechatRooms.removeAgentByRoomId(roomId);\n    Subscriptions.removeByRoomId(roomId);\n    dispatchAgentDelegated(roomId, null);\n    const newInquiry = LivechatInquiry.findOneById(inquiryId);\n    Promise.await(queueInquiry(room, newInquiry));\n    cbLogger.debug('Room queued successfully');\n    return;\n  }\n\n  if (!settings.get('Livechat_waiting_queue')) {\n    cbLogger.debug('Skipping callback. Queue disabled by setting');\n    return;\n  }\n\n  const {\n    forwardingToDepartment: {\n      oldDepartmentId\n    } = {},\n    forwardingToDepartment\n  } = options;\n\n  if (!forwardingToDepartment) {\n    cbLogger.debug('Skipping callback. Room not being forwarded to department');\n    return;\n  }\n\n  const {\n    department: newDepartmentId\n  } = inquiry;\n\n  if (!newDepartmentId || !oldDepartmentId || newDepartmentId === oldDepartmentId) {\n    cbLogger.debug('Skipping callback. New and old departments are the same');\n    return;\n  }\n\n  room.chatQueued = true;\n  return room;\n});\n\ncallbacks.add('livechat.onAgentAssignmentFailed', handleOnAgentAssignmentFailed, callbacks.priority.HIGH, 'livechat-agent-assignment-failed');","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/hooks/onAgentAssignmentFailed.ts"],"names":[],"mappings":"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","sourcesContent":["import { callbacks } from '../../../../../lib/callbacks';\nimport { LivechatInquiry, Subscriptions, LivechatRooms } from '../../../../../app/models/server';\nimport { queueInquiry } from '../../../../../app/livechat/server/lib/QueueManager';\nimport { settings } from '../../../../../app/settings/server';\nimport { cbLogger } from '../lib/logger';\nimport { dispatchAgentDelegated } from '../../../../../app/livechat/server/lib/Helper';\n\nconst handleOnAgentAssignmentFailed = async ({\n\tinquiry,\n\troom,\n\toptions,\n}: {\n\tinquiry: any;\n\troom: any;\n\toptions: {\n\t\tforwardingToDepartment?: { oldDepartmentId: string; transferData: any };\n\t\tclientAction?: boolean;\n\t};\n}): Promise<any> => {\n\tif (!inquiry || !room) {\n\t\tcbLogger.debug('Skipping callback. No inquiry or room provided');\n\t\treturn;\n\t}\n\n\tif (room.onHold) {\n\t\tcbLogger.debug('Room is on hold. Removing current assignations before queueing again');\n\t\tconst { _id: roomId } = room;\n\n\t\tconst { _id: inquiryId } = inquiry;\n\t\tLivechatInquiry.queueInquiryAndRemoveDefaultAgent(inquiryId);\n\t\tLivechatRooms.removeAgentByRoomId(roomId);\n\t\tSubscriptions.removeByRoomId(roomId);\n\t\tdispatchAgentDelegated(roomId, null);\n\n\t\tconst newInquiry = LivechatInquiry.findOneById(inquiryId);\n\n\t\tawait queueInquiry(room, newInquiry);\n\n\t\tcbLogger.debug('Room queued successfully');\n\t\treturn;\n\t}\n\n\tif (!settings.get('Livechat_waiting_queue')) {\n\t\tcbLogger.debug('Skipping callback. Queue disabled by setting');\n\t\treturn;\n\t}\n\n\tconst { forwardingToDepartment: { oldDepartmentId } = {}, forwardingToDepartment } = options;\n\tif (!forwardingToDepartment) {\n\t\tcbLogger.debug('Skipping callback. Room not being forwarded to department');\n\t\treturn;\n\t}\n\n\tconst { department: newDepartmentId } = inquiry;\n\n\tif (!newDepartmentId || !oldDepartmentId || newDepartmentId === oldDepartmentId) {\n\t\tcbLogger.debug('Skipping callback. New and old departments are the same');\n\t\treturn;\n\t}\n\n\troom.chatQueued = true;\n\treturn room;\n};\n\ncallbacks.add(\n\t'livechat.onAgentAssignmentFailed',\n\thandleOnAgentAssignmentFailed,\n\tcallbacks.priority.HIGH,\n\t'livechat-agent-assignment-failed',\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"a8cd01616b98a3ca9f6251d30543dd3eb40e7fde"}

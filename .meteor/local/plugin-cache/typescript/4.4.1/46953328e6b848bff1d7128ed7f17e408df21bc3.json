{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/webdav/server/methods/addWebdavAccount.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/webdav/server/methods/addWebdavAccount.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/webdav/server/methods/addWebdavAccount.ts","inputSourceMap":{"version":3,"file":"app/webdav/server/methods/addWebdavAccount.ts","sourceRoot":"","sources":["app/webdav/server/methods/addWebdavAccount.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\n\nimport { settings } from '../../../settings/server';\nimport { WebdavAccounts } from '../../../models/server/raw';\nimport { WebdavClientAdapter } from '../lib/webdavClientAdapter';\nimport { Notifications } from '../../../notifications/server';\n\nMeteor.methods({\n\tasync addWebdavAccount(formData) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\tserverURL: String,\n\t\t\t\tusername: String,\n\t\t\t\tpassword: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t}),\n\t\t);\n\n\t\tconst duplicateAccount = await WebdavAccounts.findOneByUserIdServerUrlAndUsername(\n\t\t\t{ userId, serverURL: formData.serverURL, username: formData.username },\n\t\t\t{},\n\t\t);\n\n\t\tif (duplicateAccount !== null) {\n\t\t\tthrow new Meteor.Error('duplicated-account', 'Account not found', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tconst client = new WebdavClientAdapter(formData.serverURL, {\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t});\n\n\t\t\tconst accountData = {\n\t\t\t\tuserId,\n\t\t\t\tserverURL: formData.serverURL,\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t\tname: formData.name ?? '',\n\t\t\t};\n\n\t\t\tawait client.stat('/');\n\t\t\tawait WebdavAccounts.insertOne(accountData);\n\t\t\tNotifications.notifyUser(userId, 'webdav', {\n\t\t\t\ttype: 'changed',\n\t\t\t\taccount: accountData,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t},\n\n\tasync addWebdavAccountByToken(data) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(\n\t\t\tdata,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\tserverURL: String,\n\t\t\t\ttoken: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t}),\n\t\t);\n\n\t\ttry {\n\t\t\tconst client = new WebdavClientAdapter(data.serverURL, { token: data.token });\n\n\t\t\tconst accountData = {\n\t\t\t\tuserId,\n\t\t\t\tserverURL: data.serverURL,\n\t\t\t\ttoken: data.token,\n\t\t\t\tname: data.name ?? '',\n\t\t\t};\n\n\t\t\tawait client.stat('/');\n\t\t\tawait WebdavAccounts.updateOne(\n\t\t\t\t{\n\t\t\t\t\tuserId,\n\t\t\t\t\tserverURL: data.serverURL,\n\t\t\t\t\tname: data.name ?? '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$set: accountData,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tupsert: true,\n\t\t\t\t},\n\t\t\t);\n\t\t\tNotifications.notifyUser(userId, 'webdav', {\n\t\t\t\ttype: 'changed',\n\t\t\t\taccount: accountData,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/webdav/server/methods/addWebdavAccount.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webdav/server/methods/addWebdavAccount.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet WebdavAccounts;\nmodule.link(\"../../../models/server/raw\", {\n  WebdavAccounts(v) {\n    WebdavAccounts = v;\n  }\n\n}, 3);\nlet WebdavClientAdapter;\nmodule.link(\"../lib/webdavClientAdapter\", {\n  WebdavClientAdapter(v) {\n    WebdavClientAdapter = v;\n  }\n\n}, 4);\nlet Notifications;\nmodule.link(\"../../../notifications/server\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 5);\nMeteor.methods({\n  addWebdavAccount(formData) {\n    return Promise.asyncApply(() => {\n      const userId = Meteor.userId();\n\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid User', {\n          method: 'addWebdavAccount'\n        });\n      }\n\n      if (!settings.get('Webdav_Integration_Enabled')) {\n        throw new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n          method: 'addWebdavAccount'\n        });\n      }\n\n      check(formData, Match.ObjectIncluding({\n        serverURL: String,\n        username: String,\n        password: String,\n        name: Match.Maybe(String)\n      }));\n      const duplicateAccount = Promise.await(WebdavAccounts.findOneByUserIdServerUrlAndUsername({\n        userId,\n        serverURL: formData.serverURL,\n        username: formData.username\n      }, {}));\n\n      if (duplicateAccount !== null) {\n        throw new Meteor.Error('duplicated-account', 'Account not found', {\n          method: 'addWebdavAccount'\n        });\n      }\n\n      try {\n        var _formData$name;\n\n        const client = new WebdavClientAdapter(formData.serverURL, {\n          username: formData.username,\n          password: formData.password\n        });\n        const accountData = {\n          userId,\n          serverURL: formData.serverURL,\n          username: formData.username,\n          password: formData.password,\n          name: (_formData$name = formData.name) !== null && _formData$name !== void 0 ? _formData$name : ''\n        };\n        Promise.await(client.stat('/'));\n        Promise.await(WebdavAccounts.insertOne(accountData));\n        Notifications.notifyUser(userId, 'webdav', {\n          type: 'changed',\n          account: accountData\n        });\n      } catch (error) {\n        throw new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n          method: 'addWebdavAccount'\n        });\n      }\n\n      return true;\n    });\n  },\n\n  addWebdavAccountByToken(data) {\n    return Promise.asyncApply(() => {\n      const userId = Meteor.userId();\n\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid User', {\n          method: 'addWebdavAccount'\n        });\n      }\n\n      if (!settings.get('Webdav_Integration_Enabled')) {\n        throw new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n          method: 'addWebdavAccount'\n        });\n      }\n\n      check(data, Match.ObjectIncluding({\n        serverURL: String,\n        token: String,\n        name: Match.Maybe(String)\n      }));\n\n      try {\n        var _data$name, _data$name2;\n\n        const client = new WebdavClientAdapter(data.serverURL, {\n          token: data.token\n        });\n        const accountData = {\n          userId,\n          serverURL: data.serverURL,\n          token: data.token,\n          name: (_data$name = data.name) !== null && _data$name !== void 0 ? _data$name : ''\n        };\n        Promise.await(client.stat('/'));\n        Promise.await(WebdavAccounts.updateOne({\n          userId,\n          serverURL: data.serverURL,\n          name: (_data$name2 = data.name) !== null && _data$name2 !== void 0 ? _data$name2 : ''\n        }, {\n          $set: accountData\n        }, {\n          upsert: true\n        }));\n        Notifications.notifyUser(userId, 'webdav', {\n          type: 'changed',\n          account: accountData\n        });\n      } catch (error) {\n        throw new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n          method: 'addWebdavAccount'\n        });\n      }\n\n      return true;\n    });\n  }\n\n});","map":{"version":3,"sources":["app/webdav/server/methods/addWebdavAccount.ts"],"names":[],"mappings":"AAAA,IAAA,MAAA;AAAS,MAAQ,CAAA,IAAR,CAAc,eAAd,EAA8B;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAA9B,EAA8B,CAA9B;AAA8B,IAAA,KAAA,EAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,mBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQvC,MAAM,CAAC,OAAP,CAAe;AACR,EAAA,gBAAN,CAAuB,QAAvB;AAAA,oCAA+B;AAC9B,YAAM,MAAM,GAAG,MAAM,CAAC,MAAP,EAAf;;AAEA,UAAI,CAAC,MAAL,EAAa;AACZ,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAE,UAAA,MAAM,EAAE;AAAV,SAAvD,CAAN;AACA;;AAED,UAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,4BAAb,CAAL,EAAiD;AAChD,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,mBAAjB,EAAsC,gCAAtC,EAAwE;AAC7E,UAAA,MAAM,EAAE;AADqE,SAAxE,CAAN;AAGA;;AAED,MAAA,KAAK,CACJ,QADI,EAEJ,KAAK,CAAC,eAAN,CAAsB;AACrB,QAAA,SAAS,EAAE,MADU;AAErB,QAAA,QAAQ,EAAE,MAFW;AAGrB,QAAA,QAAQ,EAAE,MAHW;AAIrB,QAAA,IAAI,EAAE,KAAK,CAAC,KAAN,CAAY,MAAZ;AAJe,OAAtB,CAFI,CAAL;AAUA,YAAM,gBAAgB,iBAAS,cAAc,CAAC,mCAAf,CAC9B;AAAE,QAAA,MAAF;AAAU,QAAA,SAAS,EAAE,QAAQ,CAAC,SAA9B;AAAyC,QAAA,QAAQ,EAAE,QAAQ,CAAC;AAA5D,OAD8B,EAE9B,EAF8B,CAAT,CAAtB;;AAKA,UAAI,gBAAgB,KAAK,IAAzB,EAA+B;AAC9B,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,oBAAjB,EAAuC,mBAAvC,EAA4D;AACjE,UAAA,MAAM,EAAE;AADyD,SAA5D,CAAN;AAGA;;AAED,UAAI;AAAA;;AACH,cAAM,MAAM,GAAG,IAAI,mBAAJ,CAAwB,QAAQ,CAAC,SAAjC,EAA4C;AAC1D,UAAA,QAAQ,EAAE,QAAQ,CAAC,QADuC;AAE1D,UAAA,QAAQ,EAAE,QAAQ,CAAC;AAFuC,SAA5C,CAAf;AAKA,cAAM,WAAW,GAAG;AACnB,UAAA,MADmB;AAEnB,UAAA,SAAS,EAAE,QAAQ,CAAC,SAFD;AAGnB,UAAA,QAAQ,EAAE,QAAQ,CAAC,QAHA;AAInB,UAAA,QAAQ,EAAE,QAAQ,CAAC,QAJA;AAKnB,UAAA,IAAI,oBAAE,QAAQ,CAAC,IAAX,2DAAmB;AALJ,SAApB;AAQA,sBAAM,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAN;AACA,sBAAM,cAAc,CAAC,SAAf,CAAyB,WAAzB,CAAN;AACA,QAAA,aAAa,CAAC,UAAd,CAAyB,MAAzB,EAAiC,QAAjC,EAA2C;AAC1C,UAAA,IAAI,EAAE,SADoC;AAE1C,UAAA,OAAO,EAAE;AAFiC,SAA3C;AAIA,OApBD,CAoBE,OAAO,KAAP,EAAc;AACf,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,yBAAjB,EAA4C,yBAA5C,EAAuE;AAC5E,UAAA,MAAM,EAAE;AADoE,SAAvE,CAAN;AAGA;;AACD,aAAO,IAAP;AACA,KA5DD;AAAA,GADc;;AA+DR,EAAA,uBAAN,CAA8B,IAA9B;AAAA,oCAAkC;AACjC,YAAM,MAAM,GAAG,MAAM,CAAC,MAAP,EAAf;;AAEA,UAAI,CAAC,MAAL,EAAa;AACZ,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAE,UAAA,MAAM,EAAE;AAAV,SAAvD,CAAN;AACA;;AAED,UAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,4BAAb,CAAL,EAAiD;AAChD,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,mBAAjB,EAAsC,gCAAtC,EAAwE;AAC7E,UAAA,MAAM,EAAE;AADqE,SAAxE,CAAN;AAGA;;AAED,MAAA,KAAK,CACJ,IADI,EAEJ,KAAK,CAAC,eAAN,CAAsB;AACrB,QAAA,SAAS,EAAE,MADU;AAErB,QAAA,KAAK,EAAE,MAFc;AAGrB,QAAA,IAAI,EAAE,KAAK,CAAC,KAAN,CAAY,MAAZ;AAHe,OAAtB,CAFI,CAAL;;AASA,UAAI;AAAA;;AACH,cAAM,MAAM,GAAG,IAAI,mBAAJ,CAAwB,IAAI,CAAC,SAA7B,EAAwC;AAAE,UAAA,KAAK,EAAE,IAAI,CAAC;AAAd,SAAxC,CAAf;AAEA,cAAM,WAAW,GAAG;AACnB,UAAA,MADmB;AAEnB,UAAA,SAAS,EAAE,IAAI,CAAC,SAFG;AAGnB,UAAA,KAAK,EAAE,IAAI,CAAC,KAHO;AAInB,UAAA,IAAI,gBAAE,IAAI,CAAC,IAAP,mDAAe;AAJA,SAApB;AAOA,sBAAM,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAN;AACA,sBAAM,cAAc,CAAC,SAAf,CACL;AACC,UAAA,MADD;AAEC,UAAA,SAAS,EAAE,IAAI,CAAC,SAFjB;AAGC,UAAA,IAAI,iBAAE,IAAI,CAAC,IAAP,qDAAe;AAHpB,SADK,EAML;AACC,UAAA,IAAI,EAAE;AADP,SANK,EASL;AACC,UAAA,MAAM,EAAE;AADT,SATK,CAAN;AAaA,QAAA,aAAa,CAAC,UAAd,CAAyB,MAAzB,EAAiC,QAAjC,EAA2C;AAC1C,UAAA,IAAI,EAAE,SADoC;AAE1C,UAAA,OAAO,EAAE;AAFiC,SAA3C;AAIA,OA5BD,CA4BE,OAAO,KAAP,EAAc;AACf,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,yBAAjB,EAA4C,yBAA5C,EAAuE;AAC5E,UAAA,MAAM,EAAE;AADoE,SAAvE,CAAN;AAGA;;AAED,aAAO,IAAP;AACA,KAzDD;AAAA;;AA/Dc,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\n\nimport { settings } from '../../../settings/server';\nimport { WebdavAccounts } from '../../../models/server/raw';\nimport { WebdavClientAdapter } from '../lib/webdavClientAdapter';\nimport { Notifications } from '../../../notifications/server';\n\nMeteor.methods({\n\tasync addWebdavAccount(formData) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\tserverURL: String,\n\t\t\t\tusername: String,\n\t\t\t\tpassword: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t}),\n\t\t);\n\n\t\tconst duplicateAccount = await WebdavAccounts.findOneByUserIdServerUrlAndUsername(\n\t\t\t{ userId, serverURL: formData.serverURL, username: formData.username },\n\t\t\t{},\n\t\t);\n\n\t\tif (duplicateAccount !== null) {\n\t\t\tthrow new Meteor.Error('duplicated-account', 'Account not found', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tconst client = new WebdavClientAdapter(formData.serverURL, {\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t});\n\n\t\t\tconst accountData = {\n\t\t\t\tuserId,\n\t\t\t\tserverURL: formData.serverURL,\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t\tname: formData.name ?? '',\n\t\t\t};\n\n\t\t\tawait client.stat('/');\n\t\t\tawait WebdavAccounts.insertOne(accountData);\n\t\t\tNotifications.notifyUser(userId, 'webdav', {\n\t\t\t\ttype: 'changed',\n\t\t\t\taccount: accountData,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t},\n\n\tasync addWebdavAccountByToken(data) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(\n\t\t\tdata,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\tserverURL: String,\n\t\t\t\ttoken: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t}),\n\t\t);\n\n\t\ttry {\n\t\t\tconst client = new WebdavClientAdapter(data.serverURL, { token: data.token });\n\n\t\t\tconst accountData = {\n\t\t\t\tuserId,\n\t\t\t\tserverURL: data.serverURL,\n\t\t\t\ttoken: data.token,\n\t\t\t\tname: data.name ?? '',\n\t\t\t};\n\n\t\t\tawait client.stat('/');\n\t\t\tawait WebdavAccounts.updateOne(\n\t\t\t\t{\n\t\t\t\t\tuserId,\n\t\t\t\t\tserverURL: data.serverURL,\n\t\t\t\t\tname: data.name ?? '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$set: accountData,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tupsert: true,\n\t\t\t\t},\n\t\t\t);\n\t\t\tNotifications.notifyUser(userId, 'webdav', {\n\t\t\t\ttype: 'changed',\n\t\t\t\taccount: accountData,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"46953328e6b848bff1d7128ed7f17e408df21bc3"}

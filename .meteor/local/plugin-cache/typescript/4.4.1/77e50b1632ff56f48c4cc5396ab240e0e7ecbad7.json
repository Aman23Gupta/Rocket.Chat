{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v195.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v195.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v195.ts","inputSourceMap":{"version":3,"file":"server/startup/migrations/v195.ts","sourceRoot":"","sources":["server/startup/migrations/v195.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from 'moment-timezone';\nimport { Mongo } from 'meteor/mongo';\n\nimport { addMigration } from '../../lib/migrations';\nimport { LivechatBusinessHours, Permissions, Settings } from '../../../app/models/server/raw';\nimport { ILivechatBusinessHour, IBusinessHourWorkHour, LivechatBusinessHourTypes } from '../../../definition/ILivechatBusinessHour';\n\nconst migrateCollection = async (): Promise<void> => {\n\tconst LivechatOfficeHour = new Mongo.Collection<IBusinessHourWorkHour>('rocketchat_livechat_office_hour');\n\tconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\tconst officeHours: IBusinessHourWorkHour[] = [];\n\tdays.forEach((day) => {\n\t\tconst officeHour = LivechatOfficeHour.findOne({ day });\n\t\tif (officeHour) {\n\t\t\tofficeHours.push(officeHour);\n\t\t}\n\t});\n\n\tif (!officeHours || officeHours.length === 0) {\n\t\treturn;\n\t}\n\n\tconst businessHour: Omit<ILivechatBusinessHour, '_id'> = {\n\t\tname: '',\n\t\tactive: true,\n\t\ttype: LivechatBusinessHourTypes.DEFAULT,\n\t\tts: new Date(),\n\t\tworkHours: officeHours.map(\n\t\t\t(officeHour): IBusinessHourWorkHour => ({\n\t\t\t\tday: officeHour.day,\n\t\t\t\tstart: {\n\t\t\t\t\ttime: officeHour.start as any,\n\t\t\t\t\tutc: {\n\t\t\t\t\t\tdayOfWeek: moment(`${officeHour.day}:${officeHour.start}`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\t\ttime: moment(`${officeHour.day}:${officeHour.start}`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t\t},\n\t\t\t\t\tcron: {\n\t\t\t\t\t\tdayOfWeek: moment(`${officeHour.day}:${officeHour.start}`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\t\ttime: moment(`${officeHour.day}:${officeHour.start}`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tfinish: {\n\t\t\t\t\ttime: officeHour.finish as any,\n\t\t\t\t\tutc: {\n\t\t\t\t\t\tdayOfWeek: moment(`${officeHour.day}:${officeHour.finish}`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\t\ttime: moment(`${officeHour.day}:${officeHour.finish}`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t\t},\n\t\t\t\t\tcron: {\n\t\t\t\t\t\tdayOfWeek: moment(`${officeHour.day}:${officeHour.finish}`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\t\ttime: moment(`${officeHour.day}:${officeHour.finish}`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcode: officeHour.code,\n\t\t\t\topen: officeHour.open,\n\t\t\t}),\n\t\t),\n\t\ttimezone: {\n\t\t\tname: moment.tz.guess(),\n\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t},\n\t};\n\tif ((await LivechatBusinessHours.find({ type: LivechatBusinessHourTypes.DEFAULT }).count()) === 0) {\n\t\tLivechatBusinessHours.insertOne(businessHour);\n\t} else {\n\t\tLivechatBusinessHours.update({ type: LivechatBusinessHourTypes.DEFAULT }, { $set: { ...businessHour } });\n\t}\n\ttry {\n\t\tPromise.await(LivechatOfficeHour.rawCollection().drop());\n\t} catch (err) {\n\t\t// Ignore if the collection does not exist\n\t\tif (!err.code || err.code !== 26) {\n\t\t\tthrow err;\n\t\t}\n\t}\n};\n\naddMigration({\n\tversion: 195,\n\tasync up() {\n\t\tawait Settings.removeById('Livechat_enable_office_hours');\n\t\tawait Settings.removeById('Livechat_allow_online_agents_outside_office_hours');\n\t\tconst permission = await Permissions.findOneById('view-livechat-officeHours');\n\t\tif (permission) {\n\t\t\tawait Permissions.update({ _id: 'view-livechat-business-hours' }, { $set: { roles: permission.roles } }, { upsert: true });\n\t\t\tawait Permissions.deleteOne({ _id: 'view-livechat-officeHours' });\n\t\t}\n\t\tawait migrateCollection();\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v195.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v195.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment-timezone\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 2);\nlet LivechatBusinessHours, Permissions, Settings;\nmodule.link(\"../../../app/models/server/raw\", {\n  LivechatBusinessHours(v) {\n    LivechatBusinessHours = v;\n  },\n\n  Permissions(v) {\n    Permissions = v;\n  },\n\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 3);\nlet LivechatBusinessHourTypes;\nmodule.link(\"../../../definition/ILivechatBusinessHour\", {\n  LivechatBusinessHourTypes(v) {\n    LivechatBusinessHourTypes = v;\n  }\n\n}, 4);\n\nconst migrateCollection = () => Promise.asyncApply(() => {\n  const LivechatOfficeHour = new Mongo.Collection('rocketchat_livechat_office_hour');\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const officeHours = [];\n  days.forEach(day => {\n    const officeHour = LivechatOfficeHour.findOne({\n      day\n    });\n\n    if (officeHour) {\n      officeHours.push(officeHour);\n    }\n  });\n\n  if (!officeHours || officeHours.length === 0) {\n    return;\n  }\n\n  const businessHour = {\n    name: '',\n    active: true,\n    type: LivechatBusinessHourTypes.DEFAULT,\n    ts: new Date(),\n    workHours: officeHours.map(officeHour => ({\n      day: officeHour.day,\n      start: {\n        time: officeHour.start,\n        utc: {\n          dayOfWeek: moment(\"\".concat(officeHour.day, \":\").concat(officeHour.start), 'dddd:HH:mm').utc().format('dddd'),\n          time: moment(\"\".concat(officeHour.day, \":\").concat(officeHour.start), 'dddd:HH:mm').utc().format('HH:mm')\n        },\n        cron: {\n          dayOfWeek: moment(\"\".concat(officeHour.day, \":\").concat(officeHour.start), 'dddd:HH:mm').format('dddd'),\n          time: moment(\"\".concat(officeHour.day, \":\").concat(officeHour.start), 'dddd:HH:mm').format('HH:mm')\n        }\n      },\n      finish: {\n        time: officeHour.finish,\n        utc: {\n          dayOfWeek: moment(\"\".concat(officeHour.day, \":\").concat(officeHour.finish), 'dddd:HH:mm').utc().format('dddd'),\n          time: moment(\"\".concat(officeHour.day, \":\").concat(officeHour.finish), 'dddd:HH:mm').utc().format('HH:mm')\n        },\n        cron: {\n          dayOfWeek: moment(\"\".concat(officeHour.day, \":\").concat(officeHour.finish), 'dddd:HH:mm').format('dddd'),\n          time: moment(\"\".concat(officeHour.day, \":\").concat(officeHour.finish), 'dddd:HH:mm').format('HH:mm')\n        }\n      },\n      code: officeHour.code,\n      open: officeHour.open\n    })),\n    timezone: {\n      name: moment.tz.guess(),\n      utc: String(moment().utcOffset() / 60)\n    }\n  };\n\n  if (Promise.await(LivechatBusinessHours.find({\n    type: LivechatBusinessHourTypes.DEFAULT\n  }).count()) === 0) {\n    LivechatBusinessHours.insertOne(businessHour);\n  } else {\n    LivechatBusinessHours.update({\n      type: LivechatBusinessHourTypes.DEFAULT\n    }, {\n      $set: _objectSpread({}, businessHour)\n    });\n  }\n\n  try {\n    Promise.await(LivechatOfficeHour.rawCollection().drop());\n  } catch (err) {\n    // Ignore if the collection does not exist\n    if (!err.code || err.code !== 26) {\n      throw err;\n    }\n  }\n});\n\naddMigration({\n  version: 195,\n\n  up() {\n    return Promise.asyncApply(() => {\n      Promise.await(Settings.removeById('Livechat_enable_office_hours'));\n      Promise.await(Settings.removeById('Livechat_allow_online_agents_outside_office_hours'));\n      const permission = Promise.await(Permissions.findOneById('view-livechat-officeHours'));\n\n      if (permission) {\n        Promise.await(Permissions.update({\n          _id: 'view-livechat-business-hours'\n        }, {\n          $set: {\n            roles: permission.roles\n          }\n        }, {\n          upsert: true\n        }));\n        Promise.await(Permissions.deleteOne({\n          _id: 'view-livechat-officeHours'\n        }));\n      }\n\n      Promise.await(migrateCollection());\n    });\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v195.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from 'moment-timezone';\nimport { Mongo } from 'meteor/mongo';\n\nimport { addMigration } from '../../lib/migrations';\nimport { LivechatBusinessHours, Permissions, Settings } from '../../../app/models/server/raw';\nimport { ILivechatBusinessHour, IBusinessHourWorkHour, LivechatBusinessHourTypes } from '../../../definition/ILivechatBusinessHour';\n\nconst migrateCollection = async (): Promise<void> => {\n\tconst LivechatOfficeHour = new Mongo.Collection<IBusinessHourWorkHour>('rocketchat_livechat_office_hour');\n\tconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\tconst officeHours: IBusinessHourWorkHour[] = [];\n\tdays.forEach((day) => {\n\t\tconst officeHour = LivechatOfficeHour.findOne({ day });\n\t\tif (officeHour) {\n\t\t\tofficeHours.push(officeHour);\n\t\t}\n\t});\n\n\tif (!officeHours || officeHours.length === 0) {\n\t\treturn;\n\t}\n\n\tconst businessHour: Omit<ILivechatBusinessHour, '_id'> = {\n\t\tname: '',\n\t\tactive: true,\n\t\ttype: LivechatBusinessHourTypes.DEFAULT,\n\t\tts: new Date(),\n\t\tworkHours: officeHours.map(\n\t\t\t(officeHour): IBusinessHourWorkHour => ({\n\t\t\t\tday: officeHour.day,\n\t\t\t\tstart: {\n\t\t\t\t\ttime: officeHour.start as any,\n\t\t\t\t\tutc: {\n\t\t\t\t\t\tdayOfWeek: moment(`${officeHour.day}:${officeHour.start}`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\t\ttime: moment(`${officeHour.day}:${officeHour.start}`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t\t},\n\t\t\t\t\tcron: {\n\t\t\t\t\t\tdayOfWeek: moment(`${officeHour.day}:${officeHour.start}`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\t\ttime: moment(`${officeHour.day}:${officeHour.start}`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tfinish: {\n\t\t\t\t\ttime: officeHour.finish as any,\n\t\t\t\t\tutc: {\n\t\t\t\t\t\tdayOfWeek: moment(`${officeHour.day}:${officeHour.finish}`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\t\ttime: moment(`${officeHour.day}:${officeHour.finish}`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t\t},\n\t\t\t\t\tcron: {\n\t\t\t\t\t\tdayOfWeek: moment(`${officeHour.day}:${officeHour.finish}`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\t\ttime: moment(`${officeHour.day}:${officeHour.finish}`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcode: officeHour.code,\n\t\t\t\topen: officeHour.open,\n\t\t\t}),\n\t\t),\n\t\ttimezone: {\n\t\t\tname: moment.tz.guess(),\n\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t},\n\t};\n\tif ((await LivechatBusinessHours.find({ type: LivechatBusinessHourTypes.DEFAULT }).count()) === 0) {\n\t\tLivechatBusinessHours.insertOne(businessHour);\n\t} else {\n\t\tLivechatBusinessHours.update({ type: LivechatBusinessHourTypes.DEFAULT }, { $set: { ...businessHour } });\n\t}\n\ttry {\n\t\tPromise.await(LivechatOfficeHour.rawCollection().drop());\n\t} catch (err) {\n\t\t// Ignore if the collection does not exist\n\t\tif (!err.code || err.code !== 26) {\n\t\t\tthrow err;\n\t\t}\n\t}\n};\n\naddMigration({\n\tversion: 195,\n\tasync up() {\n\t\tawait Settings.removeById('Livechat_enable_office_hours');\n\t\tawait Settings.removeById('Livechat_allow_online_agents_outside_office_hours');\n\t\tconst permission = await Permissions.findOneById('view-livechat-officeHours');\n\t\tif (permission) {\n\t\t\tawait Permissions.update({ _id: 'view-livechat-business-hours' }, { $set: { roles: permission.roles } }, { upsert: true });\n\t\t\tawait Permissions.deleteOne({ _id: 'view-livechat-officeHours' });\n\t\t}\n\t\tawait migrateCollection();\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"77e50b1632ff56f48c4cc5396ab240e0e7ecbad7"}

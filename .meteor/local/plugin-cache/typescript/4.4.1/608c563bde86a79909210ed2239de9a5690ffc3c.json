{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/notifications/server/lib/Presence.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/notifications/server/lib/Presence.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/notifications/server/lib/Presence.ts","inputSourceMap":{"version":3,"file":"app/notifications/server/lib/Presence.ts","sourceRoot":"","sources":["app/notifications/server/lib/Presence.ts"],"names":[],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport type { IPublication, IStreamerConstructor, Connection, IStreamer } from 'meteor/rocketchat:streamer';\n\nimport type { IUser } from '../../../../definition/IUser';\n\nexport type UserPresenseStreamProps = {\n\tadded: IUser['_id'][];\n\tremoved: IUser['_id'][];\n};\n\nexport type UserPresenseStreamArgs = {\n\tuid: string;\n\targs: unknown;\n};\n\nconst e = new Emitter<{\n\t[key: string]: UserPresenseStreamArgs;\n}>();\n\nconst clients = new WeakMap<Connection, UserPresence>();\n\nexport class UserPresence {\n\tprivate readonly streamer: IStreamer;\n\n\tprivate readonly publication: IPublication;\n\n\tprivate readonly listeners: Set<string>;\n\n\tconstructor(publication: IPublication, streamer: IStreamer) {\n\t\tthis.listeners = new Set();\n\t\tthis.publication = publication;\n\t\tthis.streamer = streamer;\n\t}\n\n\tlisten(uid: string): void {\n\t\tif (this.listeners.has(uid)) {\n\t\t\treturn;\n\t\t}\n\t\te.on(uid, this.run);\n\t\tthis.listeners.add(uid);\n\t}\n\n\toff = (uid: string): void => {\n\t\te.off(uid, this.run);\n\t\tthis.listeners.delete(uid);\n\t};\n\n\trun = (args: UserPresenseStreamArgs): void => {\n\t\tconst payload = this.streamer.changedPayload(this.streamer.subscriptionName, args.uid, {\n\t\t\t...args,\n\t\t\teventName: args.uid,\n\t\t}); // there is no good explanation to keep eventName, I just want to save one 'DDPCommon.parseDDP' on the client side, so I'm trying to fit the Meteor Streamer's payload\n\t\t(this.publication as any)._session.socket.send(payload);\n\t};\n\n\tstop(): void {\n\t\tthis.listeners.forEach(this.off);\n\t\tclients.delete(this.publication.connection);\n\t}\n\n\tstatic getClient(publication: IPublication, streamer: IStreamer): [UserPresence, boolean] {\n\t\tconst { connection } = publication;\n\t\tconst stored = clients.get(connection);\n\n\t\tconst client = stored || new UserPresence(publication, streamer);\n\n\t\tconst main = Boolean(!stored);\n\n\t\tclients.set(connection, client);\n\n\t\treturn [client, main];\n\t}\n}\n\nexport class StreamPresence {\n\tstatic getInstance(Streamer: IStreamerConstructor, name = 'user-presence'): IStreamer {\n\t\treturn new (class StreamPresence extends Streamer {\n\t\t\tasync _publish(\n\t\t\t\tpublication: IPublication,\n\t\t\t\t_eventName: string,\n\t\t\t\toptions: boolean | { useCollection?: boolean; args?: any } = false,\n\t\t\t): Promise<void> {\n\t\t\t\tconst { added, removed } = (typeof options !== 'boolean' ? options : {}) as unknown as UserPresenseStreamProps;\n\n\t\t\t\tconst [client, main] = UserPresence.getClient(publication, this);\n\n\t\t\t\tadded?.forEach((uid) => client.listen(uid));\n\t\t\t\tremoved?.forEach((uid) => client.off(uid));\n\n\t\t\t\tif (!main) {\n\t\t\t\t\tpublication.stop();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpublication.ready();\n\n\t\t\t\tpublication.onStop(() => client.stop());\n\t\t\t}\n\t\t})(name);\n\t}\n}\n\nexport const emit = (uid: string, args: UserPresenseStreamArgs): void => {\n\te.emit(uid, { uid, args });\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/notifications/server/lib/Presence.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/notifications/server/lib/Presence.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  UserPresence: () => UserPresence,\n  StreamPresence: () => StreamPresence,\n  emit: () => emit\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n\n}, 0);\nconst e = new Emitter();\nconst clients = new WeakMap();\n\nclass UserPresence {\n  constructor(publication, streamer) {\n    this.streamer = void 0;\n    this.publication = void 0;\n    this.listeners = void 0;\n\n    this.off = uid => {\n      e.off(uid, this.run);\n      this.listeners.delete(uid);\n    };\n\n    this.run = args => {\n      const payload = this.streamer.changedPayload(this.streamer.subscriptionName, args.uid, _objectSpread(_objectSpread({}, args), {}, {\n        eventName: args.uid\n      })); // there is no good explanation to keep eventName, I just want to save one 'DDPCommon.parseDDP' on the client side, so I'm trying to fit the Meteor Streamer's payload\n\n      this.publication._session.socket.send(payload);\n    };\n\n    this.listeners = new Set();\n    this.publication = publication;\n    this.streamer = streamer;\n  }\n\n  listen(uid) {\n    if (this.listeners.has(uid)) {\n      return;\n    }\n\n    e.on(uid, this.run);\n    this.listeners.add(uid);\n  }\n\n  stop() {\n    this.listeners.forEach(this.off);\n    clients.delete(this.publication.connection);\n  }\n\n  static getClient(publication, streamer) {\n    const {\n      connection\n    } = publication;\n    const stored = clients.get(connection);\n    const client = stored || new UserPresence(publication, streamer);\n    const main = Boolean(!stored);\n    clients.set(connection, client);\n    return [client, main];\n  }\n\n}\n\nclass StreamPresence {\n  static getInstance(Streamer) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'user-presence';\n    return new class StreamPresence extends Streamer {\n      _publish(publication, _eventName) {\n        return Promise.asyncApply(() => {\n          let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          const {\n            added,\n            removed\n          } = typeof options !== 'boolean' ? options : {};\n          const [client, main] = UserPresence.getClient(publication, this);\n          added === null || added === void 0 ? void 0 : added.forEach(uid => client.listen(uid));\n          removed === null || removed === void 0 ? void 0 : removed.forEach(uid => client.off(uid));\n\n          if (!main) {\n            publication.stop();\n            return;\n          }\n\n          publication.ready();\n          publication.onStop(() => client.stop());\n        });\n      }\n\n    }(name);\n  }\n\n}\n\nconst emit = (uid, args) => {\n  e.emit(uid, {\n    uid,\n    args\n  });\n};","map":{"version":3,"sources":["app/notifications/server/lib/Presence.ts"],"names":[],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport type { IPublication, IStreamerConstructor, Connection, IStreamer } from 'meteor/rocketchat:streamer';\n\nimport type { IUser } from '../../../../definition/IUser';\n\nexport type UserPresenseStreamProps = {\n\tadded: IUser['_id'][];\n\tremoved: IUser['_id'][];\n};\n\nexport type UserPresenseStreamArgs = {\n\tuid: string;\n\targs: unknown;\n};\n\nconst e = new Emitter<{\n\t[key: string]: UserPresenseStreamArgs;\n}>();\n\nconst clients = new WeakMap<Connection, UserPresence>();\n\nexport class UserPresence {\n\tprivate readonly streamer: IStreamer;\n\n\tprivate readonly publication: IPublication;\n\n\tprivate readonly listeners: Set<string>;\n\n\tconstructor(publication: IPublication, streamer: IStreamer) {\n\t\tthis.listeners = new Set();\n\t\tthis.publication = publication;\n\t\tthis.streamer = streamer;\n\t}\n\n\tlisten(uid: string): void {\n\t\tif (this.listeners.has(uid)) {\n\t\t\treturn;\n\t\t}\n\t\te.on(uid, this.run);\n\t\tthis.listeners.add(uid);\n\t}\n\n\toff = (uid: string): void => {\n\t\te.off(uid, this.run);\n\t\tthis.listeners.delete(uid);\n\t};\n\n\trun = (args: UserPresenseStreamArgs): void => {\n\t\tconst payload = this.streamer.changedPayload(this.streamer.subscriptionName, args.uid, {\n\t\t\t...args,\n\t\t\teventName: args.uid,\n\t\t}); // there is no good explanation to keep eventName, I just want to save one 'DDPCommon.parseDDP' on the client side, so I'm trying to fit the Meteor Streamer's payload\n\t\t(this.publication as any)._session.socket.send(payload);\n\t};\n\n\tstop(): void {\n\t\tthis.listeners.forEach(this.off);\n\t\tclients.delete(this.publication.connection);\n\t}\n\n\tstatic getClient(publication: IPublication, streamer: IStreamer): [UserPresence, boolean] {\n\t\tconst { connection } = publication;\n\t\tconst stored = clients.get(connection);\n\n\t\tconst client = stored || new UserPresence(publication, streamer);\n\n\t\tconst main = Boolean(!stored);\n\n\t\tclients.set(connection, client);\n\n\t\treturn [client, main];\n\t}\n}\n\nexport class StreamPresence {\n\tstatic getInstance(Streamer: IStreamerConstructor, name = 'user-presence'): IStreamer {\n\t\treturn new (class StreamPresence extends Streamer {\n\t\t\tasync _publish(\n\t\t\t\tpublication: IPublication,\n\t\t\t\t_eventName: string,\n\t\t\t\toptions: boolean | { useCollection?: boolean; args?: any } = false,\n\t\t\t): Promise<void> {\n\t\t\t\tconst { added, removed } = (typeof options !== 'boolean' ? options : {}) as unknown as UserPresenseStreamProps;\n\n\t\t\t\tconst [client, main] = UserPresence.getClient(publication, this);\n\n\t\t\t\tadded?.forEach((uid) => client.listen(uid));\n\t\t\t\tremoved?.forEach((uid) => client.off(uid));\n\n\t\t\t\tif (!main) {\n\t\t\t\t\tpublication.stop();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpublication.ready();\n\n\t\t\t\tpublication.onStop(() => client.stop());\n\t\t\t}\n\t\t})(name);\n\t}\n}\n\nexport const emit = (uid: string, args: UserPresenseStreamArgs): void => {\n\te.emit(uid, { uid, args });\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"608c563bde86a79909210ed2239de9a5690ffc3c"}

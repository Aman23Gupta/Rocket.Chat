{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts"],"names":[],"mappings":"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","sourcesContent":["import Agenda from 'agenda';\nimport { MongoInternals } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\n\nimport { LivechatRooms, Users } from '../../../../../app/models/server';\nimport { Livechat } from '../../../../../app/livechat/server';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { forwardRoomToAgent } from '../../../../../app/livechat/server/lib/Helper';\n\nconst schedulerUser = Users.findOneById('rocket.cat');\nconst SCHEDULER_NAME = 'omnichannel_scheduler';\n\nclass AutoTransferChatSchedulerClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tuser: {};\n\n\tpublic init(): void {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t});\n\n\t\tthis.scheduler.start();\n\t\tthis.running = true;\n\t}\n\n\tpublic async scheduleRoom(roomId: string, timeout: number): Promise<void> {\n\t\tawait this.unscheduleRoom(roomId);\n\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tconst when = new Date();\n\t\twhen.setSeconds(when.getSeconds() + timeout);\n\n\t\tthis.scheduler.define(jobName, this.executeJob.bind(this));\n\t\tawait this.scheduler.schedule(when, jobName, { roomId });\n\t\tawait LivechatRooms.setAutoTransferOngoingById(roomId);\n\t}\n\n\tpublic async unscheduleRoom(roomId: string): Promise<void> {\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\n\t\tawait LivechatRooms.unsetAutoTransferOngoingById(roomId);\n\t\tawait this.scheduler.cancel({ name: jobName });\n\t}\n\n\tprivate async transferRoom(roomId: string): Promise<boolean> {\n\t\tconst room = LivechatRooms.findOneById(roomId, {\n\t\t\t_id: 1,\n\t\t\tv: 1,\n\t\t\tservedBy: 1,\n\t\t\topen: 1,\n\t\t\tdepartmentId: 1,\n\t\t});\n\t\tif (!room?.open || !room?.servedBy?._id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst {\n\t\t\tdepartmentId,\n\t\t\tservedBy: { _id: ignoreAgentId },\n\t\t} = room;\n\n\t\tif (!RoutingManager.getConfig().autoAssignAgent) {\n\t\t\treturn Livechat.returnRoomAsInquiry(room._id, departmentId);\n\t\t}\n\n\t\tconst agent = await RoutingManager.getNextAgent(departmentId, ignoreAgentId);\n\t\tif (agent) {\n\t\t\treturn forwardRoomToAgent(room, {\n\t\t\t\tuserId: agent.agentId,\n\t\t\t\ttransferredBy: schedulerUser,\n\t\t\t\ttransferredTo: agent,\n\t\t\t});\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async executeJob({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { roomId } = data;\n\n\t\tif (await this.transferRoom(roomId)) {\n\t\t\tLivechatRooms.setAutoTransferredAtById(roomId);\n\t\t}\n\n\t\tawait this.unscheduleRoom(roomId);\n\t}\n}\n\nexport const AutoTransferChatScheduler = new AutoTransferChatSchedulerClass();\n\nMeteor.startup(() => {\n\tAutoTransferChatScheduler.init();\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts"}},"code":"module.export({\n  AutoTransferChatScheduler: () => AutoTransferChatScheduler\n});\nlet Agenda;\nmodule.link(\"agenda\", {\n  default(v) {\n    Agenda = v;\n  }\n\n}, 0);\nlet MongoInternals;\nmodule.link(\"meteor/mongo\", {\n  MongoInternals(v) {\n    MongoInternals = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet LivechatRooms, Users;\nmodule.link(\"../../../../../app/models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 3);\nlet Livechat;\nmodule.link(\"../../../../../app/livechat/server\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 4);\nlet RoutingManager;\nmodule.link(\"../../../../../app/livechat/server/lib/RoutingManager\", {\n  RoutingManager(v) {\n    RoutingManager = v;\n  }\n\n}, 5);\nlet forwardRoomToAgent;\nmodule.link(\"../../../../../app/livechat/server/lib/Helper\", {\n  forwardRoomToAgent(v) {\n    forwardRoomToAgent = v;\n  }\n\n}, 6);\nconst schedulerUser = Users.findOneById('rocket.cat');\nconst SCHEDULER_NAME = 'omnichannel_scheduler';\n\nclass AutoTransferChatSchedulerClass {\n  constructor() {\n    this.scheduler = void 0;\n    this.running = void 0;\n    this.user = void 0;\n  }\n\n  init() {\n    if (this.running) {\n      return;\n    }\n\n    this.scheduler = new Agenda({\n      mongo: MongoInternals.defaultRemoteCollectionDriver().mongo.client.db(),\n      db: {\n        collection: SCHEDULER_NAME\n      },\n      defaultConcurrency: 1\n    });\n    this.scheduler.start();\n    this.running = true;\n  }\n\n  scheduleRoom(roomId, timeout) {\n    return Promise.asyncApply(() => {\n      Promise.await(this.unscheduleRoom(roomId));\n      const jobName = \"\".concat(SCHEDULER_NAME, \"-\").concat(roomId);\n      const when = new Date();\n      when.setSeconds(when.getSeconds() + timeout);\n      this.scheduler.define(jobName, this.executeJob.bind(this));\n      Promise.await(this.scheduler.schedule(when, jobName, {\n        roomId\n      }));\n      Promise.await(LivechatRooms.setAutoTransferOngoingById(roomId));\n    });\n  }\n\n  unscheduleRoom(roomId) {\n    return Promise.asyncApply(() => {\n      const jobName = \"\".concat(SCHEDULER_NAME, \"-\").concat(roomId);\n      Promise.await(LivechatRooms.unsetAutoTransferOngoingById(roomId));\n      Promise.await(this.scheduler.cancel({\n        name: jobName\n      }));\n    });\n  }\n\n  transferRoom(roomId) {\n    return Promise.asyncApply(() => {\n      var _room$servedBy;\n\n      const room = LivechatRooms.findOneById(roomId, {\n        _id: 1,\n        v: 1,\n        servedBy: 1,\n        open: 1,\n        departmentId: 1\n      });\n\n      if (!(room !== null && room !== void 0 && room.open) || !(room !== null && room !== void 0 && (_room$servedBy = room.servedBy) !== null && _room$servedBy !== void 0 && _room$servedBy._id)) {\n        return false;\n      }\n\n      const {\n        departmentId,\n        servedBy: {\n          _id: ignoreAgentId\n        }\n      } = room;\n\n      if (!RoutingManager.getConfig().autoAssignAgent) {\n        return Livechat.returnRoomAsInquiry(room._id, departmentId);\n      }\n\n      const agent = Promise.await(RoutingManager.getNextAgent(departmentId, ignoreAgentId));\n\n      if (agent) {\n        return forwardRoomToAgent(room, {\n          userId: agent.agentId,\n          transferredBy: schedulerUser,\n          transferredTo: agent\n        });\n      }\n\n      return false;\n    });\n  }\n\n  executeJob() {\n    return Promise.asyncApply(() => {\n      let {\n        attrs: {\n          data\n        }\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const {\n        roomId\n      } = data;\n\n      if (Promise.await(this.transferRoom(roomId))) {\n        LivechatRooms.setAutoTransferredAtById(roomId);\n      }\n\n      Promise.await(this.unscheduleRoom(roomId));\n    });\n  }\n\n}\n\nconst AutoTransferChatScheduler = new AutoTransferChatSchedulerClass();\nMeteor.startup(() => {\n  AutoTransferChatScheduler.init();\n});","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts"],"names":[],"mappings":"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","sourcesContent":["import Agenda from 'agenda';\nimport { MongoInternals } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\n\nimport { LivechatRooms, Users } from '../../../../../app/models/server';\nimport { Livechat } from '../../../../../app/livechat/server';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { forwardRoomToAgent } from '../../../../../app/livechat/server/lib/Helper';\n\nconst schedulerUser = Users.findOneById('rocket.cat');\nconst SCHEDULER_NAME = 'omnichannel_scheduler';\n\nclass AutoTransferChatSchedulerClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tuser: {};\n\n\tpublic init(): void {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t});\n\n\t\tthis.scheduler.start();\n\t\tthis.running = true;\n\t}\n\n\tpublic async scheduleRoom(roomId: string, timeout: number): Promise<void> {\n\t\tawait this.unscheduleRoom(roomId);\n\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tconst when = new Date();\n\t\twhen.setSeconds(when.getSeconds() + timeout);\n\n\t\tthis.scheduler.define(jobName, this.executeJob.bind(this));\n\t\tawait this.scheduler.schedule(when, jobName, { roomId });\n\t\tawait LivechatRooms.setAutoTransferOngoingById(roomId);\n\t}\n\n\tpublic async unscheduleRoom(roomId: string): Promise<void> {\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\n\t\tawait LivechatRooms.unsetAutoTransferOngoingById(roomId);\n\t\tawait this.scheduler.cancel({ name: jobName });\n\t}\n\n\tprivate async transferRoom(roomId: string): Promise<boolean> {\n\t\tconst room = LivechatRooms.findOneById(roomId, {\n\t\t\t_id: 1,\n\t\t\tv: 1,\n\t\t\tservedBy: 1,\n\t\t\topen: 1,\n\t\t\tdepartmentId: 1,\n\t\t});\n\t\tif (!room?.open || !room?.servedBy?._id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst {\n\t\t\tdepartmentId,\n\t\t\tservedBy: { _id: ignoreAgentId },\n\t\t} = room;\n\n\t\tif (!RoutingManager.getConfig().autoAssignAgent) {\n\t\t\treturn Livechat.returnRoomAsInquiry(room._id, departmentId);\n\t\t}\n\n\t\tconst agent = await RoutingManager.getNextAgent(departmentId, ignoreAgentId);\n\t\tif (agent) {\n\t\t\treturn forwardRoomToAgent(room, {\n\t\t\t\tuserId: agent.agentId,\n\t\t\t\ttransferredBy: schedulerUser,\n\t\t\t\ttransferredTo: agent,\n\t\t\t});\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async executeJob({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { roomId } = data;\n\n\t\tif (await this.transferRoom(roomId)) {\n\t\t\tLivechatRooms.setAutoTransferredAtById(roomId);\n\t\t}\n\n\t\tawait this.unscheduleRoom(roomId);\n\t}\n}\n\nexport const AutoTransferChatScheduler = new AutoTransferChatSchedulerClass();\n\nMeteor.startup(() => {\n\tAutoTransferChatScheduler.init();\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"71252ad2e7213f2f6e5d2270ebb0f65c11100f12"}

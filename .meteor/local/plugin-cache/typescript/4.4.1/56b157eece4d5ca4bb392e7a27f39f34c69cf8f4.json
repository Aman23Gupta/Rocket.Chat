{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/logQueue.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/logger/logQueue.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/logQueue.ts","inputSourceMap":{"version":3,"file":"server/lib/logger/logQueue.ts","sourceRoot":"","sources":["server/lib/logger/logQueue.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,QAAQ,CAAC;AAQlC,MAAM,KAAK,GAAe,EAAE,CAAC;AAC7B,MAAM,MAAM,GAAG,UAAU,CAAC;AAC1B,IAAI,UAAU,GAAG,IAAI,CAAC;AACtB,IAAI,SAAS,GAAG,CAAC,CAAC;AAElB,MAAM,UAAU,aAAa,CAAC,KAAa;IAC1C,UAAU,GAAG,KAAK,CAAC;IAEnB,IAAI,SAAS,GAAG,UAAU,EAAE;QAC3B,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,UAAU,CAAC,CAAC;KACxC;AACF,CAAC;AAED,MAAM,UAAU,aAAa;IAC5B,OAAO,KAAK,CAAC;AACd,CAAC;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;AAE7C,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;AAIjC,SAAS,UAAU,CAAC,GAAG,IAAS;IAC/B,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAElC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;IACnB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC5B,OAAO,IAAI,CAAC;KACZ;IAED,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IACxB,MAAM,IAAI,GAAG;QACZ,EAAE,EAAE,SAAS,SAAS,EAAE;QACxB,IAAI,EAAE,GAAG;QACT,EAAE,EAAE,IAAI;KACR,CAAC;IACF,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEjB,SAAS,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAErC,IAAI,SAAS,GAAG,UAAU,EAAE;QAC3B,KAAK,CAAC,KAAK,EAAE,CAAC;KACd;IAED,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAE7B,OAAO,IAAI,CAAC;AACb,CAAC;AAED,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;IACtE,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;CAClC","sourcesContent":["import EventEmitter from 'events';\n\ntype LogQueue = {\n\tid: string;\n\tdata: string;\n\tts: Date;\n};\n\nconst queue: LogQueue[] = [];\nconst maxInt = 2147483647;\nlet queueLimit = 1000;\nlet queueSize = 0;\n\nexport function setQueueLimit(limit: number): void {\n\tqueueLimit = limit;\n\n\tif (queueSize > queueLimit) {\n\t\tqueue.splice(0, queueSize - queueLimit);\n\t}\n}\n\nexport function getQueuedLogs(): LogQueue[] {\n\treturn queue;\n}\n\nexport const logEntries = new EventEmitter();\n\nconst { write } = process.stdout;\n\nfunction queueWrite(buffer: Uint8Array | string, cb?: (err?: Error) => void): boolean;\nfunction queueWrite(str: Uint8Array | string, encoding?: string, cb?: (err?: Error) => void): boolean;\nfunction queueWrite(...args: any): boolean {\n\twrite.apply(process.stdout, args);\n\n\tconst [str] = args;\n\tif (typeof str !== 'string') {\n\t\treturn true;\n\t}\n\n\tconst date = new Date();\n\tconst item = {\n\t\tid: `logid-${queueSize}`,\n\t\tdata: str,\n\t\tts: date,\n\t};\n\tqueue.push(item);\n\n\tqueueSize = (queueSize + 1) & maxInt;\n\n\tif (queueSize > queueLimit) {\n\t\tqueue.shift();\n\t}\n\n\tlogEntries.emit('log', item);\n\n\treturn true;\n}\n\nif (String(process.env.MOLECULER_LOG_LEVEL).toLowerCase() !== 'debug') {\n\tprocess.stdout.write = queueWrite;\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/logQueue.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/logger/logQueue.ts"}},"code":"module.export({\n  setQueueLimit: () => setQueueLimit,\n  getQueuedLogs: () => getQueuedLogs,\n  logEntries: () => logEntries\n});\nlet EventEmitter;\nmodule.link(\"events\", {\n  default(v) {\n    EventEmitter = v;\n  }\n\n}, 0);\nconst queue = [];\nconst maxInt = 2147483647;\nlet queueLimit = 1000;\nlet queueSize = 0;\n\nfunction setQueueLimit(limit) {\n  queueLimit = limit;\n\n  if (queueSize > queueLimit) {\n    queue.splice(0, queueSize - queueLimit);\n  }\n}\n\nfunction getQueuedLogs() {\n  return queue;\n}\n\nconst logEntries = new EventEmitter();\nconst {\n  write\n} = process.stdout;\n\nfunction queueWrite() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  write.apply(process.stdout, args);\n  const [str] = args;\n\n  if (typeof str !== 'string') {\n    return true;\n  }\n\n  const date = new Date();\n  const item = {\n    id: \"logid-\".concat(queueSize),\n    data: str,\n    ts: date\n  };\n  queue.push(item);\n  queueSize = queueSize + 1 & maxInt;\n\n  if (queueSize > queueLimit) {\n    queue.shift();\n  }\n\n  logEntries.emit('log', item);\n  return true;\n}\n\nif (String(process.env.MOLECULER_LOG_LEVEL).toLowerCase() !== 'debug') {\n  process.stdout.write = queueWrite;\n}","map":{"version":3,"sources":["server/lib/logger/logQueue.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAO;AAAA,EAAA,aAAkB,EAAA,MAAQ,aAA1B;AAA2B,EAAA,aAAA,EAAA,MAAA,aAA3B;AAA2B,EAAA,UAAA,EAAA,MAAA;AAA3B,CAAP;AAAkC,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQlC,MAAM,KAAK,GAAe,EAA1B;AACA,MAAM,MAAM,GAAG,UAAf;AACA,IAAI,UAAU,GAAG,IAAjB;AACA,IAAI,SAAS,GAAG,CAAhB;;AAEM,SAAU,aAAV,CAAwB,KAAxB,EAAqC;AAC1C,EAAA,UAAU,GAAG,KAAb;;AAEA,MAAI,SAAS,GAAG,UAAhB,EAA4B;AAC3B,IAAA,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,SAAS,GAAG,UAA5B;AACA;AACD;;AAEK,SAAU,aAAV,GAAuB;AAC5B,SAAO,KAAP;AACA;;AAEM,MAAM,UAAU,GAAG,IAAI,YAAJ,EAAnB;AAEP,MAAM;AAAE,EAAA;AAAF,IAAY,OAAO,CAAC,MAA1B;;AAIA,SAAS,UAAT,GAAgC;AAAA,oCAAT,IAAS;AAAT,IAAA,IAAS;AAAA;;AAC/B,EAAA,KAAK,CAAC,KAAN,CAAY,OAAO,CAAC,MAApB,EAA4B,IAA5B;AAEA,QAAM,CAAC,GAAD,IAAQ,IAAd;;AACA,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC5B,WAAO,IAAP;AACA;;AAED,QAAM,IAAI,GAAG,IAAI,IAAJ,EAAb;AACA,QAAM,IAAI,GAAG;AACZ,IAAA,EAAE,kBAAW,SAAX,CADU;AAEZ,IAAA,IAAI,EAAE,GAFM;AAGZ,IAAA,EAAE,EAAE;AAHQ,GAAb;AAKA,EAAA,KAAK,CAAC,IAAN,CAAW,IAAX;AAEA,EAAA,SAAS,GAAI,SAAS,GAAG,CAAb,GAAkB,MAA9B;;AAEA,MAAI,SAAS,GAAG,UAAhB,EAA4B;AAC3B,IAAA,KAAK,CAAC,KAAN;AACA;;AAED,EAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB,EAAuB,IAAvB;AAEA,SAAO,IAAP;AACA;;AAED,IAAI,MAAM,CAAC,OAAO,CAAC,GAAR,CAAY,mBAAb,CAAN,CAAwC,WAAxC,OAA0D,OAA9D,EAAuE;AACtE,EAAA,OAAO,CAAC,MAAR,CAAe,KAAf,GAAuB,UAAvB;AACA","sourcesContent":["import EventEmitter from 'events';\n\ntype LogQueue = {\n\tid: string;\n\tdata: string;\n\tts: Date;\n};\n\nconst queue: LogQueue[] = [];\nconst maxInt = 2147483647;\nlet queueLimit = 1000;\nlet queueSize = 0;\n\nexport function setQueueLimit(limit: number): void {\n\tqueueLimit = limit;\n\n\tif (queueSize > queueLimit) {\n\t\tqueue.splice(0, queueSize - queueLimit);\n\t}\n}\n\nexport function getQueuedLogs(): LogQueue[] {\n\treturn queue;\n}\n\nexport const logEntries = new EventEmitter();\n\nconst { write } = process.stdout;\n\nfunction queueWrite(buffer: Uint8Array | string, cb?: (err?: Error) => void): boolean;\nfunction queueWrite(str: Uint8Array | string, encoding?: string, cb?: (err?: Error) => void): boolean;\nfunction queueWrite(...args: any): boolean {\n\twrite.apply(process.stdout, args);\n\n\tconst [str] = args;\n\tif (typeof str !== 'string') {\n\t\treturn true;\n\t}\n\n\tconst date = new Date();\n\tconst item = {\n\t\tid: `logid-${queueSize}`,\n\t\tdata: str,\n\t\tts: date,\n\t};\n\tqueue.push(item);\n\n\tqueueSize = (queueSize + 1) & maxInt;\n\n\tif (queueSize > queueLimit) {\n\t\tqueue.shift();\n\t}\n\n\tlogEntries.emit('log', item);\n\n\treturn true;\n}\n\nif (String(process.env.MOLECULER_LOG_LEVEL).toLowerCase() !== 'debug') {\n\tprocess.stdout.write = queueWrite;\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"56b157eece4d5ca4bb392e7a27f39f34c69cf8f4"}

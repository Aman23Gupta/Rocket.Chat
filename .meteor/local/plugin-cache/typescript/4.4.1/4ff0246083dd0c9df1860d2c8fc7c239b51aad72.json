{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/features/EmailInbox/EmailInbox_Outgoing.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/features/EmailInbox/EmailInbox_Outgoing.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/features/EmailInbox/EmailInbox_Outgoing.ts","inputSourceMap":{"version":3,"file":"server/features/EmailInbox/EmailInbox_Outgoing.ts","sourceRoot":"","sources":["server/features/EmailInbox/EmailInbox_Outgoing.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\nimport Mail from 'nodemailer/lib/mailer';\nimport { Match } from 'meteor/check';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { callbacks } from '../../../lib/callbacks';\nimport { IEmailInbox } from '../../../definition/IEmailInbox';\nimport { IUser } from '../../../definition/IUser';\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { slashCommands } from '../../../app/utils/server';\nimport { Messages, Rooms, Users } from '../../../app/models/server';\nimport { Uploads } from '../../../app/models/server/raw';\nimport { Inbox, inboxes } from './EmailInbox';\nimport { sendMessage } from '../../../app/lib/server/functions/sendMessage';\nimport { settings } from '../../../app/settings/server';\nimport { IMessage } from '../../../definition/IMessage';\n\nconst livechatQuoteRegExp = /^\\[\\s\\]\\(https?:\\/\\/.+\\/live\\/.+\\?msg=(?<id>.+?)\\)\\s(?<text>.+)/s;\n\nconst user: IUser = Users.findOneById('rocket.cat');\n\nconst language = settings.get<string>('Language') || 'en';\nconst t = (s: string): string => TAPi18n.__(s, { lng: language });\n\nconst sendErrorReplyMessage = (error: string, options: any): void => {\n\tif (!options?.rid || !options?.msgId) {\n\t\treturn;\n\t}\n\n\tconst message = {\n\t\tgroupable: false,\n\t\tmsg: `@${options.sender} something went wrong when replying email, sorry. **Error:**: ${error}`,\n\t\t_id: String(Date.now()),\n\t\trid: options.rid,\n\t\tts: new Date(),\n\t};\n\n\tsendMessage(user, message, { _id: options.rid });\n};\n\nfunction sendEmail(inbox: Inbox, mail: Mail.Options, options?: any): void {\n\tinbox.smtp\n\t\t.sendMail({\n\t\t\tfrom: inbox.config.senderInfo\n\t\t\t\t? {\n\t\t\t\t\t\tname: inbox.config.senderInfo,\n\t\t\t\t\t\taddress: inbox.config.email,\n\t\t\t\t  }\n\t\t\t\t: inbox.config.email,\n\t\t\t...mail,\n\t\t})\n\t\t.then((info) => {\n\t\t\tconsole.log('Message sent: %s', info.messageId);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log('Error sending Email reply: %s', error.message);\n\n\t\t\tif (!options?.msgId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsendErrorReplyMessage(error.message, options);\n\t\t});\n}\n\nslashCommands.add(\n\t'sendEmailAttachment',\n\t(command: any, params: string) => {\n\t\tif (command !== 'sendEmailAttachment' || !Match.test(params, String)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = Messages.findOneById(params.trim());\n\n\t\tif (!message || !message.file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = Rooms.findOneById(message.rid);\n\n\t\tconst inbox = inboxes.get(room.email.inbox);\n\n\t\tif (!inbox) {\n\t\t\treturn sendErrorReplyMessage(`Email inbox ${room.email.inbox} not found or disabled.`, {\n\t\t\t\tmsgId: message._id,\n\t\t\t\tsender: message.u.username,\n\t\t\t\trid: room._id,\n\t\t\t});\n\t\t}\n\n\t\tconst file = Promise.await(Uploads.findOneById(message.file._id));\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tFileUpload.getBuffer(file, (_err?: Error, buffer?: Buffer) => {\n\t\t\t!_err &&\n\t\t\t\tbuffer &&\n\t\t\t\tsendEmail(\n\t\t\t\t\tinbox,\n\t\t\t\t\t{\n\t\t\t\t\t\tto: room.email.replyTo,\n\t\t\t\t\t\tsubject: room.email.subject,\n\t\t\t\t\t\ttext: message.attachments[0].description || '',\n\t\t\t\t\t\tattachments: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontent: buffer,\n\t\t\t\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\t\t\t\tfilename: file.name,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tinReplyTo: room.email.thread,\n\t\t\t\t\t\treferences: [room.email.thread],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmsgId: message._id,\n\t\t\t\t\t\tsender: message.u.username,\n\t\t\t\t\t\trid: message.rid,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t});\n\n\t\tMessages.update(\n\t\t\t{ _id: message._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tblocks: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'context',\n\t\t\t\t\t\t\telements: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\t\t\t\ttext: `**${t('To')}:** ${room.email.replyTo}\\n**${t('Subject')}:** ${room.email.subject}`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t$pull: {\n\t\t\t\t\tattachments: { 'actions.0.type': 'button' },\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t},\n\t{\n\t\tdescription: 'Send attachment as email',\n\t\tparams: 'msg_id',\n\t},\n\tundefined,\n\tfalse,\n\tundefined,\n\tundefined,\n);\n\ncallbacks.add(\n\t'beforeSaveMessage',\n\tfunction (message: IMessage, room: any) {\n\t\tif (!room?.email?.inbox) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (message.file) {\n\t\t\tmessage.attachments = message.attachments || [];\n\t\t\tmessage.attachments.push({\n\t\t\t\tactions: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\ttext: t('Send_via_Email_as_attachment'),\n\t\t\t\t\t\tmsg: `/sendEmailAttachment ${message._id}`,\n\t\t\t\t\t\tmsg_in_chat_window: true,\n\t\t\t\t\t\tmsg_processing_type: 'sendMessage',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\n\t\t\treturn message;\n\t\t}\n\n\t\tconst { msg } = message;\n\n\t\t// Try to identify a quote in a livechat room\n\t\tconst match = msg.match(livechatQuoteRegExp);\n\t\tif (!match?.groups) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst inbox = inboxes.get(room.email.inbox);\n\n\t\tif (!inbox) {\n\t\t\tsendErrorReplyMessage(`Email inbox ${room.email.inbox} not found or disabled.`, {\n\t\t\t\tmsgId: message._id,\n\t\t\t\tsender: message.u.username,\n\t\t\t\trid: room._id,\n\t\t\t});\n\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!inbox) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst replyToMessage = Messages.findOneById(match.groups.id);\n\n\t\tif (!replyToMessage?.email?.messageId) {\n\t\t\treturn message;\n\t\t}\n\n\t\tsendEmail(\n\t\t\tinbox,\n\t\t\t{\n\t\t\t\ttext: match.groups.text,\n\t\t\t\tinReplyTo: replyToMessage.email.messageId,\n\t\t\t\treferences: [...(replyToMessage.email.references ?? []), replyToMessage.email.messageId],\n\t\t\t\tto: room.email.replyTo,\n\t\t\t\tsubject: room.email.subject,\n\t\t\t},\n\t\t\t{\n\t\t\t\tmsgId: message._id,\n\t\t\t\tsender: message.u.username,\n\t\t\t\trid: room._id,\n\t\t\t},\n\t\t);\n\n\t\tmessage.msg = match.groups.text;\n\n\t\tmessage.groupable = false;\n\n\t\tmessage.blocks = [\n\t\t\t{\n\t\t\t\ttype: 'context',\n\t\t\t\telements: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: `**${t('To')}:** ${room.email.replyTo}\\n**${t('Subject')}:** ${room.email.subject}`,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\ttext: message.msg,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\ttext: `> ---\\n${replyToMessage.msg.replace(/^/gm, '> ')}`,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tdelete message.urls;\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'ReplyEmail',\n);\n\nexport async function sendTestEmailToInbox(emailInboxRecord: IEmailInbox, user: IUser): Promise<void> {\n\tconst inbox = inboxes.get(emailInboxRecord.email);\n\n\tif (!inbox) {\n\t\tthrow new Error('inbox-not-found');\n\t}\n\n\tconst address = user.emails?.find((email) => email.verified)?.address;\n\n\tif (!address) {\n\t\tthrow new Error('user-without-verified-email');\n\t}\n\n\tconsole.log(`Sending testing email to ${address}`);\n\tsendEmail(inbox, {\n\t\tto: address,\n\t\tsubject: 'Test of inbox configuration',\n\t\ttext: 'Test of inbox configuration successful',\n\t});\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/features/EmailInbox/EmailInbox_Outgoing.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/features/EmailInbox/EmailInbox_Outgoing.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  sendTestEmailToInbox: () => sendTestEmailToInbox\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\nlet callbacks;\nmodule.link(\"../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 2);\nlet FileUpload;\nmodule.link(\"../../../app/file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 3);\nlet slashCommands;\nmodule.link(\"../../../app/utils/server\", {\n  slashCommands(v) {\n    slashCommands = v;\n  }\n\n}, 4);\nlet Messages, Rooms, Users;\nmodule.link(\"../../../app/models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 5);\nlet Uploads;\nmodule.link(\"../../../app/models/server/raw\", {\n  Uploads(v) {\n    Uploads = v;\n  }\n\n}, 6);\nlet inboxes;\nmodule.link(\"./EmailInbox\", {\n  inboxes(v) {\n    inboxes = v;\n  }\n\n}, 7);\nlet sendMessage;\nmodule.link(\"../../../app/lib/server/functions/sendMessage\", {\n  sendMessage(v) {\n    sendMessage = v;\n  }\n\n}, 8);\nlet settings;\nmodule.link(\"../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 9);\nconst livechatQuoteRegExp = /^\\[\\s\\]\\(https?:\\/\\/.+\\/live\\/.+\\?msg=(?<id>.+?)\\)\\s(?<text>.+)/s;\nconst user = Users.findOneById('rocket.cat');\nconst language = settings.get('Language') || 'en';\n\nconst t = s => TAPi18n.__(s, {\n  lng: language\n});\n\nconst sendErrorReplyMessage = (error, options) => {\n  if (!(options !== null && options !== void 0 && options.rid) || !(options !== null && options !== void 0 && options.msgId)) {\n    return;\n  }\n\n  const message = {\n    groupable: false,\n    msg: \"@\".concat(options.sender, \" something went wrong when replying email, sorry. **Error:**: \").concat(error),\n    _id: String(Date.now()),\n    rid: options.rid,\n    ts: new Date()\n  };\n  sendMessage(user, message, {\n    _id: options.rid\n  });\n};\n\nfunction sendEmail(inbox, mail, options) {\n  inbox.smtp.sendMail(_objectSpread({\n    from: inbox.config.senderInfo ? {\n      name: inbox.config.senderInfo,\n      address: inbox.config.email\n    } : inbox.config.email\n  }, mail)).then(info => {\n    console.log('Message sent: %s', info.messageId);\n  }).catch(error => {\n    console.log('Error sending Email reply: %s', error.message);\n\n    if (!(options !== null && options !== void 0 && options.msgId)) {\n      return;\n    }\n\n    sendErrorReplyMessage(error.message, options);\n  });\n}\n\nslashCommands.add('sendEmailAttachment', (command, params) => {\n  if (command !== 'sendEmailAttachment' || !Match.test(params, String)) {\n    return;\n  }\n\n  const message = Messages.findOneById(params.trim());\n\n  if (!message || !message.file) {\n    return;\n  }\n\n  const room = Rooms.findOneById(message.rid);\n  const inbox = inboxes.get(room.email.inbox);\n\n  if (!inbox) {\n    return sendErrorReplyMessage(\"Email inbox \".concat(room.email.inbox, \" not found or disabled.\"), {\n      msgId: message._id,\n      sender: message.u.username,\n      rid: room._id\n    });\n  }\n\n  const file = Promise.await(Uploads.findOneById(message.file._id));\n\n  if (!file) {\n    return;\n  }\n\n  FileUpload.getBuffer(file, (_err, buffer) => {\n    !_err && buffer && sendEmail(inbox, {\n      to: room.email.replyTo,\n      subject: room.email.subject,\n      text: message.attachments[0].description || '',\n      attachments: [{\n        content: buffer,\n        contentType: file.type,\n        filename: file.name\n      }],\n      inReplyTo: room.email.thread,\n      references: [room.email.thread]\n    }, {\n      msgId: message._id,\n      sender: message.u.username,\n      rid: message.rid\n    });\n  });\n  Messages.update({\n    _id: message._id\n  }, {\n    $set: {\n      blocks: [{\n        type: 'context',\n        elements: [{\n          type: 'mrkdwn',\n          text: \"**\".concat(t('To'), \":** \").concat(room.email.replyTo, \"\\n**\").concat(t('Subject'), \":** \").concat(room.email.subject)\n        }]\n      }]\n    },\n    $pull: {\n      attachments: {\n        'actions.0.type': 'button'\n      }\n    }\n  });\n}, {\n  description: 'Send attachment as email',\n  params: 'msg_id'\n}, undefined, false, undefined, undefined);\ncallbacks.add('beforeSaveMessage', function (message, room) {\n  var _room$email, _replyToMessage$email, _replyToMessage$email2;\n\n  if (!(room !== null && room !== void 0 && (_room$email = room.email) !== null && _room$email !== void 0 && _room$email.inbox)) {\n    return message;\n  }\n\n  if (message.file) {\n    message.attachments = message.attachments || [];\n    message.attachments.push({\n      actions: [{\n        type: 'button',\n        text: t('Send_via_Email_as_attachment'),\n        msg: \"/sendEmailAttachment \".concat(message._id),\n        msg_in_chat_window: true,\n        msg_processing_type: 'sendMessage'\n      }]\n    });\n    return message;\n  }\n\n  const {\n    msg\n  } = message; // Try to identify a quote in a livechat room\n\n  const match = msg.match(livechatQuoteRegExp);\n\n  if (!(match !== null && match !== void 0 && match.groups)) {\n    return message;\n  }\n\n  const inbox = inboxes.get(room.email.inbox);\n\n  if (!inbox) {\n    sendErrorReplyMessage(\"Email inbox \".concat(room.email.inbox, \" not found or disabled.\"), {\n      msgId: message._id,\n      sender: message.u.username,\n      rid: room._id\n    });\n    return message;\n  }\n\n  if (!inbox) {\n    return message;\n  }\n\n  const replyToMessage = Messages.findOneById(match.groups.id);\n\n  if (!(replyToMessage !== null && replyToMessage !== void 0 && (_replyToMessage$email = replyToMessage.email) !== null && _replyToMessage$email !== void 0 && _replyToMessage$email.messageId)) {\n    return message;\n  }\n\n  sendEmail(inbox, {\n    text: match.groups.text,\n    inReplyTo: replyToMessage.email.messageId,\n    references: [...((_replyToMessage$email2 = replyToMessage.email.references) !== null && _replyToMessage$email2 !== void 0 ? _replyToMessage$email2 : []), replyToMessage.email.messageId],\n    to: room.email.replyTo,\n    subject: room.email.subject\n  }, {\n    msgId: message._id,\n    sender: message.u.username,\n    rid: room._id\n  });\n  message.msg = match.groups.text;\n  message.groupable = false;\n  message.blocks = [{\n    type: 'context',\n    elements: [{\n      type: 'mrkdwn',\n      text: \"**\".concat(t('To'), \":** \").concat(room.email.replyTo, \"\\n**\").concat(t('Subject'), \":** \").concat(room.email.subject)\n    }]\n  }, {\n    type: 'section',\n    text: {\n      type: 'mrkdwn',\n      text: message.msg\n    }\n  }, {\n    type: 'section',\n    text: {\n      type: 'mrkdwn',\n      text: \"> ---\\n\".concat(replyToMessage.msg.replace(/^/gm, '> '))\n    }\n  }];\n  delete message.urls;\n  return message;\n}, callbacks.priority.LOW, 'ReplyEmail');\n\nfunction sendTestEmailToInbox(emailInboxRecord, user) {\n  return Promise.asyncApply(() => {\n    var _user$emails, _user$emails$find;\n\n    const inbox = inboxes.get(emailInboxRecord.email);\n\n    if (!inbox) {\n      throw new Error('inbox-not-found');\n    }\n\n    const address = (_user$emails = user.emails) === null || _user$emails === void 0 ? void 0 : (_user$emails$find = _user$emails.find(email => email.verified)) === null || _user$emails$find === void 0 ? void 0 : _user$emails$find.address;\n\n    if (!address) {\n      throw new Error('user-without-verified-email');\n    }\n\n    console.log(\"Sending testing email to \".concat(address));\n    sendEmail(inbox, {\n      to: address,\n      subject: 'Test of inbox configuration',\n      text: 'Test of inbox configuration successful'\n    });\n  });\n}","map":{"version":3,"sources":["server/features/EmailInbox/EmailInbox_Outgoing.ts"],"names":[],"mappings":"AAEA,IAAA,aAAA;;AAAgB,MAAM,CAAA,IAAN,CAAM,sCAAN,EAAqB;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAArB,EAAqB,CAArB;AAAhB,MAAA,CAAO,MAAP,CAAc;AAAA,EAAA,oBAAQ,EAAc,MAAC;AAAvB,CAAd;AAAqC,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA,EAAA,KAAA,EAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+CAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAerC,MAAM,mBAAmB,GAAG,kEAA5B;AAEA,MAAM,IAAI,GAAU,KAAK,CAAC,WAAN,CAAkB,YAAlB,CAApB;AAEA,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAT,CAAqB,UAArB,KAAoC,IAArD;;AACA,MAAM,CAAC,GAAI,CAAD,IAAuB,OAAO,CAAC,EAAR,CAAW,CAAX,EAAc;AAAE,EAAA,GAAG,EAAE;AAAP,CAAd,CAAjC;;AAEA,MAAM,qBAAqB,GAAG,CAAC,KAAD,EAAgB,OAAhB,KAAsC;AACnE,MAAI,EAAC,OAAD,aAAC,OAAD,eAAC,OAAO,CAAE,GAAV,KAAiB,EAAC,OAAD,aAAC,OAAD,eAAC,OAAO,CAAE,KAAV,CAArB,EAAsC;AACrC;AACA;;AAED,QAAM,OAAO,GAAG;AACf,IAAA,SAAS,EAAE,KADI;AAEf,IAAA,GAAG,aAAM,OAAO,CAAC,MAAd,2EAAqF,KAArF,CAFY;AAGf,IAAA,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAL,EAAD,CAHI;AAIf,IAAA,GAAG,EAAE,OAAO,CAAC,GAJE;AAKf,IAAA,EAAE,EAAE,IAAI,IAAJ;AALW,GAAhB;AAQA,EAAA,WAAW,CAAC,IAAD,EAAO,OAAP,EAAgB;AAAE,IAAA,GAAG,EAAE,OAAO,CAAC;AAAf,GAAhB,CAAX;AACA,CAdD;;AAgBA,SAAS,SAAT,CAAmB,KAAnB,EAAiC,IAAjC,EAAqD,OAArD,EAAkE;AACjE,EAAA,KAAK,CAAC,IAAN,CACE,QADF;AAEE,IAAA,IAAI,EAAE,KAAK,CAAC,MAAN,CAAa,UAAb,GACH;AACA,MAAA,IAAI,EAAE,KAAK,CAAC,MAAN,CAAa,UADnB;AAEA,MAAA,OAAO,EAAE,KAAK,CAAC,MAAN,CAAa;AAFtB,KADG,GAKH,KAAK,CAAC,MAAN,CAAa;AAPlB,KAQK,IARL,GAUE,IAVF,CAUQ,IAAD,IAAS;AACd,IAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,IAAI,CAAC,SAArC;AACA,GAZF,EAaE,KAbF,CAaS,KAAD,IAAU;AAChB,IAAA,OAAO,CAAC,GAAR,CAAY,+BAAZ,EAA6C,KAAK,CAAC,OAAnD;;AAEA,QAAI,EAAC,OAAD,aAAC,OAAD,eAAC,OAAO,CAAE,KAAV,CAAJ,EAAqB;AACpB;AACA;;AAED,IAAA,qBAAqB,CAAC,KAAK,CAAC,OAAP,EAAgB,OAAhB,CAArB;AACA,GArBF;AAsBA;;AAED,aAAa,CAAC,GAAd,CACC,qBADD,EAEC,CAAC,OAAD,EAAe,MAAf,KAAiC;AAChC,MAAI,OAAO,KAAK,qBAAZ,IAAqC,CAAC,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,MAAnB,CAA1C,EAAsE;AACrE;AACA;;AAED,QAAM,OAAO,GAAG,QAAQ,CAAC,WAAT,CAAqB,MAAM,CAAC,IAAP,EAArB,CAAhB;;AAEA,MAAI,CAAC,OAAD,IAAY,CAAC,OAAO,CAAC,IAAzB,EAA+B;AAC9B;AACA;;AAED,QAAM,IAAI,GAAG,KAAK,CAAC,WAAN,CAAkB,OAAO,CAAC,GAA1B,CAAb;AAEA,QAAM,KAAK,GAAG,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,KAAL,CAAW,KAAvB,CAAd;;AAEA,MAAI,CAAC,KAAL,EAAY;AACX,WAAO,qBAAqB,uBAAgB,IAAI,CAAC,KAAL,CAAW,KAA3B,8BAA2D;AACtF,MAAA,KAAK,EAAE,OAAO,CAAC,GADuE;AAEtF,MAAA,MAAM,EAAE,OAAO,CAAC,CAAR,CAAU,QAFoE;AAGtF,MAAA,GAAG,EAAE,IAAI,CAAC;AAH4E,KAA3D,CAA5B;AAKA;;AAED,QAAM,IAAI,GAAG,OAAO,CAAC,KAAR,CAAc,OAAO,CAAC,WAAR,CAAoB,OAAO,CAAC,IAAR,CAAa,GAAjC,CAAd,CAAb;;AAEA,MAAI,CAAC,IAAL,EAAW;AACV;AACA;;AAED,EAAA,UAAU,CAAC,SAAX,CAAqB,IAArB,EAA2B,CAAC,IAAD,EAAe,MAAf,KAAkC;AAC5D,KAAC,IAAD,IACC,MADD,IAEC,SAAS,CACR,KADQ,EAER;AACC,MAAA,EAAE,EAAE,IAAI,CAAC,KAAL,CAAW,OADhB;AAEC,MAAA,OAAO,EAAE,IAAI,CAAC,KAAL,CAAW,OAFrB;AAGC,MAAA,IAAI,EAAE,OAAO,CAAC,WAAR,CAAoB,CAApB,EAAuB,WAAvB,IAAsC,EAH7C;AAIC,MAAA,WAAW,EAAE,CACZ;AACC,QAAA,OAAO,EAAE,MADV;AAEC,QAAA,WAAW,EAAE,IAAI,CAAC,IAFnB;AAGC,QAAA,QAAQ,EAAE,IAAI,CAAC;AAHhB,OADY,CAJd;AAWC,MAAA,SAAS,EAAE,IAAI,CAAC,KAAL,CAAW,MAXvB;AAYC,MAAA,UAAU,EAAE,CAAC,IAAI,CAAC,KAAL,CAAW,MAAZ;AAZb,KAFQ,EAgBR;AACC,MAAA,KAAK,EAAE,OAAO,CAAC,GADhB;AAEC,MAAA,MAAM,EAAE,OAAO,CAAC,CAAR,CAAU,QAFnB;AAGC,MAAA,GAAG,EAAE,OAAO,CAAC;AAHd,KAhBQ,CAFV;AAwBA,GAzBD;AA2BA,EAAA,QAAQ,CAAC,MAAT,CACC;AAAE,IAAA,GAAG,EAAE,OAAO,CAAC;AAAf,GADD,EAEC;AACC,IAAA,IAAI,EAAE;AACL,MAAA,MAAM,EAAE,CACP;AACC,QAAA,IAAI,EAAE,SADP;AAEC,QAAA,QAAQ,EAAE,CACT;AACC,UAAA,IAAI,EAAE,QADP;AAEC,UAAA,IAAI,cAAO,CAAC,CAAC,IAAD,CAAR,iBAAqB,IAAI,CAAC,KAAL,CAAW,OAAhC,iBAA8C,CAAC,CAAC,SAAD,CAA/C,iBAAiE,IAAI,CAAC,KAAL,CAAW,OAA5E;AAFL,SADS;AAFX,OADO;AADH,KADP;AAcC,IAAA,KAAK,EAAE;AACN,MAAA,WAAW,EAAE;AAAE,0BAAkB;AAApB;AADP;AAdR,GAFD;AAqBA,CA/EF,EAgFC;AACC,EAAA,WAAW,EAAE,0BADd;AAEC,EAAA,MAAM,EAAE;AAFT,CAhFD,EAoFC,SApFD,EAqFC,KArFD,EAsFC,SAtFD,EAuFC,SAvFD;AA0FA,SAAS,CAAC,GAAV,CACC,mBADD,EAEC,UAAU,OAAV,EAA6B,IAA7B,EAAsC;AAAA;;AACrC,MAAI,EAAC,IAAD,aAAC,IAAD,8BAAC,IAAI,CAAE,KAAP,wCAAC,YAAa,KAAd,CAAJ,EAAyB;AACxB,WAAO,OAAP;AACA;;AAED,MAAI,OAAO,CAAC,IAAZ,EAAkB;AACjB,IAAA,OAAO,CAAC,WAAR,GAAsB,OAAO,CAAC,WAAR,IAAuB,EAA7C;AACA,IAAA,OAAO,CAAC,WAAR,CAAoB,IAApB,CAAyB;AACxB,MAAA,OAAO,EAAE,CACR;AACC,QAAA,IAAI,EAAE,QADP;AAEC,QAAA,IAAI,EAAE,CAAC,CAAC,8BAAD,CAFR;AAGC,QAAA,GAAG,iCAA0B,OAAO,CAAC,GAAlC,CAHJ;AAIC,QAAA,kBAAkB,EAAE,IAJrB;AAKC,QAAA,mBAAmB,EAAE;AALtB,OADQ;AADe,KAAzB;AAYA,WAAO,OAAP;AACA;;AAED,QAAM;AAAE,IAAA;AAAF,MAAU,OAAhB,CAtBqC,CAwBrC;;AACA,QAAM,KAAK,GAAG,GAAG,CAAC,KAAJ,CAAU,mBAAV,CAAd;;AACA,MAAI,EAAC,KAAD,aAAC,KAAD,eAAC,KAAK,CAAE,MAAR,CAAJ,EAAoB;AACnB,WAAO,OAAP;AACA;;AAED,QAAM,KAAK,GAAG,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,KAAL,CAAW,KAAvB,CAAd;;AAEA,MAAI,CAAC,KAAL,EAAY;AACX,IAAA,qBAAqB,uBAAgB,IAAI,CAAC,KAAL,CAAW,KAA3B,8BAA2D;AAC/E,MAAA,KAAK,EAAE,OAAO,CAAC,GADgE;AAE/E,MAAA,MAAM,EAAE,OAAO,CAAC,CAAR,CAAU,QAF6D;AAG/E,MAAA,GAAG,EAAE,IAAI,CAAC;AAHqE,KAA3D,CAArB;AAMA,WAAO,OAAP;AACA;;AAED,MAAI,CAAC,KAAL,EAAY;AACX,WAAO,OAAP;AACA;;AAED,QAAM,cAAc,GAAG,QAAQ,CAAC,WAAT,CAAqB,KAAK,CAAC,MAAN,CAAa,EAAlC,CAAvB;;AAEA,MAAI,EAAC,cAAD,aAAC,cAAD,wCAAC,cAAc,CAAE,KAAjB,kDAAC,sBAAuB,SAAxB,CAAJ,EAAuC;AACtC,WAAO,OAAP;AACA;;AAED,EAAA,SAAS,CACR,KADQ,EAER;AACC,IAAA,IAAI,EAAE,KAAK,CAAC,MAAN,CAAa,IADpB;AAEC,IAAA,SAAS,EAAE,cAAc,CAAC,KAAf,CAAqB,SAFjC;AAGC,IAAA,UAAU,EAAE,CAAC,8BAAI,cAAc,CAAC,KAAf,CAAqB,UAAzB,2EAAuC,EAAvC,CAAD,EAA6C,cAAc,CAAC,KAAf,CAAqB,SAAlE,CAHb;AAIC,IAAA,EAAE,EAAE,IAAI,CAAC,KAAL,CAAW,OAJhB;AAKC,IAAA,OAAO,EAAE,IAAI,CAAC,KAAL,CAAW;AALrB,GAFQ,EASR;AACC,IAAA,KAAK,EAAE,OAAO,CAAC,GADhB;AAEC,IAAA,MAAM,EAAE,OAAO,CAAC,CAAR,CAAU,QAFnB;AAGC,IAAA,GAAG,EAAE,IAAI,CAAC;AAHX,GATQ,CAAT;AAgBA,EAAA,OAAO,CAAC,GAAR,GAAc,KAAK,CAAC,MAAN,CAAa,IAA3B;AAEA,EAAA,OAAO,CAAC,SAAR,GAAoB,KAApB;AAEA,EAAA,OAAO,CAAC,MAAR,GAAiB,CAChB;AACC,IAAA,IAAI,EAAE,SADP;AAEC,IAAA,QAAQ,EAAE,CACT;AACC,MAAA,IAAI,EAAE,QADP;AAEC,MAAA,IAAI,cAAO,CAAC,CAAC,IAAD,CAAR,iBAAqB,IAAI,CAAC,KAAL,CAAW,OAAhC,iBAA8C,CAAC,CAAC,SAAD,CAA/C,iBAAiE,IAAI,CAAC,KAAL,CAAW,OAA5E;AAFL,KADS;AAFX,GADgB,EAUhB;AACC,IAAA,IAAI,EAAE,SADP;AAEC,IAAA,IAAI,EAAE;AACL,MAAA,IAAI,EAAE,QADD;AAEL,MAAA,IAAI,EAAE,OAAO,CAAC;AAFT;AAFP,GAVgB,EAiBhB;AACC,IAAA,IAAI,EAAE,SADP;AAEC,IAAA,IAAI,EAAE;AACL,MAAA,IAAI,EAAE,QADD;AAEL,MAAA,IAAI,mBAAY,cAAc,CAAC,GAAf,CAAmB,OAAnB,CAA2B,KAA3B,EAAkC,IAAlC,CAAZ;AAFC;AAFP,GAjBgB,CAAjB;AA0BA,SAAO,OAAO,CAAC,IAAf;AAEA,SAAO,OAAP;AACA,CAvGF,EAwGC,SAAS,CAAC,QAAV,CAAmB,GAxGpB,EAyGC,YAzGD;;AA4GO,SAAe,oBAAf,CAAoC,gBAApC,EAAmE,IAAnE;AAAA,kCAA8E;AAAA;;AACpF,UAAM,KAAK,GAAG,OAAO,CAAC,GAAR,CAAY,gBAAgB,CAAC,KAA7B,CAAd;;AAEA,QAAI,CAAC,KAAL,EAAY;AACX,YAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACA;;AAED,UAAM,OAAO,mBAAG,IAAI,CAAC,MAAR,sEAAG,aAAa,IAAb,CAAmB,KAAD,IAAW,KAAK,CAAC,QAAnC,CAAH,sDAAG,kBAA8C,OAA9D;;AAEA,QAAI,CAAC,OAAL,EAAc;AACb,YAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACA;;AAED,IAAA,OAAO,CAAC,GAAR,oCAAwC,OAAxC;AACA,IAAA,SAAS,CAAC,KAAD,EAAQ;AAChB,MAAA,EAAE,EAAE,OADY;AAEhB,MAAA,OAAO,EAAE,6BAFO;AAGhB,MAAA,IAAI,EAAE;AAHU,KAAR,CAAT;AAKA,GAnBM;AAAA","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\nimport Mail from 'nodemailer/lib/mailer';\nimport { Match } from 'meteor/check';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { callbacks } from '../../../lib/callbacks';\nimport { IEmailInbox } from '../../../definition/IEmailInbox';\nimport { IUser } from '../../../definition/IUser';\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { slashCommands } from '../../../app/utils/server';\nimport { Messages, Rooms, Users } from '../../../app/models/server';\nimport { Uploads } from '../../../app/models/server/raw';\nimport { Inbox, inboxes } from './EmailInbox';\nimport { sendMessage } from '../../../app/lib/server/functions/sendMessage';\nimport { settings } from '../../../app/settings/server';\nimport { IMessage } from '../../../definition/IMessage';\n\nconst livechatQuoteRegExp = /^\\[\\s\\]\\(https?:\\/\\/.+\\/live\\/.+\\?msg=(?<id>.+?)\\)\\s(?<text>.+)/s;\n\nconst user: IUser = Users.findOneById('rocket.cat');\n\nconst language = settings.get<string>('Language') || 'en';\nconst t = (s: string): string => TAPi18n.__(s, { lng: language });\n\nconst sendErrorReplyMessage = (error: string, options: any): void => {\n\tif (!options?.rid || !options?.msgId) {\n\t\treturn;\n\t}\n\n\tconst message = {\n\t\tgroupable: false,\n\t\tmsg: `@${options.sender} something went wrong when replying email, sorry. **Error:**: ${error}`,\n\t\t_id: String(Date.now()),\n\t\trid: options.rid,\n\t\tts: new Date(),\n\t};\n\n\tsendMessage(user, message, { _id: options.rid });\n};\n\nfunction sendEmail(inbox: Inbox, mail: Mail.Options, options?: any): void {\n\tinbox.smtp\n\t\t.sendMail({\n\t\t\tfrom: inbox.config.senderInfo\n\t\t\t\t? {\n\t\t\t\t\t\tname: inbox.config.senderInfo,\n\t\t\t\t\t\taddress: inbox.config.email,\n\t\t\t\t  }\n\t\t\t\t: inbox.config.email,\n\t\t\t...mail,\n\t\t})\n\t\t.then((info) => {\n\t\t\tconsole.log('Message sent: %s', info.messageId);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log('Error sending Email reply: %s', error.message);\n\n\t\t\tif (!options?.msgId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsendErrorReplyMessage(error.message, options);\n\t\t});\n}\n\nslashCommands.add(\n\t'sendEmailAttachment',\n\t(command: any, params: string) => {\n\t\tif (command !== 'sendEmailAttachment' || !Match.test(params, String)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = Messages.findOneById(params.trim());\n\n\t\tif (!message || !message.file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = Rooms.findOneById(message.rid);\n\n\t\tconst inbox = inboxes.get(room.email.inbox);\n\n\t\tif (!inbox) {\n\t\t\treturn sendErrorReplyMessage(`Email inbox ${room.email.inbox} not found or disabled.`, {\n\t\t\t\tmsgId: message._id,\n\t\t\t\tsender: message.u.username,\n\t\t\t\trid: room._id,\n\t\t\t});\n\t\t}\n\n\t\tconst file = Promise.await(Uploads.findOneById(message.file._id));\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tFileUpload.getBuffer(file, (_err?: Error, buffer?: Buffer) => {\n\t\t\t!_err &&\n\t\t\t\tbuffer &&\n\t\t\t\tsendEmail(\n\t\t\t\t\tinbox,\n\t\t\t\t\t{\n\t\t\t\t\t\tto: room.email.replyTo,\n\t\t\t\t\t\tsubject: room.email.subject,\n\t\t\t\t\t\ttext: message.attachments[0].description || '',\n\t\t\t\t\t\tattachments: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontent: buffer,\n\t\t\t\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\t\t\t\tfilename: file.name,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tinReplyTo: room.email.thread,\n\t\t\t\t\t\treferences: [room.email.thread],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmsgId: message._id,\n\t\t\t\t\t\tsender: message.u.username,\n\t\t\t\t\t\trid: message.rid,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t});\n\n\t\tMessages.update(\n\t\t\t{ _id: message._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tblocks: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'context',\n\t\t\t\t\t\t\telements: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\t\t\t\ttext: `**${t('To')}:** ${room.email.replyTo}\\n**${t('Subject')}:** ${room.email.subject}`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t$pull: {\n\t\t\t\t\tattachments: { 'actions.0.type': 'button' },\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t},\n\t{\n\t\tdescription: 'Send attachment as email',\n\t\tparams: 'msg_id',\n\t},\n\tundefined,\n\tfalse,\n\tundefined,\n\tundefined,\n);\n\ncallbacks.add(\n\t'beforeSaveMessage',\n\tfunction (message: IMessage, room: any) {\n\t\tif (!room?.email?.inbox) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (message.file) {\n\t\t\tmessage.attachments = message.attachments || [];\n\t\t\tmessage.attachments.push({\n\t\t\t\tactions: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\ttext: t('Send_via_Email_as_attachment'),\n\t\t\t\t\t\tmsg: `/sendEmailAttachment ${message._id}`,\n\t\t\t\t\t\tmsg_in_chat_window: true,\n\t\t\t\t\t\tmsg_processing_type: 'sendMessage',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\n\t\t\treturn message;\n\t\t}\n\n\t\tconst { msg } = message;\n\n\t\t// Try to identify a quote in a livechat room\n\t\tconst match = msg.match(livechatQuoteRegExp);\n\t\tif (!match?.groups) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst inbox = inboxes.get(room.email.inbox);\n\n\t\tif (!inbox) {\n\t\t\tsendErrorReplyMessage(`Email inbox ${room.email.inbox} not found or disabled.`, {\n\t\t\t\tmsgId: message._id,\n\t\t\t\tsender: message.u.username,\n\t\t\t\trid: room._id,\n\t\t\t});\n\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!inbox) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst replyToMessage = Messages.findOneById(match.groups.id);\n\n\t\tif (!replyToMessage?.email?.messageId) {\n\t\t\treturn message;\n\t\t}\n\n\t\tsendEmail(\n\t\t\tinbox,\n\t\t\t{\n\t\t\t\ttext: match.groups.text,\n\t\t\t\tinReplyTo: replyToMessage.email.messageId,\n\t\t\t\treferences: [...(replyToMessage.email.references ?? []), replyToMessage.email.messageId],\n\t\t\t\tto: room.email.replyTo,\n\t\t\t\tsubject: room.email.subject,\n\t\t\t},\n\t\t\t{\n\t\t\t\tmsgId: message._id,\n\t\t\t\tsender: message.u.username,\n\t\t\t\trid: room._id,\n\t\t\t},\n\t\t);\n\n\t\tmessage.msg = match.groups.text;\n\n\t\tmessage.groupable = false;\n\n\t\tmessage.blocks = [\n\t\t\t{\n\t\t\t\ttype: 'context',\n\t\t\t\telements: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: `**${t('To')}:** ${room.email.replyTo}\\n**${t('Subject')}:** ${room.email.subject}`,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\ttext: message.msg,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\ttext: `> ---\\n${replyToMessage.msg.replace(/^/gm, '> ')}`,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tdelete message.urls;\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'ReplyEmail',\n);\n\nexport async function sendTestEmailToInbox(emailInboxRecord: IEmailInbox, user: IUser): Promise<void> {\n\tconst inbox = inboxes.get(emailInboxRecord.email);\n\n\tif (!inbox) {\n\t\tthrow new Error('inbox-not-found');\n\t}\n\n\tconst address = user.emails?.find((email) => email.verified)?.address;\n\n\tif (!address) {\n\t\tthrow new Error('user-without-verified-email');\n\t}\n\n\tconsole.log(`Sending testing email to ${address}`);\n\tsendEmail(inbox, {\n\t\tto: address,\n\t\tsubject: 'Test of inbox configuration',\n\t\ttext: 'Test of inbox configuration successful',\n\t});\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"4ff0246083dd0c9df1860d2c8fc7c239b51aad72"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/ImportData.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/models/ImportData.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/ImportData.ts","inputSourceMap":{"version":3,"file":"app/models/server/models/ImportData.ts","sourceRoot":"","sources":["app/models/server/models/ImportData.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAG/B,MAAM,eAAgB,SAAQ,IAAI;IACjC;QACC,KAAK,CAAC,aAAa,CAAC,CAAC;IACtB,CAAC;IAED,uBAAuB;QACtB,OAAO,IAAI,CAAC,IAAI,CACf;YACC,QAAQ,EAAE,MAAM;SAChB,EACD;YACC,MAAM,EAAE;gBACP,gBAAgB,EAAE,CAAC;gBACnB,eAAe,EAAE,CAAC;gBAClB,aAAa,EAAE,CAAC;gBAChB,cAAc,EAAE,CAAC;gBACjB,WAAW,EAAE,CAAC;aACd;SACD,CACD,CAAC,KAAK,EAAE,CAAC;IACX,CAAC;IAED,0BAA0B;QACzB,OAAO,IAAI,CAAC,IAAI,CACf;YACC,UAAU,EAAE,SAAS;YACrB,QAAQ,EAAE;gBACT,GAAG,EAAE,GAAG;aACR;SACD,EACD;YACC,MAAM,EAAE;gBACP,gBAAgB,EAAE,CAAC;gBACnB,WAAW,EAAE,CAAC;gBACd,eAAe,EAAE,CAAC;gBAClB,QAAQ,EAAE,CAAC;aACX;SACD,CACD,CAAC,KAAK,EAAE,CAAC;IACX,CAAC;IAED,2BAA2B;QAC1B,OAAO,CACN,IAAI,CAAC,IAAI,CACR;YACC,UAAU,EAAE,SAAS;YACrB,QAAQ,EAAE,GAAG;SACb,EACD;YACC,MAAM,EAAE;gBACP,GAAG,EAAE,CAAC;aACN;SACD,CACD,CAAC,KAAK,EAAE,GAAG,CAAC,CACb,CAAC;IACH,CAAC;IAED,aAAa;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;YAChB,QAAQ,EAAE,SAAS;SACnB,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,mCAAmC,CAAC,iBAAyB;QAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAC3B;YACC,QAAQ,EAAE,SAAS;YACnB,GAAG,EAAE;gBACJ;oBACC,WAAW,EAAE,iBAAiB;iBAC9B;gBACD;oBACC,gBAAgB,EAAE,iBAAiB;iBACnC;aACD;SACD,EACD;YACC,MAAM,EAAE;gBACP,gBAAgB,EAAE,CAAC;aACnB;SACD,CACD,CAAC;QAEF,OAAO,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;IAC1C,CAAC;IAED,sBAAsB,CAAC,GAAG,KAAoB;QAC7C,MAAM,KAAK,GAAG;YACb,UAAU,EAAE,SAAS;YACrB,YAAY,EAAE;gBACb,IAAI,EAAE,KAAK;aACX;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;CACD;AAED,eAAe,IAAI,eAAe,EAAE,CAAC","sourcesContent":["import { Base } from './_Base';\nimport { IImportUserRecord, IImportChannelRecord } from '../../../../definition/IImportRecord';\n\nclass ImportDataModel extends Base {\n\tconstructor() {\n\t\tsuper('import_data');\n\t}\n\n\tgetAllUsersForSelection(): Array<IImportUserRecord> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\tdataType: 'user',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'data.importIds': 1,\n\t\t\t\t\t'data.username': 1,\n\t\t\t\t\t'data.emails': 1,\n\t\t\t\t\t'data.deleted': 1,\n\t\t\t\t\t'data.type': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t).fetch();\n\t}\n\n\tgetAllChannelsForSelection(): Array<IImportChannelRecord> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\t'dataType': 'channel',\n\t\t\t\t'data.t': {\n\t\t\t\t\t$ne: 'd',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'data.importIds': 1,\n\t\t\t\t\t'data.name': 1,\n\t\t\t\t\t'data.archived': 1,\n\t\t\t\t\t'data.t': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t).fetch();\n\t}\n\n\tcheckIfDirectMessagesExists(): boolean {\n\t\treturn (\n\t\t\tthis.find(\n\t\t\t\t{\n\t\t\t\t\t'dataType': 'channel',\n\t\t\t\t\t'data.t': 'd',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfields: {\n\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t).count() > 0\n\t\t);\n\t}\n\n\tcountMessages(): number {\n\t\treturn this.find({\n\t\t\tdataType: 'message',\n\t\t}).count();\n\t}\n\n\tfindChannelImportIdByNameOrImportId(channelIdentifier: string): string | undefined {\n\t\tconst channel = this.findOne(\n\t\t\t{\n\t\t\t\tdataType: 'channel',\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\t'data.name': channelIdentifier,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'data.importIds': channelIdentifier,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'data.importIds': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn channel?.data?.importIds?.shift();\n\t}\n\n\tfindDMForImportedUsers(...users: Array<string>): IImportChannelRecord | undefined {\n\t\tconst query = {\n\t\t\t'dataType': 'channel',\n\t\t\t'data.users': {\n\t\t\t\t$all: users,\n\t\t\t},\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n}\n\nexport default new ImportDataModel();\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/ImportData.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/models/ImportData.ts"}},"code":"let Base;\nmodule.link(\"./_Base\", {\n  Base(v) {\n    Base = v;\n  }\n\n}, 0);\n\nclass ImportDataModel extends Base {\n  constructor() {\n    super('import_data');\n  }\n\n  getAllUsersForSelection() {\n    return this.find({\n      dataType: 'user'\n    }, {\n      fields: {\n        'data.importIds': 1,\n        'data.username': 1,\n        'data.emails': 1,\n        'data.deleted': 1,\n        'data.type': 1\n      }\n    }).fetch();\n  }\n\n  getAllChannelsForSelection() {\n    return this.find({\n      'dataType': 'channel',\n      'data.t': {\n        $ne: 'd'\n      }\n    }, {\n      fields: {\n        'data.importIds': 1,\n        'data.name': 1,\n        'data.archived': 1,\n        'data.t': 1\n      }\n    }).fetch();\n  }\n\n  checkIfDirectMessagesExists() {\n    return this.find({\n      'dataType': 'channel',\n      'data.t': 'd'\n    }, {\n      fields: {\n        _id: 1\n      }\n    }).count() > 0;\n  }\n\n  countMessages() {\n    return this.find({\n      dataType: 'message'\n    }).count();\n  }\n\n  findChannelImportIdByNameOrImportId(channelIdentifier) {\n    var _channel$data, _channel$data$importI;\n\n    const channel = this.findOne({\n      dataType: 'channel',\n      $or: [{\n        'data.name': channelIdentifier\n      }, {\n        'data.importIds': channelIdentifier\n      }]\n    }, {\n      fields: {\n        'data.importIds': 1\n      }\n    });\n    return channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : (_channel$data$importI = _channel$data.importIds) === null || _channel$data$importI === void 0 ? void 0 : _channel$data$importI.shift();\n  }\n\n  findDMForImportedUsers() {\n    for (var _len = arguments.length, users = new Array(_len), _key = 0; _key < _len; _key++) {\n      users[_key] = arguments[_key];\n    }\n\n    const query = {\n      'dataType': 'channel',\n      'data.users': {\n        $all: users\n      }\n    };\n    return this.findOne(query);\n  }\n\n}\n\nmodule.exportDefault(new ImportDataModel());","map":{"version":3,"sources":["app/models/server/models/ImportData.ts"],"names":[],"mappings":"AAAA,IAAA,IAAA;AAAS,MAAM,CAAA,IAAN,CAAY,SAAZ,EAAsB;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAtB,EAAsB,CAAtB;;AAGT,MAAM,eAAN,SAA8B,IAA9B,CAAkC;AACjC,EAAA,WAAA,GAAA;AACC,UAAM,aAAN;AACA;;AAED,EAAA,uBAAuB,GAAA;AACtB,WAAO,KAAK,IAAL,CACN;AACC,MAAA,QAAQ,EAAE;AADX,KADM,EAIN;AACC,MAAA,MAAM,EAAE;AACP,0BAAkB,CADX;AAEP,yBAAiB,CAFV;AAGP,uBAAe,CAHR;AAIP,wBAAgB,CAJT;AAKP,qBAAa;AALN;AADT,KAJM,EAaL,KAbK,EAAP;AAcA;;AAED,EAAA,0BAA0B,GAAA;AACzB,WAAO,KAAK,IAAL,CACN;AACC,kBAAY,SADb;AAEC,gBAAU;AACT,QAAA,GAAG,EAAE;AADI;AAFX,KADM,EAON;AACC,MAAA,MAAM,EAAE;AACP,0BAAkB,CADX;AAEP,qBAAa,CAFN;AAGP,yBAAiB,CAHV;AAIP,kBAAU;AAJH;AADT,KAPM,EAeL,KAfK,EAAP;AAgBA;;AAED,EAAA,2BAA2B,GAAA;AAC1B,WACC,KAAK,IAAL,CACC;AACC,kBAAY,SADb;AAEC,gBAAU;AAFX,KADD,EAKC;AACC,MAAA,MAAM,EAAE;AACP,QAAA,GAAG,EAAE;AADE;AADT,KALD,EAUE,KAVF,KAUY,CAXb;AAaA;;AAED,EAAA,aAAa,GAAA;AACZ,WAAO,KAAK,IAAL,CAAU;AAChB,MAAA,QAAQ,EAAE;AADM,KAAV,EAEJ,KAFI,EAAP;AAGA;;AAED,EAAA,mCAAmC,CAAC,iBAAD,EAA0B;AAAA;;AAC5D,UAAM,OAAO,GAAG,KAAK,OAAL,CACf;AACC,MAAA,QAAQ,EAAE,SADX;AAEC,MAAA,GAAG,EAAE,CACJ;AACC,qBAAa;AADd,OADI,EAIJ;AACC,0BAAkB;AADnB,OAJI;AAFN,KADe,EAYf;AACC,MAAA,MAAM,EAAE;AACP,0BAAkB;AADX;AADT,KAZe,CAAhB;AAmBA,WAAO,OAAP,aAAO,OAAP,wCAAO,OAAO,CAAE,IAAhB,2EAAO,cAAe,SAAtB,0DAAO,sBAA0B,KAA1B,EAAP;AACA;;AAED,EAAA,sBAAsB,GAAwB;AAAA,sCAApB,KAAoB;AAApB,MAAA,KAAoB;AAAA;;AAC7C,UAAM,KAAK,GAAG;AACb,kBAAY,SADC;AAEb,oBAAc;AACb,QAAA,IAAI,EAAE;AADO;AAFD,KAAd;AAOA,WAAO,KAAK,OAAL,CAAa,KAAb,CAAP;AACA;;AA/FgC;;AAHlC,MAAA,CAAO,aAAP,CAqGe,IAAI,eAAJ,EArGf","sourcesContent":["import { Base } from './_Base';\nimport { IImportUserRecord, IImportChannelRecord } from '../../../../definition/IImportRecord';\n\nclass ImportDataModel extends Base {\n\tconstructor() {\n\t\tsuper('import_data');\n\t}\n\n\tgetAllUsersForSelection(): Array<IImportUserRecord> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\tdataType: 'user',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'data.importIds': 1,\n\t\t\t\t\t'data.username': 1,\n\t\t\t\t\t'data.emails': 1,\n\t\t\t\t\t'data.deleted': 1,\n\t\t\t\t\t'data.type': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t).fetch();\n\t}\n\n\tgetAllChannelsForSelection(): Array<IImportChannelRecord> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\t'dataType': 'channel',\n\t\t\t\t'data.t': {\n\t\t\t\t\t$ne: 'd',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'data.importIds': 1,\n\t\t\t\t\t'data.name': 1,\n\t\t\t\t\t'data.archived': 1,\n\t\t\t\t\t'data.t': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t).fetch();\n\t}\n\n\tcheckIfDirectMessagesExists(): boolean {\n\t\treturn (\n\t\t\tthis.find(\n\t\t\t\t{\n\t\t\t\t\t'dataType': 'channel',\n\t\t\t\t\t'data.t': 'd',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfields: {\n\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t).count() > 0\n\t\t);\n\t}\n\n\tcountMessages(): number {\n\t\treturn this.find({\n\t\t\tdataType: 'message',\n\t\t}).count();\n\t}\n\n\tfindChannelImportIdByNameOrImportId(channelIdentifier: string): string | undefined {\n\t\tconst channel = this.findOne(\n\t\t\t{\n\t\t\t\tdataType: 'channel',\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\t'data.name': channelIdentifier,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'data.importIds': channelIdentifier,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'data.importIds': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn channel?.data?.importIds?.shift();\n\t}\n\n\tfindDMForImportedUsers(...users: Array<string>): IImportChannelRecord | undefined {\n\t\tconst query = {\n\t\t\t'dataType': 'channel',\n\t\t\t'data.users': {\n\t\t\t\t$all: users,\n\t\t\t},\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n}\n\nexport default new ImportDataModel();\n"],"sourceRoot":""},"sourceType":"module","hash":"b27d853528a1de37c4fb934890a4e33a610fadb5"}

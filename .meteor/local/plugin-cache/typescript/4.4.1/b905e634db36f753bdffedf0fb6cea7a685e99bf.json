{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/index.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/sdk/index.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/index.ts","inputSourceMap":{"version":3,"file":"server/sdk/index.ts","sourceRoot":"","sources":["server/sdk/index.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAgBzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAExD,mFAAmF;AACnF,MAAM,CAAC,MAAM,aAAa,GAAG,eAAe,CAAiB,eAAe,CAAC,CAAC;AAC9E,MAAM,CAAC,MAAM,QAAQ,GAAG,eAAe,CAAY,UAAU,CAAC,CAAC;AAC/D,MAAM,CAAC,MAAM,OAAO,GAAG,eAAe,CAAW,UAAU,CAAC,CAAC;AAC7D,MAAM,CAAC,MAAM,OAAO,GAAG,eAAe,CAAW,SAAS,CAAC,CAAC;AAC5D,MAAM,CAAC,MAAM,aAAa,GAAG,eAAe,CAAU,QAAQ,CAAC,CAAC;AAChE,MAAM,CAAC,MAAM,MAAM,GAAG,eAAe,CAAiB,QAAQ,CAAC,CAAC;AAChE,MAAM,CAAC,MAAM,YAAY,GAAG,eAAe,CAAuB,gBAAgB,CAAC,CAAC;AACpF,MAAM,CAAC,MAAM,GAAG,GAAG,eAAe,CAAc,KAAK,CAAC,CAAC;AACvD,MAAM,CAAC,MAAM,IAAI,GAAG,eAAe,CAAe,MAAM,CAAC,CAAC;AAC1D,MAAM,CAAC,MAAM,IAAI,GAAG,eAAe,CAAe,MAAM,CAAC,CAAC;AAC1D,MAAM,CAAC,MAAM,KAAK,GAAG,eAAe,CAAgB,OAAO,CAAC,CAAC;AAC7D,MAAM,CAAC,MAAM,SAAS,GAAG,eAAe,CAAoB,WAAW,CAAC,CAAC;AACzE,MAAM,CAAC,MAAM,IAAI,GAAG,eAAe,CAAe,MAAM,CAAC,CAAC;AAC1D,MAAM,CAAC,MAAM,UAAU,GAAG,eAAe,CAAqB,aAAa,CAAC,CAAC;AAE7E,wFAAwF;AACxF,kCAAkC;AAClC,MAAM,CAAC,MAAM,kBAAkB,GAAG,OAAO,CAAsB,aAAa,CAAC,CAAC;AAE9E,kHAAkH;AAClH,MAAM,CAAC,MAAM,iBAAiB,GAAG,IAAI,kBAAkB,EAAmB,CAAC","sourcesContent":["import { IServiceContext } from './types/ServiceClass';\nimport { proxify, proxifyWithWait } from './lib/proxify';\nimport { IAuthorization } from './types/IAuthorization';\nimport { IPresence } from './types/IPresence';\nimport { IAccount } from './types/IAccount';\nimport { ILicense } from './types/ILicense';\nimport { IMeteor } from './types/IMeteor';\nimport { IUiKitCoreAppService } from './types/IUiKitCoreApp';\nimport { IEnterpriseSettings } from './types/IEnterpriseSettings';\nimport { IBannerService } from './types/IBannerService';\nimport { INPSService } from './types/INPSService';\nimport { ITeamService } from './types/ITeamService';\nimport { IRoomService } from './types/IRoomService';\nimport { IMediaService } from './types/IMediaService';\nimport { IAnalyticsService } from './types/IAnalyticsService';\nimport { ILDAPService } from './types/ILDAPService';\nimport { ISAUMonitorService } from './types/ISAUMonitorService';\nimport { FibersContextStore } from './lib/ContextStore';\n\n// TODO think in a way to not have to pass the service name to proxify here as well\nexport const Authorization = proxifyWithWait<IAuthorization>('authorization');\nexport const Presence = proxifyWithWait<IPresence>('presence');\nexport const Account = proxifyWithWait<IAccount>('accounts');\nexport const License = proxifyWithWait<ILicense>('license');\nexport const MeteorService = proxifyWithWait<IMeteor>('meteor');\nexport const Banner = proxifyWithWait<IBannerService>('banner');\nexport const UiKitCoreApp = proxifyWithWait<IUiKitCoreAppService>('uikit-core-app');\nexport const NPS = proxifyWithWait<INPSService>('nps');\nexport const Team = proxifyWithWait<ITeamService>('team');\nexport const Room = proxifyWithWait<IRoomService>('room');\nexport const Media = proxifyWithWait<IMediaService>('media');\nexport const Analytics = proxifyWithWait<IAnalyticsService>('analytics');\nexport const LDAP = proxifyWithWait<ILDAPService>('ldap');\nexport const SAUMonitor = proxifyWithWait<ISAUMonitorService>('sau-monitor');\n\n// Calls without wait. Means that the service is optional and the result may be an error\n// of service/method not available\nexport const EnterpriseSettings = proxify<IEnterpriseSettings>('ee-settings');\n\n// TODO Evalute again using AsyncContextStore instead of FibersContextStore in a future Meteor release (after 2.5)\nexport const asyncLocalStorage = new FibersContextStore<IServiceContext>();\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/index.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/sdk/index.ts"}},"code":"module.export({\n  Authorization: () => Authorization,\n  Presence: () => Presence,\n  Account: () => Account,\n  License: () => License,\n  MeteorService: () => MeteorService,\n  Banner: () => Banner,\n  UiKitCoreApp: () => UiKitCoreApp,\n  NPS: () => NPS,\n  Team: () => Team,\n  Room: () => Room,\n  Media: () => Media,\n  Analytics: () => Analytics,\n  LDAP: () => LDAP,\n  SAUMonitor: () => SAUMonitor,\n  EnterpriseSettings: () => EnterpriseSettings,\n  asyncLocalStorage: () => asyncLocalStorage\n});\nlet proxify, proxifyWithWait;\nmodule.link(\"./lib/proxify\", {\n  proxify(v) {\n    proxify = v;\n  },\n\n  proxifyWithWait(v) {\n    proxifyWithWait = v;\n  }\n\n}, 0);\nlet FibersContextStore;\nmodule.link(\"./lib/ContextStore\", {\n  FibersContextStore(v) {\n    FibersContextStore = v;\n  }\n\n}, 1);\nconst Authorization = proxifyWithWait('authorization');\nconst Presence = proxifyWithWait('presence');\nconst Account = proxifyWithWait('accounts');\nconst License = proxifyWithWait('license');\nconst MeteorService = proxifyWithWait('meteor');\nconst Banner = proxifyWithWait('banner');\nconst UiKitCoreApp = proxifyWithWait('uikit-core-app');\nconst NPS = proxifyWithWait('nps');\nconst Team = proxifyWithWait('team');\nconst Room = proxifyWithWait('room');\nconst Media = proxifyWithWait('media');\nconst Analytics = proxifyWithWait('analytics');\nconst LDAP = proxifyWithWait('ldap');\nconst SAUMonitor = proxifyWithWait('sau-monitor');\nconst EnterpriseSettings = proxify('ee-settings');\nconst asyncLocalStorage = new FibersContextStore();","map":{"version":3,"sources":["server/sdk/index.ts"],"names":[],"mappings":"AACA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,aAAS,EAAA,MAAe,aAAxB;AAAgC,EAAA,QAAA,EAAe,MAAC,QAAhD;AAAgD,EAAA,OAAA,EAAA,MAAA,OAAhD;AAAgD,EAAA,OAAA,EAAA,MAAA,OAAhD;AAAgD,EAAA,aAAA,EAAA,MAAA,aAAhD;AAAgD,EAAA,MAAA,EAAA,MAAA,MAAhD;AAAgD,EAAA,YAAA,EAAA,MAAA,YAAhD;AAAgD,EAAA,GAAA,EAAA,MAAA,GAAhD;AAAgD,EAAA,IAAA,EAAA,MAAA,IAAhD;AAAgD,EAAA,IAAA,EAAA,MAAA,IAAhD;AAAgD,EAAA,KAAA,EAAA,MAAA,KAAhD;AAAgD,EAAA,SAAA,EAAA,MAAA,SAAhD;AAAgD,EAAA,IAAA,EAAA,MAAA,IAAhD;AAAgD,EAAA,UAAA,EAAA,MAAA,UAAhD;AAAgD,EAAA,kBAAA,EAAA,MAAA,kBAAhD;AAAgD,EAAA,iBAAA,EAAA,MAAA;AAAhD,CAAT;AAAyD,IAAA,OAAA,EAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAmBlD,MAAM,aAAa,GAAG,eAAe,CAAiB,eAAjB,CAArC;AACA,MAAM,QAAQ,GAAG,eAAe,CAAY,UAAZ,CAAhC;AACA,MAAM,OAAO,GAAG,eAAe,CAAW,UAAX,CAA/B;AACA,MAAM,OAAO,GAAG,eAAe,CAAW,SAAX,CAA/B;AACA,MAAM,aAAa,GAAG,eAAe,CAAU,QAAV,CAArC;AACA,MAAM,MAAM,GAAG,eAAe,CAAiB,QAAjB,CAA9B;AACA,MAAM,YAAY,GAAG,eAAe,CAAuB,gBAAvB,CAApC;AACA,MAAM,GAAG,GAAG,eAAe,CAAc,KAAd,CAA3B;AACA,MAAM,IAAI,GAAG,eAAe,CAAe,MAAf,CAA5B;AACA,MAAM,IAAI,GAAG,eAAe,CAAe,MAAf,CAA5B;AACA,MAAM,KAAK,GAAG,eAAe,CAAgB,OAAhB,CAA7B;AACA,MAAM,SAAS,GAAG,eAAe,CAAoB,WAApB,CAAjC;AACA,MAAM,IAAI,GAAG,eAAe,CAAe,MAAf,CAA5B;AACA,MAAM,UAAU,GAAG,eAAe,CAAqB,aAArB,CAAlC;AAIA,MAAM,kBAAkB,GAAG,OAAO,CAAsB,aAAtB,CAAlC;AAGA,MAAM,iBAAiB,GAAG,IAAI,kBAAJ,EAA1B","sourcesContent":["import { IServiceContext } from './types/ServiceClass';\nimport { proxify, proxifyWithWait } from './lib/proxify';\nimport { IAuthorization } from './types/IAuthorization';\nimport { IPresence } from './types/IPresence';\nimport { IAccount } from './types/IAccount';\nimport { ILicense } from './types/ILicense';\nimport { IMeteor } from './types/IMeteor';\nimport { IUiKitCoreAppService } from './types/IUiKitCoreApp';\nimport { IEnterpriseSettings } from './types/IEnterpriseSettings';\nimport { IBannerService } from './types/IBannerService';\nimport { INPSService } from './types/INPSService';\nimport { ITeamService } from './types/ITeamService';\nimport { IRoomService } from './types/IRoomService';\nimport { IMediaService } from './types/IMediaService';\nimport { IAnalyticsService } from './types/IAnalyticsService';\nimport { ILDAPService } from './types/ILDAPService';\nimport { ISAUMonitorService } from './types/ISAUMonitorService';\nimport { FibersContextStore } from './lib/ContextStore';\n\n// TODO think in a way to not have to pass the service name to proxify here as well\nexport const Authorization = proxifyWithWait<IAuthorization>('authorization');\nexport const Presence = proxifyWithWait<IPresence>('presence');\nexport const Account = proxifyWithWait<IAccount>('accounts');\nexport const License = proxifyWithWait<ILicense>('license');\nexport const MeteorService = proxifyWithWait<IMeteor>('meteor');\nexport const Banner = proxifyWithWait<IBannerService>('banner');\nexport const UiKitCoreApp = proxifyWithWait<IUiKitCoreAppService>('uikit-core-app');\nexport const NPS = proxifyWithWait<INPSService>('nps');\nexport const Team = proxifyWithWait<ITeamService>('team');\nexport const Room = proxifyWithWait<IRoomService>('room');\nexport const Media = proxifyWithWait<IMediaService>('media');\nexport const Analytics = proxifyWithWait<IAnalyticsService>('analytics');\nexport const LDAP = proxifyWithWait<ILDAPService>('ldap');\nexport const SAUMonitor = proxifyWithWait<ISAUMonitorService>('sau-monitor');\n\n// Calls without wait. Means that the service is optional and the result may be an error\n// of service/method not available\nexport const EnterpriseSettings = proxify<IEnterpriseSettings>('ee-settings');\n\n// TODO Evalute again using AsyncContextStore instead of FibersContextStore in a future Meteor release (after 2.5)\nexport const asyncLocalStorage = new FibersContextStore<IServiceContext>();\n"],"sourceRoot":""},"sourceType":"module","hash":"b905e634db36f753bdffedf0fb6cea7a685e99bf"}

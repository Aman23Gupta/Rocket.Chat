{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/roles.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/roles.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/roles.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/roles.ts","sourceRoot":"","sources":["app/api/server/v1/roles.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check, Match } from 'meteor/check';\n\nimport { Users } from '../../../models/server';\nimport { API } from '../api';\nimport { getUsersInRole, hasRole } from '../../../authorization/server';\nimport { settings } from '../../../settings/server/index';\nimport { api } from '../../../../server/sdk/api';\nimport { Roles } from '../../../models/server/raw';\nimport { hasAnyRoleAsync } from '../../../authorization/server/functions/hasRole';\nimport {\n\tisRoleAddUserToRoleProps,\n\tisRoleCreateProps,\n\tisRoleDeleteProps,\n\tisRoleRemoveUserFromRoleProps,\n\tisRoleUpdateProps,\n} from '../../../../definition/rest/v1/roles';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nAPI.v1.addRoute(\n\t'roles.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst roles = await Roles.find({}, { projection: { _updatedAt: 0 } }).toArray();\n\n\t\t\treturn API.v1.success({ roles });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.sync',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tupdatedSince: Match.Where((value: unknown): value is string => typeof value === 'string' && !Number.isNaN(Date.parse(value))),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { updatedSince } = this.queryParams;\n\n\t\t\treturn API.v1.success({\n\t\t\t\troles: {\n\t\t\t\t\tupdate: await Roles.findByUpdatedDate(new Date(updatedSince)).toArray(),\n\t\t\t\t\tremove: await Roles.trashFindDeletedAfter(new Date(updatedSince)).toArray(),\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.create',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!isRoleCreateProps(this.bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n\t\t\t}\n\n\t\t\tconst { name, scope, description, mandatory2fa } = this.bodyParams;\n\n\t\t\tif (!(await hasPermissionAsync(Meteor.userId(), 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n\t\t\t}\n\n\t\t\tif (await Roles.findOneByIdOrName(name)) {\n\t\t\t\tthrow new Meteor.Error('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t\t\t}\n\n\t\t\tconst roleId = (\n\t\t\t\tawait Roles.createWithRandomId(\n\t\t\t\t\tname,\n\t\t\t\t\tscope && ['Users', 'Subscriptions'].includes(scope) ? scope : 'Users',\n\t\t\t\t\tdescription,\n\t\t\t\t\tfalse,\n\t\t\t\t\tmandatory2fa,\n\t\t\t\t)\n\t\t\t).insertedId;\n\n\t\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\t\ttype: 'changed',\n\t\t\t\t\t_id: roleId,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst role = await Roles.findOneByIdOrName(roleId);\n\n\t\t\tif (!role) {\n\t\t\t\treturn API.v1.failure('error-role-not-found', 'Role not found');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\trole,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.addUserToRole',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!isRoleAddUserToRoleProps(this.bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', isRoleAddUserToRoleProps.errors?.map((error) => error.message).join('\\n'));\n\t\t\t}\n\n\t\t\tconst user = this.getUserFromParams();\n\t\t\tconst { roleName, roomId } = this.bodyParams;\n\n\t\t\tif (hasRole(user._id, roleName, roomId)) {\n\t\t\t\tthrow new Meteor.Error('error-user-already-in-role', 'User already in role');\n\t\t\t}\n\n\t\t\tawait Meteor.call('authorization:addUserToRole', roleName, user.username, roomId);\n\n\t\t\tconst role = await Roles.findOneByIdOrName(roleName);\n\n\t\t\tif (!role) {\n\t\t\t\treturn API.v1.failure('error-role-not-found', 'Role not found');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\trole,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.getUsersInRole',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId, role } = this.queryParams;\n\t\t\tconst { offset, count = 50 } = this.getPaginationItems();\n\n\t\t\tconst projection = {\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t\temails: 1,\n\t\t\t\tavatarETag: 1,\n\t\t\t};\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-param-not-provided', 'Query param \"role\" is required');\n\t\t\t}\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\t\t\tif (roomId && !(await hasPermissionAsync(this.userId, 'view-other-user-channels'))) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\t\t\tconst users = await getUsersInRole(role, roomId, {\n\t\t\t\tlimit: count as number,\n\t\t\t\tsort: { username: 1 },\n\t\t\t\tskip: offset as number,\n\t\t\t\tprojection,\n\t\t\t});\n\n\t\t\treturn API.v1.success({ users: await users.toArray(), total: await users.count() });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.update',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tif (!isRoleUpdateProps(bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n\t\t\t}\n\n\t\t\tconst roleData = {\n\t\t\t\troleId: bodyParams.roleId,\n\t\t\t\tname: bodyParams.name,\n\t\t\t\tscope: bodyParams.scope || 'Users',\n\t\t\t\tdescription: bodyParams.description,\n\t\t\t\tmandatory2fa: bodyParams.mandatory2fa,\n\t\t\t};\n\n\t\t\tconst role = await Roles.findOneByIdOrName(roleData.roleId);\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n\t\t\t}\n\n\t\t\tif (role.protected && ((roleData.name && roleData.name !== role.name) || (roleData.scope && roleData.scope !== role.scope))) {\n\t\t\t\tthrow new Meteor.Error('error-role-protected', 'Role is protected');\n\t\t\t}\n\n\t\t\tif (roleData.name) {\n\t\t\t\tconst otherRole = await Roles.findOneByIdOrName(roleData.name);\n\t\t\t\tif (otherRole && otherRole._id !== role._id) {\n\t\t\t\t\tthrow new Meteor.Error('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (['Users', 'Subscriptions'].includes(roleData.scope) === false) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-scope', 'Invalid scope');\n\t\t\t}\n\n\t\t\tawait Roles.updateById(roleData.roleId, roleData.name, roleData.scope, roleData.description, roleData.mandatory2fa);\n\n\t\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\t\ttype: 'changed',\n\t\t\t\t\t_id: roleData.roleId,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst updatedRole = await Roles.findOneByIdOrName(roleData.roleId);\n\n\t\t\tif (!updatedRole) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\trole: updatedRole,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.delete',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tif (!isRoleDeleteProps(bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n\t\t\t}\n\n\t\t\tconst role = await Roles.findOneByIdOrName(bodyParams.roleId);\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n\t\t\t}\n\n\t\t\tif (role.protected) {\n\t\t\t\tthrow new Meteor.Error('error-role-protected', 'Cannot delete a protected role');\n\t\t\t}\n\n\t\t\tconst existingUsers = await Roles.findUsersInRole(role.name, role.scope);\n\n\t\t\tif (existingUsers && (await existingUsers.count()) > 0) {\n\t\t\t\tthrow new Meteor.Error('error-role-in-use', \"Cannot delete role because it's in use\");\n\t\t\t}\n\n\t\t\tawait Roles.removeById(role._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.removeUserFromRole',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tif (!isRoleRemoveUserFromRoleProps(bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n\t\t\t}\n\n\t\t\tconst { roleName, username, scope } = bodyParams;\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Accessing permissions is not allowed');\n\t\t\t}\n\n\t\t\tconst user = Users.findOneByUsername(username);\n\n\t\t\tif (!user) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'There is no user with this username');\n\t\t\t}\n\n\t\t\tconst role = await Roles.findOneByIdOrName(roleName);\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAnyRoleAsync(user._id, [role.name], scope))) {\n\t\t\t\tthrow new Meteor.Error('error-user-not-in-role', 'User is not in this role');\n\t\t\t}\n\n\t\t\tif (role._id === 'admin') {\n\t\t\t\tconst adminCount = await (await Roles.findUsersInRole('admin')).count();\n\t\t\t\tif (adminCount === 1) {\n\t\t\t\t\tthrow new Meteor.Error('error-admin-required', 'You need to have at least one admin');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Roles.removeUserRoles(user._id, [role.name], scope);\n\n\t\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\t\ttype: 'removed',\n\t\t\t\t\t_id: role._id,\n\t\t\t\t\tu: {\n\t\t\t\t\t\t_id: user._id,\n\t\t\t\t\t\tusername: user.username,\n\t\t\t\t\t},\n\t\t\t\t\tscope,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\trole,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/roles.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/roles.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 3);\nlet getUsersInRole, hasRole;\nmodule.link(\"../../../authorization/server\", {\n  getUsersInRole(v) {\n    getUsersInRole = v;\n  },\n\n  hasRole(v) {\n    hasRole = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../../settings/server/index\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 6);\nlet Roles;\nmodule.link(\"../../../models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 7);\nlet hasAnyRoleAsync;\nmodule.link(\"../../../authorization/server/functions/hasRole\", {\n  hasAnyRoleAsync(v) {\n    hasAnyRoleAsync = v;\n  }\n\n}, 8);\nlet isRoleAddUserToRoleProps, isRoleCreateProps, isRoleDeleteProps, isRoleRemoveUserFromRoleProps, isRoleUpdateProps;\nmodule.link(\"../../../../definition/rest/v1/roles\", {\n  isRoleAddUserToRoleProps(v) {\n    isRoleAddUserToRoleProps = v;\n  },\n\n  isRoleCreateProps(v) {\n    isRoleCreateProps = v;\n  },\n\n  isRoleDeleteProps(v) {\n    isRoleDeleteProps = v;\n  },\n\n  isRoleRemoveUserFromRoleProps(v) {\n    isRoleRemoveUserFromRoleProps = v;\n  },\n\n  isRoleUpdateProps(v) {\n    isRoleUpdateProps = v;\n  }\n\n}, 9);\nlet hasPermissionAsync;\nmodule.link(\"../../../authorization/server/functions/hasPermission\", {\n  hasPermissionAsync(v) {\n    hasPermissionAsync = v;\n  }\n\n}, 10);\nAPI.v1.addRoute('roles.list', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const roles = Promise.await(Roles.find({}, {\n        projection: {\n          _updatedAt: 0\n        }\n      }).toArray());\n      return API.v1.success({\n        roles\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('roles.sync', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      check(this.queryParams, Match.ObjectIncluding({\n        updatedSince: Match.Where(value => typeof value === 'string' && !Number.isNaN(Date.parse(value)))\n      }));\n      const {\n        updatedSince\n      } = this.queryParams;\n      return API.v1.success({\n        roles: {\n          update: Promise.await(Roles.findByUpdatedDate(new Date(updatedSince)).toArray()),\n          remove: Promise.await(Roles.trashFindDeletedAfter(new Date(updatedSince)).toArray())\n        }\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('roles.create', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      if (!isRoleCreateProps(this.bodyParams)) {\n        throw new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n      }\n\n      const {\n        name,\n        scope,\n        description,\n        mandatory2fa\n      } = this.bodyParams;\n\n      if (!Promise.await(hasPermissionAsync(Meteor.userId(), 'access-permissions'))) {\n        throw new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n      }\n\n      if (Promise.await(Roles.findOneByIdOrName(name))) {\n        throw new Meteor.Error('error-duplicate-role-names-not-allowed', 'Role name already exists');\n      }\n\n      const roleId = Promise.await(Roles.createWithRandomId(name, scope && ['Users', 'Subscriptions'].includes(scope) ? scope : 'Users', description, false, mandatory2fa)).insertedId;\n\n      if (settings.get('UI_DisplayRoles')) {\n        api.broadcast('user.roleUpdate', {\n          type: 'changed',\n          _id: roleId\n        });\n      }\n\n      const role = Promise.await(Roles.findOneByIdOrName(roleId));\n\n      if (!role) {\n        return API.v1.failure('error-role-not-found', 'Role not found');\n      }\n\n      return API.v1.success({\n        role\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('roles.addUserToRole', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      if (!isRoleAddUserToRoleProps(this.bodyParams)) {\n        var _isRoleAddUserToRoleP;\n\n        throw new Meteor.Error('error-invalid-role-properties', (_isRoleAddUserToRoleP = isRoleAddUserToRoleProps.errors) === null || _isRoleAddUserToRoleP === void 0 ? void 0 : _isRoleAddUserToRoleP.map(error => error.message).join('\\n'));\n      }\n\n      const user = this.getUserFromParams();\n      const {\n        roleName,\n        roomId\n      } = this.bodyParams;\n\n      if (hasRole(user._id, roleName, roomId)) {\n        throw new Meteor.Error('error-user-already-in-role', 'User already in role');\n      }\n\n      Promise.await(Meteor.call('authorization:addUserToRole', roleName, user.username, roomId));\n      const role = Promise.await(Roles.findOneByIdOrName(roleName));\n\n      if (!role) {\n        return API.v1.failure('error-role-not-found', 'Role not found');\n      }\n\n      return API.v1.success({\n        role\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('roles.getUsersInRole', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        roomId,\n        role\n      } = this.queryParams;\n      const {\n        offset,\n        count = 50\n      } = this.getPaginationItems();\n      const projection = {\n        name: 1,\n        username: 1,\n        emails: 1,\n        avatarETag: 1\n      };\n\n      if (!role) {\n        throw new Meteor.Error('error-param-not-provided', 'Query param \"role\" is required');\n      }\n\n      if (!Promise.await(hasPermissionAsync(this.userId, 'access-permissions'))) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed');\n      }\n\n      if (roomId && !Promise.await(hasPermissionAsync(this.userId, 'view-other-user-channels'))) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed');\n      }\n\n      const users = Promise.await(getUsersInRole(role, roomId, {\n        limit: count,\n        sort: {\n          username: 1\n        },\n        skip: offset,\n        projection\n      }));\n      return API.v1.success({\n        users: Promise.await(users.toArray()),\n        total: Promise.await(users.count())\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('roles.update', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      const {\n        bodyParams\n      } = this;\n\n      if (!isRoleUpdateProps(bodyParams)) {\n        throw new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n      }\n\n      if (!Promise.await(hasPermissionAsync(this.userId, 'access-permissions'))) {\n        throw new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n      }\n\n      const roleData = {\n        roleId: bodyParams.roleId,\n        name: bodyParams.name,\n        scope: bodyParams.scope || 'Users',\n        description: bodyParams.description,\n        mandatory2fa: bodyParams.mandatory2fa\n      };\n      const role = Promise.await(Roles.findOneByIdOrName(roleData.roleId));\n\n      if (!role) {\n        throw new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n      }\n\n      if (role.protected && (roleData.name && roleData.name !== role.name || roleData.scope && roleData.scope !== role.scope)) {\n        throw new Meteor.Error('error-role-protected', 'Role is protected');\n      }\n\n      if (roleData.name) {\n        const otherRole = Promise.await(Roles.findOneByIdOrName(roleData.name));\n\n        if (otherRole && otherRole._id !== role._id) {\n          throw new Meteor.Error('error-duplicate-role-names-not-allowed', 'Role name already exists');\n        }\n      }\n\n      if (['Users', 'Subscriptions'].includes(roleData.scope) === false) {\n        throw new Meteor.Error('error-invalid-scope', 'Invalid scope');\n      }\n\n      Promise.await(Roles.updateById(roleData.roleId, roleData.name, roleData.scope, roleData.description, roleData.mandatory2fa));\n\n      if (settings.get('UI_DisplayRoles')) {\n        api.broadcast('user.roleUpdate', {\n          type: 'changed',\n          _id: roleData.roleId\n        });\n      }\n\n      const updatedRole = Promise.await(Roles.findOneByIdOrName(roleData.roleId));\n\n      if (!updatedRole) {\n        return API.v1.failure();\n      }\n\n      return API.v1.success({\n        role: updatedRole\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('roles.delete', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      const {\n        bodyParams\n      } = this;\n\n      if (!isRoleDeleteProps(bodyParams)) {\n        throw new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n      }\n\n      if (!Promise.await(hasPermissionAsync(this.userId, 'access-permissions'))) {\n        throw new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n      }\n\n      const role = Promise.await(Roles.findOneByIdOrName(bodyParams.roleId));\n\n      if (!role) {\n        throw new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n      }\n\n      if (role.protected) {\n        throw new Meteor.Error('error-role-protected', 'Cannot delete a protected role');\n      }\n\n      const existingUsers = Promise.await(Roles.findUsersInRole(role.name, role.scope));\n\n      if (existingUsers && Promise.await(existingUsers.count()) > 0) {\n        throw new Meteor.Error('error-role-in-use', \"Cannot delete role because it's in use\");\n      }\n\n      Promise.await(Roles.removeById(role._id));\n      return API.v1.success();\n    });\n  }\n\n});\nAPI.v1.addRoute('roles.removeUserFromRole', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      const {\n        bodyParams\n      } = this;\n\n      if (!isRoleRemoveUserFromRoleProps(bodyParams)) {\n        throw new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n      }\n\n      const {\n        roleName,\n        username,\n        scope\n      } = bodyParams;\n\n      if (!Promise.await(hasPermissionAsync(this.userId, 'access-permissions'))) {\n        throw new Meteor.Error('error-not-allowed', 'Accessing permissions is not allowed');\n      }\n\n      const user = Users.findOneByUsername(username);\n\n      if (!user) {\n        throw new Meteor.Error('error-invalid-user', 'There is no user with this username');\n      }\n\n      const role = Promise.await(Roles.findOneByIdOrName(roleName));\n\n      if (!role) {\n        throw new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n      }\n\n      if (!Promise.await(hasAnyRoleAsync(user._id, [role.name], scope))) {\n        throw new Meteor.Error('error-user-not-in-role', 'User is not in this role');\n      }\n\n      if (role._id === 'admin') {\n        const adminCount = Promise.await(Promise.await(Roles.findUsersInRole('admin')).count());\n\n        if (adminCount === 1) {\n          throw new Meteor.Error('error-admin-required', 'You need to have at least one admin');\n        }\n      }\n\n      Promise.await(Roles.removeUserRoles(user._id, [role.name], scope));\n\n      if (settings.get('UI_DisplayRoles')) {\n        api.broadcast('user.roleUpdate', {\n          type: 'removed',\n          _id: role._id,\n          u: {\n            _id: user._id,\n            username: user.username\n          },\n          scope\n        });\n      }\n\n      return API.v1.success({\n        role\n      });\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/roles.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check, Match } from 'meteor/check';\n\nimport { Users } from '../../../models/server';\nimport { API } from '../api';\nimport { getUsersInRole, hasRole } from '../../../authorization/server';\nimport { settings } from '../../../settings/server/index';\nimport { api } from '../../../../server/sdk/api';\nimport { Roles } from '../../../models/server/raw';\nimport { hasAnyRoleAsync } from '../../../authorization/server/functions/hasRole';\nimport {\n\tisRoleAddUserToRoleProps,\n\tisRoleCreateProps,\n\tisRoleDeleteProps,\n\tisRoleRemoveUserFromRoleProps,\n\tisRoleUpdateProps,\n} from '../../../../definition/rest/v1/roles';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nAPI.v1.addRoute(\n\t'roles.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst roles = await Roles.find({}, { projection: { _updatedAt: 0 } }).toArray();\n\n\t\t\treturn API.v1.success({ roles });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.sync',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tupdatedSince: Match.Where((value: unknown): value is string => typeof value === 'string' && !Number.isNaN(Date.parse(value))),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst { updatedSince } = this.queryParams;\n\n\t\t\treturn API.v1.success({\n\t\t\t\troles: {\n\t\t\t\t\tupdate: await Roles.findByUpdatedDate(new Date(updatedSince)).toArray(),\n\t\t\t\t\tremove: await Roles.trashFindDeletedAfter(new Date(updatedSince)).toArray(),\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.create',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!isRoleCreateProps(this.bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n\t\t\t}\n\n\t\t\tconst { name, scope, description, mandatory2fa } = this.bodyParams;\n\n\t\t\tif (!(await hasPermissionAsync(Meteor.userId(), 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n\t\t\t}\n\n\t\t\tif (await Roles.findOneByIdOrName(name)) {\n\t\t\t\tthrow new Meteor.Error('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t\t\t}\n\n\t\t\tconst roleId = (\n\t\t\t\tawait Roles.createWithRandomId(\n\t\t\t\t\tname,\n\t\t\t\t\tscope && ['Users', 'Subscriptions'].includes(scope) ? scope : 'Users',\n\t\t\t\t\tdescription,\n\t\t\t\t\tfalse,\n\t\t\t\t\tmandatory2fa,\n\t\t\t\t)\n\t\t\t).insertedId;\n\n\t\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\t\ttype: 'changed',\n\t\t\t\t\t_id: roleId,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst role = await Roles.findOneByIdOrName(roleId);\n\n\t\t\tif (!role) {\n\t\t\t\treturn API.v1.failure('error-role-not-found', 'Role not found');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\trole,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.addUserToRole',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!isRoleAddUserToRoleProps(this.bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', isRoleAddUserToRoleProps.errors?.map((error) => error.message).join('\\n'));\n\t\t\t}\n\n\t\t\tconst user = this.getUserFromParams();\n\t\t\tconst { roleName, roomId } = this.bodyParams;\n\n\t\t\tif (hasRole(user._id, roleName, roomId)) {\n\t\t\t\tthrow new Meteor.Error('error-user-already-in-role', 'User already in role');\n\t\t\t}\n\n\t\t\tawait Meteor.call('authorization:addUserToRole', roleName, user.username, roomId);\n\n\t\t\tconst role = await Roles.findOneByIdOrName(roleName);\n\n\t\t\tif (!role) {\n\t\t\t\treturn API.v1.failure('error-role-not-found', 'Role not found');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\trole,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.getUsersInRole',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId, role } = this.queryParams;\n\t\t\tconst { offset, count = 50 } = this.getPaginationItems();\n\n\t\t\tconst projection = {\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t\temails: 1,\n\t\t\t\tavatarETag: 1,\n\t\t\t};\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-param-not-provided', 'Query param \"role\" is required');\n\t\t\t}\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\t\t\tif (roomId && !(await hasPermissionAsync(this.userId, 'view-other-user-channels'))) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\t\t\tconst users = await getUsersInRole(role, roomId, {\n\t\t\t\tlimit: count as number,\n\t\t\t\tsort: { username: 1 },\n\t\t\t\tskip: offset as number,\n\t\t\t\tprojection,\n\t\t\t});\n\n\t\t\treturn API.v1.success({ users: await users.toArray(), total: await users.count() });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.update',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tif (!isRoleUpdateProps(bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n\t\t\t}\n\n\t\t\tconst roleData = {\n\t\t\t\troleId: bodyParams.roleId,\n\t\t\t\tname: bodyParams.name,\n\t\t\t\tscope: bodyParams.scope || 'Users',\n\t\t\t\tdescription: bodyParams.description,\n\t\t\t\tmandatory2fa: bodyParams.mandatory2fa,\n\t\t\t};\n\n\t\t\tconst role = await Roles.findOneByIdOrName(roleData.roleId);\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n\t\t\t}\n\n\t\t\tif (role.protected && ((roleData.name && roleData.name !== role.name) || (roleData.scope && roleData.scope !== role.scope))) {\n\t\t\t\tthrow new Meteor.Error('error-role-protected', 'Role is protected');\n\t\t\t}\n\n\t\t\tif (roleData.name) {\n\t\t\t\tconst otherRole = await Roles.findOneByIdOrName(roleData.name);\n\t\t\t\tif (otherRole && otherRole._id !== role._id) {\n\t\t\t\t\tthrow new Meteor.Error('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (['Users', 'Subscriptions'].includes(roleData.scope) === false) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-scope', 'Invalid scope');\n\t\t\t}\n\n\t\t\tawait Roles.updateById(roleData.roleId, roleData.name, roleData.scope, roleData.description, roleData.mandatory2fa);\n\n\t\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\t\ttype: 'changed',\n\t\t\t\t\t_id: roleData.roleId,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst updatedRole = await Roles.findOneByIdOrName(roleData.roleId);\n\n\t\t\tif (!updatedRole) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\trole: updatedRole,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.delete',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tif (!isRoleDeleteProps(bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed');\n\t\t\t}\n\n\t\t\tconst role = await Roles.findOneByIdOrName(bodyParams.roleId);\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n\t\t\t}\n\n\t\t\tif (role.protected) {\n\t\t\t\tthrow new Meteor.Error('error-role-protected', 'Cannot delete a protected role');\n\t\t\t}\n\n\t\t\tconst existingUsers = await Roles.findUsersInRole(role.name, role.scope);\n\n\t\t\tif (existingUsers && (await existingUsers.count()) > 0) {\n\t\t\t\tthrow new Meteor.Error('error-role-in-use', \"Cannot delete role because it's in use\");\n\t\t\t}\n\n\t\t\tawait Roles.removeById(role._id);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'roles.removeUserFromRole',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\t\t\tif (!isRoleRemoveUserFromRoleProps(bodyParams)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role-properties', 'The role properties are invalid.');\n\t\t\t}\n\n\t\t\tconst { roleName, username, scope } = bodyParams;\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'access-permissions'))) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Accessing permissions is not allowed');\n\t\t\t}\n\n\t\t\tconst user = Users.findOneByUsername(username);\n\n\t\t\tif (!user) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'There is no user with this username');\n\t\t\t}\n\n\t\t\tconst role = await Roles.findOneByIdOrName(roleName);\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-roleId', 'This role does not exist');\n\t\t\t}\n\n\t\t\tif (!(await hasAnyRoleAsync(user._id, [role.name], scope))) {\n\t\t\t\tthrow new Meteor.Error('error-user-not-in-role', 'User is not in this role');\n\t\t\t}\n\n\t\t\tif (role._id === 'admin') {\n\t\t\t\tconst adminCount = await (await Roles.findUsersInRole('admin')).count();\n\t\t\t\tif (adminCount === 1) {\n\t\t\t\t\tthrow new Meteor.Error('error-admin-required', 'You need to have at least one admin');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Roles.removeUserRoles(user._id, [role.name], scope);\n\n\t\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\t\ttype: 'removed',\n\t\t\t\t\t_id: role._id,\n\t\t\t\t\tu: {\n\t\t\t\t\t\t_id: user._id,\n\t\t\t\t\t\tusername: user.username,\n\t\t\t\t\t},\n\t\t\t\t\tscope,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\trole,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"ce68d92b4d103ac0e5a657c6e47390dd733da4ab"}

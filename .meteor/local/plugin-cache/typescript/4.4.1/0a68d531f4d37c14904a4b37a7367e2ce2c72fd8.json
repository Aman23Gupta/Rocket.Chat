{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Integrations.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/Integrations.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Integrations.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/Integrations.ts","sourceRoot":"","sources":["app/models/server/raw/Integrations.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAsB,MAAM,WAAW,CAAC;AAGxD,MAAM,OAAO,eAAgB,SAAQ,OAAqB;IAC/C,OAAO,GAAyB,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEjE,YAAY,CAAC,GAAW;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,cAAc,CAAC,WAAmB,EAAE,WAAmB;QACtD,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAE,CAAC;QAC5C,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAE,CAAC;QAE5C,OAAO,IAAI,CAAC,UAAU,CACrB;YACC,OAAO,EAAE,iBAAiB;SAC1B,EACD;YACC,IAAI,EAAE;gBACL,WAAW,EAAE,iBAAiB;aAC9B;SACD,CACD,CAAC;IACH,CAAC;IAED,+BAA+B,CAAC,EAC/B,GAAG,EACH,SAAS,GAIT;QACA,OAAO,IAAI,CAAC,OAAO,CAAC;YACnB,GAAG;YACH,GAAG,CAAC,SAAS,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,CAAC;SACjD,CAAC,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,MAAc;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAClE,CAAC;CACD","sourcesContent":["import { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { IIntegration } from '../../../../definition/IIntegration';\n\nexport class IntegrationsRaw extends BaseRaw<IIntegration> {\n\tprotected indexes: IndexSpecification[] = [{ key: { type: 1 } }];\n\n\tfindOneByUrl(url: string): Promise<IIntegration | null> {\n\t\treturn this.findOne({ url });\n\t}\n\n\tupdateRoomName(oldRoomName: string, newRoomName: string): ReturnType<BaseRaw<IIntegration>['updateMany']> {\n\t\tconst hashedOldRoomName = `#${oldRoomName}`;\n\t\tconst hashedNewRoomName = `#${newRoomName}`;\n\n\t\treturn this.updateMany(\n\t\t\t{\n\t\t\t\tchannel: hashedOldRoomName,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'channel.$': hashedNewRoomName,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tfindOneByIdAndCreatedByIfExists({\n\t\t_id,\n\t\tcreatedBy,\n\t}: {\n\t\t_id: IIntegration['_id'];\n\t\tcreatedBy: IIntegration['_createdBy'];\n\t}): Promise<IIntegration | null> {\n\t\treturn this.findOne({\n\t\t\t_id,\n\t\t\t...(createdBy && { '_createdBy._id': createdBy }),\n\t\t});\n\t}\n\n\tdisableByUserId(userId: string): ReturnType<BaseRaw<IIntegration>['updateMany']> {\n\t\treturn this.updateMany({ userId }, { $set: { enabled: false } });\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Integrations.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/Integrations.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  IntegrationsRaw: () => IntegrationsRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass IntegrationsRaw extends BaseRaw {\n  constructor() {\n    super(...arguments);\n    this.indexes = [{\n      key: {\n        type: 1\n      }\n    }];\n  }\n\n  findOneByUrl(url) {\n    return this.findOne({\n      url\n    });\n  }\n\n  updateRoomName(oldRoomName, newRoomName) {\n    const hashedOldRoomName = \"#\".concat(oldRoomName);\n    const hashedNewRoomName = \"#\".concat(newRoomName);\n    return this.updateMany({\n      channel: hashedOldRoomName\n    }, {\n      $set: {\n        'channel.$': hashedNewRoomName\n      }\n    });\n  }\n\n  findOneByIdAndCreatedByIfExists(_ref) {\n    let {\n      _id,\n      createdBy\n    } = _ref;\n    return this.findOne(_objectSpread({\n      _id\n    }, createdBy && {\n      '_createdBy._id': createdBy\n    }));\n  }\n\n  disableByUserId(userId) {\n    return this.updateMany({\n      userId\n    }, {\n      $set: {\n        enabled: false\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/Integrations.ts"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAsC,MAAM,CAAA,IAAN,CAAM,sCAAN,EAAkB;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAlB,EAAkB,CAAlB;AAAtC,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,eAAmC,EAAA,MAAW;AAA9C,CAAT;AAAwD,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAGlD,MAAO,eAAP,SAA+B,OAA/B,CAAoD;AAAA;AAAA;AAAA,SAC/C,OAD+C,GACf,CAAC;AAAE,MAAA,GAAG,EAAE;AAAE,QAAA,IAAI,EAAE;AAAR;AAAP,KAAD,CADe;AAAA;;AAGzD,EAAA,YAAY,CAAC,GAAD,EAAY;AACvB,WAAO,KAAK,OAAL,CAAa;AAAE,MAAA;AAAF,KAAb,CAAP;AACA;;AAED,EAAA,cAAc,CAAC,WAAD,EAAsB,WAAtB,EAAyC;AACtD,UAAM,iBAAiB,cAAO,WAAP,CAAvB;AACA,UAAM,iBAAiB,cAAO,WAAP,CAAvB;AAEA,WAAO,KAAK,UAAL,CACN;AACC,MAAA,OAAO,EAAE;AADV,KADM,EAIN;AACC,MAAA,IAAI,EAAE;AACL,qBAAa;AADR;AADP,KAJM,CAAP;AAUA;;AAED,EAAA,+BAA+B,OAM9B;AAAA,QAN+B;AAC/B,MAAA,GAD+B;AAE/B,MAAA;AAF+B,KAM/B;AACA,WAAO,KAAK,OAAL;AACN,MAAA;AADM,OAEF,SAAS,IAAI;AAAE,wBAAkB;AAApB,KAFX,EAAP;AAIA;;AAED,EAAA,eAAe,CAAC,MAAD,EAAe;AAC7B,WAAO,KAAK,UAAL,CAAgB;AAAE,MAAA;AAAF,KAAhB,EAA4B;AAAE,MAAA,IAAI,EAAE;AAAE,QAAA,OAAO,EAAE;AAAX;AAAR,KAA5B,CAAP;AACA;;AAtCwD","sourcesContent":["import { BaseRaw, IndexSpecification } from './BaseRaw';\nimport { IIntegration } from '../../../../definition/IIntegration';\n\nexport class IntegrationsRaw extends BaseRaw<IIntegration> {\n\tprotected indexes: IndexSpecification[] = [{ key: { type: 1 } }];\n\n\tfindOneByUrl(url: string): Promise<IIntegration | null> {\n\t\treturn this.findOne({ url });\n\t}\n\n\tupdateRoomName(oldRoomName: string, newRoomName: string): ReturnType<BaseRaw<IIntegration>['updateMany']> {\n\t\tconst hashedOldRoomName = `#${oldRoomName}`;\n\t\tconst hashedNewRoomName = `#${newRoomName}`;\n\n\t\treturn this.updateMany(\n\t\t\t{\n\t\t\t\tchannel: hashedOldRoomName,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'channel.$': hashedNewRoomName,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tfindOneByIdAndCreatedByIfExists({\n\t\t_id,\n\t\tcreatedBy,\n\t}: {\n\t\t_id: IIntegration['_id'];\n\t\tcreatedBy: IIntegration['_createdBy'];\n\t}): Promise<IIntegration | null> {\n\t\treturn this.findOne({\n\t\t\t_id,\n\t\t\t...(createdBy && { '_createdBy._id': createdBy }),\n\t\t});\n\t}\n\n\tdisableByUserId(userId: string): ReturnType<BaseRaw<IIntegration>['updateMany']> {\n\t\treturn this.updateMany({ userId }, { $set: { enabled: false } });\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"0a68d531f4d37c14904a4b37a7367e2ce2c72fd8"}

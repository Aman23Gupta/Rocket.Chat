{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/business-hour/BusinessHourManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/business-hour/BusinessHourManager.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/business-hour/BusinessHourManager.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/business-hour/BusinessHourManager.ts","sourceRoot":"","sources":["app/livechat/server/business-hour/BusinessHourManager.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nimport { ILivechatBusinessHour, LivechatBusinessHourTypes } from '../../../../definition/ILivechatBusinessHour';\nimport { IBusinessHourBehavior, IBusinessHourType } from './AbstractBusinessHour';\nimport { settings } from '../../../settings/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Users } from '../../../models/server/raw';\nimport { ICronJobs } from '../../../../definition/ICronJobs';\n\nconst cronJobDayDict: Record<string, number> = {\n\tSunday: 0,\n\tMonday: 1,\n\tTuesday: 2,\n\tWednesday: 3,\n\tThursday: 4,\n\tFriday: 5,\n\tSaturday: 6,\n};\n\nexport class BusinessHourManager {\n\tprivate types: Map<string, IBusinessHourType> = new Map();\n\n\tprivate behavior: IBusinessHourBehavior;\n\n\tprivate cronJobs: ICronJobs;\n\n\tprivate cronJobsCache: string[] = [];\n\n\tconstructor(cronJobs: ICronJobs) {\n\t\tthis.cronJobs = cronJobs;\n\t\tthis.openWorkHoursCallback = this.openWorkHoursCallback.bind(this);\n\t\tthis.closeWorkHoursCallback = this.closeWorkHoursCallback.bind(this);\n\t}\n\n\tasync startManager(): Promise<void> {\n\t\tawait this.createCronJobsForWorkHours();\n\t\tthis.setupCallbacks();\n\t\tthis.behavior.onStartBusinessHours();\n\t}\n\n\tasync stopManager(): Promise<void> {\n\t\tthis.removeCronJobs();\n\t\tthis.clearCronJobsCache();\n\t\tthis.removeCallbacks();\n\t\tawait this.behavior.onDisableBusinessHours();\n\t}\n\n\tasync allowAgentChangeServiceStatus(agentId: string): Promise<boolean> {\n\t\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this.behavior.allowAgentChangeServiceStatus(agentId);\n\t}\n\n\tregisterBusinessHourType(businessHourType: IBusinessHourType): void {\n\t\tthis.types.set(businessHourType.name, businessHourType);\n\t}\n\n\tregisterBusinessHourBehavior(behavior: IBusinessHourBehavior): void {\n\t\tthis.behavior = behavior;\n\t}\n\n\tasync getBusinessHour(id?: string, type?: string): Promise<ILivechatBusinessHour | null> {\n\t\tconst businessHourType = this.getBusinessHourType((type as string) || LivechatBusinessHourTypes.DEFAULT);\n\t\tif (!businessHourType) {\n\t\t\treturn null;\n\t\t}\n\t\treturn businessHourType.getBusinessHour(id);\n\t}\n\n\tasync saveBusinessHour(businessHourData: ILivechatBusinessHour): Promise<void> {\n\t\tconst type = this.getBusinessHourType((businessHourData.type as string) || LivechatBusinessHourTypes.DEFAULT) as IBusinessHourType;\n\t\tconst saved = await type.saveBusinessHour(businessHourData);\n\t\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.behavior.afterSaveBusinessHours(saved);\n\t\tawait this.createCronJobsForWorkHours();\n\t}\n\n\tasync removeBusinessHourByIdAndType(id: string, type: string): Promise<void> {\n\t\tconst businessHourType = this.getBusinessHourType(type) as IBusinessHourType;\n\t\tawait businessHourType.removeBusinessHourById(id);\n\t\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.createCronJobsForWorkHours();\n\t}\n\n\tasync onLogin(agentId: string): Promise<any> {\n\t\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\t\treturn this.behavior.changeAgentActiveStatus(agentId, 'available');\n\t\t}\n\n\t\treturn Users.setLivechatStatusActiveBasedOnBusinessHours(agentId);\n\t}\n\n\tprivate setupCallbacks(): void {\n\t\tcallbacks.add(\n\t\t\t'livechat.removeAgentDepartment',\n\t\t\tthis.behavior.onRemoveAgentFromDepartment.bind(this),\n\t\t\tcallbacks.priority.HIGH,\n\t\t\t'business-hour-livechat-on-remove-agent-department',\n\t\t);\n\t\tcallbacks.add(\n\t\t\t'livechat.afterRemoveDepartment',\n\t\t\tthis.behavior.onRemoveDepartment.bind(this),\n\t\t\tcallbacks.priority.HIGH,\n\t\t\t'business-hour-livechat-after-remove-department',\n\t\t);\n\t\tcallbacks.add(\n\t\t\t'livechat.saveAgentDepartment',\n\t\t\tthis.behavior.onAddAgentToDepartment.bind(this),\n\t\t\tcallbacks.priority.HIGH,\n\t\t\t'business-hour-livechat-on-save-agent-department',\n\t\t);\n\t}\n\n\tprivate removeCallbacks(): void {\n\t\tcallbacks.remove('livechat.removeAgentDepartment', 'business-hour-livechat-on-remove-agent-department');\n\t\tcallbacks.remove('livechat.afterRemoveDepartment', 'business-hour-livechat-after-remove-department');\n\t\tcallbacks.remove('livechat.saveAgentDepartment', 'business-hour-livechat-on-save-agent-department');\n\t}\n\n\tprivate async createCronJobsForWorkHours(): Promise<void> {\n\t\tthis.removeCronJobs();\n\t\tthis.clearCronJobsCache();\n\t\tconst [workHours] = await this.behavior.findHoursToCreateJobs();\n\t\tif (!workHours) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, finish } = workHours;\n\t\tstart.forEach(({ day, times }) => this.scheduleCronJob(times, day, 'open', this.openWorkHoursCallback));\n\t\tfinish.forEach(({ day, times }) => this.scheduleCronJob(times, day, 'close', this.closeWorkHoursCallback));\n\t}\n\n\tprivate scheduleCronJob(items: string[], day: string, type: string, job: Function): void {\n\t\titems.forEach((hour) => {\n\t\t\tconst jobName = `${day}/${hour}/${type}`;\n\t\t\tconst time = moment(hour, 'HH:mm');\n\t\t\tconst scheduleAt = `${time.minutes()} ${time.hours()} * * ${cronJobDayDict[day]}`;\n\t\t\tthis.addToCache(jobName);\n\t\t\tthis.cronJobs.add(jobName, scheduleAt, job);\n\t\t});\n\t}\n\n\tprivate async openWorkHoursCallback(day: string, hour: string): Promise<void> {\n\t\treturn this.behavior.openBusinessHoursByDayAndHour(day, hour);\n\t}\n\n\tprivate async closeWorkHoursCallback(day: string, hour: string): Promise<void> {\n\t\treturn this.behavior.closeBusinessHoursByDayAndHour(day, hour);\n\t}\n\n\tprivate getBusinessHourType(type: string): IBusinessHourType | undefined {\n\t\treturn this.types.get(type);\n\t}\n\n\tprivate removeCronJobs(): void {\n\t\tthis.cronJobsCache.forEach((jobName) => this.cronJobs.remove(jobName));\n\t}\n\n\tprivate addToCache(jobName: string): void {\n\t\tthis.cronJobsCache.push(jobName);\n\t}\n\n\tprivate clearCronJobsCache(): void {\n\t\tthis.cronJobsCache = [];\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/business-hour/BusinessHourManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/business-hour/BusinessHourManager.ts"}},"code":"module.export({\n  BusinessHourManager: () => BusinessHourManager\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet LivechatBusinessHourTypes;\nmodule.link(\"../../../../definition/ILivechatBusinessHour\", {\n  LivechatBusinessHourTypes(v) {\n    LivechatBusinessHourTypes = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\nlet Users;\nmodule.link(\"../../../models/server/raw\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 4);\nconst cronJobDayDict = {\n  Sunday: 0,\n  Monday: 1,\n  Tuesday: 2,\n  Wednesday: 3,\n  Thursday: 4,\n  Friday: 5,\n  Saturday: 6\n};\n\nclass BusinessHourManager {\n  constructor(cronJobs) {\n    this.types = new Map();\n    this.behavior = void 0;\n    this.cronJobs = void 0;\n    this.cronJobsCache = [];\n    this.cronJobs = cronJobs;\n    this.openWorkHoursCallback = this.openWorkHoursCallback.bind(this);\n    this.closeWorkHoursCallback = this.closeWorkHoursCallback.bind(this);\n  }\n\n  startManager() {\n    return Promise.asyncApply(() => {\n      Promise.await(this.createCronJobsForWorkHours());\n      this.setupCallbacks();\n      this.behavior.onStartBusinessHours();\n    });\n  }\n\n  stopManager() {\n    return Promise.asyncApply(() => {\n      this.removeCronJobs();\n      this.clearCronJobsCache();\n      this.removeCallbacks();\n      Promise.await(this.behavior.onDisableBusinessHours());\n    });\n  }\n\n  allowAgentChangeServiceStatus(agentId) {\n    return Promise.asyncApply(() => {\n      if (!settings.get('Livechat_enable_business_hours')) {\n        return true;\n      }\n\n      return this.behavior.allowAgentChangeServiceStatus(agentId);\n    });\n  }\n\n  registerBusinessHourType(businessHourType) {\n    this.types.set(businessHourType.name, businessHourType);\n  }\n\n  registerBusinessHourBehavior(behavior) {\n    this.behavior = behavior;\n  }\n\n  getBusinessHour(id, type) {\n    return Promise.asyncApply(() => {\n      const businessHourType = this.getBusinessHourType(type || LivechatBusinessHourTypes.DEFAULT);\n\n      if (!businessHourType) {\n        return null;\n      }\n\n      return businessHourType.getBusinessHour(id);\n    });\n  }\n\n  saveBusinessHour(businessHourData) {\n    return Promise.asyncApply(() => {\n      const type = this.getBusinessHourType(businessHourData.type || LivechatBusinessHourTypes.DEFAULT);\n      const saved = Promise.await(type.saveBusinessHour(businessHourData));\n\n      if (!settings.get('Livechat_enable_business_hours')) {\n        return;\n      }\n\n      Promise.await(this.behavior.afterSaveBusinessHours(saved));\n      Promise.await(this.createCronJobsForWorkHours());\n    });\n  }\n\n  removeBusinessHourByIdAndType(id, type) {\n    return Promise.asyncApply(() => {\n      const businessHourType = this.getBusinessHourType(type);\n      Promise.await(businessHourType.removeBusinessHourById(id));\n\n      if (!settings.get('Livechat_enable_business_hours')) {\n        return;\n      }\n\n      Promise.await(this.createCronJobsForWorkHours());\n    });\n  }\n\n  onLogin(agentId) {\n    return Promise.asyncApply(() => {\n      if (!settings.get('Livechat_enable_business_hours')) {\n        return this.behavior.changeAgentActiveStatus(agentId, 'available');\n      }\n\n      return Users.setLivechatStatusActiveBasedOnBusinessHours(agentId);\n    });\n  }\n\n  setupCallbacks() {\n    callbacks.add('livechat.removeAgentDepartment', this.behavior.onRemoveAgentFromDepartment.bind(this), callbacks.priority.HIGH, 'business-hour-livechat-on-remove-agent-department');\n    callbacks.add('livechat.afterRemoveDepartment', this.behavior.onRemoveDepartment.bind(this), callbacks.priority.HIGH, 'business-hour-livechat-after-remove-department');\n    callbacks.add('livechat.saveAgentDepartment', this.behavior.onAddAgentToDepartment.bind(this), callbacks.priority.HIGH, 'business-hour-livechat-on-save-agent-department');\n  }\n\n  removeCallbacks() {\n    callbacks.remove('livechat.removeAgentDepartment', 'business-hour-livechat-on-remove-agent-department');\n    callbacks.remove('livechat.afterRemoveDepartment', 'business-hour-livechat-after-remove-department');\n    callbacks.remove('livechat.saveAgentDepartment', 'business-hour-livechat-on-save-agent-department');\n  }\n\n  createCronJobsForWorkHours() {\n    return Promise.asyncApply(() => {\n      this.removeCronJobs();\n      this.clearCronJobsCache();\n      const [workHours] = Promise.await(this.behavior.findHoursToCreateJobs());\n\n      if (!workHours) {\n        return;\n      }\n\n      const {\n        start,\n        finish\n      } = workHours;\n      start.forEach(_ref => {\n        let {\n          day,\n          times\n        } = _ref;\n        return this.scheduleCronJob(times, day, 'open', this.openWorkHoursCallback);\n      });\n      finish.forEach(_ref2 => {\n        let {\n          day,\n          times\n        } = _ref2;\n        return this.scheduleCronJob(times, day, 'close', this.closeWorkHoursCallback);\n      });\n    });\n  }\n\n  scheduleCronJob(items, day, type, job) {\n    items.forEach(hour => {\n      const jobName = \"\".concat(day, \"/\").concat(hour, \"/\").concat(type);\n      const time = moment(hour, 'HH:mm');\n      const scheduleAt = \"\".concat(time.minutes(), \" \").concat(time.hours(), \" * * \").concat(cronJobDayDict[day]);\n      this.addToCache(jobName);\n      this.cronJobs.add(jobName, scheduleAt, job);\n    });\n  }\n\n  openWorkHoursCallback(day, hour) {\n    return Promise.asyncApply(() => {\n      return this.behavior.openBusinessHoursByDayAndHour(day, hour);\n    });\n  }\n\n  closeWorkHoursCallback(day, hour) {\n    return Promise.asyncApply(() => {\n      return this.behavior.closeBusinessHoursByDayAndHour(day, hour);\n    });\n  }\n\n  getBusinessHourType(type) {\n    return this.types.get(type);\n  }\n\n  removeCronJobs() {\n    this.cronJobsCache.forEach(jobName => this.cronJobs.remove(jobName));\n  }\n\n  addToCache(jobName) {\n    this.cronJobsCache.push(jobName);\n  }\n\n  clearCronJobsCache() {\n    this.cronJobsCache = [];\n  }\n\n}","map":{"version":3,"sources":["app/livechat/server/business-hour/BusinessHourManager.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nimport { ILivechatBusinessHour, LivechatBusinessHourTypes } from '../../../../definition/ILivechatBusinessHour';\nimport { IBusinessHourBehavior, IBusinessHourType } from './AbstractBusinessHour';\nimport { settings } from '../../../settings/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Users } from '../../../models/server/raw';\nimport { ICronJobs } from '../../../../definition/ICronJobs';\n\nconst cronJobDayDict: Record<string, number> = {\n\tSunday: 0,\n\tMonday: 1,\n\tTuesday: 2,\n\tWednesday: 3,\n\tThursday: 4,\n\tFriday: 5,\n\tSaturday: 6,\n};\n\nexport class BusinessHourManager {\n\tprivate types: Map<string, IBusinessHourType> = new Map();\n\n\tprivate behavior: IBusinessHourBehavior;\n\n\tprivate cronJobs: ICronJobs;\n\n\tprivate cronJobsCache: string[] = [];\n\n\tconstructor(cronJobs: ICronJobs) {\n\t\tthis.cronJobs = cronJobs;\n\t\tthis.openWorkHoursCallback = this.openWorkHoursCallback.bind(this);\n\t\tthis.closeWorkHoursCallback = this.closeWorkHoursCallback.bind(this);\n\t}\n\n\tasync startManager(): Promise<void> {\n\t\tawait this.createCronJobsForWorkHours();\n\t\tthis.setupCallbacks();\n\t\tthis.behavior.onStartBusinessHours();\n\t}\n\n\tasync stopManager(): Promise<void> {\n\t\tthis.removeCronJobs();\n\t\tthis.clearCronJobsCache();\n\t\tthis.removeCallbacks();\n\t\tawait this.behavior.onDisableBusinessHours();\n\t}\n\n\tasync allowAgentChangeServiceStatus(agentId: string): Promise<boolean> {\n\t\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this.behavior.allowAgentChangeServiceStatus(agentId);\n\t}\n\n\tregisterBusinessHourType(businessHourType: IBusinessHourType): void {\n\t\tthis.types.set(businessHourType.name, businessHourType);\n\t}\n\n\tregisterBusinessHourBehavior(behavior: IBusinessHourBehavior): void {\n\t\tthis.behavior = behavior;\n\t}\n\n\tasync getBusinessHour(id?: string, type?: string): Promise<ILivechatBusinessHour | null> {\n\t\tconst businessHourType = this.getBusinessHourType((type as string) || LivechatBusinessHourTypes.DEFAULT);\n\t\tif (!businessHourType) {\n\t\t\treturn null;\n\t\t}\n\t\treturn businessHourType.getBusinessHour(id);\n\t}\n\n\tasync saveBusinessHour(businessHourData: ILivechatBusinessHour): Promise<void> {\n\t\tconst type = this.getBusinessHourType((businessHourData.type as string) || LivechatBusinessHourTypes.DEFAULT) as IBusinessHourType;\n\t\tconst saved = await type.saveBusinessHour(businessHourData);\n\t\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.behavior.afterSaveBusinessHours(saved);\n\t\tawait this.createCronJobsForWorkHours();\n\t}\n\n\tasync removeBusinessHourByIdAndType(id: string, type: string): Promise<void> {\n\t\tconst businessHourType = this.getBusinessHourType(type) as IBusinessHourType;\n\t\tawait businessHourType.removeBusinessHourById(id);\n\t\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.createCronJobsForWorkHours();\n\t}\n\n\tasync onLogin(agentId: string): Promise<any> {\n\t\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\t\treturn this.behavior.changeAgentActiveStatus(agentId, 'available');\n\t\t}\n\n\t\treturn Users.setLivechatStatusActiveBasedOnBusinessHours(agentId);\n\t}\n\n\tprivate setupCallbacks(): void {\n\t\tcallbacks.add(\n\t\t\t'livechat.removeAgentDepartment',\n\t\t\tthis.behavior.onRemoveAgentFromDepartment.bind(this),\n\t\t\tcallbacks.priority.HIGH,\n\t\t\t'business-hour-livechat-on-remove-agent-department',\n\t\t);\n\t\tcallbacks.add(\n\t\t\t'livechat.afterRemoveDepartment',\n\t\t\tthis.behavior.onRemoveDepartment.bind(this),\n\t\t\tcallbacks.priority.HIGH,\n\t\t\t'business-hour-livechat-after-remove-department',\n\t\t);\n\t\tcallbacks.add(\n\t\t\t'livechat.saveAgentDepartment',\n\t\t\tthis.behavior.onAddAgentToDepartment.bind(this),\n\t\t\tcallbacks.priority.HIGH,\n\t\t\t'business-hour-livechat-on-save-agent-department',\n\t\t);\n\t}\n\n\tprivate removeCallbacks(): void {\n\t\tcallbacks.remove('livechat.removeAgentDepartment', 'business-hour-livechat-on-remove-agent-department');\n\t\tcallbacks.remove('livechat.afterRemoveDepartment', 'business-hour-livechat-after-remove-department');\n\t\tcallbacks.remove('livechat.saveAgentDepartment', 'business-hour-livechat-on-save-agent-department');\n\t}\n\n\tprivate async createCronJobsForWorkHours(): Promise<void> {\n\t\tthis.removeCronJobs();\n\t\tthis.clearCronJobsCache();\n\t\tconst [workHours] = await this.behavior.findHoursToCreateJobs();\n\t\tif (!workHours) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, finish } = workHours;\n\t\tstart.forEach(({ day, times }) => this.scheduleCronJob(times, day, 'open', this.openWorkHoursCallback));\n\t\tfinish.forEach(({ day, times }) => this.scheduleCronJob(times, day, 'close', this.closeWorkHoursCallback));\n\t}\n\n\tprivate scheduleCronJob(items: string[], day: string, type: string, job: Function): void {\n\t\titems.forEach((hour) => {\n\t\t\tconst jobName = `${day}/${hour}/${type}`;\n\t\t\tconst time = moment(hour, 'HH:mm');\n\t\t\tconst scheduleAt = `${time.minutes()} ${time.hours()} * * ${cronJobDayDict[day]}`;\n\t\t\tthis.addToCache(jobName);\n\t\t\tthis.cronJobs.add(jobName, scheduleAt, job);\n\t\t});\n\t}\n\n\tprivate async openWorkHoursCallback(day: string, hour: string): Promise<void> {\n\t\treturn this.behavior.openBusinessHoursByDayAndHour(day, hour);\n\t}\n\n\tprivate async closeWorkHoursCallback(day: string, hour: string): Promise<void> {\n\t\treturn this.behavior.closeBusinessHoursByDayAndHour(day, hour);\n\t}\n\n\tprivate getBusinessHourType(type: string): IBusinessHourType | undefined {\n\t\treturn this.types.get(type);\n\t}\n\n\tprivate removeCronJobs(): void {\n\t\tthis.cronJobsCache.forEach((jobName) => this.cronJobs.remove(jobName));\n\t}\n\n\tprivate addToCache(jobName: string): void {\n\t\tthis.cronJobsCache.push(jobName);\n\t}\n\n\tprivate clearCronJobsCache(): void {\n\t\tthis.cronJobsCache = [];\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"a1d0193b3c20f3b8a5ba42526d54fb958dceee12"}

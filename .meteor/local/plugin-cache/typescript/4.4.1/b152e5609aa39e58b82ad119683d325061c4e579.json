{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/getPino.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/logger/getPino.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/getPino.ts","inputSourceMap":{"version":3,"file":"server/lib/logger/getPino.ts","sourceRoot":"","sources":["server/lib/logger/getPino.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAG5B,mFAAmF;AACnF,OAAO,YAAY,CAAC;AAEpB,4DAA4D;AAC5D,4HAA4H;AAC5H,SAAS,SAAS,CAAe,IAAe,EAAE,MAAW;IAC5D,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;KACvD;IACD,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjC,CAAC;AAED,MAAM,QAAQ,GAAG,IAAI,CAAC;IACrB,KAAK,EAAE,EAAE,SAAS,EAAE;IACpB,YAAY,EAAE;QACb,IAAI,EAAE,EAAE;QACR,MAAM,EAAE,EAAE;QACV,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE,EAAE;KACX;IACD,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,MAAM;IACb,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO;IACxC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;QACxC,CAAC,CAAC;YACA,SAAS,EAAE;gBACV,MAAM,EAAE,aAAa;gBACrB,OAAO,EAAE;oBACR,QAAQ,EAAE,IAAI;iBACd;aACD;SACA;QACH,CAAC,CAAC,EAAE,CAAC;CACN,CAAC,CAAC;AAIH,MAAM,UAAU,OAAO,CAAC,IAAY,EAAE,KAAK,GAAG,MAAM;IACnD,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAe,CAAC;AAC1D,CAAC","sourcesContent":["import { pino } from 'pino';\nimport type { Logger } from 'pino';\n\n// make sure log queue is set up, so pino uses the overwritten process.stdout.write\nimport './logQueue';\n\n// add support to multiple params on the log commands, i.e.:\n// logger.info('user', Meteor.user()); // will print: {\"level\":30,\"time\":1629814080968,\"msg\":\"user {\\\"username\\\": \\\"foo\\\"}\"}\nfunction logMethod(this: Logger, args: unknown[], method: any): void {\n\tif (args.length > 1) {\n\t\targs[0] = `${args[0]}${' %j'.repeat(args.length - 1)}`;\n\t}\n\treturn method.apply(this, args);\n}\n\nconst mainPino = pino({\n\thooks: { logMethod },\n\tcustomLevels: {\n\t\thttp: 35,\n\t\tmethod: 35,\n\t\tsubscription: 35,\n\t\tstartup: 51,\n\t},\n\tname: '',\n\tlevel: 'warn',\n\ttimestamp: pino.stdTimeFunctions.isoTime,\n\t...(process.env.NODE_ENV !== 'production'\n\t\t? {\n\t\t\t\ttransport: {\n\t\t\t\t\ttarget: 'pino-pretty',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tcolorize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t  }\n\t\t: {}),\n});\n\nexport type MainLogger = typeof mainPino;\n\nexport function getPino(name: string, level = 'warn'): MainLogger {\n\treturn mainPino.child({ name }, { level }) as MainLogger;\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/getPino.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/logger/getPino.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  getPino: () => getPino\n});\nlet pino;\nmodule.link(\"pino\", {\n  pino(v) {\n    pino = v;\n  }\n\n}, 0);\nmodule.link(\"./logQueue\");\n\n// add support to multiple params on the log commands, i.e.:\n// logger.info('user', Meteor.user()); // will print: {\"level\":30,\"time\":1629814080968,\"msg\":\"user {\\\"username\\\": \\\"foo\\\"}\"}\nfunction logMethod(args, method) {\n  if (args.length > 1) {\n    args[0] = \"\".concat(args[0]).concat(' %j'.repeat(args.length - 1));\n  }\n\n  return method.apply(this, args);\n}\n\nconst mainPino = pino(_objectSpread({\n  hooks: {\n    logMethod\n  },\n  customLevels: {\n    http: 35,\n    method: 35,\n    subscription: 35,\n    startup: 51\n  },\n  name: '',\n  level: 'warn',\n  timestamp: pino.stdTimeFunctions.isoTime\n}, process.env.NODE_ENV !== 'production' ? {\n  transport: {\n    target: 'pino-pretty',\n    options: {\n      colorize: true\n    }\n  }\n} : {}));\n\nfunction getPino(name) {\n  let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'warn';\n  return mainPino.child({\n    name\n  }, {\n    level\n  });\n}","map":{"version":3,"sources":["server/lib/logger/getPino.ts"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAe,MAAM,CAAA,IAAN,CAAa,sCAAb,EAAa;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAb,EAAa,CAAb;AAAf,MAAA,CAAO,MAAP,CAAa;AAAE,EAAA,OAAM,EAAA,MAAM;AAAd,CAAb;AAA4B,IAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA;;AAM5B;AACA;AACA,SAAS,SAAT,CAAiC,IAAjC,EAAkD,MAAlD,EAA6D;AAC5D,MAAI,IAAI,CAAC,MAAL,GAAc,CAAlB,EAAqB;AACpB,IAAA,IAAI,CAAC,CAAD,CAAJ,aAAa,IAAI,CAAC,CAAD,CAAjB,SAAuB,MAAM,MAAN,CAAa,IAAI,CAAC,MAAL,GAAc,CAA3B,CAAvB;AACA;;AACD,SAAO,MAAM,CAAC,KAAP,CAAa,IAAb,EAAmB,IAAnB,CAAP;AACA;;AAED,MAAM,QAAQ,GAAG,IAAI;AACpB,EAAA,KAAK,EAAE;AAAE,IAAA;AAAF,GADa;AAEpB,EAAA,YAAY,EAAE;AACb,IAAA,IAAI,EAAE,EADO;AAEb,IAAA,MAAM,EAAE,EAFK;AAGb,IAAA,YAAY,EAAE,EAHD;AAIb,IAAA,OAAO,EAAE;AAJI,GAFM;AAQpB,EAAA,IAAI,EAAE,EARc;AASpB,EAAA,KAAK,EAAE,MATa;AAUpB,EAAA,SAAS,EAAE,IAAI,CAAC,gBAAL,CAAsB;AAVb,GAWhB,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GACD;AACA,EAAA,SAAS,EAAE;AACV,IAAA,MAAM,EAAE,aADE;AAEV,IAAA,OAAO,EAAE;AACR,MAAA,QAAQ,EAAE;AADF;AAFC;AADX,CADC,GASD,EApBiB,EAArB;;AAyBM,SAAU,OAAV,CAAkB,IAAlB,EAA8C;AAAA,MAAd,KAAc,uEAAN,MAAM;AACnD,SAAO,QAAQ,CAAC,KAAT,CAAe;AAAE,IAAA;AAAF,GAAf,EAAyB;AAAE,IAAA;AAAF,GAAzB,CAAP;AACA","sourcesContent":["import { pino } from 'pino';\nimport type { Logger } from 'pino';\n\n// make sure log queue is set up, so pino uses the overwritten process.stdout.write\nimport './logQueue';\n\n// add support to multiple params on the log commands, i.e.:\n// logger.info('user', Meteor.user()); // will print: {\"level\":30,\"time\":1629814080968,\"msg\":\"user {\\\"username\\\": \\\"foo\\\"}\"}\nfunction logMethod(this: Logger, args: unknown[], method: any): void {\n\tif (args.length > 1) {\n\t\targs[0] = `${args[0]}${' %j'.repeat(args.length - 1)}`;\n\t}\n\treturn method.apply(this, args);\n}\n\nconst mainPino = pino({\n\thooks: { logMethod },\n\tcustomLevels: {\n\t\thttp: 35,\n\t\tmethod: 35,\n\t\tsubscription: 35,\n\t\tstartup: 51,\n\t},\n\tname: '',\n\tlevel: 'warn',\n\ttimestamp: pino.stdTimeFunctions.isoTime,\n\t...(process.env.NODE_ENV !== 'production'\n\t\t? {\n\t\t\t\ttransport: {\n\t\t\t\t\ttarget: 'pino-pretty',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tcolorize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t  }\n\t\t: {}),\n});\n\nexport type MainLogger = typeof mainPino;\n\nexport function getPino(name: string, level = 'warn'): MainLogger {\n\treturn mainPino.child({ name }, { level }) as MainLogger;\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"b152e5609aa39e58b82ad119683d325061c4e579"}

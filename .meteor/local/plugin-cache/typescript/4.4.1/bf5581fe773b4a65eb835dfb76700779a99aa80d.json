{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/notifications/server/lib/Notifications.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/notifications/server/lib/Notifications.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/notifications/server/lib/Notifications.ts","inputSourceMap":{"version":3,"file":"app/notifications/server/lib/Notifications.ts","sourceRoot":"","sources":["app/notifications/server/lib/Notifications.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAE9C,OAAO,EAAE,mBAAmB,EAAE,MAAM,+DAA+D,CAAC;AACpG,OAAO,EAAE,QAAQ,EAAE,MAAM,qDAAqD,CAAC;AAC/E,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EACN,aAAa,IAAI,gBAAgB,EACjC,KAAK,IAAI,QAAQ,EACjB,KAAK,IAAI,QAAQ,EACjB,QAAQ,IAAI,WAAW,GACvB,MAAM,4BAA4B,CAAC;AACpC,OAAO,YAAY,CAAC;AAEpB,mDAAmD;AACnD,+DAA+D;AAC/D,6BAA6B;AAC7B,UAAU;AACV,eAAe;AACf,UAAU;AACV,OAAO;AACP,MAAM;AAEN,MAAM,OAAO,MAAO,SAAQ,QAAQ;IACnC,mBAAmB,CAAC,IAAY,EAAE,EAA2F;QAC5H,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,SAAS,EAAE,OAAO;YAChD,OAAO,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,OAAmE;QACjF,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAED,cAAc,CAAC,UAAkB,EAAE,EAAU,EAAE,MAA2B;QACzE,OAAO,SAAS,CAAC,YAAY,CAAC;YAC7B,GAAG,EAAE,SAAS;YACd,UAAU;YACV,EAAE;YACF,MAAM;SACN,CAAC,CAAC;IACJ,CAAC;CACD;AAED,MAAM,aAAa,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC,CAAC;AAEtD,aAAa,CAAC,SAAS,CAAC;IACvB,KAAK,EAAE,QAAQ;IACf,aAAa,EAAE,gBAAgB;IAC/B,KAAK,EAAE,QAAQ;IACf,QAAQ,EAAE,WAAW;CACrB,CAAC,CAAC;AAEH,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE;IACjE,GAAG,CAAC,cAAc,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC;AAEH,eAAe,aAAa,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { DDPCommon } from 'meteor/ddp-common';\n\nimport { NotificationsModule } from '../../../../server/modules/notifications/notifications.module';\nimport { Streamer } from '../../../../server/modules/streamer/streamer.module';\nimport { api } from '../../../../server/sdk/api';\nimport {\n\tSubscriptions as SubscriptionsRaw,\n\tRooms as RoomsRaw,\n\tUsers as UsersRaw,\n\tSettings as SettingsRaw,\n} from '../../../models/server/raw';\nimport './Presence';\n\n// TODO: Replace this in favor of the api.broadcast\n// StreamerCentral.on('broadcast', (name, eventName, args) => {\n// \tapi.broadcast('stream', [\n// \t\tname,\n// \t\teventName,\n// \t\targs,\n// \t]);\n// });\n\nexport class Stream extends Streamer {\n\tregisterPublication(name: string, fn: (eventName: string, options: boolean | { useCollection?: boolean; args?: any }) => void): void {\n\t\tMeteor.publish(name, function (eventName, options) {\n\t\t\treturn Promise.await(fn.call(this, eventName, options));\n\t\t});\n\t}\n\n\tregisterMethod(methods: Record<string, (eventName: string, ...args: any[]) => any>): void {\n\t\tMeteor.methods(methods);\n\t}\n\n\tchangedPayload(collection: string, id: string, fields: Record<string, any>): string | false {\n\t\treturn DDPCommon.stringifyDDP({\n\t\t\tmsg: 'changed',\n\t\t\tcollection,\n\t\t\tid,\n\t\t\tfields,\n\t\t});\n\t}\n}\n\nconst notifications = new NotificationsModule(Stream);\n\nnotifications.configure({\n\tRooms: RoomsRaw,\n\tSubscriptions: SubscriptionsRaw,\n\tUsers: UsersRaw,\n\tSettings: SettingsRaw,\n});\n\nnotifications.streamLocal.on('broadcast', ({ eventName, args }) => {\n\tapi.broadcastLocal(eventName, ...args);\n});\n\nexport default notifications;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/notifications/server/lib/Notifications.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/notifications/server/lib/Notifications.ts"}},"code":"!function (module1) {\n  module1.export({\n    Stream: () => Stream\n  });\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n\n  }, 0);\n  let DDPCommon;\n  module1.link(\"meteor/ddp-common\", {\n    DDPCommon(v) {\n      DDPCommon = v;\n    }\n\n  }, 1);\n  let NotificationsModule;\n  module1.link(\"../../../../server/modules/notifications/notifications.module\", {\n    NotificationsModule(v) {\n      NotificationsModule = v;\n    }\n\n  }, 2);\n  let Streamer;\n  module1.link(\"../../../../server/modules/streamer/streamer.module\", {\n    Streamer(v) {\n      Streamer = v;\n    }\n\n  }, 3);\n  let api;\n  module1.link(\"../../../../server/sdk/api\", {\n    api(v) {\n      api = v;\n    }\n\n  }, 4);\n  let SubscriptionsRaw, RoomsRaw, UsersRaw, SettingsRaw;\n  module1.link(\"../../../models/server/raw\", {\n    Subscriptions(v) {\n      SubscriptionsRaw = v;\n    },\n\n    Rooms(v) {\n      RoomsRaw = v;\n    },\n\n    Users(v) {\n      UsersRaw = v;\n    },\n\n    Settings(v) {\n      SettingsRaw = v;\n    }\n\n  }, 5);\n  module1.link(\"./Presence\");\n\n  class Stream extends Streamer {\n    registerPublication(name, fn) {\n      Meteor.publish(name, function (eventName, options) {\n        return Promise.await(fn.call(this, eventName, options));\n      });\n    }\n\n    registerMethod(methods) {\n      Meteor.methods(methods);\n    }\n\n    changedPayload(collection, id, fields) {\n      return DDPCommon.stringifyDDP({\n        msg: 'changed',\n        collection,\n        id,\n        fields\n      });\n    }\n\n  }\n\n  const notifications = new NotificationsModule(Stream);\n  notifications.configure({\n    Rooms: RoomsRaw,\n    Subscriptions: SubscriptionsRaw,\n    Users: UsersRaw,\n    Settings: SettingsRaw\n  });\n  notifications.streamLocal.on('broadcast', _ref => {\n    let {\n      eventName,\n      args\n    } = _ref;\n    api.broadcastLocal(eventName, ...args);\n  });\n  module1.exportDefault(notifications);\n}.call(this, module);","map":{"version":3,"sources":["app/notifications/server/lib/Notifications.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { DDPCommon } from 'meteor/ddp-common';\n\nimport { NotificationsModule } from '../../../../server/modules/notifications/notifications.module';\nimport { Streamer } from '../../../../server/modules/streamer/streamer.module';\nimport { api } from '../../../../server/sdk/api';\nimport {\n\tSubscriptions as SubscriptionsRaw,\n\tRooms as RoomsRaw,\n\tUsers as UsersRaw,\n\tSettings as SettingsRaw,\n} from '../../../models/server/raw';\nimport './Presence';\n\n// TODO: Replace this in favor of the api.broadcast\n// StreamerCentral.on('broadcast', (name, eventName, args) => {\n// \tapi.broadcast('stream', [\n// \t\tname,\n// \t\teventName,\n// \t\targs,\n// \t]);\n// });\n\nexport class Stream extends Streamer {\n\tregisterPublication(name: string, fn: (eventName: string, options: boolean | { useCollection?: boolean; args?: any }) => void): void {\n\t\tMeteor.publish(name, function (eventName, options) {\n\t\t\treturn Promise.await(fn.call(this, eventName, options));\n\t\t});\n\t}\n\n\tregisterMethod(methods: Record<string, (eventName: string, ...args: any[]) => any>): void {\n\t\tMeteor.methods(methods);\n\t}\n\n\tchangedPayload(collection: string, id: string, fields: Record<string, any>): string | false {\n\t\treturn DDPCommon.stringifyDDP({\n\t\t\tmsg: 'changed',\n\t\t\tcollection,\n\t\t\tid,\n\t\t\tfields,\n\t\t});\n\t}\n}\n\nconst notifications = new NotificationsModule(Stream);\n\nnotifications.configure({\n\tRooms: RoomsRaw,\n\tSubscriptions: SubscriptionsRaw,\n\tUsers: UsersRaw,\n\tSettings: SettingsRaw,\n});\n\nnotifications.streamLocal.on('broadcast', ({ eventName, args }) => {\n\tapi.broadcastLocal(eventName, ...args);\n});\n\nexport default notifications;\n"],"sourceRoot":""},"sourceType":"module","hash":"bf5581fe773b4a65eb835dfb76700779a99aa80d"}

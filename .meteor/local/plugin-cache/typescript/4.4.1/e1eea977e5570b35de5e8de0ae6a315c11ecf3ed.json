{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/ui-master/server/inject.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/ui-master/server/inject.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/ui-master/server/inject.ts","inputSourceMap":{"version":3,"file":"app/ui-master/server/inject.ts","sourceRoot":"","sources":["app/ui-master/server/inject.ts"],"names":[],"mappings":"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","sourcesContent":["import crypto from 'crypto';\n\nimport parseRequest from 'parseurl';\nimport { NextHandleFunction } from 'connect';\nimport { WebApp } from 'meteor/webapp';\nimport { ReactiveDict } from 'meteor/reactive-dict';\nimport { Inject } from 'meteor/meteorhacks:inject-initial';\n\nimport { getURL } from '../../utils/server';\n\ntype Injection =\n\t| string\n\t| {\n\t\t\tcontent: string;\n\t\t\ttype: 'JS' | 'CSS';\n\t\t\ttag: string;\n\t  };\n\nexport const headInjections = new ReactiveDict();\n\nconst callback: NextHandleFunction = (req, res, next) => {\n\tif (req.method !== 'GET' && req.method !== 'HEAD' && req.method !== 'OPTIONS') {\n\t\tnext();\n\t\treturn;\n\t}\n\ttry {\n\t\tconst rawPath = parseRequest(req);\n\t\tconst pathname = rawPath?.pathname && decodeURIComponent(rawPath.pathname);\n\n\t\tif (!pathname) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tconst injection = headInjections.get(pathname.replace(/^\\//, '')) as Injection | undefined;\n\n\t\tif (!injection || typeof injection === 'string') {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tconst serve =\n\t\t\t(contentType: string) =>\n\t\t\t(content: string, cacheControl = 'public, max-age=31536000'): void => {\n\t\t\t\tres.writeHead(200, {\n\t\t\t\t\t'Content-type': contentType,\n\t\t\t\t\t'cache-control': cacheControl,\n\t\t\t\t\t'Content-Length': content.length,\n\t\t\t\t});\n\t\t\t\tres.write(content);\n\t\t\t\tres.end();\n\t\t\t};\n\n\t\tconst serveStaticJS = serve('application/javascript; charset=UTF-8');\n\t\tconst serveStaticCSS = serve('text/css; charset=UTF-8');\n\n\t\tif (injection.type === 'JS') {\n\t\t\tserveStaticJS(injection.content);\n\t\t\treturn;\n\t\t}\n\n\t\tif (injection.type === 'CSS') {\n\t\t\tserveStaticCSS(injection.content);\n\t\t\treturn;\n\t\t}\n\t\tnext();\n\t} catch (e) {\n\t\tnext();\n\t}\n};\n\nWebApp.connectHandlers.use(callback);\n\nexport const injectIntoHead = (key: string, value: Injection): void => {\n\theadInjections.set(key, value);\n};\n\nexport const addScript = (key: string, content: string): void => {\n\tif (!content.trim()) {\n\t\tinjectIntoHead(`${key}.js`, '');\n\t\treturn;\n\t}\n\tconst currentHash = crypto.createHash('sha1').update(content).digest('hex');\n\tinjectIntoHead(`${key}.js`, {\n\t\ttype: 'JS',\n\t\ttag: `<script id=\"${key}\" type=\"text/javascript\" src=\"${`${getURL(key)}.js?${currentHash}`}\"></script>`,\n\t\tcontent,\n\t});\n};\n\nexport const addStyle = (key: string, content: string): void => {\n\tif (!content.trim()) {\n\t\tinjectIntoHead(`${key}.css`, '');\n\t\treturn;\n\t}\n\tconst currentHash = crypto.createHash('sha1').update(content).digest('hex');\n\tinjectIntoHead(`${key}.css`, {\n\t\ttype: 'CSS',\n\t\ttag: `<link id=\"${key}\" rel=\"stylesheet\" type=\"text/css\" href=\"${`${getURL(key)}.css?${currentHash}`}\">`,\n\t\tcontent,\n\t});\n};\n\nexport const injectIntoBody = (key: string, value: string): void => {\n\tInject.rawBody(key, value);\n};\n\nexport const applyHeadInjections = (injections: Injection[]): ((html: string) => string) => {\n\tif (injections.length === 0) {\n\t\treturn (html: string): string => html;\n\t}\n\n\tconst replacementHtml = `${injections\n\t\t.map((i) => {\n\t\t\tif (typeof i === 'string') {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn i.content.trim().length > 0 ? i.tag : '';\n\t\t})\n\t\t.join('\\n')\n\t\t.replace(/\\$/g, '$$$$')}\\n</head>`;\n\n\treturn (html: string): string => html.replace('</head>', replacementHtml);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/ui-master/server/inject.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-master/server/inject.ts"}},"code":"module.export({\n  headInjections: () => headInjections,\n  injectIntoHead: () => injectIntoHead,\n  addScript: () => addScript,\n  addStyle: () => addStyle,\n  injectIntoBody: () => injectIntoBody,\n  applyHeadInjections: () => applyHeadInjections\n});\nlet crypto;\nmodule.link(\"crypto\", {\n  default(v) {\n    crypto = v;\n  }\n\n}, 0);\nlet parseRequest;\nmodule.link(\"parseurl\", {\n  default(v) {\n    parseRequest = v;\n  }\n\n}, 1);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 2);\nlet ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict(v) {\n    ReactiveDict = v;\n  }\n\n}, 3);\nlet Inject;\nmodule.link(\"meteor/meteorhacks:inject-initial\", {\n  Inject(v) {\n    Inject = v;\n  }\n\n}, 4);\nlet getURL;\nmodule.link(\"../../utils/server\", {\n  getURL(v) {\n    getURL = v;\n  }\n\n}, 5);\nconst headInjections = new ReactiveDict();\n\nconst callback = (req, res, next) => {\n  if (req.method !== 'GET' && req.method !== 'HEAD' && req.method !== 'OPTIONS') {\n    next();\n    return;\n  }\n\n  try {\n    const rawPath = parseRequest(req);\n    const pathname = (rawPath === null || rawPath === void 0 ? void 0 : rawPath.pathname) && decodeURIComponent(rawPath.pathname);\n\n    if (!pathname) {\n      next();\n      return;\n    }\n\n    const injection = headInjections.get(pathname.replace(/^\\//, ''));\n\n    if (!injection || typeof injection === 'string') {\n      next();\n      return;\n    }\n\n    const serve = contentType => function (content) {\n      let cacheControl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'public, max-age=31536000';\n      res.writeHead(200, {\n        'Content-type': contentType,\n        'cache-control': cacheControl,\n        'Content-Length': content.length\n      });\n      res.write(content);\n      res.end();\n    };\n\n    const serveStaticJS = serve('application/javascript; charset=UTF-8');\n    const serveStaticCSS = serve('text/css; charset=UTF-8');\n\n    if (injection.type === 'JS') {\n      serveStaticJS(injection.content);\n      return;\n    }\n\n    if (injection.type === 'CSS') {\n      serveStaticCSS(injection.content);\n      return;\n    }\n\n    next();\n  } catch (e) {\n    next();\n  }\n};\n\nWebApp.connectHandlers.use(callback);\n\nconst injectIntoHead = (key, value) => {\n  headInjections.set(key, value);\n};\n\nconst addScript = (key, content) => {\n  if (!content.trim()) {\n    injectIntoHead(\"\".concat(key, \".js\"), '');\n    return;\n  }\n\n  const currentHash = crypto.createHash('sha1').update(content).digest('hex');\n  injectIntoHead(\"\".concat(key, \".js\"), {\n    type: 'JS',\n    tag: \"<script id=\\\"\".concat(key, \"\\\" type=\\\"text/javascript\\\" src=\\\"\", \"\".concat(getURL(key), \".js?\").concat(currentHash), \"\\\"></script>\"),\n    content\n  });\n};\n\nconst addStyle = (key, content) => {\n  if (!content.trim()) {\n    injectIntoHead(\"\".concat(key, \".css\"), '');\n    return;\n  }\n\n  const currentHash = crypto.createHash('sha1').update(content).digest('hex');\n  injectIntoHead(\"\".concat(key, \".css\"), {\n    type: 'CSS',\n    tag: \"<link id=\\\"\".concat(key, \"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\", \"\".concat(getURL(key), \".css?\").concat(currentHash), \"\\\">\"),\n    content\n  });\n};\n\nconst injectIntoBody = (key, value) => {\n  Inject.rawBody(key, value);\n};\n\nconst applyHeadInjections = injections => {\n  if (injections.length === 0) {\n    return html => html;\n  }\n\n  const replacementHtml = \"\".concat(injections.map(i => {\n    if (typeof i === 'string') {\n      return i;\n    }\n\n    return i.content.trim().length > 0 ? i.tag : '';\n  }).join('\\n').replace(/\\$/g, '$$$$'), \"\\n</head>\");\n  return html => html.replace('</head>', replacementHtml);\n};","map":{"version":3,"sources":["app/ui-master/server/inject.ts"],"names":[],"mappings":"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","sourcesContent":["import crypto from 'crypto';\n\nimport parseRequest from 'parseurl';\nimport { NextHandleFunction } from 'connect';\nimport { WebApp } from 'meteor/webapp';\nimport { ReactiveDict } from 'meteor/reactive-dict';\nimport { Inject } from 'meteor/meteorhacks:inject-initial';\n\nimport { getURL } from '../../utils/server';\n\ntype Injection =\n\t| string\n\t| {\n\t\t\tcontent: string;\n\t\t\ttype: 'JS' | 'CSS';\n\t\t\ttag: string;\n\t  };\n\nexport const headInjections = new ReactiveDict();\n\nconst callback: NextHandleFunction = (req, res, next) => {\n\tif (req.method !== 'GET' && req.method !== 'HEAD' && req.method !== 'OPTIONS') {\n\t\tnext();\n\t\treturn;\n\t}\n\ttry {\n\t\tconst rawPath = parseRequest(req);\n\t\tconst pathname = rawPath?.pathname && decodeURIComponent(rawPath.pathname);\n\n\t\tif (!pathname) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tconst injection = headInjections.get(pathname.replace(/^\\//, '')) as Injection | undefined;\n\n\t\tif (!injection || typeof injection === 'string') {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tconst serve =\n\t\t\t(contentType: string) =>\n\t\t\t(content: string, cacheControl = 'public, max-age=31536000'): void => {\n\t\t\t\tres.writeHead(200, {\n\t\t\t\t\t'Content-type': contentType,\n\t\t\t\t\t'cache-control': cacheControl,\n\t\t\t\t\t'Content-Length': content.length,\n\t\t\t\t});\n\t\t\t\tres.write(content);\n\t\t\t\tres.end();\n\t\t\t};\n\n\t\tconst serveStaticJS = serve('application/javascript; charset=UTF-8');\n\t\tconst serveStaticCSS = serve('text/css; charset=UTF-8');\n\n\t\tif (injection.type === 'JS') {\n\t\t\tserveStaticJS(injection.content);\n\t\t\treturn;\n\t\t}\n\n\t\tif (injection.type === 'CSS') {\n\t\t\tserveStaticCSS(injection.content);\n\t\t\treturn;\n\t\t}\n\t\tnext();\n\t} catch (e) {\n\t\tnext();\n\t}\n};\n\nWebApp.connectHandlers.use(callback);\n\nexport const injectIntoHead = (key: string, value: Injection): void => {\n\theadInjections.set(key, value);\n};\n\nexport const addScript = (key: string, content: string): void => {\n\tif (!content.trim()) {\n\t\tinjectIntoHead(`${key}.js`, '');\n\t\treturn;\n\t}\n\tconst currentHash = crypto.createHash('sha1').update(content).digest('hex');\n\tinjectIntoHead(`${key}.js`, {\n\t\ttype: 'JS',\n\t\ttag: `<script id=\"${key}\" type=\"text/javascript\" src=\"${`${getURL(key)}.js?${currentHash}`}\"></script>`,\n\t\tcontent,\n\t});\n};\n\nexport const addStyle = (key: string, content: string): void => {\n\tif (!content.trim()) {\n\t\tinjectIntoHead(`${key}.css`, '');\n\t\treturn;\n\t}\n\tconst currentHash = crypto.createHash('sha1').update(content).digest('hex');\n\tinjectIntoHead(`${key}.css`, {\n\t\ttype: 'CSS',\n\t\ttag: `<link id=\"${key}\" rel=\"stylesheet\" type=\"text/css\" href=\"${`${getURL(key)}.css?${currentHash}`}\">`,\n\t\tcontent,\n\t});\n};\n\nexport const injectIntoBody = (key: string, value: string): void => {\n\tInject.rawBody(key, value);\n};\n\nexport const applyHeadInjections = (injections: Injection[]): ((html: string) => string) => {\n\tif (injections.length === 0) {\n\t\treturn (html: string): string => html;\n\t}\n\n\tconst replacementHtml = `${injections\n\t\t.map((i) => {\n\t\t\tif (typeof i === 'string') {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn i.content.trim().length > 0 ? i.tag : '';\n\t\t})\n\t\t.join('\\n')\n\t\t.replace(/\\$/g, '$$$$')}\\n</head>`;\n\n\treturn (html: string): string => html.replace('</head>', replacementHtml);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"e1eea977e5570b35de5e8de0ae6a315c11ecf3ed"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/2fa/server/code/TOTPCheck.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/2fa/server/code/TOTPCheck.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/2fa/server/code/TOTPCheck.ts","inputSourceMap":{"version":3,"file":"app/2fa/server/code/TOTPCheck.ts","sourceRoot":"","sources":["app/2fa/server/code/TOTPCheck.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AAEnC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAGpD,MAAM,OAAO,SAAS;IACL,IAAI,GAAG,MAAM,CAAC;IAEvB,SAAS,CAAC,IAAW;QAC3B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kDAAkD,CAAC,EAAE;YACtE,OAAO,KAAK,CAAC;SACb;QAED,OAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,KAAK,IAAI,CAAC;IAC9C,CAAC;IAEM,MAAM,CAAC,IAAW,EAAE,IAAY;QACtC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1B,OAAO,KAAK,CAAC;SACb;QAED,OAAO,IAAI,CAAC,MAAM,CAAC;YAClB,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM;YACnC,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,IAAI,CAAC,GAAG;YAChB,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY;SAC/C,CAAC,CAAC;IACJ,CAAC;IAEM,kBAAkB;QACxB,gBAAgB;QAChB,OAAO;YACN,aAAa,EAAE,KAAK;SACpB,CAAC;IACH,CAAC;CACD","sourcesContent":["import { TOTP } from '../lib/totp';\nimport { IUser } from '../../../../definition/IUser';\nimport { settings } from '../../../settings/server';\nimport { ICodeCheck, IProcessInvalidCodeResult } from './ICodeCheck';\n\nexport class TOTPCheck implements ICodeCheck {\n\tpublic readonly name = 'totp';\n\n\tpublic isEnabled(user: IUser): boolean {\n\t\tif (!settings.get('Accounts_TwoFactorAuthentication_By_TOTP_Enabled')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn user.services?.totp?.enabled === true;\n\t}\n\n\tpublic verify(user: IUser, code: string): boolean {\n\t\tif (!this.isEnabled(user)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn TOTP.verify({\n\t\t\tsecret: user.services?.totp?.secret,\n\t\t\ttoken: code,\n\t\t\tuserId: user._id,\n\t\t\tbackupTokens: user.services?.totp?.hashedBackup,\n\t\t});\n\t}\n\n\tpublic processInvalidCode(): IProcessInvalidCodeResult {\n\t\t// Nothing to do\n\t\treturn {\n\t\t\tcodeGenerated: false,\n\t\t};\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/2fa/server/code/TOTPCheck.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/2fa/server/code/TOTPCheck.ts"}},"code":"module.export({\n  TOTPCheck: () => TOTPCheck\n});\nlet TOTP;\nmodule.link(\"../lib/totp\", {\n  TOTP(v) {\n    TOTP = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\n\nclass TOTPCheck {\n  constructor() {\n    this.name = 'totp';\n  }\n\n  isEnabled(user) {\n    var _user$services, _user$services$totp;\n\n    if (!settings.get('Accounts_TwoFactorAuthentication_By_TOTP_Enabled')) {\n      return false;\n    }\n\n    return ((_user$services = user.services) === null || _user$services === void 0 ? void 0 : (_user$services$totp = _user$services.totp) === null || _user$services$totp === void 0 ? void 0 : _user$services$totp.enabled) === true;\n  }\n\n  verify(user, code) {\n    var _user$services2, _user$services2$totp, _user$services3, _user$services3$totp;\n\n    if (!this.isEnabled(user)) {\n      return false;\n    }\n\n    return TOTP.verify({\n      secret: (_user$services2 = user.services) === null || _user$services2 === void 0 ? void 0 : (_user$services2$totp = _user$services2.totp) === null || _user$services2$totp === void 0 ? void 0 : _user$services2$totp.secret,\n      token: code,\n      userId: user._id,\n      backupTokens: (_user$services3 = user.services) === null || _user$services3 === void 0 ? void 0 : (_user$services3$totp = _user$services3.totp) === null || _user$services3$totp === void 0 ? void 0 : _user$services3$totp.hashedBackup\n    });\n  }\n\n  processInvalidCode() {\n    // Nothing to do\n    return {\n      codeGenerated: false\n    };\n  }\n\n}","map":{"version":3,"sources":["app/2fa/server/code/TOTPCheck.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAa;AAAE,EAAA,SAAM,EAAA,MAAA;AAAR,CAAb;AAAmC,IAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAK7B,MAAO,SAAP,CAAgB;AAAA;AAAA,SACL,IADK,GACE,MADF;AAAA;;AAGd,EAAA,SAAS,CAAC,IAAD,EAAY;AAAA;;AAC3B,QAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,kDAAb,CAAL,EAAuE;AACtE,aAAO,KAAP;AACA;;AAED,WAAO,mBAAA,IAAI,CAAC,QAAL,yFAAe,IAAf,4EAAqB,OAArB,MAAiC,IAAxC;AACA;;AAEM,EAAA,MAAM,CAAC,IAAD,EAAc,IAAd,EAA0B;AAAA;;AACtC,QAAI,CAAC,KAAK,SAAL,CAAe,IAAf,CAAL,EAA2B;AAC1B,aAAO,KAAP;AACA;;AAED,WAAO,IAAI,CAAC,MAAL,CAAY;AAClB,MAAA,MAAM,qBAAE,IAAI,CAAC,QAAP,4EAAE,gBAAe,IAAjB,yDAAE,qBAAqB,MADX;AAElB,MAAA,KAAK,EAAE,IAFW;AAGlB,MAAA,MAAM,EAAE,IAAI,CAAC,GAHK;AAIlB,MAAA,YAAY,qBAAE,IAAI,CAAC,QAAP,4EAAE,gBAAe,IAAjB,yDAAE,qBAAqB;AAJjB,KAAZ,CAAP;AAMA;;AAEM,EAAA,kBAAkB,GAAA;AACxB;AACA,WAAO;AACN,MAAA,aAAa,EAAE;AADT,KAAP;AAGA;;AA7BoB","sourcesContent":["import { TOTP } from '../lib/totp';\nimport { IUser } from '../../../../definition/IUser';\nimport { settings } from '../../../settings/server';\nimport { ICodeCheck, IProcessInvalidCodeResult } from './ICodeCheck';\n\nexport class TOTPCheck implements ICodeCheck {\n\tpublic readonly name = 'totp';\n\n\tpublic isEnabled(user: IUser): boolean {\n\t\tif (!settings.get('Accounts_TwoFactorAuthentication_By_TOTP_Enabled')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn user.services?.totp?.enabled === true;\n\t}\n\n\tpublic verify(user: IUser, code: string): boolean {\n\t\tif (!this.isEnabled(user)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn TOTP.verify({\n\t\t\tsecret: user.services?.totp?.secret,\n\t\t\ttoken: code,\n\t\t\tuserId: user._id,\n\t\t\tbackupTokens: user.services?.totp?.hashedBackup,\n\t\t});\n\t}\n\n\tpublic processInvalidCode(): IProcessInvalidCodeResult {\n\t\t// Nothing to do\n\t\treturn {\n\t\t\tcodeGenerated: false,\n\t\t};\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"a7dfc39442adccd30a4ba2cfd37e913e7e5ee764"}

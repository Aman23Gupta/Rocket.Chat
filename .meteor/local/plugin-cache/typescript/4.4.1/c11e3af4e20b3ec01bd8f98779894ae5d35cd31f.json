{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authentication/server/lib/logLoginAttempts.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/authentication/server/lib/logLoginAttempts.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authentication/server/lib/logLoginAttempts.ts","inputSourceMap":{"version":3,"file":"app/authentication/server/lib/logLoginAttempts.ts","sourceRoot":"","sources":["app/authentication/server/lib/logLoginAttempts.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AAEpE,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,KAAoB,EAAQ,EAAE;IACpE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAE;QACxC,OAAO;KACP;IAED,IAAI,IAAI,GAAG,SAAS,CAAC;IACrB,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAE;QACpF,IAAI,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC;KAChD;IACD,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;IAC7B,IAAI,EAAE,aAAa,EAAE,GAAG,UAAU,CAAC;IACnC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAE;QACzC,aAAa,GAAG,GAAG,CAAC;KACpB;IACD,IAAI,YAAY,GAAG,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IACvF,IAAI,MAAM,GAAG,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IAC3E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAE;QAC/C,YAAY,GAAG,GAAG,CAAC;QACnB,MAAM,GAAG,GAAG,CAAC;KACb;IACD,IAAI,SAAS,GAAG,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAC/E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;QAC1C,SAAS,GAAG,GAAG,CAAC;KAChB;IACD,YAAY,CAAC,IAAI,CAChB,oCAAoC,IAAI,mBAAmB,aAAa,kBAAkB,YAAY,aAAa,MAAM,eAAe,SAAS,GAAG,CACpJ,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { ILoginAttempt } from '../ILoginAttempt';\nimport { settings } from '../../../settings/server';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\nexport const logFailedLoginAttempts = (login: ILoginAttempt): void => {\n\tif (!settings.get('Login_Logs_Enabled')) {\n\t\treturn;\n\t}\n\n\tlet user = 'unknown';\n\tif (login.methodArguments[0]?.user?.username && settings.get('Login_Logs_Username')) {\n\t\tuser = login.methodArguments[0]?.user?.username;\n\t}\n\tconst { connection } = login;\n\tlet { clientAddress } = connection;\n\tif (!settings.get('Login_Logs_ClientIp')) {\n\t\tclientAddress = '-';\n\t}\n\tlet forwardedFor = connection.httpHeaders && connection.httpHeaders['x-forwarded-for'];\n\tlet realIp = connection.httpHeaders && connection.httpHeaders['x-real-ip'];\n\tif (!settings.get('Login_Logs_ForwardedForIp')) {\n\t\tforwardedFor = '-';\n\t\trealIp = '-';\n\t}\n\tlet userAgent = connection.httpHeaders && connection.httpHeaders['user-agent'];\n\tif (!settings.get('Login_Logs_UserAgent')) {\n\t\tuserAgent = '-';\n\t}\n\tSystemLogger.info(\n\t\t`Failed login detected - Username[${user}] ClientAddress[${clientAddress}] ForwardedFor[${forwardedFor}] XRealIp[${realIp}] UserAgent[${userAgent}]`,\n\t);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authentication/server/lib/logLoginAttempts.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authentication/server/lib/logLoginAttempts.ts"}},"code":"module.export({\n  logFailedLoginAttempts: () => logFailedLoginAttempts\n});\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 1);\n\nconst logFailedLoginAttempts = login => {\n  var _login$methodArgument, _login$methodArgument2;\n\n  if (!settings.get('Login_Logs_Enabled')) {\n    return;\n  }\n\n  let user = 'unknown';\n\n  if ((_login$methodArgument = login.methodArguments[0]) !== null && _login$methodArgument !== void 0 && (_login$methodArgument2 = _login$methodArgument.user) !== null && _login$methodArgument2 !== void 0 && _login$methodArgument2.username && settings.get('Login_Logs_Username')) {\n    var _login$methodArgument3, _login$methodArgument4;\n\n    user = (_login$methodArgument3 = login.methodArguments[0]) === null || _login$methodArgument3 === void 0 ? void 0 : (_login$methodArgument4 = _login$methodArgument3.user) === null || _login$methodArgument4 === void 0 ? void 0 : _login$methodArgument4.username;\n  }\n\n  const {\n    connection\n  } = login;\n  let {\n    clientAddress\n  } = connection;\n\n  if (!settings.get('Login_Logs_ClientIp')) {\n    clientAddress = '-';\n  }\n\n  let forwardedFor = connection.httpHeaders && connection.httpHeaders['x-forwarded-for'];\n  let realIp = connection.httpHeaders && connection.httpHeaders['x-real-ip'];\n\n  if (!settings.get('Login_Logs_ForwardedForIp')) {\n    forwardedFor = '-';\n    realIp = '-';\n  }\n\n  let userAgent = connection.httpHeaders && connection.httpHeaders['user-agent'];\n\n  if (!settings.get('Login_Logs_UserAgent')) {\n    userAgent = '-';\n  }\n\n  SystemLogger.info(\"Failed login detected - Username[\".concat(user, \"] ClientAddress[\").concat(clientAddress, \"] ForwardedFor[\").concat(forwardedFor, \"] XRealIp[\").concat(realIp, \"] UserAgent[\").concat(userAgent, \"]\"));\n};","map":{"version":3,"sources":["app/authentication/server/lib/logLoginAttempts.ts"],"names":[],"mappings":"AACA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,sBAAgB,EAAA,MAAA;AAAhB,CAAT;AAAoD,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAG7C,MAAM,sBAAsB,GAAI,KAAD,IAA+B;AAAA;;AACpE,MAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,oBAAb,CAAL,EAAyC;AACxC;AACA;;AAED,MAAI,IAAI,GAAG,SAAX;;AACA,MAAI,yBAAA,KAAK,CAAC,eAAN,CAAsB,CAAtB,mGAA0B,IAA1B,0EAAgC,QAAhC,IAA4C,QAAQ,CAAC,GAAT,CAAa,qBAAb,CAAhD,EAAqF;AAAA;;AACpF,IAAA,IAAI,6BAAG,KAAK,CAAC,eAAN,CAAsB,CAAtB,CAAH,qFAAG,uBAA0B,IAA7B,2DAAG,uBAAgC,QAAvC;AACA;;AACD,QAAM;AAAE,IAAA;AAAF,MAAiB,KAAvB;AACA,MAAI;AAAE,IAAA;AAAF,MAAoB,UAAxB;;AACA,MAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,qBAAb,CAAL,EAA0C;AACzC,IAAA,aAAa,GAAG,GAAhB;AACA;;AACD,MAAI,YAAY,GAAG,UAAU,CAAC,WAAX,IAA0B,UAAU,CAAC,WAAX,CAAuB,iBAAvB,CAA7C;AACA,MAAI,MAAM,GAAG,UAAU,CAAC,WAAX,IAA0B,UAAU,CAAC,WAAX,CAAuB,WAAvB,CAAvC;;AACA,MAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,2BAAb,CAAL,EAAgD;AAC/C,IAAA,YAAY,GAAG,GAAf;AACA,IAAA,MAAM,GAAG,GAAT;AACA;;AACD,MAAI,SAAS,GAAG,UAAU,CAAC,WAAX,IAA0B,UAAU,CAAC,WAAX,CAAuB,YAAvB,CAA1C;;AACA,MAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,sBAAb,CAAL,EAA2C;AAC1C,IAAA,SAAS,GAAG,GAAZ;AACA;;AACD,EAAA,YAAY,CAAC,IAAb,4CACqC,IADrC,6BAC4D,aAD5D,4BAC2F,YAD3F,uBACoH,MADpH,yBACyI,SADzI;AAGA,CA3BM","sourcesContent":["import { ILoginAttempt } from '../ILoginAttempt';\nimport { settings } from '../../../settings/server';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\nexport const logFailedLoginAttempts = (login: ILoginAttempt): void => {\n\tif (!settings.get('Login_Logs_Enabled')) {\n\t\treturn;\n\t}\n\n\tlet user = 'unknown';\n\tif (login.methodArguments[0]?.user?.username && settings.get('Login_Logs_Username')) {\n\t\tuser = login.methodArguments[0]?.user?.username;\n\t}\n\tconst { connection } = login;\n\tlet { clientAddress } = connection;\n\tif (!settings.get('Login_Logs_ClientIp')) {\n\t\tclientAddress = '-';\n\t}\n\tlet forwardedFor = connection.httpHeaders && connection.httpHeaders['x-forwarded-for'];\n\tlet realIp = connection.httpHeaders && connection.httpHeaders['x-real-ip'];\n\tif (!settings.get('Login_Logs_ForwardedForIp')) {\n\t\tforwardedFor = '-';\n\t\trealIp = '-';\n\t}\n\tlet userAgent = connection.httpHeaders && connection.httpHeaders['user-agent'];\n\tif (!settings.get('Login_Logs_UserAgent')) {\n\t\tuserAgent = '-';\n\t}\n\tSystemLogger.info(\n\t\t`Failed login detected - Username[${user}] ClientAddress[${clientAddress}] ForwardedFor[${forwardedFor}] XRealIp[${realIp}] UserAgent[${userAgent}]`,\n\t);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"c11e3af4e20b3ec01bd8f98779894ae5d35cd31f"}

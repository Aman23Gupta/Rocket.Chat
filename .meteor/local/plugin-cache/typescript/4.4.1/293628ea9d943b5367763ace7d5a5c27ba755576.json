{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/Settings.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Settings.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/Settings.ts","sourceRoot":"","sources":["app/models/server/raw/Settings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Cursor, FilterQuery, UpdateQuery, WriteOpResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ISetting, ISettingColor, ISettingSelectOption } from '../../../../definition/ISetting';\n\nexport class SettingsRaw extends BaseRaw<ISetting> {\n\tasync getValueById(_id: string): Promise<ISetting['value'] | undefined> {\n\t\tconst setting = await this.findOne<Pick<ISetting, 'value'>>({ _id }, { projection: { value: 1 } });\n\n\t\treturn setting?.value;\n\t}\n\n\tfindNotHidden({ updatedAfter }: { updatedAfter?: Date } = {}): Cursor<ISetting> {\n\t\tconst query: FilterQuery<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\tif (updatedAfter) {\n\t\t\tquery._updatedAt = { $gt: updatedAfter };\n\t\t}\n\n\t\treturn this.find(query);\n\t}\n\n\tfindOneNotHiddenById(_id: string): Promise<ISetting | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n\n\tfindByIds(_id: string[] | string = []): Cursor<ISetting> {\n\t\tif (typeof _id === 'string') {\n\t\t\t_id = [_id];\n\t\t}\n\n\t\tconst query = {\n\t\t\t_id: {\n\t\t\t\t$in: _id,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query);\n\t}\n\n\tupdateValueById<T extends ISetting['value'] = ISetting['value']>(_id: string, value: T): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateOptionsById<T extends ISetting = ISetting>(_id: ISetting['_id'], options: UpdateQuery<T>['$set']): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = { $set: options };\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateValueNotHiddenById<T extends ISetting['value'] = ISetting['value']>(_id: ISetting['_id'], value: T): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t\tblocked: { $ne: true },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateValueAndEditorById<T extends ISetting['value'] = ISetting['value']>(\n\t\t_id: ISetting['_id'],\n\t\tvalue: T,\n\t\teditor: ISettingColor['editor'],\n\t): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t\teditor,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tfindNotHiddenPublic<T extends ISetting = ISetting>(\n\t\tids: ISetting['_id'][] = [],\n\t): Cursor<\n\t\tT extends ISettingColor\n\t\t\t? Pick<T, '_id' | 'value' | 'editor' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t\t\t: Pick<T, '_id' | 'value' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t> {\n\t\tconst filter: FilterQuery<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t};\n\n\t\tif (ids.length > 0) {\n\t\t\tfilter._id = { $in: ids };\n\t\t}\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindSetupWizardSettings(): Cursor<ISetting> {\n\t\treturn this.find({ wizard: { $exists: true } });\n\t}\n\n\taddOptionValueById(_id: ISetting['_id'], option: ISettingSelectOption): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst { key, i18nLabel } = option;\n\t\tconst update = {\n\t\t\t$addToSet: {\n\t\t\t\tvalues: {\n\t\t\t\t\tkey,\n\t\t\t\t\ti18nLabel,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tfindNotHiddenPublicUpdatedAfter(updatedAt: Date): Cursor<ISetting> {\n\t\tconst filter = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t\t_updatedAt: {\n\t\t\t\t$gt: updatedAt,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/Settings.ts"}},"code":"module.export({\n  SettingsRaw: () => SettingsRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass SettingsRaw extends BaseRaw {\n  getValueById(_id) {\n    return Promise.asyncApply(() => {\n      const setting = Promise.await(this.findOne({\n        _id\n      }, {\n        projection: {\n          value: 1\n        }\n      }));\n      return setting === null || setting === void 0 ? void 0 : setting.value;\n    });\n  }\n\n  findNotHidden() {\n    let {\n      updatedAfter\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const query = {\n      hidden: {\n        $ne: true\n      }\n    };\n\n    if (updatedAfter) {\n      query._updatedAt = {\n        $gt: updatedAfter\n      };\n    }\n\n    return this.find(query);\n  }\n\n  findOneNotHiddenById(_id) {\n    const query = {\n      _id,\n      hidden: {\n        $ne: true\n      }\n    };\n    return this.findOne(query);\n  }\n\n  findByIds() {\n    let _id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    if (typeof _id === 'string') {\n      _id = [_id];\n    }\n\n    const query = {\n      _id: {\n        $in: _id\n      }\n    };\n    return this.find(query);\n  }\n\n  updateValueById(_id, value) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      value: {\n        $ne: value\n      },\n      _id\n    };\n    const update = {\n      $set: {\n        value\n      }\n    };\n    return this.update(query, update);\n  }\n\n  updateOptionsById(_id, options) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      _id\n    };\n    const update = {\n      $set: options\n    };\n    return this.update(query, update);\n  }\n\n  updateValueNotHiddenById(_id, value) {\n    const query = {\n      _id,\n      hidden: {\n        $ne: true\n      },\n      blocked: {\n        $ne: true\n      }\n    };\n    const update = {\n      $set: {\n        value\n      }\n    };\n    return this.update(query, update);\n  }\n\n  updateValueAndEditorById(_id, value, editor) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      value: {\n        $ne: value\n      },\n      _id\n    };\n    const update = {\n      $set: {\n        value,\n        editor\n      }\n    };\n    return this.update(query, update);\n  }\n\n  findNotHiddenPublic() {\n    let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    const filter = {\n      hidden: {\n        $ne: true\n      },\n      public: true\n    };\n\n    if (ids.length > 0) {\n      filter._id = {\n        $in: ids\n      };\n    }\n\n    return this.find(filter, {\n      projection: {\n        _id: 1,\n        value: 1,\n        editor: 1,\n        enterprise: 1,\n        invalidValue: 1,\n        modules: 1,\n        requiredOnWizard: 1\n      }\n    });\n  }\n\n  findSetupWizardSettings() {\n    return this.find({\n      wizard: {\n        $exists: true\n      }\n    });\n  }\n\n  addOptionValueById(_id, option) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      _id\n    };\n    const {\n      key,\n      i18nLabel\n    } = option;\n    const update = {\n      $addToSet: {\n        values: {\n          key,\n          i18nLabel\n        }\n      }\n    };\n    return this.update(query, update);\n  }\n\n  findNotHiddenPublicUpdatedAfter(updatedAt) {\n    const filter = {\n      hidden: {\n        $ne: true\n      },\n      public: true,\n      _updatedAt: {\n        $gt: updatedAt\n      }\n    };\n    return this.find(filter, {\n      projection: {\n        _id: 1,\n        value: 1,\n        editor: 1,\n        enterprise: 1,\n        invalidValue: 1,\n        modules: 1,\n        requiredOnWizard: 1\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/Settings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Cursor, FilterQuery, UpdateQuery, WriteOpResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ISetting, ISettingColor, ISettingSelectOption } from '../../../../definition/ISetting';\n\nexport class SettingsRaw extends BaseRaw<ISetting> {\n\tasync getValueById(_id: string): Promise<ISetting['value'] | undefined> {\n\t\tconst setting = await this.findOne<Pick<ISetting, 'value'>>({ _id }, { projection: { value: 1 } });\n\n\t\treturn setting?.value;\n\t}\n\n\tfindNotHidden({ updatedAfter }: { updatedAfter?: Date } = {}): Cursor<ISetting> {\n\t\tconst query: FilterQuery<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\tif (updatedAfter) {\n\t\t\tquery._updatedAt = { $gt: updatedAfter };\n\t\t}\n\n\t\treturn this.find(query);\n\t}\n\n\tfindOneNotHiddenById(_id: string): Promise<ISetting | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n\n\tfindByIds(_id: string[] | string = []): Cursor<ISetting> {\n\t\tif (typeof _id === 'string') {\n\t\t\t_id = [_id];\n\t\t}\n\n\t\tconst query = {\n\t\t\t_id: {\n\t\t\t\t$in: _id,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query);\n\t}\n\n\tupdateValueById<T extends ISetting['value'] = ISetting['value']>(_id: string, value: T): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateOptionsById<T extends ISetting = ISetting>(_id: ISetting['_id'], options: UpdateQuery<T>['$set']): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = { $set: options };\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateValueNotHiddenById<T extends ISetting['value'] = ISetting['value']>(_id: ISetting['_id'], value: T): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t\tblocked: { $ne: true },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateValueAndEditorById<T extends ISetting['value'] = ISetting['value']>(\n\t\t_id: ISetting['_id'],\n\t\tvalue: T,\n\t\teditor: ISettingColor['editor'],\n\t): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t\teditor,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tfindNotHiddenPublic<T extends ISetting = ISetting>(\n\t\tids: ISetting['_id'][] = [],\n\t): Cursor<\n\t\tT extends ISettingColor\n\t\t\t? Pick<T, '_id' | 'value' | 'editor' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t\t\t: Pick<T, '_id' | 'value' | 'enterprise' | 'invalidValue' | 'modules' | 'requiredOnWizard'>\n\t> {\n\t\tconst filter: FilterQuery<ISetting> = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t};\n\n\t\tif (ids.length > 0) {\n\t\t\tfilter._id = { $in: ids };\n\t\t}\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindSetupWizardSettings(): Cursor<ISetting> {\n\t\treturn this.find({ wizard: { $exists: true } });\n\t}\n\n\taddOptionValueById(_id: ISetting['_id'], option: ISettingSelectOption): Promise<WriteOpResult> {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst { key, i18nLabel } = option;\n\t\tconst update = {\n\t\t\t$addToSet: {\n\t\t\t\tvalues: {\n\t\t\t\t\tkey,\n\t\t\t\t\ti18nLabel,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tfindNotHiddenPublicUpdatedAfter(updatedAt: Date): Cursor<ISetting> {\n\t\tconst filter = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t\t_updatedAt: {\n\t\t\t\t$gt: updatedAt,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(filter, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"293628ea9d943b5367763ace7d5a5c27ba755576"}

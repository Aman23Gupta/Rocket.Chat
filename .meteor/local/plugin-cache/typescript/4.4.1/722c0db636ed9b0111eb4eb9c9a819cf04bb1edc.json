{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/Users.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/models/server/models/Users.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/Users.ts","inputSourceMap":{"version":3,"file":"ee/app/models/server/models/Users.ts","sourceRoot":"","sources":["ee/app/models/server/models/Users.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AAClE,OAAO,EAAE,KAAK,EAAE,MAAM,+CAA+C,CAAC;AAWtE,0EAA0E;AAC1E,MAAM,oBAAoB,GAAG,UAAU,CAAM,EAAE,YAAoB,EAAE,YAAoC;IACxG,mBAAmB;IACnB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EAAS,CAAC;IAE9C,yFAAyF;IACzF,MAAM,gBAAgB,GAAG,YAAY;QACpC,CAAC,CAAC;YACA;gBACC,OAAO,EAAE;oBACR,IAAI,EAAE,uCAAuC;oBAC7C,GAAG,EAAE,EAAE,YAAY,EAAE,eAAe,EAAE,OAAO,EAAE,UAAU,EAAE;oBAC3D,QAAQ,EAAE;wBACT;4BACC,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC,EAAE,EAAE;yBACjD;wBACD;4BACC,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,gBAAgB,EAAE,YAAY,CAAC,EAAE,EAAE;yBAC5D;qBACD;oBACD,EAAE,EAAE,YAAY;iBAChB;aACD;YACD;gBACC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;aACpC;SACA;QACH,CAAC,CAAC,EAAE,CAAC;IAEN,OAAO,GAAG;SACR,SAAS,CAAC;QACV;YACC,MAAM,EAAE;gBACP,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE;gBACzC,cAAc,EAAE,WAAW;gBAC3B,KAAK,EAAE,gBAAgB;aACvB;SACD;QACD,GAAG,gBAAgB;QACnB;YACC,OAAO,EAAE;gBACR,IAAI,EAAE,yBAAyB;gBAC/B,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,OAAO;gBACrB,EAAE,EAAE,MAAM;aACV;SACD;QACD;YACC,QAAQ,EAAE;gBACT,SAAS,EAAE,MAAM;gBACjB,oCAAoC,EAAE,CAAC;gBACvC,UAAU,EAAE,CAAC;gBACb,gBAAgB,EAAE,CAAC;gBACnB,iBAAiB,EAAE,CAAC;gBACpB,iBAAiB,EAAE;oBAClB,KAAK,EAAE;wBACN,OAAO,EAAE;4BACR,KAAK,EAAE,OAAO;4BACd,EAAE,EAAE,KAAK;4BACT,IAAI,EAAE;gCACL,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC;6BACjG;yBACD;qBACD;iBACD;aACD;SACD;QACD,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACvC;YACC,KAAK,EAAE;gBACN,iBAAiB,EAAE,CAAC;gBACpB,gBAAgB,EAAE,CAAC;gBACnB,iBAAiB,EAAE,CAAC;gBACpB,UAAU,EAAE,CAAC;aACb;SACD;KACD,CAAC;SACD,OAAO,EAAE,CAAC;AACb,CAAC,CAAC;AAEF,uBAAuB,CAAC,qBAAqB,EAAE,KAAK,EAAE;IACrD,oBAAoB;CACpB,CAAC,CAAC;AAEH,eAAe,KAAK,CAAC","sourcesContent":["import { overwriteClassOnLicense } from '../../../license/server';\nimport { Users } from '../../../../../app/models/server/models/Users';\n\ntype AgentMetadata = {\n\t'agentId'?: string;\n\t'username'?: string;\n\t'lastAssignTime'?: Date;\n\t'lastRoutingTime'?: Date;\n\t'queueInfo.chats'?: number;\n\t[x: string]: any;\n};\n\n// get next agent ignoring the ones reached the max amount of active chats\nconst getUnavailableAgents = function (_: any, departmentId: string, customFilter: { [k: string]: any }[]): Promise<AgentMetadata[]> {\n\t// @ts-expect-error\n\tconst col = this.model.rawCollection() as any;\n\n\t// if department is provided, remove the agents that are not from the selected department\n\tconst departmentFilter = departmentId\n\t\t? [\n\t\t\t\t{\n\t\t\t\t\t$lookup: {\n\t\t\t\t\t\tfrom: 'rocketchat_livechat_department_agents',\n\t\t\t\t\t\tlet: { departmentId: '$departmentId', agentId: '$agentId' },\n\t\t\t\t\t\tpipeline: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$match: { $expr: { $eq: ['$$agentId', '$_id'] } },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$match: { $expr: { $eq: ['$$departmentId', departmentId] } },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tas: 'department',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$match: { department: { $size: 1 } },\n\t\t\t\t},\n\t\t  ]\n\t\t: [];\n\n\treturn col\n\t\t.aggregate([\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tstatus: { $exists: true, $ne: 'offline' },\n\t\t\t\t\tstatusLivechat: 'available',\n\t\t\t\t\troles: 'livechat-agent',\n\t\t\t\t},\n\t\t\t},\n\t\t\t...departmentFilter,\n\t\t\t{\n\t\t\t\t$lookup: {\n\t\t\t\t\tfrom: 'rocketchat_subscription',\n\t\t\t\t\tlocalField: '_id',\n\t\t\t\t\tforeignField: 'u._id',\n\t\t\t\t\tas: 'subs',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t'agentId': '$_id',\n\t\t\t\t\t'livechat.maxNumberSimultaneousChat': 1,\n\t\t\t\t\t'username': 1,\n\t\t\t\t\t'lastAssignTime': 1,\n\t\t\t\t\t'lastRoutingTime': 1,\n\t\t\t\t\t'queueInfo.chats': {\n\t\t\t\t\t\t$size: {\n\t\t\t\t\t\t\t$filter: {\n\t\t\t\t\t\t\t\tinput: '$subs',\n\t\t\t\t\t\t\t\tas: 'sub',\n\t\t\t\t\t\t\t\tcond: {\n\t\t\t\t\t\t\t\t\t$and: [{ $eq: ['$$sub.t', 'l'] }, { $eq: ['$$sub.open', true] }, { $ne: ['$$sub.onHold', true] }],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t...(customFilter ? [customFilter] : []),\n\t\t\t{\n\t\t\t\t$sort: {\n\t\t\t\t\t'queueInfo.chats': 1,\n\t\t\t\t\t'lastAssignTime': 1,\n\t\t\t\t\t'lastRoutingTime': 1,\n\t\t\t\t\t'username': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t])\n\t\t.toArray();\n};\n\noverwriteClassOnLicense('livechat-enterprise', Users, {\n\tgetUnavailableAgents,\n});\n\nexport default Users;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/Users.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/models/server/models/Users.ts"}},"code":"let overwriteClassOnLicense;\nmodule.link(\"../../../license/server\", {\n  overwriteClassOnLicense(v) {\n    overwriteClassOnLicense = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../../../app/models/server/models/Users\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\n\n// get next agent ignoring the ones reached the max amount of active chats\nconst getUnavailableAgents = function (_, departmentId, customFilter) {\n  // @ts-expect-error\n  const col = this.model.rawCollection(); // if department is provided, remove the agents that are not from the selected department\n\n  const departmentFilter = departmentId ? [{\n    $lookup: {\n      from: 'rocketchat_livechat_department_agents',\n      let: {\n        departmentId: '$departmentId',\n        agentId: '$agentId'\n      },\n      pipeline: [{\n        $match: {\n          $expr: {\n            $eq: ['$$agentId', '$_id']\n          }\n        }\n      }, {\n        $match: {\n          $expr: {\n            $eq: ['$$departmentId', departmentId]\n          }\n        }\n      }],\n      as: 'department'\n    }\n  }, {\n    $match: {\n      department: {\n        $size: 1\n      }\n    }\n  }] : [];\n  return col.aggregate([{\n    $match: {\n      status: {\n        $exists: true,\n        $ne: 'offline'\n      },\n      statusLivechat: 'available',\n      roles: 'livechat-agent'\n    }\n  }, ...departmentFilter, {\n    $lookup: {\n      from: 'rocketchat_subscription',\n      localField: '_id',\n      foreignField: 'u._id',\n      as: 'subs'\n    }\n  }, {\n    $project: {\n      'agentId': '$_id',\n      'livechat.maxNumberSimultaneousChat': 1,\n      'username': 1,\n      'lastAssignTime': 1,\n      'lastRoutingTime': 1,\n      'queueInfo.chats': {\n        $size: {\n          $filter: {\n            input: '$subs',\n            as: 'sub',\n            cond: {\n              $and: [{\n                $eq: ['$$sub.t', 'l']\n              }, {\n                $eq: ['$$sub.open', true]\n              }, {\n                $ne: ['$$sub.onHold', true]\n              }]\n            }\n          }\n        }\n      }\n    }\n  }, ...(customFilter ? [customFilter] : []), {\n    $sort: {\n      'queueInfo.chats': 1,\n      'lastAssignTime': 1,\n      'lastRoutingTime': 1,\n      'username': 1\n    }\n  }]).toArray();\n};\n\noverwriteClassOnLicense('livechat-enterprise', Users, {\n  getUnavailableAgents\n});\nmodule.exportDefault(Users);","map":{"version":3,"sources":["ee/app/models/server/models/Users.ts"],"names":[],"mappings":"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","sourcesContent":["import { overwriteClassOnLicense } from '../../../license/server';\nimport { Users } from '../../../../../app/models/server/models/Users';\n\ntype AgentMetadata = {\n\t'agentId'?: string;\n\t'username'?: string;\n\t'lastAssignTime'?: Date;\n\t'lastRoutingTime'?: Date;\n\t'queueInfo.chats'?: number;\n\t[x: string]: any;\n};\n\n// get next agent ignoring the ones reached the max amount of active chats\nconst getUnavailableAgents = function (_: any, departmentId: string, customFilter: { [k: string]: any }[]): Promise<AgentMetadata[]> {\n\t// @ts-expect-error\n\tconst col = this.model.rawCollection() as any;\n\n\t// if department is provided, remove the agents that are not from the selected department\n\tconst departmentFilter = departmentId\n\t\t? [\n\t\t\t\t{\n\t\t\t\t\t$lookup: {\n\t\t\t\t\t\tfrom: 'rocketchat_livechat_department_agents',\n\t\t\t\t\t\tlet: { departmentId: '$departmentId', agentId: '$agentId' },\n\t\t\t\t\t\tpipeline: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$match: { $expr: { $eq: ['$$agentId', '$_id'] } },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$match: { $expr: { $eq: ['$$departmentId', departmentId] } },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tas: 'department',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$match: { department: { $size: 1 } },\n\t\t\t\t},\n\t\t  ]\n\t\t: [];\n\n\treturn col\n\t\t.aggregate([\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tstatus: { $exists: true, $ne: 'offline' },\n\t\t\t\t\tstatusLivechat: 'available',\n\t\t\t\t\troles: 'livechat-agent',\n\t\t\t\t},\n\t\t\t},\n\t\t\t...departmentFilter,\n\t\t\t{\n\t\t\t\t$lookup: {\n\t\t\t\t\tfrom: 'rocketchat_subscription',\n\t\t\t\t\tlocalField: '_id',\n\t\t\t\t\tforeignField: 'u._id',\n\t\t\t\t\tas: 'subs',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t'agentId': '$_id',\n\t\t\t\t\t'livechat.maxNumberSimultaneousChat': 1,\n\t\t\t\t\t'username': 1,\n\t\t\t\t\t'lastAssignTime': 1,\n\t\t\t\t\t'lastRoutingTime': 1,\n\t\t\t\t\t'queueInfo.chats': {\n\t\t\t\t\t\t$size: {\n\t\t\t\t\t\t\t$filter: {\n\t\t\t\t\t\t\t\tinput: '$subs',\n\t\t\t\t\t\t\t\tas: 'sub',\n\t\t\t\t\t\t\t\tcond: {\n\t\t\t\t\t\t\t\t\t$and: [{ $eq: ['$$sub.t', 'l'] }, { $eq: ['$$sub.open', true] }, { $ne: ['$$sub.onHold', true] }],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t...(customFilter ? [customFilter] : []),\n\t\t\t{\n\t\t\t\t$sort: {\n\t\t\t\t\t'queueInfo.chats': 1,\n\t\t\t\t\t'lastAssignTime': 1,\n\t\t\t\t\t'lastRoutingTime': 1,\n\t\t\t\t\t'username': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t])\n\t\t.toArray();\n};\n\noverwriteClassOnLicense('livechat-enterprise', Users, {\n\tgetUnavailableAgents,\n});\n\nexport default Users;\n"],"sourceRoot":""},"sourceType":"module","hash":"722c0db636ed9b0111eb4eb9c9a819cf04bb1edc"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/canned-responses/server/hooks/onMessageSentParsePlaceholder.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/canned-responses/server/hooks/onMessageSentParsePlaceholder.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/canned-responses/server/hooks/onMessageSentParsePlaceholder.ts","inputSourceMap":{"version":3,"file":"ee/app/canned-responses/server/hooks/onMessageSentParsePlaceholder.ts","sourceRoot":"","sources":["ee/app/canned-responses/server/hooks/onMessageSentParsePlaceholder.ts"],"names":[],"mappings":"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","sourcesContent":["import get from 'lodash.get';\n\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { Users, LivechatVisitors, Rooms } from '../../../../../app/models/server';\nimport { IMessage } from '../../../../../definition/IMessage';\nimport { IOmnichannelRoom, isOmnichannelRoom } from '../../../../../definition/IRoom';\n\nconst placeholderFields = {\n\t'contact.name': {\n\t\tfrom: 'visitor',\n\t\tdataKey: 'name',\n\t},\n\t'contact.email': {\n\t\tfrom: 'visitor',\n\t\tdataKey: 'visitorEmails[0].address',\n\t},\n\t'contact.phone': {\n\t\tfrom: 'visitor',\n\t\tdataKey: 'phone[0].phoneNumber',\n\t},\n\t'agent.name': {\n\t\tfrom: 'agent',\n\t\tdataKey: 'name',\n\t},\n\t'agent.email': {\n\t\tfrom: 'agent',\n\t\tdataKey: 'emails[0].address',\n\t},\n};\n\nconst replaceAll = (text: string, old: string, replace: string): string => text.replace(new RegExp(old, 'g'), replace);\n\nconst handleBeforeSaveMessage = (message: IMessage, room?: IOmnichannelRoom): IMessage => {\n\tif (!message.msg || message.msg === '') {\n\t\treturn message;\n\t}\n\n\troom = room?._id ? room : Rooms.findOneById(message.rid);\n\tif (!room || !isOmnichannelRoom(room)) {\n\t\treturn message;\n\t}\n\n\tlet messageText = message.msg;\n\tconst agentId = room?.servedBy?._id;\n\tconst visitorId = room?.v?._id;\n\tconst agent = Users.findOneById(agentId, { fields: { name: 1, _id: 1, emails: 1 } }) || {};\n\tconst visitor = LivechatVisitors.findOneById(visitorId) || {};\n\n\tObject.keys(placeholderFields).map((field) => {\n\t\tconst templateKey = `{{${field}}}`;\n\t\tconst placeholderConfig = placeholderFields[field as keyof typeof placeholderFields];\n\t\tconst from = placeholderConfig.from === 'agent' ? agent : visitor;\n\t\tconst data = get(from, placeholderConfig.dataKey, '');\n\t\tmessageText = replaceAll(messageText, templateKey, data);\n\n\t\treturn messageText;\n\t});\n\n\tmessage.msg = messageText;\n\treturn message;\n};\n\nsettings.watch('Canned_Responses_Enable', function (value) {\n\tif (!value) {\n\t\tcallbacks.remove('beforeSaveMessage', 'canned-responses-replace-placeholders');\n\t\treturn;\n\t}\n\n\tcallbacks.add('beforeSaveMessage', handleBeforeSaveMessage, callbacks.priority.MEDIUM, 'canned-responses-replace-placeholders');\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/canned-responses/server/hooks/onMessageSentParsePlaceholder.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/canned-responses/server/hooks/onMessageSentParsePlaceholder.ts"}},"code":"let get;\nmodule.link(\"lodash.get\", {\n  default(v) {\n    get = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\nlet callbacks;\nmodule.link(\"../../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 2);\nlet Users, LivechatVisitors, Rooms;\nmodule.link(\"../../../../../app/models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 3);\nlet isOmnichannelRoom;\nmodule.link(\"../../../../../definition/IRoom\", {\n  isOmnichannelRoom(v) {\n    isOmnichannelRoom = v;\n  }\n\n}, 4);\nconst placeholderFields = {\n  'contact.name': {\n    from: 'visitor',\n    dataKey: 'name'\n  },\n  'contact.email': {\n    from: 'visitor',\n    dataKey: 'visitorEmails[0].address'\n  },\n  'contact.phone': {\n    from: 'visitor',\n    dataKey: 'phone[0].phoneNumber'\n  },\n  'agent.name': {\n    from: 'agent',\n    dataKey: 'name'\n  },\n  'agent.email': {\n    from: 'agent',\n    dataKey: 'emails[0].address'\n  }\n};\n\nconst replaceAll = (text, old, replace) => text.replace(new RegExp(old, 'g'), replace);\n\nconst handleBeforeSaveMessage = (message, room) => {\n  var _room, _room2, _room2$servedBy, _room3, _room3$v;\n\n  if (!message.msg || message.msg === '') {\n    return message;\n  }\n\n  room = (_room = room) !== null && _room !== void 0 && _room._id ? room : Rooms.findOneById(message.rid);\n\n  if (!room || !isOmnichannelRoom(room)) {\n    return message;\n  }\n\n  let messageText = message.msg;\n  const agentId = (_room2 = room) === null || _room2 === void 0 ? void 0 : (_room2$servedBy = _room2.servedBy) === null || _room2$servedBy === void 0 ? void 0 : _room2$servedBy._id;\n  const visitorId = (_room3 = room) === null || _room3 === void 0 ? void 0 : (_room3$v = _room3.v) === null || _room3$v === void 0 ? void 0 : _room3$v._id;\n  const agent = Users.findOneById(agentId, {\n    fields: {\n      name: 1,\n      _id: 1,\n      emails: 1\n    }\n  }) || {};\n  const visitor = LivechatVisitors.findOneById(visitorId) || {};\n  Object.keys(placeholderFields).map(field => {\n    const templateKey = \"{{\".concat(field, \"}}\");\n    const placeholderConfig = placeholderFields[field];\n    const from = placeholderConfig.from === 'agent' ? agent : visitor;\n    const data = get(from, placeholderConfig.dataKey, '');\n    messageText = replaceAll(messageText, templateKey, data);\n    return messageText;\n  });\n  message.msg = messageText;\n  return message;\n};\n\nsettings.watch('Canned_Responses_Enable', function (value) {\n  if (!value) {\n    callbacks.remove('beforeSaveMessage', 'canned-responses-replace-placeholders');\n    return;\n  }\n\n  callbacks.add('beforeSaveMessage', handleBeforeSaveMessage, callbacks.priority.MEDIUM, 'canned-responses-replace-placeholders');\n});","map":{"version":3,"sources":["ee/app/canned-responses/server/hooks/onMessageSentParsePlaceholder.ts"],"names":[],"mappings":"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","sourcesContent":["import get from 'lodash.get';\n\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { Users, LivechatVisitors, Rooms } from '../../../../../app/models/server';\nimport { IMessage } from '../../../../../definition/IMessage';\nimport { IOmnichannelRoom, isOmnichannelRoom } from '../../../../../definition/IRoom';\n\nconst placeholderFields = {\n\t'contact.name': {\n\t\tfrom: 'visitor',\n\t\tdataKey: 'name',\n\t},\n\t'contact.email': {\n\t\tfrom: 'visitor',\n\t\tdataKey: 'visitorEmails[0].address',\n\t},\n\t'contact.phone': {\n\t\tfrom: 'visitor',\n\t\tdataKey: 'phone[0].phoneNumber',\n\t},\n\t'agent.name': {\n\t\tfrom: 'agent',\n\t\tdataKey: 'name',\n\t},\n\t'agent.email': {\n\t\tfrom: 'agent',\n\t\tdataKey: 'emails[0].address',\n\t},\n};\n\nconst replaceAll = (text: string, old: string, replace: string): string => text.replace(new RegExp(old, 'g'), replace);\n\nconst handleBeforeSaveMessage = (message: IMessage, room?: IOmnichannelRoom): IMessage => {\n\tif (!message.msg || message.msg === '') {\n\t\treturn message;\n\t}\n\n\troom = room?._id ? room : Rooms.findOneById(message.rid);\n\tif (!room || !isOmnichannelRoom(room)) {\n\t\treturn message;\n\t}\n\n\tlet messageText = message.msg;\n\tconst agentId = room?.servedBy?._id;\n\tconst visitorId = room?.v?._id;\n\tconst agent = Users.findOneById(agentId, { fields: { name: 1, _id: 1, emails: 1 } }) || {};\n\tconst visitor = LivechatVisitors.findOneById(visitorId) || {};\n\n\tObject.keys(placeholderFields).map((field) => {\n\t\tconst templateKey = `{{${field}}}`;\n\t\tconst placeholderConfig = placeholderFields[field as keyof typeof placeholderFields];\n\t\tconst from = placeholderConfig.from === 'agent' ? agent : visitor;\n\t\tconst data = get(from, placeholderConfig.dataKey, '');\n\t\tmessageText = replaceAll(messageText, templateKey, data);\n\n\t\treturn messageText;\n\t});\n\n\tmessage.msg = messageText;\n\treturn message;\n};\n\nsettings.watch('Canned_Responses_Enable', function (value) {\n\tif (!value) {\n\t\tcallbacks.remove('beforeSaveMessage', 'canned-responses-replace-placeholders');\n\t\treturn;\n\t}\n\n\tcallbacks.add('beforeSaveMessage', handleBeforeSaveMessage, callbacks.priority.MEDIUM, 'canned-responses-replace-placeholders');\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"e9d17ef554670bf9edb17cc5e865f241a06c7f50"}

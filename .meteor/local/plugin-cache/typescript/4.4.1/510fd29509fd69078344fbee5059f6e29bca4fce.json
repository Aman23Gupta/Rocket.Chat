{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/lib/LocalBroker.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/sdk/lib/LocalBroker.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/lib/LocalBroker.ts","inputSourceMap":{"version":3,"file":"server/sdk/lib/LocalBroker.ts","sourceRoot":"","sources":["server/sdk/lib/LocalBroker.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAItC,OAAO,EAAE,iBAAiB,EAAE,MAAM,IAAI,CAAC;AAEvC,OAAO,EAAE,eAAe,EAAE,MAAM,wCAAwC,CAAC;AAEzE,MAAM,OAAO,WAAW;IACf,OAAO,GAAG,IAAI,GAAG,EAAoB,CAAC;IAEtC,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;IAEpC,KAAK,CAAC,IAAI,CAAC,MAAc,EAAE,IAAS;QACnC,MAAM,MAAM,GAAG,MAAM,iBAAiB,CAAC,GAAG,CACzC;YACC,EAAE,EAAE,QAAQ;YACZ,MAAM,EAAE,YAAY;YACpB,SAAS,EAAE,eAAe;YAC1B,MAAM,EAAE,IAAI;SACZ,EACD,GAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAC9C,CAAC;QAEF,OAAO,MAAM,CAAC;IACf,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,MAAc,EAAE,IAAS;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,cAAc,CAAC,QAAsB;QACpC,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;QAErC,QAAQ,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;YAC1C,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,GACZ,QAAQ,CAAC,WAAW,EAAE,IAAI,KAAK,QAAQ;YACtC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC;YACtC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChE,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC7B,IAAI,MAAM,KAAK,aAAa,EAAE;gBAC7B,SAAS;aACT;YAED,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,SAAS,IAAI,MAAM,EAAE,CAAC,CAAC;SAC9C;IACF,CAAC;IAED,aAAa,CAAC,QAAsB;QACnC,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;QAErC,QAAQ,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;YAC1C,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE;gBACrC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,GAAI,IAAsD,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,GACZ,QAAQ,CAAC,WAAW,EAAE,IAAI,KAAK,QAAQ;YACtC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC;YACtC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChE,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC7B,IAAI,MAAM,KAAK,aAAa,EAAE;gBAC7B,SAAS;aACT;YACD,MAAM,CAAC,GAAG,QAAe,CAAC;YAE1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS,IAAI,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9D;IACF,CAAC;IAED,KAAK,CAAC,SAAS,CAAkC,KAAQ,EAAE,GAAG,IAAoC;QACjG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;QAEpC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,KAAK,CAAC,cAAc,CAAkC,KAAQ,EAAE,GAAG,IAAoC;QACtG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,KAAK,CAAC,QAAQ;QACb,OAAO,EAAE,CAAC;IACX,CAAC;CACD","sourcesContent":["import { EventEmitter } from 'events';\n\nimport { IBroker, IBrokerNode } from '../types/IBroker';\nimport { ServiceClass } from '../types/ServiceClass';\nimport { asyncLocalStorage } from '..';\nimport { EventSignatures } from './Events';\nimport { StreamerCentral } from '../../modules/streamer/streamer.module';\n\nexport class LocalBroker implements IBroker {\n\tprivate methods = new Map<string, Function>();\n\n\tprivate events = new EventEmitter();\n\n\tasync call(method: string, data: any): Promise<any> {\n\t\tconst result = await asyncLocalStorage.run(\n\t\t\t{\n\t\t\t\tid: 'ctx.id',\n\t\t\t\tnodeID: 'ctx.nodeID',\n\t\t\t\trequestID: 'ctx.requestID',\n\t\t\t\tbroker: this,\n\t\t\t},\n\t\t\t(): any => this.methods.get(method)?.(...data),\n\t\t);\n\n\t\treturn result;\n\t}\n\n\tasync waitAndCall(method: string, data: any): Promise<any> {\n\t\treturn this.call(method, data);\n\t}\n\n\tdestroyService(instance: ServiceClass): void {\n\t\tconst namespace = instance.getName();\n\n\t\tinstance.getEvents().forEach((eventName) => {\n\t\t\tthis.events.removeListener(eventName, instance.emit);\n\t\t});\n\n\t\tconst methods =\n\t\t\tinstance.constructor?.name === 'Object'\n\t\t\t\t? Object.getOwnPropertyNames(instance)\n\t\t\t\t: Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\t\tfor (const method of methods) {\n\t\t\tif (method === 'constructor') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.methods.delete(`${namespace}.${method}`);\n\t\t}\n\t}\n\n\tcreateService(instance: ServiceClass): void {\n\t\tconst namespace = instance.getName();\n\n\t\tinstance.getEvents().forEach((eventName) => {\n\t\t\tthis.events.on(eventName, (...args) => {\n\t\t\t\tinstance.emit(eventName, ...(args as Parameters<EventSignatures[typeof eventName]>));\n\t\t\t});\n\t\t});\n\n\t\tconst methods =\n\t\t\tinstance.constructor?.name === 'Object'\n\t\t\t\t? Object.getOwnPropertyNames(instance)\n\t\t\t\t: Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\t\tfor (const method of methods) {\n\t\t\tif (method === 'constructor') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst i = instance as any;\n\n\t\t\tthis.methods.set(`${namespace}.${method}`, i[method].bind(i));\n\t\t}\n\t}\n\n\tasync broadcast<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tthis.broadcastLocal(event, ...args);\n\n\t\tStreamerCentral.emit('broadcast', 'local', 'broadcast', [{ eventName: event, args }]);\n\t}\n\n\tasync broadcastLocal<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tthis.events.emit(event, ...args);\n\t}\n\n\tasync nodeList(): Promise<IBrokerNode[]> {\n\t\treturn [];\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/lib/LocalBroker.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/sdk/lib/LocalBroker.ts"}},"code":"!function (module1) {\n  module1.export({\n    LocalBroker: () => LocalBroker\n  });\n  let EventEmitter;\n  module1.link(\"events\", {\n    EventEmitter(v) {\n      EventEmitter = v;\n    }\n\n  }, 0);\n  let asyncLocalStorage;\n  module1.link(\"..\", {\n    asyncLocalStorage(v) {\n      asyncLocalStorage = v;\n    }\n\n  }, 1);\n  let StreamerCentral;\n  module1.link(\"../../modules/streamer/streamer.module\", {\n    StreamerCentral(v) {\n      StreamerCentral = v;\n    }\n\n  }, 2);\n\n  class LocalBroker {\n    constructor() {\n      this.methods = new Map();\n      this.events = new EventEmitter();\n    }\n\n    call(method, data) {\n      return Promise.asyncApply(() => {\n        const result = Promise.await(asyncLocalStorage.run({\n          id: 'ctx.id',\n          nodeID: 'ctx.nodeID',\n          requestID: 'ctx.requestID',\n          broker: this\n        }, () => {\n          var _this$methods$get;\n\n          return (_this$methods$get = this.methods.get(method)) === null || _this$methods$get === void 0 ? void 0 : _this$methods$get(...data);\n        }));\n        return result;\n      });\n    }\n\n    waitAndCall(method, data) {\n      return Promise.asyncApply(() => {\n        return this.call(method, data);\n      });\n    }\n\n    destroyService(instance) {\n      var _instance$constructor;\n\n      const namespace = instance.getName();\n      instance.getEvents().forEach(eventName => {\n        this.events.removeListener(eventName, instance.emit);\n      });\n      const methods = ((_instance$constructor = instance.constructor) === null || _instance$constructor === void 0 ? void 0 : _instance$constructor.name) === 'Object' ? Object.getOwnPropertyNames(instance) : Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\n      for (const method of methods) {\n        if (method === 'constructor') {\n          continue;\n        }\n\n        this.methods.delete(\"\".concat(namespace, \".\").concat(method));\n      }\n    }\n\n    createService(instance) {\n      var _instance$constructor2;\n\n      const namespace = instance.getName();\n      instance.getEvents().forEach(eventName => {\n        this.events.on(eventName, function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          instance.emit(eventName, ...args);\n        });\n      });\n      const methods = ((_instance$constructor2 = instance.constructor) === null || _instance$constructor2 === void 0 ? void 0 : _instance$constructor2.name) === 'Object' ? Object.getOwnPropertyNames(instance) : Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\n      for (const method of methods) {\n        if (method === 'constructor') {\n          continue;\n        }\n\n        const i = instance;\n        this.methods.set(\"\".concat(namespace, \".\").concat(method), i[method].bind(i));\n      }\n    }\n\n    broadcast(event) {\n      return Promise.asyncApply(() => {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        this.broadcastLocal(event, ...args);\n        StreamerCentral.emit('broadcast', 'local', 'broadcast', [{\n          eventName: event,\n          args\n        }]);\n      });\n    }\n\n    broadcastLocal(event) {\n      return Promise.asyncApply(() => {\n        for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          args[_key3 - 1] = arguments[_key3];\n        }\n\n        this.events.emit(event, ...args);\n      });\n    }\n\n    nodeList() {\n      return Promise.asyncApply(() => {\n        return [];\n      });\n    }\n\n  }\n}.call(this, module);","map":{"version":3,"sources":["server/sdk/lib/LocalBroker.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\n\nimport { IBroker, IBrokerNode } from '../types/IBroker';\nimport { ServiceClass } from '../types/ServiceClass';\nimport { asyncLocalStorage } from '..';\nimport { EventSignatures } from './Events';\nimport { StreamerCentral } from '../../modules/streamer/streamer.module';\n\nexport class LocalBroker implements IBroker {\n\tprivate methods = new Map<string, Function>();\n\n\tprivate events = new EventEmitter();\n\n\tasync call(method: string, data: any): Promise<any> {\n\t\tconst result = await asyncLocalStorage.run(\n\t\t\t{\n\t\t\t\tid: 'ctx.id',\n\t\t\t\tnodeID: 'ctx.nodeID',\n\t\t\t\trequestID: 'ctx.requestID',\n\t\t\t\tbroker: this,\n\t\t\t},\n\t\t\t(): any => this.methods.get(method)?.(...data),\n\t\t);\n\n\t\treturn result;\n\t}\n\n\tasync waitAndCall(method: string, data: any): Promise<any> {\n\t\treturn this.call(method, data);\n\t}\n\n\tdestroyService(instance: ServiceClass): void {\n\t\tconst namespace = instance.getName();\n\n\t\tinstance.getEvents().forEach((eventName) => {\n\t\t\tthis.events.removeListener(eventName, instance.emit);\n\t\t});\n\n\t\tconst methods =\n\t\t\tinstance.constructor?.name === 'Object'\n\t\t\t\t? Object.getOwnPropertyNames(instance)\n\t\t\t\t: Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\t\tfor (const method of methods) {\n\t\t\tif (method === 'constructor') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.methods.delete(`${namespace}.${method}`);\n\t\t}\n\t}\n\n\tcreateService(instance: ServiceClass): void {\n\t\tconst namespace = instance.getName();\n\n\t\tinstance.getEvents().forEach((eventName) => {\n\t\t\tthis.events.on(eventName, (...args) => {\n\t\t\t\tinstance.emit(eventName, ...(args as Parameters<EventSignatures[typeof eventName]>));\n\t\t\t});\n\t\t});\n\n\t\tconst methods =\n\t\t\tinstance.constructor?.name === 'Object'\n\t\t\t\t? Object.getOwnPropertyNames(instance)\n\t\t\t\t: Object.getOwnPropertyNames(Object.getPrototypeOf(instance));\n\t\tfor (const method of methods) {\n\t\t\tif (method === 'constructor') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst i = instance as any;\n\n\t\t\tthis.methods.set(`${namespace}.${method}`, i[method].bind(i));\n\t\t}\n\t}\n\n\tasync broadcast<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tthis.broadcastLocal(event, ...args);\n\n\t\tStreamerCentral.emit('broadcast', 'local', 'broadcast', [{ eventName: event, args }]);\n\t}\n\n\tasync broadcastLocal<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tthis.events.emit(event, ...args);\n\t}\n\n\tasync nodeList(): Promise<IBrokerNode[]> {\n\t\treturn [];\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"510fd29509fd69078344fbee5059f6e29bca4fce"}

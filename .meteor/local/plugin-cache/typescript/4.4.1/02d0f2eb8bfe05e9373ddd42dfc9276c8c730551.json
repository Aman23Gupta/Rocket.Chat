{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatDepartmentAgents.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/LivechatDepartmentAgents.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatDepartmentAgents.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/LivechatDepartmentAgents.ts","sourceRoot":"","sources":["app/models/server/raw/LivechatDepartmentAgents.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAGpC,MAAM,OAAO,2BAA4B,SAAQ,OAAkC;IAalF,gBAAgB,CACf,SAAmB,EACnB,OAGsF;QAEtF,MAAM,KAAK,GAA2C,EAAE,CAAC;QAEzD,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE;YACjD,eAAe;YACf,KAAK,CAAC,QAAQ,GAAG;gBAChB,GAAG,EAAE,SAAS;aACd,CAAC;SACF;QAED,IAAI,OAAO,KAAK,SAAS,EAAE;YAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,aAAa,CAAC,OAAe;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/B,CAAC;IAcD,wBAAwB,CACvB,YAAoB,EACpB,OAGsF;QAEtF,MAAM,KAAK,GAAG,EAAE,YAAY,EAAE,CAAC;QAE/B,IAAI,OAAO,KAAK,SAAS,EAAE;YAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAcD,8BAA8B,CAC7B,OAAe,EACf,OAGsF;QAEtF,MAAM,KAAK,GAAG;YACb,OAAO;YACP,iBAAiB,EAAE,IAAI;SACvB,CAAC;QAEF,IAAI,OAAO,KAAK,SAAS,EAAE;YAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,mBAAmB,CAAC,aAAuB,EAAE,OAAO,GAAG,EAAE;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,EAAE,aAAa,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IACrE,CAAC;IAED,oCAAoC,CAAC,QAAgB,EAAE,eAAuB;QAC7E,OAAO,EAAE,CAAC;IACX,CAAC;CACD","sourcesContent":["import { Cursor, FilterQuery, WithoutProjection, FindOneOptions } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ILivechatDepartmentAgents } from '../../../../definition/ILivechatDepartmentAgents';\n\nexport class LivechatDepartmentAgentsRaw extends BaseRaw<ILivechatDepartmentAgents> {\n\tfindUsersInQueue(usersList: string[]): Cursor<ILivechatDepartmentAgents>;\n\n\tfindUsersInQueue(\n\t\tusersList: string[],\n\t\toptions: WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>,\n\t): Cursor<ILivechatDepartmentAgents>;\n\n\tfindUsersInQueue<P>(\n\t\tusersList: string[],\n\t\toptions: FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<P>;\n\n\tfindUsersInQueue<P>(\n\t\tusersList: string[],\n\t\toptions?:\n\t\t\t| undefined\n\t\t\t| WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>\n\t\t\t| FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<ILivechatDepartmentAgents> | Cursor<P> {\n\t\tconst query: FilterQuery<ILivechatDepartmentAgents> = {};\n\n\t\tif (Array.isArray(usersList) && usersList.length) {\n\t\t\t// TODO: Remove\n\t\t\tquery.username = {\n\t\t\t\t$in: usersList,\n\t\t\t};\n\t\t}\n\n\t\tif (options === undefined) {\n\t\t\treturn this.find(query);\n\t\t}\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByAgentId(agentId: string): Cursor<ILivechatDepartmentAgents> {\n\t\treturn this.find({ agentId });\n\t}\n\n\tfindAgentsByDepartmentId(departmentId: string): Cursor<ILivechatDepartmentAgents>;\n\n\tfindAgentsByDepartmentId(\n\t\tdepartmentId: string,\n\t\toptions: WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>,\n\t): Cursor<ILivechatDepartmentAgents>;\n\n\tfindAgentsByDepartmentId<P>(\n\t\tdepartmentId: string,\n\t\toptions: FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<P>;\n\n\tfindAgentsByDepartmentId<P>(\n\t\tdepartmentId: string,\n\t\toptions?:\n\t\t\t| undefined\n\t\t\t| WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>\n\t\t\t| FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<ILivechatDepartmentAgents> | Cursor<P> {\n\t\tconst query = { departmentId };\n\n\t\tif (options === undefined) {\n\t\t\treturn this.find(query);\n\t\t}\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindActiveDepartmentsByAgentId(agentId: string): Cursor<ILivechatDepartmentAgents>;\n\n\tfindActiveDepartmentsByAgentId(\n\t\tagentId: string,\n\t\toptions: WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>,\n\t): Cursor<ILivechatDepartmentAgents>;\n\n\tfindActiveDepartmentsByAgentId<P>(\n\t\tagentId: string,\n\t\toptions: FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<P>;\n\n\tfindActiveDepartmentsByAgentId<P>(\n\t\tagentId: string,\n\t\toptions?:\n\t\t\t| undefined\n\t\t\t| WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>\n\t\t\t| FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<ILivechatDepartmentAgents> | Cursor<P> {\n\t\tconst query = {\n\t\t\tagentId,\n\t\t\tdepartmentEnabled: true,\n\t\t};\n\n\t\tif (options === undefined) {\n\t\t\treturn this.find(query);\n\t\t}\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByDepartmentIds(departmentIds: string[], options = {}): Cursor<ILivechatDepartmentAgents> {\n\t\treturn this.find({ departmentId: { $in: departmentIds } }, options);\n\t}\n\n\tfindAgentsByAgentIdAndBusinessHourId(_agentId: string, _businessHourId: string): [] {\n\t\treturn [];\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/LivechatDepartmentAgents.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/LivechatDepartmentAgents.ts"}},"code":"module.export({\n  LivechatDepartmentAgentsRaw: () => LivechatDepartmentAgentsRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\n\nclass LivechatDepartmentAgentsRaw extends BaseRaw {\n  findUsersInQueue(usersList, options) {\n    const query = {};\n\n    if (Array.isArray(usersList) && usersList.length) {\n      // TODO: Remove\n      query.username = {\n        $in: usersList\n      };\n    }\n\n    if (options === undefined) {\n      return this.find(query);\n    }\n\n    return this.find(query, options);\n  }\n\n  findByAgentId(agentId) {\n    return this.find({\n      agentId\n    });\n  }\n\n  findAgentsByDepartmentId(departmentId, options) {\n    const query = {\n      departmentId\n    };\n\n    if (options === undefined) {\n      return this.find(query);\n    }\n\n    return this.find(query, options);\n  }\n\n  findActiveDepartmentsByAgentId(agentId, options) {\n    const query = {\n      agentId,\n      departmentEnabled: true\n    };\n\n    if (options === undefined) {\n      return this.find(query);\n    }\n\n    return this.find(query, options);\n  }\n\n  findByDepartmentIds(departmentIds) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.find({\n      departmentId: {\n        $in: departmentIds\n      }\n    }, options);\n  }\n\n  findAgentsByAgentIdAndBusinessHourId(_agentId, _businessHourId) {\n    return [];\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/LivechatDepartmentAgents.ts"],"names":[],"mappings":"AAEA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,2BAA2B,EAAA,MAAA;AAA3B,CAAT;AAAoC,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAG9B,MAAO,2BAAP,SAA2C,OAA3C,CAA6E;AAalF,EAAA,gBAAgB,CACf,SADe,EAEf,OAFe,EAKuE;AAEtF,UAAM,KAAK,GAA2C,EAAtD;;AAEA,QAAI,KAAK,CAAC,OAAN,CAAc,SAAd,KAA4B,SAAS,CAAC,MAA1C,EAAkD;AACjD;AACA,MAAA,KAAK,CAAC,QAAN,GAAiB;AAChB,QAAA,GAAG,EAAE;AADW,OAAjB;AAGA;;AAED,QAAI,OAAO,KAAK,SAAhB,EAA2B;AAC1B,aAAO,KAAK,IAAL,CAAU,KAAV,CAAP;AACA;;AAED,WAAO,KAAK,IAAL,CAAU,KAAV,EAAiB,OAAjB,CAAP;AACA;;AAED,EAAA,aAAa,CAAC,OAAD,EAAgB;AAC5B,WAAO,KAAK,IAAL,CAAU;AAAE,MAAA;AAAF,KAAV,CAAP;AACA;;AAcD,EAAA,wBAAwB,CACvB,YADuB,EAEvB,OAFuB,EAK+D;AAEtF,UAAM,KAAK,GAAG;AAAE,MAAA;AAAF,KAAd;;AAEA,QAAI,OAAO,KAAK,SAAhB,EAA2B;AAC1B,aAAO,KAAK,IAAL,CAAU,KAAV,CAAP;AACA;;AAED,WAAO,KAAK,IAAL,CAAU,KAAV,EAAiB,OAAjB,CAAP;AACA;;AAcD,EAAA,8BAA8B,CAC7B,OAD6B,EAE7B,OAF6B,EAKyD;AAEtF,UAAM,KAAK,GAAG;AACb,MAAA,OADa;AAEb,MAAA,iBAAiB,EAAE;AAFN,KAAd;;AAKA,QAAI,OAAO,KAAK,SAAhB,EAA2B;AAC1B,aAAO,KAAK,IAAL,CAAU,KAAV,CAAP;AACA;;AAED,WAAO,KAAK,IAAL,CAAU,KAAV,EAAiB,OAAjB,CAAP;AACA;;AAED,EAAA,mBAAmB,CAAC,aAAD,EAAsC;AAAA,QAAZ,OAAY,uEAAF,EAAE;AACxD,WAAO,KAAK,IAAL,CAAU;AAAE,MAAA,YAAY,EAAE;AAAE,QAAA,GAAG,EAAE;AAAP;AAAhB,KAAV,EAAoD,OAApD,CAAP;AACA;;AAED,EAAA,oCAAoC,CAAC,QAAD,EAAmB,eAAnB,EAA0C;AAC7E,WAAO,EAAP;AACA;;AAzGiF","sourcesContent":["import { Cursor, FilterQuery, WithoutProjection, FindOneOptions } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { ILivechatDepartmentAgents } from '../../../../definition/ILivechatDepartmentAgents';\n\nexport class LivechatDepartmentAgentsRaw extends BaseRaw<ILivechatDepartmentAgents> {\n\tfindUsersInQueue(usersList: string[]): Cursor<ILivechatDepartmentAgents>;\n\n\tfindUsersInQueue(\n\t\tusersList: string[],\n\t\toptions: WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>,\n\t): Cursor<ILivechatDepartmentAgents>;\n\n\tfindUsersInQueue<P>(\n\t\tusersList: string[],\n\t\toptions: FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<P>;\n\n\tfindUsersInQueue<P>(\n\t\tusersList: string[],\n\t\toptions?:\n\t\t\t| undefined\n\t\t\t| WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>\n\t\t\t| FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<ILivechatDepartmentAgents> | Cursor<P> {\n\t\tconst query: FilterQuery<ILivechatDepartmentAgents> = {};\n\n\t\tif (Array.isArray(usersList) && usersList.length) {\n\t\t\t// TODO: Remove\n\t\t\tquery.username = {\n\t\t\t\t$in: usersList,\n\t\t\t};\n\t\t}\n\n\t\tif (options === undefined) {\n\t\t\treturn this.find(query);\n\t\t}\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByAgentId(agentId: string): Cursor<ILivechatDepartmentAgents> {\n\t\treturn this.find({ agentId });\n\t}\n\n\tfindAgentsByDepartmentId(departmentId: string): Cursor<ILivechatDepartmentAgents>;\n\n\tfindAgentsByDepartmentId(\n\t\tdepartmentId: string,\n\t\toptions: WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>,\n\t): Cursor<ILivechatDepartmentAgents>;\n\n\tfindAgentsByDepartmentId<P>(\n\t\tdepartmentId: string,\n\t\toptions: FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<P>;\n\n\tfindAgentsByDepartmentId<P>(\n\t\tdepartmentId: string,\n\t\toptions?:\n\t\t\t| undefined\n\t\t\t| WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>\n\t\t\t| FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<ILivechatDepartmentAgents> | Cursor<P> {\n\t\tconst query = { departmentId };\n\n\t\tif (options === undefined) {\n\t\t\treturn this.find(query);\n\t\t}\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindActiveDepartmentsByAgentId(agentId: string): Cursor<ILivechatDepartmentAgents>;\n\n\tfindActiveDepartmentsByAgentId(\n\t\tagentId: string,\n\t\toptions: WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>,\n\t): Cursor<ILivechatDepartmentAgents>;\n\n\tfindActiveDepartmentsByAgentId<P>(\n\t\tagentId: string,\n\t\toptions: FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<P>;\n\n\tfindActiveDepartmentsByAgentId<P>(\n\t\tagentId: string,\n\t\toptions?:\n\t\t\t| undefined\n\t\t\t| WithoutProjection<FindOneOptions<ILivechatDepartmentAgents>>\n\t\t\t| FindOneOptions<P extends ILivechatDepartmentAgents ? ILivechatDepartmentAgents : P>,\n\t): Cursor<ILivechatDepartmentAgents> | Cursor<P> {\n\t\tconst query = {\n\t\t\tagentId,\n\t\t\tdepartmentEnabled: true,\n\t\t};\n\n\t\tif (options === undefined) {\n\t\t\treturn this.find(query);\n\t\t}\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByDepartmentIds(departmentIds: string[], options = {}): Cursor<ILivechatDepartmentAgents> {\n\t\treturn this.find({ departmentId: { $in: departmentIds } }, options);\n\t}\n\n\tfindAgentsByAgentIdAndBusinessHourId(_agentId: string, _businessHourId: string): [] {\n\t\treturn [];\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"02d0f2eb8bfe05e9373ddd42dfc9276c8c730551"}

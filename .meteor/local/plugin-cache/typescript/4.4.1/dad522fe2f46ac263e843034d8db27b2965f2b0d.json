{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/statistics/server/lib/getServicesStatistics.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/statistics/server/lib/getServicesStatistics.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/statistics/server/lib/getServicesStatistics.ts","inputSourceMap":{"version":3,"file":"app/statistics/server/lib/getServicesStatistics.ts","sourceRoot":"","sources":["app/statistics/server/lib/getServicesStatistics.ts"],"names":[],"mappings":"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","sourcesContent":["import { settings } from '../../../settings/server';\nimport { Users } from '../../../models/server';\n\nfunction getCustomOAuthServices(): Record<\n\tstring,\n\t{\n\t\tenabled: boolean;\n\t\tmergeRoles: boolean;\n\t\tusers: number;\n\t}\n> {\n\tconst customOauth = settings.getByRegexp(/Accounts_OAuth_Custom-[^-]+$/im);\n\treturn Object.fromEntries(\n\t\tObject.entries(customOauth).map(([key, value]) => {\n\t\t\tconst name = key.replace('Accounts_OAuth_Custom-', '');\n\t\t\treturn [\n\t\t\t\tname,\n\t\t\t\t{\n\t\t\t\t\tenabled: Boolean(value),\n\t\t\t\t\tmergeRoles: settings.get<boolean>(`Accounts_OAuth_Custom-${name}-merge_roles`),\n\t\t\t\t\tusers: Users.countActiveUsersByService(name),\n\t\t\t\t},\n\t\t\t];\n\t\t}),\n\t);\n}\n\nexport function getServicesStatistics(): Record<string, unknown> {\n\treturn {\n\t\tldap: {\n\t\t\tusers: Users.countActiveUsersByService('ldap'),\n\t\t\tenabled: settings.get('LDAP_Enable'),\n\t\t\tloginFallback: settings.get('LDAP_Login_Fallback'),\n\t\t\tencryption: settings.get('LDAP_Encryption'),\n\t\t\tmergeUsers: settings.get('LDAP_Merge_Existing_Users'),\n\t\t\tsyncRoles: settings.get('LDAP_Sync_User_Data_Roles'),\n\t\t\tsyncRolesAutoRemove: settings.get('LDAP_Sync_User_Data_Roles_AutoRemove'),\n\t\t\tsyncData: settings.get('LDAP_Sync_Custom_Fields'),\n\t\t\tsyncChannels: settings.get('LDAP_Sync_User_Data_Channels'),\n\t\t\tsyncAvatar: settings.get('LDAP_Sync_User_Avatar'),\n\t\t\tgroupFilter: settings.get('LDAP_Group_Filter_Enable'),\n\t\t\tbackgroundSync: {\n\t\t\t\tenabled: settings.get('LDAP_Background_Sync'),\n\t\t\t\tinterval: settings.get('LDAP_Background_Sync_Interval'),\n\t\t\t\tnewUsers: settings.get('LDAP_Background_Sync_Import_New_Users'),\n\t\t\t\texistingUsers: settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated'),\n\t\t\t},\n\t\t\tee: {\n\t\t\t\tsyncActiveState: settings.get('LDAP_Sync_User_Active_State'),\n\t\t\t\tsyncTeams: settings.get('LDAP_Enable_LDAP_Groups_To_RC_Teams'),\n\t\t\t\tsyncRoles: settings.get('LDAP_Sync_User_Data_Roles'),\n\t\t\t},\n\t\t},\n\t\tsaml: {\n\t\t\tenabled: settings.get('SAML_Custom_Default'),\n\t\t\tusers: Users.countActiveUsersByService('saml'),\n\t\t\tsignatureValidationType: settings.get('SAML_Custom_Default_signature_validation_type'),\n\t\t\tgenerateUsername: settings.get('SAML_Custom_Default_generate_username'),\n\t\t\tupdateSubscriptionsOnLogin: settings.get('SAML_Custom_Default_channels_update'),\n\t\t\tsyncRoles: settings.get('SAML_Custom_Default_role_attribute_sync'),\n\t\t},\n\t\tcas: {\n\t\t\tenabled: settings.get('CAS_enabled'),\n\t\t\tusers: Users.countActiveUsersByService('cas'),\n\t\t\tallowUserCreation: settings.get('CAS_Creation_User_Enabled'),\n\t\t\talwaysSyncUserData: settings.get('CAS_Sync_User_Data_Enabled'),\n\t\t},\n\t\toauth: {\n\t\t\tapple: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Apple'),\n\t\t\t\tusers: Users.countActiveUsersByService('apple'),\n\t\t\t},\n\t\t\tdolphin: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Dolphin'),\n\t\t\t\tusers: Users.countActiveUsersByService('dolphin'),\n\t\t\t},\n\t\t\tdrupal: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Drupal'),\n\t\t\t\tusers: Users.countActiveUsersByService('drupal'),\n\t\t\t},\n\t\t\tfacebook: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Facebook'),\n\t\t\t\tusers: Users.countActiveUsersByService('facebook'),\n\t\t\t},\n\t\t\tgithub: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Github'),\n\t\t\t\tusers: Users.countActiveUsersByService('github'),\n\t\t\t},\n\t\t\tgithubEnterprise: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_GitHub_Enterprise'),\n\t\t\t\tusers: Users.countActiveUsersByService('github_enterprise'),\n\t\t\t},\n\t\t\tgitlab: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Gitlab'),\n\t\t\t\tusers: Users.countActiveUsersByService('gitlab'),\n\t\t\t},\n\t\t\tgoogle: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Google'),\n\t\t\t\tusers: Users.countActiveUsersByService('google'),\n\t\t\t},\n\t\t\tlinkedin: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Linkedin'),\n\t\t\t\tusers: Users.countActiveUsersByService('linkedin'),\n\t\t\t},\n\t\t\tmeteor: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Meteor'),\n\t\t\t\tusers: Users.countActiveUsersByService('meteor'),\n\t\t\t},\n\t\t\tnextcloud: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Nextcloud'),\n\t\t\t\tusers: Users.countActiveUsersByService('nextcloud'),\n\t\t\t},\n\t\t\ttokenpass: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Tokenpass'),\n\t\t\t\tusers: Users.countActiveUsersByService('tokenpass'),\n\t\t\t},\n\t\t\ttwitter: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Twitter'),\n\t\t\t\tusers: Users.countActiveUsersByService('twitter'),\n\t\t\t},\n\t\t\twordpress: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Wordpress'),\n\t\t\t\tusers: Users.countActiveUsersByService('wordpress'),\n\t\t\t},\n\t\t\tcustom: getCustomOAuthServices(),\n\t\t},\n\t};\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/statistics/server/lib/getServicesStatistics.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/statistics/server/lib/getServicesStatistics.ts"}},"code":"module.export({\n  getServicesStatistics: () => getServicesStatistics\n});\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\n\nfunction getCustomOAuthServices() {\n  const customOauth = settings.getByRegexp(/Accounts_OAuth_Custom-[^-]+$/im);\n  return Object.fromEntries(Object.entries(customOauth).map(_ref => {\n    let [key, value] = _ref;\n    const name = key.replace('Accounts_OAuth_Custom-', '');\n    return [name, {\n      enabled: Boolean(value),\n      mergeRoles: settings.get(\"Accounts_OAuth_Custom-\".concat(name, \"-merge_roles\")),\n      users: Users.countActiveUsersByService(name)\n    }];\n  }));\n}\n\nfunction getServicesStatistics() {\n  return {\n    ldap: {\n      users: Users.countActiveUsersByService('ldap'),\n      enabled: settings.get('LDAP_Enable'),\n      loginFallback: settings.get('LDAP_Login_Fallback'),\n      encryption: settings.get('LDAP_Encryption'),\n      mergeUsers: settings.get('LDAP_Merge_Existing_Users'),\n      syncRoles: settings.get('LDAP_Sync_User_Data_Roles'),\n      syncRolesAutoRemove: settings.get('LDAP_Sync_User_Data_Roles_AutoRemove'),\n      syncData: settings.get('LDAP_Sync_Custom_Fields'),\n      syncChannels: settings.get('LDAP_Sync_User_Data_Channels'),\n      syncAvatar: settings.get('LDAP_Sync_User_Avatar'),\n      groupFilter: settings.get('LDAP_Group_Filter_Enable'),\n      backgroundSync: {\n        enabled: settings.get('LDAP_Background_Sync'),\n        interval: settings.get('LDAP_Background_Sync_Interval'),\n        newUsers: settings.get('LDAP_Background_Sync_Import_New_Users'),\n        existingUsers: settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated')\n      },\n      ee: {\n        syncActiveState: settings.get('LDAP_Sync_User_Active_State'),\n        syncTeams: settings.get('LDAP_Enable_LDAP_Groups_To_RC_Teams'),\n        syncRoles: settings.get('LDAP_Sync_User_Data_Roles')\n      }\n    },\n    saml: {\n      enabled: settings.get('SAML_Custom_Default'),\n      users: Users.countActiveUsersByService('saml'),\n      signatureValidationType: settings.get('SAML_Custom_Default_signature_validation_type'),\n      generateUsername: settings.get('SAML_Custom_Default_generate_username'),\n      updateSubscriptionsOnLogin: settings.get('SAML_Custom_Default_channels_update'),\n      syncRoles: settings.get('SAML_Custom_Default_role_attribute_sync')\n    },\n    cas: {\n      enabled: settings.get('CAS_enabled'),\n      users: Users.countActiveUsersByService('cas'),\n      allowUserCreation: settings.get('CAS_Creation_User_Enabled'),\n      alwaysSyncUserData: settings.get('CAS_Sync_User_Data_Enabled')\n    },\n    oauth: {\n      apple: {\n        enabled: settings.get('Accounts_OAuth_Apple'),\n        users: Users.countActiveUsersByService('apple')\n      },\n      dolphin: {\n        enabled: settings.get('Accounts_OAuth_Dolphin'),\n        users: Users.countActiveUsersByService('dolphin')\n      },\n      drupal: {\n        enabled: settings.get('Accounts_OAuth_Drupal'),\n        users: Users.countActiveUsersByService('drupal')\n      },\n      facebook: {\n        enabled: settings.get('Accounts_OAuth_Facebook'),\n        users: Users.countActiveUsersByService('facebook')\n      },\n      github: {\n        enabled: settings.get('Accounts_OAuth_Github'),\n        users: Users.countActiveUsersByService('github')\n      },\n      githubEnterprise: {\n        enabled: settings.get('Accounts_OAuth_GitHub_Enterprise'),\n        users: Users.countActiveUsersByService('github_enterprise')\n      },\n      gitlab: {\n        enabled: settings.get('Accounts_OAuth_Gitlab'),\n        users: Users.countActiveUsersByService('gitlab')\n      },\n      google: {\n        enabled: settings.get('Accounts_OAuth_Google'),\n        users: Users.countActiveUsersByService('google')\n      },\n      linkedin: {\n        enabled: settings.get('Accounts_OAuth_Linkedin'),\n        users: Users.countActiveUsersByService('linkedin')\n      },\n      meteor: {\n        enabled: settings.get('Accounts_OAuth_Meteor'),\n        users: Users.countActiveUsersByService('meteor')\n      },\n      nextcloud: {\n        enabled: settings.get('Accounts_OAuth_Nextcloud'),\n        users: Users.countActiveUsersByService('nextcloud')\n      },\n      tokenpass: {\n        enabled: settings.get('Accounts_OAuth_Tokenpass'),\n        users: Users.countActiveUsersByService('tokenpass')\n      },\n      twitter: {\n        enabled: settings.get('Accounts_OAuth_Twitter'),\n        users: Users.countActiveUsersByService('twitter')\n      },\n      wordpress: {\n        enabled: settings.get('Accounts_OAuth_Wordpress'),\n        users: Users.countActiveUsersByService('wordpress')\n      },\n      custom: getCustomOAuthServices()\n    }\n  };\n}","map":{"version":3,"sources":["app/statistics/server/lib/getServicesStatistics.ts"],"names":[],"mappings":"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","sourcesContent":["import { settings } from '../../../settings/server';\nimport { Users } from '../../../models/server';\n\nfunction getCustomOAuthServices(): Record<\n\tstring,\n\t{\n\t\tenabled: boolean;\n\t\tmergeRoles: boolean;\n\t\tusers: number;\n\t}\n> {\n\tconst customOauth = settings.getByRegexp(/Accounts_OAuth_Custom-[^-]+$/im);\n\treturn Object.fromEntries(\n\t\tObject.entries(customOauth).map(([key, value]) => {\n\t\t\tconst name = key.replace('Accounts_OAuth_Custom-', '');\n\t\t\treturn [\n\t\t\t\tname,\n\t\t\t\t{\n\t\t\t\t\tenabled: Boolean(value),\n\t\t\t\t\tmergeRoles: settings.get<boolean>(`Accounts_OAuth_Custom-${name}-merge_roles`),\n\t\t\t\t\tusers: Users.countActiveUsersByService(name),\n\t\t\t\t},\n\t\t\t];\n\t\t}),\n\t);\n}\n\nexport function getServicesStatistics(): Record<string, unknown> {\n\treturn {\n\t\tldap: {\n\t\t\tusers: Users.countActiveUsersByService('ldap'),\n\t\t\tenabled: settings.get('LDAP_Enable'),\n\t\t\tloginFallback: settings.get('LDAP_Login_Fallback'),\n\t\t\tencryption: settings.get('LDAP_Encryption'),\n\t\t\tmergeUsers: settings.get('LDAP_Merge_Existing_Users'),\n\t\t\tsyncRoles: settings.get('LDAP_Sync_User_Data_Roles'),\n\t\t\tsyncRolesAutoRemove: settings.get('LDAP_Sync_User_Data_Roles_AutoRemove'),\n\t\t\tsyncData: settings.get('LDAP_Sync_Custom_Fields'),\n\t\t\tsyncChannels: settings.get('LDAP_Sync_User_Data_Channels'),\n\t\t\tsyncAvatar: settings.get('LDAP_Sync_User_Avatar'),\n\t\t\tgroupFilter: settings.get('LDAP_Group_Filter_Enable'),\n\t\t\tbackgroundSync: {\n\t\t\t\tenabled: settings.get('LDAP_Background_Sync'),\n\t\t\t\tinterval: settings.get('LDAP_Background_Sync_Interval'),\n\t\t\t\tnewUsers: settings.get('LDAP_Background_Sync_Import_New_Users'),\n\t\t\t\texistingUsers: settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated'),\n\t\t\t},\n\t\t\tee: {\n\t\t\t\tsyncActiveState: settings.get('LDAP_Sync_User_Active_State'),\n\t\t\t\tsyncTeams: settings.get('LDAP_Enable_LDAP_Groups_To_RC_Teams'),\n\t\t\t\tsyncRoles: settings.get('LDAP_Sync_User_Data_Roles'),\n\t\t\t},\n\t\t},\n\t\tsaml: {\n\t\t\tenabled: settings.get('SAML_Custom_Default'),\n\t\t\tusers: Users.countActiveUsersByService('saml'),\n\t\t\tsignatureValidationType: settings.get('SAML_Custom_Default_signature_validation_type'),\n\t\t\tgenerateUsername: settings.get('SAML_Custom_Default_generate_username'),\n\t\t\tupdateSubscriptionsOnLogin: settings.get('SAML_Custom_Default_channels_update'),\n\t\t\tsyncRoles: settings.get('SAML_Custom_Default_role_attribute_sync'),\n\t\t},\n\t\tcas: {\n\t\t\tenabled: settings.get('CAS_enabled'),\n\t\t\tusers: Users.countActiveUsersByService('cas'),\n\t\t\tallowUserCreation: settings.get('CAS_Creation_User_Enabled'),\n\t\t\talwaysSyncUserData: settings.get('CAS_Sync_User_Data_Enabled'),\n\t\t},\n\t\toauth: {\n\t\t\tapple: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Apple'),\n\t\t\t\tusers: Users.countActiveUsersByService('apple'),\n\t\t\t},\n\t\t\tdolphin: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Dolphin'),\n\t\t\t\tusers: Users.countActiveUsersByService('dolphin'),\n\t\t\t},\n\t\t\tdrupal: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Drupal'),\n\t\t\t\tusers: Users.countActiveUsersByService('drupal'),\n\t\t\t},\n\t\t\tfacebook: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Facebook'),\n\t\t\t\tusers: Users.countActiveUsersByService('facebook'),\n\t\t\t},\n\t\t\tgithub: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Github'),\n\t\t\t\tusers: Users.countActiveUsersByService('github'),\n\t\t\t},\n\t\t\tgithubEnterprise: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_GitHub_Enterprise'),\n\t\t\t\tusers: Users.countActiveUsersByService('github_enterprise'),\n\t\t\t},\n\t\t\tgitlab: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Gitlab'),\n\t\t\t\tusers: Users.countActiveUsersByService('gitlab'),\n\t\t\t},\n\t\t\tgoogle: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Google'),\n\t\t\t\tusers: Users.countActiveUsersByService('google'),\n\t\t\t},\n\t\t\tlinkedin: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Linkedin'),\n\t\t\t\tusers: Users.countActiveUsersByService('linkedin'),\n\t\t\t},\n\t\t\tmeteor: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Meteor'),\n\t\t\t\tusers: Users.countActiveUsersByService('meteor'),\n\t\t\t},\n\t\t\tnextcloud: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Nextcloud'),\n\t\t\t\tusers: Users.countActiveUsersByService('nextcloud'),\n\t\t\t},\n\t\t\ttokenpass: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Tokenpass'),\n\t\t\t\tusers: Users.countActiveUsersByService('tokenpass'),\n\t\t\t},\n\t\t\ttwitter: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Twitter'),\n\t\t\t\tusers: Users.countActiveUsersByService('twitter'),\n\t\t\t},\n\t\t\twordpress: {\n\t\t\t\tenabled: settings.get('Accounts_OAuth_Wordpress'),\n\t\t\t\tusers: Users.countActiveUsersByService('wordpress'),\n\t\t\t},\n\t\t\tcustom: getCustomOAuthServices(),\n\t\t},\n\t};\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"dad522fe2f46ac263e843034d8db27b2965f2b0d"}

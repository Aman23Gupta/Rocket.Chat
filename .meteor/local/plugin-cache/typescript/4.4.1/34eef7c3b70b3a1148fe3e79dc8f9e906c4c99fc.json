{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/showBox.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/logger/showBox.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/showBox.ts","inputSourceMap":{"version":3,"file":"server/lib/logger/showBox.ts","sourceRoot":"","sources":["server/lib/logger/showBox.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,mBAAmB,CAAC;AAClC,OAAO,KAAK,MAAM,MAAM,WAAW,CAAC;AAEpC,iCAAiC;AACjC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IAC1C,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;CAC9B;AAID,MAAM,UAAU,OAAO,CAAC,KAAa,EAAE,OAAe,EAAE,KAAiB;IACxE,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CACzB,IAAI,EACJ,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CACnC,CAAC;IAEF,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;IAC/C,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC;IAEhD,MAAM,KAAK,GAAG,EAAE,CAAC;IAEjB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpB,IAAI,KAAK,EAAE;QACV,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpB;IACD,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAEtB,CAAC,GAAG,KAAK,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CACxG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAC/C,CAAC;AACH,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,KAAa,EAAE,OAAe;IAC1D,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,KAAa,EAAE,OAAe;IAC5D,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAClC,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,KAAa,EAAE,OAAe;IAC5D,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AACpC,CAAC","sourcesContent":["import s from 'underscore.string';\nimport * as colors from 'colorette';\n\n// force enable colors on dev env\nif (process.env.NODE_ENV !== 'production') {\n\tcolors.options.enabled = true;\n}\n\ntype LogColors = 'white' | 'blue' | 'green' | 'magenta' | 'red';\n\nexport function showBox(title: string, message: string, color?: LogColors): void {\n\tconst msgLines = message.split('\\n');\n\n\tconst len = Math.max.apply(\n\t\tnull,\n\t\tmsgLines.map((line) => line.length),\n\t);\n\n\tconst topLine = `+--${s.pad('', len, '-')}--+`;\n\tconst separator = `|  ${s.pad('', len, '')}  |`;\n\n\tconst lines = [];\n\n\tlines.push(topLine);\n\tif (title) {\n\t\tlines.push(`|  ${s.lrpad(title, len)}  |`);\n\t\tlines.push(topLine);\n\t}\n\tlines.push(separator);\n\n\t[...lines, ...msgLines.map((line) => `|  ${s.rpad(line, len)}  |`), separator, topLine].forEach((line) =>\n\t\tconsole.log(color ? colors[color](line) : line),\n\t);\n}\n\nexport function showErrorBox(title: string, message: string): void {\n\tshowBox(title, message, 'red');\n}\n\nexport function showSuccessBox(title: string, message: string): void {\n\tshowBox(title, message, 'green');\n}\n\nexport function showWarningBox(title: string, message: string): void {\n\tshowBox(title, message, 'magenta');\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/logger/showBox.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/logger/showBox.ts"}},"code":"module.export({\n  showBox: () => showBox,\n  showErrorBox: () => showErrorBox,\n  showSuccessBox: () => showSuccessBox,\n  showWarningBox: () => showWarningBox\n});\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 0);\nlet colors;\nmodule.link(\"colorette\", {\n  \"*\"(v) {\n    colors = v;\n  }\n\n}, 1);\n\n// force enable colors on dev env\nif (process.env.NODE_ENV !== 'production') {\n  colors.options.enabled = true;\n}\n\nfunction showBox(title, message, color) {\n  const msgLines = message.split('\\n');\n  const len = Math.max.apply(null, msgLines.map(line => line.length));\n  const topLine = \"+--\".concat(s.pad('', len, '-'), \"--+\");\n  const separator = \"|  \".concat(s.pad('', len, ''), \"  |\");\n  const lines = [];\n  lines.push(topLine);\n\n  if (title) {\n    lines.push(\"|  \".concat(s.lrpad(title, len), \"  |\"));\n    lines.push(topLine);\n  }\n\n  lines.push(separator);\n  [...lines, ...msgLines.map(line => \"|  \".concat(s.rpad(line, len), \"  |\")), separator, topLine].forEach(line => console.log(color ? colors[color](line) : line));\n}\n\nfunction showErrorBox(title, message) {\n  showBox(title, message, 'red');\n}\n\nfunction showSuccessBox(title, message) {\n  showBox(title, message, 'green');\n}\n\nfunction showWarningBox(title, message) {\n  showBox(title, message, 'magenta');\n}","map":{"version":3,"sources":["server/lib/logger/showBox.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAc;AAAA,EAAA,OAAA,EAAA,MAAA,OAAA;AAAoB,EAAA,YAAA,EAAA,MAAA,YAApB;AAAoB,EAAA,cAAA,EAAA,MAAA,cAApB;AAAoB,EAAA,cAAA,EAAA,MAAA;AAApB,CAAd;AAAkC,IAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,MAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAGlC;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C,EAAA,MAAM,CAAC,OAAP,CAAe,OAAf,GAAyB,IAAzB;AACA;;AAIK,SAAU,OAAV,CAAkB,KAAlB,EAAiC,OAAjC,EAAkD,KAAlD,EAAmE;AACxE,QAAM,QAAQ,GAAG,OAAO,CAAC,KAAR,CAAc,IAAd,CAAjB;AAEA,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,CACX,IADW,EAEX,QAAQ,CAAC,GAAT,CAAc,IAAD,IAAU,IAAI,CAAC,MAA5B,CAFW,CAAZ;AAKA,QAAM,OAAO,gBAAS,CAAC,CAAC,GAAF,CAAM,EAAN,EAAU,GAAV,EAAe,GAAf,CAAT,QAAb;AACA,QAAM,SAAS,gBAAS,CAAC,CAAC,GAAF,CAAM,EAAN,EAAU,GAAV,EAAe,EAAf,CAAT,QAAf;AAEA,QAAM,KAAK,GAAG,EAAd;AAEA,EAAA,KAAK,CAAC,IAAN,CAAW,OAAX;;AACA,MAAI,KAAJ,EAAW;AACV,IAAA,KAAK,CAAC,IAAN,cAAiB,CAAC,CAAC,KAAF,CAAQ,KAAR,EAAe,GAAf,CAAjB;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,OAAX;AACA;;AACD,EAAA,KAAK,CAAC,IAAN,CAAW,SAAX;AAEA,GAAC,GAAG,KAAJ,EAAW,GAAG,QAAQ,CAAC,GAAT,CAAc,IAAD,iBAAgB,CAAC,CAAC,IAAF,CAAO,IAAP,EAAa,GAAb,CAAhB,QAAb,CAAd,EAAoE,SAApE,EAA+E,OAA/E,EAAwF,OAAxF,CAAiG,IAAD,IAC/F,OAAO,CAAC,GAAR,CAAY,KAAK,GAAG,MAAM,CAAC,KAAD,CAAN,CAAc,IAAd,CAAH,GAAyB,IAA1C,CADD;AAGA;;AAEK,SAAU,YAAV,CAAuB,KAAvB,EAAsC,OAAtC,EAAqD;AAC1D,EAAA,OAAO,CAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,CAAP;AACA;;AAEK,SAAU,cAAV,CAAyB,KAAzB,EAAwC,OAAxC,EAAuD;AAC5D,EAAA,OAAO,CAAC,KAAD,EAAQ,OAAR,EAAiB,OAAjB,CAAP;AACA;;AAEK,SAAU,cAAV,CAAyB,KAAzB,EAAwC,OAAxC,EAAuD;AAC5D,EAAA,OAAO,CAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,CAAP;AACA","sourcesContent":["import s from 'underscore.string';\nimport * as colors from 'colorette';\n\n// force enable colors on dev env\nif (process.env.NODE_ENV !== 'production') {\n\tcolors.options.enabled = true;\n}\n\ntype LogColors = 'white' | 'blue' | 'green' | 'magenta' | 'red';\n\nexport function showBox(title: string, message: string, color?: LogColors): void {\n\tconst msgLines = message.split('\\n');\n\n\tconst len = Math.max.apply(\n\t\tnull,\n\t\tmsgLines.map((line) => line.length),\n\t);\n\n\tconst topLine = `+--${s.pad('', len, '-')}--+`;\n\tconst separator = `|  ${s.pad('', len, '')}  |`;\n\n\tconst lines = [];\n\n\tlines.push(topLine);\n\tif (title) {\n\t\tlines.push(`|  ${s.lrpad(title, len)}  |`);\n\t\tlines.push(topLine);\n\t}\n\tlines.push(separator);\n\n\t[...lines, ...msgLines.map((line) => `|  ${s.rpad(line, len)}  |`), separator, topLine].forEach((line) =>\n\t\tconsole.log(color ? colors[color](line) : line),\n\t);\n}\n\nexport function showErrorBox(title: string, message: string): void {\n\tshowBox(title, message, 'red');\n}\n\nexport function showSuccessBox(title: string, message: string): void {\n\tshowBox(title, message, 'green');\n}\n\nexport function showWarningBox(title: string, message: string): void {\n\tshowBox(title, message, 'magenta');\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"34eef7c3b70b3a1148fe3e79dc8f9e906c4c99fc"}

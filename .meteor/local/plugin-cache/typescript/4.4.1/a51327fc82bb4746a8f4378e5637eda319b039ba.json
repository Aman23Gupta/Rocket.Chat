{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authentication/server/hooks/login.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/authentication/server/hooks/login.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authentication/server/hooks/login.ts","inputSourceMap":{"version":3,"file":"app/authentication/server/hooks/login.ts","sourceRoot":"","sources":["app/authentication/server/hooks/login.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAGhD,OAAO,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,MAAM,8BAA8B,CAAC;AAC5F,OAAO,EAAE,sBAAsB,EAAE,MAAM,yBAAyB,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEpD,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAoB,EAAE,EAAE;IAChD,IAAI,QAAQ,CAAC,GAAG,CAAC,sCAAsC,CAAC,EAAE;QACzD,uBAAuB,CAAC,KAAK,CAAC,CAAC;KAC/B;IAED,sBAAsB,CAAC,KAAK,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAEH,SAAS,CAAC,GAAG,CAAC,oBAAoB,EAAE,CAAC,KAAoB,EAAE,EAAE;IAC5D,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sCAAsC,CAAC,EAAE;QAC1D,OAAO;KACP;IAED,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\n\nimport { ILoginAttempt } from '../ILoginAttempt';\nimport { saveFailedLoginAttempts, saveSuccessfulLogin } from '../lib/restrictLoginAttempts';\nimport { logFailedLoginAttempts } from '../lib/logLoginAttempts';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { settings } from '../../../settings/server';\n\nAccounts.onLoginFailure((login: ILoginAttempt) => {\n\tif (settings.get('Block_Multiple_Failed_Logins_Enabled')) {\n\t\tsaveFailedLoginAttempts(login);\n\t}\n\n\tlogFailedLoginAttempts(login);\n});\n\ncallbacks.add('afterValidateLogin', (login: ILoginAttempt) => {\n\tif (!settings.get('Block_Multiple_Failed_Logins_Enabled')) {\n\t\treturn;\n\t}\n\n\tsaveSuccessfulLogin(login);\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authentication/server/hooks/login.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authentication/server/hooks/login.ts"}},"code":"let Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nlet saveFailedLoginAttempts, saveSuccessfulLogin;\nmodule.link(\"../lib/restrictLoginAttempts\", {\n  saveFailedLoginAttempts(v) {\n    saveFailedLoginAttempts = v;\n  },\n\n  saveSuccessfulLogin(v) {\n    saveSuccessfulLogin = v;\n  }\n\n}, 1);\nlet logFailedLoginAttempts;\nmodule.link(\"../lib/logLoginAttempts\", {\n  logFailedLoginAttempts(v) {\n    logFailedLoginAttempts = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nAccounts.onLoginFailure(login => {\n  if (settings.get('Block_Multiple_Failed_Logins_Enabled')) {\n    saveFailedLoginAttempts(login);\n  }\n\n  logFailedLoginAttempts(login);\n});\ncallbacks.add('afterValidateLogin', login => {\n  if (!settings.get('Block_Multiple_Failed_Logins_Enabled')) {\n    return;\n  }\n\n  saveSuccessfulLogin(login);\n});","map":{"version":3,"sources":["app/authentication/server/hooks/login.ts"],"names":[],"mappings":"AAAA,IAAA,QAAA;AAAS,MAAU,CAAA,IAAV,CAAgB,sBAAhB,EAAuC;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAvC,EAAuC,CAAvC;AAAuC,IAAA,uBAAA,EAAA,mBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,uBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,sBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,sBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,sBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQhD,QAAQ,CAAC,cAAT,CAAyB,KAAD,IAAyB;AAChD,MAAI,QAAQ,CAAC,GAAT,CAAa,sCAAb,CAAJ,EAA0D;AACzD,IAAA,uBAAuB,CAAC,KAAD,CAAvB;AACA;;AAED,EAAA,sBAAsB,CAAC,KAAD,CAAtB;AACA,CAND;AAQA,SAAS,CAAC,GAAV,CAAc,oBAAd,EAAqC,KAAD,IAAyB;AAC5D,MAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,sCAAb,CAAL,EAA2D;AAC1D;AACA;;AAED,EAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA,CAND","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\n\nimport { ILoginAttempt } from '../ILoginAttempt';\nimport { saveFailedLoginAttempts, saveSuccessfulLogin } from '../lib/restrictLoginAttempts';\nimport { logFailedLoginAttempts } from '../lib/logLoginAttempts';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { settings } from '../../../settings/server';\n\nAccounts.onLoginFailure((login: ILoginAttempt) => {\n\tif (settings.get('Block_Multiple_Failed_Logins_Enabled')) {\n\t\tsaveFailedLoginAttempts(login);\n\t}\n\n\tlogFailedLoginAttempts(login);\n});\n\ncallbacks.add('afterValidateLogin', (login: ILoginAttempt) => {\n\tif (!settings.get('Block_Multiple_Failed_Logins_Enabled')) {\n\t\treturn;\n\t}\n\n\tsaveSuccessfulLogin(login);\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"a51327fc82bb4746a8f4378e5637eda319b039ba"}

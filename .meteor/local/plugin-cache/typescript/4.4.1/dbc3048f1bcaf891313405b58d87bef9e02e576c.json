{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/lib/getTimezone.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/utils/server/lib/getTimezone.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/lib/getTimezone.ts","inputSourceMap":{"version":3,"file":"app/utils/server/lib/getTimezone.ts","sourceRoot":"","sources":["app/utils/server/lib/getTimezone.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAErC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAGpD,MAAM,SAAS,GAAG,CAAC,MAAuB,EAAU,EAAE;IACrD,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IACpC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACzC,MAAM,UAAU,GAAG,CAAC,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC;IAEjD,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,CAAC;AACtF,CAAC,CAAC;AAEF,MAAM,uBAAuB,GAAG,CAAC,MAAuB,EAAU,EAAE,CACnE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAEjH,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,IAAoC,EAAgC,EAAE;IACjG,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAEhE,QAAQ,QAAQ,EAAE;QACjB,KAAK,QAAQ;YACZ,OAAO,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAChD,KAAK,MAAM;YACV,OAAO,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD;YACC,OAAO,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;KAC1B;AACF,CAAC,CAAC","sourcesContent":["import moment from 'moment-timezone';\n\nimport { settings } from '../../../settings/server';\nimport { SettingValue } from '../../../../definition/ISetting';\n\nconst padOffset = (offset: string | number): string => {\n\tconst numberOffset = Number(offset);\n\tconst absOffset = Math.abs(numberOffset);\n\tconst isNegative = !(numberOffset === absOffset);\n\n\treturn `${isNegative ? '-' : '+'}${absOffset < 10 ? `0${absOffset}` : absOffset}:00`;\n};\n\nconst guessTimezoneFromOffset = (offset: string | number): string =>\n\tmoment.tz.names().find((tz) => padOffset(offset) === moment.tz(tz).format('Z').toString()) || moment.tz.guess();\n\nexport const getTimezone = (user: { utcOffset: string | number }): string | void | SettingValue => {\n\tconst timezone = settings.get('Default_Timezone_For_Reporting');\n\n\tswitch (timezone) {\n\t\tcase 'custom':\n\t\t\treturn settings.get('Default_Custom_Timezone');\n\t\tcase 'user':\n\t\t\treturn guessTimezoneFromOffset(user.utcOffset);\n\t\tdefault:\n\t\t\treturn moment.tz.guess();\n\t}\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/lib/getTimezone.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/server/lib/getTimezone.ts"}},"code":"module.export({\n  getTimezone: () => getTimezone\n});\nlet moment;\nmodule.link(\"moment-timezone\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\n\nconst padOffset = offset => {\n  const numberOffset = Number(offset);\n  const absOffset = Math.abs(numberOffset);\n  const isNegative = !(numberOffset === absOffset);\n  return \"\".concat(isNegative ? '-' : '+').concat(absOffset < 10 ? \"0\".concat(absOffset) : absOffset, \":00\");\n};\n\nconst guessTimezoneFromOffset = offset => moment.tz.names().find(tz => padOffset(offset) === moment.tz(tz).format('Z').toString()) || moment.tz.guess();\n\nconst getTimezone = user => {\n  const timezone = settings.get('Default_Timezone_For_Reporting');\n\n  switch (timezone) {\n    case 'custom':\n      return settings.get('Default_Custom_Timezone');\n\n    case 'user':\n      return guessTimezoneFromOffset(user.utcOffset);\n\n    default:\n      return moment.tz.guess();\n  }\n};","map":{"version":3,"sources":["app/utils/server/lib/getTimezone.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAa;AAAA,EAAA,WAAM,EAAA,MAAA;AAAN,CAAb;AAAqC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAKrC,MAAM,SAAS,GAAI,MAAD,IAAoC;AACrD,QAAM,YAAY,GAAG,MAAM,CAAC,MAAD,CAA3B;AACA,QAAM,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,YAAT,CAAlB;AACA,QAAM,UAAU,GAAG,EAAE,YAAY,KAAK,SAAnB,CAAnB;AAEA,mBAAU,UAAU,GAAG,GAAH,GAAS,GAA7B,SAAmC,SAAS,GAAG,EAAZ,cAAqB,SAArB,IAAmC,SAAtE;AACA,CAND;;AAQA,MAAM,uBAAuB,GAAI,MAAD,IAC/B,MAAM,CAAC,EAAP,CAAU,KAAV,GAAkB,IAAlB,CAAwB,EAAD,IAAQ,SAAS,CAAC,MAAD,CAAT,KAAsB,MAAM,CAAC,EAAP,CAAU,EAAV,EAAc,MAAd,CAAqB,GAArB,EAA0B,QAA1B,EAArD,KAA8F,MAAM,CAAC,EAAP,CAAU,KAAV,EAD/F;;AAGO,MAAM,WAAW,GAAI,IAAD,IAAuE;AACjG,QAAM,QAAQ,GAAG,QAAQ,CAAC,GAAT,CAAa,gCAAb,CAAjB;;AAEA,UAAQ,QAAR;AACC,SAAK,QAAL;AACC,aAAO,QAAQ,CAAC,GAAT,CAAa,yBAAb,CAAP;;AACD,SAAK,MAAL;AACC,aAAO,uBAAuB,CAAC,IAAI,CAAC,SAAN,CAA9B;;AACD;AACC,aAAO,MAAM,CAAC,EAAP,CAAU,KAAV,EAAP;AANF;AAQA,CAXM","sourcesContent":["import moment from 'moment-timezone';\n\nimport { settings } from '../../../settings/server';\nimport { SettingValue } from '../../../../definition/ISetting';\n\nconst padOffset = (offset: string | number): string => {\n\tconst numberOffset = Number(offset);\n\tconst absOffset = Math.abs(numberOffset);\n\tconst isNegative = !(numberOffset === absOffset);\n\n\treturn `${isNegative ? '-' : '+'}${absOffset < 10 ? `0${absOffset}` : absOffset}:00`;\n};\n\nconst guessTimezoneFromOffset = (offset: string | number): string =>\n\tmoment.tz.names().find((tz) => padOffset(offset) === moment.tz(tz).format('Z').toString()) || moment.tz.guess();\n\nexport const getTimezone = (user: { utcOffset: string | number }): string | void | SettingValue => {\n\tconst timezone = settings.get('Default_Timezone_For_Reporting');\n\n\tswitch (timezone) {\n\t\tcase 'custom':\n\t\t\treturn settings.get('Default_Custom_Timezone');\n\t\tcase 'user':\n\t\t\treturn guessTimezoneFromOffset(user.utcOffset);\n\t\tdefault:\n\t\t\treturn moment.tz.guess();\n\t}\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"dbc3048f1bcaf891313405b58d87bef9e02e576c"}

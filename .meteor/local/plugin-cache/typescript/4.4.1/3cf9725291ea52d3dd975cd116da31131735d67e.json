{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/discussion/server/config.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/discussion/server/config.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/discussion/server/config.ts","inputSourceMap":{"version":3,"file":"app/discussion/server/config.ts","sourceRoot":"","sources":["app/discussion/server/config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,gBAAgB,CAAC,QAAQ,CAAC,YAAY,EAAE;IACvC,6EAA6E;IAE7E,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,EAAE;QACpC,KAAK,EAAE,YAAY;QACnB,SAAS,EAAE,QAAQ;QACnB,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,IAAI;KACZ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,WAAW,GAAG;IACnB,GAAG,EAAE,yBAAyB;IAC9B,KAAK,EAAE,IAAI;CACX,CAAC;AAEF,gBAAgB,CAAC,GAAG,CAAC,sCAAsC,EAAE,IAAI,EAAE;IAClE,KAAK,EAAE,iBAAiB;IACxB,OAAO,EAAE,eAAe;IACxB,IAAI,EAAE,SAAS;IACf,MAAM,EAAE,IAAI;IACZ,SAAS,EAAE,sCAAsC;IACjD,eAAe,EAAE,kDAAkD;IACnE,WAAW,EAAE,WAAW;CACxB,CAAC,CAAC;AAEH,gBAAgB,CAAC,GAAG,CAAC,mCAAmC,EAAE,IAAI,EAAE;IAC/D,KAAK,EAAE,iBAAiB;IACxB,OAAO,EAAE,eAAe;IACxB,IAAI,EAAE,SAAS;IACf,MAAM,EAAE,IAAI;IACZ,SAAS,EAAE,mCAAmC;IAC9C,eAAe,EAAE,+CAA+C;IAChE,WAAW,EAAE,WAAW;CACxB,CAAC,CAAC","sourcesContent":["import { settingsRegistry } from '../../settings/server';\n\nsettingsRegistry.addGroup('Discussion', function () {\n\t// the channel for which discussions are created if none is explicitly chosen\n\n\tthis.add('Discussion_enabled', true, {\n\t\tgroup: 'Discussion',\n\t\ti18nLabel: 'Enable',\n\t\ttype: 'boolean',\n\t\tpublic: true,\n\t});\n});\n\nconst globalQuery = {\n\t_id: 'RetentionPolicy_Enabled',\n\tvalue: true,\n};\n\nsettingsRegistry.add('RetentionPolicy_DoNotPruneDiscussion', true, {\n\tgroup: 'RetentionPolicy',\n\tsection: 'Global Policy',\n\ttype: 'boolean',\n\tpublic: true,\n\ti18nLabel: 'RetentionPolicy_DoNotPruneDiscussion',\n\ti18nDescription: 'RetentionPolicy_DoNotPruneDiscussion_Description',\n\tenableQuery: globalQuery,\n});\n\nsettingsRegistry.add('RetentionPolicy_DoNotPruneThreads', true, {\n\tgroup: 'RetentionPolicy',\n\tsection: 'Global Policy',\n\ttype: 'boolean',\n\tpublic: true,\n\ti18nLabel: 'RetentionPolicy_DoNotPruneThreads',\n\ti18nDescription: 'RetentionPolicy_DoNotPruneThreads_Description',\n\tenableQuery: globalQuery,\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/discussion/server/config.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/discussion/server/config.ts"}},"code":"let settingsRegistry;\nmodule.link(\"../../settings/server\", {\n  settingsRegistry(v) {\n    settingsRegistry = v;\n  }\n\n}, 0);\nsettingsRegistry.addGroup('Discussion', function () {\n  // the channel for which discussions are created if none is explicitly chosen\n  this.add('Discussion_enabled', true, {\n    group: 'Discussion',\n    i18nLabel: 'Enable',\n    type: 'boolean',\n    public: true\n  });\n});\nconst globalQuery = {\n  _id: 'RetentionPolicy_Enabled',\n  value: true\n};\nsettingsRegistry.add('RetentionPolicy_DoNotPruneDiscussion', true, {\n  group: 'RetentionPolicy',\n  section: 'Global Policy',\n  type: 'boolean',\n  public: true,\n  i18nLabel: 'RetentionPolicy_DoNotPruneDiscussion',\n  i18nDescription: 'RetentionPolicy_DoNotPruneDiscussion_Description',\n  enableQuery: globalQuery\n});\nsettingsRegistry.add('RetentionPolicy_DoNotPruneThreads', true, {\n  group: 'RetentionPolicy',\n  section: 'Global Policy',\n  type: 'boolean',\n  public: true,\n  i18nLabel: 'RetentionPolicy_DoNotPruneThreads',\n  i18nDescription: 'RetentionPolicy_DoNotPruneThreads_Description',\n  enableQuery: globalQuery\n});","map":{"version":3,"sources":["app/discussion/server/config.ts"],"names":[],"mappings":"AAAA,IAAA,gBAAA;AAAS,MAAkB,CAAA,IAAlB,CAAwB,uBAAxB,EAAgD;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAhD,EAAgD,CAAhD;AAET,gBAAgB,CAAC,QAAjB,CAA0B,YAA1B,EAAwC,YAAA;AACvC;AAEA,OAAK,GAAL,CAAS,oBAAT,EAA+B,IAA/B,EAAqC;AACpC,IAAA,KAAK,EAAE,YAD6B;AAEpC,IAAA,SAAS,EAAE,QAFyB;AAGpC,IAAA,IAAI,EAAE,SAH8B;AAIpC,IAAA,MAAM,EAAE;AAJ4B,GAArC;AAMA,CATD;AAWA,MAAM,WAAW,GAAG;AACnB,EAAA,GAAG,EAAE,yBADc;AAEnB,EAAA,KAAK,EAAE;AAFY,CAApB;AAKA,gBAAgB,CAAC,GAAjB,CAAqB,sCAArB,EAA6D,IAA7D,EAAmE;AAClE,EAAA,KAAK,EAAE,iBAD2D;AAElE,EAAA,OAAO,EAAE,eAFyD;AAGlE,EAAA,IAAI,EAAE,SAH4D;AAIlE,EAAA,MAAM,EAAE,IAJ0D;AAKlE,EAAA,SAAS,EAAE,sCALuD;AAMlE,EAAA,eAAe,EAAE,kDANiD;AAOlE,EAAA,WAAW,EAAE;AAPqD,CAAnE;AAUA,gBAAgB,CAAC,GAAjB,CAAqB,mCAArB,EAA0D,IAA1D,EAAgE;AAC/D,EAAA,KAAK,EAAE,iBADwD;AAE/D,EAAA,OAAO,EAAE,eAFsD;AAG/D,EAAA,IAAI,EAAE,SAHyD;AAI/D,EAAA,MAAM,EAAE,IAJuD;AAK/D,EAAA,SAAS,EAAE,mCALoD;AAM/D,EAAA,eAAe,EAAE,+CAN8C;AAO/D,EAAA,WAAW,EAAE;AAPkD,CAAhE","sourcesContent":["import { settingsRegistry } from '../../settings/server';\n\nsettingsRegistry.addGroup('Discussion', function () {\n\t// the channel for which discussions are created if none is explicitly chosen\n\n\tthis.add('Discussion_enabled', true, {\n\t\tgroup: 'Discussion',\n\t\ti18nLabel: 'Enable',\n\t\ttype: 'boolean',\n\t\tpublic: true,\n\t});\n});\n\nconst globalQuery = {\n\t_id: 'RetentionPolicy_Enabled',\n\tvalue: true,\n};\n\nsettingsRegistry.add('RetentionPolicy_DoNotPruneDiscussion', true, {\n\tgroup: 'RetentionPolicy',\n\tsection: 'Global Policy',\n\ttype: 'boolean',\n\tpublic: true,\n\ti18nLabel: 'RetentionPolicy_DoNotPruneDiscussion',\n\ti18nDescription: 'RetentionPolicy_DoNotPruneDiscussion_Description',\n\tenableQuery: globalQuery,\n});\n\nsettingsRegistry.add('RetentionPolicy_DoNotPruneThreads', true, {\n\tgroup: 'RetentionPolicy',\n\tsection: 'Global Policy',\n\ttype: 'boolean',\n\tpublic: true,\n\ti18nLabel: 'RetentionPolicy_DoNotPruneThreads',\n\ti18nDescription: 'RetentionPolicy_DoNotPruneThreads_Description',\n\tenableQuery: globalQuery,\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"3cf9725291ea52d3dd975cd116da31131735d67e"}

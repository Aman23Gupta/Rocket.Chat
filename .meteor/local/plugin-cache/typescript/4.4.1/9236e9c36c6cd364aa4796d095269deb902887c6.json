{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/visitor.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/v1/visitor.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/visitor.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/visitor.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/visitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\n\nimport { LivechatRooms, LivechatVisitors, LivechatCustomField } from '../../../../models/server';\nimport { LivechatVisitors as VisitorsRaw } from '../../../../models/server/raw';\nimport { API } from '../../../../api/server';\nimport { findGuest, normalizeHttpHeaderData } from '../lib/livechat';\nimport { Livechat } from '../../lib/Livechat';\nimport { ILivechatVisitorDTO } from '../../../../../definition/ILivechatVisitor';\nimport { IRoom } from '../../../../../definition/IRoom';\n\nAPI.v1.addRoute('livechat/visitor', {\n\tasync post() {\n\t\tcheck(this.bodyParams, {\n\t\t\tvisitor: Match.ObjectIncluding({\n\t\t\t\ttoken: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t\temail: Match.Maybe(String),\n\t\t\t\tdepartment: Match.Maybe(String),\n\t\t\t\tphone: Match.Maybe(String),\n\t\t\t\tusername: Match.Maybe(String),\n\t\t\t\tcustomFields: Match.Maybe([\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tkey: String,\n\t\t\t\t\t\tvalue: String,\n\t\t\t\t\t\toverwrite: Boolean,\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t}),\n\t\t});\n\n\t\tconst { token, customFields } = this.bodyParams.visitor;\n\t\tconst guest: ILivechatVisitorDTO = { ...this.bodyParams.visitor };\n\n\t\tif (this.bodyParams.visitor.phone) {\n\t\t\tguest.phone = { number: this.bodyParams.visitor.phone as string };\n\t\t}\n\n\t\tguest.connectionData = normalizeHttpHeaderData(this.request.headers);\n\t\tconst visitorId = Livechat.registerGuest(guest);\n\n\t\tlet visitor = await VisitorsRaw.getVisitorByToken(token, {});\n\t\t// If it's updating an existing visitor, it must also update the roomInfo\n\t\tconst cursor = LivechatRooms.findOpenByVisitorToken(token);\n\t\tcursor.forEach((room: IRoom) => {\n\t\t\tLivechat.saveRoomInfo(room, visitor);\n\t\t});\n\n\t\tif (customFields && customFields instanceof Array) {\n\t\t\tcustomFields.forEach((field) => {\n\t\t\t\tconst customField = LivechatCustomField.findOneById(field.key);\n\t\t\t\tif (!customField) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst { key, value, overwrite } = field;\n\t\t\t\tif (customField.scope === 'visitor' && !LivechatVisitors.updateLivechatDataByToken(token, key, value, overwrite)) {\n\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvisitor = await VisitorsRaw.findOneById(visitorId, {});\n\t\t}\n\n\t\tif (!visitor) {\n\t\t\tthrow new Meteor.Error('error-saving-visitor', 'An error ocurred while saving visitor');\n\t\t}\n\n\t\treturn API.v1.success({ visitor });\n\t},\n});\n\nAPI.v1.addRoute('livechat/visitor/:token', {\n\tasync get() {\n\t\tcheck(this.urlParams, {\n\t\t\ttoken: String,\n\t\t});\n\n\t\tconst visitor = await VisitorsRaw.getVisitorByToken(this.urlParams.token, {});\n\n\t\tif (!visitor) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\n\t\treturn API.v1.success({ visitor });\n\t},\n\tasync delete() {\n\t\tcheck(this.urlParams, {\n\t\t\ttoken: String,\n\t\t});\n\n\t\tconst visitor = await VisitorsRaw.getVisitorByToken(this.urlParams.token, {});\n\t\tif (!visitor) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\n\t\tconst rooms = LivechatRooms.findOpenByVisitorToken(this.urlParams.token, {\n\t\t\tfields: {\n\t\t\t\tname: 1,\n\t\t\t\tt: 1,\n\t\t\t\tcl: 1,\n\t\t\t\tu: 1,\n\t\t\t\tusernames: 1,\n\t\t\t\tservedBy: 1,\n\t\t\t},\n\t\t}).fetch();\n\n\t\tif (rooms?.length) {\n\t\t\tthrow new Meteor.Error('visitor-has-open-rooms', 'Cannot remove visitors with opened rooms');\n\t\t}\n\n\t\tconst { _id } = visitor;\n\t\tconst result = Livechat.removeGuest(_id);\n\t\tif (!result) {\n\t\t\tthrow new Meteor.Error('error-removing-visitor', 'An error ocurred while deleting visitor');\n\t\t}\n\n\t\treturn API.v1.success({\n\t\t\tvisitor: {\n\t\t\t\t_id,\n\t\t\t\tts: new Date().toISOString(),\n\t\t\t},\n\t\t});\n\t},\n});\n\nAPI.v1.addRoute(\n\t'livechat/visitor/:token/room',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'] },\n\t{\n\t\tasync get() {\n\t\t\tconst rooms = LivechatRooms.findOpenByVisitorToken(this.urlParams.token, {\n\t\t\t\tfields: {\n\t\t\t\t\tname: 1,\n\t\t\t\t\tt: 1,\n\t\t\t\t\tcl: 1,\n\t\t\t\t\tu: 1,\n\t\t\t\t\tusernames: 1,\n\t\t\t\t\tservedBy: 1,\n\t\t\t\t},\n\t\t\t}).fetch();\n\t\t\treturn API.v1.success({ rooms });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute('livechat/visitor.callStatus', {\n\tasync post() {\n\t\tcheck(this.bodyParams, {\n\t\t\ttoken: String,\n\t\t\tcallStatus: String,\n\t\t\trid: String,\n\t\t\tcallId: String,\n\t\t});\n\n\t\tconst { token, callStatus, rid, callId } = this.bodyParams;\n\t\tconst guest = findGuest(token);\n\t\tif (!guest) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\t\tLivechat.updateCallStatus(callId, rid, callStatus, guest);\n\t\treturn API.v1.success({ token, callStatus });\n\t},\n});\n\nAPI.v1.addRoute('livechat/visitor.status', {\n\tasync post() {\n\t\tcheck(this.bodyParams, {\n\t\t\ttoken: String,\n\t\t\tstatus: String,\n\t\t});\n\n\t\tconst { token, status } = this.bodyParams;\n\n\t\tconst guest = findGuest(token);\n\t\tif (!guest) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\n\t\tLivechat.notifyGuestStatusChanged(token, status);\n\n\t\treturn API.v1.success({ token, status });\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/visitor.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/v1/visitor.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet LivechatRooms, LivechatVisitors, LivechatCustomField;\nmodule.link(\"../../../../models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  },\n\n  LivechatCustomField(v) {\n    LivechatCustomField = v;\n  }\n\n}, 2);\nlet VisitorsRaw;\nmodule.link(\"../../../../models/server/raw\", {\n  LivechatVisitors(v) {\n    VisitorsRaw = v;\n  }\n\n}, 3);\nlet API;\nmodule.link(\"../../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 4);\nlet findGuest, normalizeHttpHeaderData;\nmodule.link(\"../lib/livechat\", {\n  findGuest(v) {\n    findGuest = v;\n  },\n\n  normalizeHttpHeaderData(v) {\n    normalizeHttpHeaderData = v;\n  }\n\n}, 5);\nlet Livechat;\nmodule.link(\"../../lib/Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 6);\nAPI.v1.addRoute('livechat/visitor', {\n  post() {\n    return Promise.asyncApply(() => {\n      check(this.bodyParams, {\n        visitor: Match.ObjectIncluding({\n          token: String,\n          name: Match.Maybe(String),\n          email: Match.Maybe(String),\n          department: Match.Maybe(String),\n          phone: Match.Maybe(String),\n          username: Match.Maybe(String),\n          customFields: Match.Maybe([Match.ObjectIncluding({\n            key: String,\n            value: String,\n            overwrite: Boolean\n          })])\n        })\n      });\n      const {\n        token,\n        customFields\n      } = this.bodyParams.visitor;\n\n      const guest = _objectSpread({}, this.bodyParams.visitor);\n\n      if (this.bodyParams.visitor.phone) {\n        guest.phone = {\n          number: this.bodyParams.visitor.phone\n        };\n      }\n\n      guest.connectionData = normalizeHttpHeaderData(this.request.headers);\n      const visitorId = Livechat.registerGuest(guest);\n      let visitor = Promise.await(VisitorsRaw.getVisitorByToken(token, {})); // If it's updating an existing visitor, it must also update the roomInfo\n\n      const cursor = LivechatRooms.findOpenByVisitorToken(token);\n      cursor.forEach(room => {\n        Livechat.saveRoomInfo(room, visitor);\n      });\n\n      if (customFields && customFields instanceof Array) {\n        customFields.forEach(field => {\n          const customField = LivechatCustomField.findOneById(field.key);\n\n          if (!customField) {\n            return;\n          }\n\n          const {\n            key,\n            value,\n            overwrite\n          } = field;\n\n          if (customField.scope === 'visitor' && !LivechatVisitors.updateLivechatDataByToken(token, key, value, overwrite)) {\n            return API.v1.failure();\n          }\n        });\n        visitor = Promise.await(VisitorsRaw.findOneById(visitorId, {}));\n      }\n\n      if (!visitor) {\n        throw new Meteor.Error('error-saving-visitor', 'An error ocurred while saving visitor');\n      }\n\n      return API.v1.success({\n        visitor\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/visitor/:token', {\n  get() {\n    return Promise.asyncApply(() => {\n      check(this.urlParams, {\n        token: String\n      });\n      const visitor = Promise.await(VisitorsRaw.getVisitorByToken(this.urlParams.token, {}));\n\n      if (!visitor) {\n        throw new Meteor.Error('invalid-token');\n      }\n\n      return API.v1.success({\n        visitor\n      });\n    });\n  },\n\n  delete() {\n    return Promise.asyncApply(() => {\n      check(this.urlParams, {\n        token: String\n      });\n      const visitor = Promise.await(VisitorsRaw.getVisitorByToken(this.urlParams.token, {}));\n\n      if (!visitor) {\n        throw new Meteor.Error('invalid-token');\n      }\n\n      const rooms = LivechatRooms.findOpenByVisitorToken(this.urlParams.token, {\n        fields: {\n          name: 1,\n          t: 1,\n          cl: 1,\n          u: 1,\n          usernames: 1,\n          servedBy: 1\n        }\n      }).fetch();\n\n      if (rooms !== null && rooms !== void 0 && rooms.length) {\n        throw new Meteor.Error('visitor-has-open-rooms', 'Cannot remove visitors with opened rooms');\n      }\n\n      const {\n        _id\n      } = visitor;\n      const result = Livechat.removeGuest(_id);\n\n      if (!result) {\n        throw new Meteor.Error('error-removing-visitor', 'An error ocurred while deleting visitor');\n      }\n\n      return API.v1.success({\n        visitor: {\n          _id,\n          ts: new Date().toISOString()\n        }\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/visitor/:token/room', {\n  authRequired: true,\n  permissionsRequired: ['view-livechat-manager']\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const rooms = LivechatRooms.findOpenByVisitorToken(this.urlParams.token, {\n        fields: {\n          name: 1,\n          t: 1,\n          cl: 1,\n          u: 1,\n          usernames: 1,\n          servedBy: 1\n        }\n      }).fetch();\n      return API.v1.success({\n        rooms\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/visitor.callStatus', {\n  post() {\n    return Promise.asyncApply(() => {\n      check(this.bodyParams, {\n        token: String,\n        callStatus: String,\n        rid: String,\n        callId: String\n      });\n      const {\n        token,\n        callStatus,\n        rid,\n        callId\n      } = this.bodyParams;\n      const guest = findGuest(token);\n\n      if (!guest) {\n        throw new Meteor.Error('invalid-token');\n      }\n\n      Livechat.updateCallStatus(callId, rid, callStatus, guest);\n      return API.v1.success({\n        token,\n        callStatus\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/visitor.status', {\n  post() {\n    return Promise.asyncApply(() => {\n      check(this.bodyParams, {\n        token: String,\n        status: String\n      });\n      const {\n        token,\n        status\n      } = this.bodyParams;\n      const guest = findGuest(token);\n\n      if (!guest) {\n        throw new Meteor.Error('invalid-token');\n      }\n\n      Livechat.notifyGuestStatusChanged(token, status);\n      return API.v1.success({\n        token,\n        status\n      });\n    });\n  }\n\n});","map":{"version":3,"sources":["app/livechat/server/api/v1/visitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\n\nimport { LivechatRooms, LivechatVisitors, LivechatCustomField } from '../../../../models/server';\nimport { LivechatVisitors as VisitorsRaw } from '../../../../models/server/raw';\nimport { API } from '../../../../api/server';\nimport { findGuest, normalizeHttpHeaderData } from '../lib/livechat';\nimport { Livechat } from '../../lib/Livechat';\nimport { ILivechatVisitorDTO } from '../../../../../definition/ILivechatVisitor';\nimport { IRoom } from '../../../../../definition/IRoom';\n\nAPI.v1.addRoute('livechat/visitor', {\n\tasync post() {\n\t\tcheck(this.bodyParams, {\n\t\t\tvisitor: Match.ObjectIncluding({\n\t\t\t\ttoken: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t\temail: Match.Maybe(String),\n\t\t\t\tdepartment: Match.Maybe(String),\n\t\t\t\tphone: Match.Maybe(String),\n\t\t\t\tusername: Match.Maybe(String),\n\t\t\t\tcustomFields: Match.Maybe([\n\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\tkey: String,\n\t\t\t\t\t\tvalue: String,\n\t\t\t\t\t\toverwrite: Boolean,\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t}),\n\t\t});\n\n\t\tconst { token, customFields } = this.bodyParams.visitor;\n\t\tconst guest: ILivechatVisitorDTO = { ...this.bodyParams.visitor };\n\n\t\tif (this.bodyParams.visitor.phone) {\n\t\t\tguest.phone = { number: this.bodyParams.visitor.phone as string };\n\t\t}\n\n\t\tguest.connectionData = normalizeHttpHeaderData(this.request.headers);\n\t\tconst visitorId = Livechat.registerGuest(guest);\n\n\t\tlet visitor = await VisitorsRaw.getVisitorByToken(token, {});\n\t\t// If it's updating an existing visitor, it must also update the roomInfo\n\t\tconst cursor = LivechatRooms.findOpenByVisitorToken(token);\n\t\tcursor.forEach((room: IRoom) => {\n\t\t\tLivechat.saveRoomInfo(room, visitor);\n\t\t});\n\n\t\tif (customFields && customFields instanceof Array) {\n\t\t\tcustomFields.forEach((field) => {\n\t\t\t\tconst customField = LivechatCustomField.findOneById(field.key);\n\t\t\t\tif (!customField) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst { key, value, overwrite } = field;\n\t\t\t\tif (customField.scope === 'visitor' && !LivechatVisitors.updateLivechatDataByToken(token, key, value, overwrite)) {\n\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvisitor = await VisitorsRaw.findOneById(visitorId, {});\n\t\t}\n\n\t\tif (!visitor) {\n\t\t\tthrow new Meteor.Error('error-saving-visitor', 'An error ocurred while saving visitor');\n\t\t}\n\n\t\treturn API.v1.success({ visitor });\n\t},\n});\n\nAPI.v1.addRoute('livechat/visitor/:token', {\n\tasync get() {\n\t\tcheck(this.urlParams, {\n\t\t\ttoken: String,\n\t\t});\n\n\t\tconst visitor = await VisitorsRaw.getVisitorByToken(this.urlParams.token, {});\n\n\t\tif (!visitor) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\n\t\treturn API.v1.success({ visitor });\n\t},\n\tasync delete() {\n\t\tcheck(this.urlParams, {\n\t\t\ttoken: String,\n\t\t});\n\n\t\tconst visitor = await VisitorsRaw.getVisitorByToken(this.urlParams.token, {});\n\t\tif (!visitor) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\n\t\tconst rooms = LivechatRooms.findOpenByVisitorToken(this.urlParams.token, {\n\t\t\tfields: {\n\t\t\t\tname: 1,\n\t\t\t\tt: 1,\n\t\t\t\tcl: 1,\n\t\t\t\tu: 1,\n\t\t\t\tusernames: 1,\n\t\t\t\tservedBy: 1,\n\t\t\t},\n\t\t}).fetch();\n\n\t\tif (rooms?.length) {\n\t\t\tthrow new Meteor.Error('visitor-has-open-rooms', 'Cannot remove visitors with opened rooms');\n\t\t}\n\n\t\tconst { _id } = visitor;\n\t\tconst result = Livechat.removeGuest(_id);\n\t\tif (!result) {\n\t\t\tthrow new Meteor.Error('error-removing-visitor', 'An error ocurred while deleting visitor');\n\t\t}\n\n\t\treturn API.v1.success({\n\t\t\tvisitor: {\n\t\t\t\t_id,\n\t\t\t\tts: new Date().toISOString(),\n\t\t\t},\n\t\t});\n\t},\n});\n\nAPI.v1.addRoute(\n\t'livechat/visitor/:token/room',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'] },\n\t{\n\t\tasync get() {\n\t\t\tconst rooms = LivechatRooms.findOpenByVisitorToken(this.urlParams.token, {\n\t\t\t\tfields: {\n\t\t\t\t\tname: 1,\n\t\t\t\t\tt: 1,\n\t\t\t\t\tcl: 1,\n\t\t\t\t\tu: 1,\n\t\t\t\t\tusernames: 1,\n\t\t\t\t\tservedBy: 1,\n\t\t\t\t},\n\t\t\t}).fetch();\n\t\t\treturn API.v1.success({ rooms });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute('livechat/visitor.callStatus', {\n\tasync post() {\n\t\tcheck(this.bodyParams, {\n\t\t\ttoken: String,\n\t\t\tcallStatus: String,\n\t\t\trid: String,\n\t\t\tcallId: String,\n\t\t});\n\n\t\tconst { token, callStatus, rid, callId } = this.bodyParams;\n\t\tconst guest = findGuest(token);\n\t\tif (!guest) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\t\tLivechat.updateCallStatus(callId, rid, callStatus, guest);\n\t\treturn API.v1.success({ token, callStatus });\n\t},\n});\n\nAPI.v1.addRoute('livechat/visitor.status', {\n\tasync post() {\n\t\tcheck(this.bodyParams, {\n\t\t\ttoken: String,\n\t\t\tstatus: String,\n\t\t});\n\n\t\tconst { token, status } = this.bodyParams;\n\n\t\tconst guest = findGuest(token);\n\t\tif (!guest) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\n\t\tLivechat.notifyGuestStatusChanged(token, status);\n\n\t\treturn API.v1.success({ token, status });\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"9236e9c36c6cd364aa4796d095269deb902887c6"}

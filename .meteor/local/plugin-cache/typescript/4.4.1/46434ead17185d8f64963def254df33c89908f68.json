{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/lib/Api.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/sdk/lib/Api.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/lib/Api.ts","inputSourceMap":{"version":3,"file":"server/sdk/lib/Api.ts","sourceRoot":"","sources":["server/sdk/lib/Api.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,MAAM,OAAO,GAAG;IACP,QAAQ,GAAG,IAAI,GAAG,EAAgB,CAAC;IAEnC,MAAM,GAAY,IAAI,WAAW,EAAE,CAAC;IAE5C,oEAAoE;IACpE,SAAS,CAAC,MAAe;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,cAAc,CAAC,QAAsB;QACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACjC,OAAO;SACP;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,eAAe,CAAC,QAAsB;QACrC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAE5B,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACpC;IACF,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,MAAc,EAAE,IAAS;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,MAAc,EAAE,IAAS;QAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,SAAS,CAAkC,KAAQ,EAAE,GAAG,IAAoC;QACjG,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,cAAc,CAAkC,KAAQ,EAAE,GAAG,IAAoC;QACtG,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;IACnD,CAAC;CACD","sourcesContent":["// import { BaseBroker } from './BaseBroker';\nimport { IBroker } from '../types/IBroker';\nimport { ServiceClass } from '../types/ServiceClass';\nimport { EventSignatures } from './Events';\nimport { LocalBroker } from './LocalBroker';\n\nexport class Api {\n\tprivate services = new Set<ServiceClass>();\n\n\tprivate broker: IBroker = new LocalBroker();\n\n\t// set a broker for the API and registers all services in the broker\n\tsetBroker(broker: IBroker): void {\n\t\tthis.broker = broker;\n\n\t\tthis.services.forEach((service) => this.broker.createService(service));\n\t}\n\n\tdestroyService(instance: ServiceClass): void {\n\t\tif (!this.services.has(instance)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.broker) {\n\t\t\tthis.broker.destroyService(instance);\n\t\t}\n\n\t\tthis.services.delete(instance);\n\t}\n\n\tregisterService(instance: ServiceClass): void {\n\t\tthis.services.add(instance);\n\n\t\tif (this.broker) {\n\t\t\tthis.broker.createService(instance);\n\t\t}\n\t}\n\n\tasync call(method: string, data: any): Promise<any> {\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tasync waitAndCall(method: string, data: any): Promise<any> {\n\t\treturn this.broker.waitAndCall(method, data);\n\t}\n\n\tasync broadcast<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\treturn this.broker.broadcast(event, ...args);\n\t}\n\n\tasync broadcastLocal<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\treturn this.broker.broadcastLocal(event, ...args);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/lib/Api.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/sdk/lib/Api.ts"}},"code":"module.export({\n  Api: () => Api\n});\nlet LocalBroker;\nmodule.link(\"./LocalBroker\", {\n  LocalBroker(v) {\n    LocalBroker = v;\n  }\n\n}, 0);\n\nclass Api {\n  constructor() {\n    this.services = new Set();\n    this.broker = new LocalBroker();\n  }\n\n  // set a broker for the API and registers all services in the broker\n  setBroker(broker) {\n    this.broker = broker;\n    this.services.forEach(service => this.broker.createService(service));\n  }\n\n  destroyService(instance) {\n    if (!this.services.has(instance)) {\n      return;\n    }\n\n    if (this.broker) {\n      this.broker.destroyService(instance);\n    }\n\n    this.services.delete(instance);\n  }\n\n  registerService(instance) {\n    this.services.add(instance);\n\n    if (this.broker) {\n      this.broker.createService(instance);\n    }\n  }\n\n  call(method, data) {\n    return Promise.asyncApply(() => {\n      return this.broker.call(method, data);\n    });\n  }\n\n  waitAndCall(method, data) {\n    return Promise.asyncApply(() => {\n      return this.broker.waitAndCall(method, data);\n    });\n  }\n\n  broadcast(event) {\n    return Promise.asyncApply(() => {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return this.broker.broadcast(event, ...args);\n    });\n  }\n\n  broadcastLocal(event) {\n    return Promise.asyncApply(() => {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      return this.broker.broadcastLocal(event, ...args);\n    });\n  }\n\n}","map":{"version":3,"sources":["server/sdk/lib/Api.ts"],"names":[],"mappings":"AAIA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,GAAA,EAAA,MAAa;AAAb,CAAT;AAA4B,IAAA,WAAA;AAAgB,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAEtC,MAAO,GAAP,CAAU;AAAA;AAAA,SACP,QADO,GACI,IAAI,GAAJ,EADJ;AAAA,SAGP,MAHO,GAGW,IAAI,WAAJ,EAHX;AAAA;;AAKf;AACA,EAAA,SAAS,CAAC,MAAD,EAAgB;AACxB,SAAK,MAAL,GAAc,MAAd;AAEA,SAAK,QAAL,CAAc,OAAd,CAAuB,OAAD,IAAa,KAAK,MAAL,CAAY,aAAZ,CAA0B,OAA1B,CAAnC;AACA;;AAED,EAAA,cAAc,CAAC,QAAD,EAAuB;AACpC,QAAI,CAAC,KAAK,QAAL,CAAc,GAAd,CAAkB,QAAlB,CAAL,EAAkC;AACjC;AACA;;AAED,QAAI,KAAK,MAAT,EAAiB;AAChB,WAAK,MAAL,CAAY,cAAZ,CAA2B,QAA3B;AACA;;AAED,SAAK,QAAL,CAAc,MAAd,CAAqB,QAArB;AACA;;AAED,EAAA,eAAe,CAAC,QAAD,EAAuB;AACrC,SAAK,QAAL,CAAc,GAAd,CAAkB,QAAlB;;AAEA,QAAI,KAAK,MAAT,EAAiB;AAChB,WAAK,MAAL,CAAY,aAAZ,CAA0B,QAA1B;AACA;AACD;;AAEK,EAAA,IAAI,CAAC,MAAD,EAAiB,IAAjB;AAAA,oCAA0B;AACnC,aAAO,KAAK,MAAL,CAAY,IAAZ,CAAiB,MAAjB,EAAyB,IAAzB,CAAP;AACA,KAFS;AAAA;;AAIJ,EAAA,WAAW,CAAC,MAAD,EAAiB,IAAjB;AAAA,oCAA0B;AAC1C,aAAO,KAAK,MAAL,CAAY,WAAZ,CAAwB,MAAxB,EAAgC,IAAhC,CAAP;AACA,KAFgB;AAAA;;AAIX,EAAA,SAAS,CAAkC,KAAlC;AAAA,oCAAmF;AAAA,wCAApC,IAAoC;AAApC,QAAA,IAAoC;AAAA;;AACjG,aAAO,KAAK,MAAL,CAAY,SAAZ,CAAsB,KAAtB,EAA6B,GAAG,IAAhC,CAAP;AACA,KAFc;AAAA;;AAIT,EAAA,cAAc,CAAkC,KAAlC;AAAA,oCAAmF;AAAA,yCAApC,IAAoC;AAApC,QAAA,IAAoC;AAAA;;AACtG,aAAO,KAAK,MAAL,CAAY,cAAZ,CAA2B,KAA3B,EAAkC,GAAG,IAArC,CAAP;AACA,KAFmB;AAAA;;AA5CL","sourcesContent":["// import { BaseBroker } from './BaseBroker';\nimport { IBroker } from '../types/IBroker';\nimport { ServiceClass } from '../types/ServiceClass';\nimport { EventSignatures } from './Events';\nimport { LocalBroker } from './LocalBroker';\n\nexport class Api {\n\tprivate services = new Set<ServiceClass>();\n\n\tprivate broker: IBroker = new LocalBroker();\n\n\t// set a broker for the API and registers all services in the broker\n\tsetBroker(broker: IBroker): void {\n\t\tthis.broker = broker;\n\n\t\tthis.services.forEach((service) => this.broker.createService(service));\n\t}\n\n\tdestroyService(instance: ServiceClass): void {\n\t\tif (!this.services.has(instance)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.broker) {\n\t\t\tthis.broker.destroyService(instance);\n\t\t}\n\n\t\tthis.services.delete(instance);\n\t}\n\n\tregisterService(instance: ServiceClass): void {\n\t\tthis.services.add(instance);\n\n\t\tif (this.broker) {\n\t\t\tthis.broker.createService(instance);\n\t\t}\n\t}\n\n\tasync call(method: string, data: any): Promise<any> {\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tasync waitAndCall(method: string, data: any): Promise<any> {\n\t\treturn this.broker.waitAndCall(method, data);\n\t}\n\n\tasync broadcast<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\treturn this.broker.broadcast(event, ...args);\n\t}\n\n\tasync broadcastLocal<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\treturn this.broker.broadcastLocal(event, ...args);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"46434ead17185d8f64963def254df33c89908f68"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/AppFileSystemSourceStorage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/storage/AppFileSystemSourceStorage.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/AppFileSystemSourceStorage.ts","inputSourceMap":{"version":3,"file":"app/apps/server/storage/AppFileSystemSourceStorage.ts","sourceRoot":"","sources":["app/apps/server/storage/AppFileSystemSourceStorage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,IAAI,EAAE,EAAE,MAAM,IAAI,CAAC;AACpC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AAEvC,OAAO,EAAE,gBAAgB,EAAmB,MAAM,yCAAyC,CAAC;AAE5F,MAAM,OAAO,0BAA2B,SAAQ,gBAAgB;IACvD,UAAU,GAAG,MAAM,CAAC;IAEpB,IAAI,CAAS;IAEd,OAAO,CAAC,IAAY;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,SAAS;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACvE;IACF,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,IAAqB,EAAE,GAAW;QACpD,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAE3C,MAAM,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAElC,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,IAAqB;QACvC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;SACvC;QAED,OAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAChE,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,IAAqB,EAAE,GAAW;QACrD,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAE3C,MAAM,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAElC,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,IAAqB;QACxC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,OAAO;SACP;QAED,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC9D,CAAC;IAEO,cAAc,CAAC,IAAqB;QAC3C,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;IACrD,CAAC;IAEO,oBAAoB,CAAC,QAAgB;QAC5C,OAAO,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;IACnC,CAAC;IAEO,oBAAoB,CAAC,UAAkB;QAC9C,OAAO,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC;CACD","sourcesContent":["import { promises as fs } from 'fs';\nimport { join, normalize } from 'path';\n\nimport { AppSourceStorage, IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\n\nexport class AppFileSystemSourceStorage extends AppSourceStorage {\n\tprivate pathPrefix = 'fs:/';\n\n\tprivate path: string;\n\n\tpublic setPath(path: string): void {\n\t\tthis.path = path;\n\t}\n\n\tpublic checkPath(): void {\n\t\tif (!this.path) {\n\t\t\tthrow new Error('Invalid path configured for file system App storage');\n\t\t}\n\t}\n\n\tpublic async store(item: IAppStorageItem, zip: Buffer): Promise<string> {\n\t\tthis.checkPath();\n\n\t\tconst filePath = this.itemToFilename(item);\n\n\t\tawait fs.writeFile(filePath, zip);\n\n\t\treturn this.filenameToSourcePath(filePath);\n\t}\n\n\tpublic async fetch(item: IAppStorageItem): Promise<Buffer> {\n\t\tif (!item.sourcePath) {\n\t\t\tthrow new Error('Invalid source path');\n\t\t}\n\n\t\treturn fs.readFile(this.sourcePathToFilename(item.sourcePath));\n\t}\n\n\tpublic async update(item: IAppStorageItem, zip: Buffer): Promise<string> {\n\t\tthis.checkPath();\n\n\t\tconst filePath = this.itemToFilename(item);\n\n\t\tawait fs.writeFile(filePath, zip);\n\n\t\treturn this.filenameToSourcePath(filePath);\n\t}\n\n\tpublic async remove(item: IAppStorageItem): Promise<void> {\n\t\tif (!item.sourcePath) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn fs.unlink(this.sourcePathToFilename(item.sourcePath));\n\t}\n\n\tprivate itemToFilename(item: IAppStorageItem): string {\n\t\treturn `${normalize(join(this.path, item.id))}.zip`;\n\t}\n\n\tprivate filenameToSourcePath(filename: string): string {\n\t\treturn this.pathPrefix + filename;\n\t}\n\n\tprivate sourcePathToFilename(sourcePath: string): string {\n\t\treturn sourcePath.substring(this.pathPrefix.length);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/AppFileSystemSourceStorage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/storage/AppFileSystemSourceStorage.ts"}},"code":"module.export({\n  AppFileSystemSourceStorage: () => AppFileSystemSourceStorage\n});\nlet fs;\nmodule.link(\"fs\", {\n  promises(v) {\n    fs = v;\n  }\n\n}, 0);\nlet join, normalize;\nmodule.link(\"path\", {\n  join(v) {\n    join = v;\n  },\n\n  normalize(v) {\n    normalize = v;\n  }\n\n}, 1);\nlet AppSourceStorage;\nmodule.link(\"@rocket.chat/apps-engine/server/storage\", {\n  AppSourceStorage(v) {\n    AppSourceStorage = v;\n  }\n\n}, 2);\n\nclass AppFileSystemSourceStorage extends AppSourceStorage {\n  constructor() {\n    super(...arguments);\n    this.pathPrefix = 'fs:/';\n    this.path = void 0;\n  }\n\n  setPath(path) {\n    this.path = path;\n  }\n\n  checkPath() {\n    if (!this.path) {\n      throw new Error('Invalid path configured for file system App storage');\n    }\n  }\n\n  store(item, zip) {\n    return Promise.asyncApply(() => {\n      this.checkPath();\n      const filePath = this.itemToFilename(item);\n      Promise.await(fs.writeFile(filePath, zip));\n      return this.filenameToSourcePath(filePath);\n    });\n  }\n\n  fetch(item) {\n    return Promise.asyncApply(() => {\n      if (!item.sourcePath) {\n        throw new Error('Invalid source path');\n      }\n\n      return fs.readFile(this.sourcePathToFilename(item.sourcePath));\n    });\n  }\n\n  update(item, zip) {\n    return Promise.asyncApply(() => {\n      this.checkPath();\n      const filePath = this.itemToFilename(item);\n      Promise.await(fs.writeFile(filePath, zip));\n      return this.filenameToSourcePath(filePath);\n    });\n  }\n\n  remove(item) {\n    return Promise.asyncApply(() => {\n      if (!item.sourcePath) {\n        return;\n      }\n\n      return fs.unlink(this.sourcePathToFilename(item.sourcePath));\n    });\n  }\n\n  itemToFilename(item) {\n    return \"\".concat(normalize(join(this.path, item.id)), \".zip\");\n  }\n\n  filenameToSourcePath(filename) {\n    return this.pathPrefix + filename;\n  }\n\n  sourcePathToFilename(sourcePath) {\n    return sourcePath.substring(this.pathPrefix.length);\n  }\n\n}","map":{"version":3,"sources":["app/apps/server/storage/AppFileSystemSourceStorage.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,0BAA2B,EAAA,MAAA;AAA3B,CAAT;AAAoC,IAAA,EAAA;AAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yCAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAK9B,MAAO,0BAAP,SAA0C,gBAA1C,CAA0D;AAAA;AAAA;AAAA,SACvD,UADuD,GAC1C,MAD0C;AAAA,SAGvD,IAHuD;AAAA;;AAKxD,EAAA,OAAO,CAAC,IAAD,EAAa;AAC1B,SAAK,IAAL,GAAY,IAAZ;AACA;;AAEM,EAAA,SAAS,GAAA;AACf,QAAI,CAAC,KAAK,IAAV,EAAgB;AACf,YAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACA;AACD;;AAEY,EAAA,KAAK,CAAC,IAAD,EAAwB,GAAxB;AAAA,oCAAmC;AACpD,WAAK,SAAL;AAEA,YAAM,QAAQ,GAAG,KAAK,cAAL,CAAoB,IAApB,CAAjB;AAEA,oBAAM,EAAE,CAAC,SAAH,CAAa,QAAb,EAAuB,GAAvB,CAAN;AAEA,aAAO,KAAK,oBAAL,CAA0B,QAA1B,CAAP;AACA,KARiB;AAAA;;AAUL,EAAA,KAAK,CAAC,IAAD;AAAA,oCAAsB;AACvC,UAAI,CAAC,IAAI,CAAC,UAAV,EAAsB;AACrB,cAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN;AACA;;AAED,aAAO,EAAE,CAAC,QAAH,CAAY,KAAK,oBAAL,CAA0B,IAAI,CAAC,UAA/B,CAAZ,CAAP;AACA,KANiB;AAAA;;AAQL,EAAA,MAAM,CAAC,IAAD,EAAwB,GAAxB;AAAA,oCAAmC;AACrD,WAAK,SAAL;AAEA,YAAM,QAAQ,GAAG,KAAK,cAAL,CAAoB,IAApB,CAAjB;AAEA,oBAAM,EAAE,CAAC,SAAH,CAAa,QAAb,EAAuB,GAAvB,CAAN;AAEA,aAAO,KAAK,oBAAL,CAA0B,QAA1B,CAAP;AACA,KARkB;AAAA;;AAUN,EAAA,MAAM,CAAC,IAAD;AAAA,oCAAsB;AACxC,UAAI,CAAC,IAAI,CAAC,UAAV,EAAsB;AACrB;AACA;;AAED,aAAO,EAAE,CAAC,MAAH,CAAU,KAAK,oBAAL,CAA0B,IAAI,CAAC,UAA/B,CAAV,CAAP;AACA,KANkB;AAAA;;AAQX,EAAA,cAAc,CAAC,IAAD,EAAsB;AAC3C,qBAAU,SAAS,CAAC,IAAI,CAAC,KAAK,IAAN,EAAY,IAAI,CAAC,EAAjB,CAAL,CAAnB;AACA;;AAEO,EAAA,oBAAoB,CAAC,QAAD,EAAiB;AAC5C,WAAO,KAAK,UAAL,GAAkB,QAAzB;AACA;;AAEO,EAAA,oBAAoB,CAAC,UAAD,EAAmB;AAC9C,WAAO,UAAU,CAAC,SAAX,CAAqB,KAAK,UAAL,CAAgB,MAArC,CAAP;AACA;;AA7D8D","sourcesContent":["import { promises as fs } from 'fs';\nimport { join, normalize } from 'path';\n\nimport { AppSourceStorage, IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\n\nexport class AppFileSystemSourceStorage extends AppSourceStorage {\n\tprivate pathPrefix = 'fs:/';\n\n\tprivate path: string;\n\n\tpublic setPath(path: string): void {\n\t\tthis.path = path;\n\t}\n\n\tpublic checkPath(): void {\n\t\tif (!this.path) {\n\t\t\tthrow new Error('Invalid path configured for file system App storage');\n\t\t}\n\t}\n\n\tpublic async store(item: IAppStorageItem, zip: Buffer): Promise<string> {\n\t\tthis.checkPath();\n\n\t\tconst filePath = this.itemToFilename(item);\n\n\t\tawait fs.writeFile(filePath, zip);\n\n\t\treturn this.filenameToSourcePath(filePath);\n\t}\n\n\tpublic async fetch(item: IAppStorageItem): Promise<Buffer> {\n\t\tif (!item.sourcePath) {\n\t\t\tthrow new Error('Invalid source path');\n\t\t}\n\n\t\treturn fs.readFile(this.sourcePathToFilename(item.sourcePath));\n\t}\n\n\tpublic async update(item: IAppStorageItem, zip: Buffer): Promise<string> {\n\t\tthis.checkPath();\n\n\t\tconst filePath = this.itemToFilename(item);\n\n\t\tawait fs.writeFile(filePath, zip);\n\n\t\treturn this.filenameToSourcePath(filePath);\n\t}\n\n\tpublic async remove(item: IAppStorageItem): Promise<void> {\n\t\tif (!item.sourcePath) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn fs.unlink(this.sourcePathToFilename(item.sourcePath));\n\t}\n\n\tprivate itemToFilename(item: IAppStorageItem): string {\n\t\treturn `${normalize(join(this.path, item.id))}.zip`;\n\t}\n\n\tprivate filenameToSourcePath(filename: string): string {\n\t\treturn this.pathPrefix + filename;\n\t}\n\n\tprivate sourcePathToFilename(sourcePath: string): string {\n\t\treturn sourcePath.substring(this.pathPrefix.length);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"aaf623a40b152abb7f895b22658f33bcdd99f3aa"}

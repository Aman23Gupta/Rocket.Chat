{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/permissions.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/permissions.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/permissions.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/permissions.ts","sourceRoot":"","sources":["app/api/server/v1/permissions.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { hasPermission } from '../../../authorization/server';\nimport { API } from '../api';\nimport { Permissions, Roles } from '../../../models/server/raw';\nimport { IPermission } from '../../../../definition/IPermission';\nimport { isBodyParamsValidPermissionUpdate } from '../../../../definition/rest/v1/permissions';\n\nAPI.v1.addRoute(\n\t'permissions.listAll',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { updatedSince } = this.queryParams;\n\n\t\t\tlet updatedSinceDate: Date | undefined;\n\t\t\tif (updatedSince) {\n\t\t\t\tif (isNaN(Date.parse(updatedSince))) {\n\t\t\t\t\tthrow new Meteor.Error('error-roomId-param-invalid', 'The \"updatedSince\" query parameter must be a valid date.');\n\t\t\t\t}\n\t\t\t\tupdatedSinceDate = new Date(updatedSince);\n\t\t\t}\n\n\t\t\tconst result = (await Meteor.call('permissions/get', updatedSinceDate)) as {\n\t\t\t\tupdate: IPermission[];\n\t\t\t\tremove: IPermission[];\n\t\t\t};\n\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tupdate: result,\n\t\t\t\t\tremove: [],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'permissions.update',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!hasPermission(this.userId, 'access-permissions')) {\n\t\t\t\treturn API.v1.failure('Editing permissions is not allowed', 'error-edit-permissions-not-allowed');\n\t\t\t}\n\n\t\t\tconst { bodyParams } = this;\n\n\t\t\tif (!isBodyParamsValidPermissionUpdate(bodyParams)) {\n\t\t\t\treturn API.v1.failure('Invalid body params', 'error-invalid-body-params');\n\t\t\t}\n\n\t\t\tconst permissionKeys = bodyParams.permissions.map(({ _id }) => _id);\n\t\t\tconst permissions = await Permissions.find({ _id: { $in: permissionKeys } }).toArray();\n\n\t\t\tif (permissions.length !== bodyParams.permissions.length) {\n\t\t\t\treturn API.v1.failure('Invalid permission', 'error-invalid-permission');\n\t\t\t}\n\n\t\t\tconst roleKeys = [...new Set(bodyParams.permissions.flatMap((p) => p.roles))];\n\n\t\t\tconst roles = await Roles.find({ _id: { $in: roleKeys } }).toArray();\n\n\t\t\tif (roles.length !== roleKeys.length) {\n\t\t\t\treturn API.v1.failure('Invalid role', 'error-invalid-role');\n\t\t\t}\n\n\t\t\tfor await (const permission of bodyParams.permissions) {\n\t\t\t\tawait Permissions.setRoles(permission._id, permission.roles);\n\t\t\t}\n\n\t\t\tconst result = (await Meteor.call('permissions/get')) as IPermission[];\n\n\t\t\treturn API.v1.success({\n\t\t\t\tpermissions: result,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/permissions.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/permissions.ts"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet hasPermission;\nmodule.link(\"../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nlet Permissions, Roles;\nmodule.link(\"../../../models/server/raw\", {\n  Permissions(v) {\n    Permissions = v;\n  },\n\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 3);\nlet isBodyParamsValidPermissionUpdate;\nmodule.link(\"../../../../definition/rest/v1/permissions\", {\n  isBodyParamsValidPermissionUpdate(v) {\n    isBodyParamsValidPermissionUpdate = v;\n  }\n\n}, 4);\nAPI.v1.addRoute('permissions.listAll', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        updatedSince\n      } = this.queryParams;\n      let updatedSinceDate;\n\n      if (updatedSince) {\n        if (isNaN(Date.parse(updatedSince))) {\n          throw new Meteor.Error('error-roomId-param-invalid', 'The \"updatedSince\" query parameter must be a valid date.');\n        }\n\n        updatedSinceDate = new Date(updatedSince);\n      }\n\n      const result = Promise.await(Meteor.call('permissions/get', updatedSinceDate));\n\n      if (Array.isArray(result)) {\n        return API.v1.success({\n          update: result,\n          remove: []\n        });\n      }\n\n      return API.v1.success(result);\n    });\n  }\n\n});\nAPI.v1.addRoute('permissions.update', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      if (!hasPermission(this.userId, 'access-permissions')) {\n        return API.v1.failure('Editing permissions is not allowed', 'error-edit-permissions-not-allowed');\n      }\n\n      const {\n        bodyParams\n      } = this;\n\n      if (!isBodyParamsValidPermissionUpdate(bodyParams)) {\n        return API.v1.failure('Invalid body params', 'error-invalid-body-params');\n      }\n\n      const permissionKeys = bodyParams.permissions.map(_ref => {\n        let {\n          _id\n        } = _ref;\n        return _id;\n      });\n      const permissions = Promise.await(Permissions.find({\n        _id: {\n          $in: permissionKeys\n        }\n      }).toArray());\n\n      if (permissions.length !== bodyParams.permissions.length) {\n        return API.v1.failure('Invalid permission', 'error-invalid-permission');\n      }\n\n      const roleKeys = [...new Set(bodyParams.permissions.flatMap(p => p.roles))];\n      const roles = Promise.await(Roles.find({\n        _id: {\n          $in: roleKeys\n        }\n      }).toArray());\n\n      if (roles.length !== roleKeys.length) {\n        return API.v1.failure('Invalid role', 'error-invalid-role');\n      }\n\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(bodyParams.permissions), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n          const permission = _step.value;\n          Promise.await(Permissions.setRoles(permission._id, permission.roles));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            Promise.await(_iterator.return());\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      const result = Promise.await(Meteor.call('permissions/get'));\n      return API.v1.success({\n        permissions: result\n      });\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/permissions.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { hasPermission } from '../../../authorization/server';\nimport { API } from '../api';\nimport { Permissions, Roles } from '../../../models/server/raw';\nimport { IPermission } from '../../../../definition/IPermission';\nimport { isBodyParamsValidPermissionUpdate } from '../../../../definition/rest/v1/permissions';\n\nAPI.v1.addRoute(\n\t'permissions.listAll',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { updatedSince } = this.queryParams;\n\n\t\t\tlet updatedSinceDate: Date | undefined;\n\t\t\tif (updatedSince) {\n\t\t\t\tif (isNaN(Date.parse(updatedSince))) {\n\t\t\t\t\tthrow new Meteor.Error('error-roomId-param-invalid', 'The \"updatedSince\" query parameter must be a valid date.');\n\t\t\t\t}\n\t\t\t\tupdatedSinceDate = new Date(updatedSince);\n\t\t\t}\n\n\t\t\tconst result = (await Meteor.call('permissions/get', updatedSinceDate)) as {\n\t\t\t\tupdate: IPermission[];\n\t\t\t\tremove: IPermission[];\n\t\t\t};\n\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tupdate: result,\n\t\t\t\t\tremove: [],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'permissions.update',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!hasPermission(this.userId, 'access-permissions')) {\n\t\t\t\treturn API.v1.failure('Editing permissions is not allowed', 'error-edit-permissions-not-allowed');\n\t\t\t}\n\n\t\t\tconst { bodyParams } = this;\n\n\t\t\tif (!isBodyParamsValidPermissionUpdate(bodyParams)) {\n\t\t\t\treturn API.v1.failure('Invalid body params', 'error-invalid-body-params');\n\t\t\t}\n\n\t\t\tconst permissionKeys = bodyParams.permissions.map(({ _id }) => _id);\n\t\t\tconst permissions = await Permissions.find({ _id: { $in: permissionKeys } }).toArray();\n\n\t\t\tif (permissions.length !== bodyParams.permissions.length) {\n\t\t\t\treturn API.v1.failure('Invalid permission', 'error-invalid-permission');\n\t\t\t}\n\n\t\t\tconst roleKeys = [...new Set(bodyParams.permissions.flatMap((p) => p.roles))];\n\n\t\t\tconst roles = await Roles.find({ _id: { $in: roleKeys } }).toArray();\n\n\t\t\tif (roles.length !== roleKeys.length) {\n\t\t\t\treturn API.v1.failure('Invalid role', 'error-invalid-role');\n\t\t\t}\n\n\t\t\tfor await (const permission of bodyParams.permissions) {\n\t\t\t\tawait Permissions.setRoles(permission._id, permission.roles);\n\t\t\t}\n\n\t\t\tconst result = (await Meteor.call('permissions/get')) as IPermission[];\n\n\t\t\treturn API.v1.success({\n\t\t\t\tpermissions: result,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"5fa984c9b0eb88d1a0e4e8a091299acedefed237"}

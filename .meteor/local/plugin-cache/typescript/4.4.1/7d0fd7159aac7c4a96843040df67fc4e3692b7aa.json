{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/webdav/server/methods/removeWebdavAccount.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/webdav/server/methods/removeWebdavAccount.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/webdav/server/methods/removeWebdavAccount.ts","inputSourceMap":{"version":3,"file":"app/webdav/server/methods/removeWebdavAccount.ts","sourceRoot":"","sources":["app/webdav/server/methods/removeWebdavAccount.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAE9D,MAAM,CAAC,OAAO,CAAC;IACd,KAAK,CAAC,mBAAmB,CAAC,SAAS;QAClC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE/B,IAAI,CAAC,MAAM,EAAE;YACZ,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,qBAAqB;aAC7B,CAAC,CAAC;SACH;QAED,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAEzB,MAAM,OAAO,GAAG,MAAM,cAAc,CAAC,iBAAiB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAC1E,IAAI,OAAO,EAAE;YACZ,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE;gBAC1C,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE;aAC3B,CAAC,CAAC;SACH;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { WebdavAccounts } from '../../../models/server/raw';\nimport { Notifications } from '../../../notifications/server';\n\nMeteor.methods({\n\tasync removeWebdavAccount(accountId) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', {\n\t\t\t\tmethod: 'removeWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(accountId, String);\n\n\t\tconst removed = await WebdavAccounts.removeByUserAndId(accountId, userId);\n\t\tif (removed) {\n\t\t\tNotifications.notifyUser(userId, 'webdav', {\n\t\t\t\ttype: 'removed',\n\t\t\t\taccount: { _id: accountId },\n\t\t\t});\n\t\t}\n\n\t\treturn removed;\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/webdav/server/methods/removeWebdavAccount.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webdav/server/methods/removeWebdavAccount.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet WebdavAccounts;\nmodule.link(\"../../../models/server/raw\", {\n  WebdavAccounts(v) {\n    WebdavAccounts = v;\n  }\n\n}, 2);\nlet Notifications;\nmodule.link(\"../../../notifications/server\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 3);\nMeteor.methods({\n  removeWebdavAccount(accountId) {\n    return Promise.asyncApply(() => {\n      const userId = Meteor.userId();\n\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid User', {\n          method: 'removeWebdavAccount'\n        });\n      }\n\n      check(accountId, String);\n      const removed = Promise.await(WebdavAccounts.removeByUserAndId(accountId, userId));\n\n      if (removed) {\n        Notifications.notifyUser(userId, 'webdav', {\n          type: 'removed',\n          account: {\n            _id: accountId\n          }\n        });\n      }\n\n      return removed;\n    });\n  }\n\n});","map":{"version":3,"sources":["app/webdav/server/methods/removeWebdavAccount.ts"],"names":[],"mappings":"AAAA,IAAA,MAAA;AAAS,MAAQ,CAAA,IAAR,CAAc,eAAd,EAA8B;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAA9B,EAA8B,CAA9B;AAA8B,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAMvC,MAAM,CAAC,OAAP,CAAe;AACR,EAAA,mBAAN,CAA0B,SAA1B;AAAA,oCAAmC;AAClC,YAAM,MAAM,GAAG,MAAM,CAAC,MAAP,EAAf;;AAEA,UAAI,CAAC,MAAL,EAAa;AACZ,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAC5D,UAAA,MAAM,EAAE;AADoD,SAAvD,CAAN;AAGA;;AAED,MAAA,KAAK,CAAC,SAAD,EAAY,MAAZ,CAAL;AAEA,YAAM,OAAO,iBAAS,cAAc,CAAC,iBAAf,CAAiC,SAAjC,EAA4C,MAA5C,CAAT,CAAb;;AACA,UAAI,OAAJ,EAAa;AACZ,QAAA,aAAa,CAAC,UAAd,CAAyB,MAAzB,EAAiC,QAAjC,EAA2C;AAC1C,UAAA,IAAI,EAAE,SADoC;AAE1C,UAAA,OAAO,EAAE;AAAE,YAAA,GAAG,EAAE;AAAP;AAFiC,SAA3C;AAIA;;AAED,aAAO,OAAP;AACA,KApBD;AAAA;;AADc,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { WebdavAccounts } from '../../../models/server/raw';\nimport { Notifications } from '../../../notifications/server';\n\nMeteor.methods({\n\tasync removeWebdavAccount(accountId) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', {\n\t\t\t\tmethod: 'removeWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(accountId, String);\n\n\t\tconst removed = await WebdavAccounts.removeByUserAndId(accountId, userId);\n\t\tif (removed) {\n\t\t\tNotifications.notifyUser(userId, 'webdav', {\n\t\t\t\ttype: 'removed',\n\t\t\t\taccount: { _id: accountId },\n\t\t\t});\n\t\t}\n\n\t\treturn removed;\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"7d0fd7159aac7c4a96843040df67fc4e3692b7aa"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/addUserRoles.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/authorization/server/functions/addUserRoles.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/addUserRoles.ts","inputSourceMap":{"version":3,"file":"app/authorization/server/functions/addUserRoles.ts","sourceRoot":"","sources":["app/authorization/server/functions/addUserRoles.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,CAAC,MAAM,YAAY,CAAC;AAE3B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAE/C,OAAO,EAAE,KAAK,EAAE,MAAM,4BAA4B,CAAC;AAEnD,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,MAAoB,EAAE,SAA0B,EAAE,KAAc,EAAW,EAAE;IACzG,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE;QAC1B,OAAO,KAAK,CAAC;KACb;IAED,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,EAAE;QACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5D,QAAQ,EAAE,+BAA+B;SACzC,CAAC,CAAC;KACH;IAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QAC9B,0BAA0B;QAC1B,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;KACxB;IAED,MAAM,iBAAiB,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;IACrD,MAAM,gBAAgB,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;IAEpE,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;QACjC,KAAK,MAAM,IAAI,IAAI,gBAAgB,EAAE;YACpC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1C;KACD;IAED,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5D,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { getRoles } from './getRoles';\nimport { Users } from '../../../models/server';\nimport { IRole, IUser } from '../../../../definition/IUser';\nimport { Roles } from '../../../models/server/raw';\n\nexport const addUserRoles = (userId: IUser['_id'], roleNames: IRole['name'][], scope?: string): boolean => {\n\tif (!userId || !roleNames) {\n\t\treturn false;\n\t}\n\n\tconst user = Users.db.findOneById(userId);\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.authz.addUserRoles',\n\t\t});\n\t}\n\n\tif (!Array.isArray(roleNames)) {\n\t\t// TODO: remove this check\n\t\troleNames = [roleNames];\n\t}\n\n\tconst existingRoleNames = _.pluck(getRoles(), '_id');\n\tconst invalidRoleNames = _.difference(roleNames, existingRoleNames);\n\n\tif (!_.isEmpty(invalidRoleNames)) {\n\t\tfor (const role of invalidRoleNames) {\n\t\t\tPromise.await(Roles.createOrUpdate(role));\n\t\t}\n\t}\n\n\tPromise.await(Roles.addUserRoles(userId, roleNames, scope));\n\treturn true;\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/addUserRoles.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authorization/server/functions/addUserRoles.ts"}},"code":"module.export({\n  addUserRoles: () => addUserRoles\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet getRoles;\nmodule.link(\"./getRoles\", {\n  getRoles(v) {\n    getRoles = v;\n  }\n\n}, 2);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 3);\nlet Roles;\nmodule.link(\"../../../models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 4);\n\nconst addUserRoles = (userId, roleNames, scope) => {\n  if (!userId || !roleNames) {\n    return false;\n  }\n\n  const user = Users.db.findOneById(userId);\n\n  if (!user) {\n    throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n      function: 'RocketChat.authz.addUserRoles'\n    });\n  }\n\n  if (!Array.isArray(roleNames)) {\n    // TODO: remove this check\n    roleNames = [roleNames];\n  }\n\n  const existingRoleNames = _.pluck(getRoles(), '_id');\n\n  const invalidRoleNames = _.difference(roleNames, existingRoleNames);\n\n  if (!_.isEmpty(invalidRoleNames)) {\n    for (const role of invalidRoleNames) {\n      Promise.await(Roles.createOrUpdate(role));\n    }\n  }\n\n  Promise.await(Roles.addUserRoles(userId, roleNames, scope));\n  return true;\n};","map":{"version":3,"sources":["app/authorization/server/functions/addUserRoles.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAM,EAAA,YAAQ,EAAA,MAAA;AAAd,CAAT;AAAuC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,CAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAQhC,MAAM,YAAY,GAAG,CAAC,MAAD,EAAuB,SAAvB,EAAmD,KAAnD,KAA8E;AACzG,MAAI,CAAC,MAAD,IAAW,CAAC,SAAhB,EAA2B;AAC1B,WAAO,KAAP;AACA;;AAED,QAAM,IAAI,GAAG,KAAK,CAAC,EAAN,CAAS,WAAT,CAAqB,MAArB,CAAb;;AACA,MAAI,CAAC,IAAL,EAAW;AACV,UAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAC5D,MAAA,QAAQ,EAAE;AADkD,KAAvD,CAAN;AAGA;;AAED,MAAI,CAAC,KAAK,CAAC,OAAN,CAAc,SAAd,CAAL,EAA+B;AAC9B;AACA,IAAA,SAAS,GAAG,CAAC,SAAD,CAAZ;AACA;;AAED,QAAM,iBAAiB,GAAG,CAAC,CAAC,KAAF,CAAQ,QAAQ,EAAhB,EAAoB,KAApB,CAA1B;;AACA,QAAM,gBAAgB,GAAG,CAAC,CAAC,UAAF,CAAa,SAAb,EAAwB,iBAAxB,CAAzB;;AAEA,MAAI,CAAC,CAAC,CAAC,OAAF,CAAU,gBAAV,CAAL,EAAkC;AACjC,SAAK,MAAM,IAAX,IAAmB,gBAAnB,EAAqC;AACpC,MAAA,OAAO,CAAC,KAAR,CAAc,KAAK,CAAC,cAAN,CAAqB,IAArB,CAAd;AACA;AACD;;AAED,EAAA,OAAO,CAAC,KAAR,CAAc,KAAK,CAAC,YAAN,CAAmB,MAAnB,EAA2B,SAA3B,EAAsC,KAAtC,CAAd;AACA,SAAO,IAAP;AACA,CA5BM","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { getRoles } from './getRoles';\nimport { Users } from '../../../models/server';\nimport { IRole, IUser } from '../../../../definition/IUser';\nimport { Roles } from '../../../models/server/raw';\n\nexport const addUserRoles = (userId: IUser['_id'], roleNames: IRole['name'][], scope?: string): boolean => {\n\tif (!userId || !roleNames) {\n\t\treturn false;\n\t}\n\n\tconst user = Users.db.findOneById(userId);\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tfunction: 'RocketChat.authz.addUserRoles',\n\t\t});\n\t}\n\n\tif (!Array.isArray(roleNames)) {\n\t\t// TODO: remove this check\n\t\troleNames = [roleNames];\n\t}\n\n\tconst existingRoleNames = _.pluck(getRoles(), '_id');\n\tconst invalidRoleNames = _.difference(roleNames, existingRoleNames);\n\n\tif (!_.isEmpty(invalidRoleNames)) {\n\t\tfor (const role of invalidRoleNames) {\n\t\t\tPromise.await(Roles.createOrUpdate(role));\n\t\t}\n\t}\n\n\tPromise.await(Roles.addUserRoles(userId, roleNames, scope));\n\treturn true;\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"6682b4add9da15ef063e666b7d743ad8894dba8b"}

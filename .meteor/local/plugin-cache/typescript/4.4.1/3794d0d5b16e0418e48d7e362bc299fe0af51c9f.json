{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/banner/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/banner/service.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/banner/service.ts","inputSourceMap":{"version":3,"file":"server/services/banner/service.ts","sourceRoot":"","sources":["server/services/banner/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Db } from 'mongodb';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { ServiceClass } from '../../sdk/types/ServiceClass';\nimport { BannersRaw } from '../../../app/models/server/raw/Banners';\nimport { BannersDismissRaw } from '../../../app/models/server/raw/BannersDismiss';\nimport { UsersRaw } from '../../../app/models/server/raw/Users';\nimport { IBannerService } from '../../sdk/types/IBannerService';\nimport { BannerPlatform, IBanner, IBannerDismiss } from '../../../definition/IBanner';\nimport { api } from '../../sdk/api';\nimport { IUser } from '../../../definition/IUser';\nimport { Optional } from '../../../definition/utils';\n\nexport class BannerService extends ServiceClass implements IBannerService {\n\tprotected name = 'banner';\n\n\tprivate Banners: BannersRaw;\n\n\tprivate BannersDismiss: BannersDismissRaw;\n\n\tprivate Users: UsersRaw;\n\n\tconstructor(db: Db) {\n\t\tsuper();\n\n\t\tthis.Banners = new BannersRaw(db.collection('rocketchat_banner'));\n\t\tthis.BannersDismiss = new BannersDismissRaw(db.collection('rocketchat_banner_dismiss'));\n\t\tthis.Users = new UsersRaw(db.collection('users'));\n\t}\n\n\tasync getById(bannerId: string): Promise<null | IBanner> {\n\t\treturn this.Banners.findOneById(bannerId);\n\t}\n\n\tasync discardDismissal(bannerId: string): Promise<boolean> {\n\t\tconst result = await this.Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tconst snapshot = await this.create({ ...banner, snapshot: _id, active: false }); // create a snapshot\n\n\t\tawait this.BannersDismiss.updateMany({ bannerId }, { $set: { bannerId: snapshot._id } });\n\t\treturn true;\n\t}\n\n\tasync create(doc: Optional<IBanner, '_id'>): Promise<IBanner> {\n\t\tconst bannerId = doc._id || uuidv4();\n\n\t\tdoc.view.appId = 'banner-core';\n\t\tdoc.view.viewId = bannerId;\n\n\t\tawait this.Banners.create({\n\t\t\t...doc,\n\t\t\t_id: bannerId,\n\t\t});\n\n\t\tconst banner = await this.Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('error-creating-banner');\n\t\t}\n\n\t\tapi.broadcast('banner.new', banner._id);\n\n\t\treturn banner;\n\t}\n\n\tasync getBannersForUser(userId: string, platform: BannerPlatform, bannerId?: string): Promise<IBanner[]> {\n\t\tconst user = await this.Users.findOneById<Pick<IUser, 'roles'>>(userId, {\n\t\t\tprojection: { roles: 1 },\n\t\t});\n\n\t\tconst { roles } = user || { roles: [] };\n\n\t\tconst banners = await this.Banners.findActiveByRoleOrId(roles, platform, bannerId).toArray();\n\n\t\tconst bannerIds = banners.map(({ _id }) => _id);\n\n\t\tconst result = await this.BannersDismiss.findByUserIdAndBannerId<Pick<IBannerDismiss, 'bannerId'>>(userId, bannerIds, {\n\t\t\tprojection: { bannerId: 1, _id: 0 },\n\t\t}).toArray();\n\n\t\tconst dismissed = new Set(result.map(({ bannerId }) => bannerId));\n\n\t\treturn banners.filter((banner) => !dismissed.has(banner._id));\n\t}\n\n\tasync dismiss(userId: string, bannerId: string): Promise<boolean> {\n\t\tif (!userId || !bannerId) {\n\t\t\tthrow new Error('Invalid params');\n\t\t}\n\n\t\tconst banner = await this.Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('Banner not found');\n\t\t}\n\n\t\tconst user = await this.Users.findOneById<Pick<IUser, 'username' | '_id'>>(userId, {\n\t\t\tprojection: { username: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('User not found');\n\t\t}\n\n\t\tconst dismissedBy = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t};\n\n\t\tconst today = new Date();\n\n\t\tconst doc = {\n\t\t\tuserId,\n\t\t\tbannerId,\n\t\t\tdismissedBy,\n\t\t\tdismissedAt: today,\n\t\t\t_updatedAt: today,\n\t\t};\n\n\t\tawait this.BannersDismiss.insertOne(doc);\n\n\t\treturn true;\n\t}\n\n\tasync disable(bannerId: string): Promise<boolean> {\n\t\tconst result = await this.Banners.disable(bannerId);\n\n\t\tif (result) {\n\t\t\tapi.broadcast('banner.disabled', bannerId);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync enable(bannerId: string, doc: Partial<Omit<IBanner, '_id'>> = {}): Promise<boolean> {\n\t\tconst result = await this.Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tthis.Banners.update({ _id }, { ...banner, ...doc, active: true }); // reenable the banner\n\n\t\tapi.broadcast('banner.enabled', bannerId);\n\t\treturn true;\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/services/banner/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/banner/service.ts"}},"code":"const _excluded = [\"_id\"],\n      _excluded2 = [\"_id\"];\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\nmodule.export({\n  BannerService: () => BannerService\n});\nlet uuidv4;\nmodule.link(\"uuid\", {\n  v4(v) {\n    uuidv4 = v;\n  }\n\n}, 0);\nlet ServiceClass;\nmodule.link(\"../../sdk/types/ServiceClass\", {\n  ServiceClass(v) {\n    ServiceClass = v;\n  }\n\n}, 1);\nlet BannersRaw;\nmodule.link(\"../../../app/models/server/raw/Banners\", {\n  BannersRaw(v) {\n    BannersRaw = v;\n  }\n\n}, 2);\nlet BannersDismissRaw;\nmodule.link(\"../../../app/models/server/raw/BannersDismiss\", {\n  BannersDismissRaw(v) {\n    BannersDismissRaw = v;\n  }\n\n}, 3);\nlet UsersRaw;\nmodule.link(\"../../../app/models/server/raw/Users\", {\n  UsersRaw(v) {\n    UsersRaw = v;\n  }\n\n}, 4);\nlet api;\nmodule.link(\"../../sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 5);\n\nclass BannerService extends ServiceClass {\n  constructor(db) {\n    super();\n    this.name = 'banner';\n    this.Banners = void 0;\n    this.BannersDismiss = void 0;\n    this.Users = void 0;\n    this.Banners = new BannersRaw(db.collection('rocketchat_banner'));\n    this.BannersDismiss = new BannersDismissRaw(db.collection('rocketchat_banner_dismiss'));\n    this.Users = new UsersRaw(db.collection('users'));\n  }\n\n  getById(bannerId) {\n    return Promise.asyncApply(() => {\n      return this.Banners.findOneById(bannerId);\n    });\n  }\n\n  discardDismissal(bannerId) {\n    return Promise.asyncApply(() => {\n      const result = Promise.await(this.Banners.findOneById(bannerId));\n\n      if (!result) {\n        return false;\n      }\n\n      const {\n        _id\n      } = result,\n            banner = _objectWithoutProperties(result, _excluded);\n\n      const snapshot = Promise.await(this.create(_objectSpread(_objectSpread({}, banner), {}, {\n        snapshot: _id,\n        active: false\n      }))); // create a snapshot\n\n      Promise.await(this.BannersDismiss.updateMany({\n        bannerId\n      }, {\n        $set: {\n          bannerId: snapshot._id\n        }\n      }));\n      return true;\n    });\n  }\n\n  create(doc) {\n    return Promise.asyncApply(() => {\n      const bannerId = doc._id || uuidv4();\n      doc.view.appId = 'banner-core';\n      doc.view.viewId = bannerId;\n      Promise.await(this.Banners.create(_objectSpread(_objectSpread({}, doc), {}, {\n        _id: bannerId\n      })));\n      const banner = Promise.await(this.Banners.findOneById(bannerId));\n\n      if (!banner) {\n        throw new Error('error-creating-banner');\n      }\n\n      api.broadcast('banner.new', banner._id);\n      return banner;\n    });\n  }\n\n  getBannersForUser(userId, platform, bannerId) {\n    return Promise.asyncApply(() => {\n      const user = Promise.await(this.Users.findOneById(userId, {\n        projection: {\n          roles: 1\n        }\n      }));\n      const {\n        roles\n      } = user || {\n        roles: []\n      };\n      const banners = Promise.await(this.Banners.findActiveByRoleOrId(roles, platform, bannerId).toArray());\n      const bannerIds = banners.map(_ref => {\n        let {\n          _id\n        } = _ref;\n        return _id;\n      });\n      const result = Promise.await(this.BannersDismiss.findByUserIdAndBannerId(userId, bannerIds, {\n        projection: {\n          bannerId: 1,\n          _id: 0\n        }\n      }).toArray());\n      const dismissed = new Set(result.map(_ref2 => {\n        let {\n          bannerId\n        } = _ref2;\n        return bannerId;\n      }));\n      return banners.filter(banner => !dismissed.has(banner._id));\n    });\n  }\n\n  dismiss(userId, bannerId) {\n    return Promise.asyncApply(() => {\n      if (!userId || !bannerId) {\n        throw new Error('Invalid params');\n      }\n\n      const banner = Promise.await(this.Banners.findOneById(bannerId));\n\n      if (!banner) {\n        throw new Error('Banner not found');\n      }\n\n      const user = Promise.await(this.Users.findOneById(userId, {\n        projection: {\n          username: 1\n        }\n      }));\n\n      if (!user) {\n        throw new Error('User not found');\n      }\n\n      const dismissedBy = {\n        _id: user._id,\n        username: user.username\n      };\n      const today = new Date();\n      const doc = {\n        userId,\n        bannerId,\n        dismissedBy,\n        dismissedAt: today,\n        _updatedAt: today\n      };\n      Promise.await(this.BannersDismiss.insertOne(doc));\n      return true;\n    });\n  }\n\n  disable(bannerId) {\n    return Promise.asyncApply(() => {\n      const result = Promise.await(this.Banners.disable(bannerId));\n\n      if (result) {\n        api.broadcast('banner.disabled', bannerId);\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  enable(bannerId) {\n    return Promise.asyncApply(() => {\n      let doc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const result = Promise.await(this.Banners.findOneById(bannerId));\n\n      if (!result) {\n        return false;\n      }\n\n      const {\n        _id\n      } = result,\n            banner = _objectWithoutProperties(result, _excluded2);\n\n      this.Banners.update({\n        _id\n      }, _objectSpread(_objectSpread(_objectSpread({}, banner), doc), {}, {\n        active: true\n      })); // reenable the banner\n\n      api.broadcast('banner.enabled', bannerId);\n      return true;\n    });\n  }\n\n}","map":{"version":3,"sources":["server/services/banner/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Db } from 'mongodb';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { ServiceClass } from '../../sdk/types/ServiceClass';\nimport { BannersRaw } from '../../../app/models/server/raw/Banners';\nimport { BannersDismissRaw } from '../../../app/models/server/raw/BannersDismiss';\nimport { UsersRaw } from '../../../app/models/server/raw/Users';\nimport { IBannerService } from '../../sdk/types/IBannerService';\nimport { BannerPlatform, IBanner, IBannerDismiss } from '../../../definition/IBanner';\nimport { api } from '../../sdk/api';\nimport { IUser } from '../../../definition/IUser';\nimport { Optional } from '../../../definition/utils';\n\nexport class BannerService extends ServiceClass implements IBannerService {\n\tprotected name = 'banner';\n\n\tprivate Banners: BannersRaw;\n\n\tprivate BannersDismiss: BannersDismissRaw;\n\n\tprivate Users: UsersRaw;\n\n\tconstructor(db: Db) {\n\t\tsuper();\n\n\t\tthis.Banners = new BannersRaw(db.collection('rocketchat_banner'));\n\t\tthis.BannersDismiss = new BannersDismissRaw(db.collection('rocketchat_banner_dismiss'));\n\t\tthis.Users = new UsersRaw(db.collection('users'));\n\t}\n\n\tasync getById(bannerId: string): Promise<null | IBanner> {\n\t\treturn this.Banners.findOneById(bannerId);\n\t}\n\n\tasync discardDismissal(bannerId: string): Promise<boolean> {\n\t\tconst result = await this.Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tconst snapshot = await this.create({ ...banner, snapshot: _id, active: false }); // create a snapshot\n\n\t\tawait this.BannersDismiss.updateMany({ bannerId }, { $set: { bannerId: snapshot._id } });\n\t\treturn true;\n\t}\n\n\tasync create(doc: Optional<IBanner, '_id'>): Promise<IBanner> {\n\t\tconst bannerId = doc._id || uuidv4();\n\n\t\tdoc.view.appId = 'banner-core';\n\t\tdoc.view.viewId = bannerId;\n\n\t\tawait this.Banners.create({\n\t\t\t...doc,\n\t\t\t_id: bannerId,\n\t\t});\n\n\t\tconst banner = await this.Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('error-creating-banner');\n\t\t}\n\n\t\tapi.broadcast('banner.new', banner._id);\n\n\t\treturn banner;\n\t}\n\n\tasync getBannersForUser(userId: string, platform: BannerPlatform, bannerId?: string): Promise<IBanner[]> {\n\t\tconst user = await this.Users.findOneById<Pick<IUser, 'roles'>>(userId, {\n\t\t\tprojection: { roles: 1 },\n\t\t});\n\n\t\tconst { roles } = user || { roles: [] };\n\n\t\tconst banners = await this.Banners.findActiveByRoleOrId(roles, platform, bannerId).toArray();\n\n\t\tconst bannerIds = banners.map(({ _id }) => _id);\n\n\t\tconst result = await this.BannersDismiss.findByUserIdAndBannerId<Pick<IBannerDismiss, 'bannerId'>>(userId, bannerIds, {\n\t\t\tprojection: { bannerId: 1, _id: 0 },\n\t\t}).toArray();\n\n\t\tconst dismissed = new Set(result.map(({ bannerId }) => bannerId));\n\n\t\treturn banners.filter((banner) => !dismissed.has(banner._id));\n\t}\n\n\tasync dismiss(userId: string, bannerId: string): Promise<boolean> {\n\t\tif (!userId || !bannerId) {\n\t\t\tthrow new Error('Invalid params');\n\t\t}\n\n\t\tconst banner = await this.Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('Banner not found');\n\t\t}\n\n\t\tconst user = await this.Users.findOneById<Pick<IUser, 'username' | '_id'>>(userId, {\n\t\t\tprojection: { username: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('User not found');\n\t\t}\n\n\t\tconst dismissedBy = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t};\n\n\t\tconst today = new Date();\n\n\t\tconst doc = {\n\t\t\tuserId,\n\t\t\tbannerId,\n\t\t\tdismissedBy,\n\t\t\tdismissedAt: today,\n\t\t\t_updatedAt: today,\n\t\t};\n\n\t\tawait this.BannersDismiss.insertOne(doc);\n\n\t\treturn true;\n\t}\n\n\tasync disable(bannerId: string): Promise<boolean> {\n\t\tconst result = await this.Banners.disable(bannerId);\n\n\t\tif (result) {\n\t\t\tapi.broadcast('banner.disabled', bannerId);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync enable(bannerId: string, doc: Partial<Omit<IBanner, '_id'>> = {}): Promise<boolean> {\n\t\tconst result = await this.Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tthis.Banners.update({ _id }, { ...banner, ...doc, active: true }); // reenable the banner\n\n\t\tapi.broadcast('banner.enabled', bannerId);\n\t\treturn true;\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"3794d0d5b16e0418e48d7e362bc299fe0af51c9f"}

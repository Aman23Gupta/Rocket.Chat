{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/settings/server/settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/settings/server/settings.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/settings/server/settings.ts","inputSourceMap":{"version":3,"file":"ee/app/settings/server/settings.ts","sourceRoot":"","sources":["ee/app/settings/server/settings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,QAAQ,EAAE,MAAM,oDAAoD,CAAC;AAC9E,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,kBAAkB,EAAE,MAAM,8BAA8B,CAAC;AAC5F,OAAO,aAAa,MAAM,+CAA+C,CAAC;AAE1E,OAAO,EAAE,GAAG,EAAE,MAAM,4CAA4C,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAC;AAEjE,MAAM,UAAU,kBAAkB,CAAC,MAAgB;IAClD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;QACvB,OAAO,MAAM,CAAC,KAAK,CAAC;KACpB;IAED,IAAI,CAAC,YAAY,EAAE,EAAE;QACpB,OAAO,MAAM,CAAC,YAAY,CAAC;KAC3B;IAED,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE;QAC5B,OAAO,MAAM,CAAC,YAAY,CAAC;KAC3B;IAED,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,OAAO,EAAE;QACxC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;YAC5B,OAAO,MAAM,CAAC,YAAY,CAAC;SAC3B;KACD;IAED,OAAO,MAAM,CAAC,KAAK,CAAC;AACrB,CAAC;AAED,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE;IAClD,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;IAEzB,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;QACvB,OAAO,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;KACxB;IACD,MAAM,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAEzC,OAAO,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,cAAc,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,QAAyB,EAAQ,EAAE;IACvE,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;QAC/B,MAAM,YAAY,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,YAAY,KAAK,SAAS,EAAE;YAC/B,SAAS;SACT;QACD,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC;KAC7B;AACF,CAAC,CAAC,CAAC;AAEH,SAAS,cAAc;IACtB,MAAM,kBAAkB,GAAG,aAAa,CAAC,sBAAsB,EAAE,CAAC;IAElE,kBAAkB,CAAC,OAAO,CAAC,CAAC,MAAgB,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AACxE,CAAC;AAED,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,cAAc,EAAE,CAAC;IAEjB,kBAAkB,CAAC,cAAc,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../../app/settings/server/functions/settings';\nimport { isEnterprise, hasLicense, onValidateLicenses } from '../../license/server/license';\nimport SettingsModel from '../../../../app/models/server/models/Settings';\nimport { ISetting, SettingValue } from '../../../../definition/ISetting';\nimport { use } from '../../../../app/settings/server/Middleware';\nimport { SettingsEvents } from '../../../../app/settings/server';\n\nexport function changeSettingValue(record: ISetting): SettingValue {\n\tif (!record.enterprise) {\n\t\treturn record.value;\n\t}\n\n\tif (!isEnterprise()) {\n\t\treturn record.invalidValue;\n\t}\n\n\tif (!record.modules?.length) {\n\t\treturn record.invalidValue;\n\t}\n\n\tfor (const moduleName of record.modules) {\n\t\tif (!hasLicense(moduleName)) {\n\t\t\treturn record.invalidValue;\n\t\t}\n\t}\n\n\treturn record.value;\n}\n\nsettings.set = use(settings.set, (context, next) => {\n\tconst [record] = context;\n\n\tif (!record.enterprise) {\n\t\treturn next(...context);\n\t}\n\tconst value = changeSettingValue(record);\n\n\treturn next({ ...record, value });\n});\n\nSettingsEvents.on('fetch-settings', (settings: Array<ISetting>): void => {\n\tfor (const setting of settings) {\n\t\tconst changedValue = changeSettingValue(setting);\n\t\tif (changedValue === undefined) {\n\t\t\tcontinue;\n\t\t}\n\t\tsetting.value = changedValue;\n\t}\n});\n\nfunction updateSettings(): void {\n\tconst enterpriseSettings = SettingsModel.findEnterpriseSettings();\n\n\tenterpriseSettings.forEach((record: ISetting) => settings.set(record));\n}\n\nMeteor.startup(() => {\n\tupdateSettings();\n\n\tonValidateLicenses(updateSettings);\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/settings/server/settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/settings/server/settings.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  changeSettingValue: () => changeSettingValue\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../../app/settings/server/functions/settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\nlet isEnterprise, hasLicense, onValidateLicenses;\nmodule.link(\"../../license/server/license\", {\n  isEnterprise(v) {\n    isEnterprise = v;\n  },\n\n  hasLicense(v) {\n    hasLicense = v;\n  },\n\n  onValidateLicenses(v) {\n    onValidateLicenses = v;\n  }\n\n}, 2);\nlet SettingsModel;\nmodule.link(\"../../../../app/models/server/models/Settings\", {\n  default(v) {\n    SettingsModel = v;\n  }\n\n}, 3);\nlet use;\nmodule.link(\"../../../../app/settings/server/Middleware\", {\n  use(v) {\n    use = v;\n  }\n\n}, 4);\nlet SettingsEvents;\nmodule.link(\"../../../../app/settings/server\", {\n  SettingsEvents(v) {\n    SettingsEvents = v;\n  }\n\n}, 5);\n\nfunction changeSettingValue(record) {\n  var _record$modules;\n\n  if (!record.enterprise) {\n    return record.value;\n  }\n\n  if (!isEnterprise()) {\n    return record.invalidValue;\n  }\n\n  if (!((_record$modules = record.modules) !== null && _record$modules !== void 0 && _record$modules.length)) {\n    return record.invalidValue;\n  }\n\n  for (const moduleName of record.modules) {\n    if (!hasLicense(moduleName)) {\n      return record.invalidValue;\n    }\n  }\n\n  return record.value;\n}\n\nsettings.set = use(settings.set, (context, next) => {\n  const [record] = context;\n\n  if (!record.enterprise) {\n    return next(...context);\n  }\n\n  const value = changeSettingValue(record);\n  return next(_objectSpread(_objectSpread({}, record), {}, {\n    value\n  }));\n});\nSettingsEvents.on('fetch-settings', settings => {\n  for (const setting of settings) {\n    const changedValue = changeSettingValue(setting);\n\n    if (changedValue === undefined) {\n      continue;\n    }\n\n    setting.value = changedValue;\n  }\n});\n\nfunction updateSettings() {\n  const enterpriseSettings = SettingsModel.findEnterpriseSettings();\n  enterpriseSettings.forEach(record => settings.set(record));\n}\n\nMeteor.startup(() => {\n  updateSettings();\n  onValidateLicenses(updateSettings);\n});","map":{"version":3,"sources":["ee/app/settings/server/settings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../../app/settings/server/functions/settings';\nimport { isEnterprise, hasLicense, onValidateLicenses } from '../../license/server/license';\nimport SettingsModel from '../../../../app/models/server/models/Settings';\nimport { ISetting, SettingValue } from '../../../../definition/ISetting';\nimport { use } from '../../../../app/settings/server/Middleware';\nimport { SettingsEvents } from '../../../../app/settings/server';\n\nexport function changeSettingValue(record: ISetting): SettingValue {\n\tif (!record.enterprise) {\n\t\treturn record.value;\n\t}\n\n\tif (!isEnterprise()) {\n\t\treturn record.invalidValue;\n\t}\n\n\tif (!record.modules?.length) {\n\t\treturn record.invalidValue;\n\t}\n\n\tfor (const moduleName of record.modules) {\n\t\tif (!hasLicense(moduleName)) {\n\t\t\treturn record.invalidValue;\n\t\t}\n\t}\n\n\treturn record.value;\n}\n\nsettings.set = use(settings.set, (context, next) => {\n\tconst [record] = context;\n\n\tif (!record.enterprise) {\n\t\treturn next(...context);\n\t}\n\tconst value = changeSettingValue(record);\n\n\treturn next({ ...record, value });\n});\n\nSettingsEvents.on('fetch-settings', (settings: Array<ISetting>): void => {\n\tfor (const setting of settings) {\n\t\tconst changedValue = changeSettingValue(setting);\n\t\tif (changedValue === undefined) {\n\t\t\tcontinue;\n\t\t}\n\t\tsetting.value = changedValue;\n\t}\n});\n\nfunction updateSettings(): void {\n\tconst enterpriseSettings = SettingsModel.findEnterpriseSettings();\n\n\tenterpriseSettings.forEach((record: ISetting) => settings.set(record));\n}\n\nMeteor.startup(() => {\n\tupdateSettings();\n\n\tonValidateLicenses(updateSettings);\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"5933115cc3264032c7ad590050f5249fc8ffc85d"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/scheduleAutoTransfer.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/hooks/scheduleAutoTransfer.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/scheduleAutoTransfer.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/hooks/scheduleAutoTransfer.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/hooks/scheduleAutoTransfer.ts"],"names":[],"mappings":"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","sourcesContent":["import { AutoTransferChatScheduler } from '../lib/AutoTransferChatScheduler';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { settings } from '../../../../../app/settings/server';\nimport { LivechatRooms } from '../../../../../app/models/server';\nimport { cbLogger } from '../lib/logger';\n\nlet autoTransferTimeout = 0;\n\nconst handleAfterTakeInquiryCallback = async (inquiry: any = {}): Promise<any> => {\n\tconst { rid } = inquiry;\n\tif (!rid || !rid.trim()) {\n\t\tcbLogger.debug('Skipping callback. Invalid room id');\n\t\treturn;\n\t}\n\n\tif (!autoTransferTimeout || autoTransferTimeout <= 0) {\n\t\tcbLogger.debug('Skipping callback. No auto transfer timeout or invalid value from setting');\n\t\treturn inquiry;\n\t}\n\n\tconst room = LivechatRooms.findOneById(rid, { autoTransferredAt: 1, autoTransferOngoing: 1 });\n\tif (!room || room.autoTransferredAt || room.autoTransferOngoing) {\n\t\tcbLogger.debug(`Skipping callback. Room ${room._id} already being transfered or not found`);\n\t\treturn inquiry;\n\t}\n\n\tcbLogger.debug(`Callback success. Room ${room._id} will be scheduled to be auto transfered after ${autoTransferTimeout} seconds`);\n\tawait AutoTransferChatScheduler.scheduleRoom(rid, autoTransferTimeout as number);\n\n\treturn inquiry;\n};\n\nconst handleAfterSaveMessage = async (message: any = {}, room: any = {}): Promise<any> => {\n\tconst { _id: rid, t, autoTransferredAt, autoTransferOngoing } = room;\n\tconst { token } = message;\n\n\tif (!autoTransferTimeout || autoTransferTimeout <= 0) {\n\t\treturn message;\n\t}\n\n\tif (!rid || !message || rid === '' || t !== 'l' || token) {\n\t\treturn message;\n\t}\n\n\tif (autoTransferredAt) {\n\t\treturn message;\n\t}\n\n\tif (!autoTransferOngoing) {\n\t\treturn message;\n\t}\n\n\tawait AutoTransferChatScheduler.unscheduleRoom(rid);\n\treturn message;\n};\n\nconst handleAfterCloseRoom = async (room: any = {}): Promise<any> => {\n\tconst { _id: rid, autoTransferredAt, autoTransferOngoing } = room;\n\n\tif (!autoTransferTimeout || autoTransferTimeout <= 0) {\n\t\treturn room;\n\t}\n\n\tif (autoTransferredAt) {\n\t\treturn room;\n\t}\n\n\tif (!autoTransferOngoing) {\n\t\treturn room;\n\t}\n\n\tawait AutoTransferChatScheduler.unscheduleRoom(rid);\n\treturn room;\n};\n\nsettings.watch('Livechat_auto_transfer_chat_timeout', function (value) {\n\tautoTransferTimeout = value as number;\n\tif (!autoTransferTimeout || autoTransferTimeout === 0) {\n\t\tcallbacks.remove('livechat.afterTakeInquiry', 'livechat-auto-transfer-job-inquiry');\n\t\tcallbacks.remove('afterSaveMessage', 'livechat-cancel-auto-transfer-job-after-message');\n\t\tcallbacks.remove('livechat.closeRoom', 'livechat-cancel-auto-transfer-on-close-room');\n\t\treturn;\n\t}\n\n\tcallbacks.add(\n\t\t'livechat.afterTakeInquiry',\n\t\thandleAfterTakeInquiryCallback,\n\t\tcallbacks.priority.MEDIUM,\n\t\t'livechat-auto-transfer-job-inquiry',\n\t);\n\tcallbacks.add('afterSaveMessage', handleAfterSaveMessage, callbacks.priority.HIGH, 'livechat-cancel-auto-transfer-job-after-message');\n\tcallbacks.add('livechat.closeRoom', handleAfterCloseRoom, callbacks.priority.HIGH, 'livechat-cancel-auto-transfer-on-close-room');\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/scheduleAutoTransfer.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/hooks/scheduleAutoTransfer.ts"}},"code":"let AutoTransferChatScheduler;\nmodule.link(\"../lib/AutoTransferChatScheduler\", {\n  AutoTransferChatScheduler(v) {\n    AutoTransferChatScheduler = v;\n  }\n\n}, 0);\nlet callbacks;\nmodule.link(\"../../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet LivechatRooms;\nmodule.link(\"../../../../../app/models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 3);\nlet cbLogger;\nmodule.link(\"../lib/logger\", {\n  cbLogger(v) {\n    cbLogger = v;\n  }\n\n}, 4);\nlet autoTransferTimeout = 0;\n\nconst handleAfterTakeInquiryCallback = function () {\n  return Promise.asyncApply(() => {\n    let inquiry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      rid\n    } = inquiry;\n\n    if (!rid || !rid.trim()) {\n      cbLogger.debug('Skipping callback. Invalid room id');\n      return;\n    }\n\n    if (!autoTransferTimeout || autoTransferTimeout <= 0) {\n      cbLogger.debug('Skipping callback. No auto transfer timeout or invalid value from setting');\n      return inquiry;\n    }\n\n    const room = LivechatRooms.findOneById(rid, {\n      autoTransferredAt: 1,\n      autoTransferOngoing: 1\n    });\n\n    if (!room || room.autoTransferredAt || room.autoTransferOngoing) {\n      cbLogger.debug(\"Skipping callback. Room \".concat(room._id, \" already being transfered or not found\"));\n      return inquiry;\n    }\n\n    cbLogger.debug(\"Callback success. Room \".concat(room._id, \" will be scheduled to be auto transfered after \").concat(autoTransferTimeout, \" seconds\"));\n    Promise.await(AutoTransferChatScheduler.scheduleRoom(rid, autoTransferTimeout));\n    return inquiry;\n  });\n};\n\nconst handleAfterSaveMessage = function () {\n  return Promise.asyncApply(() => {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let room = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      _id: rid,\n      t,\n      autoTransferredAt,\n      autoTransferOngoing\n    } = room;\n    const {\n      token\n    } = message;\n\n    if (!autoTransferTimeout || autoTransferTimeout <= 0) {\n      return message;\n    }\n\n    if (!rid || !message || rid === '' || t !== 'l' || token) {\n      return message;\n    }\n\n    if (autoTransferredAt) {\n      return message;\n    }\n\n    if (!autoTransferOngoing) {\n      return message;\n    }\n\n    Promise.await(AutoTransferChatScheduler.unscheduleRoom(rid));\n    return message;\n  });\n};\n\nconst handleAfterCloseRoom = function () {\n  return Promise.asyncApply(() => {\n    let room = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      _id: rid,\n      autoTransferredAt,\n      autoTransferOngoing\n    } = room;\n\n    if (!autoTransferTimeout || autoTransferTimeout <= 0) {\n      return room;\n    }\n\n    if (autoTransferredAt) {\n      return room;\n    }\n\n    if (!autoTransferOngoing) {\n      return room;\n    }\n\n    Promise.await(AutoTransferChatScheduler.unscheduleRoom(rid));\n    return room;\n  });\n};\n\nsettings.watch('Livechat_auto_transfer_chat_timeout', function (value) {\n  autoTransferTimeout = value;\n\n  if (!autoTransferTimeout || autoTransferTimeout === 0) {\n    callbacks.remove('livechat.afterTakeInquiry', 'livechat-auto-transfer-job-inquiry');\n    callbacks.remove('afterSaveMessage', 'livechat-cancel-auto-transfer-job-after-message');\n    callbacks.remove('livechat.closeRoom', 'livechat-cancel-auto-transfer-on-close-room');\n    return;\n  }\n\n  callbacks.add('livechat.afterTakeInquiry', handleAfterTakeInquiryCallback, callbacks.priority.MEDIUM, 'livechat-auto-transfer-job-inquiry');\n  callbacks.add('afterSaveMessage', handleAfterSaveMessage, callbacks.priority.HIGH, 'livechat-cancel-auto-transfer-job-after-message');\n  callbacks.add('livechat.closeRoom', handleAfterCloseRoom, callbacks.priority.HIGH, 'livechat-cancel-auto-transfer-on-close-room');\n});","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/hooks/scheduleAutoTransfer.ts"],"names":[],"mappings":"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","sourcesContent":["import { AutoTransferChatScheduler } from '../lib/AutoTransferChatScheduler';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { settings } from '../../../../../app/settings/server';\nimport { LivechatRooms } from '../../../../../app/models/server';\nimport { cbLogger } from '../lib/logger';\n\nlet autoTransferTimeout = 0;\n\nconst handleAfterTakeInquiryCallback = async (inquiry: any = {}): Promise<any> => {\n\tconst { rid } = inquiry;\n\tif (!rid || !rid.trim()) {\n\t\tcbLogger.debug('Skipping callback. Invalid room id');\n\t\treturn;\n\t}\n\n\tif (!autoTransferTimeout || autoTransferTimeout <= 0) {\n\t\tcbLogger.debug('Skipping callback. No auto transfer timeout or invalid value from setting');\n\t\treturn inquiry;\n\t}\n\n\tconst room = LivechatRooms.findOneById(rid, { autoTransferredAt: 1, autoTransferOngoing: 1 });\n\tif (!room || room.autoTransferredAt || room.autoTransferOngoing) {\n\t\tcbLogger.debug(`Skipping callback. Room ${room._id} already being transfered or not found`);\n\t\treturn inquiry;\n\t}\n\n\tcbLogger.debug(`Callback success. Room ${room._id} will be scheduled to be auto transfered after ${autoTransferTimeout} seconds`);\n\tawait AutoTransferChatScheduler.scheduleRoom(rid, autoTransferTimeout as number);\n\n\treturn inquiry;\n};\n\nconst handleAfterSaveMessage = async (message: any = {}, room: any = {}): Promise<any> => {\n\tconst { _id: rid, t, autoTransferredAt, autoTransferOngoing } = room;\n\tconst { token } = message;\n\n\tif (!autoTransferTimeout || autoTransferTimeout <= 0) {\n\t\treturn message;\n\t}\n\n\tif (!rid || !message || rid === '' || t !== 'l' || token) {\n\t\treturn message;\n\t}\n\n\tif (autoTransferredAt) {\n\t\treturn message;\n\t}\n\n\tif (!autoTransferOngoing) {\n\t\treturn message;\n\t}\n\n\tawait AutoTransferChatScheduler.unscheduleRoom(rid);\n\treturn message;\n};\n\nconst handleAfterCloseRoom = async (room: any = {}): Promise<any> => {\n\tconst { _id: rid, autoTransferredAt, autoTransferOngoing } = room;\n\n\tif (!autoTransferTimeout || autoTransferTimeout <= 0) {\n\t\treturn room;\n\t}\n\n\tif (autoTransferredAt) {\n\t\treturn room;\n\t}\n\n\tif (!autoTransferOngoing) {\n\t\treturn room;\n\t}\n\n\tawait AutoTransferChatScheduler.unscheduleRoom(rid);\n\treturn room;\n};\n\nsettings.watch('Livechat_auto_transfer_chat_timeout', function (value) {\n\tautoTransferTimeout = value as number;\n\tif (!autoTransferTimeout || autoTransferTimeout === 0) {\n\t\tcallbacks.remove('livechat.afterTakeInquiry', 'livechat-auto-transfer-job-inquiry');\n\t\tcallbacks.remove('afterSaveMessage', 'livechat-cancel-auto-transfer-job-after-message');\n\t\tcallbacks.remove('livechat.closeRoom', 'livechat-cancel-auto-transfer-on-close-room');\n\t\treturn;\n\t}\n\n\tcallbacks.add(\n\t\t'livechat.afterTakeInquiry',\n\t\thandleAfterTakeInquiryCallback,\n\t\tcallbacks.priority.MEDIUM,\n\t\t'livechat-auto-transfer-job-inquiry',\n\t);\n\tcallbacks.add('afterSaveMessage', handleAfterSaveMessage, callbacks.priority.HIGH, 'livechat-cancel-auto-transfer-job-after-message');\n\tcallbacks.add('livechat.closeRoom', handleAfterCloseRoom, callbacks.priority.HIGH, 'livechat-cancel-auto-transfer-on-close-room');\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"0c8b184927e66d21516be2ef635cc48ce25f000f"}

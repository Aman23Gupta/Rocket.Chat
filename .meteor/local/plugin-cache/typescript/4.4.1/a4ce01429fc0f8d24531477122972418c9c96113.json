{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/FederationKeys.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/FederationKeys.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/FederationKeys.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/FederationKeys.ts","sourceRoot":"","sources":["app/models/server/raw/FederationKeys.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,UAAU,CAAC;AAE/B,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAOpC,MAAM,OAAO,iBAAkB,SAAQ,OAAU;IAChD,KAAK,CAAC,MAAM,CAAC,IAAe;QAC3B,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAEjD,IAAI,CAAC,WAAW,EAAE;YACjB,OAAO,IAAI,CAAC;SACZ;QAED,OAAO,WAAW,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,OAAoB,EAAE,IAAe;QAC5C,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,SAAS,IAAI,MAAM,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,YAAY;QAIjB,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAEpC,GAAG,CAAC,eAAe,EAAE,CAAC;QAEtB,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAE1B,MAAM,IAAI,CAAC,SAAS,CAAC;YACpB,IAAI,EAAE,SAAS;YACf,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;SAC7D,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,SAAS,CAAC;YACpB,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;SAC5D,CAAC,CAAC;QAEH,OAAO;YACN,UAAU,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE;YACtC,SAAS,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE;SACpC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,aAAa;QAClB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAE7C,OAAO,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACpD,CAAC;IAED,mBAAmB;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,YAAY;QACjB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE5C,OAAO,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,kBAAkB;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;CACD","sourcesContent":["import NodeRSA from 'node-rsa';\n\nimport { BaseRaw } from './BaseRaw';\n\ntype T = {\n\ttype: 'private' | 'public';\n\tkey: string;\n};\n\nexport class FederationKeysRaw extends BaseRaw<T> {\n\tasync getKey(type: T['type']): Promise<string | null> {\n\t\tconst keyResource = await this.findOne({ type });\n\n\t\tif (!keyResource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn keyResource.key;\n\t}\n\n\tloadKey(keyData: NodeRSA.Key, type: T['type']): NodeRSA {\n\t\treturn new NodeRSA(keyData, `pkcs8-${type}-pem`);\n\t}\n\n\tasync generateKeys(): Promise<{\n\t\tprivateKey: '' | NodeRSA | null;\n\t\tpublicKey: '' | NodeRSA | null;\n\t}> {\n\t\tconst key = new NodeRSA({ b: 512 });\n\n\t\tkey.generateKeyPair();\n\n\t\tawait this.deleteMany({});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'private',\n\t\t\tkey: key.exportKey('pkcs8-private-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'public',\n\t\t\tkey: key.exportKey('pkcs8-public-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\treturn {\n\t\t\tprivateKey: await this.getPrivateKey(),\n\t\t\tpublicKey: await this.getPublicKey(),\n\t\t};\n\t}\n\n\tasync getPrivateKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('private');\n\n\t\treturn keyData && this.loadKey(keyData, 'private');\n\t}\n\n\tgetPrivateKeyString(): Promise<string | null> {\n\t\treturn this.getKey('private');\n\t}\n\n\tasync getPublicKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('public');\n\n\t\treturn keyData && this.loadKey(keyData, 'public');\n\t}\n\n\tgetPublicKeyString(): Promise<string | null> {\n\t\treturn this.getKey('public');\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/FederationKeys.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/FederationKeys.ts"}},"code":"module.export({\n  FederationKeysRaw: () => FederationKeysRaw\n});\nlet NodeRSA;\nmodule.link(\"node-rsa\", {\n  default(v) {\n    NodeRSA = v;\n  }\n\n}, 0);\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 1);\n\nclass FederationKeysRaw extends BaseRaw {\n  getKey(type) {\n    return Promise.asyncApply(() => {\n      const keyResource = Promise.await(this.findOne({\n        type\n      }));\n\n      if (!keyResource) {\n        return null;\n      }\n\n      return keyResource.key;\n    });\n  }\n\n  loadKey(keyData, type) {\n    return new NodeRSA(keyData, \"pkcs8-\".concat(type, \"-pem\"));\n  }\n\n  generateKeys() {\n    return Promise.asyncApply(() => {\n      const key = new NodeRSA({\n        b: 512\n      });\n      key.generateKeyPair();\n      Promise.await(this.deleteMany({}));\n      Promise.await(this.insertOne({\n        type: 'private',\n        key: key.exportKey('pkcs8-private-pem').replace(/\\n|\\r/g, '')\n      }));\n      Promise.await(this.insertOne({\n        type: 'public',\n        key: key.exportKey('pkcs8-public-pem').replace(/\\n|\\r/g, '')\n      }));\n      return {\n        privateKey: Promise.await(this.getPrivateKey()),\n        publicKey: Promise.await(this.getPublicKey())\n      };\n    });\n  }\n\n  getPrivateKey() {\n    return Promise.asyncApply(() => {\n      const keyData = Promise.await(this.getKey('private'));\n      return keyData && this.loadKey(keyData, 'private');\n    });\n  }\n\n  getPrivateKeyString() {\n    return this.getKey('private');\n  }\n\n  getPublicKey() {\n    return Promise.asyncApply(() => {\n      const keyData = Promise.await(this.getKey('public'));\n      return keyData && this.loadKey(keyData, 'public');\n    });\n  }\n\n  getPublicKeyString() {\n    return this.getKey('public');\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/FederationKeys.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAc;AAAA,EAAA,iBAAiB,EAAA,MAAA;AAAjB,CAAd;AAA+B,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AASzB,MAAO,iBAAP,SAAiC,OAAjC,CAA2C;AAC1C,EAAA,MAAM,CAAC,IAAD;AAAA,oCAAgB;AAC3B,YAAM,WAAW,iBAAS,KAAK,OAAL,CAAa;AAAE,QAAA;AAAF,OAAb,CAAT,CAAjB;;AAEA,UAAI,CAAC,WAAL,EAAkB;AACjB,eAAO,IAAP;AACA;;AAED,aAAO,WAAW,CAAC,GAAnB;AACA,KARW;AAAA;;AAUZ,EAAA,OAAO,CAAC,OAAD,EAAuB,IAAvB,EAAsC;AAC5C,WAAO,IAAI,OAAJ,CAAY,OAAZ,kBAA8B,IAA9B,UAAP;AACA;;AAEK,EAAA,YAAY;AAAA,oCAAA;AAIjB,YAAM,GAAG,GAAG,IAAI,OAAJ,CAAY;AAAE,QAAA,CAAC,EAAE;AAAL,OAAZ,CAAZ;AAEA,MAAA,GAAG,CAAC,eAAJ;AAEA,oBAAM,KAAK,UAAL,CAAgB,EAAhB,CAAN;AAEA,oBAAM,KAAK,SAAL,CAAe;AACpB,QAAA,IAAI,EAAE,SADc;AAEpB,QAAA,GAAG,EAAE,GAAG,CAAC,SAAJ,CAAc,mBAAd,EAAmC,OAAnC,CAA2C,QAA3C,EAAqD,EAArD;AAFe,OAAf,CAAN;AAKA,oBAAM,KAAK,SAAL,CAAe;AACpB,QAAA,IAAI,EAAE,QADc;AAEpB,QAAA,GAAG,EAAE,GAAG,CAAC,SAAJ,CAAc,kBAAd,EAAkC,OAAlC,CAA0C,QAA1C,EAAoD,EAApD;AAFe,OAAf,CAAN;AAKA,aAAO;AACN,QAAA,UAAU,gBAAQ,KAAK,aAAL,EAAR,CADJ;AAEN,QAAA,SAAS,gBAAQ,KAAK,YAAL,EAAR;AAFH,OAAP;AAIA,KAxBiB;AAAA;;AA0BZ,EAAA,aAAa;AAAA,oCAAA;AAClB,YAAM,OAAO,iBAAS,KAAK,MAAL,CAAY,SAAZ,CAAT,CAAb;AAEA,aAAO,OAAO,IAAI,KAAK,OAAL,CAAa,OAAb,EAAsB,SAAtB,CAAlB;AACA,KAJkB;AAAA;;AAMnB,EAAA,mBAAmB,GAAA;AAClB,WAAO,KAAK,MAAL,CAAY,SAAZ,CAAP;AACA;;AAEK,EAAA,YAAY;AAAA,oCAAA;AACjB,YAAM,OAAO,iBAAS,KAAK,MAAL,CAAY,QAAZ,CAAT,CAAb;AAEA,aAAO,OAAO,IAAI,KAAK,OAAL,CAAa,OAAb,EAAsB,QAAtB,CAAlB;AACA,KAJiB;AAAA;;AAMlB,EAAA,kBAAkB,GAAA;AACjB,WAAO,KAAK,MAAL,CAAY,QAAZ,CAAP;AACA;;AA3D+C","sourcesContent":["import NodeRSA from 'node-rsa';\n\nimport { BaseRaw } from './BaseRaw';\n\ntype T = {\n\ttype: 'private' | 'public';\n\tkey: string;\n};\n\nexport class FederationKeysRaw extends BaseRaw<T> {\n\tasync getKey(type: T['type']): Promise<string | null> {\n\t\tconst keyResource = await this.findOne({ type });\n\n\t\tif (!keyResource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn keyResource.key;\n\t}\n\n\tloadKey(keyData: NodeRSA.Key, type: T['type']): NodeRSA {\n\t\treturn new NodeRSA(keyData, `pkcs8-${type}-pem`);\n\t}\n\n\tasync generateKeys(): Promise<{\n\t\tprivateKey: '' | NodeRSA | null;\n\t\tpublicKey: '' | NodeRSA | null;\n\t}> {\n\t\tconst key = new NodeRSA({ b: 512 });\n\n\t\tkey.generateKeyPair();\n\n\t\tawait this.deleteMany({});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'private',\n\t\t\tkey: key.exportKey('pkcs8-private-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'public',\n\t\t\tkey: key.exportKey('pkcs8-public-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\treturn {\n\t\t\tprivateKey: await this.getPrivateKey(),\n\t\t\tpublicKey: await this.getPublicKey(),\n\t\t};\n\t}\n\n\tasync getPrivateKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('private');\n\n\t\treturn keyData && this.loadKey(keyData, 'private');\n\t}\n\n\tgetPrivateKeyString(): Promise<string | null> {\n\t\treturn this.getKey('private');\n\t}\n\n\tasync getPublicKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('public');\n\n\t\treturn keyData && this.loadKey(keyData, 'public');\n\t}\n\n\tgetPublicKeyString(): Promise<string | null> {\n\t\treturn this.getKey('public');\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"a4ce01429fc0f8d24531477122972418c9c96113"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/settings.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/settings.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/settings.ts","sourceRoot":"","sources":["app/api/server/v1/settings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\nimport _ from 'underscore';\n\nimport { Settings } from '../../../models/server/raw';\nimport { hasPermission } from '../../../authorization/server';\nimport { API, ResultFor } from '../api';\nimport { SettingsEvents, settings } from '../../../settings/server';\nimport { setValue } from '../../../settings/server/raw';\nimport { ISetting, ISettingColor, isSettingAction, isSettingColor } from '../../../../definition/ISetting';\nimport {\n\tisOauthCustomConfiguration,\n\tisSettingsUpdatePropDefault,\n\tisSettingsUpdatePropsActions,\n\tisSettingsUpdatePropsColor,\n} from '../../../../definition/rest/v1/settings';\n\nconst fetchSettings = async (\n\tquery: Parameters<typeof Settings.find>[0],\n\tsort: Parameters<typeof Settings.find>[1]['sort'],\n\toffset: Parameters<typeof Settings.find>[1]['skip'],\n\tcount: Parameters<typeof Settings.find>[1]['limit'],\n\tfields: Parameters<typeof Settings.find>[1]['projection'],\n): Promise<ISetting[]> => {\n\tconst settings = (await Settings.find(query, {\n\t\tsort: sort || { _id: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: { _id: 1, value: 1, enterprise: 1, invalidValue: 1, modules: 1, ...fields },\n\t}).toArray()) as unknown as ISetting[];\n\n\tSettingsEvents.emit('fetch-settings', settings);\n\treturn settings;\n};\n\n// settings endpoints\nAPI.v1.addRoute(\n\t'settings.public',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort, fields, query } = this.parseJsonQuery();\n\n\t\t\tconst ourQuery = {\n\t\t\t\t...query,\n\t\t\t\thidden: { $ne: true },\n\t\t\t\tpublic: true,\n\t\t\t};\n\n\t\t\tconst settings = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal: await Settings.find(ourQuery).count(),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.oauth',\n\t{ authRequired: false },\n\t{\n\t\tget() {\n\t\t\tconst oAuthServicesEnabled = ServiceConfiguration.configurations.find({}, { fields: { secret: 0 } }).fetch();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tservices: oAuthServicesEnabled.map((service) => {\n\t\t\t\t\tif (!isOauthCustomConfiguration(service)) {\n\t\t\t\t\t\treturn service;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (service.custom || (service.service && ['saml', 'cas', 'wordpress'].includes(service.service))) {\n\t\t\t\t\t\treturn { ...service };\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: service._id,\n\t\t\t\t\t\tname: service.service,\n\t\t\t\t\t\tclientId: service.appId || service.clientId || service.consumerKey,\n\t\t\t\t\t\tbuttonLabelText: service.buttonLabelText || '',\n\t\t\t\t\t\tbuttonColor: service.buttonColor || '',\n\t\t\t\t\t\tbuttonLabelColor: service.buttonLabelColor || '',\n\t\t\t\t\t\tcustom: false,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.addCustomOAuth',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!this.bodyParams.name || !this.bodyParams.name.trim()) {\n\t\t\t\tthrow new Meteor.Error('error-name-param-not-provided', 'The parameter \"name\" is required');\n\t\t\t}\n\n\t\t\tawait Meteor.call('addOAuthService', this.bodyParams.name, this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort, fields, query } = this.parseJsonQuery();\n\n\t\t\tlet ourQuery: Parameters<typeof Settings.find>[0] = {\n\t\t\t\thidden: { $ne: true },\n\t\t\t};\n\n\t\t\tif (!hasPermission(this.userId, 'view-privileged-setting')) {\n\t\t\t\tourQuery.public = true;\n\t\t\t}\n\n\t\t\tourQuery = Object.assign({}, query, ourQuery);\n\n\t\t\tconst settings = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal: Settings.find(ourQuery).count(),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings/:_id',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tif (!hasPermission(this.userId, 'view-privileged-setting')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\tif (!setting) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\t\t\treturn API.v1.success(_.pick(setting, '_id', 'value'));\n\t\t},\n\t\tpost: {\n\t\t\ttwoFactorRequired: true,\n\t\t\tasync action(): Promise<ResultFor<'POST', 'settings/:_id'>> {\n\t\t\t\tif (!hasPermission(this.userId, 'edit-privileged-setting')) {\n\t\t\t\t\treturn API.v1.unauthorized();\n\t\t\t\t}\n\n\t\t\t\tif (typeof this.urlParams._id !== 'string') {\n\t\t\t\t\tthrow new Meteor.Error('error-id-param-not-provided', 'The parameter \"id\" is required');\n\t\t\t\t}\n\n\t\t\t\t// allow special handling of particular setting types\n\t\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\n\t\t\t\tif (!setting) {\n\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingAction(setting) && isSettingsUpdatePropsActions(this.bodyParams) && this.bodyParams.execute) {\n\t\t\t\t\t// execute the configured method\n\t\t\t\t\tMeteor.call(setting.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingColor(setting) && isSettingsUpdatePropsColor(this.bodyParams)) {\n\t\t\t\t\tSettings.updateOptionsById<ISettingColor>(this.urlParams._id, {\n\t\t\t\t\t\teditor: this.bodyParams.editor,\n\t\t\t\t\t});\n\t\t\t\t\tSettings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tisSettingsUpdatePropDefault(this.bodyParams) &&\n\t\t\t\t\t(await Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value))\n\t\t\t\t) {\n\t\t\t\t\tconst s = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\t\t\tif (!s) {\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\t\t\t\t\tsettings.set(s);\n\t\t\t\t\tsetValue(this.urlParams._id, this.bodyParams.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t},\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'service.configurations',\n\t{ authRequired: false },\n\t{\n\t\tget() {\n\t\t\treturn API.v1.success({\n\t\t\t\tconfigurations: ServiceConfiguration.configurations.find({}, { fields: { secret: 0 } }).fetch(),\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/settings.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ServiceConfiguration;\nmodule.link(\"meteor/service-configuration\", {\n  ServiceConfiguration(v) {\n    ServiceConfiguration = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 2);\nlet Settings;\nmodule.link(\"../../../models/server/raw\", {\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 3);\nlet hasPermission;\nmodule.link(\"../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 4);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 5);\nlet SettingsEvents, settings;\nmodule.link(\"../../../settings/server\", {\n  SettingsEvents(v) {\n    SettingsEvents = v;\n  },\n\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet setValue;\nmodule.link(\"../../../settings/server/raw\", {\n  setValue(v) {\n    setValue = v;\n  }\n\n}, 7);\nlet isSettingAction, isSettingColor;\nmodule.link(\"../../../../definition/ISetting\", {\n  isSettingAction(v) {\n    isSettingAction = v;\n  },\n\n  isSettingColor(v) {\n    isSettingColor = v;\n  }\n\n}, 8);\nlet isOauthCustomConfiguration, isSettingsUpdatePropDefault, isSettingsUpdatePropsActions, isSettingsUpdatePropsColor;\nmodule.link(\"../../../../definition/rest/v1/settings\", {\n  isOauthCustomConfiguration(v) {\n    isOauthCustomConfiguration = v;\n  },\n\n  isSettingsUpdatePropDefault(v) {\n    isSettingsUpdatePropDefault = v;\n  },\n\n  isSettingsUpdatePropsActions(v) {\n    isSettingsUpdatePropsActions = v;\n  },\n\n  isSettingsUpdatePropsColor(v) {\n    isSettingsUpdatePropsColor = v;\n  }\n\n}, 9);\n\nconst fetchSettings = (query, sort, offset, count, fields) => Promise.asyncApply(() => {\n  const settings = Promise.await(Settings.find(query, {\n    sort: sort || {\n      _id: 1\n    },\n    skip: offset,\n    limit: count,\n    projection: _objectSpread({\n      _id: 1,\n      value: 1,\n      enterprise: 1,\n      invalidValue: 1,\n      modules: 1\n    }, fields)\n  }).toArray());\n  SettingsEvents.emit('fetch-settings', settings);\n  return settings;\n}); // settings endpoints\n\n\nAPI.v1.addRoute('settings.public', {\n  authRequired: false\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        offset,\n        count\n      } = this.getPaginationItems();\n      const {\n        sort,\n        fields,\n        query\n      } = this.parseJsonQuery();\n\n      const ourQuery = _objectSpread(_objectSpread({}, query), {}, {\n        hidden: {\n          $ne: true\n        },\n        public: true\n      });\n\n      const settings = Promise.await(fetchSettings(ourQuery, sort, offset, count, fields));\n      return API.v1.success({\n        settings,\n        count: settings.length,\n        offset,\n        total: Promise.await(Settings.find(ourQuery).count())\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('settings.oauth', {\n  authRequired: false\n}, {\n  get() {\n    const oAuthServicesEnabled = ServiceConfiguration.configurations.find({}, {\n      fields: {\n        secret: 0\n      }\n    }).fetch();\n    return API.v1.success({\n      services: oAuthServicesEnabled.map(service => {\n        if (!isOauthCustomConfiguration(service)) {\n          return service;\n        }\n\n        if (service.custom || service.service && ['saml', 'cas', 'wordpress'].includes(service.service)) {\n          return _objectSpread({}, service);\n        }\n\n        return {\n          _id: service._id,\n          name: service.service,\n          clientId: service.appId || service.clientId || service.consumerKey,\n          buttonLabelText: service.buttonLabelText || '',\n          buttonColor: service.buttonColor || '',\n          buttonLabelColor: service.buttonLabelColor || '',\n          custom: false\n        };\n      })\n    });\n  }\n\n});\nAPI.v1.addRoute('settings.addCustomOAuth', {\n  authRequired: true,\n  twoFactorRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      if (!this.bodyParams.name || !this.bodyParams.name.trim()) {\n        throw new Meteor.Error('error-name-param-not-provided', 'The parameter \"name\" is required');\n      }\n\n      Promise.await(Meteor.call('addOAuthService', this.bodyParams.name, this.userId));\n      return API.v1.success();\n    });\n  }\n\n});\nAPI.v1.addRoute('settings', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const {\n        offset,\n        count\n      } = this.getPaginationItems();\n      const {\n        sort,\n        fields,\n        query\n      } = this.parseJsonQuery();\n      let ourQuery = {\n        hidden: {\n          $ne: true\n        }\n      };\n\n      if (!hasPermission(this.userId, 'view-privileged-setting')) {\n        ourQuery.public = true;\n      }\n\n      ourQuery = Object.assign({}, query, ourQuery);\n      const settings = Promise.await(fetchSettings(ourQuery, sort, offset, count, fields));\n      return API.v1.success({\n        settings,\n        count: settings.length,\n        offset,\n        total: Settings.find(ourQuery).count()\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('settings/:_id', {\n  authRequired: true\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      if (!hasPermission(this.userId, 'view-privileged-setting')) {\n        return API.v1.unauthorized();\n      }\n\n      const setting = Promise.await(Settings.findOneNotHiddenById(this.urlParams._id));\n\n      if (!setting) {\n        return API.v1.failure();\n      }\n\n      return API.v1.success(_.pick(setting, '_id', 'value'));\n    });\n  },\n\n  post: {\n    twoFactorRequired: true,\n\n    action() {\n      return Promise.asyncApply(() => {\n        if (!hasPermission(this.userId, 'edit-privileged-setting')) {\n          return API.v1.unauthorized();\n        }\n\n        if (typeof this.urlParams._id !== 'string') {\n          throw new Meteor.Error('error-id-param-not-provided', 'The parameter \"id\" is required');\n        } // allow special handling of particular setting types\n\n\n        const setting = Promise.await(Settings.findOneNotHiddenById(this.urlParams._id));\n\n        if (!setting) {\n          return API.v1.failure();\n        }\n\n        if (isSettingAction(setting) && isSettingsUpdatePropsActions(this.bodyParams) && this.bodyParams.execute) {\n          // execute the configured method\n          Meteor.call(setting.value);\n          return API.v1.success();\n        }\n\n        if (isSettingColor(setting) && isSettingsUpdatePropsColor(this.bodyParams)) {\n          Settings.updateOptionsById(this.urlParams._id, {\n            editor: this.bodyParams.editor\n          });\n          Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n          return API.v1.success();\n        }\n\n        if (isSettingsUpdatePropDefault(this.bodyParams) && Promise.await(Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value))) {\n          const s = Promise.await(Settings.findOneNotHiddenById(this.urlParams._id));\n\n          if (!s) {\n            return API.v1.failure();\n          }\n\n          settings.set(s);\n          setValue(this.urlParams._id, this.bodyParams.value);\n          return API.v1.success();\n        }\n\n        return API.v1.failure();\n      });\n    }\n\n  }\n});\nAPI.v1.addRoute('service.configurations', {\n  authRequired: false\n}, {\n  get() {\n    return API.v1.success({\n      configurations: ServiceConfiguration.configurations.find({}, {\n        fields: {\n          secret: 0\n        }\n      }).fetch()\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/settings.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\nimport _ from 'underscore';\n\nimport { Settings } from '../../../models/server/raw';\nimport { hasPermission } from '../../../authorization/server';\nimport { API, ResultFor } from '../api';\nimport { SettingsEvents, settings } from '../../../settings/server';\nimport { setValue } from '../../../settings/server/raw';\nimport { ISetting, ISettingColor, isSettingAction, isSettingColor } from '../../../../definition/ISetting';\nimport {\n\tisOauthCustomConfiguration,\n\tisSettingsUpdatePropDefault,\n\tisSettingsUpdatePropsActions,\n\tisSettingsUpdatePropsColor,\n} from '../../../../definition/rest/v1/settings';\n\nconst fetchSettings = async (\n\tquery: Parameters<typeof Settings.find>[0],\n\tsort: Parameters<typeof Settings.find>[1]['sort'],\n\toffset: Parameters<typeof Settings.find>[1]['skip'],\n\tcount: Parameters<typeof Settings.find>[1]['limit'],\n\tfields: Parameters<typeof Settings.find>[1]['projection'],\n): Promise<ISetting[]> => {\n\tconst settings = (await Settings.find(query, {\n\t\tsort: sort || { _id: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: { _id: 1, value: 1, enterprise: 1, invalidValue: 1, modules: 1, ...fields },\n\t}).toArray()) as unknown as ISetting[];\n\n\tSettingsEvents.emit('fetch-settings', settings);\n\treturn settings;\n};\n\n// settings endpoints\nAPI.v1.addRoute(\n\t'settings.public',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort, fields, query } = this.parseJsonQuery();\n\n\t\t\tconst ourQuery = {\n\t\t\t\t...query,\n\t\t\t\thidden: { $ne: true },\n\t\t\t\tpublic: true,\n\t\t\t};\n\n\t\t\tconst settings = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal: await Settings.find(ourQuery).count(),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.oauth',\n\t{ authRequired: false },\n\t{\n\t\tget() {\n\t\t\tconst oAuthServicesEnabled = ServiceConfiguration.configurations.find({}, { fields: { secret: 0 } }).fetch();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tservices: oAuthServicesEnabled.map((service) => {\n\t\t\t\t\tif (!isOauthCustomConfiguration(service)) {\n\t\t\t\t\t\treturn service;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (service.custom || (service.service && ['saml', 'cas', 'wordpress'].includes(service.service))) {\n\t\t\t\t\t\treturn { ...service };\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: service._id,\n\t\t\t\t\t\tname: service.service,\n\t\t\t\t\t\tclientId: service.appId || service.clientId || service.consumerKey,\n\t\t\t\t\t\tbuttonLabelText: service.buttonLabelText || '',\n\t\t\t\t\t\tbuttonColor: service.buttonColor || '',\n\t\t\t\t\t\tbuttonLabelColor: service.buttonLabelColor || '',\n\t\t\t\t\t\tcustom: false,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.addCustomOAuth',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!this.bodyParams.name || !this.bodyParams.name.trim()) {\n\t\t\t\tthrow new Meteor.Error('error-name-param-not-provided', 'The parameter \"name\" is required');\n\t\t\t}\n\n\t\t\tawait Meteor.call('addOAuthService', this.bodyParams.name, this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort, fields, query } = this.parseJsonQuery();\n\n\t\t\tlet ourQuery: Parameters<typeof Settings.find>[0] = {\n\t\t\t\thidden: { $ne: true },\n\t\t\t};\n\n\t\t\tif (!hasPermission(this.userId, 'view-privileged-setting')) {\n\t\t\t\tourQuery.public = true;\n\t\t\t}\n\n\t\t\tourQuery = Object.assign({}, query, ourQuery);\n\n\t\t\tconst settings = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal: Settings.find(ourQuery).count(),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings/:_id',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tif (!hasPermission(this.userId, 'view-privileged-setting')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\tif (!setting) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\t\t\treturn API.v1.success(_.pick(setting, '_id', 'value'));\n\t\t},\n\t\tpost: {\n\t\t\ttwoFactorRequired: true,\n\t\t\tasync action(): Promise<ResultFor<'POST', 'settings/:_id'>> {\n\t\t\t\tif (!hasPermission(this.userId, 'edit-privileged-setting')) {\n\t\t\t\t\treturn API.v1.unauthorized();\n\t\t\t\t}\n\n\t\t\t\tif (typeof this.urlParams._id !== 'string') {\n\t\t\t\t\tthrow new Meteor.Error('error-id-param-not-provided', 'The parameter \"id\" is required');\n\t\t\t\t}\n\n\t\t\t\t// allow special handling of particular setting types\n\t\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\n\t\t\t\tif (!setting) {\n\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingAction(setting) && isSettingsUpdatePropsActions(this.bodyParams) && this.bodyParams.execute) {\n\t\t\t\t\t// execute the configured method\n\t\t\t\t\tMeteor.call(setting.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingColor(setting) && isSettingsUpdatePropsColor(this.bodyParams)) {\n\t\t\t\t\tSettings.updateOptionsById<ISettingColor>(this.urlParams._id, {\n\t\t\t\t\t\teditor: this.bodyParams.editor,\n\t\t\t\t\t});\n\t\t\t\t\tSettings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tisSettingsUpdatePropDefault(this.bodyParams) &&\n\t\t\t\t\t(await Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value))\n\t\t\t\t) {\n\t\t\t\t\tconst s = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\t\t\tif (!s) {\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\t\t\t\t\tsettings.set(s);\n\t\t\t\t\tsetValue(this.urlParams._id, this.bodyParams.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t},\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'service.configurations',\n\t{ authRequired: false },\n\t{\n\t\tget() {\n\t\t\treturn API.v1.success({\n\t\t\t\tconfigurations: ServiceConfiguration.configurations.find({}, { fields: { secret: 0 } }).fetch(),\n\t\t\t});\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"0a08c1c25ecb5220015aa1f98d488d0d85f22abd"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/types/ServiceClass.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/sdk/types/ServiceClass.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/types/ServiceClass.ts","inputSourceMap":{"version":3,"file":"server/sdk/types/ServiceClass.ts","sourceRoot":"","sources":["server/sdk/types/ServiceClass.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAEtC,OAAO,EAAE,iBAAiB,EAAE,MAAM,IAAI,CAAC;AAqCvC,MAAM,OAAgB,YAAY;IACvB,IAAI,CAAS;IAEb,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;IAE5B,QAAQ,GAAG,KAAK,CAAC;IAE3B;QACC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAA6C,CAAC;IAC5E,CAAC;IAED,OAAO;QACN,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAED,UAAU;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,IAAI,OAAO;QACV,OAAO,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAEM,OAAO,CAAkC,KAAQ,EAAE,OAA2B;QACpF,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAChC,CAAC;IAEM,IAAI,CAAkC,KAAQ,EAAE,GAAG,IAAoC;QAC7F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;IAClC,CAAC;CACD","sourcesContent":["import { EventEmitter } from 'events';\n\nimport { asyncLocalStorage } from '..';\nimport { IBroker, IBrokerNode } from './IBroker';\nimport { EventSignatures } from '../lib/Events';\n\nexport interface IServiceContext {\n\tid: string; // Context ID\n\tbroker: IBroker; // Instance of the broker.\n\tnodeID: string | null; // The caller or target Node ID.\n\t// action: Object; // Instance of action definition.\n\t// event: Object; // Instance of event definition.\n\t// eventName: Object; // The emitted event name.\n\t// eventType: String; // Type of event (“emit” or “broadcast”).\n\t// eventGroups: Array; // String>\tGroups of event.\n\t// caller: String; // Service full name of the caller. E.g.: v3.myService\n\trequestID: string | null; // Request ID. If you make nested-calls, it will be the same ID.\n\t// parentID: String; // Parent context ID (in nested-calls).\n\t// params: Any; // Request params. Second argument from broker.call.\n\t// meta: Any; // Request metadata. It will be also transferred to nested-calls.\n\t// locals: any; // Local data.\n\t// level: Number; // Request level (in nested-calls). The first level is 1.\n\t// span: Span; // Current active span.\n\tctx?: any;\n}\n\nexport interface IServiceClass {\n\tgetName(): string;\n\tonNodeConnected?({ node, reconnected }: { node: IBrokerNode; reconnected: boolean }): void;\n\tonNodeUpdated?({ node }: { node: IBrokerNode }): void;\n\tonNodeDisconnected?({ node, unexpected }: { node: IBrokerNode; unexpected: boolean }): Promise<void>;\n\n\tonEvent<T extends keyof EventSignatures>(event: T, handler: EventSignatures[T]): void;\n\n\tcreated?(): Promise<void>;\n\tstarted?(): Promise<void>;\n\tstopped?(): Promise<void>;\n}\n\nexport abstract class ServiceClass implements IServiceClass {\n\tprotected name: string;\n\n\tprotected events = new EventEmitter();\n\n\tprotected internal = false;\n\n\tconstructor() {\n\t\tthis.emit = this.emit.bind(this);\n\t}\n\n\tgetEvents(): Array<keyof EventSignatures> {\n\t\treturn this.events.eventNames() as unknown as Array<keyof EventSignatures>;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tisInternal(): boolean {\n\t\treturn this.internal;\n\t}\n\n\tget context(): IServiceContext | undefined {\n\t\treturn asyncLocalStorage.getStore();\n\t}\n\n\tpublic onEvent<T extends keyof EventSignatures>(event: T, handler: EventSignatures[T]): void {\n\t\tthis.events.on(event, handler);\n\t}\n\n\tpublic emit<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): void {\n\t\tthis.events.emit(event, ...args);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/sdk/types/ServiceClass.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/sdk/types/ServiceClass.ts"}},"code":"module.export({\n  ServiceClass: () => ServiceClass\n});\nlet EventEmitter;\nmodule.link(\"events\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 0);\nlet asyncLocalStorage;\nmodule.link(\"..\", {\n  asyncLocalStorage(v) {\n    asyncLocalStorage = v;\n  }\n\n}, 1);\n\nclass ServiceClass {\n  constructor() {\n    this.name = void 0;\n    this.events = new EventEmitter();\n    this.internal = false;\n    this.emit = this.emit.bind(this);\n  }\n\n  getEvents() {\n    return this.events.eventNames();\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  isInternal() {\n    return this.internal;\n  }\n\n  get context() {\n    return asyncLocalStorage.getStore();\n  }\n\n  onEvent(event, handler) {\n    this.events.on(event, handler);\n  }\n\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.events.emit(event, ...args);\n  }\n\n}","map":{"version":3,"sources":["server/sdk/types/ServiceClass.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,YAAc,EAAA,MAAM;AAApB,CAAT;AAAsC,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAuChC,MAAgB,YAAhB,CAA4B;AAOjC,EAAA,WAAA,GAAA;AAAA,SANU,IAMV;AAAA,SAJU,MAIV,GAJmB,IAAI,YAAJ,EAInB;AAAA,SAFU,QAEV,GAFqB,KAErB;AACC,SAAK,IAAL,GAAY,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAAZ;AACA;;AAED,EAAA,SAAS,GAAA;AACR,WAAO,KAAK,MAAL,CAAY,UAAZ,EAAP;AACA;;AAED,EAAA,OAAO,GAAA;AACN,WAAO,KAAK,IAAZ;AACA;;AAED,EAAA,UAAU,GAAA;AACT,WAAO,KAAK,QAAZ;AACA;;AAEU,MAAP,OAAO,GAAA;AACV,WAAO,iBAAiB,CAAC,QAAlB,EAAP;AACA;;AAEM,EAAA,OAAO,CAAkC,KAAlC,EAA4C,OAA5C,EAAuE;AACpF,SAAK,MAAL,CAAY,EAAZ,CAAe,KAAf,EAAsB,OAAtB;AACA;;AAEM,EAAA,IAAI,CAAkC,KAAlC,EAAmF;AAAA,sCAApC,IAAoC;AAApC,MAAA,IAAoC;AAAA;;AAC7F,SAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB,EAAwB,GAAG,IAA3B;AACA;;AAjCgC","sourcesContent":["import { EventEmitter } from 'events';\n\nimport { asyncLocalStorage } from '..';\nimport { IBroker, IBrokerNode } from './IBroker';\nimport { EventSignatures } from '../lib/Events';\n\nexport interface IServiceContext {\n\tid: string; // Context ID\n\tbroker: IBroker; // Instance of the broker.\n\tnodeID: string | null; // The caller or target Node ID.\n\t// action: Object; // Instance of action definition.\n\t// event: Object; // Instance of event definition.\n\t// eventName: Object; // The emitted event name.\n\t// eventType: String; // Type of event (“emit” or “broadcast”).\n\t// eventGroups: Array; // String>\tGroups of event.\n\t// caller: String; // Service full name of the caller. E.g.: v3.myService\n\trequestID: string | null; // Request ID. If you make nested-calls, it will be the same ID.\n\t// parentID: String; // Parent context ID (in nested-calls).\n\t// params: Any; // Request params. Second argument from broker.call.\n\t// meta: Any; // Request metadata. It will be also transferred to nested-calls.\n\t// locals: any; // Local data.\n\t// level: Number; // Request level (in nested-calls). The first level is 1.\n\t// span: Span; // Current active span.\n\tctx?: any;\n}\n\nexport interface IServiceClass {\n\tgetName(): string;\n\tonNodeConnected?({ node, reconnected }: { node: IBrokerNode; reconnected: boolean }): void;\n\tonNodeUpdated?({ node }: { node: IBrokerNode }): void;\n\tonNodeDisconnected?({ node, unexpected }: { node: IBrokerNode; unexpected: boolean }): Promise<void>;\n\n\tonEvent<T extends keyof EventSignatures>(event: T, handler: EventSignatures[T]): void;\n\n\tcreated?(): Promise<void>;\n\tstarted?(): Promise<void>;\n\tstopped?(): Promise<void>;\n}\n\nexport abstract class ServiceClass implements IServiceClass {\n\tprotected name: string;\n\n\tprotected events = new EventEmitter();\n\n\tprotected internal = false;\n\n\tconstructor() {\n\t\tthis.emit = this.emit.bind(this);\n\t}\n\n\tgetEvents(): Array<keyof EventSignatures> {\n\t\treturn this.events.eventNames() as unknown as Array<keyof EventSignatures>;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tisInternal(): boolean {\n\t\treturn this.internal;\n\t}\n\n\tget context(): IServiceContext | undefined {\n\t\treturn asyncLocalStorage.getStore();\n\t}\n\n\tpublic onEvent<T extends keyof EventSignatures>(event: T, handler: EventSignatures[T]): void {\n\t\tthis.events.on(event, handler);\n\t}\n\n\tpublic emit<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): void {\n\t\tthis.events.emit(event, ...args);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"64fa520438645bdd764cdc394fec1e6e384c994f"}

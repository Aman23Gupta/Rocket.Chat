{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/stream/agentStatus.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/lib/stream/agentStatus.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/stream/agentStatus.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/lib/stream/agentStatus.ts","sourceRoot":"","sources":["app/livechat/server/lib/stream/agentStatus.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Livechat } from '../Livechat';\nimport { settings } from '../../../../settings/server';\nimport { Logger } from '../../../../logger/server';\n\nconst logger = new Logger('AgentStatusWatcher');\n\nexport let monitorAgents = false;\nlet actionTimeout = 60000;\nlet action = 'none';\nlet comment = '';\n\nsettings.watch('Livechat_agent_leave_action_timeout', (value) => {\n\tif (typeof value !== 'number') {\n\t\treturn;\n\t}\n\tactionTimeout = value * 1000;\n});\n\nsettings.watch('Livechat_agent_leave_action', (value) => {\n\tmonitorAgents = value !== 'none';\n\taction = value as string;\n});\n\nsettings.watch('Livechat_agent_leave_comment', (value) => {\n\tif (typeof value !== 'string') {\n\t\treturn;\n\t}\n\tcomment = value;\n});\n\nexport const onlineAgents = {\n\tusers: new Set(),\n\tqueue: new Map(),\n\n\tadd(userId: string): void {\n\t\tif (this.exists(userId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.queue.has(userId)) {\n\t\t\tclearTimeout(this.queue.get(userId));\n\t\t\tthis.queue.delete(userId);\n\t\t}\n\t\tthis.users.add(userId);\n\t},\n\n\tremove(userId: string): void {\n\t\tif (!this.exists(userId)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.users.delete(userId);\n\n\t\tif (this.queue.has(userId)) {\n\t\t\tclearTimeout(this.queue.get(userId));\n\t\t}\n\n\t\tthis.queue.set(userId, setTimeout(this.runAgentLeaveAction, actionTimeout, userId));\n\t},\n\n\texists(userId: string): boolean {\n\t\treturn this.users.has(userId);\n\t},\n\n\trunAgentLeaveAction: Meteor.bindEnvironment((userId: string) => {\n\t\tonlineAgents.users.delete(userId);\n\t\tonlineAgents.queue.delete(userId);\n\n\t\ttry {\n\t\t\tif (action === 'close') {\n\t\t\t\treturn Livechat.closeOpenChats(userId, comment);\n\t\t\t}\n\n\t\t\tif (action === 'forward') {\n\t\t\t\treturn Livechat.forwardOpenChats(userId);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlogger.error({\n\t\t\t\tmsg: `Cannot perform action ${action}`,\n\t\t\t\terr: e,\n\t\t\t});\n\t\t}\n\t}),\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/stream/agentStatus.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/lib/stream/agentStatus.ts"}},"code":"module.export({\n  monitorAgents: () => monitorAgents,\n  onlineAgents: () => onlineAgents\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Livechat;\nmodule.link(\"../Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet Logger;\nmodule.link(\"../../../../logger/server\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 3);\nconst logger = new Logger('AgentStatusWatcher');\nlet monitorAgents = false;\nlet actionTimeout = 60000;\nlet action = 'none';\nlet comment = '';\nsettings.watch('Livechat_agent_leave_action_timeout', value => {\n  if (typeof value !== 'number') {\n    return;\n  }\n\n  actionTimeout = value * 1000;\n});\nsettings.watch('Livechat_agent_leave_action', value => {\n  module.runSetters(monitorAgents = value !== 'none', [\"monitorAgents\"]);\n  action = value;\n});\nsettings.watch('Livechat_agent_leave_comment', value => {\n  if (typeof value !== 'string') {\n    return;\n  }\n\n  comment = value;\n});\nconst onlineAgents = {\n  users: new Set(),\n  queue: new Map(),\n\n  add(userId) {\n    if (this.exists(userId)) {\n      return;\n    }\n\n    if (this.queue.has(userId)) {\n      clearTimeout(this.queue.get(userId));\n      this.queue.delete(userId);\n    }\n\n    this.users.add(userId);\n  },\n\n  remove(userId) {\n    if (!this.exists(userId)) {\n      return;\n    }\n\n    this.users.delete(userId);\n\n    if (this.queue.has(userId)) {\n      clearTimeout(this.queue.get(userId));\n    }\n\n    this.queue.set(userId, setTimeout(this.runAgentLeaveAction, actionTimeout, userId));\n  },\n\n  exists(userId) {\n    return this.users.has(userId);\n  },\n\n  runAgentLeaveAction: Meteor.bindEnvironment(userId => {\n    onlineAgents.users.delete(userId);\n    onlineAgents.queue.delete(userId);\n\n    try {\n      if (action === 'close') {\n        return Livechat.closeOpenChats(userId, comment);\n      }\n\n      if (action === 'forward') {\n        return Livechat.forwardOpenChats(userId);\n      }\n    } catch (e) {\n      logger.error({\n        msg: \"Cannot perform action \".concat(action),\n        err: e\n      });\n    }\n  })\n};","map":{"version":3,"sources":["app/livechat/server/lib/stream/agentStatus.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Livechat } from '../Livechat';\nimport { settings } from '../../../../settings/server';\nimport { Logger } from '../../../../logger/server';\n\nconst logger = new Logger('AgentStatusWatcher');\n\nexport let monitorAgents = false;\nlet actionTimeout = 60000;\nlet action = 'none';\nlet comment = '';\n\nsettings.watch('Livechat_agent_leave_action_timeout', (value) => {\n\tif (typeof value !== 'number') {\n\t\treturn;\n\t}\n\tactionTimeout = value * 1000;\n});\n\nsettings.watch('Livechat_agent_leave_action', (value) => {\n\tmonitorAgents = value !== 'none';\n\taction = value as string;\n});\n\nsettings.watch('Livechat_agent_leave_comment', (value) => {\n\tif (typeof value !== 'string') {\n\t\treturn;\n\t}\n\tcomment = value;\n});\n\nexport const onlineAgents = {\n\tusers: new Set(),\n\tqueue: new Map(),\n\n\tadd(userId: string): void {\n\t\tif (this.exists(userId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.queue.has(userId)) {\n\t\t\tclearTimeout(this.queue.get(userId));\n\t\t\tthis.queue.delete(userId);\n\t\t}\n\t\tthis.users.add(userId);\n\t},\n\n\tremove(userId: string): void {\n\t\tif (!this.exists(userId)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.users.delete(userId);\n\n\t\tif (this.queue.has(userId)) {\n\t\t\tclearTimeout(this.queue.get(userId));\n\t\t}\n\n\t\tthis.queue.set(userId, setTimeout(this.runAgentLeaveAction, actionTimeout, userId));\n\t},\n\n\texists(userId: string): boolean {\n\t\treturn this.users.has(userId);\n\t},\n\n\trunAgentLeaveAction: Meteor.bindEnvironment((userId: string) => {\n\t\tonlineAgents.users.delete(userId);\n\t\tonlineAgents.queue.delete(userId);\n\n\t\ttry {\n\t\t\tif (action === 'close') {\n\t\t\t\treturn Livechat.closeOpenChats(userId, comment);\n\t\t\t}\n\n\t\t\tif (action === 'forward') {\n\t\t\t\treturn Livechat.forwardOpenChats(userId);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlogger.error({\n\t\t\t\tmsg: `Cannot perform action ${action}`,\n\t\t\t\terr: e,\n\t\t\t});\n\t\t}\n\t}),\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"f717ae82709f057007f867a921e255f114d555aa"}

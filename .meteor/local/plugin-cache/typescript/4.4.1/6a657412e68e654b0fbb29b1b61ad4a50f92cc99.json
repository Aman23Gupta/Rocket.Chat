{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomEncrypted.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/channel-settings/server/functions/saveRoomEncrypted.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomEncrypted.ts","inputSourceMap":{"version":3,"file":"app/channel-settings/server/functions/saveRoomEncrypted.ts","sourceRoot":"","sources":["app/channel-settings/server/functions/saveRoomEncrypted.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAGrC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAGzD,MAAM,CAAC,MAAM,iBAAiB,GAAG,UAAU,GAAW,EAAE,SAAkB,EAAE,IAAW,EAAE,WAAW,GAAG,IAAI;IAC1G,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE;QAC7B,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,cAAc,EAAE;YACtD,QAAQ,EAAE,8BAA8B;SACxC,CAAC,CAAC;KACH;IAED,MAAM,MAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IACvD,IAAI,MAAM,IAAI,WAAW,EAAE;QAC1B,QAAQ,CAAC,qDAAqD,CAC7D,YAAY,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,EAAE,EAChD,GAAG,EACH,IAAI,CAAC,QAAQ,EACb,IAAI,EACJ,EAAE,CACF,CAAC;KACF;IACD,OAAO,MAAM,CAAC;AACf,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\nimport type { WriteOpResult } from 'mongodb';\n\nimport { Rooms, Messages } from '../../../models/server';\nimport type { IUser } from '../../../../definition/IUser';\n\nexport const saveRoomEncrypted = function (rid: string, encrypted: boolean, user: IUser, sendMessage = true): Promise<WriteOpResult> {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\tfunction: 'RocketChat.saveRoomEncrypted',\n\t\t});\n\t}\n\n\tconst update = Rooms.saveEncryptedById(rid, encrypted);\n\tif (update && sendMessage) {\n\t\tMessages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser(\n\t\t\t`room_e2e_${encrypted ? 'enabled' : 'disabled'}`,\n\t\t\trid,\n\t\t\tuser.username,\n\t\t\tuser,\n\t\t\t{},\n\t\t);\n\t}\n\treturn update;\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomEncrypted.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/channel-settings/server/functions/saveRoomEncrypted.ts"}},"code":"module.export({\n  saveRoomEncrypted: () => saveRoomEncrypted\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Rooms, Messages;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 2);\n\nconst saveRoomEncrypted = function (rid, encrypted, user) {\n  let sendMessage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!Match.test(rid, String)) {\n    throw new Meteor.Error('invalid-room', 'Invalid room', {\n      function: 'RocketChat.saveRoomEncrypted'\n    });\n  }\n\n  const update = Rooms.saveEncryptedById(rid, encrypted);\n\n  if (update && sendMessage) {\n    Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser(\"room_e2e_\".concat(encrypted ? 'enabled' : 'disabled'), rid, user.username, user, {});\n  }\n\n  return update;\n};","map":{"version":3,"sources":["app/channel-settings/server/functions/saveRoomEncrypted.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAM,EAAA,iBAAQ,EAAA,MAAA;AAAd,CAAT;AAAuC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA,EAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAOhC,MAAM,iBAAiB,GAAG,UAAU,GAAV,EAAuB,SAAvB,EAA2C,IAA3C,EAA0E;AAAA,MAAlB,WAAkB,uEAAJ,IAAI;;AAC1G,MAAI,CAAC,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,MAAhB,CAAL,EAA8B;AAC7B,UAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,cAAjB,EAAiC,cAAjC,EAAiD;AACtD,MAAA,QAAQ,EAAE;AAD4C,KAAjD,CAAN;AAGA;;AAED,QAAM,MAAM,GAAG,KAAK,CAAC,iBAAN,CAAwB,GAAxB,EAA6B,SAA7B,CAAf;;AACA,MAAI,MAAM,IAAI,WAAd,EAA2B;AAC1B,IAAA,QAAQ,CAAC,qDAAT,oBACa,SAAS,GAAG,SAAH,GAAe,UADrC,GAEC,GAFD,EAGC,IAAI,CAAC,QAHN,EAIC,IAJD,EAKC,EALD;AAOA;;AACD,SAAO,MAAP;AACA,CAlBM","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\nimport type { WriteOpResult } from 'mongodb';\n\nimport { Rooms, Messages } from '../../../models/server';\nimport type { IUser } from '../../../../definition/IUser';\n\nexport const saveRoomEncrypted = function (rid: string, encrypted: boolean, user: IUser, sendMessage = true): Promise<WriteOpResult> {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\tfunction: 'RocketChat.saveRoomEncrypted',\n\t\t});\n\t}\n\n\tconst update = Rooms.saveEncryptedById(rid, encrypted);\n\tif (update && sendMessage) {\n\t\tMessages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser(\n\t\t\t`room_e2e_${encrypted ? 'enabled' : 'disabled'}`,\n\t\t\trid,\n\t\t\tuser.username,\n\t\t\tuser,\n\t\t\t{},\n\t\t);\n\t}\n\treturn update;\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"6a657412e68e654b0fbb29b1b61ad4a50f92cc99"}

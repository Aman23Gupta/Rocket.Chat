{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/api/api.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/api/api.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/api/api.ts","inputSourceMap":{"version":3,"file":"ee/server/api/api.ts","sourceRoot":"","sources":["ee/server/api/api.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAA0C,MAAM,6BAA6B,CAAC;AAC1F,OAAO,EAAE,GAAG,EAAE,MAAM,yCAAyC,CAAC;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,kCAAkC,CAAC;AAEhE,6EAA6E;AAC7E,+DAA+D;AAE/D,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAAC,OAAiB,EAA4C,EAAE,CAC9G,CAAC,CAAC,OAAO,IAAI,8CAA8C,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAEzI,GAAG,CAAC,EAAE,CAAC,gBAAgB,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAU,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI;IAC1F,IAAI,+BAA+B,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;QACvE,MAAM,OAAO,GAAkC;YAC9C,GAAG,MAAM,CAAC,OAAO;YACjB,gBAAgB,EAAE;gBACjB,iBAAiB,EAAE,IAAI;gBACvB,mBAAmB,EAAE,IAAI;gBACzB,uBAAuB,EAAE,KAAK;aAC9B;YACD,iBAAiB,EAAE,IAAI;YACvB,YAAY,EAAE,IAAI;SAClB,CAAC;QAEF,OAAO,IAAI,CACV;YACC,GAAG,MAAM;YACT,OAAO;SACP,EACD,GAAG,OAAO,CACV,CAAC;KACF;IAED,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC","sourcesContent":["import { API, Options, NonEnterpriseTwoFactorOptions } from '../../../app/api/server/api';\nimport { use } from '../../../app/settings/server/Middleware';\nimport { isEnterprise } from '../../app/license/server/license';\n\n// Overwrites two factor method to enforce 2FA check for enterprise APIs when\n// no license was provided to prevent abuse on enterprise APIs.\n\nexport const isNonEnterpriseTwoFactorOptions = (options?: Options): options is NonEnterpriseTwoFactorOptions =>\n\t!!options && 'forceTwoFactorAuthenticationForNonEnterprise' in options && Boolean(options.forceTwoFactorAuthenticationForNonEnterprise);\n\nAPI.v1.processTwoFactor = use(API.v1.processTwoFactor, function ([params, ...context], next) {\n\tif (isNonEnterpriseTwoFactorOptions(params.options) && !isEnterprise()) {\n\t\tconst options: NonEnterpriseTwoFactorOptions = {\n\t\t\t...params.options,\n\t\t\ttwoFactorOptions: {\n\t\t\t\tdisableRememberMe: true,\n\t\t\t\trequireSecondFactor: true,\n\t\t\t\tdisablePasswordFallback: false,\n\t\t\t},\n\t\t\ttwoFactorRequired: true,\n\t\t\tauthRequired: true,\n\t\t};\n\n\t\treturn next(\n\t\t\t{\n\t\t\t\t...params,\n\t\t\t\toptions,\n\t\t\t},\n\t\t\t...context,\n\t\t);\n\t}\n\n\treturn next(params, ...context);\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/server/api/api.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/api/api.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  isNonEnterpriseTwoFactorOptions: () => isNonEnterpriseTwoFactorOptions\n});\nlet API;\nmodule.link(\"../../../app/api/server/api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 0);\nlet use;\nmodule.link(\"../../../app/settings/server/Middleware\", {\n  use(v) {\n    use = v;\n  }\n\n}, 1);\nlet isEnterprise;\nmodule.link(\"../../app/license/server/license\", {\n  isEnterprise(v) {\n    isEnterprise = v;\n  }\n\n}, 2);\n\nconst isNonEnterpriseTwoFactorOptions = options => !!options && 'forceTwoFactorAuthenticationForNonEnterprise' in options && Boolean(options.forceTwoFactorAuthenticationForNonEnterprise);\n\nAPI.v1.processTwoFactor = use(API.v1.processTwoFactor, function (_ref, next) {\n  let [params, ...context] = _ref;\n\n  if (isNonEnterpriseTwoFactorOptions(params.options) && !isEnterprise()) {\n    const options = _objectSpread(_objectSpread({}, params.options), {}, {\n      twoFactorOptions: {\n        disableRememberMe: true,\n        requireSecondFactor: true,\n        disablePasswordFallback: false\n      },\n      twoFactorRequired: true,\n      authRequired: true\n    });\n\n    return next(_objectSpread(_objectSpread({}, params), {}, {\n      options\n    }), ...context);\n  }\n\n  return next(params, ...context);\n});","map":{"version":3,"sources":["ee/server/api/api.ts"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAsD,MAAM,CAAA,IAAN,CAAM,sCAAN,EAAoC;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAApC,EAAoC,CAApC;AAAtD,MAAA,CAAO,MAAP,CAAsD;AAAA,EAAA,+BAAM,EAAA,MAA8B;AAApC,CAAtD;AAA0F,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yCAAA,EAAA;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kCAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAOnF,MAAM,+BAA+B,GAAI,OAAD,IAC9C,CAAC,CAAC,OAAF,IAAa,kDAAkD,OAA/D,IAA0E,OAAO,CAAC,OAAO,CAAC,4CAAT,CAD3E;;AAGP,GAAG,CAAC,EAAJ,CAAO,gBAAP,GAA0B,GAAG,CAAC,GAAG,CAAC,EAAJ,CAAO,gBAAR,EAA0B,gBAAgC,IAAhC,EAAoC;AAAA,MAA1B,CAAC,MAAD,EAAS,GAAG,OAAZ,CAA0B;;AAC1F,MAAI,+BAA+B,CAAC,MAAM,CAAC,OAAR,CAA/B,IAAmD,CAAC,YAAY,EAApE,EAAwE;AACvE,UAAM,OAAO,mCACT,MAAM,CAAC,OADE;AAEZ,MAAA,gBAAgB,EAAE;AACjB,QAAA,iBAAiB,EAAE,IADF;AAEjB,QAAA,mBAAmB,EAAE,IAFJ;AAGjB,QAAA,uBAAuB,EAAE;AAHR,OAFN;AAOZ,MAAA,iBAAiB,EAAE,IAPP;AAQZ,MAAA,YAAY,EAAE;AARF,MAAb;;AAWA,WAAO,IAAI,iCAEN,MAFM;AAGT,MAAA;AAHS,QAKV,GAAG,OALO,CAAX;AAOA;;AAED,SAAO,IAAI,CAAC,MAAD,EAAS,GAAG,OAAZ,CAAX;AACA,CAvB4B,CAA7B","sourcesContent":["import { API, Options, NonEnterpriseTwoFactorOptions } from '../../../app/api/server/api';\nimport { use } from '../../../app/settings/server/Middleware';\nimport { isEnterprise } from '../../app/license/server/license';\n\n// Overwrites two factor method to enforce 2FA check for enterprise APIs when\n// no license was provided to prevent abuse on enterprise APIs.\n\nexport const isNonEnterpriseTwoFactorOptions = (options?: Options): options is NonEnterpriseTwoFactorOptions =>\n\t!!options && 'forceTwoFactorAuthenticationForNonEnterprise' in options && Boolean(options.forceTwoFactorAuthenticationForNonEnterprise);\n\nAPI.v1.processTwoFactor = use(API.v1.processTwoFactor, function ([params, ...context], next) {\n\tif (isNonEnterpriseTwoFactorOptions(params.options) && !isEnterprise()) {\n\t\tconst options: NonEnterpriseTwoFactorOptions = {\n\t\t\t...params.options,\n\t\t\ttwoFactorOptions: {\n\t\t\t\tdisableRememberMe: true,\n\t\t\t\trequireSecondFactor: true,\n\t\t\t\tdisablePasswordFallback: false,\n\t\t\t},\n\t\t\ttwoFactorRequired: true,\n\t\t\tauthRequired: true,\n\t\t};\n\n\t\treturn next(\n\t\t\t{\n\t\t\t\t...params,\n\t\t\t\toptions,\n\t\t\t},\n\t\t\t...context,\n\t\t);\n\t}\n\n\treturn next(params, ...context);\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"7f27ab86ae5ef2bdb91238a0839a0125a6269a3a"}

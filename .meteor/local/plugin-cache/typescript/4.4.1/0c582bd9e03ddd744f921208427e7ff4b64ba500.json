{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/AppRealStorage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/storage/AppRealStorage.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/AppRealStorage.ts","inputSourceMap":{"version":3,"file":"app/apps/server/storage/AppRealStorage.ts","sourceRoot":"","sources":["app/apps/server/storage/AppRealStorage.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppMetadataStorage, IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\n\nimport { AppsModel } from '../../../models/server/models/apps-model';\n\nexport class AppRealStorage extends AppMetadataStorage {\n\tconstructor(private db: AppsModel) {\n\t\tsuper('mongodb');\n\t}\n\n\tpublic create(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\titem.createdAt = new Date();\n\t\t\titem.updatedAt = new Date();\n\n\t\t\tlet doc;\n\n\t\t\ttry {\n\t\t\t\tdoc = this.db.findOne({ $or: [{ id: item.id }, { 'info.nameSlug': item.info.nameSlug }] });\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tif (doc) {\n\t\t\t\treturn reject(new Error('App already exists.'));\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst id = this.db.insert(item);\n\t\t\t\titem._id = id;\n\n\t\t\t\tresolve(item);\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic retrieveOne(id: string): Promise<IAppStorageItem> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet doc;\n\n\t\t\ttry {\n\t\t\t\tdoc = this.db.findOne({ $or: [{ _id: id }, { id }] });\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tresolve(doc);\n\t\t});\n\t}\n\n\tpublic retrieveAll(): Promise<Map<string, IAppStorageItem>> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet docs: Array<IAppStorageItem>;\n\n\t\t\ttry {\n\t\t\t\tdocs = this.db.find({}).fetch();\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tconst items = new Map();\n\n\t\t\tdocs.forEach((i) => items.set(i.id, i));\n\n\t\t\tresolve(items);\n\t\t});\n\t}\n\n\tpublic update(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.db.update({ id: item.id }, item);\n\t\t\t\tresolve(item.id);\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\t\t}).then(this.retrieveOne.bind(this));\n\t}\n\n\tpublic remove(id: string): Promise<{ success: boolean }> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.db.remove({ id });\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tresolve({ success: true });\n\t\t});\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/AppRealStorage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/storage/AppRealStorage.ts"}},"code":"module.export({\n  AppRealStorage: () => AppRealStorage\n});\nlet AppMetadataStorage;\nmodule.link(\"@rocket.chat/apps-engine/server/storage\", {\n  AppMetadataStorage(v) {\n    AppMetadataStorage = v;\n  }\n\n}, 0);\n\nclass AppRealStorage extends AppMetadataStorage {\n  constructor(db) {\n    super('mongodb');\n    this.db = void 0;\n    this.db = db;\n  }\n\n  create(item) {\n    return new Promise((resolve, reject) => {\n      item.createdAt = new Date();\n      item.updatedAt = new Date();\n      let doc;\n\n      try {\n        doc = this.db.findOne({\n          $or: [{\n            id: item.id\n          }, {\n            'info.nameSlug': item.info.nameSlug\n          }]\n        });\n      } catch (e) {\n        return reject(e);\n      }\n\n      if (doc) {\n        return reject(new Error('App already exists.'));\n      }\n\n      try {\n        const id = this.db.insert(item);\n        item._id = id;\n        resolve(item);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  retrieveOne(id) {\n    return new Promise((resolve, reject) => {\n      let doc;\n\n      try {\n        doc = this.db.findOne({\n          $or: [{\n            _id: id\n          }, {\n            id\n          }]\n        });\n      } catch (e) {\n        return reject(e);\n      }\n\n      resolve(doc);\n    });\n  }\n\n  retrieveAll() {\n    return new Promise((resolve, reject) => {\n      let docs;\n\n      try {\n        docs = this.db.find({}).fetch();\n      } catch (e) {\n        return reject(e);\n      }\n\n      const items = new Map();\n      docs.forEach(i => items.set(i.id, i));\n      resolve(items);\n    });\n  }\n\n  update(item) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.db.update({\n          id: item.id\n        }, item);\n        resolve(item.id);\n      } catch (e) {\n        return reject(e);\n      }\n    }).then(this.retrieveOne.bind(this));\n  }\n\n  remove(id) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.db.remove({\n          id\n        });\n      } catch (e) {\n        return reject(e);\n      }\n\n      resolve({\n        success: true\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["app/apps/server/storage/AppRealStorage.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppMetadataStorage, IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\n\nimport { AppsModel } from '../../../models/server/models/apps-model';\n\nexport class AppRealStorage extends AppMetadataStorage {\n\tconstructor(private db: AppsModel) {\n\t\tsuper('mongodb');\n\t}\n\n\tpublic create(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\titem.createdAt = new Date();\n\t\t\titem.updatedAt = new Date();\n\n\t\t\tlet doc;\n\n\t\t\ttry {\n\t\t\t\tdoc = this.db.findOne({ $or: [{ id: item.id }, { 'info.nameSlug': item.info.nameSlug }] });\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tif (doc) {\n\t\t\t\treturn reject(new Error('App already exists.'));\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst id = this.db.insert(item);\n\t\t\t\titem._id = id;\n\n\t\t\t\tresolve(item);\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic retrieveOne(id: string): Promise<IAppStorageItem> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet doc;\n\n\t\t\ttry {\n\t\t\t\tdoc = this.db.findOne({ $or: [{ _id: id }, { id }] });\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tresolve(doc);\n\t\t});\n\t}\n\n\tpublic retrieveAll(): Promise<Map<string, IAppStorageItem>> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet docs: Array<IAppStorageItem>;\n\n\t\t\ttry {\n\t\t\t\tdocs = this.db.find({}).fetch();\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tconst items = new Map();\n\n\t\t\tdocs.forEach((i) => items.set(i.id, i));\n\n\t\t\tresolve(items);\n\t\t});\n\t}\n\n\tpublic update(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.db.update({ id: item.id }, item);\n\t\t\t\tresolve(item.id);\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\t\t}).then(this.retrieveOne.bind(this));\n\t}\n\n\tpublic remove(id: string): Promise<{ success: boolean }> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.db.remove({ id });\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tresolve({ success: true });\n\t\t});\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"0c582bd9e03ddd744f921208427e7ff4b64ba500"}

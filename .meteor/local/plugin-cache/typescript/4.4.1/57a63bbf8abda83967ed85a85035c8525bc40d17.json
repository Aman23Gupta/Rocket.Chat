{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/sendMessagesToAdmins.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/sendMessagesToAdmins.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/sendMessagesToAdmins.ts","inputSourceMap":{"version":3,"file":"server/lib/sendMessagesToAdmins.ts","sourceRoot":"","sources":["server/lib/sendMessagesToAdmins.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,0CAA0C,CAAC;AAC9E,OAAO,EAAE,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AAcrE,MAAM,OAAO,GAAG,CAAI,KAAqB,EAAE,SAAgB,EAAO,EAAE;IACnE,MAAM,MAAM,GAAG,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAE1E,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QAC3B,OAAO,CAAC,MAAM,CAAC,CAAC;KAChB;IAED,OAAO,MAAM,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,oBAAoB,CAAC,EAC1C,MAAM,GAAG,YAAY,EACrB,SAAS,GAAG,IAAI,EAChB,IAAI,GAAG,EAAE,EACT,OAAO,GAAG,EAAE,GAMZ;IACA,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAEhG,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IAErE,IAAI,KAAK,EAAE,MAAM,SAAS,IAAI,KAAK,EAAE;QACpC,IAAI,QAAQ,EAAE;YACb,IAAI;gBACH,MAAM,EAAE,GAAG,EAAE,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;gBAElE,OAAO,CAAoB,IAAI,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aACtH;YAAC,OAAO,KAAK,EAAE;gBACf,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC1B;SACD;QAED,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAS,OAAO,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;KACnH;AACF,CAAC","sourcesContent":["import { SystemLogger } from './logger/system';\nimport { Roles, Users } from '../../app/models/server/raw';\nimport { executeSendMessage } from '../../app/lib/server/methods/sendMessage';\nimport { createDirectMessage } from '../methods/createDirectMessage';\nimport { IUser } from '../../definition/IUser';\nimport { IMessage } from '../../definition/IMessage';\n\ntype Banner = {\n\tid: string;\n\tpriority: number;\n\ttitle: string;\n\ttext: string;\n\ttextArguments?: string[];\n\tmodifiers: string[];\n\tlink: string;\n};\n\nconst getData = <T>(param: T[] | Function, adminUser: IUser): T[] => {\n\tconst result = typeof param === 'function' ? param({ adminUser }) : param;\n\n\tif (!Array.isArray(result)) {\n\t\treturn [result];\n\t}\n\n\treturn result;\n};\n\nexport async function sendMessagesToAdmins({\n\tfromId = 'rocket.cat',\n\tcheckFrom = true,\n\tmsgs = [],\n\tbanners = [],\n}: {\n\tfromId?: string;\n\tcheckFrom?: boolean;\n\tmsgs?: Partial<IMessage>[] | Function;\n\tbanners?: Banner[] | Function;\n}): Promise<void> {\n\tconst fromUser = checkFrom ? await Users.findOneById(fromId, { projection: { _id: 1 } }) : true;\n\n\tconst users = await (await Roles.findUsersInRole('admin')).toArray();\n\n\tfor await (const adminUser of users) {\n\t\tif (fromUser) {\n\t\t\ttry {\n\t\t\t\tconst { rid } = createDirectMessage([adminUser.username], fromId);\n\n\t\t\t\tgetData<Partial<IMessage>>(msgs, adminUser).forEach((msg) => executeSendMessage(fromId, Object.assign({ rid }, msg)));\n\t\t\t} catch (error) {\n\t\t\t\tSystemLogger.error(error);\n\t\t\t}\n\t\t}\n\n\t\tawait Promise.all(getData<Banner>(banners, adminUser).map((banner) => Users.addBannerById(adminUser._id, banner)));\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/lib/sendMessagesToAdmins.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/sendMessagesToAdmins.ts"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nmodule.export({\n  sendMessagesToAdmins: () => sendMessagesToAdmins\n});\nlet SystemLogger;\nmodule.link(\"./logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 0);\nlet Roles, Users;\nmodule.link(\"../../app/models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet executeSendMessage;\nmodule.link(\"../../app/lib/server/methods/sendMessage\", {\n  executeSendMessage(v) {\n    executeSendMessage = v;\n  }\n\n}, 2);\nlet createDirectMessage;\nmodule.link(\"../methods/createDirectMessage\", {\n  createDirectMessage(v) {\n    createDirectMessage = v;\n  }\n\n}, 3);\n\nconst getData = (param, adminUser) => {\n  const result = typeof param === 'function' ? param({\n    adminUser\n  }) : param;\n\n  if (!Array.isArray(result)) {\n    return [result];\n  }\n\n  return result;\n};\n\nfunction sendMessagesToAdmins(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      fromId = 'rocket.cat',\n      checkFrom = true,\n      msgs = [],\n      banners = []\n    } = _ref;\n    const fromUser = checkFrom ? Promise.await(Users.findOneById(fromId, {\n      projection: {\n        _id: 1\n      }\n    })) : true;\n    const users = Promise.await(Promise.await(Roles.findUsersInRole('admin')).toArray());\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n\n    var _iteratorError;\n\n    try {\n      for (var _iterator = _asyncIterator(users), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n        const adminUser = _step.value;\n\n        if (fromUser) {\n          try {\n            const {\n              rid\n            } = createDirectMessage([adminUser.username], fromId);\n            getData(msgs, adminUser).forEach(msg => executeSendMessage(fromId, Object.assign({\n              rid\n            }, msg)));\n          } catch (error) {\n            SystemLogger.error(error);\n          }\n        }\n\n        Promise.await(Promise.all(getData(banners, adminUser).map(banner => Users.addBannerById(adminUser._id, banner))));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          Promise.await(_iterator.return());\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  });\n}","map":{"version":3,"sources":["server/lib/sendMessagesToAdmins.ts"],"names":[],"mappings":"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","sourcesContent":["import { SystemLogger } from './logger/system';\nimport { Roles, Users } from '../../app/models/server/raw';\nimport { executeSendMessage } from '../../app/lib/server/methods/sendMessage';\nimport { createDirectMessage } from '../methods/createDirectMessage';\nimport { IUser } from '../../definition/IUser';\nimport { IMessage } from '../../definition/IMessage';\n\ntype Banner = {\n\tid: string;\n\tpriority: number;\n\ttitle: string;\n\ttext: string;\n\ttextArguments?: string[];\n\tmodifiers: string[];\n\tlink: string;\n};\n\nconst getData = <T>(param: T[] | Function, adminUser: IUser): T[] => {\n\tconst result = typeof param === 'function' ? param({ adminUser }) : param;\n\n\tif (!Array.isArray(result)) {\n\t\treturn [result];\n\t}\n\n\treturn result;\n};\n\nexport async function sendMessagesToAdmins({\n\tfromId = 'rocket.cat',\n\tcheckFrom = true,\n\tmsgs = [],\n\tbanners = [],\n}: {\n\tfromId?: string;\n\tcheckFrom?: boolean;\n\tmsgs?: Partial<IMessage>[] | Function;\n\tbanners?: Banner[] | Function;\n}): Promise<void> {\n\tconst fromUser = checkFrom ? await Users.findOneById(fromId, { projection: { _id: 1 } }) : true;\n\n\tconst users = await (await Roles.findUsersInRole('admin')).toArray();\n\n\tfor await (const adminUser of users) {\n\t\tif (fromUser) {\n\t\t\ttry {\n\t\t\t\tconst { rid } = createDirectMessage([adminUser.username], fromId);\n\n\t\t\t\tgetData<Partial<IMessage>>(msgs, adminUser).forEach((msg) => executeSendMessage(fromId, Object.assign({ rid }, msg)));\n\t\t\t} catch (error) {\n\t\t\t\tSystemLogger.error(error);\n\t\t\t}\n\t\t}\n\n\t\tawait Promise.all(getData<Banner>(banners, adminUser).map((banner) => Users.addBannerById(adminUser._id, banner)));\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"57a63bbf8abda83967ed85a85035c8525bc40d17"}

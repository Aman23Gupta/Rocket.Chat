{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/modules/watchers/publishFields.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/modules/watchers/publishFields.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/modules/watchers/publishFields.ts","inputSourceMap":{"version":3,"file":"server/modules/watchers/publishFields.ts","sourceRoot":"","sources":["server/modules/watchers/publishFields.ts"],"names":[],"mappings":"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","sourcesContent":["export const subscriptionFields = {\n\tt: 1,\n\tts: 1,\n\tls: 1,\n\tlr: 1,\n\tname: 1,\n\tfname: 1,\n\trid: 1,\n\tcode: 1,\n\tf: 1,\n\tu: 1,\n\topen: 1,\n\talert: 1,\n\troles: 1,\n\tunread: 1,\n\tprid: 1,\n\tuserMentions: 1,\n\tgroupMentions: 1,\n\tarchived: 1,\n\taudioNotificationValue: 1,\n\tdesktopNotifications: 1,\n\tmobilePushNotifications: 1,\n\temailNotifications: 1,\n\tunreadAlert: 1,\n\t_updatedAt: 1,\n\tblocked: 1,\n\tblocker: 1,\n\tautoTranslate: 1,\n\tautoTranslateLanguage: 1,\n\tdisableNotifications: 1,\n\thideUnreadStatus: 1,\n\tmuteGroupMentions: 1,\n\tignored: 1,\n\tE2EKey: 1,\n\ttunread: 1,\n\ttunreadGroup: 1,\n\ttunreadUser: 1,\n\n\t// Omnichannel fields\n\tdepartment: 1,\n\tv: 1,\n\tonHold: 1,\n} as const;\n\nexport const roomFields = {\n\t_id: 1,\n\tname: 1,\n\tfname: 1,\n\tt: 1,\n\tcl: 1,\n\tu: 1,\n\tlm: 1,\n\t// usernames: 1,\n\tteamId: 1,\n\tteamMain: 1,\n\ttopic: 1,\n\tannouncement: 1,\n\tannouncementDetails: 1,\n\tmuted: 1,\n\tunmuted: 1,\n\t_updatedAt: 1,\n\tarchived: 1,\n\tjitsiTimeout: 1,\n\tdescription: 1,\n\tdefault: 1,\n\tcustomFields: 1,\n\tlastMessage: 1,\n\tretention: 1,\n\tprid: 1,\n\tavatarETag: 1,\n\tusersCount: 1,\n\n\t// @TODO create an API to register this fields based on room type\n\ttags: 1,\n\tsms: 1,\n\tfacebook: 1,\n\tcode: 1,\n\tjoinCodeRequired: 1,\n\topen: 1,\n\tlabel: 1,\n\tro: 1,\n\treactWhenReadOnly: 1,\n\tsysMes: 1,\n\tsentiment: 1,\n\ttokenpass: 1,\n\tstreamingOptions: 1,\n\tbroadcast: 1,\n\tencrypted: 1,\n\te2eKeyId: 1,\n\n\t// Omnichannel fields\n\tlivechatData: 1,\n\tpriorityId: 1,\n\tv: 1,\n\tdepartmentId: 1,\n\tservedBy: 1,\n\tsource: 1,\n\ttranscriptRequest: 1,\n\tonHold: 1,\n\tmetrics: 1,\n\tts: 1,\n\twaitingResponse: 1,\n\tqueuedAt: 1,\n\n\t// fields used by DMs\n\tusernames: 1,\n\tuids: 1,\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/modules/watchers/publishFields.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/modules/watchers/publishFields.ts"}},"code":"module.export({\n  subscriptionFields: () => subscriptionFields,\n  roomFields: () => roomFields\n});\nconst subscriptionFields = {\n  t: 1,\n  ts: 1,\n  ls: 1,\n  lr: 1,\n  name: 1,\n  fname: 1,\n  rid: 1,\n  code: 1,\n  f: 1,\n  u: 1,\n  open: 1,\n  alert: 1,\n  roles: 1,\n  unread: 1,\n  prid: 1,\n  userMentions: 1,\n  groupMentions: 1,\n  archived: 1,\n  audioNotificationValue: 1,\n  desktopNotifications: 1,\n  mobilePushNotifications: 1,\n  emailNotifications: 1,\n  unreadAlert: 1,\n  _updatedAt: 1,\n  blocked: 1,\n  blocker: 1,\n  autoTranslate: 1,\n  autoTranslateLanguage: 1,\n  disableNotifications: 1,\n  hideUnreadStatus: 1,\n  muteGroupMentions: 1,\n  ignored: 1,\n  E2EKey: 1,\n  tunread: 1,\n  tunreadGroup: 1,\n  tunreadUser: 1,\n  // Omnichannel fields\n  department: 1,\n  v: 1,\n  onHold: 1\n};\nconst roomFields = {\n  _id: 1,\n  name: 1,\n  fname: 1,\n  t: 1,\n  cl: 1,\n  u: 1,\n  lm: 1,\n  // usernames: 1,\n  teamId: 1,\n  teamMain: 1,\n  topic: 1,\n  announcement: 1,\n  announcementDetails: 1,\n  muted: 1,\n  unmuted: 1,\n  _updatedAt: 1,\n  archived: 1,\n  jitsiTimeout: 1,\n  description: 1,\n  default: 1,\n  customFields: 1,\n  lastMessage: 1,\n  retention: 1,\n  prid: 1,\n  avatarETag: 1,\n  usersCount: 1,\n  // @TODO create an API to register this fields based on room type\n  tags: 1,\n  sms: 1,\n  facebook: 1,\n  code: 1,\n  joinCodeRequired: 1,\n  open: 1,\n  label: 1,\n  ro: 1,\n  reactWhenReadOnly: 1,\n  sysMes: 1,\n  sentiment: 1,\n  tokenpass: 1,\n  streamingOptions: 1,\n  broadcast: 1,\n  encrypted: 1,\n  e2eKeyId: 1,\n  // Omnichannel fields\n  livechatData: 1,\n  priorityId: 1,\n  v: 1,\n  departmentId: 1,\n  servedBy: 1,\n  source: 1,\n  transcriptRequest: 1,\n  onHold: 1,\n  metrics: 1,\n  ts: 1,\n  waitingResponse: 1,\n  queuedAt: 1,\n  // fields used by DMs\n  usernames: 1,\n  uids: 1\n};","map":{"version":3,"sources":["server/modules/watchers/publishFields.ts"],"names":[],"mappings":"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","sourcesContent":["export const subscriptionFields = {\n\tt: 1,\n\tts: 1,\n\tls: 1,\n\tlr: 1,\n\tname: 1,\n\tfname: 1,\n\trid: 1,\n\tcode: 1,\n\tf: 1,\n\tu: 1,\n\topen: 1,\n\talert: 1,\n\troles: 1,\n\tunread: 1,\n\tprid: 1,\n\tuserMentions: 1,\n\tgroupMentions: 1,\n\tarchived: 1,\n\taudioNotificationValue: 1,\n\tdesktopNotifications: 1,\n\tmobilePushNotifications: 1,\n\temailNotifications: 1,\n\tunreadAlert: 1,\n\t_updatedAt: 1,\n\tblocked: 1,\n\tblocker: 1,\n\tautoTranslate: 1,\n\tautoTranslateLanguage: 1,\n\tdisableNotifications: 1,\n\thideUnreadStatus: 1,\n\tmuteGroupMentions: 1,\n\tignored: 1,\n\tE2EKey: 1,\n\ttunread: 1,\n\ttunreadGroup: 1,\n\ttunreadUser: 1,\n\n\t// Omnichannel fields\n\tdepartment: 1,\n\tv: 1,\n\tonHold: 1,\n} as const;\n\nexport const roomFields = {\n\t_id: 1,\n\tname: 1,\n\tfname: 1,\n\tt: 1,\n\tcl: 1,\n\tu: 1,\n\tlm: 1,\n\t// usernames: 1,\n\tteamId: 1,\n\tteamMain: 1,\n\ttopic: 1,\n\tannouncement: 1,\n\tannouncementDetails: 1,\n\tmuted: 1,\n\tunmuted: 1,\n\t_updatedAt: 1,\n\tarchived: 1,\n\tjitsiTimeout: 1,\n\tdescription: 1,\n\tdefault: 1,\n\tcustomFields: 1,\n\tlastMessage: 1,\n\tretention: 1,\n\tprid: 1,\n\tavatarETag: 1,\n\tusersCount: 1,\n\n\t// @TODO create an API to register this fields based on room type\n\ttags: 1,\n\tsms: 1,\n\tfacebook: 1,\n\tcode: 1,\n\tjoinCodeRequired: 1,\n\topen: 1,\n\tlabel: 1,\n\tro: 1,\n\treactWhenReadOnly: 1,\n\tsysMes: 1,\n\tsentiment: 1,\n\ttokenpass: 1,\n\tstreamingOptions: 1,\n\tbroadcast: 1,\n\tencrypted: 1,\n\te2eKeyId: 1,\n\n\t// Omnichannel fields\n\tlivechatData: 1,\n\tpriorityId: 1,\n\tv: 1,\n\tdepartmentId: 1,\n\tservedBy: 1,\n\tsource: 1,\n\ttranscriptRequest: 1,\n\tonHold: 1,\n\tmetrics: 1,\n\tts: 1,\n\twaitingResponse: 1,\n\tqueuedAt: 1,\n\n\t// fields used by DMs\n\tusernames: 1,\n\tuids: 1,\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"f87a5aaedf5c925a57b585e4dd6b0dcf58e8efb7"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/listener.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/listener.ts","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/listener.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/listener.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/listener.ts"],"names":[],"mappings":"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","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http';\n\nimport { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\nimport { RoutePolicy } from 'meteor/routepolicy';\nimport bodyParser from 'body-parser';\nimport fiber from 'fibers';\n\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { SAML } from './lib/SAML';\nimport { SAMLUtils } from './lib/Utils';\nimport { ISAMLAction } from './definition/ISAMLAction';\nimport { IIncomingMessage } from '../../../definition/IIncomingMessage';\n\nRoutePolicy.declare('/_saml/', 'network');\n\nconst samlUrlToObject = function (url: string | undefined): ISAMLAction | null {\n\t// req.url will be '/_saml/<action>/<service name>/<credentialToken>'\n\tif (!url) {\n\t\treturn null;\n\t}\n\n\tconst splitUrl = url.split('?');\n\tconst splitPath = splitUrl[0].split('/');\n\n\t// Any non-saml request will continue down the default\n\t// middlewares.\n\tif (splitPath[1] !== '_saml') {\n\t\treturn null;\n\t}\n\n\tconst result = {\n\t\tactionName: splitPath[2],\n\t\tserviceName: splitPath[3],\n\t\tcredentialToken: splitPath[4],\n\t};\n\n\tSAMLUtils.log(result);\n\treturn result;\n};\n\nconst middleware = function (req: IIncomingMessage, res: ServerResponse, next: (err?: any) => void): void {\n\t// Make sure to catch any exceptions because otherwise we'd crash\n\t// the runner\n\ttry {\n\t\tconst samlObject = samlUrlToObject(req.url);\n\t\tif (!samlObject || !samlObject.serviceName) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!samlObject.actionName) {\n\t\t\tthrow new Error('Missing SAML action');\n\t\t}\n\n\t\tconst service = SAMLUtils.getServiceProviderOptions(samlObject.serviceName);\n\t\tif (!service) {\n\t\t\tSystemLogger.error(`${samlObject.serviceName} service provider not found`);\n\t\t\tthrow new Error('SAML Service Provider not found.');\n\t\t}\n\n\t\tSAML.processRequest(req, res, service, samlObject);\n\t} catch (err) {\n\t\t// @ToDo: Ideally we should send some error message to the client, but there's no way to do it on a redirect right now.\n\t\tSystemLogger.error(err);\n\n\t\tconst url = Meteor.absoluteUrl('home');\n\t\tres.writeHead(302, {\n\t\t\tLocation: url,\n\t\t});\n\t\tres.end();\n\t}\n};\n\n// Listen to incoming SAML http requests\nWebApp.connectHandlers.use(bodyParser.json()).use(function (req: IncomingMessage, res: ServerResponse, next: (err?: any) => void) {\n\t// Need to create a fiber since we're using synchronous http calls and nothing\n\t// else is wrapping this in a fiber automatically\n\tfiber(function () {\n\t\tmiddleware(req as IIncomingMessage, res, next);\n\t}).run();\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/meteor-accounts-saml/server/listener.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/listener.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 1);\nlet RoutePolicy;\nmodule.link(\"meteor/routepolicy\", {\n  RoutePolicy(v) {\n    RoutePolicy = v;\n  }\n\n}, 2);\nlet bodyParser;\nmodule.link(\"body-parser\", {\n  default(v) {\n    bodyParser = v;\n  }\n\n}, 3);\nlet fiber;\nmodule.link(\"fibers\", {\n  default(v) {\n    fiber = v;\n  }\n\n}, 4);\nlet SystemLogger;\nmodule.link(\"../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 5);\nlet SAML;\nmodule.link(\"./lib/SAML\", {\n  SAML(v) {\n    SAML = v;\n  }\n\n}, 6);\nlet SAMLUtils;\nmodule.link(\"./lib/Utils\", {\n  SAMLUtils(v) {\n    SAMLUtils = v;\n  }\n\n}, 7);\nRoutePolicy.declare('/_saml/', 'network');\n\nconst samlUrlToObject = function (url) {\n  // req.url will be '/_saml/<action>/<service name>/<credentialToken>'\n  if (!url) {\n    return null;\n  }\n\n  const splitUrl = url.split('?');\n  const splitPath = splitUrl[0].split('/'); // Any non-saml request will continue down the default\n  // middlewares.\n\n  if (splitPath[1] !== '_saml') {\n    return null;\n  }\n\n  const result = {\n    actionName: splitPath[2],\n    serviceName: splitPath[3],\n    credentialToken: splitPath[4]\n  };\n  SAMLUtils.log(result);\n  return result;\n};\n\nconst middleware = function (req, res, next) {\n  // Make sure to catch any exceptions because otherwise we'd crash\n  // the runner\n  try {\n    const samlObject = samlUrlToObject(req.url);\n\n    if (!samlObject || !samlObject.serviceName) {\n      next();\n      return;\n    }\n\n    if (!samlObject.actionName) {\n      throw new Error('Missing SAML action');\n    }\n\n    const service = SAMLUtils.getServiceProviderOptions(samlObject.serviceName);\n\n    if (!service) {\n      SystemLogger.error(\"\".concat(samlObject.serviceName, \" service provider not found\"));\n      throw new Error('SAML Service Provider not found.');\n    }\n\n    SAML.processRequest(req, res, service, samlObject);\n  } catch (err) {\n    // @ToDo: Ideally we should send some error message to the client, but there's no way to do it on a redirect right now.\n    SystemLogger.error(err);\n    const url = Meteor.absoluteUrl('home');\n    res.writeHead(302, {\n      Location: url\n    });\n    res.end();\n  }\n}; // Listen to incoming SAML http requests\n\n\nWebApp.connectHandlers.use(bodyParser.json()).use(function (req, res, next) {\n  // Need to create a fiber since we're using synchronous http calls and nothing\n  // else is wrapping this in a fiber automatically\n  fiber(function () {\n    middleware(req, res, next);\n  }).run();\n});","map":{"version":3,"sources":["app/meteor-accounts-saml/server/listener.ts"],"names":[],"mappings":"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","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http';\n\nimport { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\nimport { RoutePolicy } from 'meteor/routepolicy';\nimport bodyParser from 'body-parser';\nimport fiber from 'fibers';\n\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { SAML } from './lib/SAML';\nimport { SAMLUtils } from './lib/Utils';\nimport { ISAMLAction } from './definition/ISAMLAction';\nimport { IIncomingMessage } from '../../../definition/IIncomingMessage';\n\nRoutePolicy.declare('/_saml/', 'network');\n\nconst samlUrlToObject = function (url: string | undefined): ISAMLAction | null {\n\t// req.url will be '/_saml/<action>/<service name>/<credentialToken>'\n\tif (!url) {\n\t\treturn null;\n\t}\n\n\tconst splitUrl = url.split('?');\n\tconst splitPath = splitUrl[0].split('/');\n\n\t// Any non-saml request will continue down the default\n\t// middlewares.\n\tif (splitPath[1] !== '_saml') {\n\t\treturn null;\n\t}\n\n\tconst result = {\n\t\tactionName: splitPath[2],\n\t\tserviceName: splitPath[3],\n\t\tcredentialToken: splitPath[4],\n\t};\n\n\tSAMLUtils.log(result);\n\treturn result;\n};\n\nconst middleware = function (req: IIncomingMessage, res: ServerResponse, next: (err?: any) => void): void {\n\t// Make sure to catch any exceptions because otherwise we'd crash\n\t// the runner\n\ttry {\n\t\tconst samlObject = samlUrlToObject(req.url);\n\t\tif (!samlObject || !samlObject.serviceName) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!samlObject.actionName) {\n\t\t\tthrow new Error('Missing SAML action');\n\t\t}\n\n\t\tconst service = SAMLUtils.getServiceProviderOptions(samlObject.serviceName);\n\t\tif (!service) {\n\t\t\tSystemLogger.error(`${samlObject.serviceName} service provider not found`);\n\t\t\tthrow new Error('SAML Service Provider not found.');\n\t\t}\n\n\t\tSAML.processRequest(req, res, service, samlObject);\n\t} catch (err) {\n\t\t// @ToDo: Ideally we should send some error message to the client, but there's no way to do it on a redirect right now.\n\t\tSystemLogger.error(err);\n\n\t\tconst url = Meteor.absoluteUrl('home');\n\t\tres.writeHead(302, {\n\t\t\tLocation: url,\n\t\t});\n\t\tres.end();\n\t}\n};\n\n// Listen to incoming SAML http requests\nWebApp.connectHandlers.use(bodyParser.json()).use(function (req: IncomingMessage, res: ServerResponse, next: (err?: any) => void) {\n\t// Need to create a fiber since we're using synchronous http calls and nothing\n\t// else is wrapping this in a fiber automatically\n\tfiber(function () {\n\t\tmiddleware(req as IIncomingMessage, res, next);\n\t}).run();\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"43581fcb71171c8e247670759d5075644b522c2c"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/meteorFixes.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/lib/meteorFixes.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/meteorFixes.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/meteorFixes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/lib/meteorFixes.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet MongoInternals;\nmodule.link(\"meteor/mongo\", {\n  MongoInternals(v) {\n    MongoInternals = v;\n  }\n\n}, 1);\nconst timeoutQuery = parseInt(process.env.OBSERVERS_CHECK_TIMEOUT) || 2 * 60 * 1000;\nconst interval = parseInt(process.env.OBSERVERS_CHECK_INTERVAL) || 60 * 1000;\nconst debug = Boolean(process.env.OBSERVERS_CHECK_DEBUG);\n/**\n * When the Observer Driver stuck in QUERYING status it stop processing records\n * here https://github.com/meteor/meteor/blob/be6e529a739f47446950e045f4547ee60e5de7ae/packages/mongo/oplog_observe_driver.js#L166\n * and nothing is able to change the status back to STEADY.\n * If this happens with the User's collection the frontend will freeze after login with username/password or resume token\n * waiting the 'update' response from DDP\n * here https://github.com/meteor/meteor/blob/be6e529a739f47446950e045f4547ee60e5de7ae/packages/ddp-server/livedata_server.js#L663\n * since the login is a block request and wait for the update to execute next calls.\n *\n * A good way to freeze a observer is running the instance with --inspect and execute in inspector the following code:\n *   multiplexer = Object.values(MongoInternals.defaultRemoteCollectionDriver().mongo._observeMultiplexers)[0]\n *   multiplexer._observeDriver._needToPollQuery()\n * Whis will raise an error of bindEnvironment and block the observer\n * here https://github.com/meteor/meteor/blob/be6e529a739f47446950e045f4547ee60e5de7ae/packages/mongo/oplog_observe_driver.js#L698\n *\n * This code will check for observer instances in QUERYING mode for more than 2 minutues and will manually set them back\n * to STEADY and force the query again to refresh the data and flush the _writesToCommitWhenWeReachSteady callbacks.\n */\n\nMeteor.setInterval(() => {\n  if (debug) {\n    console.log('Checking for stucked observers');\n  }\n\n  const now = Date.now();\n  const driver = MongoInternals.defaultRemoteCollectionDriver();\n  Object.entries(driver.mongo._observeMultiplexers).filter(_ref => {\n    let [, {\n      _observeDriver\n    }] = _ref;\n    return _observeDriver._phase === 'QUERYING' && timeoutQuery < now - _observeDriver._phaseStartTime;\n  }).forEach(_ref2 => {\n    let [observeKey, {\n      _observeDriver\n    }] = _ref2;\n    console.error('TIMEOUT QUERY OPERATION', {\n      observeKey,\n      writesToCommitWhenWeReachSteadyLength: _observeDriver._writesToCommitWhenWeReachSteady.length,\n      cursorDescription: JSON.stringify(_observeDriver._cursorDescription)\n    });\n\n    _observeDriver._registerPhaseChange('STEADY');\n\n    _observeDriver._needToPollQuery();\n  });\n}, interval);\n/**\n * If some promise is rejected and doesn't have a catch (unhandledRejection) it may cause this finally\n * here https://github.com/meteor/meteor/blob/be6e529a739f47446950e045f4547ee60e5de7ae/packages/mongo/oplog_tailing.js#L348\n * to not be executed never ending the oplog worker and freezing the entire process.\n *\n * The only way to release the process is executing the following code via inspect:\n *   MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle._workerActive = false\n *\n * Since unhandled rejections are deprecated in NodeJS:\n * (node:83382) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections\n * that are not handled will terminate the Node.js process with a non-zero exit code.\n * we will start respecting this and exit the process to prevent these kind of problems.\n */\n\nprocess.on('unhandledRejection', error => {\n  console.error('=== UnHandledPromiseRejection ===');\n  console.error(error);\n  console.error('---------------------------------');\n  console.error('Errors like this can cause oplog processing errors.');\n  console.error('Setting EXIT_UNHANDLEDPROMISEREJECTION will cause the process to exit allowing your service to automatically restart the process');\n  console.error('Future node.js versions will automatically exit the process');\n  console.error('=================================');\n\n  if (process.env.NODE_ENV === 'development' || process.env.EXIT_UNHANDLEDPROMISEREJECTION) {\n    process.exit(1);\n  }\n});","map":{"version":3,"sources":["app/lib/server/lib/meteorFixes.js"],"names":["Meteor","module","link","v","MongoInternals","timeoutQuery","parseInt","process","env","OBSERVERS_CHECK_TIMEOUT","interval","OBSERVERS_CHECK_INTERVAL","debug","Boolean","OBSERVERS_CHECK_DEBUG","setInterval","console","log","now","Date","driver","defaultRemoteCollectionDriver","Object","entries","mongo","_observeMultiplexers","filter","_observeDriver","_phase","_phaseStartTime","forEach","observeKey","error","writesToCommitWhenWeReachSteadyLength","_writesToCommitWhenWeReachSteady","length","cursorDescription","JSON","stringify","_cursorDescription","_registerPhaseChange","_needToPollQuery","on","NODE_ENV","EXIT_UNHANDLEDPROMISEREJECTION","exit"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,cAAJ;AAAmBH,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACE,EAAAA,cAAc,CAACD,CAAD,EAAG;AAACC,IAAAA,cAAc,GAACD,CAAf;AAAiB;;AAApC,CAA3B,EAAiE,CAAjE;AAGnF,MAAME,YAAY,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,uBAAb,CAAR,IAAiD,IAAI,EAAJ,GAAS,IAA/E;AACA,MAAMC,QAAQ,GAAGJ,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYG,wBAAb,CAAR,IAAkD,KAAK,IAAxE;AACA,MAAMC,KAAK,GAAGC,OAAO,CAACN,OAAO,CAACC,GAAR,CAAYM,qBAAb,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAd,MAAM,CAACe,WAAP,CAAmB,MAAM;AACxB,MAAIH,KAAJ,EAAW;AACVI,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA;;AACD,QAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,QAAME,MAAM,GAAGhB,cAAc,CAACiB,6BAAf,EAAf;AAEAC,EAAAA,MAAM,CAACC,OAAP,CAAeH,MAAM,CAACI,KAAP,CAAaC,oBAA5B,EACEC,MADF,CACS;AAAA,QAAC,GAAG;AAAEC,MAAAA;AAAF,KAAH,CAAD;AAAA,WAA4BA,cAAc,CAACC,MAAf,KAA0B,UAA1B,IAAwCvB,YAAY,GAAGa,GAAG,GAAGS,cAAc,CAACE,eAAxG;AAAA,GADT,EAEEC,OAFF,CAEU,SAAsC;AAAA,QAArC,CAACC,UAAD,EAAa;AAAEJ,MAAAA;AAAF,KAAb,CAAqC;AAC9CX,IAAAA,OAAO,CAACgB,KAAR,CAAc,yBAAd,EAAyC;AACxCD,MAAAA,UADwC;AAExCE,MAAAA,qCAAqC,EAAEN,cAAc,CAACO,gCAAf,CAAgDC,MAF/C;AAGxCC,MAAAA,iBAAiB,EAAEC,IAAI,CAACC,SAAL,CAAeX,cAAc,CAACY,kBAA9B;AAHqB,KAAzC;;AAKAZ,IAAAA,cAAc,CAACa,oBAAf,CAAoC,QAApC;;AACAb,IAAAA,cAAc,CAACc,gBAAf;AACA,GAVF;AAWA,CAlBD,EAkBG/B,QAlBH;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,OAAO,CAACmC,EAAR,CAAW,oBAAX,EAAkCV,KAAD,IAAW;AAC3ChB,EAAAA,OAAO,CAACgB,KAAR,CAAc,mCAAd;AACAhB,EAAAA,OAAO,CAACgB,KAAR,CAAcA,KAAd;AACAhB,EAAAA,OAAO,CAACgB,KAAR,CAAc,mCAAd;AACAhB,EAAAA,OAAO,CAACgB,KAAR,CAAc,qDAAd;AACAhB,EAAAA,OAAO,CAACgB,KAAR,CACC,kIADD;AAGAhB,EAAAA,OAAO,CAACgB,KAAR,CAAc,6DAAd;AACAhB,EAAAA,OAAO,CAACgB,KAAR,CAAc,mCAAd;;AAEA,MAAIzB,OAAO,CAACC,GAAR,CAAYmC,QAAZ,KAAyB,aAAzB,IAA0CpC,OAAO,CAACC,GAAR,CAAYoC,8BAA1D,EAA0F;AACzFrC,IAAAA,OAAO,CAACsC,IAAR,CAAa,CAAb;AACA;AACD,CAdD","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { MongoInternals } from 'meteor/mongo';\n\nconst timeoutQuery = parseInt(process.env.OBSERVERS_CHECK_TIMEOUT) || 2 * 60 * 1000;\nconst interval = parseInt(process.env.OBSERVERS_CHECK_INTERVAL) || 60 * 1000;\nconst debug = Boolean(process.env.OBSERVERS_CHECK_DEBUG);\n\n/**\n * When the Observer Driver stuck in QUERYING status it stop processing records\n * here https://github.com/meteor/meteor/blob/be6e529a739f47446950e045f4547ee60e5de7ae/packages/mongo/oplog_observe_driver.js#L166\n * and nothing is able to change the status back to STEADY.\n * If this happens with the User's collection the frontend will freeze after login with username/password or resume token\n * waiting the 'update' response from DDP\n * here https://github.com/meteor/meteor/blob/be6e529a739f47446950e045f4547ee60e5de7ae/packages/ddp-server/livedata_server.js#L663\n * since the login is a block request and wait for the update to execute next calls.\n *\n * A good way to freeze a observer is running the instance with --inspect and execute in inspector the following code:\n *   multiplexer = Object.values(MongoInternals.defaultRemoteCollectionDriver().mongo._observeMultiplexers)[0]\n *   multiplexer._observeDriver._needToPollQuery()\n * Whis will raise an error of bindEnvironment and block the observer\n * here https://github.com/meteor/meteor/blob/be6e529a739f47446950e045f4547ee60e5de7ae/packages/mongo/oplog_observe_driver.js#L698\n *\n * This code will check for observer instances in QUERYING mode for more than 2 minutues and will manually set them back\n * to STEADY and force the query again to refresh the data and flush the _writesToCommitWhenWeReachSteady callbacks.\n */\n\nMeteor.setInterval(() => {\n\tif (debug) {\n\t\tconsole.log('Checking for stucked observers');\n\t}\n\tconst now = Date.now();\n\tconst driver = MongoInternals.defaultRemoteCollectionDriver();\n\n\tObject.entries(driver.mongo._observeMultiplexers)\n\t\t.filter(([, { _observeDriver }]) => _observeDriver._phase === 'QUERYING' && timeoutQuery < now - _observeDriver._phaseStartTime)\n\t\t.forEach(([observeKey, { _observeDriver }]) => {\n\t\t\tconsole.error('TIMEOUT QUERY OPERATION', {\n\t\t\t\tobserveKey,\n\t\t\t\twritesToCommitWhenWeReachSteadyLength: _observeDriver._writesToCommitWhenWeReachSteady.length,\n\t\t\t\tcursorDescription: JSON.stringify(_observeDriver._cursorDescription),\n\t\t\t});\n\t\t\t_observeDriver._registerPhaseChange('STEADY');\n\t\t\t_observeDriver._needToPollQuery();\n\t\t});\n}, interval);\n\n/**\n * If some promise is rejected and doesn't have a catch (unhandledRejection) it may cause this finally\n * here https://github.com/meteor/meteor/blob/be6e529a739f47446950e045f4547ee60e5de7ae/packages/mongo/oplog_tailing.js#L348\n * to not be executed never ending the oplog worker and freezing the entire process.\n *\n * The only way to release the process is executing the following code via inspect:\n *   MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle._workerActive = false\n *\n * Since unhandled rejections are deprecated in NodeJS:\n * (node:83382) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections\n * that are not handled will terminate the Node.js process with a non-zero exit code.\n * we will start respecting this and exit the process to prevent these kind of problems.\n */\n\nprocess.on('unhandledRejection', (error) => {\n\tconsole.error('=== UnHandledPromiseRejection ===');\n\tconsole.error(error);\n\tconsole.error('---------------------------------');\n\tconsole.error('Errors like this can cause oplog processing errors.');\n\tconsole.error(\n\t\t'Setting EXIT_UNHANDLEDPROMISEREJECTION will cause the process to exit allowing your service to automatically restart the process',\n\t);\n\tconsole.error('Future node.js versions will automatically exit the process');\n\tconsole.error('=================================');\n\n\tif (process.env.NODE_ENV === 'development' || process.env.EXIT_UNHANDLEDPROMISEREJECTION) {\n\t\tprocess.exit(1);\n\t}\n});\n"]},"sourceType":"module","hash":"5c89efc1fd6254c213b8e7361a77c0f01dd2121f"}

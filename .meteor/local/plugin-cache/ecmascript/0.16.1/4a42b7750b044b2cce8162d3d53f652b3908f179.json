{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/canSendMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/authorization/server/functions/canSendMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/canSendMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/canSendMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authorization/server/functions/canSendMessage.js"}},"code":"module.export({\n  validateRoomMessagePermissionsAsync: () => validateRoomMessagePermissionsAsync,\n  canSendMessageAsync: () => canSendMessageAsync,\n  canSendMessage: () => canSendMessage,\n  validateRoomMessagePermissions: () => validateRoomMessagePermissions\n});\nlet canAccessRoomAsync;\nmodule.link(\"./canAccessRoom\", {\n  canAccessRoomAsync(v) {\n    canAccessRoomAsync = v;\n  }\n\n}, 0);\nlet hasPermissionAsync;\nmodule.link(\"./hasPermission\", {\n  hasPermissionAsync(v) {\n    hasPermissionAsync = v;\n  }\n\n}, 1);\nlet Subscriptions, Rooms;\nmodule.link(\"../../../models/server/raw\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 2);\nlet roomTypes, RoomMemberActions;\nmodule.link(\"../../../utils/server\", {\n  roomTypes(v) {\n    roomTypes = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  }\n\n}, 3);\nconst subscriptionOptions = {\n  projection: {\n    blocked: 1,\n    blocker: 1\n  }\n};\n\nconst validateRoomMessagePermissionsAsync = (room, _ref, extraData) => Promise.asyncApply(() => {\n  var _room$muted;\n\n  let {\n    uid,\n    username,\n    type\n  } = _ref;\n\n  if (!room) {\n    throw new Error('error-invalid-room');\n  }\n\n  if (type !== 'app' && !Promise.await(canAccessRoomAsync(room, {\n    _id: uid,\n    username\n  }, extraData))) {\n    throw new Error('error-not-allowed');\n  }\n\n  if (roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.BLOCK)) {\n    const subscription = Promise.await(Subscriptions.findOneByRoomIdAndUserId(room._id, uid, subscriptionOptions));\n\n    if (subscription && (subscription.blocked || subscription.blocker)) {\n      throw new Error('room_is_blocked');\n    }\n  }\n\n  if (room.ro === true && !Promise.await(hasPermissionAsync(uid, 'post-readonly', room._id))) {\n    // Unless the user was manually unmuted\n    if (!(room.unmuted || []).includes(username)) {\n      throw new Error(\"You can't send messages because the room is readonly.\");\n    }\n  }\n\n  if (room !== null && room !== void 0 && (_room$muted = room.muted) !== null && _room$muted !== void 0 && _room$muted.includes(username)) {\n    throw new Error('You_have_been_muted');\n  }\n});\n\nconst canSendMessageAsync = (rid, _ref2, extraData) => Promise.asyncApply(() => {\n  let {\n    uid,\n    username,\n    type\n  } = _ref2;\n  const room = Promise.await(Rooms.findOneById(rid));\n  Promise.await(validateRoomMessagePermissionsAsync(room, {\n    uid,\n    username,\n    type\n  }, extraData));\n  return room;\n});\n\nconst canSendMessage = (rid, _ref3, extraData) => {\n  let {\n    uid,\n    username,\n    type\n  } = _ref3;\n  return Promise.await(canSendMessageAsync(rid, {\n    uid,\n    username,\n    type\n  }, extraData));\n};\n\nconst validateRoomMessagePermissions = (room, _ref4, extraData) => {\n  let {\n    uid,\n    username,\n    type\n  } = _ref4;\n  return Promise.await(validateRoomMessagePermissionsAsync(room, {\n    uid,\n    username,\n    type\n  }, extraData));\n};","map":{"version":3,"sources":["app/authorization/server/functions/canSendMessage.js"],"names":["module","export","validateRoomMessagePermissionsAsync","canSendMessageAsync","canSendMessage","validateRoomMessagePermissions","canAccessRoomAsync","link","v","hasPermissionAsync","Subscriptions","Rooms","roomTypes","RoomMemberActions","subscriptionOptions","projection","blocked","blocker","room","extraData","uid","username","type","Error","_id","getConfig","t","allowMemberAction","BLOCK","subscription","findOneByRoomIdAndUserId","ro","unmuted","includes","muted","rid","findOneById","Promise","await"],"mappings":"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","sourcesContent":["import { canAccessRoomAsync } from './canAccessRoom';\nimport { hasPermissionAsync } from './hasPermission';\nimport { Subscriptions, Rooms } from '../../../models/server/raw';\nimport { roomTypes, RoomMemberActions } from '../../../utils/server';\n\nconst subscriptionOptions = {\n\tprojection: {\n\t\tblocked: 1,\n\t\tblocker: 1,\n\t},\n};\n\nexport const validateRoomMessagePermissionsAsync = async (room, { uid, username, type }, extraData) => {\n\tif (!room) {\n\t\tthrow new Error('error-invalid-room');\n\t}\n\n\tif (type !== 'app' && !(await canAccessRoomAsync(room, { _id: uid, username }, extraData))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tif (roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.BLOCK)) {\n\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(room._id, uid, subscriptionOptions);\n\t\tif (subscription && (subscription.blocked || subscription.blocker)) {\n\t\t\tthrow new Error('room_is_blocked');\n\t\t}\n\t}\n\n\tif (room.ro === true && !(await hasPermissionAsync(uid, 'post-readonly', room._id))) {\n\t\t// Unless the user was manually unmuted\n\t\tif (!(room.unmuted || []).includes(username)) {\n\t\t\tthrow new Error(\"You can't send messages because the room is readonly.\");\n\t\t}\n\t}\n\n\tif (room?.muted?.includes(username)) {\n\t\tthrow new Error('You_have_been_muted');\n\t}\n};\n\nexport const canSendMessageAsync = async (rid, { uid, username, type }, extraData) => {\n\tconst room = await Rooms.findOneById(rid);\n\tawait validateRoomMessagePermissionsAsync(room, { uid, username, type }, extraData);\n\treturn room;\n};\n\nexport const canSendMessage = (rid, { uid, username, type }, extraData) =>\n\tPromise.await(canSendMessageAsync(rid, { uid, username, type }, extraData));\nexport const validateRoomMessagePermissions = (room, { uid, username, type }, extraData) =>\n\tPromise.await(validateRoomMessagePermissionsAsync(room, { uid, username, type }, extraData));\n"]},"sourceType":"module","hash":"4a42b7750b044b2cce8162d3d53f652b3908f179"}

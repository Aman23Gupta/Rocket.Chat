{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/user.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/normalizers/user.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/user.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/user.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/normalizers/user.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet getNameAndDomain, isFullyQualified;\nmodule.link(\"../functions/helpers\", {\n  getNameAndDomain(v) {\n    getNameAndDomain = v;\n  },\n\n  isFullyQualified(v) {\n    isFullyQualified = v;\n  }\n\n}, 2);\nlet getFederationDomain;\nmodule.link(\"../lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 3);\n\nconst denormalizeUser = originalResource => {\n  const resource = _objectSpread({}, originalResource); // Only denormalize local emails\n\n\n  if (resource.federation && resource.federation.origin === getFederationDomain()) {\n    resource.emails = [{\n      address: resource.federation.originalInfo.email\n    }];\n  }\n\n  const [username, domain] = getNameAndDomain(resource.username);\n  resource.username = domain === getFederationDomain() ? username : resource.username;\n  return resource;\n};\n\nconst denormalizeAllUsers = resources => resources.map(denormalizeUser);\n\nconst normalizeUser = originalResource => {\n  // Get only what we need, non-sensitive data\n  const resource = _.pick(originalResource, '_id', 'username', 'type', 'emails', 'name', 'federation', 'isRemote', 'createdAt', '_updatedAt');\n\n  resource.emails = [{\n    address: \"\".concat(resource._id, \"@\").concat(getFederationDomain())\n  }];\n  const email = resource.emails[0].address;\n  resource.active = true;\n  resource.roles = ['user'];\n  resource.status = 'online';\n  resource.username = !isFullyQualified(resource.username) ? \"\".concat(resource.username, \"@\").concat(getFederationDomain()) : resource.username; // Federation\n\n  resource.federation = resource.federation || {\n    origin: getFederationDomain(),\n    originalInfo: {\n      email\n    }\n  };\n  resource.isRemote = resource.federation.origin !== getFederationDomain(); // Persist the normalization\n\n  Users.update({\n    _id: resource._id\n  }, {\n    $set: {\n      isRemote: resource.isRemote,\n      federation: resource.federation\n    }\n  });\n  return resource;\n};\n\nconst normalizeAllUsers = resources => resources.map(normalizeUser);\n\nmodule.exportDefault({\n  denormalizeUser,\n  denormalizeAllUsers,\n  normalizeUser,\n  normalizeAllUsers\n});","map":{"version":3,"sources":["app/federation/server/normalizers/user.js"],"names":["_objectSpread","module","link","default","v","_","Users","getNameAndDomain","isFullyQualified","getFederationDomain","denormalizeUser","originalResource","resource","federation","origin","emails","address","originalInfo","email","username","domain","denormalizeAllUsers","resources","map","normalizeUser","pick","_id","active","roles","status","isRemote","update","$set","normalizeAllUsers","exportDefault"],"mappings":"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","sourcesContent":["import _ from 'underscore';\n\nimport { Users } from '../../../models/server';\nimport { getNameAndDomain, isFullyQualified } from '../functions/helpers';\nimport { getFederationDomain } from '../lib/getFederationDomain';\n\nconst denormalizeUser = (originalResource) => {\n\tconst resource = { ...originalResource };\n\n\t// Only denormalize local emails\n\tif (resource.federation && resource.federation.origin === getFederationDomain()) {\n\t\tresource.emails = [\n\t\t\t{\n\t\t\t\taddress: resource.federation.originalInfo.email,\n\t\t\t},\n\t\t];\n\t}\n\n\tconst [username, domain] = getNameAndDomain(resource.username);\n\n\tresource.username = domain === getFederationDomain() ? username : resource.username;\n\n\treturn resource;\n};\n\nconst denormalizeAllUsers = (resources) => resources.map(denormalizeUser);\n\nconst normalizeUser = (originalResource) => {\n\t// Get only what we need, non-sensitive data\n\tconst resource = _.pick(\n\t\toriginalResource,\n\t\t'_id',\n\t\t'username',\n\t\t'type',\n\t\t'emails',\n\t\t'name',\n\t\t'federation',\n\t\t'isRemote',\n\t\t'createdAt',\n\t\t'_updatedAt',\n\t);\n\n\tresource.emails = [\n\t\t{\n\t\t\taddress: `${resource._id}@${getFederationDomain()}`,\n\t\t},\n\t];\n\tconst email = resource.emails[0].address;\n\n\tresource.active = true;\n\tresource.roles = ['user'];\n\tresource.status = 'online';\n\tresource.username = !isFullyQualified(resource.username) ? `${resource.username}@${getFederationDomain()}` : resource.username;\n\n\t// Federation\n\tresource.federation = resource.federation || {\n\t\torigin: getFederationDomain(),\n\t\toriginalInfo: {\n\t\t\temail,\n\t\t},\n\t};\n\n\tresource.isRemote = resource.federation.origin !== getFederationDomain();\n\n\t// Persist the normalization\n\tUsers.update({ _id: resource._id }, { $set: { isRemote: resource.isRemote, federation: resource.federation } });\n\n\treturn resource;\n};\n\nconst normalizeAllUsers = (resources) => resources.map(normalizeUser);\n\nexport default {\n\tdenormalizeUser,\n\tdenormalizeAllUsers,\n\tnormalizeUser,\n\tnormalizeAllUsers,\n};\n"]},"sourceType":"module","hash":"f2be942b8f4f0d790ab69cd51d001578c811bb65"}

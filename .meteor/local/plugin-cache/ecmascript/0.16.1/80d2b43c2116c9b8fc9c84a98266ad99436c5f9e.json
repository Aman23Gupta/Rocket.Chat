{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/message-mark-as-unread/server/unreadMessages.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/message-mark-as-unread/server/unreadMessages.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/message-mark-as-unread/server/unreadMessages.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/message-mark-as-unread/server/unreadMessages.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/message-mark-as-unread/server/unreadMessages.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet logger;\nmodule.link(\"./logger\", {\n  default(v) {\n    logger = v;\n  }\n\n}, 1);\nlet Messages, Subscriptions;\nmodule.link(\"../../models\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 2);\nMeteor.methods({\n  unreadMessages(firstUnreadMessage, room) {\n    const userId = Meteor.userId();\n\n    if (!userId) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'unreadMessages'\n      });\n    }\n\n    if (room && typeof room === 'string') {\n      const lastMessage = Messages.findVisibleByRoomId(room, {\n        limit: 1,\n        sort: {\n          ts: -1\n        }\n      }).fetch()[0];\n\n      if (lastMessage == null) {\n        throw new Meteor.Error('error-no-message-for-unread', 'There are no messages to mark unread', {\n          method: 'unreadMessages',\n          action: 'Unread_messages'\n        });\n      }\n\n      return Subscriptions.setAsUnreadByRoomIdAndUserId(lastMessage.rid, userId, lastMessage.ts);\n    }\n\n    if (typeof (firstUnreadMessage === null || firstUnreadMessage === void 0 ? void 0 : firstUnreadMessage._id) !== 'string') {\n      throw new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n        method: 'unreadMessages',\n        action: 'Unread_messages'\n      });\n    }\n\n    const originalMessage = Messages.findOneById(firstUnreadMessage._id, {\n      fields: {\n        u: 1,\n        rid: 1,\n        file: 1,\n        ts: 1\n      }\n    });\n\n    if (originalMessage == null || userId === originalMessage.u._id) {\n      throw new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n        method: 'unreadMessages',\n        action: 'Unread_messages'\n      });\n    }\n\n    const lastSeen = Subscriptions.findOneByRoomIdAndUserId(originalMessage.rid, userId).ls;\n\n    if (firstUnreadMessage.ts >= lastSeen) {\n      return logger.debug('Provided message is already marked as unread');\n    }\n\n    logger.debug(\"Updating unread  message of \".concat(originalMessage.ts, \" as the first unread\"));\n    return Subscriptions.setAsUnreadByRoomIdAndUserId(originalMessage.rid, userId, originalMessage.ts);\n  }\n\n});","map":{"version":3,"sources":["app/message-mark-as-unread/server/unreadMessages.js"],"names":["Meteor","module","link","v","logger","default","Messages","Subscriptions","methods","unreadMessages","firstUnreadMessage","room","userId","Error","method","lastMessage","findVisibleByRoomId","limit","sort","ts","fetch","action","setAsUnreadByRoomIdAndUserId","rid","_id","originalMessage","findOneById","fields","u","file","lastSeen","findOneByRoomIdAndUserId","ls","debug"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport logger from './logger';\nimport { Messages, Subscriptions } from '../../models';\n\nMeteor.methods({\n\tunreadMessages(firstUnreadMessage, room) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t});\n\t\t}\n\n\t\tif (room && typeof room === 'string') {\n\t\t\tconst lastMessage = Messages.findVisibleByRoomId(room, {\n\t\t\t\tlimit: 1,\n\t\t\t\tsort: { ts: -1 },\n\t\t\t}).fetch()[0];\n\n\t\t\tif (lastMessage == null) {\n\t\t\t\tthrow new Meteor.Error('error-no-message-for-unread', 'There are no messages to mark unread', {\n\t\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\t\taction: 'Unread_messages',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Subscriptions.setAsUnreadByRoomIdAndUserId(lastMessage.rid, userId, lastMessage.ts);\n\t\t}\n\n\t\tif (typeof firstUnreadMessage?._id !== 'string') {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\n\t\tconst originalMessage = Messages.findOneById(firstUnreadMessage._id, {\n\t\t\tfields: {\n\t\t\t\tu: 1,\n\t\t\t\trid: 1,\n\t\t\t\tfile: 1,\n\t\t\t\tts: 1,\n\t\t\t},\n\t\t});\n\t\tif (originalMessage == null || userId === originalMessage.u._id) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'unreadMessages',\n\t\t\t\taction: 'Unread_messages',\n\t\t\t});\n\t\t}\n\t\tconst lastSeen = Subscriptions.findOneByRoomIdAndUserId(originalMessage.rid, userId).ls;\n\t\tif (firstUnreadMessage.ts >= lastSeen) {\n\t\t\treturn logger.debug('Provided message is already marked as unread');\n\t\t}\n\t\tlogger.debug(`Updating unread  message of ${originalMessage.ts} as the first unread`);\n\t\treturn Subscriptions.setAsUnreadByRoomIdAndUserId(originalMessage.rid, userId, originalMessage.ts);\n\t},\n});\n"]},"sourceType":"module","hash":"80d2b43c2116c9b8fc9c84a98266ad99436c5f9e"}

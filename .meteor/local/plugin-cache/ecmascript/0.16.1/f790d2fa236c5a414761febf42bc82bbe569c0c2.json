{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/lib/roomTypes/direct.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/lib/lib/roomTypes/direct.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/lib/roomTypes/direct.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/lib/roomTypes/direct.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/lib/roomTypes/direct.js"}},"code":"module.export({\n  DirectMessageRoomRoute: () => DirectMessageRoomRoute,\n  DirectMessageRoomType: () => DirectMessageRoomType\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 1);\nlet ChatRoom, Subscriptions;\nmodule.link(\"../../../models\", {\n  ChatRoom(v) {\n    ChatRoom = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 2);\nlet openRoom;\nmodule.link(\"../../../ui-utils\", {\n  openRoom(v) {\n    openRoom = v;\n  }\n\n}, 3);\nlet getUserPreference, RoomTypeConfig, RoomTypeRouteConfig, RoomSettingsEnum, RoomMemberActions, UiTextContext;\nmodule.link(\"../../../utils\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  },\n\n  RoomTypeConfig(v) {\n    RoomTypeConfig = v;\n  },\n\n  RoomTypeRouteConfig(v) {\n    RoomTypeRouteConfig = v;\n  },\n\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  },\n\n  UiTextContext(v) {\n    UiTextContext = v;\n  }\n\n}, 4);\nlet hasPermission, hasAtLeastOnePermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet getUserAvatarURL;\nmodule.link(\"../../../utils/lib/getUserAvatarURL\", {\n  getUserAvatarURL(v) {\n    getUserAvatarURL = v;\n  }\n\n}, 7);\nlet getAvatarURL;\nmodule.link(\"../../../utils/lib/getAvatarURL\", {\n  getAvatarURL(v) {\n    getAvatarURL = v;\n  }\n\n}, 8);\n\nclass DirectMessageRoomRoute extends RoomTypeRouteConfig {\n  constructor() {\n    super({\n      name: 'direct',\n      path: '/direct/:rid/:tab?/:context?'\n    });\n  }\n\n  action(params) {\n    return openRoom('d', params.rid);\n  }\n\n  link(sub) {\n    return {\n      rid: sub.rid || sub.name\n    };\n  }\n\n}\n\nclass DirectMessageRoomType extends RoomTypeConfig {\n  constructor() {\n    super({\n      identifier: 'd',\n      order: 50,\n      icon: 'at',\n      label: 'Direct_Messages',\n      route: new DirectMessageRoomRoute()\n    });\n  }\n\n  getIcon(roomData) {\n    if (this.isGroupChat(roomData)) {\n      return 'balloon';\n    }\n\n    return this.icon;\n  }\n\n  findRoom(identifier) {\n    if (!hasPermission('view-d-room')) {\n      return null;\n    }\n\n    const query = {\n      t: 'd',\n      $or: [{\n        name: identifier\n      }, {\n        rid: identifier\n      }]\n    };\n    const subscription = Subscriptions.findOne(query);\n\n    if (subscription && subscription.rid) {\n      return ChatRoom.findOne(subscription.rid);\n    }\n  }\n\n  roomName(roomData) {\n    // this function can receive different types of data\n    // if it doesn't have fname and name properties, should be a Room object\n    // so, need to find the related subscription\n    const subscription = roomData && (roomData.fname || roomData.name) ? roomData : Subscriptions.findOne({\n      rid: roomData._id\n    });\n\n    if (subscription === undefined) {\n      return;\n    }\n\n    if (settings.get('UI_Use_Real_Name') && subscription.fname) {\n      return subscription.fname;\n    }\n\n    return subscription.name;\n  }\n\n  secondaryRoomName(roomData) {\n    if (settings.get('UI_Use_Real_Name')) {\n      const subscription = Subscriptions.findOne({\n        rid: roomData._id\n      }, {\n        fields: {\n          name: 1\n        }\n      });\n      return subscription && subscription.name;\n    }\n  }\n\n  condition() {\n    const groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n    return groupByType && hasAtLeastOnePermission(['view-d-room', 'view-joined-room']);\n  }\n\n  getUserStatus(roomId) {\n    const subscription = Subscriptions.findOne({\n      rid: roomId\n    });\n\n    if (subscription == null) {\n      return;\n    }\n\n    return Session.get(\"user_\".concat(subscription.name, \"_status\"));\n  }\n\n  getUserStatusText(roomId) {\n    const subscription = Subscriptions.findOne({\n      rid: roomId\n    });\n\n    if (subscription == null) {\n      return;\n    }\n\n    return Session.get(\"user_\".concat(subscription.name, \"_status_text\"));\n  }\n\n  allowRoomSettingChange(room, setting) {\n    switch (setting) {\n      case RoomSettingsEnum.TYPE:\n      case RoomSettingsEnum.NAME:\n      case RoomSettingsEnum.SYSTEM_MESSAGES:\n      case RoomSettingsEnum.DESCRIPTION:\n      case RoomSettingsEnum.READ_ONLY:\n      case RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n      case RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n      case RoomSettingsEnum.JOIN_CODE:\n        return false;\n\n      case RoomSettingsEnum.E2E:\n        return settings.get('E2E_Enable') === true;\n\n      default:\n        return true;\n    }\n  }\n\n  allowMemberAction(room, action) {\n    switch (action) {\n      case RoomMemberActions.BLOCK:\n        return !this.isGroupChat(room);\n\n      default:\n        return false;\n    }\n  }\n\n  enableMembersListProfile() {\n    return true;\n  }\n\n  userDetailShowAll() {\n    return true;\n  }\n\n  getUiText(context) {\n    switch (context) {\n      case UiTextContext.HIDE_WARNING:\n        return 'Hide_Private_Warning';\n\n      case UiTextContext.LEAVE_WARNING:\n        return 'Leave_Private_Warning';\n\n      default:\n        return '';\n    }\n  }\n  /**\n   * Returns details to use on notifications\n   *\n   * @param {object} room\n   * @param {object} user\n   * @param {string} notificationMessage\n   * @return {object} Notification details\n   */\n\n\n  getNotificationDetails(room, user, notificationMessage) {\n    if (!Meteor.isServer) {\n      return {};\n    }\n\n    if (this.isGroupChat(room)) {\n      return {\n        title: this.roomName(room),\n        text: \"\".concat(settings.get('UI_Use_Real_Name') && user.name || user.username, \": \").concat(notificationMessage)\n      };\n    }\n\n    return {\n      title: settings.get('UI_Use_Real_Name') && user.name || user.username,\n      text: notificationMessage\n    };\n  }\n\n  getAvatarPath(roomData, subData) {\n    if (!roomData && !subData) {\n      return '';\n    } // if coming from sidenav search\n\n\n    if (roomData.name && roomData.avatarETag) {\n      return getUserAvatarURL(roomData.name, roomData.avatarETag);\n    }\n\n    if (this.isGroupChat(roomData)) {\n      return getAvatarURL({\n        username: roomData.uids.length + roomData.usernames.join()\n      });\n    }\n\n    const sub = subData || Subscriptions.findOne({\n      rid: roomData._id\n    }, {\n      fields: {\n        name: 1\n      }\n    });\n\n    if (sub && sub.name) {\n      const user = Meteor.users.findOne({\n        username: sub.name\n      }, {\n        fields: {\n          username: 1,\n          avatarETag: 1\n        }\n      });\n      return getUserAvatarURL((user === null || user === void 0 ? void 0 : user.username) || sub.name, user === null || user === void 0 ? void 0 : user.avatarETag);\n    }\n\n    if (roomData) {\n      return getUserAvatarURL(roomData.name || this.roomName(roomData)); // rooms should have no name for direct messages...\n    }\n  }\n\n  includeInDashboard() {\n    return true;\n  }\n\n  isGroupChat(room) {\n    return room && room.uids && room.uids.length > 2;\n  }\n\n}","map":{"version":3,"sources":["app/lib/lib/roomTypes/direct.js"],"names":["module","export","DirectMessageRoomRoute","DirectMessageRoomType","Meteor","link","v","Session","ChatRoom","Subscriptions","openRoom","getUserPreference","RoomTypeConfig","RoomTypeRouteConfig","RoomSettingsEnum","RoomMemberActions","UiTextContext","hasPermission","hasAtLeastOnePermission","settings","getUserAvatarURL","getAvatarURL","constructor","name","path","action","params","rid","sub","identifier","order","icon","label","route","getIcon","roomData","isGroupChat","findRoom","query","t","$or","subscription","findOne","roomName","fname","_id","undefined","get","secondaryRoomName","fields","condition","groupByType","userId","getUserStatus","roomId","getUserStatusText","allowRoomSettingChange","room","setting","TYPE","NAME","SYSTEM_MESSAGES","DESCRIPTION","READ_ONLY","REACT_WHEN_READ_ONLY","ARCHIVE_OR_UNARCHIVE","JOIN_CODE","E2E","allowMemberAction","BLOCK","enableMembersListProfile","userDetailShowAll","getUiText","context","HIDE_WARNING","LEAVE_WARNING","getNotificationDetails","user","notificationMessage","isServer","title","text","username","getAvatarPath","subData","avatarETag","uids","length","usernames","join","users","includeInDashboard"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,sBAAsB,EAAC,MAAIA,sBAA5B;AAAmDC,EAAAA,qBAAqB,EAAC,MAAIA;AAA7E,CAAd;AAAmH,IAAIC,MAAJ;AAAWJ,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAM,CAACE,CAAD,EAAG;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,OAAJ;AAAYP,MAAM,CAACK,IAAP,CAAY,gBAAZ,EAA6B;AAACE,EAAAA,OAAO,CAACD,CAAD,EAAG;AAACC,IAAAA,OAAO,GAACD,CAAR;AAAU;;AAAtB,CAA7B,EAAqD,CAArD;AAAwD,IAAIE,QAAJ,EAAaC,aAAb;AAA2BT,MAAM,CAACK,IAAP,CAAY,iBAAZ,EAA8B;AAACG,EAAAA,QAAQ,CAACF,CAAD,EAAG;AAACE,IAAAA,QAAQ,GAACF,CAAT;AAAW,GAAxB;;AAAyBG,EAAAA,aAAa,CAACH,CAAD,EAAG;AAACG,IAAAA,aAAa,GAACH,CAAd;AAAgB;;AAA1D,CAA9B,EAA0F,CAA1F;AAA6F,IAAII,QAAJ;AAAaV,MAAM,CAACK,IAAP,CAAY,mBAAZ,EAAgC;AAACK,EAAAA,QAAQ,CAACJ,CAAD,EAAG;AAACI,IAAAA,QAAQ,GAACJ,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIK,iBAAJ,EAAsBC,cAAtB,EAAqCC,mBAArC,EAAyDC,gBAAzD,EAA0EC,iBAA1E,EAA4FC,aAA5F;AAA0GhB,MAAM,CAACK,IAAP,CAAY,gBAAZ,EAA6B;AAACM,EAAAA,iBAAiB,CAACL,CAAD,EAAG;AAACK,IAAAA,iBAAiB,GAACL,CAAlB;AAAoB,GAA1C;;AAA2CM,EAAAA,cAAc,CAACN,CAAD,EAAG;AAACM,IAAAA,cAAc,GAACN,CAAf;AAAiB,GAA9E;;AAA+EO,EAAAA,mBAAmB,CAACP,CAAD,EAAG;AAACO,IAAAA,mBAAmB,GAACP,CAApB;AAAsB,GAA5H;;AAA6HQ,EAAAA,gBAAgB,CAACR,CAAD,EAAG;AAACQ,IAAAA,gBAAgB,GAACR,CAAjB;AAAmB,GAApK;;AAAqKS,EAAAA,iBAAiB,CAACT,CAAD,EAAG;AAACS,IAAAA,iBAAiB,GAACT,CAAlB;AAAoB,GAA9M;;AAA+MU,EAAAA,aAAa,CAACV,CAAD,EAAG;AAACU,IAAAA,aAAa,GAACV,CAAd;AAAgB;;AAAhP,CAA7B,EAA+Q,CAA/Q;AAAkR,IAAIW,aAAJ,EAAkBC,uBAAlB;AAA0ClB,MAAM,CAACK,IAAP,CAAY,wBAAZ,EAAqC;AAACY,EAAAA,aAAa,CAACX,CAAD,EAAG;AAACW,IAAAA,aAAa,GAACX,CAAd;AAAgB,GAAlC;;AAAmCY,EAAAA,uBAAuB,CAACZ,CAAD,EAAG;AAACY,IAAAA,uBAAuB,GAACZ,CAAxB;AAA0B;;AAAxF,CAArC,EAA+H,CAA/H;AAAkI,IAAIa,QAAJ;AAAanB,MAAM,CAACK,IAAP,CAAY,mBAAZ,EAAgC;AAACc,EAAAA,QAAQ,CAACb,CAAD,EAAG;AAACa,IAAAA,QAAQ,GAACb,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIc,gBAAJ;AAAqBpB,MAAM,CAACK,IAAP,CAAY,qCAAZ,EAAkD;AAACe,EAAAA,gBAAgB,CAACd,CAAD,EAAG;AAACc,IAAAA,gBAAgB,GAACd,CAAjB;AAAmB;;AAAxC,CAAlD,EAA4F,CAA5F;AAA+F,IAAIe,YAAJ;AAAiBrB,MAAM,CAACK,IAAP,CAAY,iCAAZ,EAA8C;AAACgB,EAAAA,YAAY,CAACf,CAAD,EAAG;AAACe,IAAAA,YAAY,GAACf,CAAb;AAAe;;AAAhC,CAA9C,EAAgF,CAAhF;;AAWzqC,MAAMJ,sBAAN,SAAqCW,mBAArC,CAAyD;AAC/DS,EAAAA,WAAW,GAAG;AACb,UAAM;AACLC,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAN;AAIA;;AAEDC,EAAAA,MAAM,CAACC,MAAD,EAAS;AACd,WAAOhB,QAAQ,CAAC,GAAD,EAAMgB,MAAM,CAACC,GAAb,CAAf;AACA;;AAEDtB,EAAAA,IAAI,CAACuB,GAAD,EAAM;AACT,WAAO;AAAED,MAAAA,GAAG,EAAEC,GAAG,CAACD,GAAJ,IAAWC,GAAG,CAACL;AAAtB,KAAP;AACA;;AAd8D;;AAiBzD,MAAMpB,qBAAN,SAAoCS,cAApC,CAAmD;AACzDU,EAAAA,WAAW,GAAG;AACb,UAAM;AACLO,MAAAA,UAAU,EAAE,GADP;AAELC,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,IAAI,EAAE,IAHD;AAILC,MAAAA,KAAK,EAAE,iBAJF;AAKLC,MAAAA,KAAK,EAAE,IAAI/B,sBAAJ;AALF,KAAN;AAOA;;AAEDgC,EAAAA,OAAO,CAACC,QAAD,EAAW;AACjB,QAAI,KAAKC,WAAL,CAAiBD,QAAjB,CAAJ,EAAgC;AAC/B,aAAO,SAAP;AACA;;AACD,WAAO,KAAKJ,IAAZ;AACA;;AAEDM,EAAAA,QAAQ,CAACR,UAAD,EAAa;AACpB,QAAI,CAACZ,aAAa,CAAC,aAAD,CAAlB,EAAmC;AAClC,aAAO,IAAP;AACA;;AAED,UAAMqB,KAAK,GAAG;AACbC,MAAAA,CAAC,EAAE,GADU;AAEbC,MAAAA,GAAG,EAAE,CAAC;AAAEjB,QAAAA,IAAI,EAAEM;AAAR,OAAD,EAAuB;AAAEF,QAAAA,GAAG,EAAEE;AAAP,OAAvB;AAFQ,KAAd;AAKA,UAAMY,YAAY,GAAGhC,aAAa,CAACiC,OAAd,CAAsBJ,KAAtB,CAArB;;AACA,QAAIG,YAAY,IAAIA,YAAY,CAACd,GAAjC,EAAsC;AACrC,aAAOnB,QAAQ,CAACkC,OAAT,CAAiBD,YAAY,CAACd,GAA9B,CAAP;AACA;AACD;;AAEDgB,EAAAA,QAAQ,CAACR,QAAD,EAAW;AAClB;AACA;AACA;AACA,UAAMM,YAAY,GAAGN,QAAQ,KAAKA,QAAQ,CAACS,KAAT,IAAkBT,QAAQ,CAACZ,IAAhC,CAAR,GAAgDY,QAAhD,GAA2D1B,aAAa,CAACiC,OAAd,CAAsB;AAAEf,MAAAA,GAAG,EAAEQ,QAAQ,CAACU;AAAhB,KAAtB,CAAhF;;AAEA,QAAIJ,YAAY,KAAKK,SAArB,EAAgC;AAC/B;AACA;;AAED,QAAI3B,QAAQ,CAAC4B,GAAT,CAAa,kBAAb,KAAoCN,YAAY,CAACG,KAArD,EAA4D;AAC3D,aAAOH,YAAY,CAACG,KAApB;AACA;;AAED,WAAOH,YAAY,CAAClB,IAApB;AACA;;AAEDyB,EAAAA,iBAAiB,CAACb,QAAD,EAAW;AAC3B,QAAIhB,QAAQ,CAAC4B,GAAT,CAAa,kBAAb,CAAJ,EAAsC;AACrC,YAAMN,YAAY,GAAGhC,aAAa,CAACiC,OAAd,CAAsB;AAAEf,QAAAA,GAAG,EAAEQ,QAAQ,CAACU;AAAhB,OAAtB,EAA6C;AAAEI,QAAAA,MAAM,EAAE;AAAE1B,UAAAA,IAAI,EAAE;AAAR;AAAV,OAA7C,CAArB;AACA,aAAOkB,YAAY,IAAIA,YAAY,CAAClB,IAApC;AACA;AACD;;AAED2B,EAAAA,SAAS,GAAG;AACX,UAAMC,WAAW,GAAGxC,iBAAiB,CAACP,MAAM,CAACgD,MAAP,EAAD,EAAkB,oBAAlB,CAArC;AACA,WAAOD,WAAW,IAAIjC,uBAAuB,CAAC,CAAC,aAAD,EAAgB,kBAAhB,CAAD,CAA7C;AACA;;AAEDmC,EAAAA,aAAa,CAACC,MAAD,EAAS;AACrB,UAAMb,YAAY,GAAGhC,aAAa,CAACiC,OAAd,CAAsB;AAAEf,MAAAA,GAAG,EAAE2B;AAAP,KAAtB,CAArB;;AACA,QAAIb,YAAY,IAAI,IAApB,EAA0B;AACzB;AACA;;AAED,WAAOlC,OAAO,CAACwC,GAAR,gBAAoBN,YAAY,CAAClB,IAAjC,aAAP;AACA;;AAEDgC,EAAAA,iBAAiB,CAACD,MAAD,EAAS;AACzB,UAAMb,YAAY,GAAGhC,aAAa,CAACiC,OAAd,CAAsB;AAAEf,MAAAA,GAAG,EAAE2B;AAAP,KAAtB,CAArB;;AACA,QAAIb,YAAY,IAAI,IAApB,EAA0B;AACzB;AACA;;AAED,WAAOlC,OAAO,CAACwC,GAAR,gBAAoBN,YAAY,CAAClB,IAAjC,kBAAP;AACA;;AAEDiC,EAAAA,sBAAsB,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACrC,YAAQA,OAAR;AACC,WAAK5C,gBAAgB,CAAC6C,IAAtB;AACA,WAAK7C,gBAAgB,CAAC8C,IAAtB;AACA,WAAK9C,gBAAgB,CAAC+C,eAAtB;AACA,WAAK/C,gBAAgB,CAACgD,WAAtB;AACA,WAAKhD,gBAAgB,CAACiD,SAAtB;AACA,WAAKjD,gBAAgB,CAACkD,oBAAtB;AACA,WAAKlD,gBAAgB,CAACmD,oBAAtB;AACA,WAAKnD,gBAAgB,CAACoD,SAAtB;AACC,eAAO,KAAP;;AACD,WAAKpD,gBAAgB,CAACqD,GAAtB;AACC,eAAOhD,QAAQ,CAAC4B,GAAT,CAAa,YAAb,MAA+B,IAAtC;;AACD;AACC,eAAO,IAAP;AAbF;AAeA;;AAEDqB,EAAAA,iBAAiB,CAACX,IAAD,EAAOhC,MAAP,EAAe;AAC/B,YAAQA,MAAR;AACC,WAAKV,iBAAiB,CAACsD,KAAvB;AACC,eAAO,CAAC,KAAKjC,WAAL,CAAiBqB,IAAjB,CAAR;;AACD;AACC,eAAO,KAAP;AAJF;AAMA;;AAEDa,EAAAA,wBAAwB,GAAG;AAC1B,WAAO,IAAP;AACA;;AAEDC,EAAAA,iBAAiB,GAAa;AAC7B,WAAO,IAAP;AACA;;AAEDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,YAAQA,OAAR;AACC,WAAKzD,aAAa,CAAC0D,YAAnB;AACC,eAAO,sBAAP;;AACD,WAAK1D,aAAa,CAAC2D,aAAnB;AACC,eAAO,uBAAP;;AACD;AACC,eAAO,EAAP;AANF;AAQA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,sBAAsB,CAACnB,IAAD,EAAOoB,IAAP,EAAaC,mBAAb,EAAkC;AACvD,QAAI,CAAC1E,MAAM,CAAC2E,QAAZ,EAAsB;AACrB,aAAO,EAAP;AACA;;AAED,QAAI,KAAK3C,WAAL,CAAiBqB,IAAjB,CAAJ,EAA4B;AAC3B,aAAO;AACNuB,QAAAA,KAAK,EAAE,KAAKrC,QAAL,CAAcc,IAAd,CADD;AAENwB,QAAAA,IAAI,YAAM9D,QAAQ,CAAC4B,GAAT,CAAa,kBAAb,KAAoC8B,IAAI,CAACtD,IAA1C,IAAmDsD,IAAI,CAACK,QAA7D,eAA0EJ,mBAA1E;AAFE,OAAP;AAIA;;AAED,WAAO;AACNE,MAAAA,KAAK,EAAG7D,QAAQ,CAAC4B,GAAT,CAAa,kBAAb,KAAoC8B,IAAI,CAACtD,IAA1C,IAAmDsD,IAAI,CAACK,QADzD;AAEND,MAAAA,IAAI,EAAEH;AAFA,KAAP;AAIA;;AAEDK,EAAAA,aAAa,CAAChD,QAAD,EAAWiD,OAAX,EAAoB;AAChC,QAAI,CAACjD,QAAD,IAAa,CAACiD,OAAlB,EAA2B;AAC1B,aAAO,EAAP;AACA,KAH+B,CAKhC;;;AACA,QAAIjD,QAAQ,CAACZ,IAAT,IAAiBY,QAAQ,CAACkD,UAA9B,EAA0C;AACzC,aAAOjE,gBAAgB,CAACe,QAAQ,CAACZ,IAAV,EAAgBY,QAAQ,CAACkD,UAAzB,CAAvB;AACA;;AAED,QAAI,KAAKjD,WAAL,CAAiBD,QAAjB,CAAJ,EAAgC;AAC/B,aAAOd,YAAY,CAAC;AAAE6D,QAAAA,QAAQ,EAAE/C,QAAQ,CAACmD,IAAT,CAAcC,MAAd,GAAuBpD,QAAQ,CAACqD,SAAT,CAAmBC,IAAnB;AAAnC,OAAD,CAAnB;AACA;;AAED,UAAM7D,GAAG,GAAGwD,OAAO,IAAI3E,aAAa,CAACiC,OAAd,CAAsB;AAAEf,MAAAA,GAAG,EAAEQ,QAAQ,CAACU;AAAhB,KAAtB,EAA6C;AAAEI,MAAAA,MAAM,EAAE;AAAE1B,QAAAA,IAAI,EAAE;AAAR;AAAV,KAA7C,CAAvB;;AAEA,QAAIK,GAAG,IAAIA,GAAG,CAACL,IAAf,EAAqB;AACpB,YAAMsD,IAAI,GAAGzE,MAAM,CAACsF,KAAP,CAAahD,OAAb,CAAqB;AAAEwC,QAAAA,QAAQ,EAAEtD,GAAG,CAACL;AAAhB,OAArB,EAA6C;AAAE0B,QAAAA,MAAM,EAAE;AAAEiC,UAAAA,QAAQ,EAAE,CAAZ;AAAeG,UAAAA,UAAU,EAAE;AAA3B;AAAV,OAA7C,CAAb;AACA,aAAOjE,gBAAgB,CAAC,CAAAyD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEK,QAAN,KAAkBtD,GAAG,CAACL,IAAvB,EAA6BsD,IAA7B,aAA6BA,IAA7B,uBAA6BA,IAAI,CAAEQ,UAAnC,CAAvB;AACA;;AAED,QAAIlD,QAAJ,EAAc;AACb,aAAOf,gBAAgB,CAACe,QAAQ,CAACZ,IAAT,IAAiB,KAAKoB,QAAL,CAAcR,QAAd,CAAlB,CAAvB,CADa,CACsD;AACnE;AACD;;AAEDwD,EAAAA,kBAAkB,GAAG;AACpB,WAAO,IAAP;AACA;;AAEDvD,EAAAA,WAAW,CAACqB,IAAD,EAAO;AACjB,WAAOA,IAAI,IAAIA,IAAI,CAAC6B,IAAb,IAAqB7B,IAAI,CAAC6B,IAAL,CAAUC,MAAV,GAAmB,CAA/C;AACA;;AAzLwD","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\n\nimport { ChatRoom, Subscriptions } from '../../../models';\nimport { openRoom } from '../../../ui-utils';\nimport { getUserPreference, RoomTypeConfig, RoomTypeRouteConfig, RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../utils';\nimport { hasPermission, hasAtLeastOnePermission } from '../../../authorization';\nimport { settings } from '../../../settings';\nimport { getUserAvatarURL } from '../../../utils/lib/getUserAvatarURL';\nimport { getAvatarURL } from '../../../utils/lib/getAvatarURL';\n\nexport class DirectMessageRoomRoute extends RoomTypeRouteConfig {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'direct',\n\t\t\tpath: '/direct/:rid/:tab?/:context?',\n\t\t});\n\t}\n\n\taction(params) {\n\t\treturn openRoom('d', params.rid);\n\t}\n\n\tlink(sub) {\n\t\treturn { rid: sub.rid || sub.name };\n\t}\n}\n\nexport class DirectMessageRoomType extends RoomTypeConfig {\n\tconstructor() {\n\t\tsuper({\n\t\t\tidentifier: 'd',\n\t\t\torder: 50,\n\t\t\ticon: 'at',\n\t\t\tlabel: 'Direct_Messages',\n\t\t\troute: new DirectMessageRoomRoute(),\n\t\t});\n\t}\n\n\tgetIcon(roomData) {\n\t\tif (this.isGroupChat(roomData)) {\n\t\t\treturn 'balloon';\n\t\t}\n\t\treturn this.icon;\n\t}\n\n\tfindRoom(identifier) {\n\t\tif (!hasPermission('view-d-room')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst query = {\n\t\t\tt: 'd',\n\t\t\t$or: [{ name: identifier }, { rid: identifier }],\n\t\t};\n\n\t\tconst subscription = Subscriptions.findOne(query);\n\t\tif (subscription && subscription.rid) {\n\t\t\treturn ChatRoom.findOne(subscription.rid);\n\t\t}\n\t}\n\n\troomName(roomData) {\n\t\t// this function can receive different types of data\n\t\t// if it doesn't have fname and name properties, should be a Room object\n\t\t// so, need to find the related subscription\n\t\tconst subscription = roomData && (roomData.fname || roomData.name) ? roomData : Subscriptions.findOne({ rid: roomData._id });\n\n\t\tif (subscription === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (settings.get('UI_Use_Real_Name') && subscription.fname) {\n\t\t\treturn subscription.fname;\n\t\t}\n\n\t\treturn subscription.name;\n\t}\n\n\tsecondaryRoomName(roomData) {\n\t\tif (settings.get('UI_Use_Real_Name')) {\n\t\t\tconst subscription = Subscriptions.findOne({ rid: roomData._id }, { fields: { name: 1 } });\n\t\t\treturn subscription && subscription.name;\n\t\t}\n\t}\n\n\tcondition() {\n\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\treturn groupByType && hasAtLeastOnePermission(['view-d-room', 'view-joined-room']);\n\t}\n\n\tgetUserStatus(roomId) {\n\t\tconst subscription = Subscriptions.findOne({ rid: roomId });\n\t\tif (subscription == null) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn Session.get(`user_${subscription.name}_status`);\n\t}\n\n\tgetUserStatusText(roomId) {\n\t\tconst subscription = Subscriptions.findOne({ rid: roomId });\n\t\tif (subscription == null) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn Session.get(`user_${subscription.name}_status_text`);\n\t}\n\n\tallowRoomSettingChange(room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.TYPE:\n\t\t\tcase RoomSettingsEnum.NAME:\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tcase RoomSettingsEnum.DESCRIPTION:\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\tallowMemberAction(room, action) {\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn !this.isGroupChat(room);\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tenableMembersListProfile() {\n\t\treturn true;\n\t}\n\n\tuserDetailShowAll(/* room */) {\n\t\treturn true;\n\t}\n\n\tgetUiText(context) {\n\t\tswitch (context) {\n\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\treturn 'Hide_Private_Warning';\n\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\treturn 'Leave_Private_Warning';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Returns details to use on notifications\n\t *\n\t * @param {object} room\n\t * @param {object} user\n\t * @param {string} notificationMessage\n\t * @return {object} Notification details\n\t */\n\tgetNotificationDetails(room, user, notificationMessage) {\n\t\tif (!Meteor.isServer) {\n\t\t\treturn {};\n\t\t}\n\n\t\tif (this.isGroupChat(room)) {\n\t\t\treturn {\n\t\t\t\ttitle: this.roomName(room),\n\t\t\t\ttext: `${(settings.get('UI_Use_Real_Name') && user.name) || user.username}: ${notificationMessage}`,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttitle: (settings.get('UI_Use_Real_Name') && user.name) || user.username,\n\t\t\ttext: notificationMessage,\n\t\t};\n\t}\n\n\tgetAvatarPath(roomData, subData) {\n\t\tif (!roomData && !subData) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// if coming from sidenav search\n\t\tif (roomData.name && roomData.avatarETag) {\n\t\t\treturn getUserAvatarURL(roomData.name, roomData.avatarETag);\n\t\t}\n\n\t\tif (this.isGroupChat(roomData)) {\n\t\t\treturn getAvatarURL({ username: roomData.uids.length + roomData.usernames.join() });\n\t\t}\n\n\t\tconst sub = subData || Subscriptions.findOne({ rid: roomData._id }, { fields: { name: 1 } });\n\n\t\tif (sub && sub.name) {\n\t\t\tconst user = Meteor.users.findOne({ username: sub.name }, { fields: { username: 1, avatarETag: 1 } });\n\t\t\treturn getUserAvatarURL(user?.username || sub.name, user?.avatarETag);\n\t\t}\n\n\t\tif (roomData) {\n\t\t\treturn getUserAvatarURL(roomData.name || this.roomName(roomData)); // rooms should have no name for direct messages...\n\t\t}\n\t}\n\n\tincludeInDashboard() {\n\t\treturn true;\n\t}\n\n\tisGroupChat(room) {\n\t\treturn room && room.uids && room.uids.length > 2;\n\t}\n}\n"]},"sourceType":"module","hash":"f790d2fa236c5a414761febf42bc82bbe569c0c2"}

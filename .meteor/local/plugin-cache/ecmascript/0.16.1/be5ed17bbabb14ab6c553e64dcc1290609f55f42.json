{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/otr/client/rocketchat.otr.room.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/otr/client/rocketchat.otr.room.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/otr/client/rocketchat.otr.room.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/otr/client/rocketchat.otr.room.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/otr/client/rocketchat.otr.room.js"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 1);\nvar Random;\nmodule.link(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 2);\nvar EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 3);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 4);\nvar TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n: function (v) {\n    TAPi18n = v;\n  }\n}, 5);\nvar TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync: function (v) {\n    TimeSync = v;\n  }\n}, 6);\n\nvar _;\n\nmodule.link(\"underscore\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 7);\nvar OTR;\nmodule.link(\"./rocketchat.otr\", {\n  OTR: function (v) {\n    OTR = v;\n  }\n}, 8);\nvar Notifications;\nmodule.link(\"../../notifications\", {\n  Notifications: function (v) {\n    Notifications = v;\n  }\n}, 9);\nvar getUidDirectMessage;\nmodule.link(\"../../../client/lib/utils/getUidDirectMessage\", {\n  getUidDirectMessage: function (v) {\n    getUidDirectMessage = v;\n  }\n}, 10);\nvar Presence;\nmodule.link(\"../../../client/lib/presence\", {\n  Presence: function (v) {\n    Presence = v;\n  }\n}, 11);\nvar goToRoomById;\nmodule.link(\"../../../client/lib/utils/goToRoomById\", {\n  goToRoomById: function (v) {\n    goToRoomById = v;\n  }\n}, 12);\nvar imperativeModal;\nmodule.link(\"../../../client/lib/imperativeModal\", {\n  imperativeModal: function (v) {\n    imperativeModal = v;\n  }\n}, 13);\nvar GenericModal;\nmodule.link(\"../../../client/components/GenericModal\", {\n  \"default\": function (v) {\n    GenericModal = v;\n  }\n}, 14);\nvar dispatchToastMessage;\nmodule.link(\"../../../client/lib/toast\", {\n  dispatchToastMessage: function (v) {\n    dispatchToastMessage = v;\n  }\n}, 15);\n\nOTR.Room = /*#__PURE__*/function () {\n  function _class(userId, roomId) {\n    this.userId = userId;\n    this.roomId = roomId;\n    this.peerId = getUidDirectMessage(roomId);\n    this.established = new ReactiveVar(false);\n    this.establishing = new ReactiveVar(false);\n    this.userOnlineComputation = null;\n    this.keyPair = null;\n    this.exportedPublicKey = null;\n    this.sessionKey = null;\n  }\n\n  var _proto = _class.prototype;\n\n  _proto.handshake = function () {\n    function handshake(refresh) {\n      var _this = this;\n\n      this.establishing.set(true);\n      this.firstPeer = true;\n      this.generateKeyPair().then(function () {\n        Notifications.notifyUser(_this.peerId, 'otr', 'handshake', {\n          roomId: _this.roomId,\n          userId: _this.userId,\n          publicKey: EJSON.stringify(_this.exportedPublicKey),\n          refresh: refresh\n        });\n      });\n    }\n\n    return handshake;\n  }();\n\n  _proto.acknowledge = function () {\n    function acknowledge() {\n      Notifications.notifyUser(this.peerId, 'otr', 'acknowledge', {\n        roomId: this.roomId,\n        userId: this.userId,\n        publicKey: EJSON.stringify(this.exportedPublicKey)\n      });\n    }\n\n    return acknowledge;\n  }();\n\n  _proto.deny = function () {\n    function deny() {\n      this.reset();\n      Notifications.notifyUser(this.peerId, 'otr', 'deny', {\n        roomId: this.roomId,\n        userId: this.userId\n      });\n    }\n\n    return deny;\n  }();\n\n  _proto.end = function () {\n    function end() {\n      this.reset();\n      Notifications.notifyUser(this.peerId, 'otr', 'end', {\n        roomId: this.roomId,\n        userId: this.userId\n      });\n    }\n\n    return end;\n  }();\n\n  _proto.reset = function () {\n    function reset() {\n      this.establishing.set(false);\n      this.established.set(false);\n      this.keyPair = null;\n      this.exportedPublicKey = null;\n      this.sessionKey = null;\n      Meteor.call('deleteOldOTRMessages', this.roomId);\n    }\n\n    return reset;\n  }();\n\n  _proto.generateKeyPair = function () {\n    function generateKeyPair() {\n      var _this2 = this;\n\n      if (this.userOnlineComputation) {\n        this.userOnlineComputation.stop();\n      }\n\n      this.userOnlineComputation = Tracker.autorun(function () {\n        var $room = $(\"#chat-window-\" + _this2.roomId);\n        var $title = $('.rc-header__title', $room);\n\n        if (_this2.established.get()) {\n          if ($room.length && $title.length && !$('.otr-icon', $title).length) {\n            $title.prepend(\"<i class='otr-icon icon-key'></i>\");\n          }\n        } else if ($title.length) {\n          $('.otr-icon', $title).remove();\n        }\n      }); // Generate an ephemeral key pair.\n\n      return OTR.crypto.generateKey({\n        name: 'ECDH',\n        namedCurve: 'P-256'\n      }, false, ['deriveKey', 'deriveBits']).then(function (keyPair) {\n        _this2.keyPair = keyPair;\n        return OTR.crypto.exportKey('jwk', keyPair.publicKey);\n      }).then(function (exportedPublicKey) {\n        _this2.exportedPublicKey = exportedPublicKey; // Once we have generated new keys, it's safe to delete old messages\n\n        Meteor.call('deleteOldOTRMessages', _this2.roomId);\n      }).catch(function (e) {\n        dispatchToastMessage({\n          type: 'error',\n          message: e\n        });\n      });\n    }\n\n    return generateKeyPair;\n  }();\n\n  _proto.importPublicKey = function () {\n    function importPublicKey(publicKey) {\n      var _this3 = this;\n\n      return OTR.crypto.importKey('jwk', EJSON.parse(publicKey), {\n        name: 'ECDH',\n        namedCurve: 'P-256'\n      }, false, []).then(function (peerPublicKey) {\n        return OTR.crypto.deriveBits({\n          name: 'ECDH',\n          namedCurve: 'P-256',\n          \"public\": peerPublicKey\n        }, _this3.keyPair.privateKey, 256);\n      }).then(function (bits) {\n        return OTR.crypto.digest({\n          name: 'SHA-256'\n        }, bits);\n      }).then(function (hashedBits) {\n        // We truncate the hash to 128 bits.\n        var sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\n        return OTR.crypto.importKey('raw', sessionKeyData, {\n          name: 'AES-GCM'\n        }, false, ['encrypt', 'decrypt']);\n      }).then(function (sessionKey) {\n        // Session key available.\n        _this3.sessionKey = sessionKey;\n      });\n    }\n\n    return importPublicKey;\n  }();\n\n  _proto.encryptText = function () {\n    function encryptText(data) {\n      if (!_.isObject(data)) {\n        data = new TextEncoder('UTF-8').encode(EJSON.stringify({\n          text: data,\n          ack: Random.id((Random.fraction() + 1) * 20)\n        }));\n      }\n\n      var iv = crypto.getRandomValues(new Uint8Array(12));\n      return OTR.crypto.encrypt({\n        name: 'AES-GCM',\n        iv: iv\n      }, this.sessionKey, data).then(function (cipherText) {\n        cipherText = new Uint8Array(cipherText);\n        var output = new Uint8Array(iv.length + cipherText.length);\n        output.set(iv, 0);\n        output.set(cipherText, iv.length);\n        return EJSON.stringify(output);\n      }).catch(function () {\n        throw new Meteor.Error('encryption-error', 'Encryption error.');\n      });\n    }\n\n    return encryptText;\n  }();\n\n  _proto.encrypt = function () {\n    function encrypt(message) {\n      var ts;\n\n      if (isNaN(TimeSync.serverOffset())) {\n        ts = new Date();\n      } else {\n        ts = new Date(Date.now() + TimeSync.serverOffset());\n      }\n\n      var data = new TextEncoder('UTF-8').encode(EJSON.stringify({\n        _id: message._id,\n        text: message.msg,\n        userId: this.userId,\n        ack: Random.id((Random.fraction() + 1) * 20),\n        ts: ts\n      }));\n      var enc = this.encryptText(data);\n      return enc;\n    }\n\n    return encrypt;\n  }();\n\n  _proto.decrypt = function () {\n    function decrypt(message) {\n      var cipherText = EJSON.parse(message);\n      var iv = cipherText.slice(0, 12);\n      cipherText = cipherText.slice(12);\n      return OTR.crypto.decrypt({\n        name: 'AES-GCM',\n        iv: iv\n      }, this.sessionKey, cipherText).then(function (data) {\n        data = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\n        return data;\n      }).catch(function (e) {\n        dispatchToastMessage({\n          type: 'error',\n          message: e\n        });\n        return message;\n      });\n    }\n\n    return decrypt;\n  }();\n\n  _proto.onUserStream = function () {\n    function onUserStream(type, data) {\n      var _this4 = this;\n\n      switch (type) {\n        case 'handshake':\n          var timeout = null;\n\n          var establishConnection = function () {\n            _this4.establishing.set(true);\n\n            Meteor.clearTimeout(timeout);\n\n            _this4.generateKeyPair().then(function () {\n              _this4.importPublicKey(data.publicKey).then(function () {\n                _this4.firstPeer = false;\n                goToRoomById(data.roomId);\n                Meteor.defer(function () {\n                  _this4.established.set(true);\n\n                  _this4.acknowledge();\n                });\n              });\n            });\n          };\n\n          (function () {\n            function _callee() {\n              var _await$Presence$get, username;\n\n              return _regeneratorRuntime.async(function () {\n                function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(Presence.get(data.userId));\n\n                      case 2:\n                        _await$Presence$get = _context.sent;\n                        username = _await$Presence$get.username;\n\n                        if (data.refresh && _this4.established.get()) {\n                          _this4.reset();\n\n                          establishConnection();\n                        } else {\n                          if (_this4.established.get()) {\n                            _this4.reset();\n                          }\n\n                          imperativeModal.open({\n                            component: GenericModal,\n                            props: {\n                              variant: 'warning',\n                              title: TAPi18n.__('OTR'),\n                              children: TAPi18n.__('Username_wants_to_start_otr_Do_you_want_to_accept', {\n                                username: username\n                              }),\n                              confirmText: TAPi18n.__('Yes'),\n                              cancelText: TAPi18n.__('No'),\n                              onClose: function () {\n                                return imperativeModal.close;\n                              },\n                              onCancel: function () {\n                                Meteor.clearTimeout(timeout);\n\n                                _this4.deny();\n\n                                imperativeModal.close();\n                              },\n                              onConfirm: function () {\n                                establishConnection();\n                                imperativeModal.close();\n                              }\n                            }\n                          });\n                        }\n\n                        timeout = Meteor.setTimeout(function () {\n                          _this4.establishing.set(false);\n\n                          imperativeModal.close();\n                        }, 10000);\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }\n\n                return _callee$;\n              }(), null, null, null, Promise);\n            }\n\n            return _callee;\n          })()();\n          break;\n\n        case 'acknowledge':\n          this.importPublicKey(data.publicKey).then(function () {\n            _this4.established.set(true);\n          });\n          break;\n\n        case 'deny':\n          (function () {\n            function _callee2() {\n              var _await$Presence$get2, username;\n\n              return _regeneratorRuntime.async(function () {\n                function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _regeneratorRuntime.awrap(Presence.get(_this4.peerId));\n\n                      case 2:\n                        _await$Presence$get2 = _context2.sent;\n                        username = _await$Presence$get2.username;\n\n                        if (_this4.establishing.get()) {\n                          _this4.reset();\n\n                          imperativeModal.open({\n                            component: GenericModal,\n                            props: {\n                              variant: 'warning',\n                              title: TAPi18n.__('OTR'),\n                              children: TAPi18n.__('Username_denied_the_OTR_session', {\n                                username: username\n                              }),\n                              onClose: imperativeModal.close,\n                              onConfirm: imperativeModal.close\n                            }\n                          });\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }\n\n                return _callee2$;\n              }(), null, null, null, Promise);\n            }\n\n            return _callee2;\n          })()();\n          break;\n\n        case 'end':\n          (function () {\n            function _callee3() {\n              var _await$Presence$get3, username;\n\n              return _regeneratorRuntime.async(function () {\n                function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _regeneratorRuntime.awrap(Presence.get(_this4.peerId));\n\n                      case 2:\n                        _await$Presence$get3 = _context3.sent;\n                        username = _await$Presence$get3.username;\n\n                        if (_this4.established.get()) {\n                          _this4.reset();\n\n                          imperativeModal.open({\n                            component: GenericModal,\n                            props: {\n                              variant: 'warning',\n                              title: TAPi18n.__('OTR'),\n                              children: TAPi18n.__('Username_ended_the_OTR_session', {\n                                username: username\n                              }),\n                              confirmText: TAPi18n.__('Ok'),\n                              onClose: imperativeModal.close,\n                              onConfirm: imperativeModal.close\n                            }\n                          });\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }\n\n                return _callee3$;\n              }(), null, null, null, Promise);\n            }\n\n            return _callee3;\n          })()();\n          break;\n      }\n    }\n\n    return onUserStream;\n  }();\n\n  return _class;\n}();","map":{"version":3,"sources":["app/otr/client/rocketchat.otr.room.js"],"names":["_regeneratorRuntime","module","link","default","v","Meteor","ReactiveVar","Random","EJSON","Tracker","TAPi18n","TimeSync","_","OTR","Notifications","getUidDirectMessage","Presence","goToRoomById","imperativeModal","GenericModal","dispatchToastMessage","Room","userId","roomId","peerId","established","establishing","userOnlineComputation","keyPair","exportedPublicKey","sessionKey","handshake","refresh","set","firstPeer","generateKeyPair","then","notifyUser","publicKey","stringify","acknowledge","deny","reset","end","call","stop","autorun","$room","$","$title","get","length","prepend","remove","crypto","generateKey","name","namedCurve","exportKey","catch","e","type","message","importPublicKey","importKey","parse","peerPublicKey","deriveBits","privateKey","bits","digest","hashedBits","sessionKeyData","Uint8Array","slice","encryptText","data","isObject","TextEncoder","encode","text","ack","id","fraction","iv","getRandomValues","encrypt","cipherText","output","Error","ts","isNaN","serverOffset","Date","now","_id","msg","enc","decrypt","TextDecoder","decode","onUserStream","timeout","establishConnection","clearTimeout","defer","username","open","component","props","variant","title","__","children","confirmText","cancelText","onClose","close","onCancel","onConfirm","setTimeout"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Random } from 'meteor/random';\nimport { EJSON } from 'meteor/ejson';\nimport { Tracker } from 'meteor/tracker';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { TimeSync } from 'meteor/mizzao:timesync';\nimport _ from 'underscore';\n\nimport { OTR } from './rocketchat.otr';\nimport { Notifications } from '../../notifications';\nimport { getUidDirectMessage } from '../../../client/lib/utils/getUidDirectMessage';\nimport { Presence } from '../../../client/lib/presence';\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport GenericModal from '../../../client/components/GenericModal';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\n\nOTR.Room = class {\n\tconstructor(userId, roomId) {\n\t\tthis.userId = userId;\n\t\tthis.roomId = roomId;\n\t\tthis.peerId = getUidDirectMessage(roomId);\n\t\tthis.established = new ReactiveVar(false);\n\t\tthis.establishing = new ReactiveVar(false);\n\n\t\tthis.userOnlineComputation = null;\n\n\t\tthis.keyPair = null;\n\t\tthis.exportedPublicKey = null;\n\t\tthis.sessionKey = null;\n\t}\n\n\thandshake(refresh) {\n\t\tthis.establishing.set(true);\n\t\tthis.firstPeer = true;\n\t\tthis.generateKeyPair().then(() => {\n\t\t\tNotifications.notifyUser(this.peerId, 'otr', 'handshake', {\n\t\t\t\troomId: this.roomId,\n\t\t\t\tuserId: this.userId,\n\t\t\t\tpublicKey: EJSON.stringify(this.exportedPublicKey),\n\t\t\t\trefresh,\n\t\t\t});\n\t\t});\n\t}\n\n\tacknowledge() {\n\t\tNotifications.notifyUser(this.peerId, 'otr', 'acknowledge', {\n\t\t\troomId: this.roomId,\n\t\t\tuserId: this.userId,\n\t\t\tpublicKey: EJSON.stringify(this.exportedPublicKey),\n\t\t});\n\t}\n\n\tdeny() {\n\t\tthis.reset();\n\t\tNotifications.notifyUser(this.peerId, 'otr', 'deny', {\n\t\t\troomId: this.roomId,\n\t\t\tuserId: this.userId,\n\t\t});\n\t}\n\n\tend() {\n\t\tthis.reset();\n\t\tNotifications.notifyUser(this.peerId, 'otr', 'end', {\n\t\t\troomId: this.roomId,\n\t\t\tuserId: this.userId,\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.establishing.set(false);\n\t\tthis.established.set(false);\n\t\tthis.keyPair = null;\n\t\tthis.exportedPublicKey = null;\n\t\tthis.sessionKey = null;\n\t\tMeteor.call('deleteOldOTRMessages', this.roomId);\n\t}\n\n\tgenerateKeyPair() {\n\t\tif (this.userOnlineComputation) {\n\t\t\tthis.userOnlineComputation.stop();\n\t\t}\n\n\t\tthis.userOnlineComputation = Tracker.autorun(() => {\n\t\t\tconst $room = $(`#chat-window-${this.roomId}`);\n\t\t\tconst $title = $('.rc-header__title', $room);\n\t\t\tif (this.established.get()) {\n\t\t\t\tif ($room.length && $title.length && !$('.otr-icon', $title).length) {\n\t\t\t\t\t$title.prepend(\"<i class='otr-icon icon-key'></i>\");\n\t\t\t\t}\n\t\t\t} else if ($title.length) {\n\t\t\t\t$('.otr-icon', $title).remove();\n\t\t\t}\n\t\t});\n\n\t\t// Generate an ephemeral key pair.\n\t\treturn OTR.crypto\n\t\t\t.generateKey(\n\t\t\t\t{\n\t\t\t\t\tname: 'ECDH',\n\t\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t\t['deriveKey', 'deriveBits'],\n\t\t\t)\n\t\t\t.then((keyPair) => {\n\t\t\t\tthis.keyPair = keyPair;\n\t\t\t\treturn OTR.crypto.exportKey('jwk', keyPair.publicKey);\n\t\t\t})\n\t\t\t.then((exportedPublicKey) => {\n\t\t\t\tthis.exportedPublicKey = exportedPublicKey;\n\n\t\t\t\t// Once we have generated new keys, it's safe to delete old messages\n\t\t\t\tMeteor.call('deleteOldOTRMessages', this.roomId);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t});\n\t}\n\n\timportPublicKey(publicKey) {\n\t\treturn OTR.crypto\n\t\t\t.importKey(\n\t\t\t\t'jwk',\n\t\t\t\tEJSON.parse(publicKey),\n\t\t\t\t{\n\t\t\t\t\tname: 'ECDH',\n\t\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t\t[],\n\t\t\t)\n\t\t\t.then((peerPublicKey) =>\n\t\t\t\tOTR.crypto.deriveBits(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'ECDH',\n\t\t\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\t\t\tpublic: peerPublicKey,\n\t\t\t\t\t},\n\t\t\t\t\tthis.keyPair.privateKey,\n\t\t\t\t\t256,\n\t\t\t\t),\n\t\t\t)\n\t\t\t.then((bits) =>\n\t\t\t\tOTR.crypto.digest(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SHA-256',\n\t\t\t\t\t},\n\t\t\t\t\tbits,\n\t\t\t\t),\n\t\t\t)\n\t\t\t.then((hashedBits) => {\n\t\t\t\t// We truncate the hash to 128 bits.\n\t\t\t\tconst sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\n\t\t\t\treturn OTR.crypto.importKey(\n\t\t\t\t\t'raw',\n\t\t\t\t\tsessionKeyData,\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'AES-GCM',\n\t\t\t\t\t},\n\t\t\t\t\tfalse,\n\t\t\t\t\t['encrypt', 'decrypt'],\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then((sessionKey) => {\n\t\t\t\t// Session key available.\n\t\t\t\tthis.sessionKey = sessionKey;\n\t\t\t});\n\t}\n\n\tencryptText(data) {\n\t\tif (!_.isObject(data)) {\n\t\t\tdata = new TextEncoder('UTF-8').encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\n\t\t}\n\t\tconst iv = crypto.getRandomValues(new Uint8Array(12));\n\n\t\treturn OTR.crypto\n\t\t\t.encrypt(\n\t\t\t\t{\n\t\t\t\t\tname: 'AES-GCM',\n\t\t\t\t\tiv,\n\t\t\t\t},\n\t\t\t\tthis.sessionKey,\n\t\t\t\tdata,\n\t\t\t)\n\t\t\t.then((cipherText) => {\n\t\t\t\tcipherText = new Uint8Array(cipherText);\n\t\t\t\tconst output = new Uint8Array(iv.length + cipherText.length);\n\t\t\t\toutput.set(iv, 0);\n\t\t\t\toutput.set(cipherText, iv.length);\n\t\t\t\treturn EJSON.stringify(output);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\n\t\t\t});\n\t}\n\n\tencrypt(message) {\n\t\tlet ts;\n\t\tif (isNaN(TimeSync.serverOffset())) {\n\t\t\tts = new Date();\n\t\t} else {\n\t\t\tts = new Date(Date.now() + TimeSync.serverOffset());\n\t\t}\n\n\t\tconst data = new TextEncoder('UTF-8').encode(\n\t\t\tEJSON.stringify({\n\t\t\t\t_id: message._id,\n\t\t\t\ttext: message.msg,\n\t\t\t\tuserId: this.userId,\n\t\t\t\tack: Random.id((Random.fraction() + 1) * 20),\n\t\t\t\tts,\n\t\t\t}),\n\t\t);\n\t\tconst enc = this.encryptText(data);\n\t\treturn enc;\n\t}\n\n\tdecrypt(message) {\n\t\tlet cipherText = EJSON.parse(message);\n\t\tconst iv = cipherText.slice(0, 12);\n\t\tcipherText = cipherText.slice(12);\n\n\t\treturn OTR.crypto\n\t\t\t.decrypt(\n\t\t\t\t{\n\t\t\t\t\tname: 'AES-GCM',\n\t\t\t\t\tiv,\n\t\t\t\t},\n\t\t\t\tthis.sessionKey,\n\t\t\t\tcipherText,\n\t\t\t)\n\t\t\t.then((data) => {\n\t\t\t\tdata = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\n\t\t\t\treturn data;\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\treturn message;\n\t\t\t});\n\t}\n\n\tonUserStream(type, data) {\n\t\tswitch (type) {\n\t\t\tcase 'handshake':\n\t\t\t\tlet timeout = null;\n\n\t\t\t\tconst establishConnection = () => {\n\t\t\t\t\tthis.establishing.set(true);\n\t\t\t\t\tMeteor.clearTimeout(timeout);\n\t\t\t\t\tthis.generateKeyPair().then(() => {\n\t\t\t\t\t\tthis.importPublicKey(data.publicKey).then(() => {\n\t\t\t\t\t\t\tthis.firstPeer = false;\n\t\t\t\t\t\t\tgoToRoomById(data.roomId);\n\t\t\t\t\t\t\tMeteor.defer(() => {\n\t\t\t\t\t\t\t\tthis.established.set(true);\n\t\t\t\t\t\t\t\tthis.acknowledge();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { username } = await Presence.get(data.userId);\n\t\t\t\t\tif (data.refresh && this.established.get()) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\testablishConnection();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.established.get()) {\n\t\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: TAPi18n.__('OTR'),\n\t\t\t\t\t\t\t\tchildren: TAPi18n.__('Username_wants_to_start_otr_Do_you_want_to_accept', {\n\t\t\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tconfirmText: TAPi18n.__('Yes'),\n\t\t\t\t\t\t\t\tcancelText: TAPi18n.__('No'),\n\t\t\t\t\t\t\t\tonClose: () => imperativeModal.close,\n\t\t\t\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t\t\t\tMeteor.clearTimeout(timeout);\n\t\t\t\t\t\t\t\t\tthis.deny();\n\t\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\t\t\t\testablishConnection();\n\t\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\ttimeout = Meteor.setTimeout(() => {\n\t\t\t\t\t\tthis.establishing.set(false);\n\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t}, 10000);\n\t\t\t\t})();\n\t\t\t\tbreak;\n\n\t\t\tcase 'acknowledge':\n\t\t\t\tthis.importPublicKey(data.publicKey).then(() => {\n\t\t\t\t\tthis.established.set(true);\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'deny':\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { username } = await Presence.get(this.peerId);\n\t\t\t\t\tif (this.establishing.get()) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: TAPi18n.__('OTR'),\n\t\t\t\t\t\t\t\tchildren: TAPi18n.__('Username_denied_the_OTR_session', { username }),\n\t\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { username } = await Presence.get(this.peerId);\n\n\t\t\t\t\tif (this.established.get()) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: TAPi18n.__('OTR'),\n\t\t\t\t\t\t\t\tchildren: TAPi18n.__('Username_ended_the_OTR_session', { username }),\n\t\t\t\t\t\t\t\tconfirmText: TAPi18n.__('Ok'),\n\t\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n"]},"sourceType":"module","hash":"be5ed17bbabb14ab6c553e64dcc1290609f55f42"}

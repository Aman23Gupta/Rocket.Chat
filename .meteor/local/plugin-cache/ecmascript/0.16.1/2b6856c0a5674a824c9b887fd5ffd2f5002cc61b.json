{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/insertMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/insertMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/insertMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/insertMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/insertMessage.js"}},"code":"module.export({\n  insertMessage: () => insertMessage\n});\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet Markdown;\nmodule.link(\"../../../markdown/server\", {\n  Markdown(v) {\n    Markdown = v;\n  }\n\n}, 1);\nlet Messages;\nmodule.link(\"../../../models\", {\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 2);\n\nconst objectMaybeIncluding = types => Match.Where(value => {\n  Object.keys(types).forEach(field => {\n    if (value[field] != null) {\n      try {\n        check(value[field], types[field]);\n      } catch (error) {\n        error.path = field;\n        throw error;\n      }\n    }\n  });\n  return true;\n});\n\nconst validateAttachmentsFields = attachmentField => {\n  check(attachmentField, objectMaybeIncluding({\n    short: Boolean,\n    title: String,\n    value: Match.OneOf(String, Match.Integer, Boolean)\n  }));\n\n  if (typeof attachmentField.value !== 'undefined') {\n    attachmentField.value = String(attachmentField.value);\n  }\n};\n\nconst validateAttachmentsActions = attachmentActions => {\n  check(attachmentActions, objectMaybeIncluding({\n    type: String,\n    text: String,\n    url: String,\n    image_url: String,\n    is_webview: Boolean,\n    webview_height_ratio: String,\n    msg: String,\n    msg_in_chat_window: Boolean\n  }));\n};\n\nconst validateAttachment = attachment => {\n  check(attachment, objectMaybeIncluding({\n    color: String,\n    text: String,\n    ts: Match.OneOf(String, Number),\n    thumb_url: String,\n    button_alignment: String,\n    actions: [Match.Any],\n    message_link: String,\n    collapsed: Boolean,\n    author_name: String,\n    author_link: String,\n    author_icon: String,\n    title: String,\n    title_link: String,\n    title_link_download: Boolean,\n    image_url: String,\n    audio_url: String,\n    video_url: String,\n    fields: [Match.Any]\n  }));\n\n  if (attachment.fields && attachment.fields.length) {\n    attachment.fields.map(validateAttachmentsFields);\n  }\n\n  if (attachment.actions && attachment.actions.length) {\n    attachment.actions.map(validateAttachmentsActions);\n  }\n};\n\nconst validateBodyAttachments = attachments => attachments.map(validateAttachment);\n\nconst insertMessage = function (user, message, rid) {\n  let upsert = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!user || !message || !rid) {\n    return false;\n  }\n\n  check(message, objectMaybeIncluding({\n    _id: String,\n    msg: String,\n    text: String,\n    alias: String,\n    emoji: String,\n    avatar: String,\n    attachments: [Match.Any]\n  }));\n\n  if (Array.isArray(message.attachments) && message.attachments.length) {\n    validateBodyAttachments(message.attachments);\n  }\n\n  if (!message.ts) {\n    message.ts = new Date();\n  }\n\n  const {\n    _id,\n    username\n  } = user;\n  message.u = {\n    _id,\n    username\n  };\n  message.rid = rid;\n\n  if (!Match.test(message.msg, String)) {\n    message.msg = '';\n  }\n\n  if (message.ts == null) {\n    message.ts = new Date();\n  }\n\n  if (message.parseUrls !== false) {\n    message.html = message.msg;\n    message = Markdown.code(message);\n    const urls = message.html.match(/([A-Za-z]{3,9}):\\/\\/([-;:&=\\+\\$,\\w]+@{1})?([-A-Za-z0-9\\.]+)+:?(\\d+)?((\\/[-\\+=!:~%\\/\\.@\\,\\(\\)\\w]*)?\\??([-\\+=&!:;%@\\/\\.\\,\\w]+)?(?:#([^\\s\\)]+))?)?/g);\n\n    if (urls) {\n      message.urls = [...new Set(urls)].map(url => ({\n        url\n      }));\n    }\n\n    message = Markdown.mountTokensBack(message, false);\n    message.msg = message.html;\n    delete message.html;\n    delete message.tokens;\n  }\n\n  if (message._id && upsert) {\n    const {\n      _id\n    } = message;\n    delete message._id;\n    Messages.upsert({\n      _id,\n      'u._id': message.u._id\n    }, message);\n    message._id = _id;\n  } else {\n    message._id = Messages.insert(message);\n  }\n\n  return message;\n};","map":{"version":3,"sources":["app/lib/server/functions/insertMessage.js"],"names":["module","export","insertMessage","Match","check","link","v","Markdown","Messages","objectMaybeIncluding","types","Where","value","Object","keys","forEach","field","error","path","validateAttachmentsFields","attachmentField","short","Boolean","title","String","OneOf","Integer","validateAttachmentsActions","attachmentActions","type","text","url","image_url","is_webview","webview_height_ratio","msg","msg_in_chat_window","validateAttachment","attachment","color","ts","Number","thumb_url","button_alignment","actions","Any","message_link","collapsed","author_name","author_link","author_icon","title_link","title_link_download","audio_url","video_url","fields","length","map","validateBodyAttachments","attachments","user","message","rid","upsert","_id","alias","emoji","avatar","Array","isArray","Date","username","u","test","parseUrls","html","code","urls","match","Set","mountTokensBack","tokens","insert"],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { Markdown } from '../../../markdown/server';\nimport { Messages } from '../../../models';\n\nconst objectMaybeIncluding = (types) =>\n\tMatch.Where((value) => {\n\t\tObject.keys(types).forEach((field) => {\n\t\t\tif (value[field] != null) {\n\t\t\t\ttry {\n\t\t\t\t\tcheck(value[field], types[field]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\terror.path = field;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn true;\n\t});\n\nconst validateAttachmentsFields = (attachmentField) => {\n\tcheck(\n\t\tattachmentField,\n\t\tobjectMaybeIncluding({\n\t\t\tshort: Boolean,\n\t\t\ttitle: String,\n\t\t\tvalue: Match.OneOf(String, Match.Integer, Boolean),\n\t\t}),\n\t);\n\n\tif (typeof attachmentField.value !== 'undefined') {\n\t\tattachmentField.value = String(attachmentField.value);\n\t}\n};\n\nconst validateAttachmentsActions = (attachmentActions) => {\n\tcheck(\n\t\tattachmentActions,\n\t\tobjectMaybeIncluding({\n\t\t\ttype: String,\n\t\t\ttext: String,\n\t\t\turl: String,\n\t\t\timage_url: String,\n\t\t\tis_webview: Boolean,\n\t\t\twebview_height_ratio: String,\n\t\t\tmsg: String,\n\t\t\tmsg_in_chat_window: Boolean,\n\t\t}),\n\t);\n};\n\nconst validateAttachment = (attachment) => {\n\tcheck(\n\t\tattachment,\n\t\tobjectMaybeIncluding({\n\t\t\tcolor: String,\n\t\t\ttext: String,\n\t\t\tts: Match.OneOf(String, Number),\n\t\t\tthumb_url: String,\n\t\t\tbutton_alignment: String,\n\t\t\tactions: [Match.Any],\n\t\t\tmessage_link: String,\n\t\t\tcollapsed: Boolean,\n\t\t\tauthor_name: String,\n\t\t\tauthor_link: String,\n\t\t\tauthor_icon: String,\n\t\t\ttitle: String,\n\t\t\ttitle_link: String,\n\t\t\ttitle_link_download: Boolean,\n\t\t\timage_url: String,\n\t\t\taudio_url: String,\n\t\t\tvideo_url: String,\n\t\t\tfields: [Match.Any],\n\t\t}),\n\t);\n\n\tif (attachment.fields && attachment.fields.length) {\n\t\tattachment.fields.map(validateAttachmentsFields);\n\t}\n\n\tif (attachment.actions && attachment.actions.length) {\n\t\tattachment.actions.map(validateAttachmentsActions);\n\t}\n};\n\nconst validateBodyAttachments = (attachments) => attachments.map(validateAttachment);\n\nexport const insertMessage = function (user, message, rid, upsert = false) {\n\tif (!user || !message || !rid) {\n\t\treturn false;\n\t}\n\n\tcheck(\n\t\tmessage,\n\t\tobjectMaybeIncluding({\n\t\t\t_id: String,\n\t\t\tmsg: String,\n\t\t\ttext: String,\n\t\t\talias: String,\n\t\t\temoji: String,\n\t\t\tavatar: String,\n\t\t\tattachments: [Match.Any],\n\t\t}),\n\t);\n\n\tif (Array.isArray(message.attachments) && message.attachments.length) {\n\t\tvalidateBodyAttachments(message.attachments);\n\t}\n\n\tif (!message.ts) {\n\t\tmessage.ts = new Date();\n\t}\n\tconst { _id, username } = user;\n\tmessage.u = {\n\t\t_id,\n\t\tusername,\n\t};\n\tmessage.rid = rid;\n\n\tif (!Match.test(message.msg, String)) {\n\t\tmessage.msg = '';\n\t}\n\n\tif (message.ts == null) {\n\t\tmessage.ts = new Date();\n\t}\n\n\tif (message.parseUrls !== false) {\n\t\tmessage.html = message.msg;\n\t\tmessage = Markdown.code(message);\n\n\t\tconst urls = message.html.match(\n\t\t\t/([A-Za-z]{3,9}):\\/\\/([-;:&=\\+\\$,\\w]+@{1})?([-A-Za-z0-9\\.]+)+:?(\\d+)?((\\/[-\\+=!:~%\\/\\.@\\,\\(\\)\\w]*)?\\??([-\\+=&!:;%@\\/\\.\\,\\w]+)?(?:#([^\\s\\)]+))?)?/g,\n\t\t);\n\t\tif (urls) {\n\t\t\tmessage.urls = [...new Set(urls)].map((url) => ({ url }));\n\t\t}\n\n\t\tmessage = Markdown.mountTokensBack(message, false);\n\t\tmessage.msg = message.html;\n\t\tdelete message.html;\n\t\tdelete message.tokens;\n\t}\n\n\tif (message._id && upsert) {\n\t\tconst { _id } = message;\n\t\tdelete message._id;\n\t\tMessages.upsert(\n\t\t\t{\n\t\t\t\t_id,\n\t\t\t\t'u._id': message.u._id,\n\t\t\t},\n\t\t\tmessage,\n\t\t);\n\t\tmessage._id = _id;\n\t} else {\n\t\tmessage._id = Messages.insert(message);\n\t}\n\n\treturn message;\n};\n"]},"sourceType":"module","hash":"2b6856c0a5674a824c9b887fd5ffd2f5002cc61b"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/users.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/users.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/users.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/users.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/users.js"}},"code":"const _excluded = [\"image\"];\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 4);\nlet Users, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 5);\nlet UsersRaw;\nmodule.link(\"../../../models/server/raw\", {\n  Users(v) {\n    UsersRaw = v;\n  }\n\n}, 6);\nlet hasPermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 7);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 8);\nlet getURL;\nmodule.link(\"../../../utils\", {\n  getURL(v) {\n    getURL = v;\n  }\n\n}, 9);\nlet validateCustomFields, saveUser, saveCustomFieldsWithoutValidation, checkUsernameAvailability, setUserAvatar, saveCustomFields, setStatusText;\nmodule.link(\"../../../lib/server\", {\n  validateCustomFields(v) {\n    validateCustomFields = v;\n  },\n\n  saveUser(v) {\n    saveUser = v;\n  },\n\n  saveCustomFieldsWithoutValidation(v) {\n    saveCustomFieldsWithoutValidation = v;\n  },\n\n  checkUsernameAvailability(v) {\n    checkUsernameAvailability = v;\n  },\n\n  setUserAvatar(v) {\n    setUserAvatar = v;\n  },\n\n  saveCustomFields(v) {\n    saveCustomFields = v;\n  },\n\n  setStatusText(v) {\n    setStatusText = v;\n  }\n\n}, 10);\nlet getFullUserDataByIdOrUsername;\nmodule.link(\"../../../lib/server/functions/getFullUserData\", {\n  getFullUserDataByIdOrUsername(v) {\n    getFullUserDataByIdOrUsername = v;\n  }\n\n}, 11);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 12);\nlet getUploadFormData;\nmodule.link(\"../lib/getUploadFormData\", {\n  getUploadFormData(v) {\n    getUploadFormData = v;\n  }\n\n}, 13);\nlet findUsersToAutocomplete, getInclusiveFields, getNonEmptyFields, getNonEmptyQuery;\nmodule.link(\"../lib/users\", {\n  findUsersToAutocomplete(v) {\n    findUsersToAutocomplete = v;\n  },\n\n  getInclusiveFields(v) {\n    getInclusiveFields = v;\n  },\n\n  getNonEmptyFields(v) {\n    getNonEmptyFields = v;\n  },\n\n  getNonEmptyQuery(v) {\n    getNonEmptyQuery = v;\n  }\n\n}, 14);\nlet getUserForCheck, emailCheck;\nmodule.link(\"../../../2fa/server/code\", {\n  getUserForCheck(v) {\n    getUserForCheck = v;\n  },\n\n  emailCheck(v) {\n    emailCheck = v;\n  }\n\n}, 15);\nlet resetUserE2EEncriptionKey;\nmodule.link(\"../../../../server/lib/resetUserE2EKey\", {\n  resetUserE2EEncriptionKey(v) {\n    resetUserE2EEncriptionKey = v;\n  }\n\n}, 16);\nlet setUserStatus;\nmodule.link(\"../../../../imports/users-presence/server/activeUsers\", {\n  setUserStatus(v) {\n    setUserStatus = v;\n  }\n\n}, 17);\nlet resetTOTP;\nmodule.link(\"../../../2fa/server/functions/resetTOTP\", {\n  resetTOTP(v) {\n    resetTOTP = v;\n  }\n\n}, 18);\nlet Team;\nmodule.link(\"../../../../server/sdk\", {\n  Team(v) {\n    Team = v;\n  }\n\n}, 19);\nAPI.v1.addRoute('users.create', {\n  authRequired: true\n}, {\n  post() {\n    check(this.bodyParams, {\n      email: String,\n      name: String,\n      password: String,\n      username: String,\n      active: Match.Maybe(Boolean),\n      bio: Match.Maybe(String),\n      nickname: Match.Maybe(String),\n      statusText: Match.Maybe(String),\n      roles: Match.Maybe(Array),\n      joinDefaultChannels: Match.Maybe(Boolean),\n      requirePasswordChange: Match.Maybe(Boolean),\n      setRandomPassword: Match.Maybe(Boolean),\n      sendWelcomeEmail: Match.Maybe(Boolean),\n      verified: Match.Maybe(Boolean),\n      customFields: Match.Maybe(Object)\n    }); // New change made by pull request #5152\n\n    if (typeof this.bodyParams.joinDefaultChannels === 'undefined') {\n      this.bodyParams.joinDefaultChannels = true;\n    }\n\n    if (this.bodyParams.customFields) {\n      validateCustomFields(this.bodyParams.customFields);\n    }\n\n    const newUserId = saveUser(this.userId, this.bodyParams);\n\n    if (this.bodyParams.customFields) {\n      saveCustomFieldsWithoutValidation(newUserId, this.bodyParams.customFields);\n    }\n\n    if (typeof this.bodyParams.active !== 'undefined') {\n      Meteor.runAsUser(this.userId, () => {\n        Meteor.call('setUserActiveStatus', newUserId, this.bodyParams.active);\n      });\n    }\n\n    const {\n      fields\n    } = this.parseJsonQuery();\n    return API.v1.success({\n      user: Users.findOneById(newUserId, {\n        fields\n      })\n    });\n  }\n\n});\nAPI.v1.addRoute('users.delete', {\n  authRequired: true\n}, {\n  post() {\n    if (!hasPermission(this.userId, 'delete-user')) {\n      return API.v1.unauthorized();\n    }\n\n    const user = this.getUserFromParams();\n    const {\n      confirmRelinquish = false\n    } = this.requestParams();\n    Meteor.runAsUser(this.userId, () => {\n      Meteor.call('deleteUser', user._id, confirmRelinquish);\n    });\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.deleteOwnAccount', {\n  authRequired: true\n}, {\n  post() {\n    const {\n      password\n    } = this.bodyParams;\n\n    if (!password) {\n      return API.v1.failure('Body parameter \"password\" is required.');\n    }\n\n    if (!settings.get('Accounts_AllowDeleteOwnAccount')) {\n      throw new Meteor.Error('error-not-allowed', 'Not allowed');\n    }\n\n    const {\n      confirmRelinquish = false\n    } = this.requestParams();\n    Meteor.runAsUser(this.userId, () => {\n      Meteor.call('deleteUserOwnAccount', password, confirmRelinquish);\n    });\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.getAvatar', {\n  authRequired: false\n}, {\n  get() {\n    const user = this.getUserFromParams();\n    const url = getURL(\"/avatar/\".concat(user.username), {\n      cdn: false,\n      full: true\n    });\n    this.response.setHeader('Location', url);\n    return {\n      statusCode: 307,\n      body: url\n    };\n  }\n\n});\nAPI.v1.addRoute('users.setActiveStatus', {\n  authRequired: true\n}, {\n  post() {\n    check(this.bodyParams, {\n      userId: String,\n      activeStatus: Boolean,\n      confirmRelinquish: Match.Maybe(Boolean)\n    });\n\n    if (!hasPermission(this.userId, 'edit-other-user-active-status')) {\n      return API.v1.unauthorized();\n    }\n\n    Meteor.runAsUser(this.userId, () => {\n      const {\n        userId,\n        activeStatus,\n        confirmRelinquish = false\n      } = this.bodyParams;\n      Meteor.call('setUserActiveStatus', userId, activeStatus, confirmRelinquish);\n    });\n    return API.v1.success({\n      user: Users.findOneById(this.bodyParams.userId, {\n        fields: {\n          active: 1\n        }\n      })\n    });\n  }\n\n});\nAPI.v1.addRoute('users.deactivateIdle', {\n  authRequired: true\n}, {\n  post() {\n    check(this.bodyParams, {\n      daysIdle: Match.Integer,\n      role: Match.Optional(String)\n    });\n\n    if (!hasPermission(this.userId, 'edit-other-user-active-status')) {\n      return API.v1.unauthorized();\n    }\n\n    const {\n      daysIdle,\n      role = 'user'\n    } = this.bodyParams;\n    const lastLoggedIn = new Date();\n    lastLoggedIn.setDate(lastLoggedIn.getDate() - daysIdle);\n    const count = Users.setActiveNotLoggedInAfterWithRole(lastLoggedIn, role, false);\n    return API.v1.success({\n      count\n    });\n  }\n\n});\nAPI.v1.addRoute('users.getPresence', {\n  authRequired: true\n}, {\n  get() {\n    if (this.isUserFromParams()) {\n      const user = Users.findOneById(this.userId);\n      return API.v1.success({\n        presence: user.status,\n        connectionStatus: user.statusConnection,\n        lastLogin: user.lastLogin\n      });\n    }\n\n    const user = this.getUserFromParams();\n    return API.v1.success({\n      presence: user.status\n    });\n  }\n\n});\nAPI.v1.addRoute('users.info', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      username,\n      userId\n    } = this.requestParams();\n    const {\n      fields\n    } = this.parseJsonQuery();\n    check(userId, Match.Maybe(String));\n    check(username, Match.Maybe(String));\n\n    if (userId !== undefined && username !== undefined) {\n      throw new Meteor.Error('invalid-filter', 'Cannot filter by id and username at once');\n    }\n\n    if (!userId && !username) {\n      throw new Meteor.Error('invalid-filter', 'Must filter by id or username');\n    }\n\n    const user = getFullUserDataByIdOrUsername({\n      userId: this.userId,\n      filterId: userId,\n      filterUsername: username\n    });\n\n    if (!user) {\n      return API.v1.failure('User not found.');\n    }\n\n    const myself = user._id === this.userId;\n\n    if (fields.userRooms === 1 && (myself || hasPermission(this.userId, 'view-other-user-channels'))) {\n      user.rooms = Subscriptions.findByUserId(user._id, {\n        fields: {\n          rid: 1,\n          name: 1,\n          t: 1,\n          roles: 1,\n          unread: 1\n        },\n        sort: {\n          t: 1,\n          name: 1\n        }\n      }).fetch();\n    }\n\n    return API.v1.success({\n      user\n    });\n  }\n\n});\nAPI.v1.addRoute('users.list', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-d-room')) {\n      return API.v1.unauthorized();\n    }\n\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort,\n      fields,\n      query\n    } = this.parseJsonQuery();\n    const nonEmptyQuery = getNonEmptyQuery(query);\n    const nonEmptyFields = getNonEmptyFields(fields);\n    const inclusiveFields = getInclusiveFields(nonEmptyFields);\n    const actualSort = sort && sort.name ? _objectSpread({\n      nameInsensitive: sort.name\n    }, sort) : sort || {\n      username: 1\n    };\n    const limit = count !== 0 ? [{\n      $limit: count\n    }] : [];\n    const result = Promise.await(UsersRaw.col.aggregate([{\n      $match: nonEmptyQuery\n    }, {\n      $project: inclusiveFields\n    }, {\n      $addFields: {\n        nameInsensitive: {\n          $toLower: '$name'\n        }\n      }\n    }, {\n      $facet: {\n        sortedResults: [{\n          $sort: actualSort\n        }, {\n          $skip: offset\n        }, ...limit],\n        totalCount: [{\n          $group: {\n            _id: null,\n            total: {\n              $sum: 1\n            }\n          }\n        }]\n      }\n    }]).toArray());\n    const {\n      sortedResults: users,\n      totalCount: [{\n        total\n      } = {\n        total: 0\n      }]\n    } = result[0];\n    return API.v1.success({\n      users,\n      count: users.length,\n      offset,\n      total\n    });\n  }\n\n});\nAPI.v1.addRoute('users.register', {\n  authRequired: false,\n  rateLimiterOptions: {\n    numRequestsAllowed: settings.get('Rate_Limiter_Limit_RegisterUser'),\n    intervalTimeInMS: settings.get('API_Enable_Rate_Limiter_Limit_Time_Default')\n  }\n}, {\n  post() {\n    if (this.userId) {\n      return API.v1.failure('Logged in users can not register again.');\n    } // We set their username here, so require it\n    // The `registerUser` checks for the other requirements\n\n\n    check(this.bodyParams, Match.ObjectIncluding({\n      username: String\n    }));\n\n    if (!checkUsernameAvailability(this.bodyParams.username)) {\n      return API.v1.failure('Username is already in use');\n    } // Register the user\n\n\n    const userId = Meteor.call('registerUser', this.bodyParams); // Now set their username\n\n    Meteor.runAsUser(userId, () => Meteor.call('setUsername', this.bodyParams.username));\n    const {\n      fields\n    } = this.parseJsonQuery();\n    return API.v1.success({\n      user: Users.findOneById(userId, {\n        fields\n      })\n    });\n  }\n\n});\nAPI.v1.addRoute('users.resetAvatar', {\n  authRequired: true\n}, {\n  post() {\n    const user = this.getUserFromParams();\n\n    if (settings.get('Accounts_AllowUserAvatarChange') && user._id === this.userId) {\n      Meteor.runAsUser(this.userId, () => Meteor.call('resetAvatar'));\n    } else if (hasPermission(this.userId, 'edit-other-user-avatar')) {\n      Meteor.runAsUser(this.userId, () => Meteor.call('resetAvatar', user._id));\n    } else {\n      throw new Meteor.Error('error-not-allowed', 'Reset avatar is not allowed', {\n        method: 'users.resetAvatar'\n      });\n    }\n\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.setAvatar', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      check(this.bodyParams, Match.ObjectIncluding({\n        avatarUrl: Match.Maybe(String),\n        userId: Match.Maybe(String),\n        username: Match.Maybe(String)\n      }));\n      const canEditOtherUserAvatar = hasPermission(this.userId, 'edit-other-user-avatar');\n\n      if (!settings.get('Accounts_AllowUserAvatarChange') && !canEditOtherUserAvatar) {\n        throw new Meteor.Error('error-not-allowed', 'Change avatar is not allowed', {\n          method: 'users.setAvatar'\n        });\n      }\n\n      let user;\n\n      if (this.isUserFromParams()) {\n        user = Meteor.users.findOne(this.userId);\n      } else if (canEditOtherUserAvatar) {\n        user = this.getUserFromParams();\n      } else {\n        return API.v1.unauthorized();\n      }\n\n      if (this.bodyParams.avatarUrl) {\n        setUserAvatar(user, this.bodyParams.avatarUrl, '', 'url');\n        return API.v1.success();\n      }\n\n      const _await$getUploadFormD = Promise.await(getUploadFormData({\n        request: this.request\n      })),\n            {\n        image\n      } = _await$getUploadFormD,\n            fields = _objectWithoutProperties(_await$getUploadFormD, _excluded);\n\n      if (!image) {\n        return API.v1.failure(\"The 'image' param is required\");\n      }\n\n      const sentTheUserByFormData = fields.userId || fields.username;\n\n      if (sentTheUserByFormData) {\n        if (fields.userId) {\n          user = Users.findOneById(fields.userId, {\n            fields: {\n              username: 1\n            }\n          });\n        } else if (fields.username) {\n          user = Users.findOneByUsernameIgnoringCase(fields.username, {\n            fields: {\n              username: 1\n            }\n          });\n        }\n\n        if (!user) {\n          throw new Meteor.Error('error-invalid-user', 'The optional \"userId\" or \"username\" param provided does not match any users');\n        }\n\n        const isAnotherUser = this.userId !== user._id;\n\n        if (isAnotherUser && !hasPermission(this.userId, 'edit-other-user-avatar')) {\n          throw new Meteor.Error('error-not-allowed', 'Not allowed');\n        }\n      }\n\n      setUserAvatar(user, image.fileBuffer, image.mimetype, 'rest');\n      return API.v1.success();\n    });\n  }\n\n});\nAPI.v1.addRoute('users.getStatus', {\n  authRequired: true\n}, {\n  get() {\n    if (this.isUserFromParams()) {\n      const user = Users.findOneById(this.userId);\n      return API.v1.success({\n        _id: user._id,\n        message: user.statusText,\n        connectionStatus: user.statusConnection,\n        status: user.status\n      });\n    }\n\n    const user = this.getUserFromParams();\n    return API.v1.success({\n      _id: user._id,\n      message: user.statusText,\n      status: user.status\n    });\n  }\n\n});\nAPI.v1.addRoute('users.setStatus', {\n  authRequired: true\n}, {\n  post() {\n    check(this.bodyParams, Match.ObjectIncluding({\n      status: Match.Maybe(String),\n      message: Match.Maybe(String)\n    }));\n\n    if (!settings.get('Accounts_AllowUserStatusMessageChange')) {\n      throw new Meteor.Error('error-not-allowed', 'Change status is not allowed', {\n        method: 'users.setStatus'\n      });\n    }\n\n    let user;\n\n    if (this.isUserFromParams()) {\n      user = Meteor.users.findOne(this.userId);\n    } else if (hasPermission(this.userId, 'edit-other-user-info')) {\n      user = this.getUserFromParams();\n    } else {\n      return API.v1.unauthorized();\n    }\n\n    Meteor.runAsUser(user._id, () => {\n      if (this.bodyParams.message || this.bodyParams.message === '') {\n        setStatusText(user._id, this.bodyParams.message);\n      }\n\n      if (this.bodyParams.status) {\n        const validStatus = ['online', 'away', 'offline', 'busy'];\n\n        if (validStatus.includes(this.bodyParams.status)) {\n          const {\n            status\n          } = this.bodyParams;\n\n          if (status === 'offline' && !settings.get('Accounts_AllowInvisibleStatusOption')) {\n            throw new Meteor.Error('error-status-not-allowed', 'Invisible status is disabled', {\n              method: 'users.setStatus'\n            });\n          }\n\n          Meteor.users.update(user._id, {\n            $set: {\n              status,\n              statusDefault: status\n            }\n          });\n          setUserStatus(user, status);\n        } else {\n          throw new Meteor.Error('error-invalid-status', 'Valid status types include online, away, offline, and busy.', {\n            method: 'users.setStatus'\n          });\n        }\n      }\n    });\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.update', {\n  authRequired: true,\n  twoFactorRequired: true\n}, {\n  post() {\n    check(this.bodyParams, {\n      userId: String,\n      data: Match.ObjectIncluding({\n        email: Match.Maybe(String),\n        name: Match.Maybe(String),\n        password: Match.Maybe(String),\n        username: Match.Maybe(String),\n        bio: Match.Maybe(String),\n        nickname: Match.Maybe(String),\n        statusText: Match.Maybe(String),\n        active: Match.Maybe(Boolean),\n        roles: Match.Maybe(Array),\n        joinDefaultChannels: Match.Maybe(Boolean),\n        requirePasswordChange: Match.Maybe(Boolean),\n        sendWelcomeEmail: Match.Maybe(Boolean),\n        verified: Match.Maybe(Boolean),\n        customFields: Match.Maybe(Object)\n      })\n    });\n\n    const userData = _.extend({\n      _id: this.bodyParams.userId\n    }, this.bodyParams.data);\n\n    Meteor.runAsUser(this.userId, () => saveUser(this.userId, userData));\n\n    if (this.bodyParams.data.customFields) {\n      saveCustomFields(this.bodyParams.userId, this.bodyParams.data.customFields);\n    }\n\n    if (typeof this.bodyParams.data.active !== 'undefined') {\n      const {\n        userId,\n        data: {\n          active\n        },\n        confirmRelinquish = false\n      } = this.bodyParams;\n      Meteor.runAsUser(this.userId, () => {\n        Meteor.call('setUserActiveStatus', userId, active, confirmRelinquish);\n      });\n    }\n\n    const {\n      fields\n    } = this.parseJsonQuery();\n    return API.v1.success({\n      user: Users.findOneById(this.bodyParams.userId, {\n        fields\n      })\n    });\n  }\n\n});\nAPI.v1.addRoute('users.updateOwnBasicInfo', {\n  authRequired: true\n}, {\n  post() {\n    check(this.bodyParams, {\n      data: Match.ObjectIncluding({\n        email: Match.Maybe(String),\n        name: Match.Maybe(String),\n        username: Match.Maybe(String),\n        nickname: Match.Maybe(String),\n        statusText: Match.Maybe(String),\n        currentPassword: Match.Maybe(String),\n        newPassword: Match.Maybe(String)\n      }),\n      customFields: Match.Maybe(Object)\n    });\n    const userData = {\n      email: this.bodyParams.data.email,\n      realname: this.bodyParams.data.name,\n      username: this.bodyParams.data.username,\n      nickname: this.bodyParams.data.nickname,\n      statusText: this.bodyParams.data.statusText,\n      newPassword: this.bodyParams.data.newPassword,\n      typedPassword: this.bodyParams.data.currentPassword\n    }; // saveUserProfile now uses the default two factor authentication procedures, so we need to provide that\n\n    const twoFactorOptions = !userData.typedPassword ? null : {\n      twoFactorCode: userData.typedPassword,\n      twoFactorMethod: 'password'\n    };\n    Meteor.runAsUser(this.userId, () => Meteor.call('saveUserProfile', userData, this.bodyParams.customFields, twoFactorOptions));\n    return API.v1.success({\n      user: Users.findOneById(this.userId, {\n        fields: API.v1.defaultFieldsToExclude\n      })\n    });\n  }\n\n});\nAPI.v1.addRoute('users.createToken', {\n  authRequired: true\n}, {\n  post() {\n    const user = this.getUserFromParams();\n    let data;\n    Meteor.runAsUser(this.userId, () => {\n      data = Meteor.call('createToken', user._id);\n    });\n    return data ? API.v1.success({\n      data\n    }) : API.v1.unauthorized();\n  }\n\n});\nAPI.v1.addRoute('users.getPreferences', {\n  authRequired: true\n}, {\n  get() {\n    const user = Users.findOneById(this.userId);\n\n    if (user.settings) {\n      const {\n        preferences = {}\n      } = user.settings;\n      preferences.language = user.language;\n      return API.v1.success({\n        preferences\n      });\n    }\n\n    return API.v1.failure(TAPi18n.__('Accounts_Default_User_Preferences_not_available').toUpperCase());\n  }\n\n});\nAPI.v1.addRoute('users.setPreferences', {\n  authRequired: true\n}, {\n  post() {\n    check(this.bodyParams, {\n      userId: Match.Maybe(String),\n      data: Match.ObjectIncluding({\n        newRoomNotification: Match.Maybe(String),\n        newMessageNotification: Match.Maybe(String),\n        clockMode: Match.Maybe(Number),\n        useEmojis: Match.Maybe(Boolean),\n        convertAsciiEmoji: Match.Maybe(Boolean),\n        saveMobileBandwidth: Match.Maybe(Boolean),\n        collapseMediaByDefault: Match.Maybe(Boolean),\n        autoImageLoad: Match.Maybe(Boolean),\n        emailNotificationMode: Match.Maybe(String),\n        unreadAlert: Match.Maybe(Boolean),\n        notificationsSoundVolume: Match.Maybe(Number),\n        desktopNotifications: Match.Maybe(String),\n        pushNotifications: Match.Maybe(String),\n        enableAutoAway: Match.Maybe(Boolean),\n        highlights: Match.Maybe(Array),\n        desktopNotificationRequireInteraction: Match.Maybe(Boolean),\n        messageViewMode: Match.Maybe(Number),\n        showMessageInMainThread: Match.Maybe(Boolean),\n        hideUsernames: Match.Maybe(Boolean),\n        hideRoles: Match.Maybe(Boolean),\n        displayAvatars: Match.Maybe(Boolean),\n        hideFlexTab: Match.Maybe(Boolean),\n        sendOnEnter: Match.Maybe(String),\n        language: Match.Maybe(String),\n        sidebarShowFavorites: Match.Optional(Boolean),\n        sidebarShowUnread: Match.Optional(Boolean),\n        sidebarSortby: Match.Optional(String),\n        sidebarViewMode: Match.Optional(String),\n        sidebarDisplayAvatar: Match.Optional(Boolean),\n        sidebarGroupByType: Match.Optional(Boolean),\n        muteFocusedConversations: Match.Optional(Boolean)\n      })\n    });\n\n    if (this.bodyParams.userId && this.bodyParams.userId !== this.userId && !hasPermission(this.userId, 'edit-other-user-info')) {\n      throw new Meteor.Error('error-action-not-allowed', 'Editing user is not allowed');\n    }\n\n    const userId = this.bodyParams.userId ? this.bodyParams.userId : this.userId;\n\n    if (!Users.findOneById(userId)) {\n      throw new Meteor.Error('error-invalid-user', 'The optional \"userId\" param provided does not match any users');\n    }\n\n    Meteor.runAsUser(userId, () => Meteor.call('saveUserPreferences', this.bodyParams.data));\n    const user = Users.findOneById(userId, {\n      fields: {\n        'settings.preferences': 1,\n        'language': 1\n      }\n    });\n    return API.v1.success({\n      user: {\n        _id: user._id,\n        settings: {\n          preferences: _objectSpread(_objectSpread({}, user.settings.preferences), {}, {\n            language: user.language\n          })\n        }\n      }\n    });\n  }\n\n});\nAPI.v1.addRoute('users.forgotPassword', {\n  authRequired: false\n}, {\n  post() {\n    const {\n      email\n    } = this.bodyParams;\n\n    if (!email) {\n      return API.v1.failure(\"The 'email' param is required\");\n    }\n\n    Meteor.call('sendForgotPasswordEmail', email);\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.getUsernameSuggestion', {\n  authRequired: true\n}, {\n  get() {\n    const result = Meteor.runAsUser(this.userId, () => Meteor.call('getUsernameSuggestion'));\n    return API.v1.success({\n      result\n    });\n  }\n\n});\nAPI.v1.addRoute('users.generatePersonalAccessToken', {\n  authRequired: true,\n  twoFactorRequired: true\n}, {\n  post() {\n    const {\n      tokenName,\n      bypassTwoFactor\n    } = this.bodyParams;\n\n    if (!tokenName) {\n      return API.v1.failure(\"The 'tokenName' param is required\");\n    }\n\n    const token = Meteor.runAsUser(this.userId, () => Meteor.call('personalAccessTokens:generateToken', {\n      tokenName,\n      bypassTwoFactor\n    }));\n    return API.v1.success({\n      token\n    });\n  }\n\n});\nAPI.v1.addRoute('users.regeneratePersonalAccessToken', {\n  authRequired: true,\n  twoFactorRequired: true\n}, {\n  post() {\n    const {\n      tokenName\n    } = this.bodyParams;\n\n    if (!tokenName) {\n      return API.v1.failure(\"The 'tokenName' param is required\");\n    }\n\n    const token = Meteor.runAsUser(this.userId, () => Meteor.call('personalAccessTokens:regenerateToken', {\n      tokenName\n    }));\n    return API.v1.success({\n      token\n    });\n  }\n\n});\nAPI.v1.addRoute('users.getPersonalAccessTokens', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'create-personal-access-tokens')) {\n      throw new Meteor.Error('not-authorized', 'Not Authorized');\n    }\n\n    const loginTokens = Users.getLoginTokensByUserId(this.userId).fetch()[0];\n\n    const getPersonalAccessTokens = () => loginTokens.services.resume.loginTokens.filter(loginToken => loginToken.type && loginToken.type === 'personalAccessToken').map(loginToken => ({\n      name: loginToken.name,\n      createdAt: loginToken.createdAt,\n      lastTokenPart: loginToken.lastTokenPart,\n      bypassTwoFactor: loginToken.bypassTwoFactor\n    }));\n\n    return API.v1.success({\n      tokens: loginTokens ? getPersonalAccessTokens() : []\n    });\n  }\n\n});\nAPI.v1.addRoute('users.removePersonalAccessToken', {\n  authRequired: true,\n  twoFactorRequired: true\n}, {\n  post() {\n    const {\n      tokenName\n    } = this.bodyParams;\n\n    if (!tokenName) {\n      return API.v1.failure(\"The 'tokenName' param is required\");\n    }\n\n    Meteor.runAsUser(this.userId, () => Meteor.call('personalAccessTokens:removeToken', {\n      tokenName\n    }));\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.2fa.enableEmail', {\n  authRequired: true\n}, {\n  post() {\n    Users.enableEmail2FAByUserId(this.userId);\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.2fa.disableEmail', {\n  authRequired: true,\n  twoFactorRequired: true,\n  twoFactorOptions: {\n    disableRememberMe: true\n  }\n}, {\n  post() {\n    Users.disableEmail2FAByUserId(this.userId);\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.2fa.sendEmailCode', {\n  post() {\n    var _Users$method;\n\n    const {\n      emailOrUsername\n    } = this.bodyParams;\n\n    if (!emailOrUsername) {\n      throw new Meteor.Error('error-parameter-required', 'emailOrUsername is required');\n    }\n\n    const method = emailOrUsername.includes('@') ? 'findOneByEmailAddress' : 'findOneByUsername';\n    const userId = this.userId || ((_Users$method = Users[method](emailOrUsername, {\n      fields: {\n        _id: 1\n      }\n    })) === null || _Users$method === void 0 ? void 0 : _Users$method._id);\n\n    if (!userId) {\n      this.logger.error('[2fa] User was not found when requesting 2fa email code');\n      return API.v1.success();\n    }\n\n    emailCheck.sendEmailCode(getUserForCheck(userId));\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.presence', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      from,\n      ids\n    } = this.queryParams;\n    const options = {\n      fields: {\n        username: 1,\n        name: 1,\n        status: 1,\n        utcOffset: 1,\n        statusText: 1,\n        avatarETag: 1\n      }\n    };\n\n    if (ids) {\n      return API.v1.success({\n        users: Users.findNotOfflineByIds(Array.isArray(ids) ? ids : ids.split(','), options).fetch(),\n        full: false\n      });\n    }\n\n    if (from) {\n      const ts = new Date(from);\n      const diff = (Date.now() - ts) / 1000 / 60;\n\n      if (diff < 10) {\n        return API.v1.success({\n          users: Users.findNotIdUpdatedFrom(this.userId, ts, options).fetch(),\n          full: false\n        });\n      }\n    }\n\n    return API.v1.success({\n      users: Users.findUsersNotOffline(options).fetch(),\n      full: true\n    });\n  }\n\n});\nAPI.v1.addRoute('users.requestDataDownload', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      fullExport = false\n    } = this.queryParams;\n    const result = Meteor.runAsUser(this.userId, () => Meteor.call('requestDataDownload', {\n      fullExport: fullExport === 'true'\n    }));\n    return API.v1.success({\n      requested: result.requested,\n      exportOperation: result.exportOperation\n    });\n  }\n\n});\nAPI.v1.addRoute('users.logoutOtherClients', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      try {\n        const hashedToken = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n\n        if (!Promise.await(UsersRaw.removeNonPATLoginTokensExcept(this.userId, hashedToken))) {\n          throw new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n        }\n\n        const me = Promise.await(UsersRaw.findOneById(this.userId, {\n          projection: {\n            'services.resume.loginTokens': 1\n          }\n        }));\n        const token = me.services.resume.loginTokens.find(token => token.hashedToken === hashedToken);\n        const tokenExpires = new Date(token.when.getTime() + settings.get('Accounts_LoginExpiration') * 1000);\n        return API.v1.success({\n          token: this.request.headers['x-auth-token'],\n          tokenExpires\n        });\n      } catch (error) {\n        return API.v1.failure(error);\n      }\n    });\n  }\n\n});\nAPI.v1.addRoute('users.autocomplete', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      selector\n    } = this.queryParams;\n\n    if (!selector) {\n      return API.v1.failure(\"The 'selector' param is required\");\n    }\n\n    return API.v1.success(Promise.await(findUsersToAutocomplete({\n      uid: this.userId,\n      selector: JSON.parse(selector)\n    })));\n  }\n\n});\nAPI.v1.addRoute('users.removeOtherTokens', {\n  authRequired: true\n}, {\n  post() {\n    API.v1.success(Meteor.call('removeOtherTokens'));\n  }\n\n});\nAPI.v1.addRoute('users.resetE2EKey', {\n  authRequired: true,\n  twoFactorRequired: true,\n  twoFactorOptions: {\n    disableRememberMe: true\n  }\n}, {\n  post() {\n    // reset own keys\n    if (this.isUserFromParams()) {\n      resetUserE2EEncriptionKey(this.userId, false);\n      return API.v1.success();\n    } // reset other user keys\n\n\n    const user = this.getUserFromParams();\n\n    if (!user) {\n      throw new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n    }\n\n    if (!settings.get('Accounts_TwoFactorAuthentication_Enforce_Password_Fallback')) {\n      throw new Meteor.Error('error-not-allowed', 'Not allowed');\n    }\n\n    if (!hasPermission(Meteor.userId(), 'edit-other-user-e2ee')) {\n      throw new Meteor.Error('error-not-allowed', 'Not allowed');\n    }\n\n    if (!resetUserE2EEncriptionKey(user._id, true)) {\n      return API.v1.failure();\n    }\n\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.resetTOTP', {\n  authRequired: true,\n  twoFactorRequired: true,\n  twoFactorOptions: {\n    disableRememberMe: true\n  }\n}, {\n  post() {\n    // reset own keys\n    if (this.isUserFromParams()) {\n      Promise.await(resetTOTP(this.userId, false));\n      return API.v1.success();\n    } // reset other user keys\n\n\n    const user = this.getUserFromParams();\n\n    if (!user) {\n      throw new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n    }\n\n    if (!settings.get('Accounts_TwoFactorAuthentication_Enforce_Password_Fallback')) {\n      throw new Meteor.Error('error-not-allowed', 'Not allowed');\n    }\n\n    if (!hasPermission(Meteor.userId(), 'edit-other-user-totp')) {\n      throw new Meteor.Error('error-not-allowed', 'Not allowed');\n    }\n\n    Promise.await(resetTOTP(user._id, true));\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('users.listTeams', {\n  authRequired: true\n}, {\n  get() {\n    check(this.queryParams, Match.ObjectIncluding({\n      userId: Match.Maybe(String)\n    }));\n    const {\n      userId\n    } = this.queryParams;\n\n    if (!userId) {\n      throw new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n    } // If the caller has permission to view all teams, there's no need to filter the teams\n\n\n    const adminId = hasPermission(this.userId, 'view-all-teams') ? undefined : this.userId;\n    const teams = Promise.await(Team.findBySubscribedUserIds(userId, adminId));\n    return API.v1.success({\n      teams\n    });\n  }\n\n});\nAPI.v1.addRoute('users.logout', {\n  authRequired: true\n}, {\n  post() {\n    const userId = this.bodyParams.userId || this.userId;\n\n    if (userId !== this.userId && !hasPermission(this.userId, 'logout-other-user')) {\n      return API.v1.unauthorized();\n    } // this method logs the user out automatically, if successful returns 1, otherwise 0\n\n\n    if (!Users.unsetLoginTokens(userId)) {\n      throw new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n    }\n\n    return API.v1.success({\n      message: \"User \".concat(userId, \" has been logged out!\")\n    });\n  }\n\n});\nsettings.watch('Rate_Limiter_Limit_RegisterUser', value => {\n  const userRegisterRoute = '/api/v1/users.registerpost';\n  API.v1.updateRateLimiterDictionaryForRoute(userRegisterRoute, value);\n});","map":{"version":3,"sources":["app/api/server/v1/users.js"],"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","Meteor","Accounts","Match","check","TAPi18n","_","Users","Subscriptions","UsersRaw","hasPermission","settings","getURL","validateCustomFields","saveUser","saveCustomFieldsWithoutValidation","checkUsernameAvailability","setUserAvatar","saveCustomFields","setStatusText","getFullUserDataByIdOrUsername","API","getUploadFormData","findUsersToAutocomplete","getInclusiveFields","getNonEmptyFields","getNonEmptyQuery","getUserForCheck","emailCheck","resetUserE2EEncriptionKey","setUserStatus","resetTOTP","Team","v1","addRoute","authRequired","post","bodyParams","email","String","name","password","username","active","Maybe","Boolean","bio","nickname","statusText","roles","Array","joinDefaultChannels","requirePasswordChange","setRandomPassword","sendWelcomeEmail","verified","customFields","Object","newUserId","userId","runAsUser","call","fields","parseJsonQuery","success","user","findOneById","unauthorized","getUserFromParams","confirmRelinquish","requestParams","_id","failure","get","Error","url","cdn","full","response","setHeader","statusCode","body","activeStatus","daysIdle","Integer","role","Optional","lastLoggedIn","Date","setDate","getDate","count","setActiveNotLoggedInAfterWithRole","isUserFromParams","presence","status","connectionStatus","statusConnection","lastLogin","undefined","filterId","filterUsername","myself","userRooms","rooms","findByUserId","rid","t","unread","sort","fetch","offset","getPaginationItems","query","nonEmptyQuery","nonEmptyFields","inclusiveFields","actualSort","nameInsensitive","limit","$limit","result","Promise","await","col","aggregate","$match","$project","$addFields","$toLower","$facet","sortedResults","$sort","$skip","totalCount","$group","total","$sum","toArray","users","length","rateLimiterOptions","numRequestsAllowed","intervalTimeInMS","ObjectIncluding","method","avatarUrl","canEditOtherUserAvatar","findOne","request","image","sentTheUserByFormData","findOneByUsernameIgnoringCase","isAnotherUser","fileBuffer","mimetype","message","validStatus","includes","update","$set","statusDefault","twoFactorRequired","data","userData","extend","currentPassword","newPassword","realname","typedPassword","twoFactorOptions","twoFactorCode","twoFactorMethod","defaultFieldsToExclude","preferences","language","__","toUpperCase","newRoomNotification","newMessageNotification","clockMode","Number","useEmojis","convertAsciiEmoji","saveMobileBandwidth","collapseMediaByDefault","autoImageLoad","emailNotificationMode","unreadAlert","notificationsSoundVolume","desktopNotifications","pushNotifications","enableAutoAway","highlights","desktopNotificationRequireInteraction","messageViewMode","showMessageInMainThread","hideUsernames","hideRoles","displayAvatars","hideFlexTab","sendOnEnter","sidebarShowFavorites","sidebarShowUnread","sidebarSortby","sidebarViewMode","sidebarDisplayAvatar","sidebarGroupByType","muteFocusedConversations","tokenName","bypassTwoFactor","token","loginTokens","getLoginTokensByUserId","getPersonalAccessTokens","services","resume","filter","loginToken","type","map","createdAt","lastTokenPart","tokens","enableEmail2FAByUserId","disableRememberMe","disableEmail2FAByUserId","emailOrUsername","logger","error","sendEmailCode","from","ids","queryParams","options","utcOffset","avatarETag","findNotOfflineByIds","isArray","split","ts","diff","now","findNotIdUpdatedFrom","findUsersNotOffline","fullExport","requested","exportOperation","hashedToken","_hashLoginToken","headers","removeNonPATLoginTokensExcept","me","projection","find","tokenExpires","when","getTime","selector","uid","JSON","parse","adminId","teams","findBySubscribedUserIds","unsetLoginTokens","watch","value","userRegisterRoute","updateRateLimiterDictionaryForRoute"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport _ from 'underscore';\n\nimport { Users, Subscriptions } from '../../../models/server';\nimport { Users as UsersRaw } from '../../../models/server/raw';\nimport { hasPermission } from '../../../authorization';\nimport { settings } from '../../../settings/server';\nimport { getURL } from '../../../utils';\nimport {\n\tvalidateCustomFields,\n\tsaveUser,\n\tsaveCustomFieldsWithoutValidation,\n\tcheckUsernameAvailability,\n\tsetUserAvatar,\n\tsaveCustomFields,\n\tsetStatusText,\n} from '../../../lib/server';\nimport { getFullUserDataByIdOrUsername } from '../../../lib/server/functions/getFullUserData';\nimport { API } from '../api';\nimport { getUploadFormData } from '../lib/getUploadFormData';\nimport { findUsersToAutocomplete, getInclusiveFields, getNonEmptyFields, getNonEmptyQuery } from '../lib/users';\nimport { getUserForCheck, emailCheck } from '../../../2fa/server/code';\nimport { resetUserE2EEncriptionKey } from '../../../../server/lib/resetUserE2EKey';\nimport { setUserStatus } from '../../../../imports/users-presence/server/activeUsers';\nimport { resetTOTP } from '../../../2fa/server/functions/resetTOTP';\nimport { Team } from '../../../../server/sdk';\n\nAPI.v1.addRoute(\n\t'users.create',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\temail: String,\n\t\t\t\tname: String,\n\t\t\t\tpassword: String,\n\t\t\t\tusername: String,\n\t\t\t\tactive: Match.Maybe(Boolean),\n\t\t\t\tbio: Match.Maybe(String),\n\t\t\t\tnickname: Match.Maybe(String),\n\t\t\t\tstatusText: Match.Maybe(String),\n\t\t\t\troles: Match.Maybe(Array),\n\t\t\t\tjoinDefaultChannels: Match.Maybe(Boolean),\n\t\t\t\trequirePasswordChange: Match.Maybe(Boolean),\n\t\t\t\tsetRandomPassword: Match.Maybe(Boolean),\n\t\t\t\tsendWelcomeEmail: Match.Maybe(Boolean),\n\t\t\t\tverified: Match.Maybe(Boolean),\n\t\t\t\tcustomFields: Match.Maybe(Object),\n\t\t\t});\n\n\t\t\t// New change made by pull request #5152\n\t\t\tif (typeof this.bodyParams.joinDefaultChannels === 'undefined') {\n\t\t\t\tthis.bodyParams.joinDefaultChannels = true;\n\t\t\t}\n\n\t\t\tif (this.bodyParams.customFields) {\n\t\t\t\tvalidateCustomFields(this.bodyParams.customFields);\n\t\t\t}\n\n\t\t\tconst newUserId = saveUser(this.userId, this.bodyParams);\n\n\t\t\tif (this.bodyParams.customFields) {\n\t\t\t\tsaveCustomFieldsWithoutValidation(newUserId, this.bodyParams.customFields);\n\t\t\t}\n\n\t\t\tif (typeof this.bodyParams.active !== 'undefined') {\n\t\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\t\tMeteor.call('setUserActiveStatus', newUserId, this.bodyParams.active);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst { fields } = this.parseJsonQuery();\n\n\t\t\treturn API.v1.success({ user: Users.findOneById(newUserId, { fields }) });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.delete',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tif (!hasPermission(this.userId, 'delete-user')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst user = this.getUserFromParams();\n\t\t\tconst { confirmRelinquish = false } = this.requestParams();\n\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tMeteor.call('deleteUser', user._id, confirmRelinquish);\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.deleteOwnAccount',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { password } = this.bodyParams;\n\t\t\tif (!password) {\n\t\t\t\treturn API.v1.failure('Body parameter \"password\" is required.');\n\t\t\t}\n\t\t\tif (!settings.get('Accounts_AllowDeleteOwnAccount')) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\n\t\t\tconst { confirmRelinquish = false } = this.requestParams();\n\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tMeteor.call('deleteUserOwnAccount', password, confirmRelinquish);\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.getAvatar',\n\t{ authRequired: false },\n\t{\n\t\tget() {\n\t\t\tconst user = this.getUserFromParams();\n\n\t\t\tconst url = getURL(`/avatar/${user.username}`, { cdn: false, full: true });\n\t\t\tthis.response.setHeader('Location', url);\n\n\t\t\treturn {\n\t\t\t\tstatusCode: 307,\n\t\t\t\tbody: url,\n\t\t\t};\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.setActiveStatus',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tuserId: String,\n\t\t\t\tactiveStatus: Boolean,\n\t\t\t\tconfirmRelinquish: Match.Maybe(Boolean),\n\t\t\t});\n\n\t\t\tif (!hasPermission(this.userId, 'edit-other-user-active-status')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tconst { userId, activeStatus, confirmRelinquish = false } = this.bodyParams;\n\t\t\t\tMeteor.call('setUserActiveStatus', userId, activeStatus, confirmRelinquish);\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tuser: Users.findOneById(this.bodyParams.userId, { fields: { active: 1 } }),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.deactivateIdle',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tdaysIdle: Match.Integer,\n\t\t\t\trole: Match.Optional(String),\n\t\t\t});\n\n\t\t\tif (!hasPermission(this.userId, 'edit-other-user-active-status')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst { daysIdle, role = 'user' } = this.bodyParams;\n\n\t\t\tconst lastLoggedIn = new Date();\n\t\t\tlastLoggedIn.setDate(lastLoggedIn.getDate() - daysIdle);\n\n\t\t\tconst count = Users.setActiveNotLoggedInAfterWithRole(lastLoggedIn, role, false);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcount,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.getPresence',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (this.isUserFromParams()) {\n\t\t\t\tconst user = Users.findOneById(this.userId);\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tpresence: user.status,\n\t\t\t\t\tconnectionStatus: user.statusConnection,\n\t\t\t\t\tlastLogin: user.lastLogin,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst user = this.getUserFromParams();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tpresence: user.status,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.info',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { username, userId } = this.requestParams();\n\t\t\tconst { fields } = this.parseJsonQuery();\n\n\t\t\tcheck(userId, Match.Maybe(String));\n\t\t\tcheck(username, Match.Maybe(String));\n\n\t\t\tif (userId !== undefined && username !== undefined) {\n\t\t\t\tthrow new Meteor.Error('invalid-filter', 'Cannot filter by id and username at once');\n\t\t\t}\n\n\t\t\tif (!userId && !username) {\n\t\t\t\tthrow new Meteor.Error('invalid-filter', 'Must filter by id or username');\n\t\t\t}\n\n\t\t\tconst user = getFullUserDataByIdOrUsername({ userId: this.userId, filterId: userId, filterUsername: username });\n\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.failure('User not found.');\n\t\t\t}\n\t\t\tconst myself = user._id === this.userId;\n\t\t\tif (fields.userRooms === 1 && (myself || hasPermission(this.userId, 'view-other-user-channels'))) {\n\t\t\t\tuser.rooms = Subscriptions.findByUserId(user._id, {\n\t\t\t\t\tfields: {\n\t\t\t\t\t\trid: 1,\n\t\t\t\t\t\tname: 1,\n\t\t\t\t\t\tt: 1,\n\t\t\t\t\t\troles: 1,\n\t\t\t\t\t\tunread: 1,\n\t\t\t\t\t},\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tt: 1,\n\t\t\t\t\t\tname: 1,\n\t\t\t\t\t},\n\t\t\t\t}).fetch();\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tuser,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.list',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-d-room')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort, fields, query } = this.parseJsonQuery();\n\n\t\t\tconst nonEmptyQuery = getNonEmptyQuery(query);\n\t\t\tconst nonEmptyFields = getNonEmptyFields(fields);\n\n\t\t\tconst inclusiveFields = getInclusiveFields(nonEmptyFields);\n\n\t\t\tconst actualSort = sort && sort.name ? { nameInsensitive: sort.name, ...sort } : sort || { username: 1 };\n\n\t\t\tconst limit =\n\t\t\t\tcount !== 0\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$limit: count,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: [];\n\n\t\t\tconst result = Promise.await(\n\t\t\t\tUsersRaw.col\n\t\t\t\t\t.aggregate([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$match: nonEmptyQuery,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$project: inclusiveFields,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$addFields: {\n\t\t\t\t\t\t\t\tnameInsensitive: {\n\t\t\t\t\t\t\t\t\t$toLower: '$name',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$facet: {\n\t\t\t\t\t\t\t\tsortedResults: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$sort: actualSort,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$skip: offset,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t...limit,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\ttotalCount: [{ $group: { _id: null, total: { $sum: 1 } } }],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t])\n\t\t\t\t\t.toArray(),\n\t\t\t);\n\n\t\t\tconst {\n\t\t\t\tsortedResults: users,\n\t\t\t\ttotalCount: [{ total } = { total: 0 }],\n\t\t\t} = result[0];\n\n\t\t\treturn API.v1.success({\n\t\t\t\tusers,\n\t\t\t\tcount: users.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.register',\n\t{\n\t\tauthRequired: false,\n\t\trateLimiterOptions: {\n\t\t\tnumRequestsAllowed: settings.get('Rate_Limiter_Limit_RegisterUser'),\n\t\t\tintervalTimeInMS: settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'),\n\t\t},\n\t},\n\t{\n\t\tpost() {\n\t\t\tif (this.userId) {\n\t\t\t\treturn API.v1.failure('Logged in users can not register again.');\n\t\t\t}\n\n\t\t\t// We set their username here, so require it\n\t\t\t// The `registerUser` checks for the other requirements\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tusername: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (!checkUsernameAvailability(this.bodyParams.username)) {\n\t\t\t\treturn API.v1.failure('Username is already in use');\n\t\t\t}\n\n\t\t\t// Register the user\n\t\t\tconst userId = Meteor.call('registerUser', this.bodyParams);\n\n\t\t\t// Now set their username\n\t\t\tMeteor.runAsUser(userId, () => Meteor.call('setUsername', this.bodyParams.username));\n\t\t\tconst { fields } = this.parseJsonQuery();\n\n\t\t\treturn API.v1.success({ user: Users.findOneById(userId, { fields }) });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.resetAvatar',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst user = this.getUserFromParams();\n\n\t\t\tif (settings.get('Accounts_AllowUserAvatarChange') && user._id === this.userId) {\n\t\t\t\tMeteor.runAsUser(this.userId, () => Meteor.call('resetAvatar'));\n\t\t\t} else if (hasPermission(this.userId, 'edit-other-user-avatar')) {\n\t\t\t\tMeteor.runAsUser(this.userId, () => Meteor.call('resetAvatar', user._id));\n\t\t\t} else {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Reset avatar is not allowed', {\n\t\t\t\t\tmethod: 'users.resetAvatar',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.setAvatar',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tavatarUrl: Match.Maybe(String),\n\t\t\t\t\tuserId: Match.Maybe(String),\n\t\t\t\t\tusername: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst canEditOtherUserAvatar = hasPermission(this.userId, 'edit-other-user-avatar');\n\n\t\t\tif (!settings.get('Accounts_AllowUserAvatarChange') && !canEditOtherUserAvatar) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed', {\n\t\t\t\t\tmethod: 'users.setAvatar',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet user;\n\t\t\tif (this.isUserFromParams()) {\n\t\t\t\tuser = Meteor.users.findOne(this.userId);\n\t\t\t} else if (canEditOtherUserAvatar) {\n\t\t\t\tuser = this.getUserFromParams();\n\t\t\t} else {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tif (this.bodyParams.avatarUrl) {\n\t\t\t\tsetUserAvatar(user, this.bodyParams.avatarUrl, '', 'url');\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\tconst { image, ...fields } = await getUploadFormData({\n\t\t\t\trequest: this.request,\n\t\t\t});\n\n\t\t\tif (!image) {\n\t\t\t\treturn API.v1.failure(\"The 'image' param is required\");\n\t\t\t}\n\n\t\t\tconst sentTheUserByFormData = fields.userId || fields.username;\n\t\t\tif (sentTheUserByFormData) {\n\t\t\t\tif (fields.userId) {\n\t\t\t\t\tuser = Users.findOneById(fields.userId, { fields: { username: 1 } });\n\t\t\t\t} else if (fields.username) {\n\t\t\t\t\tuser = Users.findOneByUsernameIgnoringCase(fields.username, { fields: { username: 1 } });\n\t\t\t\t}\n\n\t\t\t\tif (!user) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'The optional \"userId\" or \"username\" param provided does not match any users');\n\t\t\t\t}\n\n\t\t\t\tconst isAnotherUser = this.userId !== user._id;\n\t\t\t\tif (isAnotherUser && !hasPermission(this.userId, 'edit-other-user-avatar')) {\n\t\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetUserAvatar(user, image.fileBuffer, image.mimetype, 'rest');\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.getStatus',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (this.isUserFromParams()) {\n\t\t\t\tconst user = Users.findOneById(this.userId);\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tmessage: user.statusText,\n\t\t\t\t\tconnectionStatus: user.statusConnection,\n\t\t\t\t\tstatus: user.status,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst user = this.getUserFromParams();\n\n\t\t\treturn API.v1.success({\n\t\t\t\t_id: user._id,\n\t\t\t\tmessage: user.statusText,\n\t\t\t\tstatus: user.status,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.setStatus',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tcheck(\n\t\t\t\tthis.bodyParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tstatus: Match.Maybe(String),\n\t\t\t\t\tmessage: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (!settings.get('Accounts_AllowUserStatusMessageChange')) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change status is not allowed', {\n\t\t\t\t\tmethod: 'users.setStatus',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet user;\n\t\t\tif (this.isUserFromParams()) {\n\t\t\t\tuser = Meteor.users.findOne(this.userId);\n\t\t\t} else if (hasPermission(this.userId, 'edit-other-user-info')) {\n\t\t\t\tuser = this.getUserFromParams();\n\t\t\t} else {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tMeteor.runAsUser(user._id, () => {\n\t\t\t\tif (this.bodyParams.message || this.bodyParams.message === '') {\n\t\t\t\t\tsetStatusText(user._id, this.bodyParams.message);\n\t\t\t\t}\n\t\t\t\tif (this.bodyParams.status) {\n\t\t\t\t\tconst validStatus = ['online', 'away', 'offline', 'busy'];\n\t\t\t\t\tif (validStatus.includes(this.bodyParams.status)) {\n\t\t\t\t\t\tconst { status } = this.bodyParams;\n\n\t\t\t\t\t\tif (status === 'offline' && !settings.get('Accounts_AllowInvisibleStatusOption')) {\n\t\t\t\t\t\t\tthrow new Meteor.Error('error-status-not-allowed', 'Invisible status is disabled', {\n\t\t\t\t\t\t\t\tmethod: 'users.setStatus',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tMeteor.users.update(user._id, {\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\tstatusDefault: status,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tsetUserStatus(user, status);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Meteor.Error('error-invalid-status', 'Valid status types include online, away, offline, and busy.', {\n\t\t\t\t\t\t\tmethod: 'users.setStatus',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.update',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tpost() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tuserId: String,\n\t\t\t\tdata: Match.ObjectIncluding({\n\t\t\t\t\temail: Match.Maybe(String),\n\t\t\t\t\tname: Match.Maybe(String),\n\t\t\t\t\tpassword: Match.Maybe(String),\n\t\t\t\t\tusername: Match.Maybe(String),\n\t\t\t\t\tbio: Match.Maybe(String),\n\t\t\t\t\tnickname: Match.Maybe(String),\n\t\t\t\t\tstatusText: Match.Maybe(String),\n\t\t\t\t\tactive: Match.Maybe(Boolean),\n\t\t\t\t\troles: Match.Maybe(Array),\n\t\t\t\t\tjoinDefaultChannels: Match.Maybe(Boolean),\n\t\t\t\t\trequirePasswordChange: Match.Maybe(Boolean),\n\t\t\t\t\tsendWelcomeEmail: Match.Maybe(Boolean),\n\t\t\t\t\tverified: Match.Maybe(Boolean),\n\t\t\t\t\tcustomFields: Match.Maybe(Object),\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tconst userData = _.extend({ _id: this.bodyParams.userId }, this.bodyParams.data);\n\n\t\t\tMeteor.runAsUser(this.userId, () => saveUser(this.userId, userData));\n\n\t\t\tif (this.bodyParams.data.customFields) {\n\t\t\t\tsaveCustomFields(this.bodyParams.userId, this.bodyParams.data.customFields);\n\t\t\t}\n\n\t\t\tif (typeof this.bodyParams.data.active !== 'undefined') {\n\t\t\t\tconst {\n\t\t\t\t\tuserId,\n\t\t\t\t\tdata: { active },\n\t\t\t\t\tconfirmRelinquish = false,\n\t\t\t\t} = this.bodyParams;\n\n\t\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\t\tMeteor.call('setUserActiveStatus', userId, active, confirmRelinquish);\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst { fields } = this.parseJsonQuery();\n\n\t\t\treturn API.v1.success({ user: Users.findOneById(this.bodyParams.userId, { fields }) });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.updateOwnBasicInfo',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tdata: Match.ObjectIncluding({\n\t\t\t\t\temail: Match.Maybe(String),\n\t\t\t\t\tname: Match.Maybe(String),\n\t\t\t\t\tusername: Match.Maybe(String),\n\t\t\t\t\tnickname: Match.Maybe(String),\n\t\t\t\t\tstatusText: Match.Maybe(String),\n\t\t\t\t\tcurrentPassword: Match.Maybe(String),\n\t\t\t\t\tnewPassword: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t\tcustomFields: Match.Maybe(Object),\n\t\t\t});\n\n\t\t\tconst userData = {\n\t\t\t\temail: this.bodyParams.data.email,\n\t\t\t\trealname: this.bodyParams.data.name,\n\t\t\t\tusername: this.bodyParams.data.username,\n\t\t\t\tnickname: this.bodyParams.data.nickname,\n\t\t\t\tstatusText: this.bodyParams.data.statusText,\n\t\t\t\tnewPassword: this.bodyParams.data.newPassword,\n\t\t\t\ttypedPassword: this.bodyParams.data.currentPassword,\n\t\t\t};\n\n\t\t\t// saveUserProfile now uses the default two factor authentication procedures, so we need to provide that\n\t\t\tconst twoFactorOptions = !userData.typedPassword\n\t\t\t\t? null\n\t\t\t\t: {\n\t\t\t\t\t\ttwoFactorCode: userData.typedPassword,\n\t\t\t\t\t\ttwoFactorMethod: 'password',\n\t\t\t\t  };\n\n\t\t\tMeteor.runAsUser(this.userId, () => Meteor.call('saveUserProfile', userData, this.bodyParams.customFields, twoFactorOptions));\n\n\t\t\treturn API.v1.success({\n\t\t\t\tuser: Users.findOneById(this.userId, { fields: API.v1.defaultFieldsToExclude }),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.createToken',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst user = this.getUserFromParams();\n\t\t\tlet data;\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tdata = Meteor.call('createToken', user._id);\n\t\t\t});\n\t\t\treturn data ? API.v1.success({ data }) : API.v1.unauthorized();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.getPreferences',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst user = Users.findOneById(this.userId);\n\t\t\tif (user.settings) {\n\t\t\t\tconst { preferences = {} } = user.settings;\n\t\t\t\tpreferences.language = user.language;\n\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tpreferences,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn API.v1.failure(TAPi18n.__('Accounts_Default_User_Preferences_not_available').toUpperCase());\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.setPreferences',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tuserId: Match.Maybe(String),\n\t\t\t\tdata: Match.ObjectIncluding({\n\t\t\t\t\tnewRoomNotification: Match.Maybe(String),\n\t\t\t\t\tnewMessageNotification: Match.Maybe(String),\n\t\t\t\t\tclockMode: Match.Maybe(Number),\n\t\t\t\t\tuseEmojis: Match.Maybe(Boolean),\n\t\t\t\t\tconvertAsciiEmoji: Match.Maybe(Boolean),\n\t\t\t\t\tsaveMobileBandwidth: Match.Maybe(Boolean),\n\t\t\t\t\tcollapseMediaByDefault: Match.Maybe(Boolean),\n\t\t\t\t\tautoImageLoad: Match.Maybe(Boolean),\n\t\t\t\t\temailNotificationMode: Match.Maybe(String),\n\t\t\t\t\tunreadAlert: Match.Maybe(Boolean),\n\t\t\t\t\tnotificationsSoundVolume: Match.Maybe(Number),\n\t\t\t\t\tdesktopNotifications: Match.Maybe(String),\n\t\t\t\t\tpushNotifications: Match.Maybe(String),\n\t\t\t\t\tenableAutoAway: Match.Maybe(Boolean),\n\t\t\t\t\thighlights: Match.Maybe(Array),\n\t\t\t\t\tdesktopNotificationRequireInteraction: Match.Maybe(Boolean),\n\t\t\t\t\tmessageViewMode: Match.Maybe(Number),\n\t\t\t\t\tshowMessageInMainThread: Match.Maybe(Boolean),\n\t\t\t\t\thideUsernames: Match.Maybe(Boolean),\n\t\t\t\t\thideRoles: Match.Maybe(Boolean),\n\t\t\t\t\tdisplayAvatars: Match.Maybe(Boolean),\n\t\t\t\t\thideFlexTab: Match.Maybe(Boolean),\n\t\t\t\t\tsendOnEnter: Match.Maybe(String),\n\t\t\t\t\tlanguage: Match.Maybe(String),\n\t\t\t\t\tsidebarShowFavorites: Match.Optional(Boolean),\n\t\t\t\t\tsidebarShowUnread: Match.Optional(Boolean),\n\t\t\t\t\tsidebarSortby: Match.Optional(String),\n\t\t\t\t\tsidebarViewMode: Match.Optional(String),\n\t\t\t\t\tsidebarDisplayAvatar: Match.Optional(Boolean),\n\t\t\t\t\tsidebarGroupByType: Match.Optional(Boolean),\n\t\t\t\t\tmuteFocusedConversations: Match.Optional(Boolean),\n\t\t\t\t}),\n\t\t\t});\n\t\t\tif (this.bodyParams.userId && this.bodyParams.userId !== this.userId && !hasPermission(this.userId, 'edit-other-user-info')) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing user is not allowed');\n\t\t\t}\n\t\t\tconst userId = this.bodyParams.userId ? this.bodyParams.userId : this.userId;\n\t\t\tif (!Users.findOneById(userId)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'The optional \"userId\" param provided does not match any users');\n\t\t\t}\n\n\t\t\tMeteor.runAsUser(userId, () => Meteor.call('saveUserPreferences', this.bodyParams.data));\n\t\t\tconst user = Users.findOneById(userId, {\n\t\t\t\tfields: {\n\t\t\t\t\t'settings.preferences': 1,\n\t\t\t\t\t'language': 1,\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tuser: {\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tpreferences: {\n\t\t\t\t\t\t\t...user.settings.preferences,\n\t\t\t\t\t\t\tlanguage: user.language,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.forgotPassword',\n\t{ authRequired: false },\n\t{\n\t\tpost() {\n\t\t\tconst { email } = this.bodyParams;\n\t\t\tif (!email) {\n\t\t\t\treturn API.v1.failure(\"The 'email' param is required\");\n\t\t\t}\n\n\t\t\tMeteor.call('sendForgotPasswordEmail', email);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.getUsernameSuggestion',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst result = Meteor.runAsUser(this.userId, () => Meteor.call('getUsernameSuggestion'));\n\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.generatePersonalAccessToken',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { tokenName, bypassTwoFactor } = this.bodyParams;\n\t\t\tif (!tokenName) {\n\t\t\t\treturn API.v1.failure(\"The 'tokenName' param is required\");\n\t\t\t}\n\t\t\tconst token = Meteor.runAsUser(this.userId, () => Meteor.call('personalAccessTokens:generateToken', { tokenName, bypassTwoFactor }));\n\n\t\t\treturn API.v1.success({ token });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.regeneratePersonalAccessToken',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { tokenName } = this.bodyParams;\n\t\t\tif (!tokenName) {\n\t\t\t\treturn API.v1.failure(\"The 'tokenName' param is required\");\n\t\t\t}\n\t\t\tconst token = Meteor.runAsUser(this.userId, () => Meteor.call('personalAccessTokens:regenerateToken', { tokenName }));\n\n\t\t\treturn API.v1.success({ token });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.getPersonalAccessTokens',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'create-personal-access-tokens')) {\n\t\t\t\tthrow new Meteor.Error('not-authorized', 'Not Authorized');\n\t\t\t}\n\t\t\tconst loginTokens = Users.getLoginTokensByUserId(this.userId).fetch()[0];\n\t\t\tconst getPersonalAccessTokens = () =>\n\t\t\t\tloginTokens.services.resume.loginTokens\n\t\t\t\t\t.filter((loginToken) => loginToken.type && loginToken.type === 'personalAccessToken')\n\t\t\t\t\t.map((loginToken) => ({\n\t\t\t\t\t\tname: loginToken.name,\n\t\t\t\t\t\tcreatedAt: loginToken.createdAt,\n\t\t\t\t\t\tlastTokenPart: loginToken.lastTokenPart,\n\t\t\t\t\t\tbypassTwoFactor: loginToken.bypassTwoFactor,\n\t\t\t\t\t}));\n\n\t\t\treturn API.v1.success({\n\t\t\t\ttokens: loginTokens ? getPersonalAccessTokens() : [],\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.removePersonalAccessToken',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { tokenName } = this.bodyParams;\n\t\t\tif (!tokenName) {\n\t\t\t\treturn API.v1.failure(\"The 'tokenName' param is required\");\n\t\t\t}\n\t\t\tMeteor.runAsUser(this.userId, () =>\n\t\t\t\tMeteor.call('personalAccessTokens:removeToken', {\n\t\t\t\t\ttokenName,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.2fa.enableEmail',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tUsers.enableEmail2FAByUserId(this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.2fa.disableEmail',\n\t{ authRequired: true, twoFactorRequired: true, twoFactorOptions: { disableRememberMe: true } },\n\t{\n\t\tpost() {\n\t\t\tUsers.disableEmail2FAByUserId(this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute('users.2fa.sendEmailCode', {\n\tpost() {\n\t\tconst { emailOrUsername } = this.bodyParams;\n\n\t\tif (!emailOrUsername) {\n\t\t\tthrow new Meteor.Error('error-parameter-required', 'emailOrUsername is required');\n\t\t}\n\n\t\tconst method = emailOrUsername.includes('@') ? 'findOneByEmailAddress' : 'findOneByUsername';\n\t\tconst userId = this.userId || Users[method](emailOrUsername, { fields: { _id: 1 } })?._id;\n\n\t\tif (!userId) {\n\t\t\tthis.logger.error('[2fa] User was not found when requesting 2fa email code');\n\t\t\treturn API.v1.success();\n\t\t}\n\n\t\temailCheck.sendEmailCode(getUserForCheck(userId));\n\n\t\treturn API.v1.success();\n\t},\n});\n\nAPI.v1.addRoute(\n\t'users.presence',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { from, ids } = this.queryParams;\n\n\t\t\tconst options = {\n\t\t\t\tfields: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t\tname: 1,\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tutcOffset: 1,\n\t\t\t\t\tstatusText: 1,\n\t\t\t\t\tavatarETag: 1,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tif (ids) {\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tusers: Users.findNotOfflineByIds(Array.isArray(ids) ? ids : ids.split(','), options).fetch(),\n\t\t\t\t\tfull: false,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (from) {\n\t\t\t\tconst ts = new Date(from);\n\t\t\t\tconst diff = (Date.now() - ts) / 1000 / 60;\n\n\t\t\t\tif (diff < 10) {\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tusers: Users.findNotIdUpdatedFrom(this.userId, ts, options).fetch(),\n\t\t\t\t\t\tfull: false,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tusers: Users.findUsersNotOffline(options).fetch(),\n\t\t\t\tfull: true,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.requestDataDownload',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { fullExport = false } = this.queryParams;\n\t\t\tconst result = Meteor.runAsUser(this.userId, () => Meteor.call('requestDataDownload', { fullExport: fullExport === 'true' }));\n\n\t\t\treturn API.v1.success({\n\t\t\t\trequested: result.requested,\n\t\t\t\texportOperation: result.exportOperation,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.logoutOtherClients',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\ttry {\n\t\t\t\tconst hashedToken = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n\n\t\t\t\tif (!(await UsersRaw.removeNonPATLoginTokensExcept(this.userId, hashedToken))) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n\t\t\t\t}\n\n\t\t\t\tconst me = await UsersRaw.findOneById(this.userId, { projection: { 'services.resume.loginTokens': 1 } });\n\n\t\t\t\tconst token = me.services.resume.loginTokens.find((token) => token.hashedToken === hashedToken);\n\n\t\t\t\tconst tokenExpires = new Date(token.when.getTime() + settings.get('Accounts_LoginExpiration') * 1000);\n\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\ttoken: this.request.headers['x-auth-token'],\n\t\t\t\t\ttokenExpires,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treturn API.v1.failure(error);\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.autocomplete',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { selector } = this.queryParams;\n\n\t\t\tif (!selector) {\n\t\t\t\treturn API.v1.failure(\"The 'selector' param is required\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindUsersToAutocomplete({\n\t\t\t\t\t\tuid: this.userId,\n\t\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.removeOtherTokens',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tAPI.v1.success(Meteor.call('removeOtherTokens'));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.resetE2EKey',\n\t{ authRequired: true, twoFactorRequired: true, twoFactorOptions: { disableRememberMe: true } },\n\t{\n\t\tpost() {\n\t\t\t// reset own keys\n\t\t\tif (this.isUserFromParams()) {\n\t\t\t\tresetUserE2EEncriptionKey(this.userId, false);\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\t// reset other user keys\n\t\t\tconst user = this.getUserFromParams();\n\t\t\tif (!user) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n\t\t\t}\n\n\t\t\tif (!settings.get('Accounts_TwoFactorAuthentication_Enforce_Password_Fallback')) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\n\t\t\tif (!hasPermission(Meteor.userId(), 'edit-other-user-e2ee')) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\n\t\t\tif (!resetUserE2EEncriptionKey(user._id, true)) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.resetTOTP',\n\t{ authRequired: true, twoFactorRequired: true, twoFactorOptions: { disableRememberMe: true } },\n\t{\n\t\tpost() {\n\t\t\t// reset own keys\n\t\t\tif (this.isUserFromParams()) {\n\t\t\t\tPromise.await(resetTOTP(this.userId, false));\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\t// reset other user keys\n\t\t\tconst user = this.getUserFromParams();\n\t\t\tif (!user) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n\t\t\t}\n\n\t\t\tif (!settings.get('Accounts_TwoFactorAuthentication_Enforce_Password_Fallback')) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\n\t\t\tif (!hasPermission(Meteor.userId(), 'edit-other-user-totp')) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t\t\t}\n\n\t\t\tPromise.await(resetTOTP(user._id, true));\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.listTeams',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(\n\t\t\t\tthis.queryParams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tuserId: Match.Maybe(String),\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst { userId } = this.queryParams;\n\n\t\t\tif (!userId) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n\t\t\t}\n\n\t\t\t// If the caller has permission to view all teams, there's no need to filter the teams\n\t\t\tconst adminId = hasPermission(this.userId, 'view-all-teams') ? undefined : this.userId;\n\n\t\t\tconst teams = Promise.await(Team.findBySubscribedUserIds(userId, adminId));\n\n\t\t\treturn API.v1.success({\n\t\t\t\tteams,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'users.logout',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst userId = this.bodyParams.userId || this.userId;\n\n\t\t\tif (userId !== this.userId && !hasPermission(this.userId, 'logout-other-user')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\t// this method logs the user out automatically, if successful returns 1, otherwise 0\n\t\t\tif (!Users.unsetLoginTokens(userId)) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user-id', 'Invalid user id');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tmessage: `User ${userId} has been logged out!`,\n\t\t\t});\n\t\t},\n\t},\n);\n\nsettings.watch('Rate_Limiter_Limit_RegisterUser', (value) => {\n\tconst userRegisterRoute = '/api/v1/users.registerpost';\n\n\tAPI.v1.updateRateLimiterDictionaryForRoute(userRegisterRoute, value);\n});\n"]},"sourceType":"module","hash":"e26f4f3913f3d65fc696c77630c6ae9af9aaf907"}

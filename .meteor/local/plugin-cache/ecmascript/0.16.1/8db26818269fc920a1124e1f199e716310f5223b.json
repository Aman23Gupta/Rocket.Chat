{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterCreateDirectRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/hooks/afterCreateDirectRoom.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterCreateDirectRoom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterCreateDirectRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/hooks/afterCreateDirectRoom.js"}},"code":"module.export({\n  definition: () => definition\n});\nlet clientLogger;\nmodule.link(\"../lib/logger\", {\n  clientLogger(v) {\n    clientLogger = v;\n  }\n\n}, 0);\nlet FederationRoomEvents, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  FederationRoomEvents(v) {\n    FederationRoomEvents = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 1);\nlet normalizers;\nmodule.link(\"../normalizers\", {\n  normalizers(v) {\n    normalizers = v;\n  }\n\n}, 2);\nlet deleteRoom;\nmodule.link(\"../../../lib/server/functions\", {\n  deleteRoom(v) {\n    deleteRoom = v;\n  }\n\n}, 3);\nlet getFederationDomain;\nmodule.link(\"../lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 4);\nlet dispatchEvents;\nmodule.link(\"../handler\", {\n  dispatchEvents(v) {\n    dispatchEvents = v;\n  }\n\n}, 5);\nlet isFullyQualified;\nmodule.link(\"../functions/helpers\", {\n  isFullyQualified(v) {\n    isFullyQualified = v;\n  }\n\n}, 6);\n\nfunction afterCreateDirectRoom(room, extras) {\n  return Promise.asyncApply(() => {\n    clientLogger.debug({\n      msg: 'afterCreateDirectRoom',\n      room,\n      extras\n    }); // If the room is federated, ignore\n\n    if (room.federation) {\n      return room;\n    } // Check if there is a federated user on this direct room\n\n\n    const hasFederatedUser = room.usernames.some(isFullyQualified); // If there are not federated users on this room, ignore it\n\n    if (!hasFederatedUser) {\n      return room;\n    }\n\n    try {\n      //\n      // Genesis\n      //\n      // Normalize room\n      const normalizedRoom = normalizers.normalizeRoom(room); // Ensure a genesis event for this room\n\n      const genesisEvent = Promise.await(FederationRoomEvents.createGenesisEvent(getFederationDomain(), normalizedRoom));\n      const events = Promise.await(Promise.all(extras.members.map(member => {\n        const normalizedMember = normalizers.normalizeUser(member);\n        const sourceSubscription = Subscriptions.findOne({\n          'rid': normalizedRoom._id,\n          'u._id': normalizedMember._id\n        });\n        const normalizedSourceSubscription = normalizers.normalizeSubscription(sourceSubscription); // Build the user event\n\n        return FederationRoomEvents.createAddUserEvent(getFederationDomain(), normalizedRoom._id, normalizedMember, normalizedSourceSubscription);\n      }))); // Dispatch the events\n\n      Promise.await(dispatchEvents(normalizedRoom.federation.domains, [genesisEvent, ...events]));\n    } catch (err) {\n      Promise.await(deleteRoom(room._id));\n      clientLogger.error({\n        msg: 'afterCreateDirectRoom => Could not create federated room:',\n        err\n      });\n    }\n\n    return room;\n  });\n}\n\nconst definition = {\n  hook: 'afterCreateDirectRoom',\n  callback: (room, extras) => Promise.await(afterCreateDirectRoom(room, extras)),\n  id: 'federation-after-create-direct-room'\n};","map":{"version":3,"sources":["app/federation/server/hooks/afterCreateDirectRoom.js"],"names":["module","export","definition","clientLogger","link","v","FederationRoomEvents","Subscriptions","normalizers","deleteRoom","getFederationDomain","dispatchEvents","isFullyQualified","afterCreateDirectRoom","room","extras","debug","msg","federation","hasFederatedUser","usernames","some","normalizedRoom","normalizeRoom","genesisEvent","createGenesisEvent","events","Promise","all","members","map","member","normalizedMember","normalizeUser","sourceSubscription","findOne","_id","normalizedSourceSubscription","normalizeSubscription","createAddUserEvent","domains","err","error","hook","callback","await","id"],"mappings":"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","sourcesContent":["import { clientLogger } from '../lib/logger';\nimport { FederationRoomEvents, Subscriptions } from '../../../models/server';\nimport { normalizers } from '../normalizers';\nimport { deleteRoom } from '../../../lib/server/functions';\nimport { getFederationDomain } from '../lib/getFederationDomain';\nimport { dispatchEvents } from '../handler';\nimport { isFullyQualified } from '../functions/helpers';\n\nasync function afterCreateDirectRoom(room, extras) {\n\tclientLogger.debug({ msg: 'afterCreateDirectRoom', room, extras });\n\n\t// If the room is federated, ignore\n\tif (room.federation) {\n\t\treturn room;\n\t}\n\n\t// Check if there is a federated user on this direct room\n\tconst hasFederatedUser = room.usernames.some(isFullyQualified);\n\n\t// If there are not federated users on this room, ignore it\n\tif (!hasFederatedUser) {\n\t\treturn room;\n\t}\n\n\ttry {\n\t\t//\n\t\t// Genesis\n\t\t//\n\n\t\t// Normalize room\n\t\tconst normalizedRoom = normalizers.normalizeRoom(room);\n\n\t\t// Ensure a genesis event for this room\n\t\tconst genesisEvent = await FederationRoomEvents.createGenesisEvent(getFederationDomain(), normalizedRoom);\n\n\t\tconst events = await Promise.all(\n\t\t\textras.members.map((member) => {\n\t\t\t\tconst normalizedMember = normalizers.normalizeUser(member);\n\n\t\t\t\tconst sourceSubscription = Subscriptions.findOne({\n\t\t\t\t\t'rid': normalizedRoom._id,\n\t\t\t\t\t'u._id': normalizedMember._id,\n\t\t\t\t});\n\t\t\t\tconst normalizedSourceSubscription = normalizers.normalizeSubscription(sourceSubscription);\n\n\t\t\t\t// Build the user event\n\t\t\t\treturn FederationRoomEvents.createAddUserEvent(\n\t\t\t\t\tgetFederationDomain(),\n\t\t\t\t\tnormalizedRoom._id,\n\t\t\t\t\tnormalizedMember,\n\t\t\t\t\tnormalizedSourceSubscription,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\t// Dispatch the events\n\t\tawait dispatchEvents(normalizedRoom.federation.domains, [genesisEvent, ...events]);\n\t} catch (err) {\n\t\tawait deleteRoom(room._id);\n\n\t\tclientLogger.error({ msg: 'afterCreateDirectRoom => Could not create federated room:', err });\n\t}\n\n\treturn room;\n}\n\nexport const definition = {\n\thook: 'afterCreateDirectRoom',\n\tcallback: (room, extras) => Promise.await(afterCreateDirectRoom(room, extras)),\n\tid: 'federation-after-create-direct-room',\n};\n"]},"sourceType":"module","hash":"8db26818269fc920a1124e1f199e716310f5223b"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/irc/server/servers/RFC2813/index.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/index.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/irc/server/servers/RFC2813/index.js"}},"code":"let net;\nmodule.link(\"net\", {\n  default(v) {\n    net = v;\n  }\n\n}, 0);\nlet util;\nmodule.link(\"util\", {\n  default(v) {\n    util = v;\n  }\n\n}, 1);\nlet EventEmitter;\nmodule.link(\"events\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 2);\nlet parseMessage;\nmodule.link(\"./parseMessage\", {\n  default(v) {\n    parseMessage = v;\n  }\n\n}, 3);\nlet peerCommandHandlers;\nmodule.link(\"./peerCommandHandlers\", {\n  default(v) {\n    peerCommandHandlers = v;\n  }\n\n}, 4);\nlet localCommandHandlers;\nmodule.link(\"./localCommandHandlers\", {\n  default(v) {\n    localCommandHandlers = v;\n  }\n\n}, 5);\nlet Logger;\nmodule.link(\"../../../../logger/server\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 6);\nconst logger = new Logger('IRC Server');\n\nclass RFC2813 {\n  constructor(config) {\n    this.config = config; // Hold registered state\n\n    this.registerSteps = [];\n    this.isRegistered = false; // Hold peer server information\n\n    this.serverPrefix = null; // Hold the buffer while receiving\n\n    this.receiveBuffer = Buffer.from('');\n  }\n  /**\n   * Setup socket\n   */\n\n\n  setupSocket() {\n    // Setup socket\n    this.socket = new net.Socket();\n    this.socket.setNoDelay();\n    this.socket.setEncoding('utf-8');\n    this.socket.setKeepAlive(true);\n    this.socket.setTimeout(90000);\n    this.socket.on('data', this.onReceiveFromPeer.bind(this));\n    this.socket.on('connect', this.onConnect.bind(this));\n    this.socket.on('error', err => logger.error(err));\n    this.socket.on('timeout', () => this.log('Timeout'));\n    this.socket.on('close', () => this.log('Connection Closed')); // Setup local\n\n    this.on('onReceiveFromLocal', this.onReceiveFromLocal.bind(this));\n  }\n  /**\n   * Log helper\n   */\n\n\n  log(message) {\n    // TODO logger: debug?\n    logger.info(message);\n  }\n  /**\n   * Connect\n   */\n\n\n  register() {\n    this.log(\"Connecting to @\".concat(this.config.server.host, \":\").concat(this.config.server.port));\n\n    if (!this.socket) {\n      this.setupSocket();\n    }\n\n    this.socket.connect(this.config.server.port, this.config.server.host);\n  }\n  /**\n   * Disconnect\n   */\n\n\n  disconnect() {\n    this.log('Disconnecting from server.');\n\n    if (this.socket) {\n      this.socket.destroy();\n      this.socket = undefined;\n    }\n\n    this.isRegistered = false;\n    this.registerSteps = [];\n  }\n  /**\n   * Setup the server connection\n   */\n\n\n  onConnect() {\n    this.log('Connected! Registering as server...');\n    this.write({\n      command: 'PASS',\n      parameters: [this.config.passwords.local, '0210', 'ngircd']\n    });\n    this.write({\n      command: 'SERVER',\n      parameters: [this.config.server.name],\n      trailer: this.config.server.description\n    });\n  }\n  /**\n   * Sends a command message through the socket\n   */\n\n\n  write(command) {\n    let buffer = command.prefix ? \":\".concat(command.prefix, \" \") : '';\n    buffer += command.command;\n\n    if (command.parameters && command.parameters.length > 0) {\n      buffer += \" \".concat(command.parameters.join(' '));\n    }\n\n    if (command.trailer) {\n      buffer += \" :\".concat(command.trailer);\n    }\n\n    this.log(\"Sending Command: \".concat(buffer));\n    return this.socket.write(\"\".concat(buffer, \"\\r\\n\"));\n  }\n  /**\n   *\n   *\n   * Peer message handling\n   *\n   *\n   */\n\n\n  onReceiveFromPeer(chunk) {\n    if (typeof chunk === 'string') {\n      this.receiveBuffer += chunk;\n    } else {\n      this.receiveBuffer = Buffer.concat([this.receiveBuffer, chunk]);\n    }\n\n    const lines = this.receiveBuffer.toString().split(/\\r\\n|\\r|\\n|\\u0007/); // eslint-disable-line no-control-regex\n    // If the buffer does not end with \\r\\n, more chunks are coming\n\n    if (lines.pop()) {\n      return;\n    } // Reset the buffer\n\n\n    this.receiveBuffer = Buffer.from('');\n    lines.forEach(line => {\n      if (line.length && !line.startsWith('a')) {\n        const parsedMessage = parseMessage(line);\n\n        if (peerCommandHandlers[parsedMessage.command]) {\n          this.log(\"Handling peer message: \".concat(line));\n          const command = peerCommandHandlers[parsedMessage.command].call(this, parsedMessage);\n\n          if (command) {\n            this.log({\n              msg: 'Emitting peer command to local',\n              command\n            });\n            this.emit('peerCommand', command);\n          }\n        } else {\n          this.log({\n            msg: 'Unhandled peer message',\n            parsedMessage\n          });\n        }\n      }\n    });\n  }\n  /**\n   *\n   *\n   * Local message handling\n   *\n   *\n   */\n\n\n  onReceiveFromLocal(command, parameters) {\n    if (localCommandHandlers[command]) {\n      this.log(\"Handling local command: \".concat(command));\n      localCommandHandlers[command].call(this, parameters, this);\n    } else {\n      this.log({\n        msg: 'Unhandled local command',\n        command\n      });\n    }\n  }\n\n}\n\nutil.inherits(RFC2813, EventEmitter);\nmodule.exportDefault(RFC2813);","map":{"version":3,"sources":["app/irc/server/servers/RFC2813/index.js"],"names":["net","module","link","default","v","util","EventEmitter","parseMessage","peerCommandHandlers","localCommandHandlers","Logger","logger","RFC2813","constructor","config","registerSteps","isRegistered","serverPrefix","receiveBuffer","Buffer","from","setupSocket","socket","Socket","setNoDelay","setEncoding","setKeepAlive","setTimeout","on","onReceiveFromPeer","bind","onConnect","err","error","log","onReceiveFromLocal","message","info","register","server","host","port","connect","disconnect","destroy","undefined","write","command","parameters","passwords","local","name","trailer","description","buffer","prefix","length","join","chunk","concat","lines","toString","split","pop","forEach","line","startsWith","parsedMessage","call","msg","emit","inherits","exportDefault"],"mappings":"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","sourcesContent":["import net from 'net';\nimport util from 'util';\nimport { EventEmitter } from 'events';\n\nimport parseMessage from './parseMessage';\nimport peerCommandHandlers from './peerCommandHandlers';\nimport localCommandHandlers from './localCommandHandlers';\nimport { Logger } from '../../../../logger/server';\n\nconst logger = new Logger('IRC Server');\n\nclass RFC2813 {\n\tconstructor(config) {\n\t\tthis.config = config;\n\n\t\t// Hold registered state\n\t\tthis.registerSteps = [];\n\t\tthis.isRegistered = false;\n\n\t\t// Hold peer server information\n\t\tthis.serverPrefix = null;\n\n\t\t// Hold the buffer while receiving\n\t\tthis.receiveBuffer = Buffer.from('');\n\t}\n\n\t/**\n\t * Setup socket\n\t */\n\tsetupSocket() {\n\t\t// Setup socket\n\t\tthis.socket = new net.Socket();\n\t\tthis.socket.setNoDelay();\n\t\tthis.socket.setEncoding('utf-8');\n\t\tthis.socket.setKeepAlive(true);\n\t\tthis.socket.setTimeout(90000);\n\n\t\tthis.socket.on('data', this.onReceiveFromPeer.bind(this));\n\n\t\tthis.socket.on('connect', this.onConnect.bind(this));\n\t\tthis.socket.on('error', (err) => logger.error(err));\n\t\tthis.socket.on('timeout', () => this.log('Timeout'));\n\t\tthis.socket.on('close', () => this.log('Connection Closed'));\n\t\t// Setup local\n\t\tthis.on('onReceiveFromLocal', this.onReceiveFromLocal.bind(this));\n\t}\n\n\t/**\n\t * Log helper\n\t */\n\tlog(message) {\n\t\t// TODO logger: debug?\n\t\tlogger.info(message);\n\t}\n\n\t/**\n\t * Connect\n\t */\n\tregister() {\n\t\tthis.log(`Connecting to @${this.config.server.host}:${this.config.server.port}`);\n\n\t\tif (!this.socket) {\n\t\t\tthis.setupSocket();\n\t\t}\n\n\t\tthis.socket.connect(this.config.server.port, this.config.server.host);\n\t}\n\n\t/**\n\t * Disconnect\n\t */\n\tdisconnect() {\n\t\tthis.log('Disconnecting from server.');\n\n\t\tif (this.socket) {\n\t\t\tthis.socket.destroy();\n\t\t\tthis.socket = undefined;\n\t\t}\n\t\tthis.isRegistered = false;\n\t\tthis.registerSteps = [];\n\t}\n\n\t/**\n\t * Setup the server connection\n\t */\n\tonConnect() {\n\t\tthis.log('Connected! Registering as server...');\n\n\t\tthis.write({\n\t\t\tcommand: 'PASS',\n\t\t\tparameters: [this.config.passwords.local, '0210', 'ngircd'],\n\t\t});\n\n\t\tthis.write({\n\t\t\tcommand: 'SERVER',\n\t\t\tparameters: [this.config.server.name],\n\t\t\ttrailer: this.config.server.description,\n\t\t});\n\t}\n\n\t/**\n\t * Sends a command message through the socket\n\t */\n\twrite(command) {\n\t\tlet buffer = command.prefix ? `:${command.prefix} ` : '';\n\t\tbuffer += command.command;\n\n\t\tif (command.parameters && command.parameters.length > 0) {\n\t\t\tbuffer += ` ${command.parameters.join(' ')}`;\n\t\t}\n\n\t\tif (command.trailer) {\n\t\t\tbuffer += ` :${command.trailer}`;\n\t\t}\n\n\t\tthis.log(`Sending Command: ${buffer}`);\n\n\t\treturn this.socket.write(`${buffer}\\r\\n`);\n\t}\n\n\t/**\n\t *\n\t *\n\t * Peer message handling\n\t *\n\t *\n\t */\n\tonReceiveFromPeer(chunk) {\n\t\tif (typeof chunk === 'string') {\n\t\t\tthis.receiveBuffer += chunk;\n\t\t} else {\n\t\t\tthis.receiveBuffer = Buffer.concat([this.receiveBuffer, chunk]);\n\t\t}\n\n\t\tconst lines = this.receiveBuffer.toString().split(/\\r\\n|\\r|\\n|\\u0007/); // eslint-disable-line no-control-regex\n\n\t\t// If the buffer does not end with \\r\\n, more chunks are coming\n\t\tif (lines.pop()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset the buffer\n\t\tthis.receiveBuffer = Buffer.from('');\n\n\t\tlines.forEach((line) => {\n\t\t\tif (line.length && !line.startsWith('a')) {\n\t\t\t\tconst parsedMessage = parseMessage(line);\n\n\t\t\t\tif (peerCommandHandlers[parsedMessage.command]) {\n\t\t\t\t\tthis.log(`Handling peer message: ${line}`);\n\n\t\t\t\t\tconst command = peerCommandHandlers[parsedMessage.command].call(this, parsedMessage);\n\n\t\t\t\t\tif (command) {\n\t\t\t\t\t\tthis.log({ msg: 'Emitting peer command to local', command });\n\t\t\t\t\t\tthis.emit('peerCommand', command);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.log({ msg: 'Unhandled peer message', parsedMessage });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t *\n\t *\n\t * Local message handling\n\t *\n\t *\n\t */\n\tonReceiveFromLocal(command, parameters) {\n\t\tif (localCommandHandlers[command]) {\n\t\t\tthis.log(`Handling local command: ${command}`);\n\n\t\t\tlocalCommandHandlers[command].call(this, parameters, this);\n\t\t} else {\n\t\t\tthis.log({ msg: 'Unhandled local command', command });\n\t\t}\n\t}\n}\n\nutil.inherits(RFC2813, EventEmitter);\n\nexport default RFC2813;\n"]},"sourceType":"module","hash":"7c165702fc49437a8eff7d4f5bf7b1dc5f48e847"}

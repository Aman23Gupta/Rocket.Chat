{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/requestDataDownload.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/requestDataDownload.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/requestDataDownload.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/requestDataDownload.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/requestDataDownload.js"}},"code":"let fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 0);\nlet path;\nmodule.link(\"path\", {\n  default(v) {\n    path = v;\n  }\n\n}, 1);\nlet mkdirp;\nmodule.link(\"mkdirp\", {\n  default(v) {\n    mkdirp = v;\n  }\n\n}, 2);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 3);\nlet ExportOperations, UserDataFiles;\nmodule.link(\"../../app/models/server/raw\", {\n  ExportOperations(v) {\n    ExportOperations = v;\n  },\n\n  UserDataFiles(v) {\n    UserDataFiles = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\nlet DataExport;\nmodule.link(\"../../app/user-data-download/server/DataExport\", {\n  DataExport(v) {\n    DataExport = v;\n  }\n\n}, 6);\nlet tempFolder = '/tmp/userData';\n\nif (settings.get('UserData_FileSystemPath') != null) {\n  if (settings.get('UserData_FileSystemPath').trim() !== '') {\n    tempFolder = settings.get('UserData_FileSystemPath');\n  }\n}\n\nMeteor.methods({\n  requestDataDownload(_ref) {\n    return Promise.asyncApply(() => {\n      let {\n        fullExport = false\n      } = _ref;\n      const currentUserData = Meteor.user();\n      const userId = currentUserData._id;\n      const lastOperation = Promise.await(ExportOperations.findLastOperationByUser(userId, fullExport));\n      const requestDay = lastOperation ? lastOperation.createdAt : new Date();\n      const pendingOperationsBeforeMyRequestCount = Promise.await(ExportOperations.findAllPendingBeforeMyRequest(requestDay).count());\n\n      if (lastOperation) {\n        const yesterday = new Date();\n        yesterday.setUTCDate(yesterday.getUTCDate() - 1);\n\n        if (lastOperation.createdAt > yesterday) {\n          if (lastOperation.status === 'completed') {\n            const file = lastOperation.fileId ? Promise.await(UserDataFiles.findOneById(lastOperation.fileId)) : Promise.await(UserDataFiles.findLastFileByUser(userId));\n\n            if (file) {\n              return {\n                requested: false,\n                exportOperation: lastOperation,\n                url: DataExport.getPath(file._id),\n                pendingOperationsBeforeMyRequest: pendingOperationsBeforeMyRequestCount\n              };\n            }\n          }\n\n          return {\n            requested: false,\n            exportOperation: lastOperation,\n            url: null,\n            pendingOperationsBeforeMyRequest: pendingOperationsBeforeMyRequestCount\n          };\n        }\n      }\n\n      if (!fs.existsSync(tempFolder)) {\n        mkdirp.sync(tempFolder);\n      }\n\n      const exportOperation = {\n        userId: currentUserData._id,\n        roomList: null,\n        status: 'preparing',\n        fileList: [],\n        generatedFile: null,\n        fullExport,\n        userData: currentUserData\n      };\n      const id = Promise.await(ExportOperations.create(exportOperation));\n      exportOperation._id = id;\n      const folderName = path.join(tempFolder, id);\n\n      if (!fs.existsSync(folderName)) {\n        mkdirp.sync(folderName);\n      }\n\n      const assetsFolder = path.join(folderName, 'assets');\n\n      if (!fs.existsSync(assetsFolder)) {\n        mkdirp.sync(assetsFolder);\n      }\n\n      exportOperation.exportPath = folderName;\n      exportOperation.assetsPath = assetsFolder;\n      exportOperation.status = 'pending';\n      Promise.await(ExportOperations.updateOperation(exportOperation));\n      return {\n        requested: true,\n        exportOperation,\n        url: null,\n        pendingOperationsBeforeMyRequest: pendingOperationsBeforeMyRequestCount\n      };\n    });\n  }\n\n});","map":{"version":3,"sources":["server/methods/requestDataDownload.js"],"names":["fs","module","link","default","v","path","mkdirp","Meteor","ExportOperations","UserDataFiles","settings","DataExport","tempFolder","get","trim","methods","requestDataDownload","fullExport","currentUserData","user","userId","_id","lastOperation","findLastOperationByUser","requestDay","createdAt","Date","pendingOperationsBeforeMyRequestCount","findAllPendingBeforeMyRequest","count","yesterday","setUTCDate","getUTCDate","status","file","fileId","findOneById","findLastFileByUser","requested","exportOperation","url","getPath","pendingOperationsBeforeMyRequest","existsSync","sync","roomList","fileList","generatedFile","userData","id","create","folderName","join","assetsFolder","exportPath","assetsPath","updateOperation"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport mkdirp from 'mkdirp';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ExportOperations, UserDataFiles } from '../../app/models/server/raw';\nimport { settings } from '../../app/settings/server';\nimport { DataExport } from '../../app/user-data-download/server/DataExport';\n\nlet tempFolder = '/tmp/userData';\nif (settings.get('UserData_FileSystemPath') != null) {\n\tif (settings.get('UserData_FileSystemPath').trim() !== '') {\n\t\ttempFolder = settings.get('UserData_FileSystemPath');\n\t}\n}\n\nMeteor.methods({\n\tasync requestDataDownload({ fullExport = false }) {\n\t\tconst currentUserData = Meteor.user();\n\t\tconst userId = currentUserData._id;\n\n\t\tconst lastOperation = await ExportOperations.findLastOperationByUser(userId, fullExport);\n\t\tconst requestDay = lastOperation ? lastOperation.createdAt : new Date();\n\t\tconst pendingOperationsBeforeMyRequestCount = await ExportOperations.findAllPendingBeforeMyRequest(requestDay).count();\n\n\t\tif (lastOperation) {\n\t\t\tconst yesterday = new Date();\n\t\t\tyesterday.setUTCDate(yesterday.getUTCDate() - 1);\n\n\t\t\tif (lastOperation.createdAt > yesterday) {\n\t\t\t\tif (lastOperation.status === 'completed') {\n\t\t\t\t\tconst file = lastOperation.fileId\n\t\t\t\t\t\t? await UserDataFiles.findOneById(lastOperation.fileId)\n\t\t\t\t\t\t: await UserDataFiles.findLastFileByUser(userId);\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\trequested: false,\n\t\t\t\t\t\t\texportOperation: lastOperation,\n\t\t\t\t\t\t\turl: DataExport.getPath(file._id),\n\t\t\t\t\t\t\tpendingOperationsBeforeMyRequest: pendingOperationsBeforeMyRequestCount,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\trequested: false,\n\t\t\t\t\texportOperation: lastOperation,\n\t\t\t\t\turl: null,\n\t\t\t\t\tpendingOperationsBeforeMyRequest: pendingOperationsBeforeMyRequestCount,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (!fs.existsSync(tempFolder)) {\n\t\t\tmkdirp.sync(tempFolder);\n\t\t}\n\n\t\tconst exportOperation = {\n\t\t\tuserId: currentUserData._id,\n\t\t\troomList: null,\n\t\t\tstatus: 'preparing',\n\t\t\tfileList: [],\n\t\t\tgeneratedFile: null,\n\t\t\tfullExport,\n\t\t\tuserData: currentUserData,\n\t\t};\n\n\t\tconst id = await ExportOperations.create(exportOperation);\n\t\texportOperation._id = id;\n\n\t\tconst folderName = path.join(tempFolder, id);\n\t\tif (!fs.existsSync(folderName)) {\n\t\t\tmkdirp.sync(folderName);\n\t\t}\n\n\t\tconst assetsFolder = path.join(folderName, 'assets');\n\t\tif (!fs.existsSync(assetsFolder)) {\n\t\t\tmkdirp.sync(assetsFolder);\n\t\t}\n\n\t\texportOperation.exportPath = folderName;\n\t\texportOperation.assetsPath = assetsFolder;\n\t\texportOperation.status = 'pending';\n\n\t\tawait ExportOperations.updateOperation(exportOperation);\n\n\t\treturn {\n\t\t\trequested: true,\n\t\t\texportOperation,\n\t\t\turl: null,\n\t\t\tpendingOperationsBeforeMyRequest: pendingOperationsBeforeMyRequestCount,\n\t\t};\n\t},\n});\n"]},"sourceType":"module","hash":"6cc2b1e97fa1dbaa44511c6e7632099f929886af"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterMuteUser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/hooks/afterMuteUser.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterMuteUser.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterMuteUser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/hooks/afterMuteUser.js"}},"code":"module.export({\n  definition: () => definition\n});\nlet FederationRoomEvents;\nmodule.link(\"../../../models/server\", {\n  FederationRoomEvents(v) {\n    FederationRoomEvents = v;\n  }\n\n}, 0);\nlet clientLogger;\nmodule.link(\"../lib/logger\", {\n  clientLogger(v) {\n    clientLogger = v;\n  }\n\n}, 1);\nlet normalizers;\nmodule.link(\"../normalizers\", {\n  normalizers(v) {\n    normalizers = v;\n  }\n\n}, 2);\nlet hasExternalDomain;\nmodule.link(\"../functions/helpers\", {\n  hasExternalDomain(v) {\n    hasExternalDomain = v;\n  }\n\n}, 3);\nlet getFederationDomain;\nmodule.link(\"../lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 4);\nlet dispatchEvent;\nmodule.link(\"../handler\", {\n  dispatchEvent(v) {\n    dispatchEvent = v;\n  }\n\n}, 5);\n\nfunction afterMuteUser(involvedUsers, room) {\n  return Promise.asyncApply(() => {\n    // If there are not federated users on this room, ignore it\n    if (!hasExternalDomain(room)) {\n      return involvedUsers;\n    }\n\n    clientLogger.debug({\n      msg: 'afterMuteUser',\n      involvedUsers,\n      room\n    });\n    const {\n      mutedUser\n    } = involvedUsers; // Create the mute user event\n\n    const event = Promise.await(FederationRoomEvents.createMuteUserEvent(getFederationDomain(), room._id, normalizers.normalizeUser(mutedUser))); // Dispatch event (async)\n\n    dispatchEvent(room.federation.domains, event);\n    return involvedUsers;\n  });\n}\n\nconst definition = {\n  hook: 'afterMuteUser',\n  callback: (involvedUsers, room) => Promise.await(afterMuteUser(involvedUsers, room)),\n  id: 'federation-after-mute-user'\n};","map":{"version":3,"sources":["app/federation/server/hooks/afterMuteUser.js"],"names":["module","export","definition","FederationRoomEvents","link","v","clientLogger","normalizers","hasExternalDomain","getFederationDomain","dispatchEvent","afterMuteUser","involvedUsers","room","debug","msg","mutedUser","event","createMuteUserEvent","_id","normalizeUser","federation","domains","hook","callback","Promise","await","id"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,UAAU,EAAC,MAAIA;AAAhB,CAAd;AAA2C,IAAIC,oBAAJ;AAAyBH,MAAM,CAACI,IAAP,CAAY,wBAAZ,EAAqC;AAACD,EAAAA,oBAAoB,CAACE,CAAD,EAAG;AAACF,IAAAA,oBAAoB,GAACE,CAArB;AAAuB;;AAAhD,CAArC,EAAuF,CAAvF;AAA0F,IAAIC,YAAJ;AAAiBN,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACE,EAAAA,YAAY,CAACD,CAAD,EAAG;AAACC,IAAAA,YAAY,GAACD,CAAb;AAAe;;AAAhC,CAA5B,EAA8D,CAA9D;AAAiE,IAAIE,WAAJ;AAAgBP,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA6B;AAACG,EAAAA,WAAW,CAACF,CAAD,EAAG;AAACE,IAAAA,WAAW,GAACF,CAAZ;AAAc;;AAA9B,CAA7B,EAA6D,CAA7D;AAAgE,IAAIG,iBAAJ;AAAsBR,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAmC;AAACI,EAAAA,iBAAiB,CAACH,CAAD,EAAG;AAACG,IAAAA,iBAAiB,GAACH,CAAlB;AAAoB;;AAA1C,CAAnC,EAA+E,CAA/E;AAAkF,IAAII,mBAAJ;AAAwBT,MAAM,CAACI,IAAP,CAAY,4BAAZ,EAAyC;AAACK,EAAAA,mBAAmB,CAACJ,CAAD,EAAG;AAACI,IAAAA,mBAAmB,GAACJ,CAApB;AAAsB;;AAA9C,CAAzC,EAAyF,CAAzF;AAA4F,IAAIK,aAAJ;AAAkBV,MAAM,CAACI,IAAP,CAAY,YAAZ,EAAyB;AAACM,EAAAA,aAAa,CAACL,CAAD,EAAG;AAACK,IAAAA,aAAa,GAACL,CAAd;AAAgB;;AAAlC,CAAzB,EAA6D,CAA7D;;AAO9iB,SAAeM,aAAf,CAA6BC,aAA7B,EAA4CC,IAA5C;AAAA,kCAAkD;AACjD;AACA,QAAI,CAACL,iBAAiB,CAACK,IAAD,CAAtB,EAA8B;AAC7B,aAAOD,aAAP;AACA;;AAEDN,IAAAA,YAAY,CAACQ,KAAb,CAAmB;AAAEC,MAAAA,GAAG,EAAE,eAAP;AAAwBH,MAAAA,aAAxB;AAAuCC,MAAAA;AAAvC,KAAnB;AAEA,UAAM;AAAEG,MAAAA;AAAF,QAAgBJ,aAAtB,CARiD,CAUjD;;AACA,UAAMK,KAAK,iBAASd,oBAAoB,CAACe,mBAArB,CAAyCT,mBAAmB,EAA5D,EAAgEI,IAAI,CAACM,GAArE,EAA0EZ,WAAW,CAACa,aAAZ,CAA0BJ,SAA1B,CAA1E,CAAT,CAAX,CAXiD,CAajD;;AACAN,IAAAA,aAAa,CAACG,IAAI,CAACQ,UAAL,CAAgBC,OAAjB,EAA0BL,KAA1B,CAAb;AAEA,WAAOL,aAAP;AACA,GAjBD;AAAA;;AAmBO,MAAMV,UAAU,GAAG;AACzBqB,EAAAA,IAAI,EAAE,eADmB;AAEzBC,EAAAA,QAAQ,EAAE,CAACZ,aAAD,EAAgBC,IAAhB,KAAyBY,OAAO,CAACC,KAAR,CAAcf,aAAa,CAACC,aAAD,EAAgBC,IAAhB,CAA3B,CAFV;AAGzBc,EAAAA,EAAE,EAAE;AAHqB,CAAnB","sourcesContent":["import { FederationRoomEvents } from '../../../models/server';\nimport { clientLogger } from '../lib/logger';\nimport { normalizers } from '../normalizers';\nimport { hasExternalDomain } from '../functions/helpers';\nimport { getFederationDomain } from '../lib/getFederationDomain';\nimport { dispatchEvent } from '../handler';\n\nasync function afterMuteUser(involvedUsers, room) {\n\t// If there are not federated users on this room, ignore it\n\tif (!hasExternalDomain(room)) {\n\t\treturn involvedUsers;\n\t}\n\n\tclientLogger.debug({ msg: 'afterMuteUser', involvedUsers, room });\n\n\tconst { mutedUser } = involvedUsers;\n\n\t// Create the mute user event\n\tconst event = await FederationRoomEvents.createMuteUserEvent(getFederationDomain(), room._id, normalizers.normalizeUser(mutedUser));\n\n\t// Dispatch event (async)\n\tdispatchEvent(room.federation.domains, event);\n\n\treturn involvedUsers;\n}\n\nexport const definition = {\n\thook: 'afterMuteUser',\n\tcallback: (involvedUsers, room) => Promise.await(afterMuteUser(involvedUsers, room)),\n\tid: 'federation-after-mute-user',\n};\n"]},"sourceType":"module","hash":"d9a68462f0fe7b9962a721a12466b0c0fd654026"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/joinRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/methods/joinRoom.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/joinRoom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/joinRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/methods/joinRoom.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet hasPermission, canAccessRoom;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  }\n\n}, 2);\nlet Rooms;\nmodule.link(\"../../../models\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 3);\nlet Tokenpass, updateUserTokenpassBalances;\nmodule.link(\"../../../tokenpass/server\", {\n  Tokenpass(v) {\n    Tokenpass = v;\n  },\n\n  updateUserTokenpassBalances(v) {\n    updateUserTokenpassBalances = v;\n  }\n\n}, 4);\nlet addUserToRoom;\nmodule.link(\"../functions\", {\n  addUserToRoom(v) {\n    addUserToRoom = v;\n  }\n\n}, 5);\nlet roomTypes, RoomMemberActions;\nmodule.link(\"../../../utils/server\", {\n  roomTypes(v) {\n    roomTypes = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  }\n\n}, 6);\nMeteor.methods({\n  joinRoom(rid, code) {\n    check(rid, String);\n\n    if (!Meteor.userId()) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'joinRoom'\n      });\n    }\n\n    const room = Rooms.findOneById(rid);\n\n    if (!room) {\n      throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n        method: 'joinRoom'\n      });\n    }\n\n    if (!roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.JOIN)) {\n      throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n        method: 'joinRoom'\n      });\n    } // TODO we should have a 'beforeJoinRoom' call back so external services can do their own validations\n\n\n    const user = Meteor.user();\n\n    if (room.tokenpass && user && user.services && user.services.tokenpass) {\n      const balances = updateUserTokenpassBalances(user);\n\n      if (!Tokenpass.validateAccess(room.tokenpass, balances)) {\n        throw new Meteor.Error('error-not-allowed', 'Token required', {\n          method: 'joinRoom'\n        });\n      }\n    } else {\n      if (!canAccessRoom(room, Meteor.user())) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'joinRoom'\n        });\n      }\n\n      if (room.joinCodeRequired === true && code !== room.joinCode && !hasPermission(Meteor.userId(), 'join-without-join-code')) {\n        throw new Meteor.Error('error-code-invalid', 'Invalid Room Password', {\n          method: 'joinRoom'\n        });\n      }\n    }\n\n    return addUserToRoom(rid, user);\n  }\n\n});","map":{"version":3,"sources":["app/lib/server/methods/joinRoom.js"],"names":["Meteor","module","link","v","check","hasPermission","canAccessRoom","Rooms","Tokenpass","updateUserTokenpassBalances","addUserToRoom","roomTypes","RoomMemberActions","methods","joinRoom","rid","code","String","userId","Error","method","room","findOneById","getConfig","t","allowMemberAction","JOIN","user","tokenpass","services","balances","validateAccess","joinCodeRequired","joinCode"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { hasPermission, canAccessRoom } from '../../../authorization';\nimport { Rooms } from '../../../models';\nimport { Tokenpass, updateUserTokenpassBalances } from '../../../tokenpass/server';\nimport { addUserToRoom } from '../functions';\nimport { roomTypes, RoomMemberActions } from '../../../utils/server';\n\nMeteor.methods({\n\tjoinRoom(rid, code) {\n\t\tcheck(rid, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'joinRoom' });\n\t\t}\n\n\t\tconst room = Rooms.findOneById(rid);\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'joinRoom' });\n\t\t}\n\n\t\tif (!roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.JOIN)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'joinRoom' });\n\t\t}\n\n\t\t// TODO we should have a 'beforeJoinRoom' call back so external services can do their own validations\n\t\tconst user = Meteor.user();\n\t\tif (room.tokenpass && user && user.services && user.services.tokenpass) {\n\t\t\tconst balances = updateUserTokenpassBalances(user);\n\n\t\t\tif (!Tokenpass.validateAccess(room.tokenpass, balances)) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Token required', { method: 'joinRoom' });\n\t\t\t}\n\t\t} else {\n\t\t\tif (!canAccessRoom(room, Meteor.user())) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'joinRoom' });\n\t\t\t}\n\t\t\tif (room.joinCodeRequired === true && code !== room.joinCode && !hasPermission(Meteor.userId(), 'join-without-join-code')) {\n\t\t\t\tthrow new Meteor.Error('error-code-invalid', 'Invalid Room Password', {\n\t\t\t\t\tmethod: 'joinRoom',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn addUserToRoom(rid, user);\n\t},\n});\n"]},"sourceType":"module","hash":"b89d36d0dd1dbf3d911b1ea5e24f54a2f1271dd4"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/leadCapture.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/leadCapture.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/leadCapture.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/leadCapture.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/leadCapture.js"}},"code":"let callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\nlet LivechatVisitors;\nmodule.link(\"../../../models\", {\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  }\n\n}, 2);\n\nfunction validateMessage(message, room) {\n  // skips this callback if the message was edited\n  if (message.editedAt) {\n    return false;\n  } // message valid only if it is a livechat room\n\n\n  if (!(typeof room.t !== 'undefined' && room.t === 'l' && room.v && room.v.token)) {\n    return false;\n  } // if the message hasn't a token, it was NOT sent from the visitor, so ignore it\n\n\n  if (!message.token) {\n    return false;\n  } // if the message has a type means it is a special message (like the closing comment), so skips\n\n\n  if (message.t) {\n    return false;\n  }\n\n  return true;\n}\n\ncallbacks.add('afterSaveMessage', function (message, room) {\n  if (!validateMessage(message, room)) {\n    return message;\n  }\n\n  const phoneRegexp = new RegExp(settings.get('Livechat_lead_phone_regex'), 'g');\n  const msgPhones = message.msg.match(phoneRegexp);\n  const emailRegexp = new RegExp(settings.get('Livechat_lead_email_regex'), 'gi');\n  const msgEmails = message.msg.match(emailRegexp);\n\n  if (msgEmails || msgPhones) {\n    LivechatVisitors.saveGuestEmailPhoneById(room.v._id, msgEmails, msgPhones);\n    callbacks.run('livechat.leadCapture', room);\n  }\n\n  return message;\n}, callbacks.priority.LOW, 'leadCapture');","map":{"version":3,"sources":["app/livechat/server/hooks/leadCapture.js"],"names":["callbacks","module","link","v","settings","LivechatVisitors","validateMessage","message","room","editedAt","t","token","add","phoneRegexp","RegExp","get","msgPhones","msg","match","emailRegexp","msgEmails","saveGuestEmailPhoneById","_id","run","priority","LOW"],"mappings":"AAAA,IAAIA,SAAJ;AAAcC,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACF,EAAAA,SAAS,CAACG,CAAD,EAAG;AAACH,IAAAA,SAAS,GAACG,CAAV;AAAY;;AAA1B,CAAxC,EAAoE,CAApE;AAAuE,IAAIC,QAAJ;AAAaH,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACE,EAAAA,QAAQ,CAACD,CAAD,EAAG;AAACC,IAAAA,QAAQ,GAACD,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIE,gBAAJ;AAAqBJ,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACG,EAAAA,gBAAgB,CAACF,CAAD,EAAG;AAACE,IAAAA,gBAAgB,GAACF,CAAjB;AAAmB;;AAAxC,CAA9B,EAAwE,CAAxE;;AAIpL,SAASG,eAAT,CAAyBC,OAAzB,EAAkCC,IAAlC,EAAwC;AACvC;AACA,MAAID,OAAO,CAACE,QAAZ,EAAsB;AACrB,WAAO,KAAP;AACA,GAJsC,CAMvC;;;AACA,MAAI,EAAE,OAAOD,IAAI,CAACE,CAAZ,KAAkB,WAAlB,IAAiCF,IAAI,CAACE,CAAL,KAAW,GAA5C,IAAmDF,IAAI,CAACL,CAAxD,IAA6DK,IAAI,CAACL,CAAL,CAAOQ,KAAtE,CAAJ,EAAkF;AACjF,WAAO,KAAP;AACA,GATsC,CAWvC;;;AACA,MAAI,CAACJ,OAAO,CAACI,KAAb,EAAoB;AACnB,WAAO,KAAP;AACA,GAdsC,CAgBvC;;;AACA,MAAIJ,OAAO,CAACG,CAAZ,EAAe;AACd,WAAO,KAAP;AACA;;AAED,SAAO,IAAP;AACA;;AAEDV,SAAS,CAACY,GAAV,CACC,kBADD,EAEC,UAAUL,OAAV,EAAmBC,IAAnB,EAAyB;AACxB,MAAI,CAACF,eAAe,CAACC,OAAD,EAAUC,IAAV,CAApB,EAAqC;AACpC,WAAOD,OAAP;AACA;;AAED,QAAMM,WAAW,GAAG,IAAIC,MAAJ,CAAWV,QAAQ,CAACW,GAAT,CAAa,2BAAb,CAAX,EAAsD,GAAtD,CAApB;AACA,QAAMC,SAAS,GAAGT,OAAO,CAACU,GAAR,CAAYC,KAAZ,CAAkBL,WAAlB,CAAlB;AAEA,QAAMM,WAAW,GAAG,IAAIL,MAAJ,CAAWV,QAAQ,CAACW,GAAT,CAAa,2BAAb,CAAX,EAAsD,IAAtD,CAApB;AACA,QAAMK,SAAS,GAAGb,OAAO,CAACU,GAAR,CAAYC,KAAZ,CAAkBC,WAAlB,CAAlB;;AAEA,MAAIC,SAAS,IAAIJ,SAAjB,EAA4B;AAC3BX,IAAAA,gBAAgB,CAACgB,uBAAjB,CAAyCb,IAAI,CAACL,CAAL,CAAOmB,GAAhD,EAAqDF,SAArD,EAAgEJ,SAAhE;AAEAhB,IAAAA,SAAS,CAACuB,GAAV,CAAc,sBAAd,EAAsCf,IAAtC;AACA;;AAED,SAAOD,OAAP;AACA,CApBF,EAqBCP,SAAS,CAACwB,QAAV,CAAmBC,GArBpB,EAsBC,aAtBD","sourcesContent":["import { callbacks } from '../../../../lib/callbacks';\nimport { settings } from '../../../settings';\nimport { LivechatVisitors } from '../../../models';\n\nfunction validateMessage(message, room) {\n\t// skips this callback if the message was edited\n\tif (message.editedAt) {\n\t\treturn false;\n\t}\n\n\t// message valid only if it is a livechat room\n\tif (!(typeof room.t !== 'undefined' && room.t === 'l' && room.v && room.v.token)) {\n\t\treturn false;\n\t}\n\n\t// if the message hasn't a token, it was NOT sent from the visitor, so ignore it\n\tif (!message.token) {\n\t\treturn false;\n\t}\n\n\t// if the message has a type means it is a special message (like the closing comment), so skips\n\tif (message.t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tfunction (message, room) {\n\t\tif (!validateMessage(message, room)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst phoneRegexp = new RegExp(settings.get('Livechat_lead_phone_regex'), 'g');\n\t\tconst msgPhones = message.msg.match(phoneRegexp);\n\n\t\tconst emailRegexp = new RegExp(settings.get('Livechat_lead_email_regex'), 'gi');\n\t\tconst msgEmails = message.msg.match(emailRegexp);\n\n\t\tif (msgEmails || msgPhones) {\n\t\t\tLivechatVisitors.saveGuestEmailPhoneById(room.v._id, msgEmails, msgPhones);\n\n\t\t\tcallbacks.run('livechat.leadCapture', room);\n\t\t}\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'leadCapture',\n);\n"]},"sourceType":"module","hash":"0930d29b7927df390213df26ccf9a73d67658bea"}

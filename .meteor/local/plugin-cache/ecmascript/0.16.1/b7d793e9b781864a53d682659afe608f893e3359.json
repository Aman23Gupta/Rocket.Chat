{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer-pending-avatars/server/importer.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer-pending-avatars/server/importer.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer-pending-avatars/server/importer.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer-pending-avatars/server/importer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer-pending-avatars/server/importer.js"}},"code":"module.export({\n  PendingAvatarImporter: () => PendingAvatarImporter\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Base, ProgressStep, Selection;\nmodule.link(\"../../importer/server\", {\n  Base(v) {\n    Base = v;\n  },\n\n  ProgressStep(v) {\n    ProgressStep = v;\n  },\n\n  Selection(v) {\n    Selection = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../models\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\n\nclass PendingAvatarImporter extends Base {\n  prepareFileCount() {\n    this.logger.debug('start preparing import operation');\n    super.updateProgress(ProgressStep.PREPARING_STARTED);\n    const users = Users.findAllUsersWithPendingAvatar();\n    const fileCount = users.count();\n\n    if (fileCount === 0) {\n      super.updateProgress(ProgressStep.DONE);\n      return 0;\n    }\n\n    this.updateRecord({\n      'count.messages': fileCount,\n      'messagesstatus': null\n    });\n    this.addCountToTotal(fileCount);\n    const fileData = new Selection(this.name, [], [], fileCount);\n    this.updateRecord({\n      fileData\n    });\n    super.updateProgress(ProgressStep.IMPORTING_FILES);\n    Meteor.defer(() => {\n      this.startImport(fileData);\n    });\n    return fileCount;\n  }\n\n  startImport() {\n    const pendingFileUserList = Users.findAllUsersWithPendingAvatar();\n\n    try {\n      pendingFileUserList.forEach(user => {\n        try {\n          const {\n            _pendingAvatarUrl: url,\n            name,\n            _id\n          } = user;\n\n          try {\n            if (!url || !url.startsWith('http')) {\n              return;\n            }\n\n            Meteor.runAsUser(_id, () => {\n              try {\n                Meteor.call('setAvatarFromService', url, undefined, 'url');\n                Users.update({\n                  _id\n                }, {\n                  $unset: {\n                    _pendingAvatarUrl: ''\n                  }\n                });\n              } catch (error) {\n                this.logger.warn(\"Failed to set \".concat(name, \"'s avatar from url \").concat(url));\n              }\n            });\n          } finally {\n            this.addCountCompleted(1);\n          }\n        } catch (error) {\n          this.logger.error(error);\n        }\n      });\n    } catch (error) {\n      // If the cursor expired, restart the method\n      if (error && error.codeName === 'CursorNotFound') {\n        this.logger.info('CursorNotFound');\n        return this.startImport();\n      }\n\n      super.updateProgress(ProgressStep.ERROR);\n      throw error;\n    }\n\n    super.updateProgress(ProgressStep.DONE);\n    return this.getProgress();\n  }\n\n}","map":{"version":3,"sources":["app/importer-pending-avatars/server/importer.js"],"names":["module","export","PendingAvatarImporter","Meteor","link","v","Base","ProgressStep","Selection","Users","prepareFileCount","logger","debug","updateProgress","PREPARING_STARTED","users","findAllUsersWithPendingAvatar","fileCount","count","DONE","updateRecord","addCountToTotal","fileData","name","IMPORTING_FILES","defer","startImport","pendingFileUserList","forEach","user","_pendingAvatarUrl","url","_id","startsWith","runAsUser","call","undefined","update","$unset","error","warn","addCountCompleted","codeName","info","ERROR","getProgress"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Base, ProgressStep, Selection } from '../../importer/server';\nimport { Users } from '../../models';\n\nexport class PendingAvatarImporter extends Base {\n\tprepareFileCount() {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tsuper.updateProgress(ProgressStep.PREPARING_STARTED);\n\n\t\tconst users = Users.findAllUsersWithPendingAvatar();\n\t\tconst fileCount = users.count();\n\n\t\tif (fileCount === 0) {\n\t\t\tsuper.updateProgress(ProgressStep.DONE);\n\t\t\treturn 0;\n\t\t}\n\n\t\tthis.updateRecord({ 'count.messages': fileCount, 'messagesstatus': null });\n\t\tthis.addCountToTotal(fileCount);\n\n\t\tconst fileData = new Selection(this.name, [], [], fileCount);\n\t\tthis.updateRecord({ fileData });\n\n\t\tsuper.updateProgress(ProgressStep.IMPORTING_FILES);\n\t\tMeteor.defer(() => {\n\t\t\tthis.startImport(fileData);\n\t\t});\n\n\t\treturn fileCount;\n\t}\n\n\tstartImport() {\n\t\tconst pendingFileUserList = Users.findAllUsersWithPendingAvatar();\n\t\ttry {\n\t\t\tpendingFileUserList.forEach((user) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { _pendingAvatarUrl: url, name, _id } = user;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!url || !url.startsWith('http')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tMeteor.runAsUser(_id, () => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tMeteor.call('setAvatarFromService', url, undefined, 'url');\n\t\t\t\t\t\t\t\tUsers.update({ _id }, { $unset: { _pendingAvatarUrl: '' } });\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tthis.logger.warn(`Failed to set ${name}'s avatar from url ${url}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.addCountCompleted(1);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logger.error(error);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\t// If the cursor expired, restart the method\n\t\t\tif (error && error.codeName === 'CursorNotFound') {\n\t\t\t\tthis.logger.info('CursorNotFound');\n\t\t\t\treturn this.startImport();\n\t\t\t}\n\n\t\t\tsuper.updateProgress(ProgressStep.ERROR);\n\t\t\tthrow error;\n\t\t}\n\n\t\tsuper.updateProgress(ProgressStep.DONE);\n\t\treturn this.getProgress();\n\t}\n}\n"]},"sourceType":"module","hash":"b7d793e9b781864a53d682659afe608f893e3359"}

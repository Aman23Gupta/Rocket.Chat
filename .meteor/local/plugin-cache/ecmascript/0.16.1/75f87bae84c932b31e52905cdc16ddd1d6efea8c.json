{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/autotranslate.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/autotranslate.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/autotranslate.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/autotranslate.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/autotranslate.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet Messages;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 3);\nAPI.v1.addRoute('autotranslate.getSupportedLanguages', {\n  authRequired: true\n}, {\n  get() {\n    if (!settings.get('AutoTranslate_Enabled')) {\n      return API.v1.failure('AutoTranslate is disabled.');\n    }\n\n    const {\n      targetLanguage\n    } = this.queryParams;\n    const languages = Meteor.runAsUser(this.userId, () => Meteor.call('autoTranslate.getSupportedLanguages', targetLanguage));\n    return API.v1.success({\n      languages: languages || []\n    });\n  }\n\n});\nAPI.v1.addRoute('autotranslate.saveSettings', {\n  authRequired: true\n}, {\n  post() {\n    const {\n      roomId,\n      field,\n      value,\n      defaultLanguage\n    } = this.bodyParams;\n\n    if (!settings.get('AutoTranslate_Enabled')) {\n      return API.v1.failure('AutoTranslate is disabled.');\n    }\n\n    if (!roomId) {\n      return API.v1.failure('The bodyParam \"roomId\" is required.');\n    }\n\n    if (!field) {\n      return API.v1.failure('The bodyParam \"field\" is required.');\n    }\n\n    if (value === undefined) {\n      return API.v1.failure('The bodyParam \"value\" is required.');\n    }\n\n    if (field === 'autoTranslate' && typeof value !== 'boolean') {\n      return API.v1.failure('The bodyParam \"autoTranslate\" must be a boolean.');\n    }\n\n    if (field === 'autoTranslateLanguage' && typeof value !== 'string') {\n      return API.v1.failure('The bodyParam \"autoTranslateLanguage\" must be a string.');\n    }\n\n    Meteor.runAsUser(this.userId, () => Meteor.call('autoTranslate.saveSettings', roomId, field, value === true ? '1' : String(value).valueOf(), {\n      defaultLanguage\n    }));\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('autotranslate.translateMessage', {\n  authRequired: true\n}, {\n  post() {\n    const {\n      messageId,\n      targetLanguage\n    } = this.bodyParams;\n\n    if (!settings.get('AutoTranslate_Enabled')) {\n      return API.v1.failure('AutoTranslate is disabled.');\n    }\n\n    if (!messageId) {\n      return API.v1.failure('The bodyParam \"messageId\" is required.');\n    }\n\n    const message = Messages.findOneById(messageId);\n\n    if (!message) {\n      return API.v1.failure('Message not found.');\n    }\n\n    const translatedMessage = Meteor.runAsUser(this.userId, () => Meteor.call('autoTranslate.translateMessage', message, targetLanguage));\n    return API.v1.success({\n      message: translatedMessage\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/autotranslate.js"],"names":["Meteor","module","link","v","API","settings","Messages","v1","addRoute","authRequired","get","failure","targetLanguage","queryParams","languages","runAsUser","userId","call","success","post","roomId","field","value","defaultLanguage","bodyParams","undefined","String","valueOf","messageId","message","findOneById","translatedMessage"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { API } from '../api';\nimport { settings } from '../../../settings/server';\nimport { Messages } from '../../../models/server';\n\nAPI.v1.addRoute(\n\t'autotranslate.getSupportedLanguages',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!settings.get('AutoTranslate_Enabled')) {\n\t\t\t\treturn API.v1.failure('AutoTranslate is disabled.');\n\t\t\t}\n\t\t\tconst { targetLanguage } = this.queryParams;\n\t\t\tconst languages = Meteor.runAsUser(this.userId, () => Meteor.call('autoTranslate.getSupportedLanguages', targetLanguage));\n\n\t\t\treturn API.v1.success({ languages: languages || [] });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'autotranslate.saveSettings',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { roomId, field, value, defaultLanguage } = this.bodyParams;\n\t\t\tif (!settings.get('AutoTranslate_Enabled')) {\n\t\t\t\treturn API.v1.failure('AutoTranslate is disabled.');\n\t\t\t}\n\n\t\t\tif (!roomId) {\n\t\t\t\treturn API.v1.failure('The bodyParam \"roomId\" is required.');\n\t\t\t}\n\t\t\tif (!field) {\n\t\t\t\treturn API.v1.failure('The bodyParam \"field\" is required.');\n\t\t\t}\n\t\t\tif (value === undefined) {\n\t\t\t\treturn API.v1.failure('The bodyParam \"value\" is required.');\n\t\t\t}\n\t\t\tif (field === 'autoTranslate' && typeof value !== 'boolean') {\n\t\t\t\treturn API.v1.failure('The bodyParam \"autoTranslate\" must be a boolean.');\n\t\t\t}\n\t\t\tif (field === 'autoTranslateLanguage' && typeof value !== 'string') {\n\t\t\t\treturn API.v1.failure('The bodyParam \"autoTranslateLanguage\" must be a string.');\n\t\t\t}\n\n\t\t\tMeteor.runAsUser(this.userId, () =>\n\t\t\t\tMeteor.call('autoTranslate.saveSettings', roomId, field, value === true ? '1' : String(value).valueOf(), { defaultLanguage }),\n\t\t\t);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'autotranslate.translateMessage',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { messageId, targetLanguage } = this.bodyParams;\n\t\t\tif (!settings.get('AutoTranslate_Enabled')) {\n\t\t\t\treturn API.v1.failure('AutoTranslate is disabled.');\n\t\t\t}\n\t\t\tif (!messageId) {\n\t\t\t\treturn API.v1.failure('The bodyParam \"messageId\" is required.');\n\t\t\t}\n\t\t\tconst message = Messages.findOneById(messageId);\n\t\t\tif (!message) {\n\t\t\t\treturn API.v1.failure('Message not found.');\n\t\t\t}\n\n\t\t\tconst translatedMessage = Meteor.runAsUser(this.userId, () => Meteor.call('autoTranslate.translateMessage', message, targetLanguage));\n\n\t\t\treturn API.v1.success({ message: translatedMessage });\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"75f87bae84c932b31e52905cdc16ddd1d6efea8c"}

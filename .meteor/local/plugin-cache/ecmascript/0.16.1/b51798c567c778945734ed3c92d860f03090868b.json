{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/browseChannels.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/browseChannels.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/browseChannels.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/browseChannels.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/browseChannels.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet DDPRateLimiter;\nmodule.link(\"meteor/ddp-rate-limiter\", {\n  DDPRateLimiter(v) {\n    DDPRateLimiter = v;\n  }\n\n}, 1);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 2);\nlet mem;\nmodule.link(\"mem\", {\n  default(v) {\n    mem = v;\n  }\n\n}, 3);\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 4);\nlet hasPermission;\nmodule.link(\"../../app/authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 5);\nlet Rooms, Users, Subscriptions;\nmodule.link(\"../../app/models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 6);\nlet RoomsRaw;\nmodule.link(\"../../app/models/server/raw\", {\n  Rooms(v) {\n    RoomsRaw = v;\n  }\n\n}, 7);\nlet settings;\nmodule.link(\"../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 8);\nlet getFederationDomain;\nmodule.link(\"../../app/federation/server/lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 9);\nlet isFederationEnabled;\nmodule.link(\"../../app/federation/server/lib/isFederationEnabled\", {\n  isFederationEnabled(v) {\n    isFederationEnabled = v;\n  }\n\n}, 10);\nlet federationSearchUsers;\nmodule.link(\"../../app/federation/server/handler\", {\n  federationSearchUsers(v) {\n    federationSearchUsers = v;\n  }\n\n}, 11);\nlet Team;\nmodule.link(\"../sdk\", {\n  Team(v) {\n    Team = v;\n  }\n\n}, 12);\n\nconst sortChannels = function (field, direction) {\n  switch (field) {\n    case 'createdAt':\n      return {\n        ts: direction === 'asc' ? 1 : -1\n      };\n\n    case 'lastMessage':\n      return {\n        'lastMessage.ts': direction === 'asc' ? 1 : -1\n      };\n\n    default:\n      return {\n        [field]: direction === 'asc' ? 1 : -1\n      };\n  }\n};\n\nconst sortUsers = function (field, direction) {\n  switch (field) {\n    case 'email':\n      return {\n        'emails.address': direction === 'asc' ? 1 : -1,\n        'username': direction === 'asc' ? 1 : -1\n      };\n\n    default:\n      return {\n        [field]: direction === 'asc' ? 1 : -1\n      };\n  }\n};\n\nconst getChannelsAndGroups = (user, canViewAnon, searchTerm, sort, pagination) => {\n  var _Promise$await;\n\n  if (!user && !canViewAnon || user && !hasPermission(user._id, 'view-c-room')) {\n    return;\n  }\n\n  const teams = Promise.await(Team.getAllPublicTeams());\n  const publicTeamIds = teams.map(_ref => {\n    let {\n      _id\n    } = _ref;\n    return _id;\n  });\n  const userTeamsIds = ((_Promise$await = Promise.await(Team.listTeamsBySubscriberUserId(user._id, {\n    projection: {\n      teamId: 1\n    }\n  }))) === null || _Promise$await === void 0 ? void 0 : _Promise$await.map(_ref2 => {\n    let {\n      teamId\n    } = _ref2;\n    return teamId;\n  })) || [];\n  const userRooms = user.__rooms;\n  const cursor = Rooms.findByNameOrFNameAndRoomIdsIncludingTeamRooms(searchTerm, [...userTeamsIds, ...publicTeamIds], userRooms, _objectSpread(_objectSpread({}, pagination), {}, {\n    sort: _objectSpread({\n      featured: -1\n    }, sort),\n    fields: {\n      t: 1,\n      description: 1,\n      topic: 1,\n      name: 1,\n      fname: 1,\n      lastMessage: 1,\n      ts: 1,\n      archived: 1,\n      default: 1,\n      featured: 1,\n      usersCount: 1,\n      prid: 1,\n      teamId: 1\n    }\n  }));\n  const total = cursor.count(); // count ignores the `skip` and `limit` options\n\n  const result = cursor.fetch();\n  const teamIds = result.filter(_ref3 => {\n    let {\n      teamId\n    } = _ref3;\n    return teamId;\n  }).map(_ref4 => {\n    let {\n      teamId\n    } = _ref4;\n    return teamId;\n  });\n  const teamsMains = Promise.await(Team.listByIds([...new Set(teamIds)], {\n    projection: {\n      _id: 1,\n      name: 1\n    }\n  }));\n  const results = result.map(room => {\n    if (room.teamId) {\n      const team = teamsMains.find(mainRoom => mainRoom._id === room.teamId);\n\n      if (team) {\n        room.belongsTo = team.name;\n      }\n    }\n\n    return room;\n  });\n  return {\n    total,\n    results\n  };\n};\n\nconst getChannelsCountForTeam = mem(teamId => Promise.await(RoomsRaw.findByTeamId(teamId, {\n  projection: {\n    _id: 1\n  }\n}).count()), {\n  maxAge: 2000\n});\n\nconst getTeams = (user, searchTerm, sort, pagination) => {\n  if (!user) {\n    return;\n  }\n\n  const userSubs = Subscriptions.cachedFindByUserId(user._id).fetch();\n  const ids = userSubs.map(sub => sub.rid);\n  const result = Rooms.findContainingNameOrFNameInIdsAsTeamMain(searchTerm, ids, _objectSpread(_objectSpread({}, pagination), {}, {\n    sort: _objectSpread({\n      featured: -1\n    }, sort),\n    fields: {\n      t: 1,\n      description: 1,\n      topic: 1,\n      name: 1,\n      fname: 1,\n      lastMessage: 1,\n      ts: 1,\n      archived: 1,\n      default: 1,\n      featured: 1,\n      usersCount: 1,\n      prid: 1,\n      teamId: 1,\n      teamMain: 1\n    }\n  }));\n  const rooms = result.fetch().map(room => _objectSpread(_objectSpread({}, room), {}, {\n    roomsCount: getChannelsCountForTeam(room.teamId)\n  }));\n  return {\n    total: result.count(),\n    // count ignores the `skip` and `limit` options\n    results: rooms\n  };\n};\n\nconst getUsers = (user, text, workspace, sort, pagination) => Promise.asyncApply(() => {\n  if (!user || !hasPermission(user._id, 'view-outside-room') || !hasPermission(user._id, 'view-d-room')) {\n    return;\n  }\n\n  const forcedSearchFields = workspace === 'all' && ['username', 'name', 'emails.address'];\n  const viewFullOtherUserInfo = hasPermission(user._id, 'view-full-other-user-info');\n\n  const options = _objectSpread(_objectSpread({}, pagination), {}, {\n    sort,\n    fields: _objectSpread(_objectSpread({\n      username: 1,\n      name: 1,\n      nickname: 1,\n      bio: 1,\n      createdAt: 1\n    }, viewFullOtherUserInfo && {\n      emails: 1\n    }), {}, {\n      federation: 1,\n      avatarETag: 1\n    })\n  });\n\n  let result;\n\n  if (workspace === 'all') {\n    result = Users.findByActiveUsersExcept(text, [], options, forcedSearchFields);\n  } else if (workspace === 'external') {\n    result = Users.findByActiveExternalUsersExcept(text, [], options, forcedSearchFields, getFederationDomain());\n  } else {\n    result = Users.findByActiveLocalUsersExcept(text, [], options, forcedSearchFields, getFederationDomain());\n  }\n\n  const total = result.count(); // count ignores the `skip` and `limit` options\n\n  const results = result.fetch(); // Try to find federated users, when applicable\n\n  if (isFederationEnabled() && workspace === 'external' && text.indexOf('@') !== -1) {\n    const users = Promise.await(federationSearchUsers(text));\n\n    for (const user of users) {\n      if (results.find(e => e._id === user._id)) {\n        continue;\n      } // Add the federated user to the results\n\n\n      results.unshift({\n        username: user.username,\n        name: user.name,\n        bio: user.bio,\n        nickname: user.nickname,\n        emails: user.emails,\n        federation: user.federation,\n        isRemote: true\n      });\n    }\n  }\n\n  return {\n    total,\n    results\n  };\n});\n\nMeteor.methods({\n  browseChannels(_ref5) {\n    return Promise.asyncApply(() => {\n      let {\n        text = '',\n        workspace = '',\n        type = 'channels',\n        sortBy = 'name',\n        sortDirection = 'asc',\n        page,\n        offset,\n        limit = 10\n      } = _ref5;\n      const searchTerm = s.trim(escapeRegExp(text));\n\n      if (!['channels', 'users', 'teams'].includes(type) || !['asc', 'desc'].includes(sortDirection) || !page && page !== 0 && !offset && offset !== 0) {\n        return;\n      }\n\n      const roomParams = ['channels', 'teams'].includes(type) ? ['usernames', 'lastMessage'] : [];\n      const userParams = type === 'users' ? ['username', 'email', 'bio'] : [];\n\n      if (!['name', 'createdAt', 'usersCount', ...roomParams, ...userParams].includes(sortBy)) {\n        return;\n      }\n\n      const skip = Math.max(0, offset || (page > -1 ? limit * page : 0));\n      limit = limit > 0 ? limit : 10;\n      const pagination = {\n        skip,\n        limit\n      };\n      const canViewAnonymous = !!settings.get('Accounts_AllowAnonymousRead');\n      const user = Meteor.user();\n\n      switch (type) {\n        case 'channels':\n          return getChannelsAndGroups(user, canViewAnonymous, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\n        case 'teams':\n          return getTeams(user, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\n        case 'users':\n          return getUsers(user, text, workspace, sortUsers(sortBy, sortDirection), pagination);\n\n        default:\n      }\n    });\n  }\n\n});\nDDPRateLimiter.addRule({\n  type: 'method',\n  name: 'browseChannels',\n\n  userId() {\n    return true;\n  }\n\n}, 100, 100000);","map":{"version":3,"sources":["server/methods/browseChannels.js"],"names":["_objectSpread","module","link","default","v","Meteor","DDPRateLimiter","s","mem","escapeRegExp","hasPermission","Rooms","Users","Subscriptions","RoomsRaw","settings","getFederationDomain","isFederationEnabled","federationSearchUsers","Team","sortChannels","field","direction","ts","sortUsers","getChannelsAndGroups","user","canViewAnon","searchTerm","sort","pagination","_id","teams","Promise","await","getAllPublicTeams","publicTeamIds","map","userTeamsIds","listTeamsBySubscriberUserId","projection","teamId","userRooms","__rooms","cursor","findByNameOrFNameAndRoomIdsIncludingTeamRooms","featured","fields","t","description","topic","name","fname","lastMessage","archived","usersCount","prid","total","count","result","fetch","teamIds","filter","teamsMains","listByIds","Set","results","room","team","find","mainRoom","belongsTo","getChannelsCountForTeam","findByTeamId","maxAge","getTeams","userSubs","cachedFindByUserId","ids","sub","rid","findContainingNameOrFNameInIdsAsTeamMain","teamMain","rooms","roomsCount","getUsers","text","workspace","forcedSearchFields","viewFullOtherUserInfo","options","username","nickname","bio","createdAt","emails","federation","avatarETag","findByActiveUsersExcept","findByActiveExternalUsersExcept","findByActiveLocalUsersExcept","indexOf","users","e","unshift","isRemote","methods","browseChannels","type","sortBy","sortDirection","page","offset","limit","trim","includes","roomParams","userParams","skip","Math","max","canViewAnonymous","get","addRule","userId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport s from 'underscore.string';\nimport mem from 'mem';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { hasPermission } from '../../app/authorization/server';\nimport { Rooms, Users, Subscriptions } from '../../app/models/server';\nimport { Rooms as RoomsRaw } from '../../app/models/server/raw';\nimport { settings } from '../../app/settings/server';\nimport { getFederationDomain } from '../../app/federation/server/lib/getFederationDomain';\nimport { isFederationEnabled } from '../../app/federation/server/lib/isFederationEnabled';\nimport { federationSearchUsers } from '../../app/federation/server/handler';\nimport { Team } from '../sdk';\n\nconst sortChannels = function (field, direction) {\n\tswitch (field) {\n\t\tcase 'createdAt':\n\t\t\treturn {\n\t\t\t\tts: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tcase 'lastMessage':\n\t\t\treturn {\n\t\t\t\t'lastMessage.ts': direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t[field]: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t}\n};\n\nconst sortUsers = function (field, direction) {\n\tswitch (field) {\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\t'emails.address': direction === 'asc' ? 1 : -1,\n\t\t\t\t'username': direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t[field]: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t}\n};\n\nconst getChannelsAndGroups = (user, canViewAnon, searchTerm, sort, pagination) => {\n\tif ((!user && !canViewAnon) || (user && !hasPermission(user._id, 'view-c-room'))) {\n\t\treturn;\n\t}\n\n\tconst teams = Promise.await(Team.getAllPublicTeams());\n\tconst publicTeamIds = teams.map(({ _id }) => _id);\n\n\tconst userTeamsIds =\n\t\tPromise.await(Team.listTeamsBySubscriberUserId(user._id, { projection: { teamId: 1 } }))?.map(({ teamId }) => teamId) || [];\n\tconst userRooms = user.__rooms;\n\n\tconst cursor = Rooms.findByNameOrFNameAndRoomIdsIncludingTeamRooms(searchTerm, [...userTeamsIds, ...publicTeamIds], userRooms, {\n\t\t...pagination,\n\t\tsort: {\n\t\t\tfeatured: -1,\n\t\t\t...sort,\n\t\t},\n\t\tfields: {\n\t\t\tt: 1,\n\t\t\tdescription: 1,\n\t\t\ttopic: 1,\n\t\t\tname: 1,\n\t\t\tfname: 1,\n\t\t\tlastMessage: 1,\n\t\t\tts: 1,\n\t\t\tarchived: 1,\n\t\t\tdefault: 1,\n\t\t\tfeatured: 1,\n\t\t\tusersCount: 1,\n\t\t\tprid: 1,\n\t\t\tteamId: 1,\n\t\t},\n\t});\n\tconst total = cursor.count(); // count ignores the `skip` and `limit` options\n\tconst result = cursor.fetch();\n\n\tconst teamIds = result.filter(({ teamId }) => teamId).map(({ teamId }) => teamId);\n\tconst teamsMains = Promise.await(Team.listByIds([...new Set(teamIds)], { projection: { _id: 1, name: 1 } }));\n\n\tconst results = result.map((room) => {\n\t\tif (room.teamId) {\n\t\t\tconst team = teamsMains.find((mainRoom) => mainRoom._id === room.teamId);\n\t\t\tif (team) {\n\t\t\t\troom.belongsTo = team.name;\n\t\t\t}\n\t\t}\n\t\treturn room;\n\t});\n\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\nconst getChannelsCountForTeam = mem((teamId) => Promise.await(RoomsRaw.findByTeamId(teamId, { projection: { _id: 1 } }).count()), {\n\tmaxAge: 2000,\n});\n\nconst getTeams = (user, searchTerm, sort, pagination) => {\n\tif (!user) {\n\t\treturn;\n\t}\n\n\tconst userSubs = Subscriptions.cachedFindByUserId(user._id).fetch();\n\tconst ids = userSubs.map((sub) => sub.rid);\n\tconst result = Rooms.findContainingNameOrFNameInIdsAsTeamMain(searchTerm, ids, {\n\t\t...pagination,\n\t\tsort: {\n\t\t\tfeatured: -1,\n\t\t\t...sort,\n\t\t},\n\t\tfields: {\n\t\t\tt: 1,\n\t\t\tdescription: 1,\n\t\t\ttopic: 1,\n\t\t\tname: 1,\n\t\t\tfname: 1,\n\t\t\tlastMessage: 1,\n\t\t\tts: 1,\n\t\t\tarchived: 1,\n\t\t\tdefault: 1,\n\t\t\tfeatured: 1,\n\t\t\tusersCount: 1,\n\t\t\tprid: 1,\n\t\t\tteamId: 1,\n\t\t\tteamMain: 1,\n\t\t},\n\t});\n\n\tconst rooms = result.fetch().map((room) => ({\n\t\t...room,\n\t\troomsCount: getChannelsCountForTeam(room.teamId),\n\t}));\n\n\treturn {\n\t\ttotal: result.count(), // count ignores the `skip` and `limit` options\n\t\tresults: rooms,\n\t};\n};\n\nconst getUsers = async (user, text, workspace, sort, pagination) => {\n\tif (!user || !hasPermission(user._id, 'view-outside-room') || !hasPermission(user._id, 'view-d-room')) {\n\t\treturn;\n\t}\n\n\tconst forcedSearchFields = workspace === 'all' && ['username', 'name', 'emails.address'];\n\n\tconst viewFullOtherUserInfo = hasPermission(user._id, 'view-full-other-user-info');\n\n\tconst options = {\n\t\t...pagination,\n\t\tsort,\n\t\tfields: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tnickname: 1,\n\t\t\tbio: 1,\n\t\t\tcreatedAt: 1,\n\t\t\t...(viewFullOtherUserInfo && { emails: 1 }),\n\t\t\tfederation: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t};\n\n\tlet result;\n\tif (workspace === 'all') {\n\t\tresult = Users.findByActiveUsersExcept(text, [], options, forcedSearchFields);\n\t} else if (workspace === 'external') {\n\t\tresult = Users.findByActiveExternalUsersExcept(text, [], options, forcedSearchFields, getFederationDomain());\n\t} else {\n\t\tresult = Users.findByActiveLocalUsersExcept(text, [], options, forcedSearchFields, getFederationDomain());\n\t}\n\n\tconst total = result.count(); // count ignores the `skip` and `limit` options\n\tconst results = result.fetch();\n\n\t// Try to find federated users, when applicable\n\tif (isFederationEnabled() && workspace === 'external' && text.indexOf('@') !== -1) {\n\t\tconst users = await federationSearchUsers(text);\n\n\t\tfor (const user of users) {\n\t\t\tif (results.find((e) => e._id === user._id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Add the federated user to the results\n\t\t\tresults.unshift({\n\t\t\t\tusername: user.username,\n\t\t\t\tname: user.name,\n\t\t\t\tbio: user.bio,\n\t\t\t\tnickname: user.nickname,\n\t\t\t\temails: user.emails,\n\t\t\t\tfederation: user.federation,\n\t\t\t\tisRemote: true,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\nMeteor.methods({\n\tasync browseChannels({ text = '', workspace = '', type = 'channels', sortBy = 'name', sortDirection = 'asc', page, offset, limit = 10 }) {\n\t\tconst searchTerm = s.trim(escapeRegExp(text));\n\n\t\tif (\n\t\t\t!['channels', 'users', 'teams'].includes(type) ||\n\t\t\t!['asc', 'desc'].includes(sortDirection) ||\n\t\t\t(!page && page !== 0 && !offset && offset !== 0)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst roomParams = ['channels', 'teams'].includes(type) ? ['usernames', 'lastMessage'] : [];\n\t\tconst userParams = type === 'users' ? ['username', 'email', 'bio'] : [];\n\n\t\tif (!['name', 'createdAt', 'usersCount', ...roomParams, ...userParams].includes(sortBy)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst skip = Math.max(0, offset || (page > -1 ? limit * page : 0));\n\n\t\tlimit = limit > 0 ? limit : 10;\n\n\t\tconst pagination = {\n\t\t\tskip,\n\t\t\tlimit,\n\t\t};\n\n\t\tconst canViewAnonymous = !!settings.get('Accounts_AllowAnonymousRead');\n\n\t\tconst user = Meteor.user();\n\n\t\tswitch (type) {\n\t\t\tcase 'channels':\n\t\t\t\treturn getChannelsAndGroups(user, canViewAnonymous, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\t\t\tcase 'teams':\n\t\t\t\treturn getTeams(user, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\t\t\tcase 'users':\n\t\t\t\treturn getUsers(user, text, workspace, sortUsers(sortBy, sortDirection), pagination);\n\t\t\tdefault:\n\t\t}\n\t},\n});\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'browseChannels',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t100,\n\t100000,\n);\n"]},"sourceType":"module","hash":"b51798c567c778945734ed3c92d860f03090868b"}

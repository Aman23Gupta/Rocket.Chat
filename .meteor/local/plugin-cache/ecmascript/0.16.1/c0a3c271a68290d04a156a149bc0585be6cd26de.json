{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer-pending-files/server/importer.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer-pending-files/server/importer.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer-pending-files/server/importer.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer-pending-files/server/importer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer-pending-files/server/importer.js"}},"code":"module.export({\n  PendingFileImporter: () => PendingFileImporter\n});\nlet https;\nmodule.link(\"https\", {\n  default(v) {\n    https = v;\n  }\n\n}, 0);\nlet http;\nmodule.link(\"http\", {\n  default(v) {\n    http = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\nlet Base, ProgressStep, Selection;\nmodule.link(\"../../importer/server\", {\n  Base(v) {\n    Base = v;\n  },\n\n  ProgressStep(v) {\n    ProgressStep = v;\n  },\n\n  Selection(v) {\n    Selection = v;\n  }\n\n}, 4);\nlet Messages;\nmodule.link(\"../../models\", {\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 5);\nlet FileUpload;\nmodule.link(\"../../file-upload\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 6);\n\nclass PendingFileImporter extends Base {\n  constructor(info, importRecord) {\n    super(info, importRecord);\n    this.userTags = [];\n    this.bots = {};\n  }\n\n  prepareFileCount() {\n    this.logger.debug('start preparing import operation');\n    super.updateProgress(ProgressStep.PREPARING_STARTED);\n    const messages = Messages.findAllImportedMessagesWithFilesToDownload();\n    const fileCount = messages.count();\n\n    if (fileCount === 0) {\n      super.updateProgress(ProgressStep.DONE);\n      return 0;\n    }\n\n    this.updateRecord({\n      'count.messages': fileCount,\n      'messagesstatus': null\n    });\n    this.addCountToTotal(fileCount);\n    const fileData = new Selection(this.name, [], [], fileCount);\n    this.updateRecord({\n      fileData\n    });\n    super.updateProgress(ProgressStep.IMPORTING_FILES);\n    Meteor.defer(() => {\n      this.startImport(fileData);\n    });\n    return fileCount;\n  }\n\n  startImport() {\n    const pendingFileMessageList = Messages.findAllImportedMessagesWithFilesToDownload();\n    const downloadedFileIds = [];\n    const maxFileCount = 10;\n    const maxFileSize = 1024 * 1024 * 500;\n    let count = 0;\n    let currentSize = 0;\n    let nextSize = 0;\n\n    const waitForFiles = () => {\n      if (count + 1 < maxFileCount && currentSize + nextSize < maxFileSize) {\n        return;\n      }\n\n      Meteor.wrapAsync(callback => {\n        const handler = setInterval(() => {\n          if (count + 1 >= maxFileCount) {\n            return;\n          }\n\n          if (currentSize + nextSize >= maxFileSize && count > 0) {\n            return;\n          }\n\n          clearInterval(handler);\n          callback();\n        }, 1000);\n      })();\n    };\n\n    const completeFile = details => {\n      this.addCountCompleted(1);\n      count--;\n      currentSize -= details.size;\n    };\n\n    const logError = error => {\n      this.logger.error(error);\n    };\n\n    try {\n      pendingFileMessageList.forEach(message => {\n        try {\n          const {\n            _importFile\n          } = message;\n\n          if (!_importFile || _importFile.downloaded || downloadedFileIds.includes(_importFile.id)) {\n            this.addCountCompleted(1);\n            return;\n          }\n\n          const url = _importFile.downloadUrl;\n\n          if (!url || !url.startsWith('http')) {\n            this.addCountCompleted(1);\n            return;\n          }\n\n          const details = {\n            message_id: \"\".concat(message._id, \"-file-\").concat(_importFile.id),\n            name: _importFile.name || Random.id(),\n            size: _importFile.size || 0,\n            userId: message.u._id,\n            rid: message.rid\n          };\n          const requestModule = /https/i.test(url) ? https : http;\n          const fileStore = FileUpload.getStore('Uploads');\n          const reportProgress = this.reportProgress.bind(this);\n          nextSize = details.size;\n          waitForFiles();\n          count++;\n          currentSize += nextSize;\n          downloadedFileIds.push(_importFile.id);\n          requestModule.get(url, Meteor.bindEnvironment(function (res) {\n            const contentType = res.headers['content-type'];\n\n            if (!details.type && contentType) {\n              details.type = contentType;\n            }\n\n            const rawData = [];\n            res.on('data', Meteor.bindEnvironment(chunk => {\n              rawData.push(chunk); // Update progress more often on large files\n\n              reportProgress();\n            }));\n            res.on('error', Meteor.bindEnvironment(error => {\n              completeFile(details);\n              logError(error);\n            }));\n            res.on('end', Meteor.bindEnvironment(() => {\n              try {\n                // Bypass the fileStore filters\n                fileStore._doInsert(details, Buffer.concat(rawData), function (error, file) {\n                  if (error) {\n                    completeFile(details);\n                    logError(error);\n                    return;\n                  }\n\n                  const url = FileUpload.getPath(\"\".concat(file._id, \"/\").concat(encodeURI(file.name)));\n                  const attachment = {\n                    title: file.name,\n                    title_link: url\n                  };\n\n                  if (/^image\\/.+/.test(file.type)) {\n                    attachment.image_url = url;\n                    attachment.image_type = file.type;\n                    attachment.image_size = file.size;\n                    attachment.image_dimensions = file.identify != null ? file.identify.size : undefined;\n                  }\n\n                  if (/^audio\\/.+/.test(file.type)) {\n                    attachment.audio_url = url;\n                    attachment.audio_type = file.type;\n                    attachment.audio_size = file.size;\n                  }\n\n                  if (/^video\\/.+/.test(file.type)) {\n                    attachment.video_url = url;\n                    attachment.video_type = file.type;\n                    attachment.video_size = file.size;\n                  }\n\n                  Messages.setImportFileRocketChatAttachment(_importFile.id, url, attachment);\n                  completeFile(details);\n                });\n              } catch (error) {\n                completeFile(details);\n                logError(error);\n              }\n            }));\n          }));\n        } catch (error) {\n          this.logger.error(error);\n        }\n      });\n    } catch (error) {\n      // If the cursor expired, restart the method\n      if (error && error.codeName === 'CursorNotFound') {\n        return this.startImport();\n      }\n\n      super.updateProgress(ProgressStep.ERROR);\n      throw error;\n    }\n\n    super.updateProgress(ProgressStep.DONE);\n    return this.getProgress();\n  }\n\n}","map":{"version":3,"sources":["app/importer-pending-files/server/importer.js"],"names":["module","export","PendingFileImporter","https","link","default","v","http","Meteor","Random","Base","ProgressStep","Selection","Messages","FileUpload","constructor","info","importRecord","userTags","bots","prepareFileCount","logger","debug","updateProgress","PREPARING_STARTED","messages","findAllImportedMessagesWithFilesToDownload","fileCount","count","DONE","updateRecord","addCountToTotal","fileData","name","IMPORTING_FILES","defer","startImport","pendingFileMessageList","downloadedFileIds","maxFileCount","maxFileSize","currentSize","nextSize","waitForFiles","wrapAsync","callback","handler","setInterval","clearInterval","completeFile","details","addCountCompleted","size","logError","error","forEach","message","_importFile","downloaded","includes","id","url","downloadUrl","startsWith","message_id","_id","userId","u","rid","requestModule","test","fileStore","getStore","reportProgress","bind","push","get","bindEnvironment","res","contentType","headers","type","rawData","on","chunk","_doInsert","Buffer","concat","file","getPath","encodeURI","attachment","title","title_link","image_url","image_type","image_size","image_dimensions","identify","undefined","audio_url","audio_type","audio_size","video_url","video_type","video_size","setImportFileRocketChatAttachment","codeName","ERROR","getProgress"],"mappings":"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","sourcesContent":["import https from 'https';\nimport http from 'http';\n\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { Base, ProgressStep, Selection } from '../../importer/server';\nimport { Messages } from '../../models';\nimport { FileUpload } from '../../file-upload';\n\nexport class PendingFileImporter extends Base {\n\tconstructor(info, importRecord) {\n\t\tsuper(info, importRecord);\n\t\tthis.userTags = [];\n\t\tthis.bots = {};\n\t}\n\n\tprepareFileCount() {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tsuper.updateProgress(ProgressStep.PREPARING_STARTED);\n\n\t\tconst messages = Messages.findAllImportedMessagesWithFilesToDownload();\n\t\tconst fileCount = messages.count();\n\n\t\tif (fileCount === 0) {\n\t\t\tsuper.updateProgress(ProgressStep.DONE);\n\t\t\treturn 0;\n\t\t}\n\n\t\tthis.updateRecord({ 'count.messages': fileCount, 'messagesstatus': null });\n\t\tthis.addCountToTotal(fileCount);\n\n\t\tconst fileData = new Selection(this.name, [], [], fileCount);\n\t\tthis.updateRecord({ fileData });\n\n\t\tsuper.updateProgress(ProgressStep.IMPORTING_FILES);\n\t\tMeteor.defer(() => {\n\t\t\tthis.startImport(fileData);\n\t\t});\n\n\t\treturn fileCount;\n\t}\n\n\tstartImport() {\n\t\tconst pendingFileMessageList = Messages.findAllImportedMessagesWithFilesToDownload();\n\t\tconst downloadedFileIds = [];\n\t\tconst maxFileCount = 10;\n\t\tconst maxFileSize = 1024 * 1024 * 500;\n\n\t\tlet count = 0;\n\t\tlet currentSize = 0;\n\t\tlet nextSize = 0;\n\n\t\tconst waitForFiles = () => {\n\t\t\tif (count + 1 < maxFileCount && currentSize + nextSize < maxFileSize) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tMeteor.wrapAsync((callback) => {\n\t\t\t\tconst handler = setInterval(() => {\n\t\t\t\t\tif (count + 1 >= maxFileCount) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentSize + nextSize >= maxFileSize && count > 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearInterval(handler);\n\t\t\t\t\tcallback();\n\t\t\t\t}, 1000);\n\t\t\t})();\n\t\t};\n\n\t\tconst completeFile = (details) => {\n\t\t\tthis.addCountCompleted(1);\n\t\t\tcount--;\n\t\t\tcurrentSize -= details.size;\n\t\t};\n\n\t\tconst logError = (error) => {\n\t\t\tthis.logger.error(error);\n\t\t};\n\n\t\ttry {\n\t\t\tpendingFileMessageList.forEach((message) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { _importFile } = message;\n\n\t\t\t\t\tif (!_importFile || _importFile.downloaded || downloadedFileIds.includes(_importFile.id)) {\n\t\t\t\t\t\tthis.addCountCompleted(1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst url = _importFile.downloadUrl;\n\t\t\t\t\tif (!url || !url.startsWith('http')) {\n\t\t\t\t\t\tthis.addCountCompleted(1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst details = {\n\t\t\t\t\t\tmessage_id: `${message._id}-file-${_importFile.id}`,\n\t\t\t\t\t\tname: _importFile.name || Random.id(),\n\t\t\t\t\t\tsize: _importFile.size || 0,\n\t\t\t\t\t\tuserId: message.u._id,\n\t\t\t\t\t\trid: message.rid,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst requestModule = /https/i.test(url) ? https : http;\n\t\t\t\t\tconst fileStore = FileUpload.getStore('Uploads');\n\t\t\t\t\tconst reportProgress = this.reportProgress.bind(this);\n\n\t\t\t\t\tnextSize = details.size;\n\t\t\t\t\twaitForFiles();\n\t\t\t\t\tcount++;\n\t\t\t\t\tcurrentSize += nextSize;\n\t\t\t\t\tdownloadedFileIds.push(_importFile.id);\n\n\t\t\t\t\trequestModule.get(\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tMeteor.bindEnvironment(function (res) {\n\t\t\t\t\t\t\tconst contentType = res.headers['content-type'];\n\t\t\t\t\t\t\tif (!details.type && contentType) {\n\t\t\t\t\t\t\t\tdetails.type = contentType;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst rawData = [];\n\t\t\t\t\t\t\tres.on(\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\tMeteor.bindEnvironment((chunk) => {\n\t\t\t\t\t\t\t\t\trawData.push(chunk);\n\n\t\t\t\t\t\t\t\t\t// Update progress more often on large files\n\t\t\t\t\t\t\t\t\treportProgress();\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tres.on(\n\t\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t\t\tMeteor.bindEnvironment((error) => {\n\t\t\t\t\t\t\t\t\tcompleteFile(details);\n\t\t\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tres.on(\n\t\t\t\t\t\t\t\t'end',\n\t\t\t\t\t\t\t\tMeteor.bindEnvironment(() => {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t// Bypass the fileStore filters\n\t\t\t\t\t\t\t\t\t\tfileStore._doInsert(details, Buffer.concat(rawData), function (error, file) {\n\t\t\t\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\t\t\t\tcompleteFile(details);\n\t\t\t\t\t\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tconst url = FileUpload.getPath(`${file._id}/${encodeURI(file.name)}`);\n\t\t\t\t\t\t\t\t\t\t\tconst attachment = {\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: file.name,\n\t\t\t\t\t\t\t\t\t\t\t\ttitle_link: url,\n\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\t\tif (/^image\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.image_url = url;\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.image_type = file.type;\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.image_size = file.size;\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.image_dimensions = file.identify != null ? file.identify.size : undefined;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (/^audio\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.audio_url = url;\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.audio_type = file.type;\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.audio_size = file.size;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (/^video\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.video_url = url;\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.video_type = file.type;\n\t\t\t\t\t\t\t\t\t\t\t\tattachment.video_size = file.size;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tMessages.setImportFileRocketChatAttachment(_importFile.id, url, attachment);\n\t\t\t\t\t\t\t\t\t\t\tcompleteFile(details);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\t\tcompleteFile(details);\n\t\t\t\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logger.error(error);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\t// If the cursor expired, restart the method\n\t\t\tif (error && error.codeName === 'CursorNotFound') {\n\t\t\t\treturn this.startImport();\n\t\t\t}\n\n\t\t\tsuper.updateProgress(ProgressStep.ERROR);\n\t\t\tthrow error;\n\t\t}\n\n\t\tsuper.updateProgress(ProgressStep.DONE);\n\t\treturn this.getProgress();\n\t}\n}\n"]},"sourceType":"module","hash":"c0a3c271a68290d04a156a149bc0585be6cd26de"}

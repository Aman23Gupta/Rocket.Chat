{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cloud/server/functions/connectWorkspace.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/cloud/server/functions/connectWorkspace.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cloud/server/functions/connectWorkspace.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cloud/server/functions/connectWorkspace.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/cloud/server/functions/connectWorkspace.js"}},"code":"module.export({\n  connectWorkspace: () => connectWorkspace\n});\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 0);\nlet getRedirectUri;\nmodule.link(\"./getRedirectUri\", {\n  getRedirectUri(v) {\n    getRedirectUri = v;\n  }\n\n}, 1);\nlet retrieveRegistrationStatus;\nmodule.link(\"./retrieveRegistrationStatus\", {\n  retrieveRegistrationStatus(v) {\n    retrieveRegistrationStatus = v;\n  }\n\n}, 2);\nlet Settings;\nmodule.link(\"../../../models\", {\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet saveRegistrationData;\nmodule.link(\"./saveRegistrationData\", {\n  saveRegistrationData(v) {\n    saveRegistrationData = v;\n  }\n\n}, 5);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 6);\n\nfunction connectWorkspace(token) {\n  const {\n    connectToCloud\n  } = retrieveRegistrationStatus();\n\n  if (!connectToCloud) {\n    Settings.updateValueById('Register_Server', true);\n  } // shouldn't get here due to checking this on the method\n  // but this is just to double check\n\n\n  if (!token) {\n    return new Error('Invalid token; the registration token is required.');\n  }\n\n  const redirectUri = getRedirectUri();\n  const regInfo = {\n    email: settings.get('Organization_Email'),\n    client_name: settings.get('Site_Name'),\n    redirect_uris: [redirectUri]\n  };\n  const cloudUrl = settings.get('Cloud_Url');\n  let result;\n\n  try {\n    result = HTTP.post(\"\".concat(cloudUrl, \"/api/oauth/clients\"), {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      },\n      data: regInfo\n    });\n  } catch (e) {\n    if (e.response && e.response.data && e.response.data.error) {\n      SystemLogger.error(\"Failed to register with Rocket.Chat Cloud.  Error: \".concat(e.response.data.error));\n    } else {\n      SystemLogger.error(e);\n    }\n\n    return false;\n  }\n\n  const {\n    data\n  } = result;\n\n  if (!data) {\n    return false;\n  }\n\n  Promise.await(saveRegistrationData(data));\n  return true;\n}","map":{"version":3,"sources":["app/cloud/server/functions/connectWorkspace.js"],"names":["module","export","connectWorkspace","HTTP","link","v","getRedirectUri","retrieveRegistrationStatus","Settings","settings","saveRegistrationData","SystemLogger","token","connectToCloud","updateValueById","Error","redirectUri","regInfo","email","get","client_name","redirect_uris","cloudUrl","result","post","headers","Authorization","data","e","response","error","Promise","await"],"mappings":"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","sourcesContent":["import { HTTP } from 'meteor/http';\n\nimport { getRedirectUri } from './getRedirectUri';\nimport { retrieveRegistrationStatus } from './retrieveRegistrationStatus';\nimport { Settings } from '../../../models';\nimport { settings } from '../../../settings';\nimport { saveRegistrationData } from './saveRegistrationData';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\nexport function connectWorkspace(token) {\n\tconst { connectToCloud } = retrieveRegistrationStatus();\n\tif (!connectToCloud) {\n\t\tSettings.updateValueById('Register_Server', true);\n\t}\n\n\t// shouldn't get here due to checking this on the method\n\t// but this is just to double check\n\tif (!token) {\n\t\treturn new Error('Invalid token; the registration token is required.');\n\t}\n\n\tconst redirectUri = getRedirectUri();\n\n\tconst regInfo = {\n\t\temail: settings.get('Organization_Email'),\n\t\tclient_name: settings.get('Site_Name'),\n\t\tredirect_uris: [redirectUri],\n\t};\n\n\tconst cloudUrl = settings.get('Cloud_Url');\n\tlet result;\n\ttry {\n\t\tresult = HTTP.post(`${cloudUrl}/api/oauth/clients`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t\tdata: regInfo,\n\t\t});\n\t} catch (e) {\n\t\tif (e.response && e.response.data && e.response.data.error) {\n\t\t\tSystemLogger.error(`Failed to register with Rocket.Chat Cloud.  Error: ${e.response.data.error}`);\n\t\t} else {\n\t\t\tSystemLogger.error(e);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconst { data } = result;\n\n\tif (!data) {\n\t\treturn false;\n\t}\n\n\tPromise.await(saveRegistrationData(data));\n\n\treturn true;\n}\n"]},"sourceType":"module","hash":"814a32a59d0de3cb0465ee4b5275c53bdbda6a92"}

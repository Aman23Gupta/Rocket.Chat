{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/lib/normalizeMessagesForUser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/utils/server/lib/normalizeMessagesForUser.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/lib/normalizeMessagesForUser.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/lib/normalizeMessagesForUser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/server/lib/normalizeMessagesForUser.js"}},"code":"module.export({\n  normalizeMessagesForUser: () => normalizeMessagesForUser\n});\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\n\nconst filterStarred = (message, uid) => {\n  // only return starred field if user has it starred\n  if (message.starred && Array.isArray(message.starred)) {\n    message.starred = message.starred.filter(star => star._id === uid);\n  }\n\n  return message;\n}; // TODO: we should let clients get user names on demand instead of doing this\n\n\nfunction getNameOfUsername(users, username) {\n  return users.get(username) || username;\n}\n\nconst normalizeMessagesForUser = (messages, uid) => {\n  // if not using real names, there is nothing else to do\n  if (!settings.get('UI_Use_Real_Name')) {\n    return messages.map(message => filterStarred(message, uid));\n  }\n\n  const usernames = new Set();\n  messages.forEach(message => {\n    message = filterStarred(message, uid);\n\n    if (!message.u || !message.u.username) {\n      return;\n    }\n\n    usernames.add(message.u.username);\n    (message.mentions || []).forEach(_ref => {\n      let {\n        username\n      } = _ref;\n      usernames.add(username);\n    });\n    Object.values(message.reactions || {}).forEach(reaction => reaction.usernames.forEach(username => usernames.add(username)));\n  });\n  const names = new Map();\n  Users.findUsersByUsernames([...usernames.values()], {\n    fields: {\n      username: 1,\n      name: 1\n    }\n  }).forEach(user => {\n    names.set(user.username, user.name);\n  });\n  messages.forEach(message => {\n    if (!message.u) {\n      return;\n    }\n\n    message.u.name = getNameOfUsername(names, message.u.username);\n    (message.mentions || []).forEach(mention => {\n      mention.name = getNameOfUsername(names, mention.username);\n    });\n    Object.keys(message.reactions || {}).forEach(reaction => {\n      message.reactions[reaction].names = message.reactions[reaction].usernames.map(username => getNameOfUsername(names, username));\n    });\n  });\n  return messages;\n};","map":{"version":3,"sources":["app/utils/server/lib/normalizeMessagesForUser.js"],"names":["module","export","normalizeMessagesForUser","Users","link","v","settings","filterStarred","message","uid","starred","Array","isArray","filter","star","_id","getNameOfUsername","users","username","get","messages","map","usernames","Set","forEach","u","add","mentions","Object","values","reactions","reaction","names","Map","findUsersByUsernames","fields","name","user","set","mention","keys"],"mappings":"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","sourcesContent":["import { Users } from '../../../models/server';\nimport { settings } from '../../../settings/server';\n\nconst filterStarred = (message, uid) => {\n\t// only return starred field if user has it starred\n\tif (message.starred && Array.isArray(message.starred)) {\n\t\tmessage.starred = message.starred.filter((star) => star._id === uid);\n\t}\n\treturn message;\n};\n\n// TODO: we should let clients get user names on demand instead of doing this\n\nfunction getNameOfUsername(users, username) {\n\treturn users.get(username) || username;\n}\n\nexport const normalizeMessagesForUser = (messages, uid) => {\n\t// if not using real names, there is nothing else to do\n\tif (!settings.get('UI_Use_Real_Name')) {\n\t\treturn messages.map((message) => filterStarred(message, uid));\n\t}\n\n\tconst usernames = new Set();\n\n\tmessages.forEach((message) => {\n\t\tmessage = filterStarred(message, uid);\n\n\t\tif (!message.u || !message.u.username) {\n\t\t\treturn;\n\t\t}\n\t\tusernames.add(message.u.username);\n\n\t\t(message.mentions || []).forEach(({ username }) => {\n\t\t\tusernames.add(username);\n\t\t});\n\n\t\tObject.values(message.reactions || {}).forEach((reaction) => reaction.usernames.forEach((username) => usernames.add(username)));\n\t});\n\n\tconst names = new Map();\n\n\tUsers.findUsersByUsernames([...usernames.values()], {\n\t\tfields: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t},\n\t}).forEach((user) => {\n\t\tnames.set(user.username, user.name);\n\t});\n\n\tmessages.forEach((message) => {\n\t\tif (!message.u) {\n\t\t\treturn;\n\t\t}\n\t\tmessage.u.name = getNameOfUsername(names, message.u.username);\n\n\t\t(message.mentions || []).forEach((mention) => {\n\t\t\tmention.name = getNameOfUsername(names, mention.username);\n\t\t});\n\n\t\tObject.keys(message.reactions || {}).forEach((reaction) => {\n\t\t\tmessage.reactions[reaction].names = message.reactions[reaction].usernames.map((username) => getNameOfUsername(names, username));\n\t\t});\n\t});\n\n\treturn messages;\n};\n"]},"sourceType":"module","hash":"24e749baeccce22999d44c1bbe9a36966b4bcaee"}

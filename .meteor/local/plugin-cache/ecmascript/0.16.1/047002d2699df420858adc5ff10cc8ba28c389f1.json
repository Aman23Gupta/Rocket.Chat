{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/reportMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/reportMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/reportMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/reportMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/reportMessage.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Messages;\nmodule.link(\"../../app/models/server\", {\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 2);\nlet Reports, Rooms;\nmodule.link(\"../../app/models/server/raw\", {\n  Reports(v) {\n    Reports = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 3);\nlet canAccessRoomAsync;\nmodule.link(\"../../app/authorization/server/functions/canAccessRoom\", {\n  canAccessRoomAsync(v) {\n    canAccessRoomAsync = v;\n  }\n\n}, 4);\nMeteor.methods({\n  reportMessage(messageId, description) {\n    return Promise.asyncApply(() => {\n      check(messageId, String);\n      check(description, String);\n\n      if (!Meteor.userId()) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'reportMessage'\n        });\n      }\n\n      if (description == null || description.trim() === '') {\n        throw new Meteor.Error('error-invalid-description', 'Invalid description', {\n          method: 'reportMessage'\n        });\n      }\n\n      const message = Messages.findOneById(messageId);\n\n      if (!message) {\n        throw new Meteor.Error('error-invalid-message_id', 'Invalid message id', {\n          method: 'reportMessage'\n        });\n      }\n\n      const uid = Meteor.userId();\n      const {\n        rid\n      } = message; // If the user can't access the room where the message is, report that the message id is invalid\n\n      const room = Promise.await(Rooms.findOneById(rid));\n\n      if (!room || !Promise.await(canAccessRoomAsync(room, {\n        _id: uid\n      }))) {\n        throw new Meteor.Error('error-invalid-message_id', 'Invalid message id', {\n          method: 'reportMessage'\n        });\n      }\n\n      Promise.await(Reports.createWithMessageDescriptionAndUserId(message, description, uid));\n      return true;\n    });\n  }\n\n});","map":{"version":3,"sources":["server/methods/reportMessage.js"],"names":["Meteor","module","link","v","check","Messages","Reports","Rooms","canAccessRoomAsync","methods","reportMessage","messageId","description","String","userId","Error","method","trim","message","findOneById","uid","rid","room","_id","createWithMessageDescriptionAndUserId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { Messages } from '../../app/models/server';\nimport { Reports, Rooms } from '../../app/models/server/raw';\nimport { canAccessRoomAsync } from '../../app/authorization/server/functions/canAccessRoom';\n\nMeteor.methods({\n\tasync reportMessage(messageId, description) {\n\t\tcheck(messageId, String);\n\t\tcheck(description, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'reportMessage',\n\t\t\t});\n\t\t}\n\n\t\tif (description == null || description.trim() === '') {\n\t\t\tthrow new Meteor.Error('error-invalid-description', 'Invalid description', {\n\t\t\t\tmethod: 'reportMessage',\n\t\t\t});\n\t\t}\n\n\t\tconst message = Messages.findOneById(messageId);\n\t\tif (!message) {\n\t\t\tthrow new Meteor.Error('error-invalid-message_id', 'Invalid message id', {\n\t\t\t\tmethod: 'reportMessage',\n\t\t\t});\n\t\t}\n\n\t\tconst uid = Meteor.userId();\n\t\tconst { rid } = message;\n\t\t// If the user can't access the room where the message is, report that the message id is invalid\n\t\tconst room = await Rooms.findOneById(rid);\n\t\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\t\tthrow new Meteor.Error('error-invalid-message_id', 'Invalid message id', {\n\t\t\t\tmethod: 'reportMessage',\n\t\t\t});\n\t\t}\n\n\t\tawait Reports.createWithMessageDescriptionAndUserId(message, description, uid);\n\n\t\treturn true;\n\t},\n});\n"]},"sourceType":"module","hash":"047002d2699df420858adc5ff10cc8ba28c389f1"}

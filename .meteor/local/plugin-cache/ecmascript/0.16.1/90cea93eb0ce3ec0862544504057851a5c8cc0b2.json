{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/emoji-custom/server/methods/uploadEmojiCustom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/emoji-custom/server/methods/uploadEmojiCustom.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/emoji-custom/server/methods/uploadEmojiCustom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/emoji-custom/server/methods/uploadEmojiCustom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/emoji-custom/server/methods/uploadEmojiCustom.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet limax;\nmodule.link(\"limax\", {\n  default(v) {\n    limax = v;\n  }\n\n}, 1);\nlet sharp;\nmodule.link(\"sharp\", {\n  default(v) {\n    sharp = v;\n  }\n\n}, 2);\nlet hasPermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 3);\nlet RocketChatFile;\nmodule.link(\"../../../file\", {\n  RocketChatFile(v) {\n    RocketChatFile = v;\n  }\n\n}, 4);\nlet RocketChatFileEmojiCustomInstance;\nmodule.link(\"../startup/emoji-custom\", {\n  RocketChatFileEmojiCustomInstance(v) {\n    RocketChatFileEmojiCustomInstance = v;\n  }\n\n}, 5);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 6);\nlet Media;\nmodule.link(\"../../../../server/sdk\", {\n  Media(v) {\n    Media = v;\n  }\n\n}, 7);\n\nconst getFile = (file, extension) => Promise.asyncApply(() => {\n  if (extension !== 'svg+xml') {\n    return file;\n  }\n\n  return sharp(file).png().toBuffer();\n});\n\nMeteor.methods({\n  uploadEmojiCustom(binaryContent, contentType, emojiData) {\n    return Promise.asyncApply(() => {\n      // technically, since this method doesnt have any datatype validations, users can\n      // upload videos as emojis. The FE won't play them, but they will waste space for sure.\n      if (!hasPermission(this.userId, 'manage-emoji')) {\n        throw new Meteor.Error('not_authorized');\n      }\n\n      emojiData.name = limax(emojiData.name, {\n        replacement: '_'\n      }); // delete aliases for notification purposes. here, it is a string rather than an array\n\n      delete emojiData.aliases;\n      const file = Promise.await(getFile(Buffer.from(binaryContent, 'binary'), emojiData.extension));\n      emojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;\n      let fileBuffer; // sharp doesn't support these formats without imagemagick or libvips installed\n      // so they will be stored as they are :(\n\n      if (['gif', 'x-icon', 'bmp', 'webm'].includes(emojiData.extension)) {\n        fileBuffer = file;\n      } else {\n        // This is to support the idea of having \"sticker-like\" emojis\n        const {\n          data: resizedEmojiBuffer\n        } = Promise.await(Media.resizeFromBuffer(file, 512, 512, true, false, false, 'inside'));\n        fileBuffer = resizedEmojiBuffer;\n      }\n\n      const rs = RocketChatFile.bufferToStream(fileBuffer);\n      RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.extension)));\n      const ws = RocketChatFileEmojiCustomInstance.createWriteStream(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.extension)), contentType);\n      ws.on('end', Meteor.bindEnvironment(() => Meteor.setTimeout(() => api.broadcast('emoji.updateCustom', emojiData), 500)));\n      rs.pipe(ws);\n    });\n  }\n\n});","map":{"version":3,"sources":["app/emoji-custom/server/methods/uploadEmojiCustom.js"],"names":["Meteor","module","link","v","limax","default","sharp","hasPermission","RocketChatFile","RocketChatFileEmojiCustomInstance","api","Media","getFile","file","extension","png","toBuffer","methods","uploadEmojiCustom","binaryContent","contentType","emojiData","userId","Error","name","replacement","aliases","Buffer","from","fileBuffer","includes","data","resizedEmojiBuffer","resizeFromBuffer","rs","bufferToStream","deleteFile","encodeURIComponent","ws","createWriteStream","on","bindEnvironment","setTimeout","broadcast","pipe"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport limax from 'limax';\nimport sharp from 'sharp';\n\nimport { hasPermission } from '../../../authorization';\nimport { RocketChatFile } from '../../../file';\nimport { RocketChatFileEmojiCustomInstance } from '../startup/emoji-custom';\nimport { api } from '../../../../server/sdk/api';\nimport { Media } from '../../../../server/sdk';\n\nconst getFile = async (file, extension) => {\n\tif (extension !== 'svg+xml') {\n\t\treturn file;\n\t}\n\n\treturn sharp(file).png().toBuffer();\n};\n\nMeteor.methods({\n\tasync uploadEmojiCustom(binaryContent, contentType, emojiData) {\n\t\t// technically, since this method doesnt have any datatype validations, users can\n\t\t// upload videos as emojis. The FE won't play them, but they will waste space for sure.\n\t\tif (!hasPermission(this.userId, 'manage-emoji')) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\temojiData.name = limax(emojiData.name, { replacement: '_' });\n\t\t// delete aliases for notification purposes. here, it is a string rather than an array\n\t\tdelete emojiData.aliases;\n\n\t\tconst file = await getFile(Buffer.from(binaryContent, 'binary'), emojiData.extension);\n\t\temojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;\n\n\t\tlet fileBuffer;\n\t\t// sharp doesn't support these formats without imagemagick or libvips installed\n\t\t// so they will be stored as they are :(\n\t\tif (['gif', 'x-icon', 'bmp', 'webm'].includes(emojiData.extension)) {\n\t\t\tfileBuffer = file;\n\t\t} else {\n\t\t\t// This is to support the idea of having \"sticker-like\" emojis\n\t\t\tconst { data: resizedEmojiBuffer } = await Media.resizeFromBuffer(file, 512, 512, true, false, false, 'inside');\n\t\t\tfileBuffer = resizedEmojiBuffer;\n\t\t}\n\n\t\tconst rs = RocketChatFile.bufferToStream(fileBuffer);\n\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\tconst ws = RocketChatFileEmojiCustomInstance.createWriteStream(\n\t\t\tencodeURIComponent(`${emojiData.name}.${emojiData.extension}`),\n\t\t\tcontentType,\n\t\t);\n\t\tws.on(\n\t\t\t'end',\n\t\t\tMeteor.bindEnvironment(() => Meteor.setTimeout(() => api.broadcast('emoji.updateCustom', emojiData), 500)),\n\t\t);\n\n\t\trs.pipe(ws);\n\t},\n});\n"]},"sourceType":"module","hash":"90cea93eb0ce3ec0862544504057851a5c8cc0b2"}

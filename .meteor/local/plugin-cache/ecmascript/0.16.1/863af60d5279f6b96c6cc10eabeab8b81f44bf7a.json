{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/client/lib/roomTypes.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/utils/client/lib/roomTypes.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/client/lib/roomTypes.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/client/lib/roomTypes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/client/lib/roomTypes.js"}},"code":"var _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nmodule.export({\n  roomTypes: function () {\n    return roomTypes;\n  }\n});\nvar FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 0);\n\nvar _;\n\nmodule.link(\"underscore\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 1);\nvar RoomTypesCommon;\nmodule.link(\"../../lib/RoomTypesCommon\", {\n  RoomTypesCommon: function (v) {\n    RoomTypesCommon = v;\n  }\n}, 2);\nvar hasAtLeastOnePermission;\nmodule.link(\"../../../authorization\", {\n  hasAtLeastOnePermission: function (v) {\n    hasAtLeastOnePermission = v;\n  }\n}, 3);\nvar ChatRoom, ChatSubscription;\nmodule.link(\"../../../models\", {\n  ChatRoom: function (v) {\n    ChatRoom = v;\n  },\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  }\n}, 4);\nvar roomTypes = new ( /*#__PURE__*/function (_RoomTypesCommon) {\n  _inheritsLoose(RocketChatRoomTypes, _RoomTypesCommon);\n\n  function RocketChatRoomTypes() {\n    return _RoomTypesCommon.apply(this, arguments) || this;\n  }\n\n  var _proto = RocketChatRoomTypes.prototype;\n\n  _proto.checkCondition = function () {\n    function checkCondition(roomType) {\n      return roomType.condition == null || roomType.condition();\n    }\n\n    return checkCondition;\n  }();\n\n  _proto.getTypes = function () {\n    function getTypes() {\n      var _this = this;\n\n      return _.sortBy(this.roomTypesOrder, 'order').map(function (type) {\n        return _this.roomTypes[type.identifier];\n      }).filter(function (type) {\n        return !type.condition || type.condition();\n      });\n    }\n\n    return getTypes;\n  }();\n\n  _proto.getIcon = function () {\n    function getIcon(roomData) {\n      if (!roomData || !roomData.t || !this.roomTypes[roomData.t]) {\n        return;\n      }\n\n      return this.roomTypes[roomData.t].getIcon && this.roomTypes[roomData.t].getIcon(roomData) || this.roomTypes[roomData.t].icon;\n    }\n\n    return getIcon;\n  }();\n\n  _proto.getRoomName = function () {\n    function getRoomName(roomType, roomData) {\n      return this.roomTypes[roomType] && this.roomTypes[roomType].roomName && this.roomTypes[roomType].roomName(roomData);\n    }\n\n    return getRoomName;\n  }();\n\n  _proto.getSecondaryRoomName = function () {\n    function getSecondaryRoomName(roomType, roomData) {\n      return this.roomTypes[roomType] && typeof this.roomTypes[roomType].secondaryRoomName === 'function' && this.roomTypes[roomType].secondaryRoomName(roomData);\n    }\n\n    return getSecondaryRoomName;\n  }();\n\n  _proto.getIdentifiers = function () {\n    function getIdentifiers(e) {\n      var except = [].concat(e);\n\n      var list = _.reject(this.roomTypesOrder, function (t) {\n        return except.indexOf(t.identifier) !== -1;\n      });\n\n      return _.map(list, function (t) {\n        return t.identifier;\n      });\n    }\n\n    return getIdentifiers;\n  }();\n\n  _proto.getUserStatus = function () {\n    function getUserStatus(roomType, rid) {\n      return this.roomTypes[roomType] && typeof this.roomTypes[roomType].getUserStatus === 'function' && this.roomTypes[roomType].getUserStatus(rid);\n    }\n\n    return getUserStatus;\n  }();\n\n  _proto.getRoomType = function () {\n    function getRoomType(roomId) {\n      var fields = {\n        t: 1\n      };\n      var room = ChatRoom.findOne({\n        _id: roomId\n      }, {\n        fields: fields\n      });\n      return room && room.t;\n    }\n\n    return getRoomType;\n  }();\n\n  _proto.isLivechatRoom = function () {\n    function isLivechatRoom(roomType) {\n      return this.roomTypes[roomType] && typeof this.roomTypes[roomType].isLivechatRoom === 'function' && this.roomTypes[roomType].isLivechatRoom();\n    }\n\n    return isLivechatRoom;\n  }();\n\n  _proto.showQuickActionButtons = function () {\n    function showQuickActionButtons(roomType) {\n      return this.roomTypes[roomType] && typeof this.roomTypes[roomType].showQuickActionButtons === 'function' && this.roomTypes[roomType].showQuickActionButtons();\n    }\n\n    return showQuickActionButtons;\n  }();\n\n  _proto.getUserStatusText = function () {\n    function getUserStatusText(roomType, rid) {\n      return this.roomTypes[roomType] && typeof this.roomTypes[roomType].getUserStatusText === 'function' && this.roomTypes[roomType].getUserStatusText(rid);\n    }\n\n    return getUserStatusText;\n  }();\n\n  _proto.findRoom = function () {\n    function findRoom(roomType, identifier, user) {\n      return this.roomTypes[roomType] && this.roomTypes[roomType].findRoom(identifier, user);\n    }\n\n    return findRoom;\n  }();\n\n  _proto.canSendMessage = function () {\n    function canSendMessage(rid) {\n      return ChatSubscription.find({\n        rid: rid\n      }).count() > 0;\n    }\n\n    return canSendMessage;\n  }();\n\n  _proto.readOnly = function () {\n    function readOnly(rid, user) {\n      var fields = {\n        ro: 1,\n        t: 1\n      };\n\n      if (user) {\n        fields.muted = 1;\n        fields.unmuted = 1;\n      }\n\n      var room = ChatRoom.findOne({\n        _id: rid\n      }, {\n        fields: fields\n      });\n      var roomType = room && room.t;\n\n      if (roomType && this.roomTypes[roomType] && this.roomTypes[roomType].readOnly) {\n        return this.roomTypes[roomType].readOnly(rid, user);\n      }\n\n      if (!user) {\n        return room && room.ro;\n      }\n\n      if (room) {\n        if (Array.isArray(room.muted) && room.muted.indexOf(user.username) !== -1) {\n          return true;\n        }\n\n        if (room.ro === true) {\n          if (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username) !== -1) {\n            return false;\n          }\n\n          if (hasAtLeastOnePermission('post-readonly', room._id)) {\n            return false;\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    return readOnly;\n  }();\n\n  _proto.archived = function () {\n    function archived(rid) {\n      var room = ChatRoom.findOne({\n        _id: rid\n      }, {\n        fields: {\n          archived: 1\n        }\n      });\n      return room && room.archived === true;\n    }\n\n    return archived;\n  }();\n\n  _proto.verifyCanSendMessage = function () {\n    function verifyCanSendMessage(rid) {\n      var room = ChatRoom.findOne({\n        _id: rid\n      }, {\n        fields: {\n          t: 1\n        }\n      });\n\n      if (!room || !room.t) {\n        return;\n      }\n\n      var roomType = room.t;\n\n      if (this.roomTypes[roomType] && this.roomTypes[roomType].canSendMessage) {\n        return this.roomTypes[roomType].canSendMessage(rid);\n      }\n\n      return this.canSendMessage(rid);\n    }\n\n    return verifyCanSendMessage;\n  }();\n\n  _proto.verifyShowJoinLink = function () {\n    function verifyShowJoinLink(rid) {\n      var room = ChatRoom.findOne({\n        _id: rid,\n        t: {\n          $exists: true,\n          $ne: null\n        }\n      }, {\n        fields: {\n          t: 1\n        }\n      });\n\n      if (!room || !room.t) {\n        return;\n      }\n\n      var roomType = room.t;\n\n      if (this.roomTypes[roomType] && !this.roomTypes[roomType].showJoinLink) {\n        return false;\n      }\n\n      return this.roomTypes[roomType].showJoinLink(rid);\n    }\n\n    return verifyShowJoinLink;\n  }();\n\n  _proto.getNotSubscribedTpl = function () {\n    function getNotSubscribedTpl(rid) {\n      var room = ChatRoom.findOne({\n        _id: rid,\n        t: {\n          $exists: true,\n          $ne: null\n        }\n      }, {\n        fields: {\n          t: 1\n        }\n      });\n\n      if (!room || !room.t) {\n        return;\n      }\n\n      var roomType = room.t;\n\n      if (this.roomTypes[roomType] && !this.roomTypes[roomType].notSubscribedTpl) {\n        return false;\n      }\n\n      return this.roomTypes[roomType].notSubscribedTpl;\n    }\n\n    return getNotSubscribedTpl;\n  }();\n\n  _proto.getReadOnlyTpl = function () {\n    function getReadOnlyTpl(rid) {\n      var room = ChatRoom.findOne({\n        _id: rid,\n        t: {\n          $exists: true,\n          $ne: null\n        }\n      }, {\n        fields: {\n          t: 1\n        }\n      });\n\n      if (!room || !room.t) {\n        return;\n      }\n\n      var roomType = room.t;\n      return this.roomTypes[roomType] && this.roomTypes[roomType].readOnlyTpl;\n    }\n\n    return getReadOnlyTpl;\n  }();\n\n  _proto.openRouteLink = function () {\n    function openRouteLink(roomType, subData, queryParams) {\n      if (!this.roomTypes[roomType]) {\n        return false;\n      }\n\n      var routeData = {};\n\n      if (this.roomTypes[roomType] && this.roomTypes[roomType].route && this.roomTypes[roomType].route.link) {\n        routeData = this.roomTypes[roomType].route.link(subData);\n      } else if (subData && subData.name) {\n        routeData = {\n          name: subData.name\n        };\n      }\n\n      return FlowRouter.go(this.roomTypes[roomType].route.name, routeData, queryParams);\n    }\n\n    return openRouteLink;\n  }();\n\n  return RocketChatRoomTypes;\n}(RoomTypesCommon))();","map":{"version":3,"sources":["app/utils/client/lib/roomTypes.js"],"names":["_inheritsLoose","module","link","default","v","export","roomTypes","FlowRouter","_","RoomTypesCommon","hasAtLeastOnePermission","ChatRoom","ChatSubscription","checkCondition","roomType","condition","getTypes","sortBy","roomTypesOrder","map","type","identifier","filter","getIcon","roomData","t","icon","getRoomName","roomName","getSecondaryRoomName","secondaryRoomName","getIdentifiers","e","except","concat","list","reject","indexOf","getUserStatus","rid","getRoomType","roomId","fields","room","findOne","_id","isLivechatRoom","showQuickActionButtons","getUserStatusText","findRoom","user","canSendMessage","find","count","readOnly","ro","muted","unmuted","Array","isArray","username","archived","verifyCanSendMessage","verifyShowJoinLink","$exists","$ne","showJoinLink","getNotSubscribedTpl","notSubscribedTpl","getReadOnlyTpl","readOnlyTpl","openRouteLink","subData","queryParams","routeData","route","name","go"],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport _ from 'underscore';\n\nimport { RoomTypesCommon } from '../../lib/RoomTypesCommon';\nimport { hasAtLeastOnePermission } from '../../../authorization';\nimport { ChatRoom, ChatSubscription } from '../../../models';\n\nexport const roomTypes = new (class RocketChatRoomTypes extends RoomTypesCommon {\n\tcheckCondition(roomType) {\n\t\treturn roomType.condition == null || roomType.condition();\n\t}\n\n\tgetTypes() {\n\t\treturn _.sortBy(this.roomTypesOrder, 'order')\n\t\t\t.map((type) => this.roomTypes[type.identifier])\n\t\t\t.filter((type) => !type.condition || type.condition());\n\t}\n\n\tgetIcon(roomData) {\n\t\tif (!roomData || !roomData.t || !this.roomTypes[roomData.t]) {\n\t\t\treturn;\n\t\t}\n\t\treturn (this.roomTypes[roomData.t].getIcon && this.roomTypes[roomData.t].getIcon(roomData)) || this.roomTypes[roomData.t].icon;\n\t}\n\n\tgetRoomName(roomType, roomData) {\n\t\treturn this.roomTypes[roomType] && this.roomTypes[roomType].roomName && this.roomTypes[roomType].roomName(roomData);\n\t}\n\n\tgetSecondaryRoomName(roomType, roomData) {\n\t\treturn (\n\t\t\tthis.roomTypes[roomType] &&\n\t\t\ttypeof this.roomTypes[roomType].secondaryRoomName === 'function' &&\n\t\t\tthis.roomTypes[roomType].secondaryRoomName(roomData)\n\t\t);\n\t}\n\n\tgetIdentifiers(e) {\n\t\tconst except = [].concat(e);\n\t\tconst list = _.reject(this.roomTypesOrder, (t) => except.indexOf(t.identifier) !== -1);\n\t\treturn _.map(list, (t) => t.identifier);\n\t}\n\n\tgetUserStatus(roomType, rid) {\n\t\treturn (\n\t\t\tthis.roomTypes[roomType] &&\n\t\t\ttypeof this.roomTypes[roomType].getUserStatus === 'function' &&\n\t\t\tthis.roomTypes[roomType].getUserStatus(rid)\n\t\t);\n\t}\n\n\tgetRoomType(roomId) {\n\t\tconst fields = {\n\t\t\tt: 1,\n\t\t};\n\t\tconst room = ChatRoom.findOne(\n\t\t\t{\n\t\t\t\t_id: roomId,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields,\n\t\t\t},\n\t\t);\n\t\treturn room && room.t;\n\t}\n\n\tisLivechatRoom(roomType) {\n\t\treturn (\n\t\t\tthis.roomTypes[roomType] && typeof this.roomTypes[roomType].isLivechatRoom === 'function' && this.roomTypes[roomType].isLivechatRoom()\n\t\t);\n\t}\n\n\tshowQuickActionButtons(roomType) {\n\t\treturn (\n\t\t\tthis.roomTypes[roomType] &&\n\t\t\ttypeof this.roomTypes[roomType].showQuickActionButtons === 'function' &&\n\t\t\tthis.roomTypes[roomType].showQuickActionButtons()\n\t\t);\n\t}\n\n\tgetUserStatusText(roomType, rid) {\n\t\treturn (\n\t\t\tthis.roomTypes[roomType] &&\n\t\t\ttypeof this.roomTypes[roomType].getUserStatusText === 'function' &&\n\t\t\tthis.roomTypes[roomType].getUserStatusText(rid)\n\t\t);\n\t}\n\n\tfindRoom(roomType, identifier, user) {\n\t\treturn this.roomTypes[roomType] && this.roomTypes[roomType].findRoom(identifier, user);\n\t}\n\n\tcanSendMessage(rid) {\n\t\treturn ChatSubscription.find({ rid }).count() > 0;\n\t}\n\n\treadOnly(rid, user) {\n\t\tconst fields = {\n\t\t\tro: 1,\n\t\t\tt: 1,\n\t\t};\n\t\tif (user) {\n\t\t\tfields.muted = 1;\n\t\t\tfields.unmuted = 1;\n\t\t}\n\t\tconst room = ChatRoom.findOne(\n\t\t\t{\n\t\t\t\t_id: rid,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields,\n\t\t\t},\n\t\t);\n\n\t\tconst roomType = room && room.t;\n\t\tif (roomType && this.roomTypes[roomType] && this.roomTypes[roomType].readOnly) {\n\t\t\treturn this.roomTypes[roomType].readOnly(rid, user);\n\t\t}\n\n\t\tif (!user) {\n\t\t\treturn room && room.ro;\n\t\t}\n\n\t\tif (room) {\n\t\t\tif (Array.isArray(room.muted) && room.muted.indexOf(user.username) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (room.ro === true) {\n\t\t\t\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username) !== -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (hasAtLeastOnePermission('post-readonly', room._id)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tarchived(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { archived: 1 } });\n\t\treturn room && room.archived === true;\n\t}\n\n\tverifyCanSendMessage(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { t: 1 } });\n\n\t\tif (!room || !room.t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst roomType = room.t;\n\t\tif (this.roomTypes[roomType] && this.roomTypes[roomType].canSendMessage) {\n\t\t\treturn this.roomTypes[roomType].canSendMessage(rid);\n\t\t}\n\t\treturn this.canSendMessage(rid);\n\t}\n\n\tverifyShowJoinLink(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid, t: { $exists: true, $ne: null } }, { fields: { t: 1 } });\n\t\tif (!room || !room.t) {\n\t\t\treturn;\n\t\t}\n\t\tconst roomType = room.t;\n\t\tif (this.roomTypes[roomType] && !this.roomTypes[roomType].showJoinLink) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.roomTypes[roomType].showJoinLink(rid);\n\t}\n\n\tgetNotSubscribedTpl(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid, t: { $exists: true, $ne: null } }, { fields: { t: 1 } });\n\t\tif (!room || !room.t) {\n\t\t\treturn;\n\t\t}\n\t\tconst roomType = room.t;\n\t\tif (this.roomTypes[roomType] && !this.roomTypes[roomType].notSubscribedTpl) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.roomTypes[roomType].notSubscribedTpl;\n\t}\n\n\tgetReadOnlyTpl(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid, t: { $exists: true, $ne: null } }, { fields: { t: 1 } });\n\t\tif (!room || !room.t) {\n\t\t\treturn;\n\t\t}\n\t\tconst roomType = room.t;\n\t\treturn this.roomTypes[roomType] && this.roomTypes[roomType].readOnlyTpl;\n\t}\n\n\topenRouteLink(roomType, subData, queryParams) {\n\t\tif (!this.roomTypes[roomType]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet routeData = {};\n\t\tif (this.roomTypes[roomType] && this.roomTypes[roomType].route && this.roomTypes[roomType].route.link) {\n\t\t\trouteData = this.roomTypes[roomType].route.link(subData);\n\t\t} else if (subData && subData.name) {\n\t\t\trouteData = {\n\t\t\t\tname: subData.name,\n\t\t\t};\n\t\t}\n\n\t\treturn FlowRouter.go(this.roomTypes[roomType].route.name, routeData, queryParams);\n\t}\n})();\n"]},"sourceType":"module","hash":"863af60d5279f6b96c6cc10eabeab8b81f44bf7a"}

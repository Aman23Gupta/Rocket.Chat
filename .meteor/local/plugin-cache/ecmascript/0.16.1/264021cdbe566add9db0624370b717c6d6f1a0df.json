{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/metrics/server/lib/metrics.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/metrics/server/lib/metrics.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/metrics/server/lib/metrics.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/metrics/server/lib/metrics.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/metrics/server/lib/metrics.js"}},"code":"module.export({\n  metrics: () => metrics\n});\nlet client;\nmodule.link(\"prom-client\", {\n  default(v) {\n    client = v;\n  }\n\n}, 0);\nconst metrics = {};\nconst percentiles = [0.01, 0.1, 0.9, 0.99]; // Metrics\n\nmetrics.metricsRequests = new client.Counter({\n  name: 'rocketchat_metrics_requests',\n  labelNames: ['notification_type'],\n  help: 'cumulated number of calls to the metrics endpoint'\n});\nmetrics.metricsSize = new client.Gauge({\n  name: 'rocketchat_metrics_size',\n  help: 'size of the metrics response in chars'\n});\nmetrics.info = new client.Gauge({\n  name: 'rocketchat_info',\n  labelNames: ['version', 'unique_id', 'site_url'],\n  help: 'Rocket.Chat info'\n});\nmetrics.meteorMethods = new client.Summary({\n  name: 'rocketchat_meteor_methods',\n  help: 'summary of meteor methods count and time',\n  labelNames: ['method', 'has_connection', 'has_user'],\n  percentiles\n});\nmetrics.rocketchatCallbacks = new client.Summary({\n  name: 'rocketchat_callbacks',\n  help: 'summary of rocketchat callbacks count and time',\n  labelNames: ['hook', 'callback'],\n  percentiles\n});\nmetrics.rocketchatHooks = new client.Summary({\n  name: 'rocketchat_hooks',\n  help: 'summary of rocketchat hooks count and time',\n  labelNames: ['hook', 'callbacks_length'],\n  percentiles\n});\nmetrics.rocketchatRestApi = new client.Summary({\n  name: 'rocketchat_rest_api',\n  help: 'summary of rocketchat rest api count and time',\n  labelNames: ['method', 'entrypoint', 'user_agent', 'status', 'version'],\n  percentiles\n});\nmetrics.meteorSubscriptions = new client.Summary({\n  name: 'rocketchat_meteor_subscriptions',\n  help: 'summary of meteor subscriptions count and time',\n  labelNames: ['subscription'],\n  percentiles\n});\nmetrics.messagesSent = new client.Counter({\n  name: 'rocketchat_message_sent',\n  help: 'cumulated number of messages sent'\n});\nmetrics.notificationsSent = new client.Counter({\n  name: 'rocketchat_notification_sent',\n  labelNames: ['notification_type'],\n  help: 'cumulated number of notifications sent'\n});\nmetrics.messageRoundtripTime = new client.Gauge({\n  name: 'rocketchat_messages_roundtrip_time',\n  help: 'time spent by a message from save to receive back'\n});\nmetrics.ddpSessions = new client.Gauge({\n  name: 'rocketchat_ddp_sessions_count',\n  help: 'number of open ddp sessions'\n});\nmetrics.ddpAuthenticatedSessions = new client.Gauge({\n  name: 'rocketchat_ddp_sessions_auth',\n  help: 'number of authenticated open ddp sessions'\n});\nmetrics.ddpConnectedUsers = new client.Gauge({\n  name: 'rocketchat_ddp_connected_users',\n  help: 'number of unique connected users'\n});\nmetrics.ddpRateLimitExceeded = new client.Counter({\n  name: 'rocketchat_ddp_rate_limit_exceeded',\n  labelNames: ['limit_name', 'user_id', 'client_address', 'type', 'name', 'connection_id'],\n  help: 'number of times a ddp rate limiter was exceeded'\n});\nmetrics.version = new client.Gauge({\n  name: 'rocketchat_version',\n  labelNames: ['version'],\n  help: 'Rocket.Chat version'\n});\nmetrics.migration = new client.Gauge({\n  name: 'rocketchat_migration',\n  help: 'migration versoin'\n});\nmetrics.instanceCount = new client.Gauge({\n  name: 'rocketchat_instance_count',\n  help: 'instances running'\n});\nmetrics.oplogEnabled = new client.Gauge({\n  name: 'rocketchat_oplog_enabled',\n  labelNames: ['enabled'],\n  help: 'oplog enabled'\n});\nmetrics.oplogQueue = new client.Gauge({\n  name: 'rocketchat_oplog_queue',\n  labelNames: ['queue'],\n  help: 'oplog queue'\n});\nmetrics.oplog = new client.Counter({\n  name: 'rocketchat_oplog',\n  help: 'summary of oplog operations',\n  labelNames: ['collection', 'op']\n});\nmetrics.pushQueue = new client.Gauge({\n  name: 'rocketchat_push_queue',\n  labelNames: ['queue'],\n  help: 'push queue'\n}); // User statistics\n\nmetrics.totalUsers = new client.Gauge({\n  name: 'rocketchat_users_total',\n  help: 'total of users'\n});\nmetrics.activeUsers = new client.Gauge({\n  name: 'rocketchat_users_active',\n  help: 'total of active users'\n});\nmetrics.nonActiveUsers = new client.Gauge({\n  name: 'rocketchat_users_non_active',\n  help: 'total of non active users'\n});\nmetrics.onlineUsers = new client.Gauge({\n  name: 'rocketchat_users_online',\n  help: 'total of users online'\n});\nmetrics.awayUsers = new client.Gauge({\n  name: 'rocketchat_users_away',\n  help: 'total of users away'\n});\nmetrics.offlineUsers = new client.Gauge({\n  name: 'rocketchat_users_offline',\n  help: 'total of users offline'\n}); // Room statistics\n\nmetrics.totalRooms = new client.Gauge({\n  name: 'rocketchat_rooms_total',\n  help: 'total of rooms'\n});\nmetrics.totalChannels = new client.Gauge({\n  name: 'rocketchat_channels_total',\n  help: 'total of public rooms/channels'\n});\nmetrics.totalPrivateGroups = new client.Gauge({\n  name: 'rocketchat_private_groups_total',\n  help: 'total of private rooms'\n});\nmetrics.totalDirect = new client.Gauge({\n  name: 'rocketchat_direct_total',\n  help: 'total of direct rooms'\n});\nmetrics.totalLivechat = new client.Gauge({\n  name: 'rocketchat_livechat_total',\n  help: 'total of livechat rooms'\n}); // Message statistics\n\nmetrics.totalMessages = new client.Gauge({\n  name: 'rocketchat_messages_total',\n  help: 'total of messages'\n});\nmetrics.totalChannelMessages = new client.Gauge({\n  name: 'rocketchat_channel_messages_total',\n  help: 'total of messages in public rooms'\n});\nmetrics.totalPrivateGroupMessages = new client.Gauge({\n  name: 'rocketchat_private_group_messages_total',\n  help: 'total of messages in private rooms'\n});\nmetrics.totalDirectMessages = new client.Gauge({\n  name: 'rocketchat_direct_messages_total',\n  help: 'total of messages in direct rooms'\n});\nmetrics.totalLivechatMessages = new client.Gauge({\n  name: 'rocketchat_livechat_messages_total',\n  help: 'total of messages in livechat rooms'\n}); // Apps metrics\n\nmetrics.totalAppsInstalled = new client.Gauge({\n  name: 'rocketchat_apps_installed',\n  help: 'total apps installed'\n});\nmetrics.totalAppsEnabled = new client.Gauge({\n  name: 'rocketchat_apps_enabled',\n  help: 'total apps enabled'\n});\nmetrics.totalAppsFailed = new client.Gauge({\n  name: 'rocketchat_apps_failed',\n  help: 'total apps that failed to load'\n}); // Meteor Facts\n\nmetrics.meteorFacts = new client.Gauge({\n  name: 'rocketchat_meteor_facts',\n  labelNames: ['pkg', 'fact'],\n  help: 'internal meteor facts'\n});","map":{"version":3,"sources":["app/metrics/server/lib/metrics.js"],"names":["module","export","metrics","client","link","default","v","percentiles","metricsRequests","Counter","name","labelNames","help","metricsSize","Gauge","info","meteorMethods","Summary","rocketchatCallbacks","rocketchatHooks","rocketchatRestApi","meteorSubscriptions","messagesSent","notificationsSent","messageRoundtripTime","ddpSessions","ddpAuthenticatedSessions","ddpConnectedUsers","ddpRateLimitExceeded","version","migration","instanceCount","oplogEnabled","oplogQueue","oplog","pushQueue","totalUsers","activeUsers","nonActiveUsers","onlineUsers","awayUsers","offlineUsers","totalRooms","totalChannels","totalPrivateGroups","totalDirect","totalLivechat","totalMessages","totalChannelMessages","totalPrivateGroupMessages","totalDirectMessages","totalLivechatMessages","totalAppsInstalled","totalAppsEnabled","totalAppsFailed","meteorFacts"],"mappings":"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","sourcesContent":["import client from 'prom-client';\n\nexport const metrics = {};\nconst percentiles = [0.01, 0.1, 0.9, 0.99];\n\n// Metrics\nmetrics.metricsRequests = new client.Counter({\n\tname: 'rocketchat_metrics_requests',\n\tlabelNames: ['notification_type'],\n\thelp: 'cumulated number of calls to the metrics endpoint',\n});\nmetrics.metricsSize = new client.Gauge({\n\tname: 'rocketchat_metrics_size',\n\thelp: 'size of the metrics response in chars',\n});\n\nmetrics.info = new client.Gauge({\n\tname: 'rocketchat_info',\n\tlabelNames: ['version', 'unique_id', 'site_url'],\n\thelp: 'Rocket.Chat info',\n});\n\nmetrics.meteorMethods = new client.Summary({\n\tname: 'rocketchat_meteor_methods',\n\thelp: 'summary of meteor methods count and time',\n\tlabelNames: ['method', 'has_connection', 'has_user'],\n\tpercentiles,\n});\n\nmetrics.rocketchatCallbacks = new client.Summary({\n\tname: 'rocketchat_callbacks',\n\thelp: 'summary of rocketchat callbacks count and time',\n\tlabelNames: ['hook', 'callback'],\n\tpercentiles,\n});\n\nmetrics.rocketchatHooks = new client.Summary({\n\tname: 'rocketchat_hooks',\n\thelp: 'summary of rocketchat hooks count and time',\n\tlabelNames: ['hook', 'callbacks_length'],\n\tpercentiles,\n});\n\nmetrics.rocketchatRestApi = new client.Summary({\n\tname: 'rocketchat_rest_api',\n\thelp: 'summary of rocketchat rest api count and time',\n\tlabelNames: ['method', 'entrypoint', 'user_agent', 'status', 'version'],\n\tpercentiles,\n});\n\nmetrics.meteorSubscriptions = new client.Summary({\n\tname: 'rocketchat_meteor_subscriptions',\n\thelp: 'summary of meteor subscriptions count and time',\n\tlabelNames: ['subscription'],\n\tpercentiles,\n});\n\nmetrics.messagesSent = new client.Counter({\n\tname: 'rocketchat_message_sent',\n\thelp: 'cumulated number of messages sent',\n});\nmetrics.notificationsSent = new client.Counter({\n\tname: 'rocketchat_notification_sent',\n\tlabelNames: ['notification_type'],\n\thelp: 'cumulated number of notifications sent',\n});\nmetrics.messageRoundtripTime = new client.Gauge({\n\tname: 'rocketchat_messages_roundtrip_time',\n\thelp: 'time spent by a message from save to receive back',\n});\n\nmetrics.ddpSessions = new client.Gauge({\n\tname: 'rocketchat_ddp_sessions_count',\n\thelp: 'number of open ddp sessions',\n});\nmetrics.ddpAuthenticatedSessions = new client.Gauge({\n\tname: 'rocketchat_ddp_sessions_auth',\n\thelp: 'number of authenticated open ddp sessions',\n});\nmetrics.ddpConnectedUsers = new client.Gauge({\n\tname: 'rocketchat_ddp_connected_users',\n\thelp: 'number of unique connected users',\n});\nmetrics.ddpRateLimitExceeded = new client.Counter({\n\tname: 'rocketchat_ddp_rate_limit_exceeded',\n\tlabelNames: ['limit_name', 'user_id', 'client_address', 'type', 'name', 'connection_id'],\n\thelp: 'number of times a ddp rate limiter was exceeded',\n});\n\nmetrics.version = new client.Gauge({\n\tname: 'rocketchat_version',\n\tlabelNames: ['version'],\n\thelp: 'Rocket.Chat version',\n});\nmetrics.migration = new client.Gauge({ name: 'rocketchat_migration', help: 'migration versoin' });\nmetrics.instanceCount = new client.Gauge({\n\tname: 'rocketchat_instance_count',\n\thelp: 'instances running',\n});\nmetrics.oplogEnabled = new client.Gauge({\n\tname: 'rocketchat_oplog_enabled',\n\tlabelNames: ['enabled'],\n\thelp: 'oplog enabled',\n});\nmetrics.oplogQueue = new client.Gauge({\n\tname: 'rocketchat_oplog_queue',\n\tlabelNames: ['queue'],\n\thelp: 'oplog queue',\n});\nmetrics.oplog = new client.Counter({\n\tname: 'rocketchat_oplog',\n\thelp: 'summary of oplog operations',\n\tlabelNames: ['collection', 'op'],\n});\n\nmetrics.pushQueue = new client.Gauge({\n\tname: 'rocketchat_push_queue',\n\tlabelNames: ['queue'],\n\thelp: 'push queue',\n});\n\n// User statistics\nmetrics.totalUsers = new client.Gauge({ name: 'rocketchat_users_total', help: 'total of users' });\nmetrics.activeUsers = new client.Gauge({\n\tname: 'rocketchat_users_active',\n\thelp: 'total of active users',\n});\nmetrics.nonActiveUsers = new client.Gauge({\n\tname: 'rocketchat_users_non_active',\n\thelp: 'total of non active users',\n});\nmetrics.onlineUsers = new client.Gauge({\n\tname: 'rocketchat_users_online',\n\thelp: 'total of users online',\n});\nmetrics.awayUsers = new client.Gauge({\n\tname: 'rocketchat_users_away',\n\thelp: 'total of users away',\n});\nmetrics.offlineUsers = new client.Gauge({\n\tname: 'rocketchat_users_offline',\n\thelp: 'total of users offline',\n});\n\n// Room statistics\nmetrics.totalRooms = new client.Gauge({ name: 'rocketchat_rooms_total', help: 'total of rooms' });\nmetrics.totalChannels = new client.Gauge({\n\tname: 'rocketchat_channels_total',\n\thelp: 'total of public rooms/channels',\n});\nmetrics.totalPrivateGroups = new client.Gauge({\n\tname: 'rocketchat_private_groups_total',\n\thelp: 'total of private rooms',\n});\nmetrics.totalDirect = new client.Gauge({\n\tname: 'rocketchat_direct_total',\n\thelp: 'total of direct rooms',\n});\nmetrics.totalLivechat = new client.Gauge({\n\tname: 'rocketchat_livechat_total',\n\thelp: 'total of livechat rooms',\n});\n\n// Message statistics\nmetrics.totalMessages = new client.Gauge({\n\tname: 'rocketchat_messages_total',\n\thelp: 'total of messages',\n});\nmetrics.totalChannelMessages = new client.Gauge({\n\tname: 'rocketchat_channel_messages_total',\n\thelp: 'total of messages in public rooms',\n});\nmetrics.totalPrivateGroupMessages = new client.Gauge({\n\tname: 'rocketchat_private_group_messages_total',\n\thelp: 'total of messages in private rooms',\n});\nmetrics.totalDirectMessages = new client.Gauge({\n\tname: 'rocketchat_direct_messages_total',\n\thelp: 'total of messages in direct rooms',\n});\nmetrics.totalLivechatMessages = new client.Gauge({\n\tname: 'rocketchat_livechat_messages_total',\n\thelp: 'total of messages in livechat rooms',\n});\n\n// Apps metrics\nmetrics.totalAppsInstalled = new client.Gauge({\n\tname: 'rocketchat_apps_installed',\n\thelp: 'total apps installed',\n});\nmetrics.totalAppsEnabled = new client.Gauge({\n\tname: 'rocketchat_apps_enabled',\n\thelp: 'total apps enabled',\n});\nmetrics.totalAppsFailed = new client.Gauge({\n\tname: 'rocketchat_apps_failed',\n\thelp: 'total apps that failed to load',\n});\n\n// Meteor Facts\nmetrics.meteorFacts = new client.Gauge({\n\tname: 'rocketchat_meteor_facts',\n\tlabelNames: ['pkg', 'fact'],\n\thelp: 'internal meteor facts',\n});\n"]},"sourceType":"module","hash":"264021cdbe566add9db0624370b717c6d6f1a0df"}

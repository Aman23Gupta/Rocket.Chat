{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/oauth/google.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/oauth/google.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/oauth/google.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/oauth/google.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/oauth/google.js"}},"code":"let Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 2);\nlet Google;\nmodule.link(\"meteor/google-oauth\", {\n  Google(v) {\n    Google = v;\n  }\n\n}, 3);\nlet registerAccessTokenService;\nmodule.link(\"./oauth\", {\n  registerAccessTokenService(v) {\n    registerAccessTokenService = v;\n  }\n\n}, 4);\n\nfunction getIdentity(accessToken) {\n  try {\n    return HTTP.get('https://www.googleapis.com/oauth2/v1/userinfo', {\n      params: {\n        access_token: accessToken\n      }\n    }).data;\n  } catch (err) {\n    throw _.extend(new Error(\"Failed to fetch identity from Google. \".concat(err.message)), {\n      response: err.response\n    });\n  }\n}\n\nfunction getScopes(accessToken) {\n  try {\n    return HTTP.get('https://www.googleapis.com/oauth2/v1/tokeninfo', {\n      params: {\n        access_token: accessToken\n      }\n    }).data.scope.split(' ');\n  } catch (err) {\n    throw _.extend(new Error(\"Failed to fetch tokeninfo from Google. \".concat(err.message)), {\n      response: err.response\n    });\n  }\n}\n\nregisterAccessTokenService('google', function (options) {\n  check(options, Match.ObjectIncluding({\n    accessToken: String,\n    idToken: String,\n    expiresIn: Match.Integer,\n    scope: Match.Maybe(String),\n    identity: Match.Maybe(Object)\n  }));\n  const identity = getIdentity(options.accessToken);\n  const serviceData = {\n    accessToken: options.accessToken,\n    idToken: options.idToken,\n    expiresAt: +new Date() + 1000 * parseInt(options.expiresIn, 10),\n    scope: options.scopes || getScopes(options.accessToken)\n  };\n\n  const fields = _.pick(identity, Google.whitelistedFields);\n\n  _.extend(serviceData, fields); // only set the token in serviceData if it's there. this ensures\n  // that we don't lose old ones (since we only get this on the first\n  // log in attempt)\n\n\n  if (options.refreshToken) {\n    serviceData.refreshToken = options.refreshToken;\n  }\n\n  return {\n    serviceData,\n    options: {\n      profile: {\n        name: identity.name\n      }\n    }\n  };\n});","map":{"version":3,"sources":["app/lib/server/oauth/google.js"],"names":["Match","check","module","link","v","_","default","HTTP","Google","registerAccessTokenService","getIdentity","accessToken","get","params","access_token","data","err","extend","Error","message","response","getScopes","scope","split","options","ObjectIncluding","String","idToken","expiresIn","Integer","Maybe","identity","Object","serviceData","expiresAt","Date","parseInt","scopes","fields","pick","whitelistedFields","refreshToken","profile","name"],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\nimport _ from 'underscore';\nimport { HTTP } from 'meteor/http';\nimport { Google } from 'meteor/google-oauth';\n\nimport { registerAccessTokenService } from './oauth';\n\nfunction getIdentity(accessToken) {\n\ttry {\n\t\treturn HTTP.get('https://www.googleapis.com/oauth2/v1/userinfo', {\n\t\t\tparams: { access_token: accessToken },\n\t\t}).data;\n\t} catch (err) {\n\t\tthrow _.extend(new Error(`Failed to fetch identity from Google. ${err.message}`), {\n\t\t\tresponse: err.response,\n\t\t});\n\t}\n}\n\nfunction getScopes(accessToken) {\n\ttry {\n\t\treturn HTTP.get('https://www.googleapis.com/oauth2/v1/tokeninfo', {\n\t\t\tparams: { access_token: accessToken },\n\t\t}).data.scope.split(' ');\n\t} catch (err) {\n\t\tthrow _.extend(new Error(`Failed to fetch tokeninfo from Google. ${err.message}`), {\n\t\t\tresponse: err.response,\n\t\t});\n\t}\n}\n\nregisterAccessTokenService('google', function (options) {\n\tcheck(\n\t\toptions,\n\t\tMatch.ObjectIncluding({\n\t\t\taccessToken: String,\n\t\t\tidToken: String,\n\t\t\texpiresIn: Match.Integer,\n\t\t\tscope: Match.Maybe(String),\n\t\t\tidentity: Match.Maybe(Object),\n\t\t}),\n\t);\n\n\tconst identity = getIdentity(options.accessToken);\n\n\tconst serviceData = {\n\t\taccessToken: options.accessToken,\n\t\tidToken: options.idToken,\n\t\texpiresAt: +new Date() + 1000 * parseInt(options.expiresIn, 10),\n\t\tscope: options.scopes || getScopes(options.accessToken),\n\t};\n\n\tconst fields = _.pick(identity, Google.whitelistedFields);\n\t_.extend(serviceData, fields);\n\n\t// only set the token in serviceData if it's there. this ensures\n\t// that we don't lose old ones (since we only get this on the first\n\t// log in attempt)\n\tif (options.refreshToken) {\n\t\tserviceData.refreshToken = options.refreshToken;\n\t}\n\n\treturn {\n\t\tserviceData,\n\t\toptions: {\n\t\t\tprofile: {\n\t\t\t\tname: identity.name,\n\t\t\t},\n\t\t},\n\t};\n});\n"]},"sourceType":"module","hash":"ea3ba0c5216b48ba3a78404b639cd87e2bd54570"}

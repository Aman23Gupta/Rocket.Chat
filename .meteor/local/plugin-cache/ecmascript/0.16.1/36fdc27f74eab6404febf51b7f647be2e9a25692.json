{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Messages.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/raw/Messages.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Messages.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/raw/Messages.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/Messages.js"}},"code":"module.export({\n  MessagesRaw: () => MessagesRaw\n});\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 0);\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 1);\n\nclass MessagesRaw extends BaseRaw {\n  findVisibleByMentionAndRoomId(username, rid, options) {\n    const query = {\n      '_hidden': {\n        $ne: true\n      },\n      'mentions.username': username,\n      rid\n    };\n    return this.find(query, options);\n  }\n\n  findStarredByUserAtRoom(userId, roomId, options) {\n    const query = {\n      '_hidden': {\n        $ne: true\n      },\n      'starred._id': userId,\n      'rid': roomId\n    };\n    return this.find(query, options);\n  }\n\n  findByRoomIdAndType(roomId, type, options) {\n    const query = {\n      rid: roomId,\n      t: type\n    };\n\n    if (options == null) {\n      options = {};\n    }\n\n    return this.find(query, options);\n  }\n\n  findSnippetedByRoom(roomId, options) {\n    const query = {\n      _hidden: {\n        $ne: true\n      },\n      snippeted: true,\n      rid: roomId\n    };\n    return this.find(query, options);\n  }\n\n  findDiscussionsByRoom(rid, options) {\n    const query = {\n      rid,\n      drid: {\n        $exists: true\n      }\n    };\n    return this.find(query, options);\n  }\n\n  findDiscussionsByRoomAndText(rid, text, options) {\n    const query = {\n      rid,\n      drid: {\n        $exists: true\n      },\n      msg: new RegExp(escapeRegExp(text), 'i')\n    };\n    return this.find(query, options);\n  }\n\n  findAllNumberOfTransferredRooms(_ref) {\n    let {\n      start,\n      end,\n      departmentId,\n      onlyCount = false,\n      options = {}\n    } = _ref;\n    const match = {\n      $match: {\n        t: 'livechat_transfer_history',\n        ts: {\n          $gte: new Date(start),\n          $lte: new Date(end)\n        }\n      }\n    };\n    const lookup = {\n      $lookup: {\n        from: 'rocketchat_room',\n        localField: 'rid',\n        foreignField: '_id',\n        as: 'room'\n      }\n    };\n    const unwind = {\n      $unwind: {\n        path: '$room',\n        preserveNullAndEmptyArrays: true\n      }\n    };\n    const group = {\n      $group: {\n        _id: {\n          _id: null,\n          departmentId: '$room.departmentId'\n        },\n        numberOfTransferredRooms: {\n          $sum: 1\n        }\n      }\n    };\n    const project = {\n      $project: {\n        _id: {\n          $ifNull: ['$_id.departmentId', null]\n        },\n        numberOfTransferredRooms: 1\n      }\n    };\n    const firstParams = [match, lookup, unwind];\n\n    if (departmentId) {\n      firstParams.push({\n        $match: {\n          'room.departmentId': departmentId\n        }\n      });\n    }\n\n    const sort = {\n      $sort: options.sort || {\n        name: 1\n      }\n    };\n    const params = [...firstParams, group, project, sort];\n\n    if (onlyCount) {\n      params.push({\n        $count: 'total'\n      });\n      return this.col.aggregate(params);\n    }\n\n    if (options.offset) {\n      params.push({\n        $skip: options.offset\n      });\n    }\n\n    if (options.count) {\n      params.push({\n        $limit: options.count\n      });\n    }\n\n    return this.col.aggregate(params, {\n      allowDiskUse: true\n    });\n  }\n\n  getTotalOfMessagesSentByDate(_ref2) {\n    let {\n      start,\n      end,\n      options = {}\n    } = _ref2;\n    const params = [{\n      $match: {\n        t: {\n          $exists: false\n        },\n        ts: {\n          $gte: start,\n          $lte: end\n        }\n      }\n    }, {\n      $lookup: {\n        from: 'rocketchat_room',\n        localField: 'rid',\n        foreignField: '_id',\n        as: 'room'\n      }\n    }, {\n      $unwind: {\n        path: '$room'\n      }\n    }, {\n      $group: {\n        _id: {\n          _id: '$room._id',\n          name: {\n            $cond: [{\n              $ifNull: ['$room.fname', false]\n            }, '$room.fname', '$room.name']\n          },\n          t: '$room.t',\n          usernames: {\n            $cond: [{\n              $ifNull: ['$room.usernames', false]\n            }, '$room.usernames', []]\n          },\n          date: {\n            $concat: [{\n              $substr: ['$ts', 0, 4]\n            }, {\n              $substr: ['$ts', 5, 2]\n            }, {\n              $substr: ['$ts', 8, 2]\n            }]\n          }\n        },\n        messages: {\n          $sum: 1\n        }\n      }\n    }, {\n      $project: {\n        _id: 0,\n        date: '$_id.date',\n        room: {\n          _id: '$_id._id',\n          name: '$_id.name',\n          t: '$_id.t',\n          usernames: '$_id.usernames'\n        },\n        type: 'messages',\n        messages: 1\n      }\n    }];\n\n    if (options.sort) {\n      params.push({\n        $sort: options.sort\n      });\n    }\n\n    if (options.count) {\n      params.push({\n        $limit: options.count\n      });\n    }\n\n    return this.col.aggregate(params).toArray();\n  }\n\n  findLivechatClosedMessages(rid, options) {\n    return this.find({\n      rid,\n      $or: [{\n        t: {\n          $exists: false\n        }\n      }, {\n        t: 'livechat-close'\n      }]\n    }, options);\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/Messages.js"],"names":["module","export","MessagesRaw","escapeRegExp","link","v","BaseRaw","findVisibleByMentionAndRoomId","username","rid","options","query","$ne","find","findStarredByUserAtRoom","userId","roomId","findByRoomIdAndType","type","t","findSnippetedByRoom","_hidden","snippeted","findDiscussionsByRoom","drid","$exists","findDiscussionsByRoomAndText","text","msg","RegExp","findAllNumberOfTransferredRooms","start","end","departmentId","onlyCount","match","$match","ts","$gte","Date","$lte","lookup","$lookup","from","localField","foreignField","as","unwind","$unwind","path","preserveNullAndEmptyArrays","group","$group","_id","numberOfTransferredRooms","$sum","project","$project","$ifNull","firstParams","push","sort","$sort","name","params","$count","col","aggregate","offset","$skip","count","$limit","allowDiskUse","getTotalOfMessagesSentByDate","$cond","usernames","date","$concat","$substr","messages","room","toArray","findLivechatClosedMessages","$or"],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class MessagesRaw extends BaseRaw {\n\tfindVisibleByMentionAndRoomId(username, rid, options) {\n\t\tconst query = {\n\t\t\t'_hidden': { $ne: true },\n\t\t\t'mentions.username': username,\n\t\t\trid,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindStarredByUserAtRoom(userId, roomId, options) {\n\t\tconst query = {\n\t\t\t'_hidden': { $ne: true },\n\t\t\t'starred._id': userId,\n\t\t\t'rid': roomId,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByRoomIdAndType(roomId, type, options) {\n\t\tconst query = {\n\t\t\trid: roomId,\n\t\t\tt: type,\n\t\t};\n\n\t\tif (options == null) {\n\t\t\toptions = {};\n\t\t}\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindSnippetedByRoom(roomId, options) {\n\t\tconst query = {\n\t\t\t_hidden: { $ne: true },\n\t\t\tsnippeted: true,\n\t\t\trid: roomId,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindDiscussionsByRoom(rid, options) {\n\t\tconst query = { rid, drid: { $exists: true } };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindDiscussionsByRoomAndText(rid, text, options) {\n\t\tconst query = {\n\t\t\trid,\n\t\t\tdrid: { $exists: true },\n\t\t\tmsg: new RegExp(escapeRegExp(text), 'i'),\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindAllNumberOfTransferredRooms({ start, end, departmentId, onlyCount = false, options = {} }) {\n\t\tconst match = {\n\t\t\t$match: {\n\t\t\t\tt: 'livechat_transfer_history',\n\t\t\t\tts: { $gte: new Date(start), $lte: new Date(end) },\n\t\t\t},\n\t\t};\n\t\tconst lookup = {\n\t\t\t$lookup: {\n\t\t\t\tfrom: 'rocketchat_room',\n\t\t\t\tlocalField: 'rid',\n\t\t\t\tforeignField: '_id',\n\t\t\t\tas: 'room',\n\t\t\t},\n\t\t};\n\t\tconst unwind = {\n\t\t\t$unwind: {\n\t\t\t\tpath: '$room',\n\t\t\t\tpreserveNullAndEmptyArrays: true,\n\t\t\t},\n\t\t};\n\t\tconst group = {\n\t\t\t$group: {\n\t\t\t\t_id: {\n\t\t\t\t\t_id: null,\n\t\t\t\t\tdepartmentId: '$room.departmentId',\n\t\t\t\t},\n\t\t\t\tnumberOfTransferredRooms: { $sum: 1 },\n\t\t\t},\n\t\t};\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\t_id: { $ifNull: ['$_id.departmentId', null] },\n\t\t\t\tnumberOfTransferredRooms: 1,\n\t\t\t},\n\t\t};\n\t\tconst firstParams = [match, lookup, unwind];\n\t\tif (departmentId) {\n\t\t\tfirstParams.push({\n\t\t\t\t$match: {\n\t\t\t\t\t'room.departmentId': departmentId,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tconst sort = { $sort: options.sort || { name: 1 } };\n\t\tconst params = [...firstParams, group, project, sort];\n\t\tif (onlyCount) {\n\t\t\tparams.push({ $count: 'total' });\n\t\t\treturn this.col.aggregate(params);\n\t\t}\n\t\tif (options.offset) {\n\t\t\tparams.push({ $skip: options.offset });\n\t\t}\n\t\tif (options.count) {\n\t\t\tparams.push({ $limit: options.count });\n\t\t}\n\t\treturn this.col.aggregate(params, { allowDiskUse: true });\n\t}\n\n\tgetTotalOfMessagesSentByDate({ start, end, options = {} }) {\n\t\tconst params = [\n\t\t\t{ $match: { t: { $exists: false }, ts: { $gte: start, $lte: end } } },\n\t\t\t{\n\t\t\t\t$lookup: {\n\t\t\t\t\tfrom: 'rocketchat_room',\n\t\t\t\t\tlocalField: 'rid',\n\t\t\t\t\tforeignField: '_id',\n\t\t\t\t\tas: 'room',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$unwind: {\n\t\t\t\t\tpath: '$room',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$group: {\n\t\t\t\t\t_id: {\n\t\t\t\t\t\t_id: '$room._id',\n\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t$cond: [{ $ifNull: ['$room.fname', false] }, '$room.fname', '$room.name'],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tt: '$room.t',\n\t\t\t\t\t\tusernames: {\n\t\t\t\t\t\t\t$cond: [{ $ifNull: ['$room.usernames', false] }, '$room.usernames', []],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdate: {\n\t\t\t\t\t\t\t$concat: [{ $substr: ['$ts', 0, 4] }, { $substr: ['$ts', 5, 2] }, { $substr: ['$ts', 8, 2] }],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmessages: { $sum: 1 },\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t_id: 0,\n\t\t\t\t\tdate: '$_id.date',\n\t\t\t\t\troom: {\n\t\t\t\t\t\t_id: '$_id._id',\n\t\t\t\t\t\tname: '$_id.name',\n\t\t\t\t\t\tt: '$_id.t',\n\t\t\t\t\t\tusernames: '$_id.usernames',\n\t\t\t\t\t},\n\t\t\t\t\ttype: 'messages',\n\t\t\t\t\tmessages: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t\tif (options.sort) {\n\t\t\tparams.push({ $sort: options.sort });\n\t\t}\n\t\tif (options.count) {\n\t\t\tparams.push({ $limit: options.count });\n\t\t}\n\t\treturn this.col.aggregate(params).toArray();\n\t}\n\n\tfindLivechatClosedMessages(rid, options) {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\t$or: [{ t: { $exists: false } }, { t: 'livechat-close' }],\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\t}\n}\n"]},"sourceType":"module","hash":"36fdc27f74eab6404febf51b7f647be2e9a25692"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/GoogleStorage/server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/ufs/GoogleStorage/server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/GoogleStorage/server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/GoogleStorage/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/ufs/GoogleStorage/server.js"}},"code":"module.export({\n  GoogleStorageStore: () => GoogleStorageStore\n});\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet UploadFS;\nmodule.link(\"meteor/jalik:ufs\", {\n  UploadFS(v) {\n    UploadFS = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet Storage;\nmodule.link(\"@google-cloud/storage\", {\n  Storage(v) {\n    Storage = v;\n  }\n\n}, 3);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 4);\n\nclass GoogleStorageStore extends UploadFS.Store {\n  constructor(options) {\n    super(options);\n    const gcs = new Storage(options.connection);\n    this.bucket = gcs.bucket(options.bucket);\n\n    options.getPath = options.getPath || function (file) {\n      return file._id;\n    };\n\n    this.getPath = function (file) {\n      if (file.GoogleStorage) {\n        return file.GoogleStorage.path;\n      } // Compatibility\n      // TODO: Migration\n\n\n      if (file.googleCloudStorage) {\n        return file.googleCloudStorage.path + file._id;\n      }\n    };\n\n    this.getRedirectURL = function (file) {\n      let forceDownload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      let callback = arguments.length > 2 ? arguments[2] : undefined;\n      const params = {\n        action: 'read',\n        responseDisposition: forceDownload ? 'attachment' : 'inline',\n        expires: Date.now() + this.options.URLExpiryTimeSpan * 1000\n      };\n      this.bucket.file(this.getPath(file)).getSignedUrl(params, callback);\n    };\n    /**\n     * Creates the file in the collection\n     * @param file\n     * @param callback\n     * @return {string}\n     */\n\n\n    this.create = function (file, callback) {\n      check(file, Object);\n\n      if (file._id == null) {\n        file._id = Random.id();\n      }\n\n      file.GoogleStorage = {\n        path: this.options.getPath(file)\n      };\n      file.store = this.options.name; // assign store to file\n\n      return this.getCollection().insert(file, callback);\n    };\n    /**\n     * Removes the file\n     * @param fileId\n     * @param callback\n     */\n\n\n    this.delete = function (fileId, callback) {\n      const file = this.getCollection().findOne({\n        _id: fileId\n      });\n      this.bucket.file(this.getPath(file)).delete(function (err, data) {\n        if (err) {\n          SystemLogger.error(err);\n        }\n\n        callback && callback(err, data);\n      });\n    };\n    /**\n     * Returns the file read stream\n     * @param fileId\n     * @param file\n     * @param options\n     * @return {*}\n     */\n\n\n    this.getReadStream = function (fileId, file) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const config = {};\n\n      if (options.start != null) {\n        config.start = options.start;\n      }\n\n      if (options.end != null) {\n        config.end = options.end;\n      }\n\n      return this.bucket.file(this.getPath(file)).createReadStream(config);\n    };\n    /**\n     * Returns the file write stream\n     * @param fileId\n     * @param file\n     * @param options\n     * @return {*}\n     */\n\n\n    this.getWriteStream = function (fileId, file\n    /* , options*/\n    ) {\n      return this.bucket.file(this.getPath(file)).createWriteStream({\n        gzip: false,\n        metadata: {\n          contentType: file.type,\n          contentDisposition: \"inline; filename=\".concat(file.name) // metadata: {\n          // \tcustom: 'metadata'\n          // }\n\n        }\n      });\n    };\n  }\n\n}\n\n// Add store to UFS namespace\nUploadFS.store.GoogleStorage = GoogleStorageStore;","map":{"version":3,"sources":["app/file-upload/ufs/GoogleStorage/server.js"],"names":["module","export","GoogleStorageStore","check","link","v","UploadFS","Random","Storage","SystemLogger","Store","constructor","options","gcs","connection","bucket","getPath","file","_id","GoogleStorage","path","googleCloudStorage","getRedirectURL","forceDownload","callback","params","action","responseDisposition","expires","Date","now","URLExpiryTimeSpan","getSignedUrl","create","Object","id","store","name","getCollection","insert","delete","fileId","findOne","err","data","error","getReadStream","config","start","end","createReadStream","getWriteStream","createWriteStream","gzip","metadata","contentType","type","contentDisposition"],"mappings":"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","sourcesContent":["import { check } from 'meteor/check';\nimport { UploadFS } from 'meteor/jalik:ufs';\nimport { Random } from 'meteor/random';\nimport { Storage } from '@google-cloud/storage';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\n/**\n * GoogleStorage store\n * @param options\n * @constructor\n */\nexport class GoogleStorageStore extends UploadFS.Store {\n\tconstructor(options) {\n\t\tsuper(options);\n\n\t\tconst gcs = new Storage(options.connection);\n\t\tthis.bucket = gcs.bucket(options.bucket);\n\n\t\toptions.getPath =\n\t\t\toptions.getPath ||\n\t\t\tfunction (file) {\n\t\t\t\treturn file._id;\n\t\t\t};\n\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.GoogleStorage) {\n\t\t\t\treturn file.GoogleStorage.path;\n\t\t\t}\n\t\t\t// Compatibility\n\t\t\t// TODO: Migration\n\t\t\tif (file.googleCloudStorage) {\n\t\t\t\treturn file.googleCloudStorage.path + file._id;\n\t\t\t}\n\t\t};\n\n\t\tthis.getRedirectURL = function (file, forceDownload = false, callback) {\n\t\t\tconst params = {\n\t\t\t\taction: 'read',\n\t\t\t\tresponseDisposition: forceDownload ? 'attachment' : 'inline',\n\t\t\t\texpires: Date.now() + this.options.URLExpiryTimeSpan * 1000,\n\t\t\t};\n\n\t\t\tthis.bucket.file(this.getPath(file)).getSignedUrl(params, callback);\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the collection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = function (file, callback) {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.GoogleStorage = {\n\t\t\t\tpath: this.options.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name; // assign store to file\n\t\t\treturn this.getCollection().insert(file, callback);\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = function (fileId, callback) {\n\t\t\tconst file = this.getCollection().findOne({ _id: fileId });\n\t\t\tthis.bucket.file(this.getPath(file)).delete(function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\tSystemLogger.error(err);\n\t\t\t\t}\n\n\t\t\t\tcallback && callback(err, data);\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = function (fileId, file, options = {}) {\n\t\t\tconst config = {};\n\n\t\t\tif (options.start != null) {\n\t\t\t\tconfig.start = options.start;\n\t\t\t}\n\n\t\t\tif (options.end != null) {\n\t\t\t\tconfig.end = options.end;\n\t\t\t}\n\n\t\t\treturn this.bucket.file(this.getPath(file)).createReadStream(config);\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = function (fileId, file /* , options*/) {\n\t\t\treturn this.bucket.file(this.getPath(file)).createWriteStream({\n\t\t\t\tgzip: false,\n\t\t\t\tmetadata: {\n\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\tcontentDisposition: `inline; filename=${file.name}`,\n\t\t\t\t\t// metadata: {\n\t\t\t\t\t// \tcustom: 'metadata'\n\t\t\t\t\t// }\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.GoogleStorage = GoogleStorageStore;\n"]},"sourceType":"module","hash":"1f25d4680babb1ee47b8480fe50a515b14c163dd"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/push.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/push.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/push.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/push.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/push.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet appTokensCollection;\nmodule.link(\"../../../push/server\", {\n  appTokensCollection(v) {\n    appTokensCollection = v;\n  }\n\n}, 3);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 4);\nlet PushNotification;\nmodule.link(\"../../../push-notifications/server/lib/PushNotification\", {\n  default(v) {\n    PushNotification = v;\n  }\n\n}, 5);\nlet canAccessRoom;\nmodule.link(\"../../../authorization/server/functions/canAccessRoom\", {\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  }\n\n}, 6);\nlet Users, Messages, Rooms;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 7);\nAPI.v1.addRoute('push.token', {\n  authRequired: true\n}, {\n  post() {\n    const {\n      type,\n      value,\n      appName\n    } = this.bodyParams;\n    let {\n      id\n    } = this.bodyParams;\n\n    if (id && typeof id !== 'string') {\n      throw new Meteor.Error('error-id-param-not-valid', 'The required \"id\" body param is invalid.');\n    } else {\n      id = Random.id();\n    }\n\n    if (!type || type !== 'apn' && type !== 'gcm') {\n      throw new Meteor.Error('error-type-param-not-valid', 'The required \"type\" body param is missing or invalid.');\n    }\n\n    if (!value || typeof value !== 'string') {\n      throw new Meteor.Error('error-token-param-not-valid', 'The required \"value\" body param is missing or invalid.');\n    }\n\n    if (!appName || typeof appName !== 'string') {\n      throw new Meteor.Error('error-appName-param-not-valid', 'The required \"appName\" body param is missing or invalid.');\n    }\n\n    let result;\n    Meteor.runAsUser(this.userId, () => {\n      result = Meteor.call('raix:push-update', {\n        id,\n        token: {\n          [type]: value\n        },\n        appName,\n        userId: this.userId\n      });\n    });\n    return API.v1.success({\n      result\n    });\n  },\n\n  delete() {\n    const {\n      token\n    } = this.bodyParams;\n\n    if (!token || typeof token !== 'string') {\n      throw new Meteor.Error('error-token-param-not-valid', 'The required \"token\" body param is missing or invalid.');\n    }\n\n    const affectedRecords = appTokensCollection.remove({\n      $or: [{\n        'token.apn': token\n      }, {\n        'token.gcm': token\n      }],\n      userId: this.userId\n    });\n\n    if (affectedRecords === 0) {\n      return API.v1.notFound();\n    }\n\n    return API.v1.success();\n  }\n\n});\nAPI.v1.addRoute('push.get', {\n  authRequired: true\n}, {\n  get() {\n    const params = this.requestParams();\n    check(params, Match.ObjectIncluding({\n      id: String\n    }));\n    const receiver = Users.findOneById(this.userId);\n\n    if (!receiver) {\n      throw new Error('error-user-not-found');\n    }\n\n    const message = Messages.findOneById(params.id);\n\n    if (!message) {\n      throw new Error('error-message-not-found');\n    }\n\n    const room = Rooms.findOneById(message.rid);\n\n    if (!room) {\n      throw new Error('error-room-not-found');\n    }\n\n    if (!canAccessRoom(room, receiver)) {\n      throw new Error('error-not-allowed');\n    }\n\n    const data = PushNotification.getNotificationForMessageId({\n      receiver,\n      room,\n      message\n    });\n    return API.v1.success({\n      data\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/push.js"],"names":["Meteor","module","link","v","Random","Match","check","appTokensCollection","API","PushNotification","default","canAccessRoom","Users","Messages","Rooms","v1","addRoute","authRequired","post","type","value","appName","bodyParams","id","Error","result","runAsUser","userId","call","token","success","delete","affectedRecords","remove","$or","notFound","get","params","requestParams","ObjectIncluding","String","receiver","findOneById","message","room","rid","data","getNotificationForMessageId"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,MAAJ;AAAWH,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACE,EAAAA,MAAM,CAACD,CAAD,EAAG;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIE,KAAJ,EAAUC,KAAV;AAAgBL,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACG,EAAAA,KAAK,CAACF,CAAD,EAAG;AAACE,IAAAA,KAAK,GAACF,CAAN;AAAQ,GAAlB;;AAAmBG,EAAAA,KAAK,CAACH,CAAD,EAAG;AAACG,IAAAA,KAAK,GAACH,CAAN;AAAQ;;AAApC,CAA3B,EAAiE,CAAjE;AAAoE,IAAII,mBAAJ;AAAwBN,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACK,EAAAA,mBAAmB,CAACJ,CAAD,EAAG;AAACI,IAAAA,mBAAmB,GAACJ,CAApB;AAAsB;;AAA9C,CAAnC,EAAmF,CAAnF;AAAsF,IAAIK,GAAJ;AAAQP,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACM,EAAAA,GAAG,CAACL,CAAD,EAAG;AAACK,IAAAA,GAAG,GAACL,CAAJ;AAAM;;AAAd,CAArB,EAAqC,CAArC;AAAwC,IAAIM,gBAAJ;AAAqBR,MAAM,CAACC,IAAP,CAAY,yDAAZ,EAAsE;AAACQ,EAAAA,OAAO,CAACP,CAAD,EAAG;AAACM,IAAAA,gBAAgB,GAACN,CAAjB;AAAmB;;AAA/B,CAAtE,EAAuG,CAAvG;AAA0G,IAAIQ,aAAJ;AAAkBV,MAAM,CAACC,IAAP,CAAY,uDAAZ,EAAoE;AAACS,EAAAA,aAAa,CAACR,CAAD,EAAG;AAACQ,IAAAA,aAAa,GAACR,CAAd;AAAgB;;AAAlC,CAApE,EAAwG,CAAxG;AAA2G,IAAIS,KAAJ,EAAUC,QAAV,EAAmBC,KAAnB;AAAyBb,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACU,EAAAA,KAAK,CAACT,CAAD,EAAG;AAACS,IAAAA,KAAK,GAACT,CAAN;AAAQ,GAAlB;;AAAmBU,EAAAA,QAAQ,CAACV,CAAD,EAAG;AAACU,IAAAA,QAAQ,GAACV,CAAT;AAAW,GAA1C;;AAA2CW,EAAAA,KAAK,CAACX,CAAD,EAAG;AAACW,IAAAA,KAAK,GAACX,CAAN;AAAQ;;AAA5D,CAArC,EAAmG,CAAnG;AAUvoBK,GAAG,CAACO,EAAJ,CAAOC,QAAP,CACC,YADD,EAEC;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAFD,EAGC;AACCC,EAAAA,IAAI,GAAG;AACN,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA2B,KAAKC,UAAtC;AACA,QAAI;AAAEC,MAAAA;AAAF,QAAS,KAAKD,UAAlB;;AAEA,QAAIC,EAAE,IAAI,OAAOA,EAAP,KAAc,QAAxB,EAAkC;AACjC,YAAM,IAAIvB,MAAM,CAACwB,KAAX,CAAiB,0BAAjB,EAA6C,0CAA7C,CAAN;AACA,KAFD,MAEO;AACND,MAAAA,EAAE,GAAGnB,MAAM,CAACmB,EAAP,EAAL;AACA;;AAED,QAAI,CAACJ,IAAD,IAAUA,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAAzC,EAAiD;AAChD,YAAM,IAAInB,MAAM,CAACwB,KAAX,CAAiB,4BAAjB,EAA+C,uDAA/C,CAAN;AACA;;AAED,QAAI,CAACJ,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACxC,YAAM,IAAIpB,MAAM,CAACwB,KAAX,CAAiB,6BAAjB,EAAgD,wDAAhD,CAAN;AACA;;AAED,QAAI,CAACH,OAAD,IAAY,OAAOA,OAAP,KAAmB,QAAnC,EAA6C;AAC5C,YAAM,IAAIrB,MAAM,CAACwB,KAAX,CAAiB,+BAAjB,EAAkD,0DAAlD,CAAN;AACA;;AAED,QAAIC,MAAJ;AACAzB,IAAAA,MAAM,CAAC0B,SAAP,CAAiB,KAAKC,MAAtB,EAA8B,MAAM;AACnCF,MAAAA,MAAM,GAAGzB,MAAM,CAAC4B,IAAP,CAAY,kBAAZ,EAAgC;AACxCL,QAAAA,EADwC;AAExCM,QAAAA,KAAK,EAAE;AAAE,WAACV,IAAD,GAAQC;AAAV,SAFiC;AAGxCC,QAAAA,OAHwC;AAIxCM,QAAAA,MAAM,EAAE,KAAKA;AAJ2B,OAAhC,CAAT;AAMA,KAPD;AASA,WAAOnB,GAAG,CAACO,EAAJ,CAAOe,OAAP,CAAe;AAAEL,MAAAA;AAAF,KAAf,CAAP;AACA,GAlCF;;AAmCCM,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKP,UAAvB;;AAEA,QAAI,CAACO,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACxC,YAAM,IAAI7B,MAAM,CAACwB,KAAX,CAAiB,6BAAjB,EAAgD,wDAAhD,CAAN;AACA;;AAED,UAAMQ,eAAe,GAAGzB,mBAAmB,CAAC0B,MAApB,CAA2B;AAClDC,MAAAA,GAAG,EAAE,CACJ;AACC,qBAAaL;AADd,OADI,EAIJ;AACC,qBAAaA;AADd,OAJI,CAD6C;AASlDF,MAAAA,MAAM,EAAE,KAAKA;AATqC,KAA3B,CAAxB;;AAYA,QAAIK,eAAe,KAAK,CAAxB,EAA2B;AAC1B,aAAOxB,GAAG,CAACO,EAAJ,CAAOoB,QAAP,EAAP;AACA;;AAED,WAAO3B,GAAG,CAACO,EAAJ,CAAOe,OAAP,EAAP;AACA;;AA3DF,CAHD;AAkEAtB,GAAG,CAACO,EAAJ,CAAOC,QAAP,CACC,UADD,EAEC;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAFD,EAGC;AACCmB,EAAAA,GAAG,GAAG;AACL,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACAhC,IAAAA,KAAK,CACJ+B,MADI,EAEJhC,KAAK,CAACkC,eAAN,CAAsB;AACrBhB,MAAAA,EAAE,EAAEiB;AADiB,KAAtB,CAFI,CAAL;AAOA,UAAMC,QAAQ,GAAG7B,KAAK,CAAC8B,WAAN,CAAkB,KAAKf,MAAvB,CAAjB;;AACA,QAAI,CAACc,QAAL,EAAe;AACd,YAAM,IAAIjB,KAAJ,CAAU,sBAAV,CAAN;AACA;;AAED,UAAMmB,OAAO,GAAG9B,QAAQ,CAAC6B,WAAT,CAAqBL,MAAM,CAACd,EAA5B,CAAhB;;AACA,QAAI,CAACoB,OAAL,EAAc;AACb,YAAM,IAAInB,KAAJ,CAAU,yBAAV,CAAN;AACA;;AAED,UAAMoB,IAAI,GAAG9B,KAAK,CAAC4B,WAAN,CAAkBC,OAAO,CAACE,GAA1B,CAAb;;AACA,QAAI,CAACD,IAAL,EAAW;AACV,YAAM,IAAIpB,KAAJ,CAAU,sBAAV,CAAN;AACA;;AAED,QAAI,CAACb,aAAa,CAACiC,IAAD,EAAOH,QAAP,CAAlB,EAAoC;AACnC,YAAM,IAAIjB,KAAJ,CAAU,mBAAV,CAAN;AACA;;AAED,UAAMsB,IAAI,GAAGrC,gBAAgB,CAACsC,2BAAjB,CAA6C;AAAEN,MAAAA,QAAF;AAAYG,MAAAA,IAAZ;AAAkBD,MAAAA;AAAlB,KAA7C,CAAb;AAEA,WAAOnC,GAAG,CAACO,EAAJ,CAAOe,OAAP,CAAe;AAAEgB,MAAAA;AAAF,KAAf,CAAP;AACA;;AAhCF,CAHD","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { Match, check } from 'meteor/check';\n\nimport { appTokensCollection } from '../../../push/server';\nimport { API } from '../api';\nimport PushNotification from '../../../push-notifications/server/lib/PushNotification';\nimport { canAccessRoom } from '../../../authorization/server/functions/canAccessRoom';\nimport { Users, Messages, Rooms } from '../../../models/server';\n\nAPI.v1.addRoute(\n\t'push.token',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { type, value, appName } = this.bodyParams;\n\t\t\tlet { id } = this.bodyParams;\n\n\t\t\tif (id && typeof id !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-id-param-not-valid', 'The required \"id\" body param is invalid.');\n\t\t\t} else {\n\t\t\t\tid = Random.id();\n\t\t\t}\n\n\t\t\tif (!type || (type !== 'apn' && type !== 'gcm')) {\n\t\t\t\tthrow new Meteor.Error('error-type-param-not-valid', 'The required \"type\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tif (!value || typeof value !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-token-param-not-valid', 'The required \"value\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tif (!appName || typeof appName !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-appName-param-not-valid', 'The required \"appName\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tlet result;\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tresult = Meteor.call('raix:push-update', {\n\t\t\t\t\tid,\n\t\t\t\t\ttoken: { [type]: value },\n\t\t\t\t\tappName,\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t\tdelete() {\n\t\t\tconst { token } = this.bodyParams;\n\n\t\t\tif (!token || typeof token !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-token-param-not-valid', 'The required \"token\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tconst affectedRecords = appTokensCollection.remove({\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\t'token.apn': token,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'token.gcm': token,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tuserId: this.userId,\n\t\t\t});\n\n\t\t\tif (affectedRecords === 0) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.get',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst params = this.requestParams();\n\t\t\tcheck(\n\t\t\t\tparams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tid: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst receiver = Users.findOneById(this.userId);\n\t\t\tif (!receiver) {\n\t\t\t\tthrow new Error('error-user-not-found');\n\t\t\t}\n\n\t\t\tconst message = Messages.findOneById(params.id);\n\t\t\tif (!message) {\n\t\t\t\tthrow new Error('error-message-not-found');\n\t\t\t}\n\n\t\t\tconst room = Rooms.findOneById(message.rid);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('error-room-not-found');\n\t\t\t}\n\n\t\t\tif (!canAccessRoom(room, receiver)) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\n\t\t\tconst data = PushNotification.getNotificationForMessageId({ receiver, room, message });\n\n\t\t\treturn API.v1.success({ data });\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"7d13f4f296c522b92b86b7189b1d9af827c6f090"}

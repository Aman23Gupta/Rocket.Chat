{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v221.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v221.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v221.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v221.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v221.js"}},"code":"let MongoInternals;\nmodule.link(\"meteor/mongo\", {\n  MongoInternals(v) {\n    MongoInternals = v;\n  }\n\n}, 0);\nlet Future;\nmodule.link(\"fibers/future\", {\n  default(v) {\n    Future = v;\n  }\n\n}, 1);\nlet addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 2);\nlet Rooms;\nmodule.link(\"../../../app/models/server/raw\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 3);\nlet TeamRaw;\nmodule.link(\"../../../app/models/server/raw/Team\", {\n  TeamRaw(v) {\n    TeamRaw = v;\n  }\n\n}, 4);\nlet TEAM_TYPE;\nmodule.link(\"../../../definition/ITeam\", {\n  TEAM_TYPE(v) {\n    TEAM_TYPE = v;\n  }\n\n}, 5);\n\nfunction migrateTeamNames(fut) {\n  return Promise.asyncApply(() => {\n    const {\n      mongo\n    } = MongoInternals.defaultRemoteCollectionDriver();\n    const Team = new TeamRaw(mongo.db.collection('rocketchat_team'));\n    const rooms = Promise.await(Rooms.find({\n      teamMain: true\n    }, {\n      projection: {\n        name: 1,\n        fname: 1,\n        teamId: 1,\n        t: 1\n      }\n    }).toArray());\n    Promise.await(Promise.all(rooms.map(_ref => Promise.asyncApply(() => {\n      let {\n        name,\n        fname,\n        t,\n        teamId\n      } = _ref;\n      const update = {\n        name: fname || name,\n        type: t === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE\n      };\n      Team.updateNameAndType(teamId, update);\n    }))));\n    fut.return();\n  });\n}\n\naddMigration({\n  version: 221,\n\n  up() {\n    const fut = new Future();\n    migrateTeamNames(fut);\n    fut.wait();\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v221.js"],"names":["MongoInternals","module","link","v","Future","default","addMigration","Rooms","TeamRaw","TEAM_TYPE","migrateTeamNames","fut","mongo","defaultRemoteCollectionDriver","Team","db","collection","rooms","find","teamMain","projection","name","fname","teamId","t","toArray","Promise","all","map","update","type","PUBLIC","PRIVATE","updateNameAndType","return","version","up","wait"],"mappings":"AAAA,IAAIA,cAAJ;AAAmBC,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACF,EAAAA,cAAc,CAACG,CAAD,EAAG;AAACH,IAAAA,cAAc,GAACG,CAAf;AAAiB;;AAApC,CAA3B,EAAiE,CAAjE;AAAoE,IAAIC,MAAJ;AAAWH,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACG,EAAAA,OAAO,CAACF,CAAD,EAAG;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;;AAArB,CAA5B,EAAmD,CAAnD;AAAsD,IAAIG,YAAJ;AAAiBL,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACI,EAAAA,YAAY,CAACH,CAAD,EAAG;AAACG,IAAAA,YAAY,GAACH,CAAb;AAAe;;AAAhC,CAAnC,EAAqE,CAArE;AAAwE,IAAII,KAAJ;AAAUN,MAAM,CAACC,IAAP,CAAY,gCAAZ,EAA6C;AAACK,EAAAA,KAAK,CAACJ,CAAD,EAAG;AAACI,IAAAA,KAAK,GAACJ,CAAN;AAAQ;;AAAlB,CAA7C,EAAiE,CAAjE;AAAoE,IAAIK,OAAJ;AAAYP,MAAM,CAACC,IAAP,CAAY,qCAAZ,EAAkD;AAACM,EAAAA,OAAO,CAACL,CAAD,EAAG;AAACK,IAAAA,OAAO,GAACL,CAAR;AAAU;;AAAtB,CAAlD,EAA0E,CAA1E;AAA6E,IAAIM,SAAJ;AAAcR,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACO,EAAAA,SAAS,CAACN,CAAD,EAAG;AAACM,IAAAA,SAAS,GAACN,CAAV;AAAY;;AAA1B,CAAxC,EAAoE,CAApE;;AAQta,SAAeO,gBAAf,CAAgCC,GAAhC;AAAA,kCAAqC;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAYZ,cAAc,CAACa,6BAAf,EAAlB;AACA,UAAMC,IAAI,GAAG,IAAIN,OAAJ,CAAYI,KAAK,CAACG,EAAN,CAASC,UAAT,CAAoB,iBAApB,CAAZ,CAAb;AAEA,UAAMC,KAAK,iBAASV,KAAK,CAACW,IAAN,CAAW;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAX,EAA+B;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,KAAK,EAAE,CAAlB;AAAqBC,QAAAA,MAAM,EAAE,CAA7B;AAAgCC,QAAAA,CAAC,EAAE;AAAnC;AAAd,KAA/B,EAAuFC,OAAvF,EAAT,CAAX;AACA,kBAAMC,OAAO,CAACC,GAAR,CACLV,KAAK,CAACW,GAAN,CAAU,iCAAsC;AAAA,UAA/B;AAAEP,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeE,QAAAA,CAAf;AAAkBD,QAAAA;AAAlB,OAA+B;AAC/C,YAAMM,MAAM,GAAG;AACdR,QAAAA,IAAI,EAAEC,KAAK,IAAID,IADD;AAEdS,QAAAA,IAAI,EAAEN,CAAC,KAAK,GAAN,GAAYf,SAAS,CAACsB,MAAtB,GAA+BtB,SAAS,CAACuB;AAFjC,OAAf;AAIAlB,MAAAA,IAAI,CAACmB,iBAAL,CAAuBV,MAAvB,EAA+BM,MAA/B;AACA,KANS,CAAV,CADK,CAAN;AASAlB,IAAAA,GAAG,CAACuB,MAAJ;AACA,GAfD;AAAA;;AAiBA5B,YAAY,CAAC;AACZ6B,EAAAA,OAAO,EAAE,GADG;;AAEZC,EAAAA,EAAE,GAAG;AACJ,UAAMzB,GAAG,GAAG,IAAIP,MAAJ,EAAZ;AACAM,IAAAA,gBAAgB,CAACC,GAAD,CAAhB;AACAA,IAAAA,GAAG,CAAC0B,IAAJ;AACA;;AANW,CAAD,CAAZ","sourcesContent":["import { MongoInternals } from 'meteor/mongo';\nimport Future from 'fibers/future';\n\nimport { addMigration } from '../../lib/migrations';\nimport { Rooms } from '../../../app/models/server/raw';\nimport { TeamRaw } from '../../../app/models/server/raw/Team';\nimport { TEAM_TYPE } from '../../../definition/ITeam';\n\nasync function migrateTeamNames(fut) {\n\tconst { mongo } = MongoInternals.defaultRemoteCollectionDriver();\n\tconst Team = new TeamRaw(mongo.db.collection('rocketchat_team'));\n\n\tconst rooms = await Rooms.find({ teamMain: true }, { projection: { name: 1, fname: 1, teamId: 1, t: 1 } }).toArray();\n\tawait Promise.all(\n\t\trooms.map(async ({ name, fname, t, teamId }) => {\n\t\t\tconst update = {\n\t\t\t\tname: fname || name,\n\t\t\t\ttype: t === 'c' ? TEAM_TYPE.PUBLIC : TEAM_TYPE.PRIVATE,\n\t\t\t};\n\t\t\tTeam.updateNameAndType(teamId, update);\n\t\t}),\n\t);\n\tfut.return();\n}\n\naddMigration({\n\tversion: 221,\n\tup() {\n\t\tconst fut = new Future();\n\t\tmigrateTeamNames(fut);\n\t\tfut.wait();\n\t},\n});\n"]},"sourceType":"module","hash":"4369cedbfc50ad1c0e719fe423ccd46999376da7"}

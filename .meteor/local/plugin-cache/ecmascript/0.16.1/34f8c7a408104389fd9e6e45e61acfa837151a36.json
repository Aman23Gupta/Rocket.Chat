{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cloud/server/functions/syncWorkspace.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/cloud/server/functions/syncWorkspace.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cloud/server/functions/syncWorkspace.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cloud/server/functions/syncWorkspace.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/cloud/server/functions/syncWorkspace.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 1);\nmodule.export({\n  syncWorkspace: () => syncWorkspace\n});\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 0);\nlet buildWorkspaceRegistrationData;\nmodule.link(\"./buildRegistrationData\", {\n  buildWorkspaceRegistrationData(v) {\n    buildWorkspaceRegistrationData = v;\n  }\n\n}, 1);\nlet retrieveRegistrationStatus;\nmodule.link(\"./retrieveRegistrationStatus\", {\n  retrieveRegistrationStatus(v) {\n    retrieveRegistrationStatus = v;\n  }\n\n}, 2);\nlet getWorkspaceAccessToken;\nmodule.link(\"./getWorkspaceAccessToken\", {\n  getWorkspaceAccessToken(v) {\n    getWorkspaceAccessToken = v;\n  }\n\n}, 3);\nlet getWorkspaceLicense;\nmodule.link(\"./getWorkspaceLicense\", {\n  getWorkspaceLicense(v) {\n    getWorkspaceLicense = v;\n  }\n\n}, 4);\nlet Settings;\nmodule.link(\"../../../models\", {\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet getAndCreateNpsSurvey;\nmodule.link(\"../../../../server/services/nps/getAndCreateNpsSurvey\", {\n  getAndCreateNpsSurvey(v) {\n    getAndCreateNpsSurvey = v;\n  }\n\n}, 7);\nlet NPS, Banner;\nmodule.link(\"../../../../server/sdk\", {\n  NPS(v) {\n    NPS = v;\n  },\n\n  Banner(v) {\n    Banner = v;\n  }\n\n}, 8);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 9);\n\nfunction syncWorkspace() {\n  return Promise.asyncApply(() => {\n    let reconnectCheck = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const {\n      workspaceRegistered,\n      connectToCloud\n    } = retrieveRegistrationStatus();\n\n    if (!workspaceRegistered || !connectToCloud && !reconnectCheck) {\n      return false;\n    }\n\n    const info = Promise.await(buildWorkspaceRegistrationData());\n    const workspaceUrl = settings.get('Cloud_Workspace_Registration_Client_Uri');\n    let result;\n\n    try {\n      const headers = {};\n      const token = getWorkspaceAccessToken(true);\n\n      if (token) {\n        headers.Authorization = \"Bearer \".concat(token);\n      } else {\n        return false;\n      }\n\n      result = HTTP.post(\"\".concat(workspaceUrl, \"/client\"), {\n        data: info,\n        headers\n      });\n      getWorkspaceLicense();\n    } catch (e) {\n      if (e.response && e.response.data && e.response.data.error) {\n        SystemLogger.error(\"Failed to sync with Rocket.Chat Cloud.  Error: \".concat(e.response.data.error));\n      } else {\n        SystemLogger.error(e);\n      }\n\n      return false;\n    }\n\n    const {\n      data\n    } = result;\n\n    if (!data) {\n      return true;\n    }\n\n    if (data.publicKey) {\n      Settings.updateValueById('Cloud_Workspace_PublicKey', data.publicKey);\n    }\n\n    if (data.nps) {\n      const {\n        id: npsId,\n        expireAt\n      } = data.nps;\n      const startAt = new Date(data.nps.startAt);\n      Promise.await(NPS.create({\n        npsId,\n        startAt,\n        expireAt: new Date(expireAt)\n      }));\n      const now = new Date();\n\n      if (startAt.getFullYear() === now.getFullYear() && startAt.getMonth() === now.getMonth() && startAt.getDate() === now.getDate()) {\n        getAndCreateNpsSurvey(npsId);\n      }\n    } // add banners\n\n\n    if (data.banners) {\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(data.banners), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n          const banner = _step.value;\n          const {\n            createdAt,\n            expireAt,\n            startAt\n          } = banner;\n          Promise.await(Banner.create(_objectSpread(_objectSpread({}, banner), {}, {\n            createdAt: new Date(createdAt),\n            expireAt: new Date(expireAt),\n            startAt: new Date(startAt)\n          })));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            Promise.await(_iterator.return());\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    return true;\n  });\n}","map":{"version":3,"sources":["app/cloud/server/functions/syncWorkspace.js"],"names":["_objectSpread","module","link","default","v","_asyncIterator","export","syncWorkspace","HTTP","buildWorkspaceRegistrationData","retrieveRegistrationStatus","getWorkspaceAccessToken","getWorkspaceLicense","Settings","settings","getAndCreateNpsSurvey","NPS","Banner","SystemLogger","reconnectCheck","workspaceRegistered","connectToCloud","info","workspaceUrl","get","result","headers","token","Authorization","post","data","e","response","error","publicKey","updateValueById","nps","id","npsId","expireAt","startAt","Date","create","now","getFullYear","getMonth","getDate","banners","banner","createdAt"],"mappings":"AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,aAAa,GAACI,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;;AAAoF,IAAIC,cAAJ;;AAAmBJ,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,cAAc,GAACD,CAAf;AAAiB;;AAA7B,CAAnD,EAAkF,CAAlF;AAAzHH,MAAM,CAACK,MAAP,CAAc;AAACC,EAAAA,aAAa,EAAC,MAAIA;AAAnB,CAAd;AAAiD,IAAIC,IAAJ;AAASP,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAACM,EAAAA,IAAI,CAACJ,CAAD,EAAG;AAACI,IAAAA,IAAI,GAACJ,CAAL;AAAO;;AAAhB,CAA1B,EAA4C,CAA5C;AAA+C,IAAIK,8BAAJ;AAAmCR,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAsC;AAACO,EAAAA,8BAA8B,CAACL,CAAD,EAAG;AAACK,IAAAA,8BAA8B,GAACL,CAA/B;AAAiC;;AAApE,CAAtC,EAA4G,CAA5G;AAA+G,IAAIM,0BAAJ;AAA+BT,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACQ,EAAAA,0BAA0B,CAACN,CAAD,EAAG;AAACM,IAAAA,0BAA0B,GAACN,CAA3B;AAA6B;;AAA5D,CAA3C,EAAyG,CAAzG;AAA4G,IAAIO,uBAAJ;AAA4BV,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACS,EAAAA,uBAAuB,CAACP,CAAD,EAAG;AAACO,IAAAA,uBAAuB,GAACP,CAAxB;AAA0B;;AAAtD,CAAxC,EAAgG,CAAhG;AAAmG,IAAIQ,mBAAJ;AAAwBX,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACU,EAAAA,mBAAmB,CAACR,CAAD,EAAG;AAACQ,IAAAA,mBAAmB,GAACR,CAApB;AAAsB;;AAA9C,CAApC,EAAoF,CAApF;AAAuF,IAAIS,QAAJ;AAAaZ,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACW,EAAAA,QAAQ,CAACT,CAAD,EAAG;AAACS,IAAAA,QAAQ,GAACT,CAAT;AAAW;;AAAxB,CAA9B,EAAwD,CAAxD;AAA2D,IAAIU,QAAJ;AAAab,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACY,EAAAA,QAAQ,CAACV,CAAD,EAAG;AAACU,IAAAA,QAAQ,GAACV,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIW,qBAAJ;AAA0Bd,MAAM,CAACC,IAAP,CAAY,uDAAZ,EAAoE;AAACa,EAAAA,qBAAqB,CAACX,CAAD,EAAG;AAACW,IAAAA,qBAAqB,GAACX,CAAtB;AAAwB;;AAAlD,CAApE,EAAwH,CAAxH;AAA2H,IAAIY,GAAJ,EAAQC,MAAR;AAAehB,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACc,EAAAA,GAAG,CAACZ,CAAD,EAAG;AAACY,IAAAA,GAAG,GAACZ,CAAJ;AAAM,GAAd;;AAAea,EAAAA,MAAM,CAACb,CAAD,EAAG;AAACa,IAAAA,MAAM,GAACb,CAAP;AAAS;;AAAlC,CAArC,EAAyE,CAAzE;AAA4E,IAAIc,YAAJ;AAAiBjB,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACgB,EAAAA,YAAY,CAACd,CAAD,EAAG;AAACc,IAAAA,YAAY,GAACd,CAAb;AAAe;;AAAhC,CAAnD,EAAqF,CAArF;;AAYhgC,SAAeG,aAAf;AAAA,kCAAqD;AAAA,QAAxBY,cAAwB,uEAAP,KAAO;AAC3D,UAAM;AAAEC,MAAAA,mBAAF;AAAuBC,MAAAA;AAAvB,QAA0CX,0BAA0B,EAA1E;;AACA,QAAI,CAACU,mBAAD,IAAyB,CAACC,cAAD,IAAmB,CAACF,cAAjD,EAAkE;AACjE,aAAO,KAAP;AACA;;AAED,UAAMG,IAAI,iBAASb,8BAA8B,EAAvC,CAAV;AAEA,UAAMc,YAAY,GAAGT,QAAQ,CAACU,GAAT,CAAa,yCAAb,CAArB;AAEA,QAAIC,MAAJ;;AACA,QAAI;AACH,YAAMC,OAAO,GAAG,EAAhB;AACA,YAAMC,KAAK,GAAGhB,uBAAuB,CAAC,IAAD,CAArC;;AAEA,UAAIgB,KAAJ,EAAW;AACVD,QAAAA,OAAO,CAACE,aAAR,oBAAkCD,KAAlC;AACA,OAFD,MAEO;AACN,eAAO,KAAP;AACA;;AAEDF,MAAAA,MAAM,GAAGjB,IAAI,CAACqB,IAAL,WAAaN,YAAb,cAAoC;AAC5CO,QAAAA,IAAI,EAAER,IADsC;AAE5CI,QAAAA;AAF4C,OAApC,CAAT;AAKAd,MAAAA,mBAAmB;AACnB,KAhBD,CAgBE,OAAOmB,CAAP,EAAU;AACX,UAAIA,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACC,QAAF,CAAWF,IAAzB,IAAiCC,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAgBG,KAArD,EAA4D;AAC3Df,QAAAA,YAAY,CAACe,KAAb,0DAAqEF,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAgBG,KAArF;AACA,OAFD,MAEO;AACNf,QAAAA,YAAY,CAACe,KAAb,CAAmBF,CAAnB;AACA;;AAED,aAAO,KAAP;AACA;;AAED,UAAM;AAAED,MAAAA;AAAF,QAAWL,MAAjB;;AACA,QAAI,CAACK,IAAL,EAAW;AACV,aAAO,IAAP;AACA;;AAED,QAAIA,IAAI,CAACI,SAAT,EAAoB;AACnBrB,MAAAA,QAAQ,CAACsB,eAAT,CAAyB,2BAAzB,EAAsDL,IAAI,CAACI,SAA3D;AACA;;AAED,QAAIJ,IAAI,CAACM,GAAT,EAAc;AACb,YAAM;AAAEC,QAAAA,EAAE,EAAEC,KAAN;AAAaC,QAAAA;AAAb,UAA0BT,IAAI,CAACM,GAArC;AAEA,YAAMI,OAAO,GAAG,IAAIC,IAAJ,CAASX,IAAI,CAACM,GAAL,CAASI,OAAlB,CAAhB;AAEA,oBAAMxB,GAAG,CAAC0B,MAAJ,CAAW;AAChBJ,QAAAA,KADgB;AAEhBE,QAAAA,OAFgB;AAGhBD,QAAAA,QAAQ,EAAE,IAAIE,IAAJ,CAASF,QAAT;AAHM,OAAX,CAAN;AAMA,YAAMI,GAAG,GAAG,IAAIF,IAAJ,EAAZ;;AAEA,UAAID,OAAO,CAACI,WAAR,OAA0BD,GAAG,CAACC,WAAJ,EAA1B,IAA+CJ,OAAO,CAACK,QAAR,OAAuBF,GAAG,CAACE,QAAJ,EAAtE,IAAwFL,OAAO,CAACM,OAAR,OAAsBH,GAAG,CAACG,OAAJ,EAAlH,EAAiI;AAChI/B,QAAAA,qBAAqB,CAACuB,KAAD,CAArB;AACA;AACD,KA9D0D,CAgE3D;;;AACA,QAAIR,IAAI,CAACiB,OAAT,EAAkB;AAAA;AAAA;;AAAA;;AAAA;AACjB,4CAA2BjB,IAAI,CAACiB,OAAhC,0HAAyC;AAAA,gBAAxBC,MAAwB;AACxC,gBAAM;AAAEC,YAAAA,SAAF;AAAaV,YAAAA,QAAb;AAAuBC,YAAAA;AAAvB,cAAmCQ,MAAzC;AAEA,wBAAM/B,MAAM,CAACyB,MAAP,iCACFM,MADE;AAELC,YAAAA,SAAS,EAAE,IAAIR,IAAJ,CAASQ,SAAT,CAFN;AAGLV,YAAAA,QAAQ,EAAE,IAAIE,IAAJ,CAASF,QAAT,CAHL;AAILC,YAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASD,OAAT;AAJJ,aAAN;AAMA;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWjB;;AAED,WAAO,IAAP;AACA,GA/EM;AAAA","sourcesContent":["import { HTTP } from 'meteor/http';\n\nimport { buildWorkspaceRegistrationData } from './buildRegistrationData';\nimport { retrieveRegistrationStatus } from './retrieveRegistrationStatus';\nimport { getWorkspaceAccessToken } from './getWorkspaceAccessToken';\nimport { getWorkspaceLicense } from './getWorkspaceLicense';\nimport { Settings } from '../../../models';\nimport { settings } from '../../../settings';\nimport { getAndCreateNpsSurvey } from '../../../../server/services/nps/getAndCreateNpsSurvey';\nimport { NPS, Banner } from '../../../../server/sdk';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\nexport async function syncWorkspace(reconnectCheck = false) {\n\tconst { workspaceRegistered, connectToCloud } = retrieveRegistrationStatus();\n\tif (!workspaceRegistered || (!connectToCloud && !reconnectCheck)) {\n\t\treturn false;\n\t}\n\n\tconst info = await buildWorkspaceRegistrationData();\n\n\tconst workspaceUrl = settings.get('Cloud_Workspace_Registration_Client_Uri');\n\n\tlet result;\n\ttry {\n\t\tconst headers = {};\n\t\tconst token = getWorkspaceAccessToken(true);\n\n\t\tif (token) {\n\t\t\theaders.Authorization = `Bearer ${token}`;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t\tresult = HTTP.post(`${workspaceUrl}/client`, {\n\t\t\tdata: info,\n\t\t\theaders,\n\t\t});\n\n\t\tgetWorkspaceLicense();\n\t} catch (e) {\n\t\tif (e.response && e.response.data && e.response.data.error) {\n\t\t\tSystemLogger.error(`Failed to sync with Rocket.Chat Cloud.  Error: ${e.response.data.error}`);\n\t\t} else {\n\t\t\tSystemLogger.error(e);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconst { data } = result;\n\tif (!data) {\n\t\treturn true;\n\t}\n\n\tif (data.publicKey) {\n\t\tSettings.updateValueById('Cloud_Workspace_PublicKey', data.publicKey);\n\t}\n\n\tif (data.nps) {\n\t\tconst { id: npsId, expireAt } = data.nps;\n\n\t\tconst startAt = new Date(data.nps.startAt);\n\n\t\tawait NPS.create({\n\t\t\tnpsId,\n\t\t\tstartAt,\n\t\t\texpireAt: new Date(expireAt),\n\t\t});\n\n\t\tconst now = new Date();\n\n\t\tif (startAt.getFullYear() === now.getFullYear() && startAt.getMonth() === now.getMonth() && startAt.getDate() === now.getDate()) {\n\t\t\tgetAndCreateNpsSurvey(npsId);\n\t\t}\n\t}\n\n\t// add banners\n\tif (data.banners) {\n\t\tfor await (const banner of data.banners) {\n\t\t\tconst { createdAt, expireAt, startAt } = banner;\n\n\t\t\tawait Banner.create({\n\t\t\t\t...banner,\n\t\t\t\tcreatedAt: new Date(createdAt),\n\t\t\t\texpireAt: new Date(expireAt),\n\t\t\t\tstartAt: new Date(startAt),\n\t\t\t});\n\t\t}\n\t}\n\n\treturn true;\n}\n"]},"sourceType":"module","hash":"34f8c7a408104389fd9e6e45e61acfa837151a36"}

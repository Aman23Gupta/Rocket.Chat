{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/communication/rest.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/communication/rest.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/communication/rest.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/communication/rest.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/communication/rest.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  AppsRestApi: () => AppsRestApi\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 1);\nlet fetch;\nmodule.link(\"meteor/fetch\", {\n  fetch(v) {\n    fetch = v;\n  }\n\n}, 2);\nlet API;\nmodule.link(\"../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 3);\nlet getUploadFormData;\nmodule.link(\"../../../api/server/lib/getUploadFormData\", {\n  getUploadFormData(v) {\n    getUploadFormData = v;\n  }\n\n}, 4);\nlet getWorkspaceAccessToken, getUserCloudAccessToken;\nmodule.link(\"../../../cloud/server\", {\n  getWorkspaceAccessToken(v) {\n    getWorkspaceAccessToken = v;\n  },\n\n  getUserCloudAccessToken(v) {\n    getUserCloudAccessToken = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet Info;\nmodule.link(\"../../../utils\", {\n  Info(v) {\n    Info = v;\n  }\n\n}, 7);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 8);\nlet Settings;\nmodule.link(\"../../../models/server/raw\", {\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 9);\nlet Apps;\nmodule.link(\"../orchestrator\", {\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 10);\nlet formatAppInstanceForRest;\nmodule.link(\"../../lib/misc/formatAppInstanceForRest\", {\n  formatAppInstanceForRest(v) {\n    formatAppInstanceForRest = v;\n  }\n\n}, 11);\nlet actionButtonsHandler;\nmodule.link(\"./endpoints/actionButtonsHandler\", {\n  actionButtonsHandler(v) {\n    actionButtonsHandler = v;\n  }\n\n}, 12);\nconst appsEngineVersionForMarketplace = Info.marketplaceApiVersion.replace(/-.*/g, '');\n\nconst getDefaultHeaders = () => ({\n  'X-Apps-Engine-Version': appsEngineVersionForMarketplace\n});\n\nconst purchaseTypes = new Set(['buy', 'subscription']);\n\nclass AppsRestApi {\n  constructor(orch, manager) {\n    this._orch = orch;\n    this._manager = manager;\n    this.loadAPI();\n  }\n\n  loadAPI() {\n    return Promise.asyncApply(() => {\n      this.api = new API.ApiClass({\n        version: 'apps',\n        useDefaultAuth: true,\n        prettyJson: false,\n        enableCors: false,\n        auth: API.getUserAuth()\n      });\n      this.addManagementRoutes();\n    });\n  }\n\n  addManagementRoutes() {\n    const orchestrator = this._orch;\n    const manager = this._manager;\n\n    const handleError = (message, e) => {\n      // when there is no `response` field in the error, it means the request\n      // couldn't even make it to the server\n      if (!e.hasOwnProperty('response')) {\n        orchestrator.getRocketChatLogger().warn(message, e.message);\n        return API.v1.internalError('Could not reach the Marketplace');\n      }\n\n      orchestrator.getRocketChatLogger().error(message, e.response.data);\n\n      if (e.response.statusCode >= 500 && e.response.statusCode <= 599) {\n        return API.v1.internalError();\n      }\n\n      if (e.response.statusCode === 404) {\n        return API.v1.notFound();\n      }\n\n      return API.v1.failure();\n    };\n\n    this.api.addRoute('actionButtons', ...actionButtonsHandler(this)); // WE NEED TO MOVE EACH ENDPOINT HANDLER TO IT'S OWN FILE\n\n    this.api.addRoute('', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      get() {\n        const baseUrl = orchestrator.getMarketplaceUrl(); // Gets the Apps from the marketplace\n\n        if (this.queryParams.marketplace) {\n          const headers = getDefaultHeaders();\n          const token = getWorkspaceAccessToken();\n\n          if (token) {\n            headers.Authorization = \"Bearer \".concat(token);\n          }\n\n          let result;\n\n          try {\n            result = HTTP.get(\"\".concat(baseUrl, \"/v1/apps\"), {\n              headers\n            });\n          } catch (e) {\n            return handleError('Unable to access Marketplace. Does the server has access to the internet?', e);\n          }\n\n          if (!result || result.statusCode !== 200) {\n            orchestrator.getRocketChatLogger().error('Error getting the Apps:', result.data);\n            return API.v1.failure();\n          }\n\n          return API.v1.success(result.data);\n        }\n\n        if (this.queryParams.categories) {\n          const headers = getDefaultHeaders();\n          const token = getWorkspaceAccessToken();\n\n          if (token) {\n            headers.Authorization = \"Bearer \".concat(token);\n          }\n\n          let result;\n\n          try {\n            result = HTTP.get(\"\".concat(baseUrl, \"/v1/categories\"), {\n              headers\n            });\n          } catch (e) {\n            orchestrator.getRocketChatLogger().error('Error getting the categories from the Marketplace:', e.response.data);\n            return API.v1.internalError();\n          }\n\n          if (!result || result.statusCode !== 200) {\n            orchestrator.getRocketChatLogger().error('Error getting the categories from the Marketplace:', result.data);\n            return API.v1.failure();\n          }\n\n          return API.v1.success(result.data);\n        }\n\n        if (this.queryParams.buildExternalUrl && this.queryParams.appId) {\n          const workspaceId = settings.get('Cloud_Workspace_Id');\n\n          if (!this.queryParams.purchaseType || !purchaseTypes.has(this.queryParams.purchaseType)) {\n            return API.v1.failure({\n              error: 'Invalid purchase type'\n            });\n          }\n\n          const token = getUserCloudAccessToken(this.getLoggedInUser()._id, true, 'marketplace:purchase', false);\n\n          if (!token) {\n            return API.v1.failure({\n              error: 'Unauthorized'\n            });\n          }\n\n          const subscribeRoute = this.queryParams.details === 'true' ? 'subscribe/details' : 'subscribe';\n          const seats = Users.getActiveLocalUserCount();\n          return API.v1.success({\n            url: \"\".concat(baseUrl, \"/apps/\").concat(this.queryParams.appId, \"/\").concat(this.queryParams.purchaseType === 'buy' ? this.queryParams.purchaseType : subscribeRoute, \"?workspaceId=\").concat(workspaceId, \"&token=\").concat(token, \"&seats=\").concat(seats)\n          });\n        }\n\n        const apps = manager.get().map(formatAppInstanceForRest);\n        return API.v1.success({\n          apps\n        });\n      },\n\n      post() {\n        return Promise.asyncApply(() => {\n          let buff;\n          let marketplaceInfo;\n          let permissionsGranted;\n\n          if (this.bodyParams.url) {\n            if (settings.get('Apps_Framework_Development_Mode') !== true) {\n              return API.v1.failure({\n                error: 'Installation from url is disabled.'\n              });\n            }\n\n            try {\n              const response = Promise.await(fetch(this.bodyParams.url));\n\n              if (response.status !== 200 || response.headers.get('content-type') !== 'application/zip') {\n                return API.v1.failure({\n                  error: 'Invalid url. It doesn\\'t exist or is not \"application/zip\".'\n                });\n              }\n\n              buff = Buffer.from(Promise.await(response.arrayBuffer()));\n            } catch (e) {\n              orchestrator.getRocketChatLogger().error('Error getting the app from url:', e.response.data);\n              return API.v1.internalError();\n            }\n\n            if (this.bodyParams.downloadOnly) {\n              return API.v1.success({\n                buff\n              });\n            }\n          } else if (this.bodyParams.appId && this.bodyParams.marketplace && this.bodyParams.version) {\n            const baseUrl = orchestrator.getMarketplaceUrl();\n            const headers = getDefaultHeaders();\n\n            try {\n              const downloadToken = getWorkspaceAccessToken(true, 'marketplace:download', false);\n              const marketplaceToken = getWorkspaceAccessToken();\n              const [downloadResponse, marketplaceResponse] = Promise.await(Promise.all([fetch(\"\".concat(baseUrl, \"/v2/apps/\").concat(this.bodyParams.appId, \"/download/\").concat(this.bodyParams.version, \"?token=\").concat(downloadToken), {\n                headers\n              }), fetch(\"\".concat(baseUrl, \"/v1/apps/\").concat(this.bodyParams.appId, \"?appVersion=\").concat(this.bodyParams.version), {\n                headers: _objectSpread({\n                  Authorization: \"Bearer \".concat(marketplaceToken)\n                }, headers)\n              })]));\n\n              if (downloadResponse.headers.get('content-type') !== 'application/zip') {\n                throw new Error('Invalid url. It doesn\\'t exist or is not \"application/zip\".');\n              }\n\n              buff = Buffer.from(Promise.await(downloadResponse.arrayBuffer()));\n              marketplaceInfo = Promise.await(marketplaceResponse.json());\n              permissionsGranted = this.bodyParams.permissionsGranted;\n            } catch (err) {\n              return API.v1.failure(err.message);\n            }\n          } else {\n            var _formData$app;\n\n            if (settings.get('Apps_Framework_Development_Mode') !== true) {\n              return API.v1.failure({\n                error: 'Direct installation of an App is disabled.'\n              });\n            }\n\n            const formData = Promise.await(getUploadFormData({\n              request: this.request\n            }));\n            buff = formData === null || formData === void 0 ? void 0 : (_formData$app = formData.app) === null || _formData$app === void 0 ? void 0 : _formData$app.fileBuffer;\n\n            permissionsGranted = (() => {\n              try {\n                const permissions = JSON.parse((formData === null || formData === void 0 ? void 0 : formData.permissions) || '');\n                return permissions.length ? permissions : undefined;\n              } catch (_unused) {\n                return undefined;\n              }\n            })();\n          }\n\n          if (!buff) {\n            return API.v1.failure({\n              error: 'Failed to get a file to install for the App. '\n            });\n          }\n\n          const user = orchestrator.getConverters().get('users').convertToApp(Meteor.user());\n          const aff = Promise.await(manager.add(buff, {\n            marketplaceInfo,\n            permissionsGranted,\n            enable: true,\n            user\n          }));\n          const info = aff.getAppInfo();\n\n          if (aff.hasStorageError()) {\n            return API.v1.failure({\n              status: 'storage_error',\n              messages: [aff.getStorageError()]\n            });\n          }\n\n          if (aff.hasAppUserError()) {\n            return API.v1.failure({\n              status: 'app_user_error',\n              messages: [aff.getAppUserError().message],\n              payload: {\n                username: aff.getAppUserError().username\n              }\n            });\n          }\n\n          info.status = aff.getApp().getStatus();\n          return API.v1.success({\n            app: info,\n            implemented: aff.getImplementedInferfaces(),\n            licenseValidation: aff.getLicenseValidationResult()\n          });\n        });\n      }\n\n    });\n    this.api.addRoute('externalComponents', {\n      authRequired: false\n    }, {\n      get() {\n        const externalComponents = orchestrator.getProvidedComponents();\n        return API.v1.success({\n          externalComponents\n        });\n      }\n\n    });\n    this.api.addRoute('languages', {\n      authRequired: false\n    }, {\n      get() {\n        const apps = manager.get().map(prl => ({\n          id: prl.getID(),\n          languages: prl.getStorageItem().languageContent\n        }));\n        return API.v1.success({\n          apps\n        });\n      }\n\n    });\n    this.api.addRoute('externalComponentEvent', {\n      authRequired: true\n    }, {\n      post() {\n        if (!this.bodyParams.externalComponent || !['IPostExternalComponentOpened', 'IPostExternalComponentClosed'].includes(this.bodyParams.event)) {\n          return API.v1.failure({\n            error: 'Event and externalComponent must be provided.'\n          });\n        }\n\n        try {\n          const {\n            event,\n            externalComponent\n          } = this.bodyParams;\n          const result = Apps.getBridges().getListenerBridge().externalComponentEvent(event, externalComponent);\n          return API.v1.success({\n            result\n          });\n        } catch (e) {\n          orchestrator.getRocketChatLogger().error(\"Error triggering external components' events \".concat(e.response.data));\n          return API.v1.internalError();\n        }\n      }\n\n    });\n    this.api.addRoute('bundles/:id/apps', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      get() {\n        const baseUrl = orchestrator.getMarketplaceUrl();\n        const headers = {};\n        const token = getWorkspaceAccessToken();\n\n        if (token) {\n          headers.Authorization = \"Bearer \".concat(token);\n        }\n\n        let result;\n\n        try {\n          result = HTTP.get(\"\".concat(baseUrl, \"/v1/bundles/\").concat(this.urlParams.id, \"/apps\"), {\n            headers\n          });\n        } catch (e) {\n          orchestrator.getRocketChatLogger().error(\"Error getting the Bundle's Apps from the Marketplace:\", e.response.data);\n          return API.v1.internalError();\n        }\n\n        if (!result || result.statusCode !== 200 || result.data.length === 0) {\n          orchestrator.getRocketChatLogger().error(\"Error getting the Bundle's Apps from the Marketplace:\", result.data);\n          return API.v1.failure();\n        }\n\n        return API.v1.success({\n          apps: result.data\n        });\n      }\n\n    });\n    this.api.addRoute(':id', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      get() {\n        if (this.queryParams.marketplace && this.queryParams.version) {\n          const baseUrl = orchestrator.getMarketplaceUrl();\n          const headers = {}; // DO NOT ATTACH THE FRAMEWORK/ENGINE VERSION HERE.\n\n          const token = getWorkspaceAccessToken();\n\n          if (token) {\n            headers.Authorization = \"Bearer \".concat(token);\n          }\n\n          let result;\n\n          try {\n            result = HTTP.get(\"\".concat(baseUrl, \"/v1/apps/\").concat(this.urlParams.id, \"?appVersion=\").concat(this.queryParams.version), {\n              headers\n            });\n          } catch (e) {\n            return handleError('Unable to access Marketplace. Does the server has access to the internet?', e);\n          }\n\n          if (!result || result.statusCode !== 200 || result.data.length === 0) {\n            orchestrator.getRocketChatLogger().error('Error getting the App information from the Marketplace:', result.data);\n            return API.v1.failure();\n          }\n\n          return API.v1.success({\n            app: result.data[0]\n          });\n        }\n\n        if (this.queryParams.marketplace && this.queryParams.update && this.queryParams.appVersion) {\n          const baseUrl = orchestrator.getMarketplaceUrl();\n          const headers = getDefaultHeaders();\n          const token = getWorkspaceAccessToken();\n\n          if (token) {\n            headers.Authorization = \"Bearer \".concat(token);\n          }\n\n          let result;\n\n          try {\n            result = HTTP.get(\"\".concat(baseUrl, \"/v1/apps/\").concat(this.urlParams.id, \"/latest?frameworkVersion=\").concat(appsEngineVersionForMarketplace), {\n              headers\n            });\n          } catch (e) {\n            return handleError('Unable to access Marketplace. Does the server has access to the internet?', e);\n          }\n\n          if (result.statusCode !== 200 || result.data.length === 0) {\n            orchestrator.getRocketChatLogger().error('Error getting the App update info from the Marketplace:', result.data);\n            return API.v1.failure();\n          }\n\n          return API.v1.success({\n            app: result.data\n          });\n        }\n\n        const app = manager.getOneById(this.urlParams.id);\n\n        if (!app) {\n          return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n        }\n\n        return API.v1.success({\n          app: formatAppInstanceForRest(app)\n        });\n      },\n\n      post() {\n        return Promise.asyncApply(() => {\n          let buff;\n          let permissionsGranted;\n\n          if (this.bodyParams.url) {\n            if (settings.get('Apps_Framework_Development_Mode') !== true) {\n              return API.v1.failure({\n                error: 'Updating an App from a url is disabled.'\n              });\n            }\n\n            const response = Promise.await(fetch(this.bodyParams.url));\n\n            if (response.status !== 200 || response.headers.get('content-type') !== 'application/zip') {\n              return API.v1.failure({\n                error: 'Invalid url. It doesn\\'t exist or is not \"application/zip\".'\n              });\n            }\n\n            buff = Buffer.from(Promise.await(response.arrayBuffer()));\n          } else if (this.bodyParams.appId && this.bodyParams.marketplace && this.bodyParams.version) {\n            const baseUrl = orchestrator.getMarketplaceUrl();\n            const headers = getDefaultHeaders();\n            const token = getWorkspaceAccessToken(true, 'marketplace:download', false);\n\n            try {\n              const response = Promise.await(fetch(\"\".concat(baseUrl, \"/v2/apps/\").concat(this.bodyParams.appId, \"/download/\").concat(this.bodyParams.version, \"?token=\").concat(token), {\n                headers\n              }));\n\n              if (response.status !== 200) {\n                orchestrator.getRocketChatLogger().error('Error getting the App from the Marketplace:', Promise.await(response.text()));\n                return API.v1.failure();\n              }\n\n              if (response.headers.get('content-type') !== 'application/zip') {\n                return API.v1.failure({\n                  error: 'Invalid url. It doesn\\'t exist or is not \"application/zip\".'\n                });\n              }\n\n              buff = Buffer.from(Promise.await(response.arrayBuffer()));\n            } catch (e) {\n              orchestrator.getRocketChatLogger().error('Error getting the App from the Marketplace:', e.response.data);\n              return API.v1.internalError();\n            }\n          } else {\n            var _formData$app2;\n\n            if (settings.get('Apps_Framework_Development_Mode') !== true) {\n              return API.v1.failure({\n                error: 'Direct updating of an App is disabled.'\n              });\n            }\n\n            const formData = Promise.await(getUploadFormData({\n              request: this.request\n            }));\n            buff = formData === null || formData === void 0 ? void 0 : (_formData$app2 = formData.app) === null || _formData$app2 === void 0 ? void 0 : _formData$app2.fileBuffer;\n\n            permissionsGranted = (() => {\n              try {\n                const permissions = JSON.parse((formData === null || formData === void 0 ? void 0 : formData.permissions) || '');\n                return permissions.length ? permissions : undefined;\n              } catch (_unused2) {\n                return undefined;\n              }\n            })();\n          }\n\n          if (!buff) {\n            return API.v1.failure({\n              error: 'Failed to get a file to install for the App. '\n            });\n          }\n\n          const aff = Promise.await(manager.update(buff, permissionsGranted));\n          const info = aff.getAppInfo();\n\n          if (aff.hasStorageError()) {\n            return API.v1.failure({\n              status: 'storage_error',\n              messages: [aff.getStorageError()]\n            });\n          }\n\n          if (aff.hasAppUserError()) {\n            return API.v1.failure({\n              status: 'app_user_error',\n              messages: [aff.getAppUserError().message],\n              payload: {\n                username: aff.getAppUserError().username\n              }\n            });\n          }\n\n          info.status = aff.getApp().getStatus();\n          return API.v1.success({\n            app: info,\n            implemented: aff.getImplementedInferfaces(),\n            licenseValidation: aff.getLicenseValidationResult()\n          });\n        });\n      },\n\n      delete() {\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (!prl) {\n          return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n        }\n\n        const user = orchestrator.getConverters().get('users').convertToApp(Meteor.user());\n        Promise.await(manager.remove(prl.getID(), {\n          user\n        }));\n        const info = prl.getInfo();\n        info.status = prl.getStatus();\n        return API.v1.success({\n          app: info\n        });\n      }\n\n    });\n    this.api.addRoute(':id/sync', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      post() {\n        const baseUrl = orchestrator.getMarketplaceUrl();\n        const headers = getDefaultHeaders();\n        const token = getWorkspaceAccessToken();\n\n        if (token) {\n          headers.Authorization = \"Bearer \".concat(token);\n        }\n\n        const workspaceIdSetting = Promise.await(Settings.findOneById('Cloud_Workspace_Id'));\n        let result;\n\n        try {\n          result = HTTP.get(\"\".concat(baseUrl, \"/v1/workspaces/\").concat(workspaceIdSetting.value, \"/apps/\").concat(this.urlParams.id), {\n            headers\n          });\n        } catch (e) {\n          orchestrator.getRocketChatLogger().error('Error syncing the App from the Marketplace:', e.response.data);\n          return API.v1.internalError();\n        }\n\n        if (result.statusCode !== 200) {\n          orchestrator.getRocketChatLogger().error('Error syncing the App from the Marketplace:', result.data);\n          return API.v1.failure();\n        }\n\n        Promise.await(Apps.updateAppsMarketplaceInfo([result.data]));\n        return API.v1.success({\n          app: result.data\n        });\n      }\n\n    });\n    this.api.addRoute(':id/icon', {\n      authRequired: false\n    }, {\n      get() {\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (!prl) {\n          return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n        }\n\n        const info = prl.getInfo();\n\n        if (!info || !info.iconFileContent) {\n          return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n        }\n\n        const imageData = info.iconFileContent.split(';base64,');\n        const buf = Buffer.from(imageData[1], 'base64');\n        return {\n          statusCode: 200,\n          headers: {\n            'Content-Length': buf.length,\n            'Content-Type': imageData[0].replace('data:', '')\n          },\n          body: buf\n        };\n      }\n\n    });\n    this.api.addRoute(':id/languages', {\n      authRequired: false\n    }, {\n      get() {\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (prl) {\n          const languages = prl.getStorageItem().languageContent || {};\n          return API.v1.success({\n            languages\n          });\n        }\n\n        return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n      }\n\n    });\n    this.api.addRoute(':id/logs', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      get() {\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (prl) {\n          const {\n            offset,\n            count\n          } = this.getPaginationItems();\n          const {\n            sort,\n            fields,\n            query\n          } = this.parseJsonQuery();\n          const ourQuery = Object.assign({}, query, {\n            appId: prl.getID()\n          });\n          const options = {\n            sort: sort || {\n              _updatedAt: -1\n            },\n            skip: offset,\n            limit: count,\n            fields\n          };\n          const logs = Promise.await(orchestrator.getLogStorage().find(ourQuery, options));\n          return API.v1.success({\n            logs\n          });\n        }\n\n        return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n      }\n\n    });\n    this.api.addRoute(':id/settings', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      get() {\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (prl) {\n          const settings = Object.assign({}, prl.getStorageItem().settings);\n          Object.keys(settings).forEach(k => {\n            if (settings[k].hidden) {\n              delete settings[k];\n            }\n          });\n          return API.v1.success({\n            settings\n          });\n        }\n\n        return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n      },\n\n      post() {\n        if (!this.bodyParams || !this.bodyParams.settings) {\n          return API.v1.failure('The settings to update must be present.');\n        }\n\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (!prl) {\n          return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n        }\n\n        const {\n          settings\n        } = prl.getStorageItem();\n        const updated = [];\n        this.bodyParams.settings.forEach(s => {\n          if (settings[s.id]) {\n            Promise.await(manager.getSettingsManager().updateAppSetting(this.urlParams.id, s)); // Updating?\n\n            updated.push(s);\n          }\n        });\n        return API.v1.success({\n          updated\n        });\n      }\n\n    });\n    this.api.addRoute(':id/settings/:settingId', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      get() {\n        try {\n          const setting = manager.getSettingsManager().getAppSetting(this.urlParams.id, this.urlParams.settingId);\n          API.v1.success({\n            setting\n          });\n        } catch (e) {\n          if (e.message.includes('No setting found')) {\n            return API.v1.notFound(\"No Setting found on the App by the id of: \\\"\".concat(this.urlParams.settingId, \"\\\"\"));\n          }\n\n          if (e.message.includes('No App found')) {\n            return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n          }\n\n          return API.v1.failure(e.message);\n        }\n      },\n\n      post() {\n        if (!this.bodyParams.setting) {\n          return API.v1.failure('Setting to update to must be present on the posted body.');\n        }\n\n        try {\n          Promise.await(manager.getSettingsManager().updateAppSetting(this.urlParams.id, this.bodyParams.setting));\n          return API.v1.success();\n        } catch (e) {\n          if (e.message.includes('No setting found')) {\n            return API.v1.notFound(\"No Setting found on the App by the id of: \\\"\".concat(this.urlParams.settingId, \"\\\"\"));\n          }\n\n          if (e.message.includes('No App found')) {\n            return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n          }\n\n          return API.v1.failure(e.message);\n        }\n      }\n\n    });\n    this.api.addRoute(':id/apis', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      get() {\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (prl) {\n          return API.v1.success({\n            apis: manager.apiManager.listApis(this.urlParams.id)\n          });\n        }\n\n        return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n      }\n\n    });\n    this.api.addRoute(':id/status', {\n      authRequired: true,\n      permissionsRequired: ['manage-apps']\n    }, {\n      get() {\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (prl) {\n          return API.v1.success({\n            status: prl.getStatus()\n          });\n        }\n\n        return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n      },\n\n      post() {\n        if (!this.bodyParams.status || typeof this.bodyParams.status !== 'string') {\n          return API.v1.failure('Invalid status provided, it must be \"status\" field and a string.');\n        }\n\n        const prl = manager.getOneById(this.urlParams.id);\n\n        if (!prl) {\n          return API.v1.notFound(\"No App found by the id of: \".concat(this.urlParams.id));\n        }\n\n        const result = Promise.await(manager.changeStatus(prl.getID(), this.bodyParams.status));\n        return API.v1.success({\n          status: result.getStatus()\n        });\n      }\n\n    });\n  }\n\n}","map":{"version":3,"sources":["app/apps/server/communication/rest.js"],"names":["_objectSpread","module","link","default","v","export","AppsRestApi","Meteor","HTTP","fetch","API","getUploadFormData","getWorkspaceAccessToken","getUserCloudAccessToken","settings","Info","Users","Settings","Apps","formatAppInstanceForRest","actionButtonsHandler","appsEngineVersionForMarketplace","marketplaceApiVersion","replace","getDefaultHeaders","purchaseTypes","Set","constructor","orch","manager","_orch","_manager","loadAPI","api","ApiClass","version","useDefaultAuth","prettyJson","enableCors","auth","getUserAuth","addManagementRoutes","orchestrator","handleError","message","e","hasOwnProperty","getRocketChatLogger","warn","v1","internalError","error","response","data","statusCode","notFound","failure","addRoute","authRequired","permissionsRequired","get","baseUrl","getMarketplaceUrl","queryParams","marketplace","headers","token","Authorization","result","success","categories","buildExternalUrl","appId","workspaceId","purchaseType","has","getLoggedInUser","_id","subscribeRoute","details","seats","getActiveLocalUserCount","url","apps","map","post","buff","marketplaceInfo","permissionsGranted","bodyParams","status","Buffer","from","arrayBuffer","downloadOnly","downloadToken","marketplaceToken","downloadResponse","marketplaceResponse","Promise","all","Error","json","err","formData","request","app","fileBuffer","permissions","JSON","parse","length","undefined","user","getConverters","convertToApp","aff","add","enable","info","getAppInfo","hasStorageError","messages","getStorageError","hasAppUserError","getAppUserError","payload","username","getApp","getStatus","implemented","getImplementedInferfaces","licenseValidation","getLicenseValidationResult","externalComponents","getProvidedComponents","prl","id","getID","languages","getStorageItem","languageContent","externalComponent","includes","event","getBridges","getListenerBridge","externalComponentEvent","urlParams","update","appVersion","getOneById","text","delete","await","remove","getInfo","workspaceIdSetting","findOneById","value","updateAppsMarketplaceInfo","iconFileContent","imageData","split","buf","body","offset","count","getPaginationItems","sort","fields","query","parseJsonQuery","ourQuery","Object","assign","options","_updatedAt","skip","limit","logs","getLogStorage","find","keys","forEach","k","hidden","updated","s","getSettingsManager","updateAppSetting","push","setting","getAppSetting","settingId","apis","apiManager","listApis","changeStatus"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { fetch } from 'meteor/fetch';\n\nimport { API } from '../../../api/server';\nimport { getUploadFormData } from '../../../api/server/lib/getUploadFormData';\nimport { getWorkspaceAccessToken, getUserCloudAccessToken } from '../../../cloud/server';\nimport { settings } from '../../../settings/server';\nimport { Info } from '../../../utils';\nimport { Users } from '../../../models/server';\nimport { Settings } from '../../../models/server/raw';\nimport { Apps } from '../orchestrator';\nimport { formatAppInstanceForRest } from '../../lib/misc/formatAppInstanceForRest';\nimport { actionButtonsHandler } from './endpoints/actionButtonsHandler';\n\nconst appsEngineVersionForMarketplace = Info.marketplaceApiVersion.replace(/-.*/g, '');\nconst getDefaultHeaders = () => ({\n\t'X-Apps-Engine-Version': appsEngineVersionForMarketplace,\n});\n\nconst purchaseTypes = new Set(['buy', 'subscription']);\n\nexport class AppsRestApi {\n\tconstructor(orch, manager) {\n\t\tthis._orch = orch;\n\t\tthis._manager = manager;\n\t\tthis.loadAPI();\n\t}\n\n\tasync loadAPI() {\n\t\tthis.api = new API.ApiClass({\n\t\t\tversion: 'apps',\n\t\t\tuseDefaultAuth: true,\n\t\t\tprettyJson: false,\n\t\t\tenableCors: false,\n\t\t\tauth: API.getUserAuth(),\n\t\t});\n\t\tthis.addManagementRoutes();\n\t}\n\n\taddManagementRoutes() {\n\t\tconst orchestrator = this._orch;\n\t\tconst manager = this._manager;\n\n\t\tconst handleError = (message, e) => {\n\t\t\t// when there is no `response` field in the error, it means the request\n\t\t\t// couldn't even make it to the server\n\t\t\tif (!e.hasOwnProperty('response')) {\n\t\t\t\torchestrator.getRocketChatLogger().warn(message, e.message);\n\t\t\t\treturn API.v1.internalError('Could not reach the Marketplace');\n\t\t\t}\n\n\t\t\torchestrator.getRocketChatLogger().error(message, e.response.data);\n\n\t\t\tif (e.response.statusCode >= 500 && e.response.statusCode <= 599) {\n\t\t\t\treturn API.v1.internalError();\n\t\t\t}\n\n\t\t\tif (e.response.statusCode === 404) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.failure();\n\t\t};\n\n\t\tthis.api.addRoute('actionButtons', ...actionButtonsHandler(this));\n\n\t\t// WE NEED TO MOVE EACH ENDPOINT HANDLER TO IT'S OWN FILE\n\t\tthis.api.addRoute(\n\t\t\t'',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst baseUrl = orchestrator.getMarketplaceUrl();\n\n\t\t\t\t\t// Gets the Apps from the marketplace\n\t\t\t\t\tif (this.queryParams.marketplace) {\n\t\t\t\t\t\tconst headers = getDefaultHeaders();\n\t\t\t\t\t\tconst token = getWorkspaceAccessToken();\n\t\t\t\t\t\tif (token) {\n\t\t\t\t\t\t\theaders.Authorization = `Bearer ${token}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet result;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresult = HTTP.get(`${baseUrl}/v1/apps`, {\n\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn handleError('Unable to access Marketplace. Does the server has access to the internet?', e);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!result || result.statusCode !== 200) {\n\t\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error getting the Apps:', result.data);\n\t\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn API.v1.success(result.data);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.queryParams.categories) {\n\t\t\t\t\t\tconst headers = getDefaultHeaders();\n\t\t\t\t\t\tconst token = getWorkspaceAccessToken();\n\t\t\t\t\t\tif (token) {\n\t\t\t\t\t\t\theaders.Authorization = `Bearer ${token}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet result;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresult = HTTP.get(`${baseUrl}/v1/categories`, {\n\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error getting the categories from the Marketplace:', e.response.data);\n\t\t\t\t\t\t\treturn API.v1.internalError();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!result || result.statusCode !== 200) {\n\t\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error getting the categories from the Marketplace:', result.data);\n\t\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn API.v1.success(result.data);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.queryParams.buildExternalUrl && this.queryParams.appId) {\n\t\t\t\t\t\tconst workspaceId = settings.get('Cloud_Workspace_Id');\n\n\t\t\t\t\t\tif (!this.queryParams.purchaseType || !purchaseTypes.has(this.queryParams.purchaseType)) {\n\t\t\t\t\t\t\treturn API.v1.failure({ error: 'Invalid purchase type' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst token = getUserCloudAccessToken(this.getLoggedInUser()._id, true, 'marketplace:purchase', false);\n\t\t\t\t\t\tif (!token) {\n\t\t\t\t\t\t\treturn API.v1.failure({ error: 'Unauthorized' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst subscribeRoute = this.queryParams.details === 'true' ? 'subscribe/details' : 'subscribe';\n\n\t\t\t\t\t\tconst seats = Users.getActiveLocalUserCount();\n\n\t\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\t\turl: `${baseUrl}/apps/${this.queryParams.appId}/${\n\t\t\t\t\t\t\t\tthis.queryParams.purchaseType === 'buy' ? this.queryParams.purchaseType : subscribeRoute\n\t\t\t\t\t\t\t}?workspaceId=${workspaceId}&token=${token}&seats=${seats}`,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst apps = manager.get().map(formatAppInstanceForRest);\n\n\t\t\t\t\treturn API.v1.success({ apps });\n\t\t\t\t},\n\t\t\t\tasync post() {\n\t\t\t\t\tlet buff;\n\t\t\t\t\tlet marketplaceInfo;\n\t\t\t\t\tlet permissionsGranted;\n\n\t\t\t\t\tif (this.bodyParams.url) {\n\t\t\t\t\t\tif (settings.get('Apps_Framework_Development_Mode') !== true) {\n\t\t\t\t\t\t\treturn API.v1.failure({ error: 'Installation from url is disabled.' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = await fetch(this.bodyParams.url);\n\n\t\t\t\t\t\t\tif (response.status !== 200 || response.headers.get('content-type') !== 'application/zip') {\n\t\t\t\t\t\t\t\treturn API.v1.failure({\n\t\t\t\t\t\t\t\t\terror: 'Invalid url. It doesn\\'t exist or is not \"application/zip\".',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbuff = Buffer.from(await response.arrayBuffer());\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error getting the app from url:', e.response.data);\n\t\t\t\t\t\t\treturn API.v1.internalError();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.bodyParams.downloadOnly) {\n\t\t\t\t\t\t\treturn API.v1.success({ buff });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.bodyParams.appId && this.bodyParams.marketplace && this.bodyParams.version) {\n\t\t\t\t\t\tconst baseUrl = orchestrator.getMarketplaceUrl();\n\n\t\t\t\t\t\tconst headers = getDefaultHeaders();\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst downloadToken = getWorkspaceAccessToken(true, 'marketplace:download', false);\n\t\t\t\t\t\t\tconst marketplaceToken = getWorkspaceAccessToken();\n\n\t\t\t\t\t\t\tconst [downloadResponse, marketplaceResponse] = await Promise.all([\n\t\t\t\t\t\t\t\tfetch(`${baseUrl}/v2/apps/${this.bodyParams.appId}/download/${this.bodyParams.version}?token=${downloadToken}`, {\n\t\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tfetch(`${baseUrl}/v1/apps/${this.bodyParams.appId}?appVersion=${this.bodyParams.version}`, {\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\tAuthorization: `Bearer ${marketplaceToken}`,\n\t\t\t\t\t\t\t\t\t\t...headers,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t]);\n\n\t\t\t\t\t\t\tif (downloadResponse.headers.get('content-type') !== 'application/zip') {\n\t\t\t\t\t\t\t\tthrow new Error('Invalid url. It doesn\\'t exist or is not \"application/zip\".');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbuff = Buffer.from(await downloadResponse.arrayBuffer());\n\t\t\t\t\t\t\tmarketplaceInfo = await marketplaceResponse.json();\n\t\t\t\t\t\t\tpermissionsGranted = this.bodyParams.permissionsGranted;\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\treturn API.v1.failure(err.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (settings.get('Apps_Framework_Development_Mode') !== true) {\n\t\t\t\t\t\t\treturn API.v1.failure({ error: 'Direct installation of an App is disabled.' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst formData = await getUploadFormData({\n\t\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbuff = formData?.app?.fileBuffer;\n\t\t\t\t\t\tpermissionsGranted = (() => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst permissions = JSON.parse(formData?.permissions || '');\n\t\t\t\t\t\t\t\treturn permissions.length ? permissions : undefined;\n\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!buff) {\n\t\t\t\t\t\treturn API.v1.failure({ error: 'Failed to get a file to install for the App. ' });\n\t\t\t\t\t}\n\n\t\t\t\t\tconst user = orchestrator.getConverters().get('users').convertToApp(Meteor.user());\n\n\t\t\t\t\tconst aff = await manager.add(buff, { marketplaceInfo, permissionsGranted, enable: true, user });\n\t\t\t\t\tconst info = aff.getAppInfo();\n\n\t\t\t\t\tif (aff.hasStorageError()) {\n\t\t\t\t\t\treturn API.v1.failure({ status: 'storage_error', messages: [aff.getStorageError()] });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (aff.hasAppUserError()) {\n\t\t\t\t\t\treturn API.v1.failure({\n\t\t\t\t\t\t\tstatus: 'app_user_error',\n\t\t\t\t\t\t\tmessages: [aff.getAppUserError().message],\n\t\t\t\t\t\t\tpayload: { username: aff.getAppUserError().username },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tinfo.status = aff.getApp().getStatus();\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tapp: info,\n\t\t\t\t\t\timplemented: aff.getImplementedInferfaces(),\n\t\t\t\t\t\tlicenseValidation: aff.getLicenseValidationResult(),\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t'externalComponents',\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst externalComponents = orchestrator.getProvidedComponents();\n\n\t\t\t\t\treturn API.v1.success({ externalComponents });\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t'languages',\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst apps = manager.get().map((prl) => ({\n\t\t\t\t\t\tid: prl.getID(),\n\t\t\t\t\t\tlanguages: prl.getStorageItem().languageContent,\n\t\t\t\t\t}));\n\n\t\t\t\t\treturn API.v1.success({ apps });\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t'externalComponentEvent',\n\t\t\t{ authRequired: true },\n\t\t\t{\n\t\t\t\tpost() {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.bodyParams.externalComponent ||\n\t\t\t\t\t\t!['IPostExternalComponentOpened', 'IPostExternalComponentClosed'].includes(this.bodyParams.event)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn API.v1.failure({ error: 'Event and externalComponent must be provided.' });\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst { event, externalComponent } = this.bodyParams;\n\t\t\t\t\t\tconst result = Apps.getBridges().getListenerBridge().externalComponentEvent(event, externalComponent);\n\n\t\t\t\t\t\treturn API.v1.success({ result });\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\torchestrator.getRocketChatLogger().error(`Error triggering external components' events ${e.response.data}`);\n\t\t\t\t\t\treturn API.v1.internalError();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t'bundles/:id/apps',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst baseUrl = orchestrator.getMarketplaceUrl();\n\n\t\t\t\t\tconst headers = {};\n\t\t\t\t\tconst token = getWorkspaceAccessToken();\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\theaders.Authorization = `Bearer ${token}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet result;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = HTTP.get(`${baseUrl}/v1/bundles/${this.urlParams.id}/apps`, {\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\torchestrator.getRocketChatLogger().error(\"Error getting the Bundle's Apps from the Marketplace:\", e.response.data);\n\t\t\t\t\t\treturn API.v1.internalError();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!result || result.statusCode !== 200 || result.data.length === 0) {\n\t\t\t\t\t\torchestrator.getRocketChatLogger().error(\"Error getting the Bundle's Apps from the Marketplace:\", result.data);\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn API.v1.success({ apps: result.data });\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tif (this.queryParams.marketplace && this.queryParams.version) {\n\t\t\t\t\t\tconst baseUrl = orchestrator.getMarketplaceUrl();\n\n\t\t\t\t\t\tconst headers = {}; // DO NOT ATTACH THE FRAMEWORK/ENGINE VERSION HERE.\n\t\t\t\t\t\tconst token = getWorkspaceAccessToken();\n\t\t\t\t\t\tif (token) {\n\t\t\t\t\t\t\theaders.Authorization = `Bearer ${token}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet result;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresult = HTTP.get(`${baseUrl}/v1/apps/${this.urlParams.id}?appVersion=${this.queryParams.version}`, {\n\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn handleError('Unable to access Marketplace. Does the server has access to the internet?', e);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!result || result.statusCode !== 200 || result.data.length === 0) {\n\t\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error getting the App information from the Marketplace:', result.data);\n\t\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn API.v1.success({ app: result.data[0] });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.queryParams.marketplace && this.queryParams.update && this.queryParams.appVersion) {\n\t\t\t\t\t\tconst baseUrl = orchestrator.getMarketplaceUrl();\n\n\t\t\t\t\t\tconst headers = getDefaultHeaders();\n\t\t\t\t\t\tconst token = getWorkspaceAccessToken();\n\t\t\t\t\t\tif (token) {\n\t\t\t\t\t\t\theaders.Authorization = `Bearer ${token}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet result;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresult = HTTP.get(`${baseUrl}/v1/apps/${this.urlParams.id}/latest?frameworkVersion=${appsEngineVersionForMarketplace}`, {\n\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn handleError('Unable to access Marketplace. Does the server has access to the internet?', e);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (result.statusCode !== 200 || result.data.length === 0) {\n\t\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error getting the App update info from the Marketplace:', result.data);\n\t\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn API.v1.success({ app: result.data });\n\t\t\t\t\t}\n\t\t\t\t\tconst app = manager.getOneById(this.urlParams.id);\n\t\t\t\t\tif (!app) {\n\t\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tapp: formatAppInstanceForRest(app),\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tasync post() {\n\t\t\t\t\tlet buff;\n\t\t\t\t\tlet permissionsGranted;\n\n\t\t\t\t\tif (this.bodyParams.url) {\n\t\t\t\t\t\tif (settings.get('Apps_Framework_Development_Mode') !== true) {\n\t\t\t\t\t\t\treturn API.v1.failure({ error: 'Updating an App from a url is disabled.' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst response = await fetch(this.bodyParams.url);\n\n\t\t\t\t\t\tif (response.status !== 200 || response.headers.get('content-type') !== 'application/zip') {\n\t\t\t\t\t\t\treturn API.v1.failure({\n\t\t\t\t\t\t\t\terror: 'Invalid url. It doesn\\'t exist or is not \"application/zip\".',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuff = Buffer.from(await response.arrayBuffer());\n\t\t\t\t\t} else if (this.bodyParams.appId && this.bodyParams.marketplace && this.bodyParams.version) {\n\t\t\t\t\t\tconst baseUrl = orchestrator.getMarketplaceUrl();\n\n\t\t\t\t\t\tconst headers = getDefaultHeaders();\n\t\t\t\t\t\tconst token = getWorkspaceAccessToken(true, 'marketplace:download', false);\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\t\t\t`${baseUrl}/v2/apps/${this.bodyParams.appId}/download/${this.bodyParams.version}?token=${token}`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error getting the App from the Marketplace:', await response.text());\n\t\t\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (response.headers.get('content-type') !== 'application/zip') {\n\t\t\t\t\t\t\t\treturn API.v1.failure({\n\t\t\t\t\t\t\t\t\terror: 'Invalid url. It doesn\\'t exist or is not \"application/zip\".',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbuff = Buffer.from(await response.arrayBuffer());\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error getting the App from the Marketplace:', e.response.data);\n\t\t\t\t\t\t\treturn API.v1.internalError();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (settings.get('Apps_Framework_Development_Mode') !== true) {\n\t\t\t\t\t\t\treturn API.v1.failure({ error: 'Direct updating of an App is disabled.' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst formData = await getUploadFormData({\n\t\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbuff = formData?.app?.fileBuffer;\n\t\t\t\t\t\tpermissionsGranted = (() => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst permissions = JSON.parse(formData?.permissions || '');\n\t\t\t\t\t\t\t\treturn permissions.length ? permissions : undefined;\n\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!buff) {\n\t\t\t\t\t\treturn API.v1.failure({ error: 'Failed to get a file to install for the App. ' });\n\t\t\t\t\t}\n\n\t\t\t\t\tconst aff = await manager.update(buff, permissionsGranted);\n\t\t\t\t\tconst info = aff.getAppInfo();\n\n\t\t\t\t\tif (aff.hasStorageError()) {\n\t\t\t\t\t\treturn API.v1.failure({ status: 'storage_error', messages: [aff.getStorageError()] });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (aff.hasAppUserError()) {\n\t\t\t\t\t\treturn API.v1.failure({\n\t\t\t\t\t\t\tstatus: 'app_user_error',\n\t\t\t\t\t\t\tmessages: [aff.getAppUserError().message],\n\t\t\t\t\t\t\tpayload: { username: aff.getAppUserError().username },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tinfo.status = aff.getApp().getStatus();\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tapp: info,\n\t\t\t\t\t\timplemented: aff.getImplementedInferfaces(),\n\t\t\t\t\t\tlicenseValidation: aff.getLicenseValidationResult(),\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tdelete() {\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\n\t\t\t\t\tif (!prl) {\n\t\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst user = orchestrator.getConverters().get('users').convertToApp(Meteor.user());\n\n\t\t\t\t\tPromise.await(manager.remove(prl.getID(), { user }));\n\n\t\t\t\t\tconst info = prl.getInfo();\n\t\t\t\t\tinfo.status = prl.getStatus();\n\n\t\t\t\t\treturn API.v1.success({ app: info });\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id/sync',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tpost() {\n\t\t\t\t\tconst baseUrl = orchestrator.getMarketplaceUrl();\n\n\t\t\t\t\tconst headers = getDefaultHeaders();\n\t\t\t\t\tconst token = getWorkspaceAccessToken();\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\theaders.Authorization = `Bearer ${token}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst workspaceIdSetting = Promise.await(Settings.findOneById('Cloud_Workspace_Id'));\n\n\t\t\t\t\tlet result;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = HTTP.get(`${baseUrl}/v1/workspaces/${workspaceIdSetting.value}/apps/${this.urlParams.id}`, {\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error syncing the App from the Marketplace:', e.response.data);\n\t\t\t\t\t\treturn API.v1.internalError();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (result.statusCode !== 200) {\n\t\t\t\t\t\torchestrator.getRocketChatLogger().error('Error syncing the App from the Marketplace:', result.data);\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.await(Apps.updateAppsMarketplaceInfo([result.data]));\n\n\t\t\t\t\treturn API.v1.success({ app: result.data });\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id/icon',\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\t\t\t\t\tif (!prl) {\n\t\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst info = prl.getInfo();\n\t\t\t\t\tif (!info || !info.iconFileContent) {\n\t\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst imageData = info.iconFileContent.split(';base64,');\n\n\t\t\t\t\tconst buf = Buffer.from(imageData[1], 'base64');\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatusCode: 200,\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Length': buf.length,\n\t\t\t\t\t\t\t'Content-Type': imageData[0].replace('data:', ''),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: buf,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id/languages',\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\n\t\t\t\t\tif (prl) {\n\t\t\t\t\t\tconst languages = prl.getStorageItem().languageContent || {};\n\n\t\t\t\t\t\treturn API.v1.success({ languages });\n\t\t\t\t\t}\n\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id/logs',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\n\t\t\t\t\tif (prl) {\n\t\t\t\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\t\t\t\tconst { sort, fields, query } = this.parseJsonQuery();\n\n\t\t\t\t\t\tconst ourQuery = Object.assign({}, query, { appId: prl.getID() });\n\t\t\t\t\t\tconst options = {\n\t\t\t\t\t\t\tsort: sort || { _updatedAt: -1 },\n\t\t\t\t\t\t\tskip: offset,\n\t\t\t\t\t\t\tlimit: count,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst logs = Promise.await(orchestrator.getLogStorage().find(ourQuery, options));\n\n\t\t\t\t\t\treturn API.v1.success({ logs });\n\t\t\t\t\t}\n\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id/settings',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\n\t\t\t\t\tif (prl) {\n\t\t\t\t\t\tconst settings = Object.assign({}, prl.getStorageItem().settings);\n\n\t\t\t\t\t\tObject.keys(settings).forEach((k) => {\n\t\t\t\t\t\t\tif (settings[k].hidden) {\n\t\t\t\t\t\t\t\tdelete settings[k];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn API.v1.success({ settings });\n\t\t\t\t\t}\n\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t},\n\t\t\t\tpost() {\n\t\t\t\t\tif (!this.bodyParams || !this.bodyParams.settings) {\n\t\t\t\t\t\treturn API.v1.failure('The settings to update must be present.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\n\t\t\t\t\tif (!prl) {\n\t\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { settings } = prl.getStorageItem();\n\n\t\t\t\t\tconst updated = [];\n\t\t\t\t\tthis.bodyParams.settings.forEach((s) => {\n\t\t\t\t\t\tif (settings[s.id]) {\n\t\t\t\t\t\t\tPromise.await(manager.getSettingsManager().updateAppSetting(this.urlParams.id, s));\n\t\t\t\t\t\t\t// Updating?\n\t\t\t\t\t\t\tupdated.push(s);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn API.v1.success({ updated });\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id/settings/:settingId',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst setting = manager.getSettingsManager().getAppSetting(this.urlParams.id, this.urlParams.settingId);\n\n\t\t\t\t\t\tAPI.v1.success({ setting });\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (e.message.includes('No setting found')) {\n\t\t\t\t\t\t\treturn API.v1.notFound(`No Setting found on the App by the id of: \"${this.urlParams.settingId}\"`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e.message.includes('No App found')) {\n\t\t\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn API.v1.failure(e.message);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpost() {\n\t\t\t\t\tif (!this.bodyParams.setting) {\n\t\t\t\t\t\treturn API.v1.failure('Setting to update to must be present on the posted body.');\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tPromise.await(manager.getSettingsManager().updateAppSetting(this.urlParams.id, this.bodyParams.setting));\n\n\t\t\t\t\t\treturn API.v1.success();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (e.message.includes('No setting found')) {\n\t\t\t\t\t\t\treturn API.v1.notFound(`No Setting found on the App by the id of: \"${this.urlParams.settingId}\"`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e.message.includes('No App found')) {\n\t\t\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn API.v1.failure(e.message);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id/apis',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\n\t\t\t\t\tif (prl) {\n\t\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\t\tapis: manager.apiManager.listApis(this.urlParams.id),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.api.addRoute(\n\t\t\t':id/status',\n\t\t\t{ authRequired: true, permissionsRequired: ['manage-apps'] },\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\n\t\t\t\t\tif (prl) {\n\t\t\t\t\t\treturn API.v1.success({ status: prl.getStatus() });\n\t\t\t\t\t}\n\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t},\n\t\t\t\tpost() {\n\t\t\t\t\tif (!this.bodyParams.status || typeof this.bodyParams.status !== 'string') {\n\t\t\t\t\t\treturn API.v1.failure('Invalid status provided, it must be \"status\" field and a string.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prl = manager.getOneById(this.urlParams.id);\n\n\t\t\t\t\tif (!prl) {\n\t\t\t\t\t\treturn API.v1.notFound(`No App found by the id of: ${this.urlParams.id}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = Promise.await(manager.changeStatus(prl.getID(), this.bodyParams.status));\n\n\t\t\t\t\treturn API.v1.success({ status: result.getStatus() });\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"]},"sourceType":"module","hash":"404e89d35fe0e1631b4d2415270420b4611b7d82"}

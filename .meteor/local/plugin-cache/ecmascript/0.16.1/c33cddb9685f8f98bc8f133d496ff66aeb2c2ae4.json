{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/relinquishRoomOwnerships.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/relinquishRoomOwnerships.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/relinquishRoomOwnerships.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/relinquishRoomOwnerships.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/relinquishRoomOwnerships.js"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nmodule.export({\n  relinquishRoomOwnerships: () => relinquishRoomOwnerships\n});\nlet FileUpload;\nmodule.link(\"../../../file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 0);\nlet Subscriptions, Messages, Rooms;\nmodule.link(\"../../../models/server\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.link(\"../../../models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\n\nconst bulkRoomCleanUp = rids => {\n  // no bulk deletion for files\n  rids.forEach(rid => FileUpload.removeFilesByRoomId(rid));\n  return Promise.await(Promise.all([Subscriptions.removeByRoomIds(rids), Messages.removeByRoomIds(rids), Rooms.removeByIds(rids)]));\n};\n\nconst relinquishRoomOwnerships = function (userId, subscribedRooms) {\n  return Promise.asyncApply(() => {\n    let removeDirectMessages = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // change owners\n    const changeOwner = subscribedRooms.filter(_ref => {\n      let {\n        shouldChangeOwner\n      } = _ref;\n      return shouldChangeOwner;\n    });\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n\n    var _iteratorError;\n\n    try {\n      for (var _iterator = _asyncIterator(changeOwner), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n        const {\n          newOwner,\n          rid\n        } = _step.value;\n        Promise.await(Roles.addUserRoles(newOwner, ['owner'], rid));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          Promise.await(_iterator.return());\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    const roomIdsToRemove = subscribedRooms.filter(_ref2 => {\n      let {\n        shouldBeRemoved\n      } = _ref2;\n      return shouldBeRemoved;\n    }).map(_ref3 => {\n      let {\n        rid\n      } = _ref3;\n      return rid;\n    });\n\n    if (removeDirectMessages) {\n      Rooms.find1On1ByUserId(userId, {\n        fields: {\n          _id: 1\n        }\n      }).forEach(_ref4 => {\n        let {\n          _id\n        } = _ref4;\n        return roomIdsToRemove.push(_id);\n      });\n    }\n\n    bulkRoomCleanUp(roomIdsToRemove);\n    return subscribedRooms;\n  });\n};","map":{"version":3,"sources":["app/lib/server/functions/relinquishRoomOwnerships.js"],"names":["_asyncIterator","module","link","default","v","export","relinquishRoomOwnerships","FileUpload","Subscriptions","Messages","Rooms","Roles","bulkRoomCleanUp","rids","forEach","rid","removeFilesByRoomId","Promise","await","all","removeByRoomIds","removeByIds","userId","subscribedRooms","removeDirectMessages","changeOwner","filter","shouldChangeOwner","newOwner","addUserRoles","roomIdsToRemove","shouldBeRemoved","map","find1On1ByUserId","fields","_id","push"],"mappings":"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","sourcesContent":["import { FileUpload } from '../../../file-upload/server';\nimport { Subscriptions, Messages, Rooms } from '../../../models/server';\nimport { Roles } from '../../../models/server/raw';\n\nconst bulkRoomCleanUp = (rids) => {\n\t// no bulk deletion for files\n\trids.forEach((rid) => FileUpload.removeFilesByRoomId(rid));\n\n\treturn Promise.await(Promise.all([Subscriptions.removeByRoomIds(rids), Messages.removeByRoomIds(rids), Rooms.removeByIds(rids)]));\n};\n\nexport const relinquishRoomOwnerships = async function (userId, subscribedRooms, removeDirectMessages = true) {\n\t// change owners\n\tconst changeOwner = subscribedRooms.filter(({ shouldChangeOwner }) => shouldChangeOwner);\n\n\tfor await (const { newOwner, rid } of changeOwner) {\n\t\tawait Roles.addUserRoles(newOwner, ['owner'], rid);\n\t}\n\n\tconst roomIdsToRemove = subscribedRooms.filter(({ shouldBeRemoved }) => shouldBeRemoved).map(({ rid }) => rid);\n\n\tif (removeDirectMessages) {\n\t\tRooms.find1On1ByUserId(userId, { fields: { _id: 1 } }).forEach(({ _id }) => roomIdsToRemove.push(_id));\n\t}\n\n\tbulkRoomCleanUp(roomIdsToRemove);\n\n\treturn subscribedRooms;\n};\n"]},"sourceType":"module","hash":"c33cddb9685f8f98bc8f133d496ff66aeb2c2ae4"}

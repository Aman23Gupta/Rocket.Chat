{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer/server/methods/startImport.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer/server/methods/startImport.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer/server/methods/startImport.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/importer/server/methods/startImport.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer/server/methods/startImport.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet hasPermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 1);\nlet Imports;\nmodule.link(\"../../../models\", {\n  Imports(v) {\n    Imports = v;\n  }\n\n}, 2);\nlet Importers, Selection, SelectionChannel, SelectionUser;\nmodule.link(\"..\", {\n  Importers(v) {\n    Importers = v;\n  },\n\n  Selection(v) {\n    Selection = v;\n  },\n\n  SelectionChannel(v) {\n    SelectionChannel = v;\n  },\n\n  SelectionUser(v) {\n    SelectionUser = v;\n  }\n\n}, 3);\nMeteor.methods({\n  startImport(input) {\n    // Takes name and object with users / channels selected to import\n    if (!Meteor.userId()) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'startImport'\n      });\n    }\n\n    if (!hasPermission(Meteor.userId(), 'run-import')) {\n      throw new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', {\n        method: 'startImport'\n      });\n    }\n\n    const operation = Imports.findLastImport();\n\n    if (!operation) {\n      throw new Meteor.Error('error-operation-not-found', 'Import Operation Not Found', {\n        method: 'startImport'\n      });\n    }\n\n    const {\n      importerKey\n    } = operation;\n    const importer = Importers.get(importerKey);\n\n    if (!importer) {\n      throw new Meteor.Error('error-importer-not-defined', \"The importer (\".concat(importerKey, \") has no import class defined.\"), {\n        method: 'startImport'\n      });\n    }\n\n    importer.instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n\n    const usersSelection = input.users.map(user => new SelectionUser(user.user_id, user.username, user.email, user.is_deleted, user.is_bot, user.do_import));\n    const channelsSelection = input.channels.map(channel => new SelectionChannel(channel.channel_id, channel.name, channel.is_archived, channel.do_import));\n    const selection = new Selection(importer.name, usersSelection, channelsSelection);\n    return importer.instance.startImport(selection);\n  }\n\n});","map":{"version":3,"sources":["app/importer/server/methods/startImport.js"],"names":["Meteor","module","link","v","hasPermission","Imports","Importers","Selection","SelectionChannel","SelectionUser","methods","startImport","input","userId","Error","method","operation","findLastImport","importerKey","importer","get","instance","usersSelection","users","map","user","user_id","username","email","is_deleted","is_bot","do_import","channelsSelection","channels","channel","channel_id","name","is_archived","selection"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,aAAJ;AAAkBH,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACE,EAAAA,aAAa,CAACD,CAAD,EAAG;AAACC,IAAAA,aAAa,GAACD,CAAd;AAAgB;;AAAlC,CAArC,EAAyE,CAAzE;AAA4E,IAAIE,OAAJ;AAAYJ,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACG,EAAAA,OAAO,CAACF,CAAD,EAAG;AAACE,IAAAA,OAAO,GAACF,CAAR;AAAU;;AAAtB,CAA9B,EAAsD,CAAtD;AAAyD,IAAIG,SAAJ,EAAcC,SAAd,EAAwBC,gBAAxB,EAAyCC,aAAzC;AAAuDR,MAAM,CAACC,IAAP,CAAY,IAAZ,EAAiB;AAACI,EAAAA,SAAS,CAACH,CAAD,EAAG;AAACG,IAAAA,SAAS,GAACH,CAAV;AAAY,GAA1B;;AAA2BI,EAAAA,SAAS,CAACJ,CAAD,EAAG;AAACI,IAAAA,SAAS,GAACJ,CAAV;AAAY,GAApD;;AAAqDK,EAAAA,gBAAgB,CAACL,CAAD,EAAG;AAACK,IAAAA,gBAAgB,GAACL,CAAjB;AAAmB,GAA5F;;AAA6FM,EAAAA,aAAa,CAACN,CAAD,EAAG;AAACM,IAAAA,aAAa,GAACN,CAAd;AAAgB;;AAA9H,CAAjB,EAAiJ,CAAjJ;AAM1RH,MAAM,CAACU,OAAP,CAAe;AACdC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB;AACA,QAAI,CAACZ,MAAM,CAACa,MAAP,EAAL,EAAsB;AACrB,YAAM,IAAIb,MAAM,CAACc,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,QAAI,CAACX,aAAa,CAACJ,MAAM,CAACa,MAAP,EAAD,EAAkB,YAAlB,CAAlB,EAAmD;AAClD,YAAM,IAAIb,MAAM,CAACc,KAAX,CAAiB,0BAAjB,EAA6C,0BAA7C,EAAyE;AAC9EC,QAAAA,MAAM,EAAE;AADsE,OAAzE,CAAN;AAGA;;AAED,UAAMC,SAAS,GAAGX,OAAO,CAACY,cAAR,EAAlB;;AACA,QAAI,CAACD,SAAL,EAAgB;AACf,YAAM,IAAIhB,MAAM,CAACc,KAAX,CAAiB,2BAAjB,EAA8C,4BAA9C,EAA4E;AACjFC,QAAAA,MAAM,EAAE;AADyE,OAA5E,CAAN;AAGA;;AAED,UAAM;AAAEG,MAAAA;AAAF,QAAkBF,SAAxB;AACA,UAAMG,QAAQ,GAAGb,SAAS,CAACc,GAAV,CAAcF,WAAd,CAAjB;;AACA,QAAI,CAACC,QAAL,EAAe;AACd,YAAM,IAAInB,MAAM,CAACc,KAAX,CAAiB,4BAAjB,0BAAgEI,WAAhE,qCAA6G;AAClHH,QAAAA,MAAM,EAAE;AAD0G,OAA7G,CAAN;AAGA;;AAEDI,IAAAA,QAAQ,CAACE,QAAT,GAAoB,IAAIF,QAAQ,CAACA,QAAb,CAAsBA,QAAtB,EAAgCH,SAAhC,CAApB,CA3BkB,CA2B8C;;AAEhE,UAAMM,cAAc,GAAGV,KAAK,CAACW,KAAN,CAAYC,GAAZ,CACrBC,IAAD,IAAU,IAAIhB,aAAJ,CAAkBgB,IAAI,CAACC,OAAvB,EAAgCD,IAAI,CAACE,QAArC,EAA+CF,IAAI,CAACG,KAApD,EAA2DH,IAAI,CAACI,UAAhE,EAA4EJ,IAAI,CAACK,MAAjF,EAAyFL,IAAI,CAACM,SAA9F,CADY,CAAvB;AAGA,UAAMC,iBAAiB,GAAGpB,KAAK,CAACqB,QAAN,CAAeT,GAAf,CACxBU,OAAD,IAAa,IAAI1B,gBAAJ,CAAqB0B,OAAO,CAACC,UAA7B,EAAyCD,OAAO,CAACE,IAAjD,EAAuDF,OAAO,CAACG,WAA/D,EAA4EH,OAAO,CAACH,SAApF,CADY,CAA1B;AAIA,UAAMO,SAAS,GAAG,IAAI/B,SAAJ,CAAcY,QAAQ,CAACiB,IAAvB,EAA6Bd,cAA7B,EAA6CU,iBAA7C,CAAlB;AACA,WAAOb,QAAQ,CAACE,QAAT,CAAkBV,WAAlB,CAA8B2B,SAA9B,CAAP;AACA;;AAvCa,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { hasPermission } from '../../../authorization';\nimport { Imports } from '../../../models';\nimport { Importers, Selection, SelectionChannel, SelectionUser } from '..';\n\nMeteor.methods({\n\tstartImport(input) {\n\t\t// Takes name and object with users / channels selected to import\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'startImport' });\n\t\t}\n\n\t\tif (!hasPermission(Meteor.userId(), 'run-import')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', {\n\t\t\t\tmethod: 'startImport',\n\t\t\t});\n\t\t}\n\n\t\tconst operation = Imports.findLastImport();\n\t\tif (!operation) {\n\t\t\tthrow new Meteor.Error('error-operation-not-found', 'Import Operation Not Found', {\n\t\t\t\tmethod: 'startImport',\n\t\t\t});\n\t\t}\n\n\t\tconst { importerKey } = operation;\n\t\tconst importer = Importers.get(importerKey);\n\t\tif (!importer) {\n\t\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${importerKey}) has no import class defined.`, {\n\t\t\t\tmethod: 'startImport',\n\t\t\t});\n\t\t}\n\n\t\timporter.instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n\n\t\tconst usersSelection = input.users.map(\n\t\t\t(user) => new SelectionUser(user.user_id, user.username, user.email, user.is_deleted, user.is_bot, user.do_import),\n\t\t);\n\t\tconst channelsSelection = input.channels.map(\n\t\t\t(channel) => new SelectionChannel(channel.channel_id, channel.name, channel.is_archived, channel.do_import),\n\t\t);\n\n\t\tconst selection = new Selection(importer.name, usersSelection, channelsSelection);\n\t\treturn importer.instance.startImport(selection);\n\t},\n});\n"]},"sourceType":"module","hash":"31fdc179c4a0f3b786800dd38e709e8b8dac01cd"}

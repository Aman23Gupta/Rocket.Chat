{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/sendToFacebook.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/sendToFacebook.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/sendToFacebook.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/sendToFacebook.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/sendToFacebook.js"}},"code":"let callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\nlet OmniChannel;\nmodule.link(\"../lib/OmniChannel\", {\n  default(v) {\n    OmniChannel = v;\n  }\n\n}, 2);\nlet normalizeMessageFileUpload;\nmodule.link(\"../../../utils/server/functions/normalizeMessageFileUpload\", {\n  normalizeMessageFileUpload(v) {\n    normalizeMessageFileUpload = v;\n  }\n\n}, 3);\ncallbacks.add('afterSaveMessage', function (message, room) {\n  // skips this callback if the message was edited\n  if (message.editedAt) {\n    return message;\n  }\n\n  if (!settings.get('Livechat_Facebook_Enabled') || !settings.get('Livechat_Facebook_API_Key')) {\n    return message;\n  } // only send the sms by SMS if it is a livechat room with SMS set to true\n\n\n  if (!(typeof room.t !== 'undefined' && room.t === 'l' && room.facebook && room.v && room.v.token)) {\n    return message;\n  } // if the message has a token, it was sent from the visitor, so ignore it\n\n\n  if (message.token) {\n    return message;\n  } // if the message has a type means it is a special message (like the closing comment), so skips\n\n\n  if (message.t) {\n    return message;\n  }\n\n  if (message.file) {\n    message = Promise.await(normalizeMessageFileUpload(message));\n  }\n\n  OmniChannel.reply({\n    page: room.facebook.page.id,\n    token: room.v.token,\n    text: message.msg\n  });\n  return message;\n}, callbacks.priority.LOW, 'sendMessageToFacebook');","map":{"version":3,"sources":["app/livechat/server/hooks/sendToFacebook.js"],"names":["callbacks","module","link","v","settings","OmniChannel","default","normalizeMessageFileUpload","add","message","room","editedAt","get","t","facebook","token","file","Promise","await","reply","page","id","text","msg","priority","LOW"],"mappings":"AAAA,IAAIA,SAAJ;AAAcC,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACF,EAAAA,SAAS,CAACG,CAAD,EAAG;AAACH,IAAAA,SAAS,GAACG,CAAV;AAAY;;AAA1B,CAAxC,EAAoE,CAApE;AAAuE,IAAIC,QAAJ;AAAaH,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACE,EAAAA,QAAQ,CAACD,CAAD,EAAG;AAACC,IAAAA,QAAQ,GAACD,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIE,WAAJ;AAAgBJ,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAiC;AAACI,EAAAA,OAAO,CAACH,CAAD,EAAG;AAACE,IAAAA,WAAW,GAACF,CAAZ;AAAc;;AAA1B,CAAjC,EAA6D,CAA7D;AAAgE,IAAII,0BAAJ;AAA+BN,MAAM,CAACC,IAAP,CAAY,4DAAZ,EAAyE;AAACK,EAAAA,0BAA0B,CAACJ,CAAD,EAAG;AAACI,IAAAA,0BAA0B,GAACJ,CAA3B;AAA6B;;AAA5D,CAAzE,EAAuI,CAAvI;AAK9QH,SAAS,CAACQ,GAAV,CACC,kBADD,EAEC,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AACxB;AACA,MAAID,OAAO,CAACE,QAAZ,EAAsB;AACrB,WAAOF,OAAP;AACA;;AAED,MAAI,CAACL,QAAQ,CAACQ,GAAT,CAAa,2BAAb,CAAD,IAA8C,CAACR,QAAQ,CAACQ,GAAT,CAAa,2BAAb,CAAnD,EAA8F;AAC7F,WAAOH,OAAP;AACA,GARuB,CAUxB;;;AACA,MAAI,EAAE,OAAOC,IAAI,CAACG,CAAZ,KAAkB,WAAlB,IAAiCH,IAAI,CAACG,CAAL,KAAW,GAA5C,IAAmDH,IAAI,CAACI,QAAxD,IAAoEJ,IAAI,CAACP,CAAzE,IAA8EO,IAAI,CAACP,CAAL,CAAOY,KAAvF,CAAJ,EAAmG;AAClG,WAAON,OAAP;AACA,GAbuB,CAexB;;;AACA,MAAIA,OAAO,CAACM,KAAZ,EAAmB;AAClB,WAAON,OAAP;AACA,GAlBuB,CAoBxB;;;AACA,MAAIA,OAAO,CAACI,CAAZ,EAAe;AACd,WAAOJ,OAAP;AACA;;AAED,MAAIA,OAAO,CAACO,IAAZ,EAAkB;AACjBP,IAAAA,OAAO,GAAGQ,OAAO,CAACC,KAAR,CAAcX,0BAA0B,CAACE,OAAD,CAAxC,CAAV;AACA;;AAEDJ,EAAAA,WAAW,CAACc,KAAZ,CAAkB;AACjBC,IAAAA,IAAI,EAAEV,IAAI,CAACI,QAAL,CAAcM,IAAd,CAAmBC,EADR;AAEjBN,IAAAA,KAAK,EAAEL,IAAI,CAACP,CAAL,CAAOY,KAFG;AAGjBO,IAAAA,IAAI,EAAEb,OAAO,CAACc;AAHG,GAAlB;AAMA,SAAOd,OAAP;AACA,CAtCF,EAuCCT,SAAS,CAACwB,QAAV,CAAmBC,GAvCpB,EAwCC,uBAxCD","sourcesContent":["import { callbacks } from '../../../../lib/callbacks';\nimport { settings } from '../../../settings';\nimport OmniChannel from '../lib/OmniChannel';\nimport { normalizeMessageFileUpload } from '../../../utils/server/functions/normalizeMessageFileUpload';\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tfunction (message, room) {\n\t\t// skips this callback if the message was edited\n\t\tif (message.editedAt) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!settings.get('Livechat_Facebook_Enabled') || !settings.get('Livechat_Facebook_API_Key')) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// only send the sms by SMS if it is a livechat room with SMS set to true\n\t\tif (!(typeof room.t !== 'undefined' && room.t === 'l' && room.facebook && room.v && room.v.token)) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// if the message has a token, it was sent from the visitor, so ignore it\n\t\tif (message.token) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// if the message has a type means it is a special message (like the closing comment), so skips\n\t\tif (message.t) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (message.file) {\n\t\t\tmessage = Promise.await(normalizeMessageFileUpload(message));\n\t\t}\n\n\t\tOmniChannel.reply({\n\t\t\tpage: room.facebook.page.id,\n\t\t\ttoken: room.v.token,\n\t\t\ttext: message.msg,\n\t\t});\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'sendMessageToFacebook',\n);\n"]},"sourceType":"module","hash":"095c3326957ef53d7653c12be8161dc281768c01"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/createDirectRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/createDirectRoom.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/createDirectRoom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/createDirectRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/createDirectRoom.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  createDirectRoom: () => createDirectRoom\n});\nlet AppsEngineException;\nmodule.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n  AppsEngineException(v) {\n    AppsEngineException = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet Apps;\nmodule.link(\"../../../apps/server\", {\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 3);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 4);\nlet Rooms;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet getDefaultSubscriptionPref;\nmodule.link(\"../../../utils/server\", {\n  getDefaultSubscriptionPref(v) {\n    getDefaultSubscriptionPref = v;\n  }\n\n}, 7);\nlet Users, Subscriptions;\nmodule.link(\"../../../models/server/raw\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 8);\n\nconst generateSubscription = (fname, name, user, extra) => _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  _id: Random.id(),\n  alert: false,\n  unread: 0,\n  userMentions: 0,\n  groupMentions: 0\n}, user.customFields && {\n  customFields: user.customFields\n}), getDefaultSubscriptionPref(user)), extra), {}, {\n  t: 'd',\n  fname,\n  name,\n  u: {\n    _id: user._id,\n    username: user.username\n  }\n});\n\nconst getFname = members => members.map(_ref => {\n  let {\n    name,\n    username\n  } = _ref;\n  return name || username;\n}).join(', ');\n\nconst getName = members => members.map(_ref2 => {\n  let {\n    username\n  } = _ref2;\n  return username;\n}).join(', ');\n\nconst createDirectRoom = function (members) {\n  let roomExtraData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (members.length > (settings.get('DirectMesssage_maxUsers') || 1)) {\n    throw new Error('error-direct-message-max-user-exceeded');\n  }\n\n  const sortedMembers = members.sort((u1, u2) => (u1.name || u1.username).localeCompare(u2.name || u2.username));\n  const usernames = sortedMembers.map(_ref3 => {\n    let {\n      username\n    } = _ref3;\n    return username;\n  });\n  const uids = members.map(_ref4 => {\n    let {\n      _id\n    } = _ref4;\n    return _id;\n  }).sort(); // Deprecated: using users' _id to compose the room _id is deprecated\n\n  const room = uids.length === 2 ? Rooms.findOneById(uids.join(''), {\n    fields: {\n      _id: 1\n    }\n  }) : Rooms.findOneDirectRoomContainingAllUserIDs(uids, {\n    fields: {\n      _id: 1\n    }\n  });\n  const isNewRoom = !room;\n\n  const roomInfo = _objectSpread(_objectSpread({}, uids.length === 2 && {\n    _id: uids.join('')\n  }), {}, {\n    // Deprecated: using users' _id to compose the room _id is deprecated\n    t: 'd',\n    usernames,\n    usersCount: members.length,\n    msgs: 0,\n    ts: new Date(),\n    uids\n  }, roomExtraData);\n\n  if (isNewRoom) {\n    roomInfo._USERNAMES = usernames;\n    const prevent = Promise.await(Apps.triggerEvent('IPreRoomCreatePrevent', roomInfo).catch(error => {\n      if (error instanceof AppsEngineException) {\n        throw new Meteor.Error('error-app-prevented', error.message);\n      }\n\n      throw error;\n    }));\n\n    if (prevent) {\n      throw new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n    }\n\n    let result;\n    result = Promise.await(Apps.triggerEvent('IPreRoomCreateExtend', roomInfo));\n    result = Promise.await(Apps.triggerEvent('IPreRoomCreateModify', result));\n\n    if (typeof result === 'object') {\n      Object.assign(roomInfo, result);\n    }\n\n    delete roomInfo._USERNAMES;\n  }\n\n  const rid = (room === null || room === void 0 ? void 0 : room._id) || Rooms.insert(roomInfo);\n\n  if (members.length === 1) {\n    // dm to yourself\n    Subscriptions.updateOne({\n      rid,\n      'u._id': members[0]._id\n    }, {\n      $set: {\n        open: true\n      },\n      $setOnInsert: generateSubscription(members[0].name || members[0].username, members[0].username, members[0], _objectSpread({}, options.subscriptionExtra))\n    }, {\n      upsert: true\n    });\n  } else {\n    const memberIds = members.map(member => member._id);\n    const membersWithPreferences = Users.find({\n      _id: {\n        $in: memberIds\n      }\n    }, {\n      'username': 1,\n      'settings.preferences': 1\n    });\n    membersWithPreferences.forEach(member => {\n      const otherMembers = sortedMembers.filter(_ref5 => {\n        let {\n          _id\n        } = _ref5;\n        return _id !== member._id;\n      });\n      Subscriptions.updateOne({\n        rid,\n        'u._id': member._id\n      }, _objectSpread(_objectSpread({}, options.creator === member._id && {\n        $set: {\n          open: true\n        }\n      }), {}, {\n        $setOnInsert: generateSubscription(getFname(otherMembers), getName(otherMembers), member, _objectSpread(_objectSpread({}, options.subscriptionExtra), options.creator !== member._id && {\n          open: members.length > 2\n        }))\n      }), {\n        upsert: true\n      });\n    });\n  } // If the room is new, run a callback\n\n\n  if (isNewRoom) {\n    const insertedRoom = Rooms.findOneById(rid);\n    callbacks.run('afterCreateDirectRoom', insertedRoom, {\n      members\n    });\n    Apps.triggerEvent('IPostRoomCreate', insertedRoom);\n  }\n\n  return {\n    _id: rid,\n    usernames,\n    t: 'd',\n    inserted: isNewRoom\n  };\n};","map":{"version":3,"sources":["app/lib/server/functions/createDirectRoom.js"],"names":["_objectSpread","module","link","default","v","export","createDirectRoom","AppsEngineException","Meteor","Random","Apps","callbacks","Rooms","settings","getDefaultSubscriptionPref","Users","Subscriptions","generateSubscription","fname","name","user","extra","_id","id","alert","unread","userMentions","groupMentions","customFields","t","u","username","getFname","members","map","join","getName","roomExtraData","options","length","get","Error","sortedMembers","sort","u1","u2","localeCompare","usernames","uids","room","findOneById","fields","findOneDirectRoomContainingAllUserIDs","isNewRoom","roomInfo","usersCount","msgs","ts","Date","_USERNAMES","prevent","Promise","await","triggerEvent","catch","error","message","result","Object","assign","rid","insert","updateOne","$set","open","$setOnInsert","subscriptionExtra","upsert","memberIds","member","membersWithPreferences","find","$in","forEach","otherMembers","filter","creator","insertedRoom","run","inserted"],"mappings":"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","sourcesContent":["import { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { Apps } from '../../../apps/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Rooms } from '../../../models/server';\nimport { settings } from '../../../settings/server';\nimport { getDefaultSubscriptionPref } from '../../../utils/server';\nimport { Users, Subscriptions } from '../../../models/server/raw';\n\nconst generateSubscription = (fname, name, user, extra) => ({\n\t_id: Random.id(),\n\talert: false,\n\tunread: 0,\n\tuserMentions: 0,\n\tgroupMentions: 0,\n\t...(user.customFields && { customFields: user.customFields }),\n\t...getDefaultSubscriptionPref(user),\n\t...extra,\n\tt: 'd',\n\tfname,\n\tname,\n\tu: {\n\t\t_id: user._id,\n\t\tusername: user.username,\n\t},\n});\n\nconst getFname = (members) => members.map(({ name, username }) => name || username).join(', ');\nconst getName = (members) => members.map(({ username }) => username).join(', ');\n\nexport const createDirectRoom = function (members, roomExtraData = {}, options = {}) {\n\tif (members.length > (settings.get('DirectMesssage_maxUsers') || 1)) {\n\t\tthrow new Error('error-direct-message-max-user-exceeded');\n\t}\n\n\tconst sortedMembers = members.sort((u1, u2) => (u1.name || u1.username).localeCompare(u2.name || u2.username));\n\n\tconst usernames = sortedMembers.map(({ username }) => username);\n\tconst uids = members.map(({ _id }) => _id).sort();\n\n\t// Deprecated: using users' _id to compose the room _id is deprecated\n\tconst room =\n\t\tuids.length === 2\n\t\t\t? Rooms.findOneById(uids.join(''), { fields: { _id: 1 } })\n\t\t\t: Rooms.findOneDirectRoomContainingAllUserIDs(uids, { fields: { _id: 1 } });\n\n\tconst isNewRoom = !room;\n\n\tconst roomInfo = {\n\t\t...(uids.length === 2 && { _id: uids.join('') }), // Deprecated: using users' _id to compose the room _id is deprecated\n\t\tt: 'd',\n\t\tusernames,\n\t\tusersCount: members.length,\n\t\tmsgs: 0,\n\t\tts: new Date(),\n\t\tuids,\n\t\t...roomExtraData,\n\t};\n\n\tif (isNewRoom) {\n\t\troomInfo._USERNAMES = usernames;\n\n\t\tconst prevent = Promise.await(\n\t\t\tApps.triggerEvent('IPreRoomCreatePrevent', roomInfo).catch((error) => {\n\t\t\t\tif (error instanceof AppsEngineException) {\n\t\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}),\n\t\t);\n\t\tif (prevent) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n\t\t}\n\n\t\tlet result;\n\t\tresult = Promise.await(Apps.triggerEvent('IPreRoomCreateExtend', roomInfo));\n\t\tresult = Promise.await(Apps.triggerEvent('IPreRoomCreateModify', result));\n\n\t\tif (typeof result === 'object') {\n\t\t\tObject.assign(roomInfo, result);\n\t\t}\n\n\t\tdelete roomInfo._USERNAMES;\n\t}\n\n\tconst rid = room?._id || Rooms.insert(roomInfo);\n\n\tif (members.length === 1) {\n\t\t// dm to yourself\n\t\tSubscriptions.updateOne(\n\t\t\t{ rid, 'u._id': members[0]._id },\n\t\t\t{\n\t\t\t\t$set: { open: true },\n\t\t\t\t$setOnInsert: generateSubscription(members[0].name || members[0].username, members[0].username, members[0], {\n\t\t\t\t\t...options.subscriptionExtra,\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t} else {\n\t\tconst memberIds = members.map((member) => member._id);\n\t\tconst membersWithPreferences = Users.find({ _id: { $in: memberIds } }, { 'username': 1, 'settings.preferences': 1 });\n\n\t\tmembersWithPreferences.forEach((member) => {\n\t\t\tconst otherMembers = sortedMembers.filter(({ _id }) => _id !== member._id);\n\t\t\tSubscriptions.updateOne(\n\t\t\t\t{ rid, 'u._id': member._id },\n\t\t\t\t{\n\t\t\t\t\t...(options.creator === member._id && { $set: { open: true } }),\n\t\t\t\t\t$setOnInsert: generateSubscription(getFname(otherMembers), getName(otherMembers), member, {\n\t\t\t\t\t\t...options.subscriptionExtra,\n\t\t\t\t\t\t...(options.creator !== member._id && { open: members.length > 2 }),\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{ upsert: true },\n\t\t\t);\n\t\t});\n\t}\n\n\t// If the room is new, run a callback\n\tif (isNewRoom) {\n\t\tconst insertedRoom = Rooms.findOneById(rid);\n\n\t\tcallbacks.run('afterCreateDirectRoom', insertedRoom, { members });\n\n\t\tApps.triggerEvent('IPostRoomCreate', insertedRoom);\n\t}\n\n\treturn {\n\t\t_id: rid,\n\t\tusernames,\n\t\tt: 'd',\n\t\tinserted: isNewRoom,\n\t};\n};\n"]},"sourceType":"module","hash":"1562c9d08b79153c9057c566c919259f3b7c05e9"}

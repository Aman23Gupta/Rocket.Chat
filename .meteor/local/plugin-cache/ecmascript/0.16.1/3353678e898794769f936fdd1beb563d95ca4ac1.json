{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/Messages.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/models/server/models/Messages.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/Messages.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/Messages.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/models/server/models/Messages.js"}},"code":"let Messages;\nmodule.link(\"../../../../../app/models/server/models/Messages\", {\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\n\nMessages.prototype.createPriorityHistoryWithRoomIdMessageAndUser = function (roomId, message, user, extraData) {\n  const type = 'livechat_priority_history';\n  const record = {\n    t: type,\n    rid: roomId,\n    ts: new Date(),\n    msg: message,\n    u: {\n      _id: user._id,\n      username: user.username\n    },\n    groupable: false\n  };\n\n  if (settings.get('Message_Read_Receipt_Enabled')) {\n    record.unread = true;\n  }\n\n  Object.assign(record, extraData);\n  record._id = this.insertOrUpsert(record);\n  return record;\n};\n\nMessages.prototype.createOnHoldHistoryWithRoomIdMessageAndUser = function (roomId, comment, user) {\n  const type = 'omnichannel_placed_chat_on_hold';\n  const record = {\n    t: type,\n    rid: roomId,\n    ts: new Date(),\n    comment,\n    u: {\n      _id: user._id,\n      username: user.username\n    },\n    groupable: false\n  };\n  record._id = this.insertOrUpsert(record);\n  return record;\n};\n\nMessages.prototype.createOnHoldResumedHistoryWithRoomIdMessageAndUser = function (roomId, comment, user) {\n  const type = 'omnichannel_on_hold_chat_resumed';\n  const record = {\n    t: type,\n    rid: roomId,\n    ts: new Date(),\n    comment,\n    u: {\n      _id: user._id,\n      username: user.username\n    },\n    groupable: false\n  };\n  record._id = this.insertOrUpsert(record);\n  return record;\n};\n\nMessages.prototype.createTransferFailedHistoryMessage = function (rid, comment, user, extraData) {\n  const t = 'livechat_transfer_history_fallback';\n  const record = {\n    t,\n    rid,\n    ts: new Date(),\n    comment,\n    u: {\n      _id: user._id,\n      username: user.username\n    },\n    groupable: false\n  };\n  Object.assign(record, extraData);\n  record._id = this.insertOrUpsert(record);\n  return record;\n};\n\nmodule.exportDefault(Messages);","map":{"version":3,"sources":["ee/app/models/server/models/Messages.js"],"names":["Messages","module","link","v","settings","prototype","createPriorityHistoryWithRoomIdMessageAndUser","roomId","message","user","extraData","type","record","t","rid","ts","Date","msg","u","_id","username","groupable","get","unread","Object","assign","insertOrUpsert","createOnHoldHistoryWithRoomIdMessageAndUser","comment","createOnHoldResumedHistoryWithRoomIdMessageAndUser","createTransferFailedHistoryMessage","exportDefault"],"mappings":"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","sourcesContent":["import { Messages } from '../../../../../app/models/server/models/Messages';\nimport { settings } from '../../../../../app/settings/server';\n\nMessages.prototype.createPriorityHistoryWithRoomIdMessageAndUser = function (roomId, message, user, extraData) {\n\tconst type = 'livechat_priority_history';\n\tconst record = {\n\t\tt: type,\n\t\trid: roomId,\n\t\tts: new Date(),\n\t\tmsg: message,\n\t\tu: {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t},\n\t\tgroupable: false,\n\t};\n\n\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\trecord.unread = true;\n\t}\n\tObject.assign(record, extraData);\n\n\trecord._id = this.insertOrUpsert(record);\n\treturn record;\n};\n\nMessages.prototype.createOnHoldHistoryWithRoomIdMessageAndUser = function (roomId, comment, user) {\n\tconst type = 'omnichannel_placed_chat_on_hold';\n\tconst record = {\n\t\tt: type,\n\t\trid: roomId,\n\t\tts: new Date(),\n\t\tcomment,\n\t\tu: {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t},\n\t\tgroupable: false,\n\t};\n\n\trecord._id = this.insertOrUpsert(record);\n\treturn record;\n};\n\nMessages.prototype.createOnHoldResumedHistoryWithRoomIdMessageAndUser = function (roomId, comment, user) {\n\tconst type = 'omnichannel_on_hold_chat_resumed';\n\tconst record = {\n\t\tt: type,\n\t\trid: roomId,\n\t\tts: new Date(),\n\t\tcomment,\n\t\tu: {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t},\n\t\tgroupable: false,\n\t};\n\n\trecord._id = this.insertOrUpsert(record);\n\treturn record;\n};\n\nMessages.prototype.createTransferFailedHistoryMessage = function (rid, comment, user, extraData) {\n\tconst t = 'livechat_transfer_history_fallback';\n\tconst record = {\n\t\tt,\n\t\trid,\n\t\tts: new Date(),\n\t\tcomment,\n\t\tu: {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t},\n\t\tgroupable: false,\n\t};\n\n\tObject.assign(record, extraData);\n\n\trecord._id = this.insertOrUpsert(record);\n\treturn record;\n};\n\nexport default Messages;\n"]},"sourceType":"module","hash":"3353678e898794769f936fdd1beb563d95ca4ac1"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/search/server/service/providerService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/search/server/service/providerService.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/search/server/service/providerService.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/search/server/service/providerService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/search/server/service/providerService.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  searchProviderService: () => searchProviderService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet validationService;\nmodule.link(\"./validationService\", {\n  validationService(v) {\n    validationService = v;\n  }\n\n}, 2);\nlet settings, settingsRegistry;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  },\n\n  settingsRegistry(v) {\n    settingsRegistry = v;\n  }\n\n}, 3);\nlet SearchLogger;\nmodule.link(\"../logger/logger\", {\n  default(v) {\n    SearchLogger = v;\n  }\n\n}, 4);\n\nclass SearchProviderService {\n  constructor() {\n    this.providers = {};\n    this.activeProvider = undefined;\n  }\n  /**\n   * Stop current provider (if there is one) and start the new\n   * @param id the id of the provider which should be started\n   * @param cb a possible callback if provider is active or not (currently not in use)\n   */\n\n\n  use(id) {\n    return new Promise((resolve, reject) => {\n      if (!this.providers[id]) {\n        throw new Error(\"provider \".concat(id, \" cannot be found\"));\n      }\n\n      let reason = 'switch';\n\n      if (!this.activeProvider) {\n        reason = 'startup';\n      } else if (this.activeProvider.key === this.providers[id].key) {\n        reason = 'update';\n      }\n\n      const stopProvider = () => new Promise((resolve, reject) => {\n        if (this.activeProvider) {\n          SearchLogger.debug(\"Stopping provider '\".concat(this.activeProvider.key, \"'\"));\n          this.activeProvider.stop(resolve, reject);\n        } else {\n          resolve();\n        }\n      });\n\n      stopProvider().then(() => {\n        this.activeProvider = undefined;\n        SearchLogger.debug(\"Start provider '\".concat(id, \"'\"));\n\n        try {\n          this.providers[id].run(reason).then(() => {\n            this.activeProvider = this.providers[id];\n            resolve();\n          }, reject);\n        } catch (e) {\n          reject(e);\n        }\n      }, reject);\n    });\n  }\n  /**\n   * Registers a search provider on system startup\n   * @param provider\n   */\n\n\n  register(provider) {\n    this.providers[provider.key] = provider;\n  }\n  /**\n   * Starts the service (loads provider settings for admin ui, add lister not setting changes, enable current provider\n   */\n\n\n  start() {\n    SearchLogger.debug('Load data for all providers');\n    const {\n      providers\n    } = this; // add settings for admininistration\n\n    settingsRegistry.addGroup('Search', function () {\n      const self = this;\n      self.add('Search.Provider', 'defaultProvider', {\n        type: 'select',\n        values: Object.keys(providers).map(key => ({\n          key,\n          i18nLabel: providers[key].i18nLabel\n        })),\n        public: true,\n        i18nLabel: 'Search_Provider'\n      });\n      Object.keys(providers).filter(key => providers[key].settings && providers[key].settings.length > 0).forEach(function (key) {\n        self.section(providers[key].i18nLabel, function () {\n          providers[key].settings.forEach(setting => {\n            const _options = _objectSpread({\n              type: setting.type\n            }, setting.options);\n\n            _options.enableQuery = _options.enableQuery || [];\n\n            _options.enableQuery.push({\n              _id: 'Search.Provider',\n              value: key\n            });\n\n            this.add(setting.id, setting.defaultValue, _options);\n          });\n        });\n      });\n    }); // add listener to react on setting changes\n\n    const configProvider = _.debounce(Meteor.bindEnvironment(() => {\n      const providerId = settings.get('Search.Provider');\n\n      if (providerId) {\n        this.use(providerId); // TODO do something with success and errors\n      }\n    }), 1000);\n\n    settings.watchByRegex(/^Search\\./, configProvider);\n  }\n\n}\n\nconst searchProviderService = new SearchProviderService();\nMeteor.startup(() => {\n  searchProviderService.start();\n});\nMeteor.methods({\n  /**\n   * Search using the current search provider and check if results are valid for the user. The search result has\n   * the format {messages:{start:0,numFound:1,docs:[{...}]},users:{...},rooms:{...}}\n   * @param text the search text\n   * @param context the context (uid, rid)\n   * @param payload custom payload (e.g. for paging)\n   * @returns {*}\n   */\n  'rocketchatSearch.search'(text, context, payload) {\n    return new Promise((resolve, reject) => {\n      payload = payload !== null ? payload : undefined; // TODO is this cleanup necessary?\n\n      try {\n        if (!searchProviderService.activeProvider) {\n          throw new Error('Provider currently not active');\n        }\n\n        SearchLogger.debug({\n          msg: 'search',\n          text,\n          context,\n          payload\n        });\n        searchProviderService.activeProvider.search(text, context, payload, (error, data) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(validationService.validateSearchResult(data));\n          }\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  },\n\n  'rocketchatSearch.suggest'(text, context, payload) {\n    return new Promise((resolve, reject) => {\n      payload = payload !== null ? payload : undefined; // TODO is this cleanup necessary?\n\n      try {\n        if (!searchProviderService.activeProvider) {\n          throw new Error('Provider currently not active');\n        }\n\n        SearchLogger.debug({\n          msg: 'suggest',\n          text,\n          context,\n          payload\n        });\n        searchProviderService.activeProvider.suggest(text, context, payload, (error, data) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(data);\n          }\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  },\n\n  /**\n   * Get the current provider with key, description, resultTemplate, suggestionItemTemplate and settings (as Map)\n   * @returns {*}\n   */\n  'rocketchatSearch.getProvider'() {\n    if (!searchProviderService.activeProvider) {\n      return undefined;\n    }\n\n    return {\n      key: searchProviderService.activeProvider.key,\n      description: searchProviderService.activeProvider.i18nDescription,\n      icon: searchProviderService.activeProvider.iconName,\n      resultTemplate: searchProviderService.activeProvider.resultTemplate,\n      supportsSuggestions: searchProviderService.activeProvider.supportsSuggestions,\n      suggestionItemTemplate: searchProviderService.activeProvider.suggestionItemTemplate,\n      settings: _.mapObject(searchProviderService.activeProvider.settingsAsMap, setting => setting.value)\n    };\n  }\n\n});","map":{"version":3,"sources":["app/search/server/service/providerService.js"],"names":["_objectSpread","module","link","default","v","export","searchProviderService","Meteor","_","validationService","settings","settingsRegistry","SearchLogger","SearchProviderService","constructor","providers","activeProvider","undefined","use","id","Promise","resolve","reject","Error","reason","key","stopProvider","debug","stop","then","run","e","register","provider","start","addGroup","self","add","type","values","Object","keys","map","i18nLabel","public","filter","length","forEach","section","setting","_options","options","enableQuery","push","_id","value","defaultValue","configProvider","debounce","bindEnvironment","providerId","get","watchByRegex","startup","methods","text","context","payload","msg","search","error","data","validateSearchResult","suggest","description","i18nDescription","icon","iconName","resultTemplate","supportsSuggestions","suggestionItemTemplate","mapObject","settingsAsMap"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { validationService } from './validationService';\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport SearchLogger from '../logger/logger';\n\nclass SearchProviderService {\n\tconstructor() {\n\t\tthis.providers = {};\n\t\tthis.activeProvider = undefined;\n\t}\n\n\t/**\n\t * Stop current provider (if there is one) and start the new\n\t * @param id the id of the provider which should be started\n\t * @param cb a possible callback if provider is active or not (currently not in use)\n\t */\n\tuse(id) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!this.providers[id]) {\n\t\t\t\tthrow new Error(`provider ${id} cannot be found`);\n\t\t\t}\n\n\t\t\tlet reason = 'switch';\n\n\t\t\tif (!this.activeProvider) {\n\t\t\t\treason = 'startup';\n\t\t\t} else if (this.activeProvider.key === this.providers[id].key) {\n\t\t\t\treason = 'update';\n\t\t\t}\n\n\t\t\tconst stopProvider = () =>\n\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\tif (this.activeProvider) {\n\t\t\t\t\t\tSearchLogger.debug(`Stopping provider '${this.activeProvider.key}'`);\n\n\t\t\t\t\t\tthis.activeProvider.stop(resolve, reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tstopProvider().then(() => {\n\t\t\t\tthis.activeProvider = undefined;\n\n\t\t\t\tSearchLogger.debug(`Start provider '${id}'`);\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.providers[id].run(reason).then(() => {\n\t\t\t\t\t\tthis.activeProvider = this.providers[id];\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}, reject);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\t/**\n\t * Registers a search provider on system startup\n\t * @param provider\n\t */\n\tregister(provider) {\n\t\tthis.providers[provider.key] = provider;\n\t}\n\n\t/**\n\t * Starts the service (loads provider settings for admin ui, add lister not setting changes, enable current provider\n\t */\n\tstart() {\n\t\tSearchLogger.debug('Load data for all providers');\n\n\t\tconst { providers } = this;\n\n\t\t// add settings for admininistration\n\t\tsettingsRegistry.addGroup('Search', function () {\n\t\t\tconst self = this;\n\n\t\t\tself.add('Search.Provider', 'defaultProvider', {\n\t\t\t\ttype: 'select',\n\t\t\t\tvalues: Object.keys(providers).map((key) => ({ key, i18nLabel: providers[key].i18nLabel })),\n\t\t\t\tpublic: true,\n\t\t\t\ti18nLabel: 'Search_Provider',\n\t\t\t});\n\n\t\t\tObject.keys(providers)\n\t\t\t\t.filter((key) => providers[key].settings && providers[key].settings.length > 0)\n\t\t\t\t.forEach(function (key) {\n\t\t\t\t\tself.section(providers[key].i18nLabel, function () {\n\t\t\t\t\t\tproviders[key].settings.forEach((setting) => {\n\t\t\t\t\t\t\tconst _options = {\n\t\t\t\t\t\t\t\ttype: setting.type,\n\t\t\t\t\t\t\t\t...setting.options,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t_options.enableQuery = _options.enableQuery || [];\n\n\t\t\t\t\t\t\t_options.enableQuery.push({\n\t\t\t\t\t\t\t\t_id: 'Search.Provider',\n\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.add(setting.id, setting.defaultValue, _options);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\n\t\t// add listener to react on setting changes\n\t\tconst configProvider = _.debounce(\n\t\t\tMeteor.bindEnvironment(() => {\n\t\t\t\tconst providerId = settings.get('Search.Provider');\n\n\t\t\t\tif (providerId) {\n\t\t\t\t\tthis.use(providerId); // TODO do something with success and errors\n\t\t\t\t}\n\t\t\t}),\n\t\t\t1000,\n\t\t);\n\n\t\tsettings.watchByRegex(/^Search\\./, configProvider);\n\t}\n}\n\nexport const searchProviderService = new SearchProviderService();\n\nMeteor.startup(() => {\n\tsearchProviderService.start();\n});\n\nMeteor.methods({\n\t/**\n\t * Search using the current search provider and check if results are valid for the user. The search result has\n\t * the format {messages:{start:0,numFound:1,docs:[{...}]},users:{...},rooms:{...}}\n\t * @param text the search text\n\t * @param context the context (uid, rid)\n\t * @param payload custom payload (e.g. for paging)\n\t * @returns {*}\n\t */\n\t'rocketchatSearch.search'(text, context, payload) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tpayload = payload !== null ? payload : undefined; // TODO is this cleanup necessary?\n\n\t\t\ttry {\n\t\t\t\tif (!searchProviderService.activeProvider) {\n\t\t\t\t\tthrow new Error('Provider currently not active');\n\t\t\t\t}\n\n\t\t\t\tSearchLogger.debug({ msg: 'search', text, context, payload });\n\n\t\t\t\tsearchProviderService.activeProvider.search(text, context, payload, (error, data) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(validationService.validateSearchResult(data));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t},\n\t'rocketchatSearch.suggest'(text, context, payload) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tpayload = payload !== null ? payload : undefined; // TODO is this cleanup necessary?\n\n\t\t\ttry {\n\t\t\t\tif (!searchProviderService.activeProvider) {\n\t\t\t\t\tthrow new Error('Provider currently not active');\n\t\t\t\t}\n\n\t\t\t\tSearchLogger.debug({ msg: 'suggest', text, context, payload });\n\n\t\t\t\tsearchProviderService.activeProvider.suggest(text, context, payload, (error, data) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * Get the current provider with key, description, resultTemplate, suggestionItemTemplate and settings (as Map)\n\t * @returns {*}\n\t */\n\t'rocketchatSearch.getProvider'() {\n\t\tif (!searchProviderService.activeProvider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tkey: searchProviderService.activeProvider.key,\n\t\t\tdescription: searchProviderService.activeProvider.i18nDescription,\n\t\t\ticon: searchProviderService.activeProvider.iconName,\n\t\t\tresultTemplate: searchProviderService.activeProvider.resultTemplate,\n\t\t\tsupportsSuggestions: searchProviderService.activeProvider.supportsSuggestions,\n\t\t\tsuggestionItemTemplate: searchProviderService.activeProvider.suggestionItemTemplate,\n\t\t\tsettings: _.mapObject(searchProviderService.activeProvider.settingsAsMap, (setting) => setting.value),\n\t\t};\n\t},\n});\n"]},"sourceType":"module","hash":"cac0acc08339ac4680e41457e405e4d4375e783c"}

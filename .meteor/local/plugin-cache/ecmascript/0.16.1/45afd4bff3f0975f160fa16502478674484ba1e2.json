{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/parseMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/irc/server/servers/RFC2813/parseMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/parseMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/parseMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/irc/server/servers/RFC2813/parseMessage.js"}},"code":"!function (module1) {\n  /**\n   * This file is part of https://github.com/martynsmith/node-irc\n   * by https://github.com/martynsmith\n   */\n  const replyFor = require('./codes');\n  /**\n   * parseMessage(line, stripColors)\n   *\n   * takes a raw \"line\" from the IRC server and turns it into an object with\n   * useful keys\n   * @param {String} line Raw message from IRC server.\n   * @return {Object} A parsed message object.\n   */\n\n\n  module.exports = function parseMessage(line) {\n    const message = {};\n    let match; // Parse prefix\n\n    match = line.match(/^:([^ ]+) +/);\n\n    if (match) {\n      message.prefix = match[1];\n      line = line.replace(/^:[^ ]+ +/, '');\n      match = message.prefix.match(/^([_a-zA-Z0-9\\~\\[\\]\\\\`^{}|-]*)(!([^@]+)@(.*))?$/);\n\n      if (match) {\n        message.nick = match[1];\n        message.user = match[3];\n        message.host = match[4];\n      } else {\n        message.server = message.prefix;\n      }\n    } // Parse command\n\n\n    match = line.match(/^([^ ]+) */);\n    message.command = match[1];\n    message.rawCommand = match[1];\n    message.commandType = 'normal';\n    line = line.replace(/^[^ ]+ +/, '');\n\n    if (replyFor[message.rawCommand]) {\n      message.command = replyFor[message.rawCommand].name;\n      message.commandType = replyFor[message.rawCommand].type;\n    }\n\n    message.args = [];\n    let middle;\n    let trailing; // Parse parameters\n\n    if (line.search(/^:|\\s+:/) !== -1) {\n      match = line.match(/(.*?)(?:^:|\\s+:)(.*)/);\n      middle = match[1].trimRight();\n      trailing = match[2];\n    } else {\n      middle = line;\n    }\n\n    if (middle.length) {\n      message.args = middle.split(/ +/);\n    }\n\n    if (typeof trailing !== 'undefined' && trailing.length) {\n      message.args.push(trailing);\n    }\n\n    return message;\n  };\n}.call(this, module);","map":{"version":3,"sources":["app/irc/server/servers/RFC2813/parseMessage.js"],"names":["replyFor","require","module","exports","parseMessage","line","message","match","prefix","replace","nick","user","host","server","command","rawCommand","commandType","name","type","args","middle","trailing","search","trimRight","length","split","push"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,QAAMA,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC5C,UAAMC,OAAO,GAAG,EAAhB;AACA,QAAIC,KAAJ,CAF4C,CAI5C;;AACAA,IAAAA,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,aAAX,CAAR;;AACA,QAAIA,KAAJ,EAAW;AACVD,MAAAA,OAAO,CAACE,MAAR,GAAiBD,KAAK,CAAC,CAAD,CAAtB;AACAF,MAAAA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,WAAb,EAA0B,EAA1B,CAAP;AACAF,MAAAA,KAAK,GAAGD,OAAO,CAACE,MAAR,CAAeD,KAAf,CAAqB,iDAArB,CAAR;;AACA,UAAIA,KAAJ,EAAW;AACVD,QAAAA,OAAO,CAACI,IAAR,GAAeH,KAAK,CAAC,CAAD,CAApB;AACAD,QAAAA,OAAO,CAACK,IAAR,GAAeJ,KAAK,CAAC,CAAD,CAApB;AACAD,QAAAA,OAAO,CAACM,IAAR,GAAeL,KAAK,CAAC,CAAD,CAApB;AACA,OAJD,MAIO;AACND,QAAAA,OAAO,CAACO,MAAR,GAAiBP,OAAO,CAACE,MAAzB;AACA;AACD,KAjB2C,CAmB5C;;;AACAD,IAAAA,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,YAAX,CAAR;AACAD,IAAAA,OAAO,CAACQ,OAAR,GAAkBP,KAAK,CAAC,CAAD,CAAvB;AACAD,IAAAA,OAAO,CAACS,UAAR,GAAqBR,KAAK,CAAC,CAAD,CAA1B;AACAD,IAAAA,OAAO,CAACU,WAAR,GAAsB,QAAtB;AACAX,IAAAA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,UAAb,EAAyB,EAAzB,CAAP;;AAEA,QAAIT,QAAQ,CAACM,OAAO,CAACS,UAAT,CAAZ,EAAkC;AACjCT,MAAAA,OAAO,CAACQ,OAAR,GAAkBd,QAAQ,CAACM,OAAO,CAACS,UAAT,CAAR,CAA6BE,IAA/C;AACAX,MAAAA,OAAO,CAACU,WAAR,GAAsBhB,QAAQ,CAACM,OAAO,CAACS,UAAT,CAAR,CAA6BG,IAAnD;AACA;;AAEDZ,IAAAA,OAAO,CAACa,IAAR,GAAe,EAAf;AACA,QAAIC,MAAJ;AACA,QAAIC,QAAJ,CAjC4C,CAmC5C;;AACA,QAAIhB,IAAI,CAACiB,MAAL,CAAY,SAAZ,MAA2B,CAAC,CAAhC,EAAmC;AAClCf,MAAAA,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,sBAAX,CAAR;AACAa,MAAAA,MAAM,GAAGb,KAAK,CAAC,CAAD,CAAL,CAASgB,SAAT,EAAT;AACAF,MAAAA,QAAQ,GAAGd,KAAK,CAAC,CAAD,CAAhB;AACA,KAJD,MAIO;AACNa,MAAAA,MAAM,GAAGf,IAAT;AACA;;AAED,QAAIe,MAAM,CAACI,MAAX,EAAmB;AAClBlB,MAAAA,OAAO,CAACa,IAAR,GAAeC,MAAM,CAACK,KAAP,CAAa,IAAb,CAAf;AACA;;AAED,QAAI,OAAOJ,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACG,MAAhD,EAAwD;AACvDlB,MAAAA,OAAO,CAACa,IAAR,CAAaO,IAAb,CAAkBL,QAAlB;AACA;;AAED,WAAOf,OAAP;AACA,GArDD","sourcesContent":["/**\n * This file is part of https://github.com/martynsmith/node-irc\n * by https://github.com/martynsmith\n */\n\nconst replyFor = require('./codes');\n\n/**\n * parseMessage(line, stripColors)\n *\n * takes a raw \"line\" from the IRC server and turns it into an object with\n * useful keys\n * @param {String} line Raw message from IRC server.\n * @return {Object} A parsed message object.\n */\nmodule.exports = function parseMessage(line) {\n\tconst message = {};\n\tlet match;\n\n\t// Parse prefix\n\tmatch = line.match(/^:([^ ]+) +/);\n\tif (match) {\n\t\tmessage.prefix = match[1];\n\t\tline = line.replace(/^:[^ ]+ +/, '');\n\t\tmatch = message.prefix.match(/^([_a-zA-Z0-9\\~\\[\\]\\\\`^{}|-]*)(!([^@]+)@(.*))?$/);\n\t\tif (match) {\n\t\t\tmessage.nick = match[1];\n\t\t\tmessage.user = match[3];\n\t\t\tmessage.host = match[4];\n\t\t} else {\n\t\t\tmessage.server = message.prefix;\n\t\t}\n\t}\n\n\t// Parse command\n\tmatch = line.match(/^([^ ]+) */);\n\tmessage.command = match[1];\n\tmessage.rawCommand = match[1];\n\tmessage.commandType = 'normal';\n\tline = line.replace(/^[^ ]+ +/, '');\n\n\tif (replyFor[message.rawCommand]) {\n\t\tmessage.command = replyFor[message.rawCommand].name;\n\t\tmessage.commandType = replyFor[message.rawCommand].type;\n\t}\n\n\tmessage.args = [];\n\tlet middle;\n\tlet trailing;\n\n\t// Parse parameters\n\tif (line.search(/^:|\\s+:/) !== -1) {\n\t\tmatch = line.match(/(.*?)(?:^:|\\s+:)(.*)/);\n\t\tmiddle = match[1].trimRight();\n\t\ttrailing = match[2];\n\t} else {\n\t\tmiddle = line;\n\t}\n\n\tif (middle.length) {\n\t\tmessage.args = middle.split(/ +/);\n\t}\n\n\tif (typeof trailing !== 'undefined' && trailing.length) {\n\t\tmessage.args.push(trailing);\n\t}\n\n\treturn message;\n};\n"]},"sourceType":"module","hash":"45afd4bff3f0975f160fa16502478674484ba1e2"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypeConfig.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/utils/lib/RoomTypeConfig.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypeConfig.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypeConfig.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/lib/RoomTypeConfig.js"}},"code":"module.export({\n  RoomSettingsEnum: () => RoomSettingsEnum,\n  RoomMemberActions: () => RoomMemberActions,\n  UiTextContext: () => UiTextContext,\n  RoomTypeRouteConfig: () => RoomTypeRouteConfig,\n  RoomTypeConfig: () => RoomTypeConfig\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet Users;\nlet settings;\n\nif (Meteor.isServer) {\n  ({\n    settings\n  } = require('../../settings/server'));\n  Users = require('../../models/server/models/Users').default;\n} else {\n  ({\n    settings\n  } = require('../../settings/client'));\n}\n\nconst RoomSettingsEnum = {\n  TYPE: 'type',\n  NAME: 'roomName',\n  TOPIC: 'roomTopic',\n  ANNOUNCEMENT: 'roomAnnouncement',\n  DESCRIPTION: 'roomDescription',\n  READ_ONLY: 'readOnly',\n  REACT_WHEN_READ_ONLY: 'reactWhenReadOnly',\n  ARCHIVE_OR_UNARCHIVE: 'archiveOrUnarchive',\n  JOIN_CODE: 'joinCode',\n  BROADCAST: 'broadcast',\n  SYSTEM_MESSAGES: 'systemMessages',\n  E2E: 'encrypted'\n};\nconst RoomMemberActions = {\n  ARCHIVE: 'archive',\n  IGNORE: 'ignore',\n  BLOCK: 'block',\n  MUTE: 'mute',\n  SET_AS_OWNER: 'setAsOwner',\n  SET_AS_LEADER: 'setAsLeader',\n  SET_AS_MODERATOR: 'setAsModerator',\n  LEAVE: 'leave',\n  REMOVE_USER: 'removeUser',\n  JOIN: 'join',\n  INVITE: 'invite'\n};\nconst UiTextContext = {\n  CLOSE_WARNING: 'closeWarning',\n  HIDE_WARNING: 'hideWarning',\n  LEAVE_WARNING: 'leaveWarning',\n  NO_ROOMS_SUBSCRIBED: 'noRoomsSubscribed'\n};\n\nclass RoomTypeRouteConfig {\n  constructor(_ref) {\n    let {\n      name,\n      path\n    } = _ref;\n\n    if (typeof name !== 'undefined' && (typeof name !== 'string' || name.length === 0)) {\n      throw new Error('The name must be a string.');\n    }\n\n    if (typeof path !== 'undefined' && (typeof path !== 'string' || path.length === 0)) {\n      throw new Error('The path must be a string.');\n    }\n\n    this._name = name;\n    this._path = path;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n}\n\nclass RoomTypeConfig {\n  constructor(_ref2) {\n    let {\n      identifier = Random.id(),\n      order,\n      icon,\n      header,\n      label,\n      route\n    } = _ref2;\n\n    if (typeof identifier !== 'string' || identifier.length === 0) {\n      throw new Error('The identifier must be a string.');\n    }\n\n    if (typeof order !== 'number') {\n      throw new Error('The order must be a number.');\n    }\n\n    if (typeof icon !== 'undefined' && (typeof icon !== 'string' || icon.length === 0)) {\n      throw new Error('The icon must be a string.');\n    }\n\n    if (typeof header !== 'undefined' && (typeof header !== 'string' || header.length === 0)) {\n      throw new Error('The header must be a string.');\n    }\n\n    if (typeof label !== 'undefined' && (typeof label !== 'string' || label.length === 0)) {\n      throw new Error('The label must be a string.');\n    }\n\n    if (typeof route !== 'undefined' && !(route instanceof RoomTypeRouteConfig)) {\n      throw new Error('Room\\'s route is not a valid route configuration. Must be an instance of \"RoomTypeRouteConfig\".');\n    }\n\n    this._identifier = identifier;\n    this._order = order;\n    this._icon = icon;\n    this._header = header;\n    this._label = label;\n    this._route = route;\n  }\n  /**\n   * The room type's internal identifier.\n   */\n\n\n  get identifier() {\n    return this._identifier;\n  }\n  /**\n   * The order of this room type for the display.\n   */\n\n\n  get order() {\n    return this._order;\n  }\n  /**\n   * Sets the order of this room type for the display.\n   *\n   * @param {number} order the number value for the order\n   */\n\n\n  set order(order) {\n    if (typeof order !== 'number') {\n      throw new Error('The order must be a number.');\n    }\n\n    this._order = order;\n  }\n  /**\n   * The icon class, css, to use as the visual aid.\n   */\n\n\n  get icon() {\n    return this._icon;\n  }\n  /**\n   * The header name of this type.\n   */\n\n\n  get header() {\n    return this._header;\n  }\n  /**\n   * The i18n label for this room type.\n   */\n\n\n  get label() {\n    return this._label;\n  }\n  /**\n   * The route config for this room type.\n   */\n\n\n  get route() {\n    return this._route;\n  }\n\n  allowRoomSettingChange() {\n    return true;\n  }\n\n  allowMemberAction() {\n    return false;\n  }\n  /**\n   * Return a room's name\n   *\n   * @abstract\n   * @return {string} Room's name according to it's type\n   */\n\n\n  roomName() {\n    return '';\n  }\n\n  canBeCreated(hasPermission) {\n    if (!hasPermission && typeof hasPermission !== 'function') {\n      throw new Error('You MUST provide the \"hasPermission\" to canBeCreated function');\n    }\n\n    return Meteor.isServer ? hasPermission(Meteor.userId(), \"create-\".concat(this._identifier)) : hasPermission([\"create-\".concat(this._identifier)]);\n  }\n\n  canBeDeleted(hasPermission, room) {\n    if (!hasPermission && typeof hasPermission !== 'function') {\n      throw new Error('You MUST provide the \"hasPermission\" to canBeDeleted function');\n    }\n\n    return Meteor.isServer ? hasPermission(Meteor.userId(), \"delete-\".concat(room.t), room._id) : hasPermission(\"delete-\".concat(room.t), room._id);\n  }\n\n  supportMembersList() {\n    return true;\n  }\n\n  isGroupChat() {\n    return false;\n  }\n\n  canAddUser() {\n    return false;\n  }\n\n  userDetailShowAll() {\n    return true;\n  }\n\n  userDetailShowAdmin() {\n    return true;\n  }\n\n  preventRenaming() {\n    return false;\n  }\n\n  includeInRoomSearch() {\n    return false;\n  }\n\n  enableMembersListProfile() {\n    return false;\n  }\n  /**\n   * Returns a text which can be used in generic UIs.\n   * @param context The role of the text in the UI-Element\n   * @return {string} A text or a translation key - the consumers of this method will pass the\n   * returned value to an internationalization library\n   */\n\n\n  getUiText() {\n    return '';\n  }\n  /**\n   * Returns the full object of message sender\n   * @param {string} senderId Sender's _id\n   * @return {object} Sender's object from db\n   */\n\n\n  getMsgSender(senderId) {\n    if (Meteor.isServer && Users) {\n      return Users.findOneById(senderId);\n    }\n\n    return {};\n  }\n  /**\n   * Returns details to use on notifications\n   *\n   * @param {object} room\n   * @param {object} user\n   * @param {string} notificationMessage\n   * @return {object} Notification details\n   */\n\n\n  getNotificationDetails(room, user, notificationMessage) {\n    if (!Meteor.isServer) {\n      return {};\n    }\n\n    const title = \"#\".concat(this.roomName(room));\n    const text = \"\".concat(settings.get('UI_Use_Real_Name') ? user.name : user.username, \": \").concat(notificationMessage);\n    return {\n      title,\n      text\n    };\n  }\n  /**\n   * Check if there is an user with the same id and loginToken\n   * @param {object} allowData\n   * @return {object} User's object from db\n   */\n\n\n  canAccessUploadedFile() {\n    return false;\n  }\n\n  getReadReceiptsExtraData() {\n    return {};\n  }\n\n  getAvatarPath() {\n    return '';\n  }\n\n  openCustomProfileTab() {\n    return false;\n  }\n\n  getDiscussionType() {\n    return 'p';\n  }\n\n}","map":{"version":3,"sources":["app/utils/lib/RoomTypeConfig.js"],"names":["module","export","RoomSettingsEnum","RoomMemberActions","UiTextContext","RoomTypeRouteConfig","RoomTypeConfig","Meteor","link","v","Random","Users","settings","isServer","require","default","TYPE","NAME","TOPIC","ANNOUNCEMENT","DESCRIPTION","READ_ONLY","REACT_WHEN_READ_ONLY","ARCHIVE_OR_UNARCHIVE","JOIN_CODE","BROADCAST","SYSTEM_MESSAGES","E2E","ARCHIVE","IGNORE","BLOCK","MUTE","SET_AS_OWNER","SET_AS_LEADER","SET_AS_MODERATOR","LEAVE","REMOVE_USER","JOIN","INVITE","CLOSE_WARNING","HIDE_WARNING","LEAVE_WARNING","NO_ROOMS_SUBSCRIBED","constructor","name","path","length","Error","_name","_path","identifier","id","order","icon","header","label","route","_identifier","_order","_icon","_header","_label","_route","allowRoomSettingChange","allowMemberAction","roomName","canBeCreated","hasPermission","userId","canBeDeleted","room","t","_id","supportMembersList","isGroupChat","canAddUser","userDetailShowAll","userDetailShowAdmin","preventRenaming","includeInRoomSearch","enableMembersListProfile","getUiText","getMsgSender","senderId","findOneById","getNotificationDetails","user","notificationMessage","title","text","get","username","canAccessUploadedFile","getReadReceiptsExtraData","getAvatarPath","openCustomProfileTab","getDiscussionType"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nlet Users;\nlet settings;\nif (Meteor.isServer) {\n\t({ settings } = require('../../settings/server'));\n\tUsers = require('../../models/server/models/Users').default;\n} else {\n\t({ settings } = require('../../settings/client'));\n}\n\nexport const RoomSettingsEnum = {\n\tTYPE: 'type',\n\tNAME: 'roomName',\n\tTOPIC: 'roomTopic',\n\tANNOUNCEMENT: 'roomAnnouncement',\n\tDESCRIPTION: 'roomDescription',\n\tREAD_ONLY: 'readOnly',\n\tREACT_WHEN_READ_ONLY: 'reactWhenReadOnly',\n\tARCHIVE_OR_UNARCHIVE: 'archiveOrUnarchive',\n\tJOIN_CODE: 'joinCode',\n\tBROADCAST: 'broadcast',\n\tSYSTEM_MESSAGES: 'systemMessages',\n\tE2E: 'encrypted',\n};\n\nexport const RoomMemberActions = {\n\tARCHIVE: 'archive',\n\tIGNORE: 'ignore',\n\tBLOCK: 'block',\n\tMUTE: 'mute',\n\tSET_AS_OWNER: 'setAsOwner',\n\tSET_AS_LEADER: 'setAsLeader',\n\tSET_AS_MODERATOR: 'setAsModerator',\n\tLEAVE: 'leave',\n\tREMOVE_USER: 'removeUser',\n\tJOIN: 'join',\n\tINVITE: 'invite',\n};\n\nexport const UiTextContext = {\n\tCLOSE_WARNING: 'closeWarning',\n\tHIDE_WARNING: 'hideWarning',\n\tLEAVE_WARNING: 'leaveWarning',\n\tNO_ROOMS_SUBSCRIBED: 'noRoomsSubscribed',\n};\n\nexport class RoomTypeRouteConfig {\n\tconstructor({ name, path }) {\n\t\tif (typeof name !== 'undefined' && (typeof name !== 'string' || name.length === 0)) {\n\t\t\tthrow new Error('The name must be a string.');\n\t\t}\n\n\t\tif (typeof path !== 'undefined' && (typeof path !== 'string' || path.length === 0)) {\n\t\t\tthrow new Error('The path must be a string.');\n\t\t}\n\n\t\tthis._name = name;\n\t\tthis._path = path;\n\t}\n\n\tget name() {\n\t\treturn this._name;\n\t}\n\n\tget path() {\n\t\treturn this._path;\n\t}\n}\n\nexport class RoomTypeConfig {\n\tconstructor({ identifier = Random.id(), order, icon, header, label, route }) {\n\t\tif (typeof identifier !== 'string' || identifier.length === 0) {\n\t\t\tthrow new Error('The identifier must be a string.');\n\t\t}\n\n\t\tif (typeof order !== 'number') {\n\t\t\tthrow new Error('The order must be a number.');\n\t\t}\n\n\t\tif (typeof icon !== 'undefined' && (typeof icon !== 'string' || icon.length === 0)) {\n\t\t\tthrow new Error('The icon must be a string.');\n\t\t}\n\n\t\tif (typeof header !== 'undefined' && (typeof header !== 'string' || header.length === 0)) {\n\t\t\tthrow new Error('The header must be a string.');\n\t\t}\n\n\t\tif (typeof label !== 'undefined' && (typeof label !== 'string' || label.length === 0)) {\n\t\t\tthrow new Error('The label must be a string.');\n\t\t}\n\n\t\tif (typeof route !== 'undefined' && !(route instanceof RoomTypeRouteConfig)) {\n\t\t\tthrow new Error('Room\\'s route is not a valid route configuration. Must be an instance of \"RoomTypeRouteConfig\".');\n\t\t}\n\n\t\tthis._identifier = identifier;\n\t\tthis._order = order;\n\t\tthis._icon = icon;\n\t\tthis._header = header;\n\t\tthis._label = label;\n\t\tthis._route = route;\n\t}\n\n\t/**\n\t * The room type's internal identifier.\n\t */\n\tget identifier() {\n\t\treturn this._identifier;\n\t}\n\n\t/**\n\t * The order of this room type for the display.\n\t */\n\tget order() {\n\t\treturn this._order;\n\t}\n\n\t/**\n\t * Sets the order of this room type for the display.\n\t *\n\t * @param {number} order the number value for the order\n\t */\n\tset order(order) {\n\t\tif (typeof order !== 'number') {\n\t\t\tthrow new Error('The order must be a number.');\n\t\t}\n\n\t\tthis._order = order;\n\t}\n\n\t/**\n\t * The icon class, css, to use as the visual aid.\n\t */\n\tget icon() {\n\t\treturn this._icon;\n\t}\n\n\t/**\n\t * The header name of this type.\n\t */\n\tget header() {\n\t\treturn this._header;\n\t}\n\n\t/**\n\t * The i18n label for this room type.\n\t */\n\tget label() {\n\t\treturn this._label;\n\t}\n\n\t/**\n\t * The route config for this room type.\n\t */\n\tget route() {\n\t\treturn this._route;\n\t}\n\n\tallowRoomSettingChange(/* room, setting */) {\n\t\treturn true;\n\t}\n\n\tallowMemberAction(/* room, action */) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Return a room's name\n\t *\n\t * @abstract\n\t * @return {string} Room's name according to it's type\n\t */\n\troomName(/* room */) {\n\t\treturn '';\n\t}\n\n\tcanBeCreated(hasPermission) {\n\t\tif (!hasPermission && typeof hasPermission !== 'function') {\n\t\t\tthrow new Error('You MUST provide the \"hasPermission\" to canBeCreated function');\n\t\t}\n\t\treturn Meteor.isServer ? hasPermission(Meteor.userId(), `create-${this._identifier}`) : hasPermission([`create-${this._identifier}`]);\n\t}\n\n\tcanBeDeleted(hasPermission, room) {\n\t\tif (!hasPermission && typeof hasPermission !== 'function') {\n\t\t\tthrow new Error('You MUST provide the \"hasPermission\" to canBeDeleted function');\n\t\t}\n\t\treturn Meteor.isServer ? hasPermission(Meteor.userId(), `delete-${room.t}`, room._id) : hasPermission(`delete-${room.t}`, room._id);\n\t}\n\n\tsupportMembersList(/* room */) {\n\t\treturn true;\n\t}\n\n\tisGroupChat() {\n\t\treturn false;\n\t}\n\n\tcanAddUser(/* userId, room */) {\n\t\treturn false;\n\t}\n\n\tuserDetailShowAll(/* room */) {\n\t\treturn true;\n\t}\n\n\tuserDetailShowAdmin(/* room */) {\n\t\treturn true;\n\t}\n\n\tpreventRenaming(/* room */) {\n\t\treturn false;\n\t}\n\n\tincludeInRoomSearch() {\n\t\treturn false;\n\t}\n\n\tenableMembersListProfile() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a text which can be used in generic UIs.\n\t * @param context The role of the text in the UI-Element\n\t * @return {string} A text or a translation key - the consumers of this method will pass the\n\t * returned value to an internationalization library\n\t */\n\tgetUiText(/* context */) {\n\t\treturn '';\n\t}\n\n\t/**\n\t * Returns the full object of message sender\n\t * @param {string} senderId Sender's _id\n\t * @return {object} Sender's object from db\n\t */\n\tgetMsgSender(senderId) {\n\t\tif (Meteor.isServer && Users) {\n\t\t\treturn Users.findOneById(senderId);\n\t\t}\n\t\treturn {};\n\t}\n\n\t/**\n\t * Returns details to use on notifications\n\t *\n\t * @param {object} room\n\t * @param {object} user\n\t * @param {string} notificationMessage\n\t * @return {object} Notification details\n\t */\n\tgetNotificationDetails(room, user, notificationMessage) {\n\t\tif (!Meteor.isServer) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst title = `#${this.roomName(room)}`;\n\n\t\tconst text = `${settings.get('UI_Use_Real_Name') ? user.name : user.username}: ${notificationMessage}`;\n\n\t\treturn { title, text };\n\t}\n\n\t/**\n\t * Check if there is an user with the same id and loginToken\n\t * @param {object} allowData\n\t * @return {object} User's object from db\n\t */\n\tcanAccessUploadedFile(/* accessData */) {\n\t\treturn false;\n\t}\n\n\tgetReadReceiptsExtraData(/* message */) {\n\t\treturn {};\n\t}\n\n\tgetAvatarPath(/* roomData */) {\n\t\treturn '';\n\t}\n\n\topenCustomProfileTab() {\n\t\treturn false;\n\t}\n\n\tgetDiscussionType() {\n\t\treturn 'p';\n\t}\n}\n"]},"sourceType":"module","hash":"6feb6a1137576da203215fc5d2ac57e1a84bfb0c"}

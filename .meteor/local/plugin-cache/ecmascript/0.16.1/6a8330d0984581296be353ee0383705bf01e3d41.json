{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/Settings.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/models/Settings.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/Settings.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/Settings.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/models/Settings.js"}},"code":"const _excluded = [\"updatedAfter\"];\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\nmodule.export({\n  Settings: () => Settings\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Base;\nmodule.link(\"./_Base\", {\n  Base(v) {\n    Base = v;\n  }\n\n}, 1);\n\nclass Settings extends Base {\n  constructor() {\n    super(...arguments);\n    this.tryEnsureIndex({\n      blocked: 1\n    }, {\n      sparse: 1\n    });\n    this.tryEnsureIndex({\n      hidden: 1\n    }, {\n      sparse: 1\n    });\n    const collectionObj = this.model.rawCollection();\n    this.findAndModify = Meteor.wrapAsync(collectionObj.findAndModify, collectionObj);\n  } // FIND\n\n\n  findById(_id) {\n    const query = {\n      _id\n    };\n    return this.find(query);\n  }\n\n  findOneNotHiddenById(_id) {\n    const query = {\n      _id,\n      hidden: {\n        $ne: true\n      }\n    };\n    return this.findOne(query);\n  }\n\n  findByIds() {\n    let _id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _id = [].concat(_id);\n    const query = {\n      _id: {\n        $in: _id\n      }\n    };\n    return this.find(query);\n  }\n\n  findByRole(role, options) {\n    const query = {\n      role\n    };\n    return this.find(query, options);\n  }\n\n  findPublic(options) {\n    const query = {\n      public: true\n    };\n    return this.find(query, options);\n  }\n\n  findNotHiddenPublic() {\n    let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    const filter = {\n      hidden: {\n        $ne: true\n      },\n      public: true\n    };\n\n    if (ids.length > 0) {\n      filter._id = {\n        $in: ids\n      };\n    }\n\n    return this.find(filter, {\n      fields: {\n        _id: 1,\n        value: 1,\n        editor: 1,\n        enterprise: 1,\n        invalidValue: 1,\n        modules: 1,\n        requiredOnWizard: 1\n      }\n    });\n  }\n\n  findNotHiddenPublicUpdatedAfter(updatedAt) {\n    const filter = {\n      hidden: {\n        $ne: true\n      },\n      public: true,\n      _updatedAt: {\n        $gt: updatedAt\n      }\n    };\n    return this.find(filter, {\n      fields: {\n        _id: 1,\n        value: 1,\n        editor: 1,\n        enterprise: 1,\n        invalidValue: 1,\n        modules: 1,\n        requiredOnWizard: 1\n      }\n    });\n  }\n\n  findNotHiddenPrivate() {\n    return this.find({\n      hidden: {\n        $ne: true\n      },\n      public: {\n        $ne: true\n      }\n    });\n  }\n\n  findNotHidden() {\n    let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    let {\n      updatedAfter\n    } = _ref,\n        options = _objectWithoutProperties(_ref, _excluded);\n\n    const query = {\n      hidden: {\n        $ne: true\n      }\n    };\n\n    if (updatedAfter) {\n      query._updatedAt = {\n        $gt: updatedAfter\n      };\n    }\n\n    return this.find(query, options);\n  }\n\n  findNotHiddenUpdatedAfter(updatedAt) {\n    return this.find({\n      hidden: {\n        $ne: true\n      },\n      _updatedAt: {\n        $gt: updatedAt\n      }\n    });\n  }\n\n  findSetupWizardSettings() {\n    return this.find({\n      wizard: {\n        $exists: true,\n        $ne: null\n      }\n    });\n  }\n\n  findEnterpriseSettings() {\n    return this.find({\n      enterprise: true\n    });\n  } // UPDATE\n\n\n  updateValueById(_id, value) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      value: {\n        $ne: value\n      },\n      _id\n    };\n    const update = {\n      $set: {\n        value\n      }\n    };\n    return this.update(query, update);\n  }\n\n  updateValueAndEditorById(_id, value, editor) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      value: {\n        $ne: value\n      },\n      _id\n    };\n    const update = {\n      $set: {\n        value,\n        editor\n      }\n    };\n    return this.update(query, update);\n  }\n\n  updateValueNotHiddenById(_id, value) {\n    const query = {\n      _id,\n      hidden: {\n        $ne: true\n      },\n      blocked: {\n        $ne: true\n      }\n    };\n    const update = {\n      $set: {\n        value\n      }\n    };\n    return this.update(query, update);\n  }\n\n  updateOptionsById(_id, options) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      _id\n    };\n    const update = {\n      $set: options\n    };\n    return this.update(query, update);\n  }\n\n  addOptionValueById(_id) {\n    let option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      _id\n    };\n    const {\n      key,\n      i18nLabel\n    } = option;\n    const update = {\n      $addToSet: {\n        values: {\n          key,\n          i18nLabel\n        }\n      }\n    };\n    return this.update(query, update);\n  }\n\n  removeOptionValueByIdAndKey(_id, key) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      _id\n    };\n    const update = {\n      $pull: {\n        values: {\n          key\n        }\n      }\n    };\n    return this.update(query, update);\n  } // INSERT\n\n\n  createWithIdAndValue(_id, value) {\n    const record = {\n      _id,\n      value,\n      _createdAt: new Date()\n    };\n    return this.insert(record);\n  } // REMOVE\n\n\n  removeById(_id) {\n    const query = {\n      blocked: {\n        $ne: true\n      },\n      _id\n    };\n    return this.remove(query);\n  } // RENAME SETTING\n\n\n  renameSetting(oldId, newId) {\n    const oldSetting = this.findById(oldId).fetch()[0];\n\n    if (oldSetting) {\n      this.removeById(oldSetting._id); // there has been some problem with upsert() when changing the complete doc, so decide explicitly for insert or update\n\n      let newSetting = this.findById(newId).fetch()[0];\n\n      if (newSetting) {\n        this.updateValueById(newId, oldSetting.value);\n      } else {\n        newSetting = oldSetting;\n        newSetting._id = newId;\n        delete newSetting.$loki;\n        this.insert(newSetting);\n      }\n    }\n  }\n\n  insert(record) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return super.insert(_objectSpread({\n      createdAt: new Date()\n    }, record), ...args);\n  }\n\n}\n\nmodule.exportDefault(new Settings('settings', true));","map":{"version":3,"sources":["app/models/server/models/Settings.js"],"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","export","Settings","Meteor","Base","constructor","tryEnsureIndex","blocked","sparse","hidden","collectionObj","model","rawCollection","findAndModify","wrapAsync","findById","_id","query","find","findOneNotHiddenById","$ne","findOne","findByIds","concat","$in","findByRole","role","options","findPublic","public","findNotHiddenPublic","ids","filter","length","fields","value","editor","enterprise","invalidValue","modules","requiredOnWizard","findNotHiddenPublicUpdatedAfter","updatedAt","_updatedAt","$gt","findNotHiddenPrivate","findNotHidden","updatedAfter","findNotHiddenUpdatedAfter","findSetupWizardSettings","wizard","$exists","findEnterpriseSettings","updateValueById","update","$set","updateValueAndEditorById","updateValueNotHiddenById","updateOptionsById","addOptionValueById","option","key","i18nLabel","$addToSet","values","removeOptionValueByIdAndKey","$pull","createWithIdAndValue","record","_createdAt","Date","insert","removeById","remove","renameSetting","oldId","newId","oldSetting","fetch","newSetting","$loki","args","createdAt","exportDefault"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Base } from './_Base';\n\nexport class Settings extends Base {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.tryEnsureIndex({ blocked: 1 }, { sparse: 1 });\n\t\tthis.tryEnsureIndex({ hidden: 1 }, { sparse: 1 });\n\n\t\tconst collectionObj = this.model.rawCollection();\n\t\tthis.findAndModify = Meteor.wrapAsync(collectionObj.findAndModify, collectionObj);\n\t}\n\n\t// FIND\n\tfindById(_id) {\n\t\tconst query = { _id };\n\n\t\treturn this.find(query);\n\t}\n\n\tfindOneNotHiddenById(_id) {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n\n\tfindByIds(_id = []) {\n\t\t_id = [].concat(_id);\n\n\t\tconst query = {\n\t\t\t_id: {\n\t\t\t\t$in: _id,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query);\n\t}\n\n\tfindByRole(role, options) {\n\t\tconst query = { role };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindPublic(options) {\n\t\tconst query = { public: true };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindNotHiddenPublic(ids = []) {\n\t\tconst filter = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t};\n\n\t\tif (ids.length > 0) {\n\t\t\tfilter._id = { $in: ids };\n\t\t}\n\n\t\treturn this.find(filter, {\n\t\t\tfields: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindNotHiddenPublicUpdatedAfter(updatedAt) {\n\t\tconst filter = {\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: true,\n\t\t\t_updatedAt: {\n\t\t\t\t$gt: updatedAt,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(filter, {\n\t\t\tfields: {\n\t\t\t\t_id: 1,\n\t\t\t\tvalue: 1,\n\t\t\t\teditor: 1,\n\t\t\t\tenterprise: 1,\n\t\t\t\tinvalidValue: 1,\n\t\t\t\tmodules: 1,\n\t\t\t\trequiredOnWizard: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindNotHiddenPrivate() {\n\t\treturn this.find({\n\t\t\thidden: { $ne: true },\n\t\t\tpublic: { $ne: true },\n\t\t});\n\t}\n\n\tfindNotHidden({ updatedAfter, ...options } = {}) {\n\t\tconst query = {\n\t\t\thidden: { $ne: true },\n\t\t};\n\n\t\tif (updatedAfter) {\n\t\t\tquery._updatedAt = { $gt: updatedAfter };\n\t\t}\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindNotHiddenUpdatedAfter(updatedAt) {\n\t\treturn this.find({\n\t\t\thidden: { $ne: true },\n\t\t\t_updatedAt: {\n\t\t\t\t$gt: updatedAt,\n\t\t\t},\n\t\t});\n\t}\n\n\tfindSetupWizardSettings() {\n\t\treturn this.find({ wizard: { $exists: true, $ne: null } });\n\t}\n\n\tfindEnterpriseSettings() {\n\t\treturn this.find({ enterprise: true });\n\t}\n\n\t// UPDATE\n\tupdateValueById(_id, value) {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateValueAndEditorById(_id, value, editor) {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\tvalue: { $ne: value },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t\teditor,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateValueNotHiddenById(_id, value) {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\thidden: { $ne: true },\n\t\t\tblocked: { $ne: true },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateOptionsById(_id, options) {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = { $set: options };\n\n\t\treturn this.update(query, update);\n\t}\n\n\taddOptionValueById(_id, option = {}) {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst { key, i18nLabel } = option;\n\t\tconst update = {\n\t\t\t$addToSet: {\n\t\t\t\tvalues: {\n\t\t\t\t\tkey,\n\t\t\t\t\ti18nLabel,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\tremoveOptionValueByIdAndKey(_id, key) {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$pull: {\n\t\t\t\tvalues: { key },\n\t\t\t},\n\t\t};\n\n\t\treturn this.update(query, update);\n\t}\n\n\t// INSERT\n\tcreateWithIdAndValue(_id, value) {\n\t\tconst record = {\n\t\t\t_id,\n\t\t\tvalue,\n\t\t\t_createdAt: new Date(),\n\t\t};\n\n\t\treturn this.insert(record);\n\t}\n\n\t// REMOVE\n\tremoveById(_id) {\n\t\tconst query = {\n\t\t\tblocked: { $ne: true },\n\t\t\t_id,\n\t\t};\n\n\t\treturn this.remove(query);\n\t}\n\n\t// RENAME SETTING\n\trenameSetting(oldId, newId) {\n\t\tconst oldSetting = this.findById(oldId).fetch()[0];\n\t\tif (oldSetting) {\n\t\t\tthis.removeById(oldSetting._id);\n\t\t\t// there has been some problem with upsert() when changing the complete doc, so decide explicitly for insert or update\n\t\t\tlet newSetting = this.findById(newId).fetch()[0];\n\t\t\tif (newSetting) {\n\t\t\t\tthis.updateValueById(newId, oldSetting.value);\n\t\t\t} else {\n\t\t\t\tnewSetting = oldSetting;\n\t\t\t\tnewSetting._id = newId;\n\t\t\t\tdelete newSetting.$loki;\n\t\t\t\tthis.insert(newSetting);\n\t\t\t}\n\t\t}\n\t}\n\n\tinsert(record, ...args) {\n\t\treturn super.insert({ createdAt: new Date(), ...record }, ...args);\n\t}\n}\n\nexport default new Settings('settings', true);\n"]},"sourceType":"module","hash":"6a8330d0984581296be353ee0383705bf01e3d41"}

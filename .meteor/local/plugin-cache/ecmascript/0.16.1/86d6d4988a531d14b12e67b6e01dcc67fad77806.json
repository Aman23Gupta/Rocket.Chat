{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/checkUsernameAvailability.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/checkUsernameAvailability.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/checkUsernameAvailability.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/checkUsernameAvailability.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/checkUsernameAvailability.js"}},"code":"module.export({\n  checkUsernameAvailability: () => checkUsernameAvailability\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 2);\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet Team;\nmodule.link(\"../../../../server/sdk\", {\n  Team(v) {\n    Team = v;\n  }\n\n}, 5);\nlet validateName;\nmodule.link(\"./validateName\", {\n  validateName(v) {\n    validateName = v;\n  }\n\n}, 6);\nlet usernameBlackList = [];\n\nconst toRegExp = username => new RegExp(\"^\".concat(escapeRegExp(username).trim(), \"$\"), 'i');\n\nsettings.watch('Accounts_BlockedUsernameList', value => {\n  usernameBlackList = ['all', 'here'].concat(value.split(',')).map(toRegExp);\n});\n\nconst usernameIsBlocked = (username, usernameBlackList) => usernameBlackList.length && usernameBlackList.some(restrictedUsername => restrictedUsername.test(s.trim(escapeRegExp(username))));\n\nconst checkUsernameAvailability = function (username) {\n  if (usernameIsBlocked(username, usernameBlackList) || !validateName(username)) {\n    throw new Meteor.Error('error-blocked-username', \"\".concat(_.escape(username), \" is blocked and can't be used!\"), {\n      method: 'checkUsernameAvailability',\n      field: username\n    });\n  } // Make sure no users are using this username\n\n\n  const existingUser = Meteor.users.findOne({\n    username: toRegExp(username)\n  }, {\n    fields: {\n      _id: 1\n    }\n  });\n\n  if (existingUser) {\n    return false;\n  } // Make sure no teams are using this username\n\n\n  const existingTeam = Promise.await(Team.getOneByName(toRegExp(username), {\n    projection: {\n      _id: 1\n    }\n  }));\n\n  if (existingTeam) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["app/lib/server/functions/checkUsernameAvailability.js"],"names":["module","export","checkUsernameAvailability","Meteor","link","v","s","default","_","escapeRegExp","settings","Team","validateName","usernameBlackList","toRegExp","username","RegExp","trim","watch","value","concat","split","map","usernameIsBlocked","length","some","restrictedUsername","test","Error","escape","method","field","existingUser","users","findOne","fields","_id","existingTeam","Promise","await","getOneByName","projection"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport s from 'underscore.string';\nimport _ from 'underscore';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { settings } from '../../../settings/server';\nimport { Team } from '../../../../server/sdk';\nimport { validateName } from './validateName';\n\nlet usernameBlackList = [];\n\nconst toRegExp = (username) => new RegExp(`^${escapeRegExp(username).trim()}$`, 'i');\n\nsettings.watch('Accounts_BlockedUsernameList', (value) => {\n\tusernameBlackList = ['all', 'here'].concat(value.split(',')).map(toRegExp);\n});\n\nconst usernameIsBlocked = (username, usernameBlackList) =>\n\tusernameBlackList.length && usernameBlackList.some((restrictedUsername) => restrictedUsername.test(s.trim(escapeRegExp(username))));\n\nexport const checkUsernameAvailability = function (username) {\n\tif (usernameIsBlocked(username, usernameBlackList) || !validateName(username)) {\n\t\tthrow new Meteor.Error('error-blocked-username', `${_.escape(username)} is blocked and can't be used!`, {\n\t\t\tmethod: 'checkUsernameAvailability',\n\t\t\tfield: username,\n\t\t});\n\t}\n\n\t// Make sure no users are using this username\n\tconst existingUser = Meteor.users.findOne(\n\t\t{\n\t\t\tusername: toRegExp(username),\n\t\t},\n\t\t{ fields: { _id: 1 } },\n\t);\n\tif (existingUser) {\n\t\treturn false;\n\t}\n\n\t// Make sure no teams are using this username\n\tconst existingTeam = Promise.await(Team.getOneByName(toRegExp(username), { projection: { _id: 1 } }));\n\tif (existingTeam) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n"]},"sourceType":"module","hash":"86d6d4988a531d14b12e67b6e01dcc67fad77806"}

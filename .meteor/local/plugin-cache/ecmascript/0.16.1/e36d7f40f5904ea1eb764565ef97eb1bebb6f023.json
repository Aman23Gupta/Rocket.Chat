{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/konecty:user-presence/server/monitor.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/konecty:user-presence/server/monitor.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/konecty:user-presence/server/monitor.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/konecty:user-presence/server/monitor.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/konecty:user-presence/server/monitor.js"}},"code":"/* globals UserPresenceMonitor, UsersSessions, InstanceStatus */\nvar EventEmitter = Npm.require('events');\n\nUserPresenceEvents = new EventEmitter();\n\nfunction monitorUsersSessions() {\n  UsersSessions.find({}).observe({\n    added: function (record) {\n      UserPresenceMonitor.processUserSession(record, 'added');\n    },\n    changed: function (record) {\n      UserPresenceMonitor.processUserSession(record, 'changed');\n    },\n    removed: function (record) {\n      UserPresenceMonitor.processUserSession(record, 'removed');\n    }\n  });\n}\n\nfunction monitorDeletedServers() {\n  InstanceStatus.getCollection().find({}, {\n    fields: {\n      _id: 1\n    }\n  }).observeChanges({\n    removed: function (id) {\n      UserPresence.removeConnectionsByInstanceId(id);\n    }\n  });\n}\n\nfunction removeLostConnections() {\n  if (!Package['konecty:multiple-instances-status']) {\n    return UsersSessions.remove({});\n  }\n\n  var ids = InstanceStatus.getCollection().find({}, {\n    fields: {\n      _id: 1\n    }\n  }).fetch().map(function (id) {\n    return id._id;\n  });\n  var update = {\n    $pull: {\n      connections: {\n        instanceId: {\n          $nin: ids\n        }\n      }\n    }\n  };\n  UsersSessions.update({}, update, {\n    multi: true\n  });\n}\n\nUserPresenceMonitor = {\n  /**\n   * The callback will receive the following parameters: user, status, statusConnection\n   */\n  onSetUserStatus: function (callback) {\n    UserPresenceEvents.on('setUserStatus', callback);\n  },\n  // following actions/observers will run only when presence monitor turned on\n  start: function () {\n    monitorUsersSessions();\n    removeLostConnections();\n\n    if (Package['konecty:multiple-instances-status']) {\n      monitorDeletedServers();\n    }\n  },\n  processUserSession: function (record, action) {\n    if (action === 'removed' && (record.connections == null || record.connections.length === 0)) {\n      return;\n    }\n\n    if (record.connections == null || record.connections.length === 0 || action === 'removed') {\n      UserPresenceMonitor.setStatus(record._id, 'offline', record.metadata);\n\n      if (action !== 'removed') {\n        UsersSessions.remove({\n          _id: record._id,\n          'connections.0': {\n            $exists: false\n          }\n        });\n      }\n\n      return;\n    }\n\n    var connectionStatus = 'offline';\n    record.connections.forEach(function (connection) {\n      if (connection.status === 'online') {\n        connectionStatus = 'online';\n      } else if (connection.status === 'away' && connectionStatus === 'offline') {\n        connectionStatus = 'away';\n      }\n    });\n    UserPresenceMonitor.setStatus(record._id, connectionStatus, record.metadata);\n  },\n  processUser: function (id, fields) {\n    if (fields.statusDefault == null) {\n      return;\n    }\n\n    var userSession = UsersSessions.findOne({\n      _id: id\n    });\n\n    if (userSession) {\n      UserPresenceMonitor.processUserSession(userSession, 'changed');\n    }\n  },\n  setStatus: function (id, status, metadata) {\n    UserPresenceEvents.emit('setStatus', id, status, metadata);\n  }\n};","map":{"version":3,"sources":["packages/konecty:user-presence/server/monitor.js"],"names":["EventEmitter","Npm","require","UserPresenceEvents","monitorUsersSessions","UsersSessions","find","observe","added","record","UserPresenceMonitor","processUserSession","changed","removed","monitorDeletedServers","InstanceStatus","getCollection","fields","_id","observeChanges","id","UserPresence","removeConnectionsByInstanceId","removeLostConnections","Package","remove","ids","fetch","map","update","$pull","connections","instanceId","$nin","multi","onSetUserStatus","callback","on","start","action","length","setStatus","metadata","$exists","connectionStatus","forEach","connection","status","processUser","statusDefault","userSession","findOne","emit"],"mappings":"AAAA;AACA,IAAIA,YAAY,GAAGC,GAAG,CAACC,OAAJ,CAAY,QAAZ,CAAnB;;AAEAC,kBAAkB,GAAG,IAAIH,YAAJ,EAArB;;AAEA,SAASI,oBAAT,GAAgC;AAC/BC,EAAAA,aAAa,CAACC,IAAd,CAAmB,EAAnB,EAAuBC,OAAvB,CAA+B;AAC9BC,IAAAA,KAAK,EAAE,UAASC,MAAT,EAAiB;AACvBC,MAAAA,mBAAmB,CAACC,kBAApB,CAAuCF,MAAvC,EAA+C,OAA/C;AACA,KAH6B;AAI9BG,IAAAA,OAAO,EAAE,UAASH,MAAT,EAAiB;AACzBC,MAAAA,mBAAmB,CAACC,kBAApB,CAAuCF,MAAvC,EAA+C,SAA/C;AACA,KAN6B;AAO9BI,IAAAA,OAAO,EAAE,UAASJ,MAAT,EAAiB;AACzBC,MAAAA,mBAAmB,CAACC,kBAApB,CAAuCF,MAAvC,EAA+C,SAA/C;AACA;AAT6B,GAA/B;AAWA;;AAED,SAASK,qBAAT,GAAiC;AAChCC,EAAAA,cAAc,CAACC,aAAf,GAA+BV,IAA/B,CAAoC,EAApC,EAAwC;AAACW,IAAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAAT,GAAxC,EAA4DC,cAA5D,CAA2E;AAC1EN,IAAAA,OAAO,EAAE,UAASO,EAAT,EAAa;AACrBC,MAAAA,YAAY,CAACC,6BAAb,CAA2CF,EAA3C;AACA;AAHyE,GAA3E;AAKA;;AAED,SAASG,qBAAT,GAAiC;AAChC,MAAI,CAACC,OAAO,CAAC,mCAAD,CAAZ,EAAmD;AAClD,WAAOnB,aAAa,CAACoB,MAAd,CAAqB,EAArB,CAAP;AACA;;AAED,MAAIC,GAAG,GAAGX,cAAc,CAACC,aAAf,GAA+BV,IAA/B,CAAoC,EAApC,EAAwC;AAACW,IAAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAAT,GAAxC,EAA4DS,KAA5D,GAAoEC,GAApE,CAAwE,UAASR,EAAT,EAAa;AAC9F,WAAOA,EAAE,CAACF,GAAV;AACA,GAFS,CAAV;AAIA,MAAIW,MAAM,GAAG;AACZC,IAAAA,KAAK,EAAE;AACNC,MAAAA,WAAW,EAAE;AACZC,QAAAA,UAAU,EAAE;AACXC,UAAAA,IAAI,EAAEP;AADK;AADA;AADP;AADK,GAAb;AASArB,EAAAA,aAAa,CAACwB,MAAd,CAAqB,EAArB,EAAyBA,MAAzB,EAAiC;AAACK,IAAAA,KAAK,EAAE;AAAR,GAAjC;AACA;;AAEDxB,mBAAmB,GAAG;AACrB;AACD;AACA;AACCyB,EAAAA,eAAe,EAAE,UAASC,QAAT,EAAmB;AACnCjC,IAAAA,kBAAkB,CAACkC,EAAnB,CAAsB,eAAtB,EAAuCD,QAAvC;AACA,GANoB;AAQrB;AACAE,EAAAA,KAAK,EAAE,YAAW;AACjBlC,IAAAA,oBAAoB;AACpBmB,IAAAA,qBAAqB;;AAErB,QAAIC,OAAO,CAAC,mCAAD,CAAX,EAAkD;AACjDV,MAAAA,qBAAqB;AACrB;AACD,GAhBoB;AAkBrBH,EAAAA,kBAAkB,EAAE,UAASF,MAAT,EAAiB8B,MAAjB,EAAyB;AAC5C,QAAIA,MAAM,KAAK,SAAX,KAAyB9B,MAAM,CAACsB,WAAP,IAAsB,IAAtB,IAA8BtB,MAAM,CAACsB,WAAP,CAAmBS,MAAnB,KAA8B,CAArF,CAAJ,EAA6F;AAC5F;AACA;;AAED,QAAI/B,MAAM,CAACsB,WAAP,IAAsB,IAAtB,IAA8BtB,MAAM,CAACsB,WAAP,CAAmBS,MAAnB,KAA8B,CAA5D,IAAiED,MAAM,KAAK,SAAhF,EAA2F;AAC1F7B,MAAAA,mBAAmB,CAAC+B,SAApB,CAA8BhC,MAAM,CAACS,GAArC,EAA0C,SAA1C,EAAqDT,MAAM,CAACiC,QAA5D;;AAEA,UAAIH,MAAM,KAAK,SAAf,EAA0B;AACzBlC,QAAAA,aAAa,CAACoB,MAAd,CAAqB;AAACP,UAAAA,GAAG,EAAET,MAAM,CAACS,GAAb;AAAkB,2BAAiB;AAACyB,YAAAA,OAAO,EAAE;AAAV;AAAnC,SAArB;AACA;;AACD;AACA;;AAED,QAAIC,gBAAgB,GAAG,SAAvB;AACAnC,IAAAA,MAAM,CAACsB,WAAP,CAAmBc,OAAnB,CAA2B,UAASC,UAAT,EAAqB;AAC/C,UAAIA,UAAU,CAACC,MAAX,KAAsB,QAA1B,EAAoC;AACnCH,QAAAA,gBAAgB,GAAG,QAAnB;AACA,OAFD,MAEO,IAAIE,UAAU,CAACC,MAAX,KAAsB,MAAtB,IAAgCH,gBAAgB,KAAK,SAAzD,EAAoE;AAC1EA,QAAAA,gBAAgB,GAAG,MAAnB;AACA;AACD,KAND;AAQAlC,IAAAA,mBAAmB,CAAC+B,SAApB,CAA8BhC,MAAM,CAACS,GAArC,EAA0C0B,gBAA1C,EAA4DnC,MAAM,CAACiC,QAAnE;AACA,GA1CoB;AA4CrBM,EAAAA,WAAW,EAAE,UAAS5B,EAAT,EAAaH,MAAb,EAAqB;AACjC,QAAIA,MAAM,CAACgC,aAAP,IAAwB,IAA5B,EAAkC;AACjC;AACA;;AAED,QAAIC,WAAW,GAAG7C,aAAa,CAAC8C,OAAd,CAAsB;AAACjC,MAAAA,GAAG,EAAEE;AAAN,KAAtB,CAAlB;;AAEA,QAAI8B,WAAJ,EAAiB;AAChBxC,MAAAA,mBAAmB,CAACC,kBAApB,CAAuCuC,WAAvC,EAAoD,SAApD;AACA;AACD,GAtDoB;AAwDrBT,EAAAA,SAAS,EAAE,UAASrB,EAAT,EAAa2B,MAAb,EAAqBL,QAArB,EAA+B;AACzCvC,IAAAA,kBAAkB,CAACiD,IAAnB,CAAwB,WAAxB,EAAqChC,EAArC,EAAyC2B,MAAzC,EAAiDL,QAAjD;AACA;AA1DoB,CAAtB","sourcesContent":["/* globals UserPresenceMonitor, UsersSessions, InstanceStatus */\nvar EventEmitter = Npm.require('events');\n\nUserPresenceEvents = new EventEmitter();\n\nfunction monitorUsersSessions() {\n\tUsersSessions.find({}).observe({\n\t\tadded: function(record) {\n\t\t\tUserPresenceMonitor.processUserSession(record, 'added');\n\t\t},\n\t\tchanged: function(record) {\n\t\t\tUserPresenceMonitor.processUserSession(record, 'changed');\n\t\t},\n\t\tremoved: function(record) {\n\t\t\tUserPresenceMonitor.processUserSession(record, 'removed');\n\t\t}\n\t});\n}\n\nfunction monitorDeletedServers() {\n\tInstanceStatus.getCollection().find({}, {fields: {_id: 1}}).observeChanges({\n\t\tremoved: function(id) {\n\t\t\tUserPresence.removeConnectionsByInstanceId(id);\n\t\t}\n\t});\n}\n\nfunction removeLostConnections() {\n\tif (!Package['konecty:multiple-instances-status']) {\n\t\treturn UsersSessions.remove({});\n\t}\n\n\tvar ids = InstanceStatus.getCollection().find({}, {fields: {_id: 1}}).fetch().map(function(id) {\n\t\treturn id._id;\n\t});\n\n\tvar update = {\n\t\t$pull: {\n\t\t\tconnections: {\n\t\t\t\tinstanceId: {\n\t\t\t\t\t$nin: ids\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tUsersSessions.update({}, update, {multi: true});\n}\n\nUserPresenceMonitor = {\n\t/**\n\t * The callback will receive the following parameters: user, status, statusConnection\n\t */\n\tonSetUserStatus: function(callback) {\n\t\tUserPresenceEvents.on('setUserStatus', callback);\n\t},\n\n\t// following actions/observers will run only when presence monitor turned on\n\tstart: function() {\n\t\tmonitorUsersSessions();\n\t\tremoveLostConnections();\n\n\t\tif (Package['konecty:multiple-instances-status']) {\n\t\t\tmonitorDeletedServers();\n\t\t}\n\t},\n\n\tprocessUserSession: function(record, action) {\n\t\tif (action === 'removed' && (record.connections == null || record.connections.length === 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (record.connections == null || record.connections.length === 0 || action === 'removed') {\n\t\t\tUserPresenceMonitor.setStatus(record._id, 'offline', record.metadata);\n\n\t\t\tif (action !== 'removed') {\n\t\t\t\tUsersSessions.remove({_id: record._id, 'connections.0': {$exists: false} });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar connectionStatus = 'offline';\n\t\trecord.connections.forEach(function(connection) {\n\t\t\tif (connection.status === 'online') {\n\t\t\t\tconnectionStatus = 'online';\n\t\t\t} else if (connection.status === 'away' && connectionStatus === 'offline') {\n\t\t\t\tconnectionStatus = 'away';\n\t\t\t}\n\t\t});\n\n\t\tUserPresenceMonitor.setStatus(record._id, connectionStatus, record.metadata);\n\t},\n\n\tprocessUser: function(id, fields) {\n\t\tif (fields.statusDefault == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar userSession = UsersSessions.findOne({_id: id});\n\n\t\tif (userSession) {\n\t\t\tUserPresenceMonitor.processUserSession(userSession, 'changed');\n\t\t}\n\t},\n\n\tsetStatus: function(id, status, metadata) {\n\t\tUserPresenceEvents.emit('setStatus', id, status, metadata);\n\t}\n};\n"]},"sourceType":"module","hash":"e36d7f40f5904ea1eb764565ef97eb1bebb6f023"}

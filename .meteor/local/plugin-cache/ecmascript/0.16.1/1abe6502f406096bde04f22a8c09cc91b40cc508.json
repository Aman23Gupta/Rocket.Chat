{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterRemoveFromRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/hooks/afterRemoveFromRoom.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterRemoveFromRoom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterRemoveFromRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/hooks/afterRemoveFromRoom.js"}},"code":"module.export({\n  definition: () => definition\n});\nlet FederationRoomEvents;\nmodule.link(\"../../../models/server\", {\n  FederationRoomEvents(v) {\n    FederationRoomEvents = v;\n  }\n\n}, 0);\nlet getFederatedRoomData, hasExternalDomain, isLocalUser;\nmodule.link(\"../functions/helpers\", {\n  getFederatedRoomData(v) {\n    getFederatedRoomData = v;\n  },\n\n  hasExternalDomain(v) {\n    hasExternalDomain = v;\n  },\n\n  isLocalUser(v) {\n    isLocalUser = v;\n  }\n\n}, 1);\nlet clientLogger;\nmodule.link(\"../lib/logger\", {\n  clientLogger(v) {\n    clientLogger = v;\n  }\n\n}, 2);\nlet normalizers;\nmodule.link(\"../normalizers\", {\n  normalizers(v) {\n    normalizers = v;\n  }\n\n}, 3);\nlet getFederationDomain;\nmodule.link(\"../lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 4);\nlet dispatchEvent;\nmodule.link(\"../handler\", {\n  dispatchEvent(v) {\n    dispatchEvent = v;\n  }\n\n}, 5);\n\nfunction afterRemoveFromRoom(involvedUsers, room) {\n  return Promise.asyncApply(() => {\n    const {\n      removedUser\n    } = involvedUsers;\n    const localDomain = getFederationDomain(); // If there are not federated users on this room, ignore it\n\n    if (!hasExternalDomain(room) && isLocalUser(removedUser, localDomain)) {\n      return involvedUsers;\n    }\n\n    clientLogger.debug({\n      msg: 'afterRemoveFromRoom',\n      involvedUsers,\n      room\n    });\n    const {\n      users\n    } = getFederatedRoomData(room);\n\n    try {\n      // Get the domains after removal\n      const domainsAfterRemoval = [...new Set(users.map(u => u.federation.origin))]; //\n      // Normalize the room's federation status\n      //\n\n      const usersBeforeRemoval = users;\n      usersBeforeRemoval.push(removedUser); // Get the users domains\n\n      const domainsBeforeRemoval = [...new Set(usersBeforeRemoval.map(u => u.federation.origin))]; //\n      // Create the user remove event\n      //\n\n      const normalizedSourceUser = normalizers.normalizeUser(removedUser);\n      const removeUserEvent = Promise.await(FederationRoomEvents.createRemoveUserEvent(localDomain, room._id, normalizedSourceUser, domainsAfterRemoval)); // Dispatch the events\n\n      dispatchEvent(domainsBeforeRemoval, removeUserEvent);\n    } catch (err) {\n      clientLogger.error({\n        msg: 'afterRemoveFromRoom => Could not remove user:',\n        err\n      });\n    }\n\n    return involvedUsers;\n  });\n}\n\nconst definition = {\n  hook: 'afterRemoveFromRoom',\n  callback: (roomOwner, room) => Promise.await(afterRemoveFromRoom(roomOwner, room)),\n  id: 'federation-after-remove-from-room'\n};","map":{"version":3,"sources":["app/federation/server/hooks/afterRemoveFromRoom.js"],"names":["module","export","definition","FederationRoomEvents","link","v","getFederatedRoomData","hasExternalDomain","isLocalUser","clientLogger","normalizers","getFederationDomain","dispatchEvent","afterRemoveFromRoom","involvedUsers","room","removedUser","localDomain","debug","msg","users","domainsAfterRemoval","Set","map","u","federation","origin","usersBeforeRemoval","push","domainsBeforeRemoval","normalizedSourceUser","normalizeUser","removeUserEvent","createRemoveUserEvent","_id","err","error","hook","callback","roomOwner","Promise","await","id"],"mappings":"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","sourcesContent":["import { FederationRoomEvents } from '../../../models/server';\nimport { getFederatedRoomData, hasExternalDomain, isLocalUser } from '../functions/helpers';\nimport { clientLogger } from '../lib/logger';\nimport { normalizers } from '../normalizers';\nimport { getFederationDomain } from '../lib/getFederationDomain';\nimport { dispatchEvent } from '../handler';\n\nasync function afterRemoveFromRoom(involvedUsers, room) {\n\tconst { removedUser } = involvedUsers;\n\n\tconst localDomain = getFederationDomain();\n\n\t// If there are not federated users on this room, ignore it\n\tif (!hasExternalDomain(room) && isLocalUser(removedUser, localDomain)) {\n\t\treturn involvedUsers;\n\t}\n\n\tclientLogger.debug({ msg: 'afterRemoveFromRoom', involvedUsers, room });\n\n\tconst { users } = getFederatedRoomData(room);\n\n\ttry {\n\t\t// Get the domains after removal\n\t\tconst domainsAfterRemoval = [...new Set(users.map((u) => u.federation.origin))];\n\n\t\t//\n\t\t// Normalize the room's federation status\n\t\t//\n\t\tconst usersBeforeRemoval = users;\n\t\tusersBeforeRemoval.push(removedUser);\n\n\t\t// Get the users domains\n\t\tconst domainsBeforeRemoval = [...new Set(usersBeforeRemoval.map((u) => u.federation.origin))];\n\n\t\t//\n\t\t// Create the user remove event\n\t\t//\n\t\tconst normalizedSourceUser = normalizers.normalizeUser(removedUser);\n\n\t\tconst removeUserEvent = await FederationRoomEvents.createRemoveUserEvent(\n\t\t\tlocalDomain,\n\t\t\troom._id,\n\t\t\tnormalizedSourceUser,\n\t\t\tdomainsAfterRemoval,\n\t\t);\n\n\t\t// Dispatch the events\n\t\tdispatchEvent(domainsBeforeRemoval, removeUserEvent);\n\t} catch (err) {\n\t\tclientLogger.error({ msg: 'afterRemoveFromRoom => Could not remove user:', err });\n\t}\n\n\treturn involvedUsers;\n}\n\nexport const definition = {\n\thook: 'afterRemoveFromRoom',\n\tcallback: (roomOwner, room) => Promise.await(afterRemoveFromRoom(roomOwner, room)),\n\tid: 'federation-after-remove-from-room',\n};\n"]},"sourceType":"module","hash":"1abe6502f406096bde04f22a8c09cc91b40cc508"}

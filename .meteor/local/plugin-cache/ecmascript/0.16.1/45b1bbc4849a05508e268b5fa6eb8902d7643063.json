{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/invites/server/functions/useInviteToken.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/invites/server/functions/useInviteToken.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/invites/server/functions/useInviteToken.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/invites/server/functions/useInviteToken.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/invites/server/functions/useInviteToken.js"}},"code":"module.export({\n  useInviteToken: () => useInviteToken\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Users, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 1);\nlet Invites;\nmodule.link(\"../../../models/server/raw\", {\n  Invites(v) {\n    Invites = v;\n  }\n\n}, 2);\nlet validateInviteToken;\nmodule.link(\"./validateInviteToken\", {\n  validateInviteToken(v) {\n    validateInviteToken = v;\n  }\n\n}, 3);\nlet addUserToRoom;\nmodule.link(\"../../../lib/server/functions/addUserToRoom\", {\n  addUserToRoom(v) {\n    addUserToRoom = v;\n  }\n\n}, 4);\nlet roomTypes, RoomMemberActions;\nmodule.link(\"../../../utils/server\", {\n  roomTypes(v) {\n    roomTypes = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  }\n\n}, 5);\n\nconst useInviteToken = (userId, token) => Promise.asyncApply(() => {\n  if (!userId) {\n    throw new Meteor.Error('error-invalid-user', 'The user is invalid', {\n      method: 'useInviteToken',\n      field: 'userId'\n    });\n  }\n\n  if (!token) {\n    throw new Meteor.Error('error-invalid-token', 'The invite token is invalid.', {\n      method: 'useInviteToken',\n      field: 'token'\n    });\n  }\n\n  const {\n    inviteData,\n    room\n  } = Promise.await(validateInviteToken(token));\n\n  if (!roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.INVITE)) {\n    throw new Meteor.Error('error-room-type-not-allowed', \"Can't join room of this type via invite\", {\n      method: 'useInviteToken',\n      field: 'token'\n    });\n  }\n\n  const user = Users.findOneById(userId);\n  Users.updateInviteToken(user._id, token);\n  const subscription = Subscriptions.findOneByRoomIdAndUserId(room._id, user._id, {\n    fields: {\n      _id: 1\n    }\n  });\n\n  if (!subscription) {\n    Promise.await(Invites.increaseUsageById(inviteData._id));\n  } // If the user already has an username, then join the invite room,\n  // If no username is set yet, then the the join will happen on the setUsername method\n\n\n  if (user.username) {\n    addUserToRoom(room._id, user);\n  }\n\n  return {\n    room: {\n      rid: inviteData.rid,\n      prid: room.prid,\n      fname: room.fname,\n      name: room.name,\n      t: room.t\n    }\n  };\n});","map":{"version":3,"sources":["app/invites/server/functions/useInviteToken.js"],"names":["module","export","useInviteToken","Meteor","link","v","Users","Subscriptions","Invites","validateInviteToken","addUserToRoom","roomTypes","RoomMemberActions","userId","token","Error","method","field","inviteData","room","getConfig","t","allowMemberAction","INVITE","user","findOneById","updateInviteToken","_id","subscription","findOneByRoomIdAndUserId","fields","increaseUsageById","username","rid","prid","fname","name"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Users, Subscriptions } from '../../../models/server';\nimport { Invites } from '../../../models/server/raw';\nimport { validateInviteToken } from './validateInviteToken';\nimport { addUserToRoom } from '../../../lib/server/functions/addUserToRoom';\nimport { roomTypes, RoomMemberActions } from '../../../utils/server';\n\nexport const useInviteToken = async (userId, token) => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'The user is invalid', {\n\t\t\tmethod: 'useInviteToken',\n\t\t\tfield: 'userId',\n\t\t});\n\t}\n\n\tif (!token) {\n\t\tthrow new Meteor.Error('error-invalid-token', 'The invite token is invalid.', {\n\t\t\tmethod: 'useInviteToken',\n\t\t\tfield: 'token',\n\t\t});\n\t}\n\n\tconst { inviteData, room } = await validateInviteToken(token);\n\n\tif (!roomTypes.getConfig(room.t).allowMemberAction(room, RoomMemberActions.INVITE)) {\n\t\tthrow new Meteor.Error('error-room-type-not-allowed', \"Can't join room of this type via invite\", {\n\t\t\tmethod: 'useInviteToken',\n\t\t\tfield: 'token',\n\t\t});\n\t}\n\n\tconst user = Users.findOneById(userId);\n\tUsers.updateInviteToken(user._id, token);\n\n\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(room._id, user._id, {\n\t\tfields: { _id: 1 },\n\t});\n\tif (!subscription) {\n\t\tawait Invites.increaseUsageById(inviteData._id);\n\t}\n\n\t// If the user already has an username, then join the invite room,\n\t// If no username is set yet, then the the join will happen on the setUsername method\n\tif (user.username) {\n\t\taddUserToRoom(room._id, user);\n\t}\n\n\treturn {\n\t\troom: {\n\t\t\trid: inviteData.rid,\n\t\t\tprid: room.prid,\n\t\t\tfname: room.fname,\n\t\t\tname: room.name,\n\t\t\tt: room.t,\n\t\t},\n\t};\n};\n"]},"sourceType":"module","hash":"45b1bbc4849a05508e268b5fa6eb8902d7643063"}

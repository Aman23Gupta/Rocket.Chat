{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/emoji-custom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/emoji-custom.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/emoji-custom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/emoji-custom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/emoji-custom.js"}},"code":"const _excluded = [\"emoji\"],\n      _excluded2 = [\"emoji\"];\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet EmojiCustom;\nmodule.link(\"../../../models/server/raw\", {\n  EmojiCustom(v) {\n    EmojiCustom = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nlet getUploadFormData;\nmodule.link(\"../lib/getUploadFormData\", {\n  getUploadFormData(v) {\n    getUploadFormData = v;\n  }\n\n}, 3);\nlet findEmojisCustom;\nmodule.link(\"../lib/emoji-custom\", {\n  findEmojisCustom(v) {\n    findEmojisCustom = v;\n  }\n\n}, 4);\nlet Media;\nmodule.link(\"../../../../server/sdk\", {\n  Media(v) {\n    Media = v;\n  }\n\n}, 5);\nAPI.v1.addRoute('emoji-custom.list', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      query\n    } = this.parseJsonQuery();\n    const {\n      updatedSince\n    } = this.queryParams;\n    let updatedSinceDate;\n\n    if (updatedSince) {\n      if (isNaN(Date.parse(updatedSince))) {\n        throw new Meteor.Error('error-roomId-param-invalid', 'The \"updatedSince\" query parameter must be a valid date.');\n      } else {\n        updatedSinceDate = new Date(updatedSince);\n      }\n\n      return API.v1.success({\n        emojis: {\n          update: Promise.await(EmojiCustom.find(_objectSpread(_objectSpread({}, query), {}, {\n            _updatedAt: {\n              $gt: updatedSinceDate\n            }\n          })).toArray()),\n          remove: Promise.await(EmojiCustom.trashFindDeletedAfter(updatedSinceDate).toArray())\n        }\n      });\n    }\n\n    return API.v1.success({\n      emojis: {\n        update: Promise.await(EmojiCustom.find(query).toArray()),\n        remove: []\n      }\n    });\n  }\n\n});\nAPI.v1.addRoute('emoji-custom.all', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort,\n      query\n    } = this.parseJsonQuery();\n    return API.v1.success(Promise.await(findEmojisCustom({\n      query,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    })));\n  }\n\n});\nAPI.v1.addRoute('emoji-custom.create', {\n  authRequired: true\n}, {\n  post() {\n    const _Promise$await = Promise.await(getUploadFormData({\n      request: this.request\n    })),\n          {\n      emoji\n    } = _Promise$await,\n          fields = _objectWithoutProperties(_Promise$await, _excluded);\n\n    if (!emoji) {\n      throw new Meteor.Error('invalid-field');\n    }\n\n    const isUploadable = Promise.await(Media.isImage(emoji.fileBuffer));\n\n    if (!isUploadable) {\n      throw new Meteor.Error('emoji-is-not-image', \"Emoji file provided cannot be uploaded since it's not an image\");\n    }\n\n    const [, extension] = emoji.mimetype.split('/');\n    fields.extension = extension;\n    fields.newFile = true;\n    fields.aliases = fields.aliases || '';\n    Meteor.runAsUser(this.userId, () => {\n      Meteor.call('insertOrUpdateEmoji', fields);\n      Meteor.call('uploadEmojiCustom', emoji.fileBuffer, emoji.mimetype, fields);\n    });\n  }\n\n});\nAPI.v1.addRoute('emoji-custom.update', {\n  authRequired: true\n}, {\n  post() {\n    const _Promise$await2 = Promise.await(getUploadFormData({\n      request: this.request\n    })),\n          {\n      emoji\n    } = _Promise$await2,\n          fields = _objectWithoutProperties(_Promise$await2, _excluded2);\n\n    if (!fields._id) {\n      throw new Meteor.Error('The required \"_id\" query param is missing.');\n    }\n\n    const emojiToUpdate = Promise.await(EmojiCustom.findOneById(fields._id));\n\n    if (!emojiToUpdate) {\n      throw new Meteor.Error('Emoji not found.');\n    }\n\n    fields.previousName = emojiToUpdate.name;\n    fields.previousExtension = emojiToUpdate.extension;\n    fields.aliases = fields.aliases || '';\n    fields.newFile = Boolean(emoji === null || emoji === void 0 ? void 0 : emoji.fileBuffer.length);\n\n    if (fields.newFile) {\n      const isUploadable = Promise.await(Media.isImage(emoji.fileBuffer));\n\n      if (!isUploadable) {\n        throw new Meteor.Error('emoji-is-not-image', \"Emoji file provided cannot be uploaded since it's not an image\");\n      }\n\n      const [, extension] = emoji.mimetype.split('/');\n      fields.extension = extension;\n    } else {\n      fields.extension = emojiToUpdate.extension;\n    }\n\n    Meteor.runAsUser(this.userId, () => {\n      Meteor.call('insertOrUpdateEmoji', fields);\n\n      if (fields.newFile) {\n        Meteor.call('uploadEmojiCustom', emoji.fileBuffer, emoji.mimetype, fields);\n      }\n    });\n  }\n\n});\nAPI.v1.addRoute('emoji-custom.delete', {\n  authRequired: true\n}, {\n  post() {\n    const {\n      emojiId\n    } = this.bodyParams;\n\n    if (!emojiId) {\n      return API.v1.failure('The \"emojiId\" params is required!');\n    }\n\n    Meteor.runAsUser(this.userId, () => Meteor.call('deleteEmojiCustom', emojiId));\n    return API.v1.success();\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/emoji-custom.js"],"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","Meteor","EmojiCustom","API","getUploadFormData","findEmojisCustom","Media","v1","addRoute","authRequired","get","query","parseJsonQuery","updatedSince","queryParams","updatedSinceDate","isNaN","Date","parse","Error","success","emojis","update","Promise","await","find","_updatedAt","$gt","toArray","remove","trashFindDeletedAfter","offset","count","getPaginationItems","sort","pagination","post","request","emoji","fields","isUploadable","isImage","fileBuffer","extension","mimetype","split","newFile","aliases","runAsUser","userId","call","_id","emojiToUpdate","findOneById","previousName","name","previousExtension","Boolean","length","emojiId","bodyParams","failure"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { EmojiCustom } from '../../../models/server/raw';\nimport { API } from '../api';\nimport { getUploadFormData } from '../lib/getUploadFormData';\nimport { findEmojisCustom } from '../lib/emoji-custom';\nimport { Media } from '../../../../server/sdk';\n\nAPI.v1.addRoute(\n\t'emoji-custom.list',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { query } = this.parseJsonQuery();\n\t\t\tconst { updatedSince } = this.queryParams;\n\t\t\tlet updatedSinceDate;\n\t\t\tif (updatedSince) {\n\t\t\t\tif (isNaN(Date.parse(updatedSince))) {\n\t\t\t\t\tthrow new Meteor.Error('error-roomId-param-invalid', 'The \"updatedSince\" query parameter must be a valid date.');\n\t\t\t\t} else {\n\t\t\t\t\tupdatedSinceDate = new Date(updatedSince);\n\t\t\t\t}\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\temojis: {\n\t\t\t\t\t\tupdate: Promise.await(EmojiCustom.find({ ...query, _updatedAt: { $gt: updatedSinceDate } }).toArray()),\n\t\t\t\t\t\tremove: Promise.await(EmojiCustom.trashFindDeletedAfter(updatedSinceDate).toArray()),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\temojis: {\n\t\t\t\t\tupdate: Promise.await(EmojiCustom.find(query).toArray()),\n\t\t\t\t\tremove: [],\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'emoji-custom.all',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort, query } = this.parseJsonQuery();\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindEmojisCustom({\n\t\t\t\t\t\tquery,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\toffset,\n\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\tsort,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'emoji-custom.create',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { emoji, ...fields } = Promise.await(\n\t\t\t\tgetUploadFormData({\n\t\t\t\t\trequest: this.request,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (!emoji) {\n\t\t\t\tthrow new Meteor.Error('invalid-field');\n\t\t\t}\n\n\t\t\tconst isUploadable = Promise.await(Media.isImage(emoji.fileBuffer));\n\t\t\tif (!isUploadable) {\n\t\t\t\tthrow new Meteor.Error('emoji-is-not-image', \"Emoji file provided cannot be uploaded since it's not an image\");\n\t\t\t}\n\n\t\t\tconst [, extension] = emoji.mimetype.split('/');\n\t\t\tfields.extension = extension;\n\n\t\t\tfields.newFile = true;\n\t\t\tfields.aliases = fields.aliases || '';\n\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tMeteor.call('insertOrUpdateEmoji', fields);\n\t\t\t\tMeteor.call('uploadEmojiCustom', emoji.fileBuffer, emoji.mimetype, fields);\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'emoji-custom.update',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { emoji, ...fields } = Promise.await(\n\t\t\t\tgetUploadFormData({\n\t\t\t\t\trequest: this.request,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (!fields._id) {\n\t\t\t\tthrow new Meteor.Error('The required \"_id\" query param is missing.');\n\t\t\t}\n\n\t\t\tconst emojiToUpdate = Promise.await(EmojiCustom.findOneById(fields._id));\n\t\t\tif (!emojiToUpdate) {\n\t\t\t\tthrow new Meteor.Error('Emoji not found.');\n\t\t\t}\n\n\t\t\tfields.previousName = emojiToUpdate.name;\n\t\t\tfields.previousExtension = emojiToUpdate.extension;\n\t\t\tfields.aliases = fields.aliases || '';\n\t\t\tfields.newFile = Boolean(emoji?.fileBuffer.length);\n\n\t\t\tif (fields.newFile) {\n\t\t\t\tconst isUploadable = Promise.await(Media.isImage(emoji.fileBuffer));\n\t\t\t\tif (!isUploadable) {\n\t\t\t\t\tthrow new Meteor.Error('emoji-is-not-image', \"Emoji file provided cannot be uploaded since it's not an image\");\n\t\t\t\t}\n\n\t\t\t\tconst [, extension] = emoji.mimetype.split('/');\n\t\t\t\tfields.extension = extension;\n\t\t\t} else {\n\t\t\t\tfields.extension = emojiToUpdate.extension;\n\t\t\t}\n\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tMeteor.call('insertOrUpdateEmoji', fields);\n\t\t\t\tif (fields.newFile) {\n\t\t\t\t\tMeteor.call('uploadEmojiCustom', emoji.fileBuffer, emoji.mimetype, fields);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'emoji-custom.delete',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { emojiId } = this.bodyParams;\n\t\t\tif (!emojiId) {\n\t\t\t\treturn API.v1.failure('The \"emojiId\" params is required!');\n\t\t\t}\n\n\t\t\tMeteor.runAsUser(this.userId, () => Meteor.call('deleteEmojiCustom', emojiId));\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"c0624dac9802b5cdcbd6a2a1f7d696aab1f9ffaf"}

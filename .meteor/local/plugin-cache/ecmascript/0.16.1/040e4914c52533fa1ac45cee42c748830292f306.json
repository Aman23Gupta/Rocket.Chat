{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/custom-oauth/server/transform_helpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/custom-oauth/server/transform_helpers.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/custom-oauth/server/transform_helpers.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/custom-oauth/server/transform_helpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/custom-oauth/server/transform_helpers.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  normalizers: () => normalizers,\n  renameInvalidProperties: () => renameInvalidProperties,\n  getNestedValue: () => getNestedValue,\n  getRegexpMatch: () => getRegexpMatch,\n  fromTemplate: () => fromTemplate\n});\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 0);\nconst normalizers = {\n  // Set 'id' to '_id' for any sources that provide it\n  _id(identity) {\n    if (identity._id && !identity.id) {\n      identity.id = identity._id;\n    }\n  },\n\n  // Fix for Reddit\n  redit(identity) {\n    if (identity.result) {\n      return identity.result;\n    }\n  },\n\n  // Fix WordPress-like identities having 'ID' instead of 'id'\n  wordpress(identity) {\n    if (identity.ID && !identity.id) {\n      identity.id = identity.ID;\n    }\n  },\n\n  // Fix Auth0-like identities having 'user_id' instead of 'id'\n  user_id(identity) {\n    if (identity.user_id && !identity.id) {\n      identity.id = identity.user_id;\n    }\n  },\n\n  characterid(identity) {\n    if (identity.CharacterID && !identity.id) {\n      identity.id = identity.CharacterID;\n    }\n  },\n\n  // Fix Dataporten having 'user.userid' instead of 'id'\n  dataporten(identity) {\n    if (identity.user && identity.user.userid && !identity.id) {\n      if (identity.user.userid_sec && identity.user.userid_sec[0]) {\n        identity.id = identity.user.userid_sec[0];\n      } else {\n        identity.id = identity.user.userid;\n      }\n\n      identity.email = identity.user.email;\n    }\n  },\n\n  // Fix for Xenforo [BD]API plugin for 'user.user_id; instead of 'id'\n  xenforo(identity) {\n    if (identity.user && identity.user.user_id && !identity.id) {\n      identity.id = identity.user.user_id;\n      identity.email = identity.user.user_email;\n    }\n  },\n\n  // Fix general 'phid' instead of 'id' from phabricator\n  phabricator(identity) {\n    if (identity.phid && !identity.id) {\n      identity.id = identity.phid;\n    }\n  },\n\n  // Fix Keycloak-like identities having 'sub' instead of 'id'\n  kaycloak(identity) {\n    if (identity.sub && !identity.id) {\n      identity.id = identity.sub;\n    }\n  },\n\n  // Fix OpenShift identities where id is in 'metadata' object\n  openshift(identity) {\n    if (!identity.id && identity.metadata && identity.metadata.uid) {\n      identity.id = identity.metadata.uid;\n      identity.name = identity.fullName;\n    }\n  },\n\n  // Fix general 'userid' instead of 'id' from provider\n  userid(identity) {\n    if (identity.userid && !identity.id) {\n      identity.id = identity.userid;\n    }\n  },\n\n  // Fix Nextcloud provider\n  nextcloud(identity) {\n    if (!identity.id && identity.ocs && identity.ocs.data && identity.ocs.data.id) {\n      identity.id = identity.ocs.data.id;\n      identity.name = identity.ocs.data.displayname;\n      identity.email = identity.ocs.data.email;\n    }\n  },\n\n  // Fix when authenticating from a meteor app with 'emails' field\n  meteor(identity) {\n    if (!identity.email && identity.emails && Array.isArray(identity.emails) && identity.emails.length >= 1) {\n      identity.email = identity.emails[0].address ? identity.emails[0].address : undefined;\n    }\n  }\n\n};\nconst IDENTITY_PROPNAME_FILTER = /(\\.)/g;\n\nconst renameInvalidProperties = input => {\n  if (Array.isArray(input)) {\n    return input.map(renameInvalidProperties);\n  }\n\n  if (!_.isObject(input)) {\n    return input;\n  }\n\n  return Object.entries(input).reduce((result, _ref) => {\n    let [name, value] = _ref;\n    return _objectSpread(_objectSpread({}, result), {}, {\n      [name.replace(IDENTITY_PROPNAME_FILTER, '_')]: renameInvalidProperties(value)\n    });\n  }, {});\n};\n\nconst getNestedValue = (propertyPath, source) => propertyPath.split('.').reduce((prev, curr) => prev ? prev[curr] : undefined, source);\n\n// /^(.+)@/::email\nconst REGEXP_FROM_FORMULA = /^\\/((?!\\/::).*)\\/::(.+)/;\n\nconst getRegexpMatch = (formula, data) => {\n  const regexAndPath = REGEXP_FROM_FORMULA.exec(formula);\n\n  if (!regexAndPath) {\n    return getNestedValue(formula, data);\n  }\n\n  if (regexAndPath.length !== 3) {\n    throw new Error(\"expected array of length 3, got \".concat(regexAndPath.length));\n  }\n\n  const [, regexString, path] = regexAndPath;\n  const nestedValue = getNestedValue(path, data);\n  const regex = new RegExp(regexString);\n  const matches = regex.exec(nestedValue); // regexp does not match nested value\n\n  if (!matches) {\n    return undefined;\n  } // we only support regular expressions with a single capture group\n\n\n  const [, value] = matches; // this could mean we return `undefined` (e.g. when capture group is empty)\n\n  return value;\n};\n\nconst templateStringRegex = /{{((?:(?!}}).)+)}}/g;\n\nconst fromTemplate = (template, data) => {\n  if (!templateStringRegex.test(template)) {\n    return getNestedValue(template, data);\n  }\n\n  return template.replace(templateStringRegex, (fullMatch, match) => getRegexpMatch(match, data));\n};","map":{"version":3,"sources":["app/custom-oauth/server/transform_helpers.js"],"names":["_objectSpread","module","link","default","v","export","normalizers","renameInvalidProperties","getNestedValue","getRegexpMatch","fromTemplate","_","_id","identity","id","redit","result","wordpress","ID","user_id","characterid","CharacterID","dataporten","user","userid","userid_sec","email","xenforo","user_email","phabricator","phid","kaycloak","sub","openshift","metadata","uid","name","fullName","nextcloud","ocs","data","displayname","meteor","emails","Array","isArray","length","address","undefined","IDENTITY_PROPNAME_FILTER","input","map","isObject","Object","entries","reduce","value","replace","propertyPath","source","split","prev","curr","REGEXP_FROM_FORMULA","formula","regexAndPath","exec","Error","regexString","path","nestedValue","regex","RegExp","matches","templateStringRegex","template","test","fullMatch","match"],"mappings":"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","sourcesContent":["import _ from 'underscore';\n\nexport const normalizers = {\n\t// Set 'id' to '_id' for any sources that provide it\n\t_id(identity) {\n\t\tif (identity._id && !identity.id) {\n\t\t\tidentity.id = identity._id;\n\t\t}\n\t},\n\n\t// Fix for Reddit\n\tredit(identity) {\n\t\tif (identity.result) {\n\t\t\treturn identity.result;\n\t\t}\n\t},\n\n\t// Fix WordPress-like identities having 'ID' instead of 'id'\n\twordpress(identity) {\n\t\tif (identity.ID && !identity.id) {\n\t\t\tidentity.id = identity.ID;\n\t\t}\n\t},\n\n\t// Fix Auth0-like identities having 'user_id' instead of 'id'\n\tuser_id(identity) {\n\t\tif (identity.user_id && !identity.id) {\n\t\t\tidentity.id = identity.user_id;\n\t\t}\n\t},\n\n\tcharacterid(identity) {\n\t\tif (identity.CharacterID && !identity.id) {\n\t\t\tidentity.id = identity.CharacterID;\n\t\t}\n\t},\n\n\t// Fix Dataporten having 'user.userid' instead of 'id'\n\tdataporten(identity) {\n\t\tif (identity.user && identity.user.userid && !identity.id) {\n\t\t\tif (identity.user.userid_sec && identity.user.userid_sec[0]) {\n\t\t\t\tidentity.id = identity.user.userid_sec[0];\n\t\t\t} else {\n\t\t\t\tidentity.id = identity.user.userid;\n\t\t\t}\n\t\t\tidentity.email = identity.user.email;\n\t\t}\n\t},\n\n\t// Fix for Xenforo [BD]API plugin for 'user.user_id; instead of 'id'\n\txenforo(identity) {\n\t\tif (identity.user && identity.user.user_id && !identity.id) {\n\t\t\tidentity.id = identity.user.user_id;\n\t\t\tidentity.email = identity.user.user_email;\n\t\t}\n\t},\n\n\t// Fix general 'phid' instead of 'id' from phabricator\n\tphabricator(identity) {\n\t\tif (identity.phid && !identity.id) {\n\t\t\tidentity.id = identity.phid;\n\t\t}\n\t},\n\n\t// Fix Keycloak-like identities having 'sub' instead of 'id'\n\tkaycloak(identity) {\n\t\tif (identity.sub && !identity.id) {\n\t\t\tidentity.id = identity.sub;\n\t\t}\n\t},\n\n\t// Fix OpenShift identities where id is in 'metadata' object\n\topenshift(identity) {\n\t\tif (!identity.id && identity.metadata && identity.metadata.uid) {\n\t\t\tidentity.id = identity.metadata.uid;\n\t\t\tidentity.name = identity.fullName;\n\t\t}\n\t},\n\n\t// Fix general 'userid' instead of 'id' from provider\n\tuserid(identity) {\n\t\tif (identity.userid && !identity.id) {\n\t\t\tidentity.id = identity.userid;\n\t\t}\n\t},\n\n\t// Fix Nextcloud provider\n\tnextcloud(identity) {\n\t\tif (!identity.id && identity.ocs && identity.ocs.data && identity.ocs.data.id) {\n\t\t\tidentity.id = identity.ocs.data.id;\n\t\t\tidentity.name = identity.ocs.data.displayname;\n\t\t\tidentity.email = identity.ocs.data.email;\n\t\t}\n\t},\n\n\t// Fix when authenticating from a meteor app with 'emails' field\n\tmeteor(identity) {\n\t\tif (!identity.email && identity.emails && Array.isArray(identity.emails) && identity.emails.length >= 1) {\n\t\t\tidentity.email = identity.emails[0].address ? identity.emails[0].address : undefined;\n\t\t}\n\t},\n};\n\nconst IDENTITY_PROPNAME_FILTER = /(\\.)/g;\nexport const renameInvalidProperties = (input) => {\n\tif (Array.isArray(input)) {\n\t\treturn input.map(renameInvalidProperties);\n\t}\n\tif (!_.isObject(input)) {\n\t\treturn input;\n\t}\n\n\treturn Object.entries(input).reduce(\n\t\t(result, [name, value]) => ({\n\t\t\t...result,\n\t\t\t[name.replace(IDENTITY_PROPNAME_FILTER, '_')]: renameInvalidProperties(value),\n\t\t}),\n\t\t{},\n\t);\n};\n\nexport const getNestedValue = (propertyPath, source) =>\n\tpropertyPath.split('.').reduce((prev, curr) => (prev ? prev[curr] : undefined), source);\n\n// /^(.+)@/::email\nconst REGEXP_FROM_FORMULA = /^\\/((?!\\/::).*)\\/::(.+)/;\nexport const getRegexpMatch = (formula, data) => {\n\tconst regexAndPath = REGEXP_FROM_FORMULA.exec(formula);\n\tif (!regexAndPath) {\n\t\treturn getNestedValue(formula, data);\n\t}\n\tif (regexAndPath.length !== 3) {\n\t\tthrow new Error(`expected array of length 3, got ${regexAndPath.length}`);\n\t}\n\n\tconst [, regexString, path] = regexAndPath;\n\tconst nestedValue = getNestedValue(path, data);\n\tconst regex = new RegExp(regexString);\n\tconst matches = regex.exec(nestedValue);\n\n\t// regexp does not match nested value\n\tif (!matches) {\n\t\treturn undefined;\n\t}\n\n\t// we only support regular expressions with a single capture group\n\tconst [, value] = matches;\n\n\t// this could mean we return `undefined` (e.g. when capture group is empty)\n\treturn value;\n};\n\nconst templateStringRegex = /{{((?:(?!}}).)+)}}/g;\nexport const fromTemplate = (template, data) => {\n\tif (!templateStringRegex.test(template)) {\n\t\treturn getNestedValue(template, data);\n\t}\n\n\treturn template.replace(templateStringRegex, (fullMatch, match) => getRegexpMatch(match, data));\n};\n"]},"sourceType":"module","hash":"040e4914c52533fa1ac45cee42c748830292f306"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/AmazonS3/server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/ufs/AmazonS3/server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/AmazonS3/server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/AmazonS3/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/ufs/AmazonS3/server.js"}},"code":"module.export({\n  AmazonS3Store: () => AmazonS3Store\n});\nlet stream;\nmodule.link(\"stream\", {\n  default(v) {\n    stream = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet UploadFS;\nmodule.link(\"meteor/jalik:ufs\", {\n  UploadFS(v) {\n    UploadFS = v;\n  }\n\n}, 2);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 4);\nlet S3;\nmodule.link(\"aws-sdk/clients/s3\", {\n  default(v) {\n    S3 = v;\n  }\n\n}, 5);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 6);\n\nclass AmazonS3Store extends UploadFS.Store {\n  constructor(options) {\n    // Default options\n    // options.secretAccessKey,\n    // options.accessKeyId,\n    // options.region,\n    // options.sslEnabled // optional\n    options = _.extend({\n      httpOptions: {\n        timeout: 6000,\n        agent: false\n      }\n    }, options);\n    super(options);\n    const classOptions = options;\n    const s3 = new S3(options.connection);\n\n    options.getPath = options.getPath || function (file) {\n      return file._id;\n    };\n\n    this.getPath = function (file) {\n      if (file.AmazonS3) {\n        return file.AmazonS3.path;\n      } // Compatibility\n      // TODO: Migration\n\n\n      if (file.s3) {\n        return file.s3.path + file._id;\n      }\n    };\n\n    this.getRedirectURL = function (file) {\n      let forceDownload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      let callback = arguments.length > 2 ? arguments[2] : undefined;\n      const params = {\n        Key: this.getPath(file),\n        Expires: classOptions.URLExpiryTimeSpan,\n        ResponseContentDisposition: \"\".concat(forceDownload ? 'attachment' : 'inline', \"; filename=\\\"\").concat(encodeURI(file.name), \"\\\"\")\n      };\n      return s3.getSignedUrl('getObject', params, callback);\n    };\n    /**\n     * Creates the file in the collection\n     * @param file\n     * @param callback\n     * @return {string}\n     */\n\n\n    this.create = function (file, callback) {\n      check(file, Object);\n\n      if (file._id == null) {\n        file._id = Random.id();\n      }\n\n      file.AmazonS3 = {\n        path: this.options.getPath(file)\n      };\n      file.store = this.options.name; // assign store to file\n\n      return this.getCollection().insert(file, callback);\n    };\n    /**\n     * Removes the file\n     * @param fileId\n     * @param callback\n     */\n\n\n    this.delete = function (fileId, callback) {\n      const file = this.getCollection().findOne({\n        _id: fileId\n      });\n      const params = {\n        Key: this.getPath(file)\n      };\n      s3.deleteObject(params, (err, data) => {\n        if (err) {\n          SystemLogger.error(err);\n        }\n\n        callback && callback(err, data);\n      });\n    };\n    /**\n     * Returns the file read stream\n     * @param fileId\n     * @param file\n     * @param options\n     * @return {*}\n     */\n\n\n    this.getReadStream = function (fileId, file) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const params = {\n        Key: this.getPath(file)\n      };\n\n      if (options.start && options.end) {\n        params.Range = \"\".concat(options.start, \" - \").concat(options.end);\n      }\n\n      return s3.getObject(params).createReadStream();\n    };\n    /**\n     * Returns the file write stream\n     * @param fileId\n     * @param file\n     * @param options\n     * @return {*}\n     */\n\n\n    this.getWriteStream = function (fileId, file\n    /* , options*/\n    ) {\n      const writeStream = new stream.PassThrough();\n      writeStream.length = file.size;\n      writeStream.on('newListener', (event, listener) => {\n        if (event === 'finish') {\n          process.nextTick(() => {\n            writeStream.removeListener(event, listener);\n            writeStream.on('real_finish', listener);\n          });\n        }\n      });\n      s3.putObject({\n        Key: this.getPath(file),\n        Body: writeStream,\n        ContentType: file.type\n      }, error => {\n        if (error) {\n          SystemLogger.error(error);\n        }\n\n        writeStream.emit('real_finish');\n      });\n      return writeStream;\n    };\n  }\n\n}\n\n// Add store to UFS namespace\nUploadFS.store.AmazonS3 = AmazonS3Store;","map":{"version":3,"sources":["app/file-upload/ufs/AmazonS3/server.js"],"names":["module","export","AmazonS3Store","stream","link","default","v","check","UploadFS","Random","_","S3","SystemLogger","Store","constructor","options","extend","httpOptions","timeout","agent","classOptions","s3","connection","getPath","file","_id","AmazonS3","path","getRedirectURL","forceDownload","callback","params","Key","Expires","URLExpiryTimeSpan","ResponseContentDisposition","encodeURI","name","getSignedUrl","create","Object","id","store","getCollection","insert","delete","fileId","findOne","deleteObject","err","data","error","getReadStream","start","end","Range","getObject","createReadStream","getWriteStream","writeStream","PassThrough","length","size","on","event","listener","process","nextTick","removeListener","putObject","Body","ContentType","type","emit"],"mappings":"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","sourcesContent":["import stream from 'stream';\n\nimport { check } from 'meteor/check';\nimport { UploadFS } from 'meteor/jalik:ufs';\nimport { Random } from 'meteor/random';\nimport _ from 'underscore';\nimport S3 from 'aws-sdk/clients/s3';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\n/**\n * AmazonS3 store\n * @param options\n * @constructor\n */\nexport class AmazonS3Store extends UploadFS.Store {\n\tconstructor(options) {\n\t\t// Default options\n\t\t// options.secretAccessKey,\n\t\t// options.accessKeyId,\n\t\t// options.region,\n\t\t// options.sslEnabled // optional\n\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\thttpOptions: {\n\t\t\t\t\ttimeout: 6000,\n\t\t\t\t\tagent: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\tsuper(options);\n\n\t\tconst classOptions = options;\n\n\t\tconst s3 = new S3(options.connection);\n\n\t\toptions.getPath =\n\t\t\toptions.getPath ||\n\t\t\tfunction (file) {\n\t\t\t\treturn file._id;\n\t\t\t};\n\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.AmazonS3) {\n\t\t\t\treturn file.AmazonS3.path;\n\t\t\t}\n\t\t\t// Compatibility\n\t\t\t// TODO: Migration\n\t\t\tif (file.s3) {\n\t\t\t\treturn file.s3.path + file._id;\n\t\t\t}\n\t\t};\n\n\t\tthis.getRedirectURL = function (file, forceDownload = false, callback) {\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t\tExpires: classOptions.URLExpiryTimeSpan,\n\t\t\t\tResponseContentDisposition: `${forceDownload ? 'attachment' : 'inline'}; filename=\"${encodeURI(file.name)}\"`,\n\t\t\t};\n\n\t\t\treturn s3.getSignedUrl('getObject', params, callback);\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the collection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = function (file, callback) {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.AmazonS3 = {\n\t\t\t\tpath: this.options.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name; // assign store to file\n\t\t\treturn this.getCollection().insert(file, callback);\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = function (fileId, callback) {\n\t\t\tconst file = this.getCollection().findOne({ _id: fileId });\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t};\n\n\t\t\ts3.deleteObject(params, (err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tSystemLogger.error(err);\n\t\t\t\t}\n\n\t\t\t\tcallback && callback(err, data);\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = function (fileId, file, options = {}) {\n\t\t\tconst params = {\n\t\t\t\tKey: this.getPath(file),\n\t\t\t};\n\n\t\t\tif (options.start && options.end) {\n\t\t\t\tparams.Range = `${options.start} - ${options.end}`;\n\t\t\t}\n\n\t\t\treturn s3.getObject(params).createReadStream();\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = function (fileId, file /* , options*/) {\n\t\t\tconst writeStream = new stream.PassThrough();\n\t\t\twriteStream.length = file.size;\n\n\t\t\twriteStream.on('newListener', (event, listener) => {\n\t\t\t\tif (event === 'finish') {\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\twriteStream.removeListener(event, listener);\n\t\t\t\t\t\twriteStream.on('real_finish', listener);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ts3.putObject(\n\t\t\t\t{\n\t\t\t\t\tKey: this.getPath(file),\n\t\t\t\t\tBody: writeStream,\n\t\t\t\t\tContentType: file.type,\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tSystemLogger.error(error);\n\t\t\t\t\t}\n\n\t\t\t\t\twriteStream.emit('real_finish');\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn writeStream;\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.AmazonS3 = AmazonS3Store;\n"]},"sourceType":"module","hash":"a89ed2eed5e862c18dd444329f83638bfc5ebb9f"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/autotranslate/server/deeplTranslate.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/autotranslate/server/deeplTranslate.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/autotranslate/server/deeplTranslate.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/autotranslate/server/deeplTranslate.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/autotranslate/server/deeplTranslate.js"}},"code":"let TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 0);\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 2);\nlet TranslationProviderRegistry, AutoTranslate;\nmodule.link(\"./autotranslate\", {\n  TranslationProviderRegistry(v) {\n    TranslationProviderRegistry = v;\n  },\n\n  AutoTranslate(v) {\n    AutoTranslate = v;\n  }\n\n}, 3);\nlet SystemLogger;\nmodule.link(\"../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\n\n/**\n * DeepL translation service provider class representation.\n * Encapsulates the service provider settings and information.\n * Provides languages supported by the service provider.\n * Resolves API call to service provider to resolve the translation request.\n * @class\n * @augments AutoTranslate\n */\nclass DeeplAutoTranslate extends AutoTranslate {\n  /**\n   * setup api reference to deepl translate to be used as message translation provider.\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.name = 'deepl-translate';\n    this.apiEndPointUrl = 'https://api.deepl.com/v2/translate'; // Get the service provide API key.\n\n    settings.watch('AutoTranslate_DeepLAPIKey', value => {\n      this.apiKey = value;\n    });\n  }\n  /**\n   * Returns metadata information about the service provide\n   * @private implements super abstract method.\n   * @return {object}\n   */\n\n\n  _getProviderMetadata() {\n    return {\n      name: this.name,\n      displayName: TAPi18n.__('AutoTranslate_DeepL'),\n      settings: this._getSettings()\n    };\n  }\n  /**\n   * Returns necessary settings information about the translation service provider.\n   * @private implements super abstract method.\n   * @return {object}\n   */\n\n\n  _getSettings() {\n    return {\n      apiKey: this.apiKey,\n      apiEndPointUrl: this.apiEndPointUrl\n    };\n  }\n  /**\n   * Returns supported languages for translation by the active service provider.\n   * Deepl does not provide an endpoint yet to retrieve the supported languages.\n   * So each supported languages are explicitly maintained.\n   * @private implements super abstract method.\n   * @param {string} target\n   * @returns {object} code : value pair\n   */\n\n\n  getSupportedLanguages(target) {\n    if (!this.apiKey) {\n      return;\n    }\n\n    if (this.supportedLanguages[target]) {\n      return this.supportedLanguages[target];\n    }\n\n    this.supportedLanguages[target] = [{\n      language: 'bg',\n      name: TAPi18n.__('Language_Bulgarian', {\n        lng: target\n      })\n    }, {\n      language: 'cs',\n      name: TAPi18n.__('Language_Czech', {\n        lng: target\n      })\n    }, {\n      language: 'da',\n      name: TAPi18n.__('Language_Danish', {\n        lng: target\n      })\n    }, {\n      language: 'de',\n      name: TAPi18n.__('Language_German', {\n        lng: target\n      })\n    }, {\n      language: 'el',\n      name: TAPi18n.__('Language_Greek', {\n        lng: target\n      })\n    }, {\n      language: 'en',\n      name: TAPi18n.__('Language_English', {\n        lng: target\n      })\n    }, {\n      language: 'es',\n      name: TAPi18n.__('Language_Spanish', {\n        lng: target\n      })\n    }, {\n      language: 'et',\n      name: TAPi18n.__('Language_Estonian', {\n        lng: target\n      })\n    }, {\n      language: 'fi',\n      name: TAPi18n.__('Language_Finnish', {\n        lng: target\n      })\n    }, {\n      language: 'fr',\n      name: TAPi18n.__('Language_French', {\n        lng: target\n      })\n    }, {\n      language: 'hu',\n      name: TAPi18n.__('Language_Hungarian', {\n        lng: target\n      })\n    }, {\n      language: 'it',\n      name: TAPi18n.__('Language_Italian', {\n        lng: target\n      })\n    }, {\n      language: 'ja',\n      name: TAPi18n.__('Language_Japanese', {\n        lng: target\n      })\n    }, {\n      language: 'lt',\n      name: TAPi18n.__('Language_Lithuanian', {\n        lng: target\n      })\n    }, {\n      language: 'lv',\n      name: TAPi18n.__('Language_Latvian', {\n        lng: target\n      })\n    }, {\n      language: 'nl',\n      name: TAPi18n.__('Language_Dutch', {\n        lng: target\n      })\n    }, {\n      language: 'pl',\n      name: TAPi18n.__('Language_Polish', {\n        lng: target\n      })\n    }, {\n      language: 'pt',\n      name: TAPi18n.__('Language_Portuguese', {\n        lng: target\n      })\n    }, {\n      language: 'ro',\n      name: TAPi18n.__('Language_Romanian', {\n        lng: target\n      })\n    }, {\n      language: 'ru',\n      name: TAPi18n.__('Language_Russian', {\n        lng: target\n      })\n    }, {\n      language: 'sk',\n      name: TAPi18n.__('Language_Slovak', {\n        lng: target\n      })\n    }, {\n      language: 'sl',\n      name: TAPi18n.__('Language_Slovenian', {\n        lng: target\n      })\n    }, {\n      language: 'sv',\n      name: TAPi18n.__('Language_Swedish', {\n        lng: target\n      })\n    }, {\n      language: 'zh',\n      name: TAPi18n.__('Language_Chinese', {\n        lng: target\n      })\n    }];\n    return this.supportedLanguages[target];\n  }\n  /**\n   * Send Request REST API call to the service provider.\n   * Returns translated message for each target language in target languages.\n   * @private\n   * @param {object} message\n   * @param {object} targetLanguages\n   * @returns {object} translations: Translated messages for each language\n   */\n\n\n  _translateMessage(message, targetLanguages) {\n    const translations = {};\n    let msgs = message.msg.split('\\n');\n    msgs = msgs.map(msg => encodeURIComponent(msg));\n    const query = \"text=\".concat(msgs.join('&text='));\n    const supportedLanguages = this.getSupportedLanguages('en');\n    targetLanguages.forEach(language => {\n      if (language.indexOf('-') !== -1 && !_.findWhere(supportedLanguages, {\n        language\n      })) {\n        language = language.substr(0, 2);\n      }\n\n      try {\n        const result = HTTP.get(this.apiEndPointUrl, {\n          params: {\n            auth_key: this.apiKey,\n            target_lang: language\n          },\n          query\n        });\n\n        if (result.statusCode === 200 && result.data && result.data.translations && Array.isArray(result.data.translations) && result.data.translations.length > 0) {\n          // store translation only when the source and target language are different.\n          // multiple lines might contain different languages => Mix the text between source and detected target if neccessary\n          const translatedText = result.data.translations.map((translation, index) => translation.detected_source_language !== language ? translation.text : msgs[index]).join('\\n');\n          translations[language] = this.deTokenize(Object.assign({}, message, {\n            msg: translatedText\n          }));\n        }\n      } catch (e) {\n        SystemLogger.error('Error translating message', e);\n      }\n    });\n    return translations;\n  }\n  /**\n   * Returns translated message attachment description in target languages.\n   * @private\n   * @param {object} attachment\n   * @param {object} targetLanguages\n   * @returns {object} translated messages for each target language\n   */\n\n\n  _translateAttachmentDescriptions(attachment, targetLanguages) {\n    const translations = {};\n    const query = \"text=\".concat(encodeURIComponent(attachment.description || attachment.text));\n    const supportedLanguages = this.getSupportedLanguages('en');\n    targetLanguages.forEach(language => {\n      if (language.indexOf('-') !== -1 && !_.findWhere(supportedLanguages, {\n        language\n      })) {\n        language = language.substr(0, 2);\n      }\n\n      try {\n        const result = HTTP.get(this.apiEndPointUrl, {\n          params: {\n            auth_key: this.apiKey,\n            target_lang: language\n          },\n          query\n        });\n\n        if (result.statusCode === 200 && result.data && result.data.translations && Array.isArray(result.data.translations) && result.data.translations.length > 0) {\n          if (result.data.translations.map(translation => translation.detected_source_language).join() !== language) {\n            translations[language] = result.data.translations.map(translation => translation.text);\n          }\n        }\n      } catch (e) {\n        SystemLogger.error('Error translating message attachment', e);\n      }\n    });\n    return translations;\n  }\n\n} // Register DeepL translation provider to the registry.\n\n\nTranslationProviderRegistry.registerProvider(new DeeplAutoTranslate());","map":{"version":3,"sources":["app/autotranslate/server/deeplTranslate.js"],"names":["TAPi18n","module","link","v","HTTP","_","default","TranslationProviderRegistry","AutoTranslate","SystemLogger","settings","DeeplAutoTranslate","constructor","name","apiEndPointUrl","watch","value","apiKey","_getProviderMetadata","displayName","__","_getSettings","getSupportedLanguages","target","supportedLanguages","language","lng","_translateMessage","message","targetLanguages","translations","msgs","msg","split","map","encodeURIComponent","query","join","forEach","indexOf","findWhere","substr","result","get","params","auth_key","target_lang","statusCode","data","Array","isArray","length","translatedText","translation","index","detected_source_language","text","deTokenize","Object","assign","e","error","_translateAttachmentDescriptions","attachment","description","registerProvider"],"mappings":"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","sourcesContent":["/**\n * @author Vigneshwaran Odayappan <vickyokrm@gmail.com>\n */\n\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { HTTP } from 'meteor/http';\nimport _ from 'underscore';\n\nimport { TranslationProviderRegistry, AutoTranslate } from './autotranslate';\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { settings } from '../../settings';\n\n/**\n * DeepL translation service provider class representation.\n * Encapsulates the service provider settings and information.\n * Provides languages supported by the service provider.\n * Resolves API call to service provider to resolve the translation request.\n * @class\n * @augments AutoTranslate\n */\nclass DeeplAutoTranslate extends AutoTranslate {\n\t/**\n\t * setup api reference to deepl translate to be used as message translation provider.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tthis.name = 'deepl-translate';\n\t\tthis.apiEndPointUrl = 'https://api.deepl.com/v2/translate';\n\t\t// Get the service provide API key.\n\t\tsettings.watch('AutoTranslate_DeepLAPIKey', (value) => {\n\t\t\tthis.apiKey = value;\n\t\t});\n\t}\n\n\t/**\n\t * Returns metadata information about the service provide\n\t * @private implements super abstract method.\n\t * @return {object}\n\t */\n\t_getProviderMetadata() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tdisplayName: TAPi18n.__('AutoTranslate_DeepL'),\n\t\t\tsettings: this._getSettings(),\n\t\t};\n\t}\n\n\t/**\n\t * Returns necessary settings information about the translation service provider.\n\t * @private implements super abstract method.\n\t * @return {object}\n\t */\n\t_getSettings() {\n\t\treturn {\n\t\t\tapiKey: this.apiKey,\n\t\t\tapiEndPointUrl: this.apiEndPointUrl,\n\t\t};\n\t}\n\n\t/**\n\t * Returns supported languages for translation by the active service provider.\n\t * Deepl does not provide an endpoint yet to retrieve the supported languages.\n\t * So each supported languages are explicitly maintained.\n\t * @private implements super abstract method.\n\t * @param {string} target\n\t * @returns {object} code : value pair\n\t */\n\tgetSupportedLanguages(target) {\n\t\tif (!this.apiKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.supportedLanguages[target]) {\n\t\t\treturn this.supportedLanguages[target];\n\t\t}\n\t\tthis.supportedLanguages[target] = [\n\t\t\t{\n\t\t\t\tlanguage: 'bg',\n\t\t\t\tname: TAPi18n.__('Language_Bulgarian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'cs',\n\t\t\t\tname: TAPi18n.__('Language_Czech', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'da',\n\t\t\t\tname: TAPi18n.__('Language_Danish', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'de',\n\t\t\t\tname: TAPi18n.__('Language_German', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'el',\n\t\t\t\tname: TAPi18n.__('Language_Greek', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'en',\n\t\t\t\tname: TAPi18n.__('Language_English', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'es',\n\t\t\t\tname: TAPi18n.__('Language_Spanish', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'et',\n\t\t\t\tname: TAPi18n.__('Language_Estonian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'fi',\n\t\t\t\tname: TAPi18n.__('Language_Finnish', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'fr',\n\t\t\t\tname: TAPi18n.__('Language_French', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'hu',\n\t\t\t\tname: TAPi18n.__('Language_Hungarian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'it',\n\t\t\t\tname: TAPi18n.__('Language_Italian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'ja',\n\t\t\t\tname: TAPi18n.__('Language_Japanese', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'lt',\n\t\t\t\tname: TAPi18n.__('Language_Lithuanian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'lv',\n\t\t\t\tname: TAPi18n.__('Language_Latvian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'nl',\n\t\t\t\tname: TAPi18n.__('Language_Dutch', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'pl',\n\t\t\t\tname: TAPi18n.__('Language_Polish', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'pt',\n\t\t\t\tname: TAPi18n.__('Language_Portuguese', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'ro',\n\t\t\t\tname: TAPi18n.__('Language_Romanian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'ru',\n\t\t\t\tname: TAPi18n.__('Language_Russian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'sk',\n\t\t\t\tname: TAPi18n.__('Language_Slovak', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'sl',\n\t\t\t\tname: TAPi18n.__('Language_Slovenian', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'sv',\n\t\t\t\tname: TAPi18n.__('Language_Swedish', { lng: target }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlanguage: 'zh',\n\t\t\t\tname: TAPi18n.__('Language_Chinese', { lng: target }),\n\t\t\t},\n\t\t];\n\n\t\treturn this.supportedLanguages[target];\n\t}\n\n\t/**\n\t * Send Request REST API call to the service provider.\n\t * Returns translated message for each target language in target languages.\n\t * @private\n\t * @param {object} message\n\t * @param {object} targetLanguages\n\t * @returns {object} translations: Translated messages for each language\n\t */\n\t_translateMessage(message, targetLanguages) {\n\t\tconst translations = {};\n\t\tlet msgs = message.msg.split('\\n');\n\t\tmsgs = msgs.map((msg) => encodeURIComponent(msg));\n\t\tconst query = `text=${msgs.join('&text=')}`;\n\t\tconst supportedLanguages = this.getSupportedLanguages('en');\n\t\ttargetLanguages.forEach((language) => {\n\t\t\tif (language.indexOf('-') !== -1 && !_.findWhere(supportedLanguages, { language })) {\n\t\t\t\tlanguage = language.substr(0, 2);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst result = HTTP.get(this.apiEndPointUrl, {\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tauth_key: this.apiKey,\n\t\t\t\t\t\ttarget_lang: language,\n\t\t\t\t\t},\n\t\t\t\t\tquery,\n\t\t\t\t});\n\n\t\t\t\tif (\n\t\t\t\t\tresult.statusCode === 200 &&\n\t\t\t\t\tresult.data &&\n\t\t\t\t\tresult.data.translations &&\n\t\t\t\t\tArray.isArray(result.data.translations) &&\n\t\t\t\t\tresult.data.translations.length > 0\n\t\t\t\t) {\n\t\t\t\t\t// store translation only when the source and target language are different.\n\t\t\t\t\t// multiple lines might contain different languages => Mix the text between source and detected target if neccessary\n\t\t\t\t\tconst translatedText = result.data.translations\n\t\t\t\t\t\t.map((translation, index) => (translation.detected_source_language !== language ? translation.text : msgs[index]))\n\t\t\t\t\t\t.join('\\n');\n\t\t\t\t\ttranslations[language] = this.deTokenize(Object.assign({}, message, { msg: translatedText }));\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tSystemLogger.error('Error translating message', e);\n\t\t\t}\n\t\t});\n\t\treturn translations;\n\t}\n\n\t/**\n\t * Returns translated message attachment description in target languages.\n\t * @private\n\t * @param {object} attachment\n\t * @param {object} targetLanguages\n\t * @returns {object} translated messages for each target language\n\t */\n\t_translateAttachmentDescriptions(attachment, targetLanguages) {\n\t\tconst translations = {};\n\t\tconst query = `text=${encodeURIComponent(attachment.description || attachment.text)}`;\n\t\tconst supportedLanguages = this.getSupportedLanguages('en');\n\t\ttargetLanguages.forEach((language) => {\n\t\t\tif (language.indexOf('-') !== -1 && !_.findWhere(supportedLanguages, { language })) {\n\t\t\t\tlanguage = language.substr(0, 2);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst result = HTTP.get(this.apiEndPointUrl, {\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tauth_key: this.apiKey,\n\t\t\t\t\t\ttarget_lang: language,\n\t\t\t\t\t},\n\t\t\t\t\tquery,\n\t\t\t\t});\n\t\t\t\tif (\n\t\t\t\t\tresult.statusCode === 200 &&\n\t\t\t\t\tresult.data &&\n\t\t\t\t\tresult.data.translations &&\n\t\t\t\t\tArray.isArray(result.data.translations) &&\n\t\t\t\t\tresult.data.translations.length > 0\n\t\t\t\t) {\n\t\t\t\t\tif (result.data.translations.map((translation) => translation.detected_source_language).join() !== language) {\n\t\t\t\t\t\ttranslations[language] = result.data.translations.map((translation) => translation.text);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tSystemLogger.error('Error translating message attachment', e);\n\t\t\t}\n\t\t});\n\t\treturn translations;\n\t}\n}\n\n// Register DeepL translation provider to the registry.\nTranslationProviderRegistry.registerProvider(new DeeplAutoTranslate());\n"]},"sourceType":"module","hash":"04293d9fec0a9705210e0f2cf2c3986b274824fa"}

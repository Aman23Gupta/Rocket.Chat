{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/setUserActiveStatus.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/setUserActiveStatus.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/setUserActiveStatus.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/setUserActiveStatus.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/setUserActiveStatus.js"}},"code":"module.export({\n  setUserActiveStatus: () => setUserActiveStatus\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet Mailer;\nmodule.link(\"../../../mailer\", {\n  \"*\"(v) {\n    Mailer = v;\n  }\n\n}, 3);\nlet Users, Subscriptions, Rooms;\nmodule.link(\"../../../models\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 6);\nlet relinquishRoomOwnerships;\nmodule.link(\"./relinquishRoomOwnerships\", {\n  relinquishRoomOwnerships(v) {\n    relinquishRoomOwnerships = v;\n  }\n\n}, 7);\nlet closeOmnichannelConversations;\nmodule.link(\"./closeOmnichannelConversations\", {\n  closeOmnichannelConversations(v) {\n    closeOmnichannelConversations = v;\n  }\n\n}, 8);\nlet shouldRemoveOrChangeOwner, getSubscribedRoomsForUserWithDetails;\nmodule.link(\"./getRoomsWithSingleOwner\", {\n  shouldRemoveOrChangeOwner(v) {\n    shouldRemoveOrChangeOwner = v;\n  },\n\n  getSubscribedRoomsForUserWithDetails(v) {\n    getSubscribedRoomsForUserWithDetails = v;\n  }\n\n}, 9);\nlet getUserSingleOwnedRooms;\nmodule.link(\"./getUserSingleOwnedRooms\", {\n  getUserSingleOwnedRooms(v) {\n    getUserSingleOwnedRooms = v;\n  }\n\n}, 10);\n\nfunction reactivateDirectConversations(userId) {\n  // since both users can be deactivated at the same time, we should just reactivate rooms if both users are active\n  // for that, we need to fetch the direct messages, fetch the users involved and then the ids of rooms we can reactivate\n  const directConversations = Rooms.getDirectConversationsByUserId(userId, {\n    projection: {\n      _id: 1,\n      uids: 1\n    }\n  }).fetch();\n  const userIds = directConversations.reduce((acc, r) => acc.push(...r.uids) && acc, []);\n  const uniqueUserIds = [...new Set(userIds)];\n  const activeUsers = Users.findActiveByUserIds(uniqueUserIds, {\n    projection: {\n      _id: 1\n    }\n  }).fetch();\n  const activeUserIds = activeUsers.map(u => u._id);\n  const roomsToReactivate = directConversations.reduce((acc, room) => {\n    const otherUserId = room.uids.find(u => u !== userId);\n\n    if (activeUserIds.includes(otherUserId)) {\n      acc.push(room._id);\n    }\n\n    return acc;\n  }, []);\n  Rooms.setDmReadOnlyByUserId(userId, roomsToReactivate, false, false);\n}\n\nfunction setUserActiveStatus(userId, active) {\n  let confirmRelinquish = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  check(userId, String);\n  check(active, Boolean);\n  const user = Users.findOneById(userId);\n\n  if (!user) {\n    return false;\n  } // Users without username can't do anything, so there is no need to check for owned rooms\n\n\n  if (user.username != null && !active) {\n    const userAdmin = Users.findOneAdmin(userId);\n    const adminsCount = Users.findActiveUsersInRoles(['admin']).count();\n\n    if (userAdmin && adminsCount === 1) {\n      throw new Meteor.Error('error-action-not-allowed', 'Leaving the app without an active admin is not allowed', {\n        method: 'removeUserFromRole',\n        action: 'Remove_last_admin'\n      });\n    }\n\n    const subscribedRooms = getSubscribedRoomsForUserWithDetails(userId); // give omnichannel rooms a special treatment :)\n\n    const chatSubscribedRooms = subscribedRooms.filter(_ref => {\n      let {\n        t\n      } = _ref;\n      return t !== 'l';\n    });\n    const livechatSubscribedRooms = subscribedRooms.filter(_ref2 => {\n      let {\n        t\n      } = _ref2;\n      return t === 'l';\n    });\n\n    if (shouldRemoveOrChangeOwner(chatSubscribedRooms) && !confirmRelinquish) {\n      const rooms = getUserSingleOwnedRooms(chatSubscribedRooms);\n      throw new Meteor.Error('user-last-owner', '', rooms);\n    }\n\n    closeOmnichannelConversations(user, livechatSubscribedRooms);\n    Promise.await(relinquishRoomOwnerships(user, chatSubscribedRooms, false));\n  }\n\n  if (active && !user.active) {\n    callbacks.run('beforeActivateUser', user);\n  }\n\n  Users.setUserActive(userId, active);\n\n  if (active && !user.active) {\n    callbacks.run('afterActivateUser', user);\n  }\n\n  if (!active && user.active) {\n    callbacks.run('afterDeactivateUser', user);\n  }\n\n  if (user.username) {\n    Subscriptions.setArchivedByUsername(user.username, !active);\n  }\n\n  if (active === false) {\n    Users.unsetLoginTokens(userId);\n    Rooms.setDmReadOnlyByUserId(userId, undefined, true, false);\n  } else {\n    Users.unsetReason(userId);\n    reactivateDirectConversations(userId);\n  }\n\n  if (active && !settings.get('Accounts_Send_Email_When_Activating')) {\n    return true;\n  }\n\n  if (!active && !settings.get('Accounts_Send_Email_When_Deactivating')) {\n    return true;\n  }\n\n  const destinations = Array.isArray(user.emails) && user.emails.map(email => \"\".concat(user.name || user.username, \"<\").concat(email.address, \">\"));\n  const email = {\n    to: destinations,\n    from: settings.get('From_Email'),\n    subject: Accounts.emailTemplates.userActivated.subject({\n      active\n    }),\n    html: Accounts.emailTemplates.userActivated.html({\n      active,\n      name: user.name,\n      username: user.username\n    })\n  };\n  Mailer.sendNoWrap(email);\n}","map":{"version":3,"sources":["app/lib/server/functions/setUserActiveStatus.js"],"names":["module","export","setUserActiveStatus","Meteor","link","v","check","Accounts","Mailer","Users","Subscriptions","Rooms","settings","callbacks","relinquishRoomOwnerships","closeOmnichannelConversations","shouldRemoveOrChangeOwner","getSubscribedRoomsForUserWithDetails","getUserSingleOwnedRooms","reactivateDirectConversations","userId","directConversations","getDirectConversationsByUserId","projection","_id","uids","fetch","userIds","reduce","acc","r","push","uniqueUserIds","Set","activeUsers","findActiveByUserIds","activeUserIds","map","u","roomsToReactivate","room","otherUserId","find","includes","setDmReadOnlyByUserId","active","confirmRelinquish","String","Boolean","user","findOneById","username","userAdmin","findOneAdmin","adminsCount","findActiveUsersInRoles","count","Error","method","action","subscribedRooms","chatSubscribedRooms","filter","t","livechatSubscribedRooms","rooms","Promise","await","run","setUserActive","setArchivedByUsername","unsetLoginTokens","undefined","unsetReason","get","destinations","Array","isArray","emails","email","name","address","to","from","subject","emailTemplates","userActivated","html","sendNoWrap"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport * as Mailer from '../../../mailer';\nimport { Users, Subscriptions, Rooms } from '../../../models';\nimport { settings } from '../../../settings';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { relinquishRoomOwnerships } from './relinquishRoomOwnerships';\nimport { closeOmnichannelConversations } from './closeOmnichannelConversations';\nimport { shouldRemoveOrChangeOwner, getSubscribedRoomsForUserWithDetails } from './getRoomsWithSingleOwner';\nimport { getUserSingleOwnedRooms } from './getUserSingleOwnedRooms';\n\nfunction reactivateDirectConversations(userId) {\n\t// since both users can be deactivated at the same time, we should just reactivate rooms if both users are active\n\t// for that, we need to fetch the direct messages, fetch the users involved and then the ids of rooms we can reactivate\n\tconst directConversations = Rooms.getDirectConversationsByUserId(userId, {\n\t\tprojection: { _id: 1, uids: 1 },\n\t}).fetch();\n\tconst userIds = directConversations.reduce((acc, r) => acc.push(...r.uids) && acc, []);\n\tconst uniqueUserIds = [...new Set(userIds)];\n\tconst activeUsers = Users.findActiveByUserIds(uniqueUserIds, { projection: { _id: 1 } }).fetch();\n\tconst activeUserIds = activeUsers.map((u) => u._id);\n\tconst roomsToReactivate = directConversations.reduce((acc, room) => {\n\t\tconst otherUserId = room.uids.find((u) => u !== userId);\n\t\tif (activeUserIds.includes(otherUserId)) {\n\t\t\tacc.push(room._id);\n\t\t}\n\t\treturn acc;\n\t}, []);\n\n\tRooms.setDmReadOnlyByUserId(userId, roomsToReactivate, false, false);\n}\n\nexport function setUserActiveStatus(userId, active, confirmRelinquish = false) {\n\tcheck(userId, String);\n\tcheck(active, Boolean);\n\n\tconst user = Users.findOneById(userId);\n\n\tif (!user) {\n\t\treturn false;\n\t}\n\n\t// Users without username can't do anything, so there is no need to check for owned rooms\n\tif (user.username != null && !active) {\n\t\tconst userAdmin = Users.findOneAdmin(userId);\n\t\tconst adminsCount = Users.findActiveUsersInRoles(['admin']).count();\n\t\tif (userAdmin && adminsCount === 1) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Leaving the app without an active admin is not allowed', {\n\t\t\t\tmethod: 'removeUserFromRole',\n\t\t\t\taction: 'Remove_last_admin',\n\t\t\t});\n\t\t}\n\n\t\tconst subscribedRooms = getSubscribedRoomsForUserWithDetails(userId);\n\t\t// give omnichannel rooms a special treatment :)\n\t\tconst chatSubscribedRooms = subscribedRooms.filter(({ t }) => t !== 'l');\n\t\tconst livechatSubscribedRooms = subscribedRooms.filter(({ t }) => t === 'l');\n\n\t\tif (shouldRemoveOrChangeOwner(chatSubscribedRooms) && !confirmRelinquish) {\n\t\t\tconst rooms = getUserSingleOwnedRooms(chatSubscribedRooms);\n\t\t\tthrow new Meteor.Error('user-last-owner', '', rooms);\n\t\t}\n\n\t\tcloseOmnichannelConversations(user, livechatSubscribedRooms);\n\t\tPromise.await(relinquishRoomOwnerships(user, chatSubscribedRooms, false));\n\t}\n\n\tif (active && !user.active) {\n\t\tcallbacks.run('beforeActivateUser', user);\n\t}\n\n\tUsers.setUserActive(userId, active);\n\n\tif (active && !user.active) {\n\t\tcallbacks.run('afterActivateUser', user);\n\t}\n\n\tif (!active && user.active) {\n\t\tcallbacks.run('afterDeactivateUser', user);\n\t}\n\n\tif (user.username) {\n\t\tSubscriptions.setArchivedByUsername(user.username, !active);\n\t}\n\n\tif (active === false) {\n\t\tUsers.unsetLoginTokens(userId);\n\t\tRooms.setDmReadOnlyByUserId(userId, undefined, true, false);\n\t} else {\n\t\tUsers.unsetReason(userId);\n\t\treactivateDirectConversations(userId);\n\t}\n\tif (active && !settings.get('Accounts_Send_Email_When_Activating')) {\n\t\treturn true;\n\t}\n\tif (!active && !settings.get('Accounts_Send_Email_When_Deactivating')) {\n\t\treturn true;\n\t}\n\n\tconst destinations = Array.isArray(user.emails) && user.emails.map((email) => `${user.name || user.username}<${email.address}>`);\n\n\tconst email = {\n\t\tto: destinations,\n\t\tfrom: settings.get('From_Email'),\n\t\tsubject: Accounts.emailTemplates.userActivated.subject({ active }),\n\t\thtml: Accounts.emailTemplates.userActivated.html({\n\t\t\tactive,\n\t\t\tname: user.name,\n\t\t\tusername: user.username,\n\t\t}),\n\t};\n\n\tMailer.sendNoWrap(email);\n}\n"]},"sourceType":"module","hash":"06b1e4238a577d8c4a6bdf8fb9855e7dafd4b740"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/lib/misc/transformMappedData.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/lib/misc/transformMappedData.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/lib/misc/transformMappedData.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/lib/misc/transformMappedData.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/lib/misc/transformMappedData.js"}},"code":"module.export({\n  transformMappedData: () => transformMappedData\n});\nlet cloneDeep;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    cloneDeep = v;\n  }\n\n}, 0);\n\nconst transformMappedData = (data, map) => {\n  const originalData = cloneDeep(data);\n  const transformedData = {};\n  Object.entries(map).forEach(_ref => {\n    let [to, from] = _ref;\n\n    if (typeof from === 'function') {\n      const result = from(originalData);\n\n      if (typeof result !== 'undefined') {\n        transformedData[to] = result;\n      }\n    } else if (typeof from === 'string') {\n      if (typeof originalData[from] !== 'undefined') {\n        transformedData[to] = originalData[from];\n      }\n\n      delete originalData[from];\n    }\n  });\n  transformedData._unmappedProperties_ = originalData;\n  return transformedData;\n};","map":{"version":3,"sources":["app/apps/lib/misc/transformMappedData.js"],"names":["module","export","transformMappedData","cloneDeep","link","default","v","data","map","originalData","transformedData","Object","entries","forEach","to","from","result","_unmappedProperties_"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,mBAAmB,EAAC,MAAIA;AAAzB,CAAd;AAA6D,IAAIC,SAAJ;AAAcH,MAAM,CAACI,IAAP,CAAY,kBAAZ,EAA+B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,SAAS,GAACG,CAAV;AAAY;;AAAxB,CAA/B,EAAyD,CAAzD;;AAgEpE,MAAMJ,mBAAmB,GAAG,CAACK,IAAD,EAAOC,GAAP,KAAe;AACjD,QAAMC,YAAY,GAAGN,SAAS,CAACI,IAAD,CAA9B;AACA,QAAMG,eAAe,GAAG,EAAxB;AAEAC,EAAAA,MAAM,CAACC,OAAP,CAAeJ,GAAf,EAAoBK,OAApB,CAA4B,QAAgB;AAAA,QAAf,CAACC,EAAD,EAAKC,IAAL,CAAe;;AAC3C,QAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC/B,YAAMC,MAAM,GAAGD,IAAI,CAACN,YAAD,CAAnB;;AAEA,UAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;AAClCN,QAAAA,eAAe,CAACI,EAAD,CAAf,GAAsBE,MAAtB;AACA;AACD,KAND,MAMO,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AACpC,UAAI,OAAON,YAAY,CAACM,IAAD,CAAnB,KAA8B,WAAlC,EAA+C;AAC9CL,QAAAA,eAAe,CAACI,EAAD,CAAf,GAAsBL,YAAY,CAACM,IAAD,CAAlC;AACA;;AACD,aAAON,YAAY,CAACM,IAAD,CAAnB;AACA;AACD,GAbD;AAeAL,EAAAA,eAAe,CAACO,oBAAhB,GAAuCR,YAAvC;AAEA,SAAOC,eAAP;AACA,CAtBM","sourcesContent":["import cloneDeep from 'lodash.clonedeep';\n\n/**\n * Transforms a `data` source object to another object,\n * essentially applying a to -> from mapping provided by\n * `map`. It does not mutate the `data` object.\n *\n * It also inserts in the `transformedObject` a new property\n * called `_unmappedProperties_` which contains properties from\n * the original `data` that have not been mapped to its transformed\n * counterpart. E.g.:\n *\n * ```javascript\n * const data = { _id: 'abcde123456', size: 10 };\n * const map = { id: '_id' }\n *\n * transformMappedData(data, map);\n * // { id: 'abcde123456', _unmappedProperties_: { size: 10 } }\n * ```\n *\n * In order to compute the unmapped properties, this function will\n * ignore any property on `data` that has been named on the \"from\" part\n * of the `map`, and will consider properties not mentioned as unmapped.\n *\n * You can also define the \"from\" part as a function, so you can derive a\n * new value for your property from the original `data`. This function will\n * receive a copy of the original `data` for it to calculate the value\n * for its \"to\" field. Please note that in this case `transformMappedData`\n * will not be able to determine the source field from your map, so it won't\n * ignore any field you've used to derive your new value. For that, you're\n * going to need to delete the value from the received parameter. E.g:\n *\n * ```javascript\n * const data = { _id: 'abcde123456', size: 10 };\n *\n * // It will look like the `size` property is not mapped\n * const map = {\n *     id: '_id',\n *     newSize: (data) => data.size + 10\n * };\n *\n * transformMappedData(data, map);\n * // { id: 'abcde123456', newSize: 20, _unmappedProperties_: { size: 10 } }\n *\n * // You need to explicitly remove it from the original `data`\n * const map = {\n *     id: '_id',\n *     newSize: (data) => {\n *         const result = data.size + 10;\n *         delete data.size;\n *         return result;\n *     }\n * };\n *\n * transformMappedData(data, map);\n * // { id: 'abcde123456', newSize: 20, _unmappedProperties_: {} }\n * ```\n *\n * @param Object data The data to be transformed\n * @param Object map The map with transformations to be applied\n *\n * @returns Object The data after transformations have been applied\n */\n\nexport const transformMappedData = (data, map) => {\n\tconst originalData = cloneDeep(data);\n\tconst transformedData = {};\n\n\tObject.entries(map).forEach(([to, from]) => {\n\t\tif (typeof from === 'function') {\n\t\t\tconst result = from(originalData);\n\n\t\t\tif (typeof result !== 'undefined') {\n\t\t\t\ttransformedData[to] = result;\n\t\t\t}\n\t\t} else if (typeof from === 'string') {\n\t\t\tif (typeof originalData[from] !== 'undefined') {\n\t\t\t\ttransformedData[to] = originalData[from];\n\t\t\t}\n\t\t\tdelete originalData[from];\n\t\t}\n\t});\n\n\ttransformedData._unmappedProperties_ = originalData;\n\n\treturn transformedData;\n};\n"]},"sourceType":"module","hash":"e9bf24d75083080972e9cd77c894a77825143c3f"}

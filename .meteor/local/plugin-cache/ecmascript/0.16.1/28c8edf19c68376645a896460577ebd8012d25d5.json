{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterCreateRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/hooks/afterCreateRoom.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterCreateRoom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterCreateRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/hooks/afterCreateRoom.js"}},"code":"module.export({\n  doAfterCreateRoom: () => doAfterCreateRoom,\n  definition: () => definition\n});\nlet clientLogger;\nmodule.link(\"../lib/logger\", {\n  clientLogger(v) {\n    clientLogger = v;\n  }\n\n}, 0);\nlet FederationRoomEvents, Subscriptions, Users;\nmodule.link(\"../../../models/server\", {\n  FederationRoomEvents(v) {\n    FederationRoomEvents = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet normalizers;\nmodule.link(\"../normalizers\", {\n  normalizers(v) {\n    normalizers = v;\n  }\n\n}, 2);\nlet deleteRoom;\nmodule.link(\"../../../lib/server/functions\", {\n  deleteRoom(v) {\n    deleteRoom = v;\n  }\n\n}, 3);\nlet getFederationDomain;\nmodule.link(\"../lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 4);\nlet dispatchEvents;\nmodule.link(\"../handler\", {\n  dispatchEvents(v) {\n    dispatchEvents = v;\n  }\n\n}, 5);\nlet checkRoomType, checkRoomDomainsLength;\nmodule.link(\"../functions/helpers\", {\n  checkRoomType(v) {\n    checkRoomType = v;\n  },\n\n  checkRoomDomainsLength(v) {\n    checkRoomDomainsLength = v;\n  }\n\n}, 6);\n\nfunction doAfterCreateRoom(room, users, subscriptions) {\n  return Promise.asyncApply(() => {\n    const normalizedUsers = []; //\n    // Add user events\n    //\n\n    const addUserEvents = [];\n\n    for (const user of users) {\n      /* eslint-disable no-await-in-loop */\n      const subscription = subscriptions[user._id];\n      const normalizedSourceUser = normalizers.normalizeUser(user);\n      const normalizedSourceSubscription = normalizers.normalizeSubscription(subscription);\n      normalizedUsers.push(normalizedSourceUser);\n      const addUserEvent = Promise.await(FederationRoomEvents.createAddUserEvent(getFederationDomain(), room._id, normalizedSourceUser, normalizedSourceSubscription));\n      addUserEvents.push(addUserEvent);\n      /* eslint-enable no-await-in-loop */\n    } //\n    // Genesis\n    //\n    // Normalize room\n\n\n    const normalizedRoom = normalizers.normalizeRoom(room, normalizedUsers); // Check if the number of domains is allowed\n\n    if (!checkRoomDomainsLength(normalizedRoom.federation.domains)) {\n      throw new Error(\"Cannot federate rooms with more than \".concat(process.env.FEDERATED_DOMAINS_LENGTH || 10, \" domains\"));\n    } // Ensure a genesis event for this room\n\n\n    const genesisEvent = Promise.await(FederationRoomEvents.createGenesisEvent(getFederationDomain(), normalizedRoom)); // Dispatch the events\n\n    Promise.await(dispatchEvents(normalizedRoom.federation.domains, [genesisEvent, ...addUserEvents]));\n  });\n}\n\nfunction afterCreateRoom(roomOwner, room) {\n  return Promise.asyncApply(() => {\n    // If the room is federated, ignore\n    if (room.federation) {\n      return roomOwner;\n    } // Find all subscriptions of this room\n\n\n    let subscriptions = Subscriptions.findByRoomIdWhenUsernameExists(room._id).fetch();\n    subscriptions = subscriptions.reduce((acc, s) => {\n      acc[s.u._id] = s;\n      return acc;\n    }, {}); // Get all user ids\n\n    const userIds = Object.keys(subscriptions); // Load all the users\n\n    const users = Users.findUsersWithUsernameByIds(userIds).fetch(); // Check if there is a federated user on this room\n\n    const hasFederatedUser = users.find(u => u.username.indexOf('@') !== -1); // If there are not federated users on this room, ignore it\n\n    if (!hasFederatedUser) {\n      return roomOwner;\n    }\n\n    try {\n      // If the room is not on the allowed types, ignore\n      if (!checkRoomType(room)) {\n        throw new Error('Channels cannot be federated');\n      }\n\n      clientLogger.debug({\n        msg: 'afterCreateRoom',\n        roomOwner,\n        room\n      });\n      Promise.await(doAfterCreateRoom(room, users, subscriptions));\n    } catch (err) {\n      deleteRoom(room._id);\n      clientLogger.error({\n        msg: 'afterCreateRoom => Could not create federated room:',\n        err\n      });\n    }\n\n    return room;\n  });\n}\n\nconst definition = {\n  hook: 'afterCreateRoom',\n  callback: (roomOwner, room) => Promise.await(afterCreateRoom(roomOwner, room)),\n  id: 'federation-after-create-room'\n};","map":{"version":3,"sources":["app/federation/server/hooks/afterCreateRoom.js"],"names":["module","export","doAfterCreateRoom","definition","clientLogger","link","v","FederationRoomEvents","Subscriptions","Users","normalizers","deleteRoom","getFederationDomain","dispatchEvents","checkRoomType","checkRoomDomainsLength","room","users","subscriptions","normalizedUsers","addUserEvents","user","subscription","_id","normalizedSourceUser","normalizeUser","normalizedSourceSubscription","normalizeSubscription","push","addUserEvent","createAddUserEvent","normalizedRoom","normalizeRoom","federation","domains","Error","process","env","FEDERATED_DOMAINS_LENGTH","genesisEvent","createGenesisEvent","afterCreateRoom","roomOwner","findByRoomIdWhenUsernameExists","fetch","reduce","acc","s","u","userIds","Object","keys","findUsersWithUsernameByIds","hasFederatedUser","find","username","indexOf","debug","msg","err","error","hook","callback","Promise","await","id"],"mappings":"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","sourcesContent":["import { clientLogger } from '../lib/logger';\nimport { FederationRoomEvents, Subscriptions, Users } from '../../../models/server';\nimport { normalizers } from '../normalizers';\nimport { deleteRoom } from '../../../lib/server/functions';\nimport { getFederationDomain } from '../lib/getFederationDomain';\nimport { dispatchEvents } from '../handler';\nimport { checkRoomType, checkRoomDomainsLength } from '../functions/helpers';\n\nexport async function doAfterCreateRoom(room, users, subscriptions) {\n\tconst normalizedUsers = [];\n\n\t//\n\t// Add user events\n\t//\n\tconst addUserEvents = [];\n\n\tfor (const user of users) {\n\t\t/* eslint-disable no-await-in-loop */\n\n\t\tconst subscription = subscriptions[user._id];\n\n\t\tconst normalizedSourceUser = normalizers.normalizeUser(user);\n\t\tconst normalizedSourceSubscription = normalizers.normalizeSubscription(subscription);\n\n\t\tnormalizedUsers.push(normalizedSourceUser);\n\n\t\tconst addUserEvent = await FederationRoomEvents.createAddUserEvent(\n\t\t\tgetFederationDomain(),\n\t\t\troom._id,\n\t\t\tnormalizedSourceUser,\n\t\t\tnormalizedSourceSubscription,\n\t\t);\n\n\t\taddUserEvents.push(addUserEvent);\n\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\t//\n\t// Genesis\n\t//\n\n\t// Normalize room\n\tconst normalizedRoom = normalizers.normalizeRoom(room, normalizedUsers);\n\n\t// Check if the number of domains is allowed\n\tif (!checkRoomDomainsLength(normalizedRoom.federation.domains)) {\n\t\tthrow new Error(`Cannot federate rooms with more than ${process.env.FEDERATED_DOMAINS_LENGTH || 10} domains`);\n\t}\n\n\t// Ensure a genesis event for this room\n\tconst genesisEvent = await FederationRoomEvents.createGenesisEvent(getFederationDomain(), normalizedRoom);\n\n\t// Dispatch the events\n\tawait dispatchEvents(normalizedRoom.federation.domains, [genesisEvent, ...addUserEvents]);\n}\n\nasync function afterCreateRoom(roomOwner, room) {\n\t// If the room is federated, ignore\n\tif (room.federation) {\n\t\treturn roomOwner;\n\t}\n\n\t// Find all subscriptions of this room\n\tlet subscriptions = Subscriptions.findByRoomIdWhenUsernameExists(room._id).fetch();\n\tsubscriptions = subscriptions.reduce((acc, s) => {\n\t\tacc[s.u._id] = s;\n\n\t\treturn acc;\n\t}, {});\n\n\t// Get all user ids\n\tconst userIds = Object.keys(subscriptions);\n\n\t// Load all the users\n\tconst users = Users.findUsersWithUsernameByIds(userIds).fetch();\n\n\t// Check if there is a federated user on this room\n\tconst hasFederatedUser = users.find((u) => u.username.indexOf('@') !== -1);\n\n\t// If there are not federated users on this room, ignore it\n\tif (!hasFederatedUser) {\n\t\treturn roomOwner;\n\t}\n\n\ttry {\n\t\t// If the room is not on the allowed types, ignore\n\t\tif (!checkRoomType(room)) {\n\t\t\tthrow new Error('Channels cannot be federated');\n\t\t}\n\n\t\tclientLogger.debug({ msg: 'afterCreateRoom', roomOwner, room });\n\n\t\tawait doAfterCreateRoom(room, users, subscriptions);\n\t} catch (err) {\n\t\tdeleteRoom(room._id);\n\n\t\tclientLogger.error({ msg: 'afterCreateRoom => Could not create federated room:', err });\n\t}\n\n\treturn room;\n}\n\nexport const definition = {\n\thook: 'afterCreateRoom',\n\tcallback: (roomOwner, room) => Promise.await(afterCreateRoom(roomOwner, room)),\n\tid: 'federation-after-create-room',\n};\n"]},"sourceType":"module","hash":"28c8edf19c68376645a896460577ebd8012d25d5"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/logs-storage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/storage/logs-storage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/logs-storage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/storage/logs-storage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/storage/logs-storage.js"}},"code":"module.export({\n  AppRealLogsStorage: () => AppRealLogsStorage\n});\nlet AppConsole;\nmodule.link(\"@rocket.chat/apps-engine/server/logging\", {\n  AppConsole(v) {\n    AppConsole = v;\n  }\n\n}, 0);\nlet AppLogStorage;\nmodule.link(\"@rocket.chat/apps-engine/server/storage\", {\n  AppLogStorage(v) {\n    AppLogStorage = v;\n  }\n\n}, 1);\nlet InstanceStatus;\nmodule.link(\"meteor/konecty:multiple-instances-status\", {\n  InstanceStatus(v) {\n    InstanceStatus = v;\n  }\n\n}, 2);\n\nclass AppRealLogsStorage extends AppLogStorage {\n  constructor(model) {\n    super('mongodb');\n    this.db = model;\n  }\n\n  find() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new Promise((resolve, reject) => {\n      let docs;\n\n      try {\n        docs = this.db.find(...args).fetch();\n      } catch (e) {\n        return reject(e);\n      }\n\n      resolve(docs);\n    });\n  }\n\n  storeEntries(appId, logger) {\n    return new Promise((resolve, reject) => {\n      const item = AppConsole.toStorageEntry(appId, logger);\n      item.instanceId = InstanceStatus.id();\n\n      try {\n        const id = this.db.insert(item);\n        resolve(this.db.findOneById(id));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  getEntriesFor(appId) {\n    return new Promise((resolve, reject) => {\n      let docs;\n\n      try {\n        docs = this.db.find({\n          appId\n        }).fetch();\n      } catch (e) {\n        return reject(e);\n      }\n\n      resolve(docs);\n    });\n  }\n\n  removeEntriesFor(appId) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.db.remove({\n          appId\n        });\n      } catch (e) {\n        return reject(e);\n      }\n\n      resolve();\n    });\n  }\n\n}","map":{"version":3,"sources":["app/apps/server/storage/logs-storage.js"],"names":["module","export","AppRealLogsStorage","AppConsole","link","v","AppLogStorage","InstanceStatus","constructor","model","db","find","args","Promise","resolve","reject","docs","fetch","e","storeEntries","appId","logger","item","toStorageEntry","instanceId","id","insert","findOneById","getEntriesFor","removeEntriesFor","remove"],"mappings":"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","sourcesContent":["import { AppConsole } from '@rocket.chat/apps-engine/server/logging';\nimport { AppLogStorage } from '@rocket.chat/apps-engine/server/storage';\nimport { InstanceStatus } from 'meteor/konecty:multiple-instances-status';\n\nexport class AppRealLogsStorage extends AppLogStorage {\n\tconstructor(model) {\n\t\tsuper('mongodb');\n\t\tthis.db = model;\n\t}\n\n\tfind(...args) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet docs;\n\n\t\t\ttry {\n\t\t\t\tdocs = this.db.find(...args).fetch();\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tresolve(docs);\n\t\t});\n\t}\n\n\tstoreEntries(appId, logger) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst item = AppConsole.toStorageEntry(appId, logger);\n\n\t\t\titem.instanceId = InstanceStatus.id();\n\n\t\t\ttry {\n\t\t\t\tconst id = this.db.insert(item);\n\n\t\t\t\tresolve(this.db.findOneById(id));\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetEntriesFor(appId) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet docs;\n\n\t\t\ttry {\n\t\t\t\tdocs = this.db.find({ appId }).fetch();\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tresolve(docs);\n\t\t});\n\t}\n\n\tremoveEntriesFor(appId) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.db.remove({ appId });\n\t\t\t} catch (e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\t}\n}\n"]},"sourceType":"module","hash":"94416bc7cb06fd37baa2b23a7186bda50058e4e4"}

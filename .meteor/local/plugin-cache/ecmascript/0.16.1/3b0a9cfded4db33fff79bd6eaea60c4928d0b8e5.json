{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/search/server/model/provider.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/search/server/model/provider.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/search/server/model/provider.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/search/server/model/provider.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/search/server/model/provider.js"}},"code":"module.export({\n  default: () => SearchProvider\n});\nlet SearchLogger;\nmodule.link(\"../logger/logger\", {\n  default(v) {\n    SearchLogger = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\n\n/**\n * Setting Object in order to manage settings loading for providers and admin ui display\n */\nclass Setting {\n  constructor(basekey, key, type, defaultValue) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    this._basekey = basekey;\n    this.key = key;\n    this.type = type;\n    this.defaultValue = defaultValue;\n    this.options = options;\n    this._value = undefined;\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Id is generated based on baseKey and key\n   * @returns {string}\n   */\n\n\n  get id() {\n    return \"Search.\".concat(this._basekey, \".\").concat(this.key);\n  }\n\n  load() {\n    this._value = settings.get(this.id);\n\n    if (this._value === undefined) {\n      this._value = this.defaultValue;\n    }\n  }\n\n}\n/**\n * Settings Object allows to manage Setting Objects\n */\n\n\nclass Settings {\n  constructor(basekey) {\n    this.basekey = basekey;\n    this.settings = {};\n  }\n\n  add(key, type, defaultValue, options) {\n    this.settings[key] = new Setting(this.basekey, key, type, defaultValue, options);\n  }\n\n  list() {\n    return Object.keys(this.settings).map(key => this.settings[key]);\n  }\n\n  map() {\n    return this.settings;\n  }\n  /**\n   * return the value for key\n   * @param key\n   */\n\n\n  get(key) {\n    if (!this.settings[key]) {\n      throw new Error('Setting is not set');\n    }\n\n    return this.settings[key].value;\n  }\n  /**\n   * load currently stored values of all settings\n   */\n\n\n  load() {\n    Object.keys(this.settings).forEach(key => {\n      this.settings[key].load();\n    });\n  }\n\n}\n\nclass SearchProvider {\n  /**\n   * Create search provider, key must match /^[a-z0-9]+$/\n   * @param key\n   */\n  constructor(key) {\n    if (!key.match(/^[A-z0-9]+$/)) {\n      throw new Error(\"cannot instantiate provider: \".concat(key, \" does not match key-pattern\"));\n    }\n\n    SearchLogger.info(\"create search provider \".concat(key));\n    this._key = key;\n    this._settings = new Settings(key);\n  }\n  /* --- basic params ---*/\n\n\n  get key() {\n    return this._key;\n  }\n\n  get i18nLabel() {\n    return undefined;\n  }\n\n  get i18nDescription() {\n    return undefined;\n  }\n\n  get iconName() {\n    return 'magnifier';\n  }\n\n  get settings() {\n    return this._settings.list();\n  }\n\n  get settingsAsMap() {\n    return this._settings.map();\n  }\n  /* --- templates ---*/\n\n\n  get resultTemplate() {\n    return 'DefaultSearchResultTemplate';\n  }\n\n  get suggestionItemTemplate() {\n    return 'DefaultSuggestionItemTemplate';\n  }\n  /* --- search functions ---*/\n\n  /**\n   * Search using the current search provider and check if results are valid for the user. The search result has\n   * the format {messages:{start:0,numFound:1,docs:[{...}]},users:{...},rooms:{...}}\n   * @param text the search text\n   * @param context the context (uid, rid)\n   * @param payload custom payload (e.g. for paging)\n   * @param callback is used to return result an can be called with (error,result)\n   */\n\n\n  search(text, context, payload, callback) {\n    throw new Error('Function search has to be implemented');\n  }\n  /**\n   * Returns an ordered list of suggestions. The result should have at least the form [{text:string}]\n   * @param text\n   * @param context\n   * @param payload\n   * @param callback\n   */\n\n\n  suggest(text, context, payload, callback) {\n    callback(null, []);\n  }\n\n  get supportsSuggestions() {\n    return false;\n  }\n  /* --- triggers ---*/\n\n\n  on(name, value) {\n    return true;\n  }\n  /* --- livecycle ---*/\n\n\n  run(reason, callback) {\n    return new Promise((resolve, reject) => {\n      this._settings.load();\n\n      this.start(reason, resolve, reject);\n    });\n  }\n\n  start(reason, resolve) {\n    resolve();\n  }\n\n  stop(resolve) {\n    resolve();\n  }\n\n}","map":{"version":3,"sources":["app/search/server/model/provider.js"],"names":["module","export","default","SearchProvider","SearchLogger","link","v","settings","Setting","constructor","basekey","key","type","defaultValue","options","_basekey","_value","undefined","value","id","load","get","Settings","add","list","Object","keys","map","Error","forEach","match","info","_key","_settings","i18nLabel","i18nDescription","iconName","settingsAsMap","resultTemplate","suggestionItemTemplate","search","text","context","payload","callback","suggest","supportsSuggestions","on","name","run","reason","Promise","resolve","reject","start","stop"],"mappings":"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","sourcesContent":["/* eslint no-unused-vars: [2, { \"args\": \"none\" }]*/\nimport SearchLogger from '../logger/logger';\nimport { settings } from '../../../settings';\n\n/**\n * Setting Object in order to manage settings loading for providers and admin ui display\n */\nclass Setting {\n\tconstructor(basekey, key, type, defaultValue, options = {}) {\n\t\tthis._basekey = basekey;\n\t\tthis.key = key;\n\t\tthis.type = type;\n\t\tthis.defaultValue = defaultValue;\n\t\tthis.options = options;\n\t\tthis._value = undefined;\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * Id is generated based on baseKey and key\n\t * @returns {string}\n\t */\n\tget id() {\n\t\treturn `Search.${this._basekey}.${this.key}`;\n\t}\n\n\tload() {\n\t\tthis._value = settings.get(this.id);\n\n\t\tif (this._value === undefined) {\n\t\t\tthis._value = this.defaultValue;\n\t\t}\n\t}\n}\n\n/**\n * Settings Object allows to manage Setting Objects\n */\nclass Settings {\n\tconstructor(basekey) {\n\t\tthis.basekey = basekey;\n\t\tthis.settings = {};\n\t}\n\n\tadd(key, type, defaultValue, options) {\n\t\tthis.settings[key] = new Setting(this.basekey, key, type, defaultValue, options);\n\t}\n\n\tlist() {\n\t\treturn Object.keys(this.settings).map((key) => this.settings[key]);\n\t}\n\n\tmap() {\n\t\treturn this.settings;\n\t}\n\n\t/**\n\t * return the value for key\n\t * @param key\n\t */\n\tget(key) {\n\t\tif (!this.settings[key]) {\n\t\t\tthrow new Error('Setting is not set');\n\t\t}\n\t\treturn this.settings[key].value;\n\t}\n\n\t/**\n\t * load currently stored values of all settings\n\t */\n\tload() {\n\t\tObject.keys(this.settings).forEach((key) => {\n\t\t\tthis.settings[key].load();\n\t\t});\n\t}\n}\n\nexport default class SearchProvider {\n\t/**\n\t * Create search provider, key must match /^[a-z0-9]+$/\n\t * @param key\n\t */\n\tconstructor(key) {\n\t\tif (!key.match(/^[A-z0-9]+$/)) {\n\t\t\tthrow new Error(`cannot instantiate provider: ${key} does not match key-pattern`);\n\t\t}\n\n\t\tSearchLogger.info(`create search provider ${key}`);\n\n\t\tthis._key = key;\n\t\tthis._settings = new Settings(key);\n\t}\n\n\t/* --- basic params ---*/\n\tget key() {\n\t\treturn this._key;\n\t}\n\n\tget i18nLabel() {\n\t\treturn undefined;\n\t}\n\n\tget i18nDescription() {\n\t\treturn undefined;\n\t}\n\n\tget iconName() {\n\t\treturn 'magnifier';\n\t}\n\n\tget settings() {\n\t\treturn this._settings.list();\n\t}\n\n\tget settingsAsMap() {\n\t\treturn this._settings.map();\n\t}\n\n\t/* --- templates ---*/\n\tget resultTemplate() {\n\t\treturn 'DefaultSearchResultTemplate';\n\t}\n\n\tget suggestionItemTemplate() {\n\t\treturn 'DefaultSuggestionItemTemplate';\n\t}\n\n\t/* --- search functions ---*/\n\t/**\n\t * Search using the current search provider and check if results are valid for the user. The search result has\n\t * the format {messages:{start:0,numFound:1,docs:[{...}]},users:{...},rooms:{...}}\n\t * @param text the search text\n\t * @param context the context (uid, rid)\n\t * @param payload custom payload (e.g. for paging)\n\t * @param callback is used to return result an can be called with (error,result)\n\t */\n\tsearch(text, context, payload, callback) {\n\t\tthrow new Error('Function search has to be implemented');\n\t}\n\n\t/**\n\t * Returns an ordered list of suggestions. The result should have at least the form [{text:string}]\n\t * @param text\n\t * @param context\n\t * @param payload\n\t * @param callback\n\t */\n\tsuggest(text, context, payload, callback) {\n\t\tcallback(null, []);\n\t}\n\n\tget supportsSuggestions() {\n\t\treturn false;\n\t}\n\n\t/* --- triggers ---*/\n\ton(name, value) {\n\t\treturn true;\n\t}\n\n\t/* --- livecycle ---*/\n\trun(reason, callback) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._settings.load();\n\t\t\tthis.start(reason, resolve, reject);\n\t\t});\n\t}\n\n\tstart(reason, resolve) {\n\t\tresolve();\n\t}\n\n\tstop(resolve) {\n\t\tresolve();\n\t}\n}\n"]},"sourceType":"module","hash":"3b0a9cfded4db33fff79bd6eaea60c4928d0b8e5"}

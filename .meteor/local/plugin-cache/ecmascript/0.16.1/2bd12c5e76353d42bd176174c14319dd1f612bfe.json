{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/analytics/departments.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/lib/analytics/departments.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/analytics/departments.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/analytics/departments.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/lib/analytics/departments.js"}},"code":"module.export({\n  findAllRoomsAsync: () => findAllRoomsAsync,\n  findAllAverageOfChatDurationTimeAsync: () => findAllAverageOfChatDurationTimeAsync,\n  findAllAverageServiceTimeAsync: () => findAllAverageServiceTimeAsync,\n  findAllServiceTimeAsync: () => findAllServiceTimeAsync,\n  findAllAverageWaitingTimeAsync: () => findAllAverageWaitingTimeAsync,\n  findAllNumberOfTransferredRoomsAsync: () => findAllNumberOfTransferredRoomsAsync,\n  findAllNumberOfAbandonedRoomsAsync: () => findAllNumberOfAbandonedRoomsAsync,\n  findPercentageOfAbandonedRoomsAsync: () => findPercentageOfAbandonedRoomsAsync,\n  findAllAverageOfChatDurationTime: () => findAllAverageOfChatDurationTime,\n  findAllAverageServiceTime: () => findAllAverageServiceTime,\n  findAllRooms: () => findAllRooms,\n  findAllServiceTime: () => findAllServiceTime,\n  findAllAverageWaitingTime: () => findAllAverageWaitingTime,\n  findAllNumberOfTransferredRooms: () => findAllNumberOfTransferredRooms,\n  findAllNumberOfAbandonedRooms: () => findAllNumberOfAbandonedRooms,\n  findPercentageOfAbandonedRooms: () => findPercentageOfAbandonedRooms\n});\nlet LivechatRooms, Messages;\nmodule.link(\"../../../../models/server/raw\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 0);\n\nconst findAllRoomsAsync = _ref => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    answered,\n    departmentId,\n    options = {}\n  } = _ref;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(LivechatRooms.findAllRooms({\n    start,\n    answered,\n    end,\n    departmentId,\n    onlyCount: true\n  }).toArray());\n  return {\n    departments: Promise.await(LivechatRooms.findAllRooms({\n      start,\n      answered,\n      end,\n      departmentId,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllAverageOfChatDurationTimeAsync = _ref2 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    departmentId,\n    options = {}\n  } = _ref2;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(LivechatRooms.findAllAverageOfChatDurationTime({\n    start,\n    end,\n    departmentId,\n    onlyCount: true\n  }).toArray());\n  return {\n    departments: Promise.await(LivechatRooms.findAllAverageOfChatDurationTime({\n      start,\n      end,\n      departmentId,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllAverageServiceTimeAsync = _ref3 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    departmentId,\n    options = {}\n  } = _ref3;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(LivechatRooms.findAllAverageOfServiceTime({\n    start,\n    end,\n    departmentId,\n    onlyCount: true\n  }).toArray());\n  return {\n    departments: Promise.await(LivechatRooms.findAllAverageOfServiceTime({\n      start,\n      end,\n      departmentId,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllServiceTimeAsync = _ref4 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    departmentId,\n    options = {}\n  } = _ref4;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(LivechatRooms.findAllServiceTime({\n    start,\n    end,\n    departmentId,\n    onlyCount: true\n  }).toArray());\n  return {\n    departments: Promise.await(LivechatRooms.findAllServiceTime({\n      start,\n      end,\n      departmentId,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllAverageWaitingTimeAsync = _ref5 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    departmentId,\n    options = {}\n  } = _ref5;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(LivechatRooms.findAllAverageWaitingTime({\n    start,\n    end,\n    departmentId,\n    onlyCount: true\n  }).toArray());\n  return {\n    departments: Promise.await(LivechatRooms.findAllAverageWaitingTime({\n      start,\n      end,\n      departmentId,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllNumberOfTransferredRoomsAsync = _ref6 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    departmentId,\n    options = {}\n  } = _ref6;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(Messages.findAllNumberOfTransferredRooms({\n    start,\n    end,\n    departmentId,\n    onlyCount: true\n  }).toArray());\n  return {\n    departments: Promise.await(Messages.findAllNumberOfTransferredRooms({\n      start,\n      end,\n      departmentId,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllNumberOfAbandonedRoomsAsync = _ref7 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    departmentId,\n    options = {}\n  } = _ref7;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(Promise.await(LivechatRooms.findAllNumberOfAbandonedRooms({\n    start,\n    end,\n    departmentId,\n    onlyCount: true\n  })).toArray());\n  return {\n    departments: Promise.await(Promise.await(LivechatRooms.findAllNumberOfAbandonedRooms({\n      start,\n      end,\n      departmentId,\n      options\n    })).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findPercentageOfAbandonedRoomsAsync = _ref8 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    departmentId,\n    options = {}\n  } = _ref8;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(Promise.await(LivechatRooms.findPercentageOfAbandonedRooms({\n    start,\n    end,\n    departmentId,\n    onlyCount: true\n  })).toArray());\n  return {\n    departments: Promise.await(Promise.await(LivechatRooms.findPercentageOfAbandonedRooms({\n      start,\n      end,\n      departmentId,\n      options\n    })).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllAverageOfChatDurationTime = _ref9 => {\n  let {\n    start,\n    end,\n    departmentId,\n    options\n  } = _ref9;\n  return Promise.await(findAllAverageOfChatDurationTimeAsync({\n    start,\n    end,\n    departmentId,\n    options\n  }));\n};\n\nconst findAllAverageServiceTime = _ref10 => {\n  let {\n    start,\n    end,\n    departmentId,\n    options\n  } = _ref10;\n  return Promise.await(findAllAverageServiceTimeAsync({\n    start,\n    end,\n    departmentId,\n    options\n  }));\n};\n\nconst findAllRooms = _ref11 => {\n  let {\n    start,\n    end,\n    answered,\n    departmentId,\n    options\n  } = _ref11;\n  return Promise.await(findAllRoomsAsync({\n    start,\n    end,\n    answered,\n    departmentId,\n    options\n  }));\n};\n\nconst findAllServiceTime = _ref12 => {\n  let {\n    start,\n    end,\n    departmentId,\n    options\n  } = _ref12;\n  return Promise.await(findAllServiceTimeAsync({\n    start,\n    end,\n    departmentId,\n    options\n  }));\n};\n\nconst findAllAverageWaitingTime = _ref13 => {\n  let {\n    start,\n    end,\n    departmentId,\n    options\n  } = _ref13;\n  return Promise.await(findAllAverageWaitingTimeAsync({\n    start,\n    end,\n    departmentId,\n    options\n  }));\n};\n\nconst findAllNumberOfTransferredRooms = _ref14 => {\n  let {\n    start,\n    end,\n    departmentId,\n    options\n  } = _ref14;\n  return Promise.await(findAllNumberOfTransferredRoomsAsync({\n    start,\n    end,\n    departmentId,\n    options\n  }));\n};\n\nconst findAllNumberOfAbandonedRooms = _ref15 => {\n  let {\n    start,\n    end,\n    departmentId,\n    options\n  } = _ref15;\n  return Promise.await(findAllNumberOfAbandonedRoomsAsync({\n    start,\n    end,\n    departmentId,\n    options\n  }));\n};\n\nconst findPercentageOfAbandonedRooms = _ref16 => {\n  let {\n    start,\n    end,\n    departmentId,\n    options\n  } = _ref16;\n  return Promise.await(findPercentageOfAbandonedRoomsAsync({\n    start,\n    end,\n    departmentId,\n    options\n  }));\n};","map":{"version":3,"sources":["app/livechat/server/lib/analytics/departments.js"],"names":["module","export","findAllRoomsAsync","findAllAverageOfChatDurationTimeAsync","findAllAverageServiceTimeAsync","findAllServiceTimeAsync","findAllAverageWaitingTimeAsync","findAllNumberOfTransferredRoomsAsync","findAllNumberOfAbandonedRoomsAsync","findPercentageOfAbandonedRoomsAsync","findAllAverageOfChatDurationTime","findAllAverageServiceTime","findAllRooms","findAllServiceTime","findAllAverageWaitingTime","findAllNumberOfTransferredRooms","findAllNumberOfAbandonedRooms","findPercentageOfAbandonedRooms","LivechatRooms","Messages","link","v","start","end","answered","departmentId","options","Error","total","onlyCount","toArray","departments","length","findAllAverageOfServiceTime","Promise","await"],"mappings":"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","sourcesContent":["import { LivechatRooms, Messages } from '../../../../models/server/raw';\n\nexport const findAllRoomsAsync = async ({ start, end, answered, departmentId, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllRooms({\n\t\tstart,\n\t\tanswered,\n\t\tend,\n\t\tdepartmentId,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tdepartments: await LivechatRooms.findAllRooms({\n\t\t\tstart,\n\t\t\tanswered,\n\t\t\tend,\n\t\t\tdepartmentId,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllAverageOfChatDurationTimeAsync = async ({ start, end, departmentId, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllAverageOfChatDurationTime({\n\t\tstart,\n\t\tend,\n\t\tdepartmentId,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tdepartments: await LivechatRooms.findAllAverageOfChatDurationTime({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tdepartmentId,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllAverageServiceTimeAsync = async ({ start, end, departmentId, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllAverageOfServiceTime({\n\t\tstart,\n\t\tend,\n\t\tdepartmentId,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tdepartments: await LivechatRooms.findAllAverageOfServiceTime({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tdepartmentId,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllServiceTimeAsync = async ({ start, end, departmentId, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllServiceTime({\n\t\tstart,\n\t\tend,\n\t\tdepartmentId,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tdepartments: await LivechatRooms.findAllServiceTime({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tdepartmentId,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllAverageWaitingTimeAsync = async ({ start, end, departmentId, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllAverageWaitingTime({\n\t\tstart,\n\t\tend,\n\t\tdepartmentId,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tdepartments: await LivechatRooms.findAllAverageWaitingTime({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tdepartmentId,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllNumberOfTransferredRoomsAsync = async ({ start, end, departmentId, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await Messages.findAllNumberOfTransferredRooms({\n\t\tstart,\n\t\tend,\n\t\tdepartmentId,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tdepartments: await Messages.findAllNumberOfTransferredRooms({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tdepartmentId,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllNumberOfAbandonedRoomsAsync = async ({ start, end, departmentId, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await (await LivechatRooms.findAllNumberOfAbandonedRooms({ start, end, departmentId, onlyCount: true })).toArray();\n\treturn {\n\t\tdepartments: await (await LivechatRooms.findAllNumberOfAbandonedRooms({ start, end, departmentId, options })).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findPercentageOfAbandonedRoomsAsync = async ({ start, end, departmentId, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await (\n\t\tawait LivechatRooms.findPercentageOfAbandonedRooms({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tdepartmentId,\n\t\t\tonlyCount: true,\n\t\t})\n\t).toArray();\n\treturn {\n\t\tdepartments: await (await LivechatRooms.findPercentageOfAbandonedRooms({ start, end, departmentId, options })).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllAverageOfChatDurationTime = ({ start, end, departmentId, options }) =>\n\tPromise.await(findAllAverageOfChatDurationTimeAsync({ start, end, departmentId, options }));\nexport const findAllAverageServiceTime = ({ start, end, departmentId, options }) =>\n\tPromise.await(findAllAverageServiceTimeAsync({ start, end, departmentId, options }));\nexport const findAllRooms = ({ start, end, answered, departmentId, options }) =>\n\tPromise.await(findAllRoomsAsync({ start, end, answered, departmentId, options }));\nexport const findAllServiceTime = ({ start, end, departmentId, options }) =>\n\tPromise.await(findAllServiceTimeAsync({ start, end, departmentId, options }));\nexport const findAllAverageWaitingTime = ({ start, end, departmentId, options }) =>\n\tPromise.await(findAllAverageWaitingTimeAsync({ start, end, departmentId, options }));\nexport const findAllNumberOfTransferredRooms = ({ start, end, departmentId, options }) =>\n\tPromise.await(findAllNumberOfTransferredRoomsAsync({ start, end, departmentId, options }));\nexport const findAllNumberOfAbandonedRooms = ({ start, end, departmentId, options }) =>\n\tPromise.await(findAllNumberOfAbandonedRoomsAsync({ start, end, departmentId, options }));\nexport const findPercentageOfAbandonedRooms = ({ start, end, departmentId, options }) =>\n\tPromise.await(findPercentageOfAbandonedRoomsAsync({ start, end, departmentId, options }));\n"]},"sourceType":"module","hash":"2bd12c5e76353d42bd176174c14319dd1f612bfe"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/createDirectMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/createDirectMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/createDirectMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/createDirectMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/createDirectMessage.js"}},"code":"const _excluded = [\"_id\", \"inserted\"];\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 1);\nmodule.export({\n  createDirectMessage: () => createDirectMessage\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet hasPermission;\nmodule.link(\"../../app/authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 3);\nlet Users, Rooms;\nmodule.link(\"../../app/models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 4);\nlet createRoom, RateLimiter;\nmodule.link(\"../../app/lib/server\", {\n  createRoom(v) {\n    createRoom = v;\n  },\n\n  RateLimiter(v) {\n    RateLimiter = v;\n  }\n\n}, 5);\nlet addUser;\nmodule.link(\"../../app/federation/server/functions/addUser\", {\n  addUser(v) {\n    addUser = v;\n  }\n\n}, 6);\n\nfunction createDirectMessage(usernames, userId) {\n  let excludeSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  check(usernames, [String]);\n  check(userId, String);\n  check(excludeSelf, Match.Optional(Boolean));\n\n  if (!userId) {\n    throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n      method: 'createDirectMessage'\n    });\n  }\n\n  const me = Users.findOneById(userId, {\n    fields: {\n      username: 1,\n      name: 1\n    }\n  });\n\n  if (!(me !== null && me !== void 0 && me.username)) {\n    throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n      method: 'createDirectMessage'\n    });\n  }\n\n  if (settings.get('Message_AllowDirectMessagesToYourself') === false && usernames.length === 1 && me.username === usernames[0]) {\n    throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n      method: 'createDirectMessage'\n    });\n  }\n\n  const users = usernames.filter(username => username !== me.username).map(username => {\n    let to = Users.findOneByUsernameIgnoringCase(username); // If the username does have an `@`, but does not exist locally, we create it first\n\n    if (!to && username.indexOf('@') !== -1) {\n      to = Promise.await(addUser(username));\n    }\n\n    if (!to) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'createDirectMessage'\n      });\n    }\n\n    return to;\n  });\n  const roomUsers = excludeSelf ? users : [me, ...users]; // allow self-DMs\n\n  if (roomUsers.length === 1 && roomUsers[0]._id !== me._id) {\n    throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n      method: 'createDirectMessage'\n    });\n  }\n\n  if (!hasPermission(userId, 'create-d')) {\n    // If the user can't create DMs but can access already existing ones\n    if (hasPermission(userId, 'view-d-room')) {\n      // Check if the direct room already exists, then return it\n      const uids = roomUsers.map(_ref => {\n        let {\n          _id\n        } = _ref;\n        return _id;\n      }).sort();\n      const room = Rooms.findOneDirectRoomContainingAllUserIDs(uids, {\n        fields: {\n          _id: 1\n        }\n      });\n\n      if (room) {\n        return _objectSpread({\n          t: 'd',\n          rid: room._id\n        }, room);\n      }\n    }\n\n    throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n      method: 'createDirectMessage'\n    });\n  }\n\n  const options = {\n    creator: me._id\n  };\n\n  if (excludeSelf && hasPermission(this.userId, 'view-room-administration')) {\n    options.subscriptionExtra = {\n      open: true\n    };\n  }\n\n  const _createRoom = createRoom('d', null, null, roomUsers, null, {}, options),\n        {\n    _id: rid,\n    inserted\n  } = _createRoom,\n        room = _objectWithoutProperties(_createRoom, _excluded);\n\n  return _objectSpread({\n    t: 'd',\n    rid\n  }, room);\n}\n\nMeteor.methods({\n  createDirectMessage() {\n    for (var _len = arguments.length, usernames = new Array(_len), _key = 0; _key < _len; _key++) {\n      usernames[_key] = arguments[_key];\n    }\n\n    return createDirectMessage(usernames, Meteor.userId());\n  }\n\n});\nRateLimiter.limitMethod('createDirectMessage', 10, 60000, {\n  userId(userId) {\n    return !hasPermission(userId, 'send-many-messages');\n  }\n\n});","map":{"version":3,"sources":["server/methods/createDirectMessage.js"],"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","export","createDirectMessage","Meteor","check","Match","settings","hasPermission","Users","Rooms","createRoom","RateLimiter","addUser","usernames","userId","excludeSelf","String","Optional","Boolean","Error","method","me","findOneById","fields","username","name","get","length","users","filter","map","to","findOneByUsernameIgnoringCase","indexOf","Promise","await","roomUsers","_id","uids","sort","room","findOneDirectRoomContainingAllUserIDs","t","rid","options","creator","subscriptionExtra","open","inserted","methods","limitMethod"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check, Match } from 'meteor/check';\n\nimport { settings } from '../../app/settings/server';\nimport { hasPermission } from '../../app/authorization/server';\nimport { Users, Rooms } from '../../app/models/server';\nimport { createRoom, RateLimiter } from '../../app/lib/server';\nimport { addUser } from '../../app/federation/server/functions/addUser';\n\nexport function createDirectMessage(usernames, userId, excludeSelf = false) {\n\tcheck(usernames, [String]);\n\tcheck(userId, String);\n\tcheck(excludeSelf, Match.Optional(Boolean));\n\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst me = Users.findOneById(userId, { fields: { username: 1, name: 1 } });\n\tif (!me?.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tif (settings.get('Message_AllowDirectMessagesToYourself') === false && usernames.length === 1 && me.username === usernames[0]) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst users = usernames\n\t\t.filter((username) => username !== me.username)\n\t\t.map((username) => {\n\t\t\tlet to = Users.findOneByUsernameIgnoringCase(username);\n\n\t\t\t// If the username does have an `@`, but does not exist locally, we create it first\n\t\t\tif (!to && username.indexOf('@') !== -1) {\n\t\t\t\tto = Promise.await(addUser(username));\n\t\t\t}\n\n\t\t\tif (!to) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\tmethod: 'createDirectMessage',\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn to;\n\t\t});\n\n\tconst roomUsers = excludeSelf ? users : [me, ...users];\n\n\t// allow self-DMs\n\tif (roomUsers.length === 1 && roomUsers[0]._id !== me._id) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tif (!hasPermission(userId, 'create-d')) {\n\t\t// If the user can't create DMs but can access already existing ones\n\t\tif (hasPermission(userId, 'view-d-room')) {\n\t\t\t// Check if the direct room already exists, then return it\n\t\t\tconst uids = roomUsers.map(({ _id }) => _id).sort();\n\t\t\tconst room = Rooms.findOneDirectRoomContainingAllUserIDs(uids, { fields: { _id: 1 } });\n\t\t\tif (room) {\n\t\t\t\treturn {\n\t\t\t\t\tt: 'd',\n\t\t\t\t\trid: room._id,\n\t\t\t\t\t...room,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'createDirectMessage',\n\t\t});\n\t}\n\n\tconst options = { creator: me._id };\n\tif (excludeSelf && hasPermission(this.userId, 'view-room-administration')) {\n\t\toptions.subscriptionExtra = { open: true };\n\t}\n\tconst { _id: rid, inserted, ...room } = createRoom('d', null, null, roomUsers, null, {}, options);\n\n\treturn {\n\t\tt: 'd',\n\t\trid,\n\t\t...room,\n\t};\n}\n\nMeteor.methods({\n\tcreateDirectMessage(...usernames) {\n\t\treturn createDirectMessage(usernames, Meteor.userId());\n\t},\n});\n\nRateLimiter.limitMethod('createDirectMessage', 10, 60000, {\n\tuserId(userId) {\n\t\treturn !hasPermission(userId, 'send-many-messages');\n\t},\n});\n"]},"sourceType":"module","hash":"4b3efbf016d8f800149f686f78e4ceddec224f17"}

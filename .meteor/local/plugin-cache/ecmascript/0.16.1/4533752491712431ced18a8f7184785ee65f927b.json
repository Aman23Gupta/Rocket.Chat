{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/processDirectEmail.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/lib/processDirectEmail.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/processDirectEmail.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/processDirectEmail.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/lib/processDirectEmail.js"}},"code":"module.export({\n  processDirectEmail: () => processDirectEmail\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet reply;\nmodule.link(\"emailreplyparser\", {\n  EmailReplyParser(v) {\n    reply = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet Rooms, Messages, Users, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 4);\nlet metrics;\nmodule.link(\"../../../metrics/server\", {\n  metrics(v) {\n    metrics = v;\n  }\n\n}, 5);\nlet canAccessRoom, hasPermission;\nmodule.link(\"../../../authorization/server\", {\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  },\n\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 6);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 7);\n\nlet _sendMessage;\n\nmodule.link(\"../functions\", {\n  sendMessage(v) {\n    _sendMessage = v;\n  }\n\n}, 8);\n\nconst processDirectEmail = function (email) {\n  function sendMessage(email) {\n    var _room$muted;\n\n    const message = {\n      ts: new Date(email.headers.date),\n      msg: email.body,\n      sentByEmail: true,\n      groupable: false\n    };\n\n    if (message.ts) {\n      const tsDiff = Math.abs(moment(message.ts).diff());\n\n      if (tsDiff > 10000) {\n        message.ts = new Date();\n      }\n    } else {\n      message.ts = new Date();\n    }\n\n    if (message.msg && message.msg.length > settings.get('Message_MaxAllowedSize')) {\n      return false;\n    } // reduce new lines in multiline message\n\n\n    message.msg = message.msg.split('\\n\\n').join('\\n');\n    const user = Users.findOneByEmailAddress(email.headers.from, {\n      fields: {\n        username: 1,\n        name: 1\n      }\n    });\n\n    if (!user) {\n      // user not found\n      return false;\n    }\n\n    const prevMessage = Messages.findOneById(email.headers.mid, {\n      rid: 1,\n      u: 1\n    });\n\n    if (!prevMessage) {\n      // message doesn't exist anymore\n      return false;\n    }\n\n    message.rid = prevMessage.rid;\n    const room = Rooms.findOneById(message.rid);\n\n    if (!canAccessRoom(room, user)) {\n      return false;\n    } // check mention\n\n\n    if (message.msg.indexOf(\"@\".concat(prevMessage.u.username)) === -1 && room.t !== 'd') {\n      message.msg = \"@\".concat(prevMessage.u.username, \" \").concat(message.msg);\n    } // reply message link\n\n\n    let prevMessageLink = \"[ ](\".concat(Meteor.absoluteUrl().replace(/\\/$/, ''));\n\n    if (room.t === 'c') {\n      prevMessageLink += \"/channel/\".concat(room.name, \"?msg=\").concat(email.headers.mid, \") \");\n    } else if (room.t === 'd') {\n      prevMessageLink += \"/direct/\".concat(prevMessage.u.username, \"?msg=\").concat(email.headers.mid, \") \");\n    } else if (room.t === 'p') {\n      prevMessageLink += \"/group/\".concat(room.name, \"?msg=\").concat(email.headers.mid, \") \");\n    } // add reply message link\n\n\n    message.msg = prevMessageLink + message.msg;\n    const subscription = Subscriptions.findOneByRoomIdAndUserId(message.rid, user._id);\n\n    if (subscription && (subscription.blocked || subscription.blocker)) {\n      // room is blocked\n      return false;\n    }\n\n    if (room !== null && room !== void 0 && (_room$muted = room.muted) !== null && _room$muted !== void 0 && _room$muted.includes(user.username)) {\n      // user is muted\n      return false;\n    } // room is readonly\n\n\n    if (room.ro === true) {\n      if (!hasPermission(Meteor.userId(), 'post-readonly', room._id)) {\n        // Check if the user was manually unmuted\n        if (!(room.unmuted || []).includes(user.username)) {\n          return false;\n        }\n      }\n    }\n\n    metrics.messagesSent.inc(); // TODO This line needs to be moved to it's proper place. See the comments on: https://github.com/RocketChat/Rocket.Chat/pull/5736\n\n    return _sendMessage(user, message, room);\n  } // Extract/parse reply from email body\n\n\n  email.body = reply.parse_reply(email.body); // if 'To' email format is \"Name <username@domain>\"\n\n  if (email.headers.to.indexOf('<') >= 0 && email.headers.to.indexOf('>') >= 0) {\n    email.headers.to = email.headers.to.split('<')[1].split('>')[0];\n  } // if 'From' email format is \"Name <username@domain>\"\n\n\n  if (email.headers.from.indexOf('<') >= 0 && email.headers.from.indexOf('>') >= 0) {\n    email.headers.from = email.headers.from.split('<')[1].split('>')[0];\n  } // 'To' email format \"username+messageId@domain\"\n\n\n  if (email.headers.to.indexOf('+') >= 0) {\n    // Valid 'To' format\n    email.headers.mid = email.headers.to.split('@')[0].split('+')[1];\n    sendMessage(email);\n  } else {\n    SystemLogger.error('Invalid Email....If not. Please report it.');\n  }\n};","map":{"version":3,"sources":["app/lib/server/lib/processDirectEmail.js"],"names":["module","export","processDirectEmail","Meteor","link","v","reply","EmailReplyParser","moment","default","settings","Rooms","Messages","Users","Subscriptions","metrics","canAccessRoom","hasPermission","SystemLogger","_sendMessage","sendMessage","email","message","ts","Date","headers","date","msg","body","sentByEmail","groupable","tsDiff","Math","abs","diff","length","get","split","join","user","findOneByEmailAddress","from","fields","username","name","prevMessage","findOneById","mid","rid","u","room","indexOf","t","prevMessageLink","absoluteUrl","replace","subscription","findOneByRoomIdAndUserId","_id","blocked","blocker","muted","includes","ro","userId","unmuted","messagesSent","inc","parse_reply","to","error"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { EmailReplyParser as reply } from 'emailreplyparser';\nimport moment from 'moment';\n\nimport { settings } from '../../../settings/server';\nimport { Rooms, Messages, Users, Subscriptions } from '../../../models/server';\nimport { metrics } from '../../../metrics/server';\nimport { canAccessRoom, hasPermission } from '../../../authorization/server';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { sendMessage as _sendMessage } from '../functions';\n\nexport const processDirectEmail = function (email) {\n\tfunction sendMessage(email) {\n\t\tconst message = {\n\t\t\tts: new Date(email.headers.date),\n\t\t\tmsg: email.body,\n\t\t\tsentByEmail: true,\n\t\t\tgroupable: false,\n\t\t};\n\n\t\tif (message.ts) {\n\t\t\tconst tsDiff = Math.abs(moment(message.ts).diff());\n\t\t\tif (tsDiff > 10000) {\n\t\t\t\tmessage.ts = new Date();\n\t\t\t}\n\t\t} else {\n\t\t\tmessage.ts = new Date();\n\t\t}\n\n\t\tif (message.msg && message.msg.length > settings.get('Message_MaxAllowedSize')) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// reduce new lines in multiline message\n\t\tmessage.msg = message.msg.split('\\n\\n').join('\\n');\n\n\t\tconst user = Users.findOneByEmailAddress(email.headers.from, {\n\t\t\tfields: {\n\t\t\t\tusername: 1,\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t});\n\t\tif (!user) {\n\t\t\t// user not found\n\t\t\treturn false;\n\t\t}\n\n\t\tconst prevMessage = Messages.findOneById(email.headers.mid, {\n\t\t\trid: 1,\n\t\t\tu: 1,\n\t\t});\n\t\tif (!prevMessage) {\n\t\t\t// message doesn't exist anymore\n\t\t\treturn false;\n\t\t}\n\t\tmessage.rid = prevMessage.rid;\n\n\t\tconst room = Rooms.findOneById(message.rid);\n\n\t\tif (!canAccessRoom(room, user)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check mention\n\t\tif (message.msg.indexOf(`@${prevMessage.u.username}`) === -1 && room.t !== 'd') {\n\t\t\tmessage.msg = `@${prevMessage.u.username} ${message.msg}`;\n\t\t}\n\n\t\t// reply message link\n\t\tlet prevMessageLink = `[ ](${Meteor.absoluteUrl().replace(/\\/$/, '')}`;\n\t\tif (room.t === 'c') {\n\t\t\tprevMessageLink += `/channel/${room.name}?msg=${email.headers.mid}) `;\n\t\t} else if (room.t === 'd') {\n\t\t\tprevMessageLink += `/direct/${prevMessage.u.username}?msg=${email.headers.mid}) `;\n\t\t} else if (room.t === 'p') {\n\t\t\tprevMessageLink += `/group/${room.name}?msg=${email.headers.mid}) `;\n\t\t}\n\t\t// add reply message link\n\t\tmessage.msg = prevMessageLink + message.msg;\n\n\t\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(message.rid, user._id);\n\t\tif (subscription && (subscription.blocked || subscription.blocker)) {\n\t\t\t// room is blocked\n\t\t\treturn false;\n\t\t}\n\n\t\tif (room?.muted?.includes(user.username)) {\n\t\t\t// user is muted\n\t\t\treturn false;\n\t\t}\n\n\t\t// room is readonly\n\t\tif (room.ro === true) {\n\t\t\tif (!hasPermission(Meteor.userId(), 'post-readonly', room._id)) {\n\t\t\t\t// Check if the user was manually unmuted\n\t\t\t\tif (!(room.unmuted || []).includes(user.username)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmetrics.messagesSent.inc(); // TODO This line needs to be moved to it's proper place. See the comments on: https://github.com/RocketChat/Rocket.Chat/pull/5736\n\n\t\treturn _sendMessage(user, message, room);\n\t}\n\n\t// Extract/parse reply from email body\n\temail.body = reply.parse_reply(email.body);\n\n\t// if 'To' email format is \"Name <username@domain>\"\n\tif (email.headers.to.indexOf('<') >= 0 && email.headers.to.indexOf('>') >= 0) {\n\t\temail.headers.to = email.headers.to.split('<')[1].split('>')[0];\n\t}\n\n\t// if 'From' email format is \"Name <username@domain>\"\n\tif (email.headers.from.indexOf('<') >= 0 && email.headers.from.indexOf('>') >= 0) {\n\t\temail.headers.from = email.headers.from.split('<')[1].split('>')[0];\n\t}\n\n\t// 'To' email format \"username+messageId@domain\"\n\tif (email.headers.to.indexOf('+') >= 0) {\n\t\t// Valid 'To' format\n\t\temail.headers.mid = email.headers.to.split('@')[0].split('+')[1];\n\t\tsendMessage(email);\n\t} else {\n\t\tSystemLogger.error('Invalid Email....If not. Please report it.');\n\t}\n};\n"]},"sourceType":"module","hash":"4533752491712431ced18a8f7184785ee65f927b"}

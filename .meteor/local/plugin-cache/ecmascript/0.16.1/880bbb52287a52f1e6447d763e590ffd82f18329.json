{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v199.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v199.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v199.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v199.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v199.js"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Future;\nmodule.link(\"fibers/future\", {\n  default(v) {\n    Future = v;\n  }\n\n}, 1);\nlet Users, Subscriptions;\nmodule.link(\"../../../app/models/server/raw\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 2);\nlet addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 3);\nconst batchSize = 5000;\n\nfunction migrateUserRecords(total, current) {\n  return Promise.asyncApply(() => {\n    console.log(\"Migrating \".concat(current, \"/\").concat(total));\n    const items = Promise.await(Users.find({\n      __rooms: {\n        $exists: false\n      }\n    }, {\n      projection: {\n        _id: 1\n      }\n    }).limit(batchSize).toArray());\n    const actions = [];\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n\n    var _iteratorError;\n\n    try {\n      for (var _iterator = _asyncIterator(items), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n        const user = _step.value;\n        const rooms = Promise.await(Subscriptions.find({\n          'u._id': user._id,\n          't': {\n            $nin: ['d', 'l']\n          }\n        }, {\n          projection: {\n            rid: 1\n          }\n        }).toArray());\n        actions.push({\n          updateOne: {\n            filter: {\n              _id: user._id\n            },\n            update: {\n              $set: {\n                __rooms: rooms.map(_ref => {\n                  let {\n                    rid\n                  } = _ref;\n                  return rid;\n                })\n              }\n            }\n          }\n        });\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          Promise.await(_iterator.return());\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if (actions.length === 0) {\n      return;\n    }\n\n    const batch = Promise.await(Users.col.bulkWrite(actions, {\n      ordered: false\n    }));\n\n    if (actions.length === batchSize) {\n      Promise.await(batch);\n      return migrateUserRecords(total, current + batchSize);\n    }\n\n    return batch;\n  });\n}\n\naddMigration({\n  version: 199,\n\n  up() {\n    const fut = new Future();\n    console.log('Changing schema of User records, this may take a long time ...');\n    Meteor.setTimeout(() => Promise.asyncApply(() => {\n      const users = Users.find({\n        __rooms: {\n          $exists: false\n        }\n      }, {\n        projection: {\n          _id: 1\n        }\n      });\n      const total = Promise.await(users.count());\n      Promise.await(users.close());\n\n      if (total < batchSize * 10) {\n        Promise.await(migrateUserRecords(total, 0));\n        return fut.return();\n      }\n\n      Promise.await(migrateUserRecords(total, 0));\n      fut.return();\n    }), 250);\n    fut.wait();\n    console.log('Changing schema of User records finished.');\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v199.js"],"names":["_asyncIterator","module","link","default","v","Meteor","Future","Users","Subscriptions","addMigration","batchSize","migrateUserRecords","total","current","console","log","items","find","__rooms","$exists","projection","_id","limit","toArray","actions","user","rooms","$nin","rid","push","updateOne","filter","update","$set","map","length","batch","col","bulkWrite","ordered","version","up","fut","setTimeout","users","count","close","return","wait"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport Future from 'fibers/future';\n\nimport { Users, Subscriptions } from '../../../app/models/server/raw';\nimport { addMigration } from '../../lib/migrations';\n\nconst batchSize = 5000;\n\nasync function migrateUserRecords(total, current) {\n\tconsole.log(`Migrating ${current}/${total}`);\n\n\tconst items = await Users.find({ __rooms: { $exists: false } }, { projection: { _id: 1 } })\n\t\t.limit(batchSize)\n\t\t.toArray();\n\n\tconst actions = [];\n\n\tfor await (const user of items) {\n\t\tconst rooms = await Subscriptions.find(\n\t\t\t{\n\t\t\t\t'u._id': user._id,\n\t\t\t\t't': { $nin: ['d', 'l'] },\n\t\t\t},\n\t\t\t{ projection: { rid: 1 } },\n\t\t).toArray();\n\n\t\tactions.push({\n\t\t\tupdateOne: {\n\t\t\t\tfilter: { _id: user._id },\n\t\t\t\tupdate: {\n\t\t\t\t\t$set: {\n\t\t\t\t\t\t__rooms: rooms.map(({ rid }) => rid),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tif (actions.length === 0) {\n\t\treturn;\n\t}\n\n\tconst batch = await Users.col.bulkWrite(actions, { ordered: false });\n\tif (actions.length === batchSize) {\n\t\tawait batch;\n\t\treturn migrateUserRecords(total, current + batchSize);\n\t}\n\n\treturn batch;\n}\n\naddMigration({\n\tversion: 199,\n\tup() {\n\t\tconst fut = new Future();\n\n\t\tconsole.log('Changing schema of User records, this may take a long time ...');\n\n\t\tMeteor.setTimeout(async () => {\n\t\t\tconst users = Users.find({ __rooms: { $exists: false } }, { projection: { _id: 1 } });\n\t\t\tconst total = await users.count();\n\t\t\tawait users.close();\n\n\t\t\tif (total < batchSize * 10) {\n\t\t\t\tawait migrateUserRecords(total, 0);\n\t\t\t\treturn fut.return();\n\t\t\t}\n\n\t\t\tawait migrateUserRecords(total, 0);\n\n\t\t\tfut.return();\n\t\t}, 250);\n\n\t\tfut.wait();\n\n\t\tconsole.log('Changing schema of User records finished.');\n\t},\n});\n"]},"sourceType":"module","hash":"880bbb52287a52f1e6447d763e590ffd82f18329"}

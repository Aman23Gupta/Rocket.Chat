{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/customField.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/v1/customField.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/customField.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/customField.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/v1/customField.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nlet findGuest;\nmodule.link(\"../lib/livechat\", {\n  findGuest(v) {\n    findGuest = v;\n  }\n\n}, 3);\nlet Livechat;\nmodule.link(\"../../lib/Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 4);\nlet findLivechatCustomFields, findCustomFieldById;\nmodule.link(\"../lib/customFields\", {\n  findLivechatCustomFields(v) {\n    findLivechatCustomFields = v;\n  },\n\n  findCustomFieldById(v) {\n    findCustomFieldById = v;\n  }\n\n}, 5);\nAPI.v1.addRoute('livechat/custom.field', {\n  post() {\n    try {\n      check(this.bodyParams, {\n        token: String,\n        key: String,\n        value: String,\n        overwrite: Boolean\n      });\n      const {\n        token,\n        key,\n        value,\n        overwrite\n      } = this.bodyParams;\n      const guest = findGuest(token);\n\n      if (!guest) {\n        throw new Meteor.Error('invalid-token');\n      }\n\n      if (!Livechat.setCustomFields({\n        token,\n        key,\n        value,\n        overwrite\n      })) {\n        return API.v1.failure();\n      }\n\n      return API.v1.success({\n        field: {\n          key,\n          value,\n          overwrite\n        }\n      });\n    } catch (e) {\n      return API.v1.failure(e);\n    }\n  }\n\n});\nAPI.v1.addRoute('livechat/custom.fields', {\n  post() {\n    check(this.bodyParams, {\n      token: String,\n      customFields: [Match.ObjectIncluding({\n        key: String,\n        value: String,\n        overwrite: Boolean\n      })]\n    });\n    const {\n      token\n    } = this.bodyParams;\n    const guest = findGuest(token);\n\n    if (!guest) {\n      throw new Meteor.Error('invalid-token');\n    }\n\n    const fields = this.bodyParams.customFields.map(customField => {\n      const data = Object.assign({\n        token\n      }, customField);\n\n      if (!Livechat.setCustomFields(data)) {\n        return API.v1.failure();\n      }\n\n      return {\n        Key: customField.key,\n        value: customField.value,\n        overwrite: customField.overwrite\n      };\n    });\n    return API.v1.success({\n      fields\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/custom-fields', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort\n    } = this.parseJsonQuery();\n    const {\n      text\n    } = this.queryParams;\n    const customFields = Promise.await(findLivechatCustomFields({\n      userId: this.userId,\n      text,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    }));\n    return API.v1.success(customFields);\n  }\n\n});\nAPI.v1.addRoute('livechat/custom-fields/:_id', {\n  authRequired: true\n}, {\n  get() {\n    check(this.urlParams, {\n      _id: String\n    });\n    const {\n      customField\n    } = Promise.await(findCustomFieldById({\n      userId: this.userId,\n      customFieldId: this.urlParams._id\n    }));\n    return API.v1.success({\n      customField\n    });\n  }\n\n});","map":{"version":3,"sources":["app/livechat/server/api/v1/customField.js"],"names":["Meteor","module","link","v","Match","check","API","findGuest","Livechat","findLivechatCustomFields","findCustomFieldById","v1","addRoute","post","bodyParams","token","String","key","value","overwrite","Boolean","guest","Error","setCustomFields","failure","success","field","e","customFields","ObjectIncluding","fields","map","customField","data","Object","assign","Key","authRequired","get","offset","count","getPaginationItems","sort","parseJsonQuery","text","queryParams","Promise","await","userId","pagination","urlParams","_id","customFieldId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport { findGuest } from '../lib/livechat';\nimport { Livechat } from '../../lib/Livechat';\nimport { findLivechatCustomFields, findCustomFieldById } from '../lib/customFields';\n\nAPI.v1.addRoute('livechat/custom.field', {\n\tpost() {\n\t\ttry {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\ttoken: String,\n\t\t\t\tkey: String,\n\t\t\t\tvalue: String,\n\t\t\t\toverwrite: Boolean,\n\t\t\t});\n\n\t\t\tconst { token, key, value, overwrite } = this.bodyParams;\n\n\t\t\tconst guest = findGuest(token);\n\t\t\tif (!guest) {\n\t\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t\t}\n\n\t\t\tif (!Livechat.setCustomFields({ token, key, value, overwrite })) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\n\t\t\treturn API.v1.success({ field: { key, value, overwrite } });\n\t\t} catch (e) {\n\t\t\treturn API.v1.failure(e);\n\t\t}\n\t},\n});\n\nAPI.v1.addRoute('livechat/custom.fields', {\n\tpost() {\n\t\tcheck(this.bodyParams, {\n\t\t\ttoken: String,\n\t\t\tcustomFields: [\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tkey: String,\n\t\t\t\t\tvalue: String,\n\t\t\t\t\toverwrite: Boolean,\n\t\t\t\t}),\n\t\t\t],\n\t\t});\n\n\t\tconst { token } = this.bodyParams;\n\t\tconst guest = findGuest(token);\n\t\tif (!guest) {\n\t\t\tthrow new Meteor.Error('invalid-token');\n\t\t}\n\n\t\tconst fields = this.bodyParams.customFields.map((customField) => {\n\t\t\tconst data = Object.assign({ token }, customField);\n\t\t\tif (!Livechat.setCustomFields(data)) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\n\t\t\treturn { Key: customField.key, value: customField.value, overwrite: customField.overwrite };\n\t\t});\n\n\t\treturn API.v1.success({ fields });\n\t},\n});\n\nAPI.v1.addRoute(\n\t'livechat/custom-fields',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst { text } = this.queryParams;\n\n\t\t\tconst customFields = Promise.await(\n\t\t\t\tfindLivechatCustomFields({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\ttext,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn API.v1.success(customFields);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/custom-fields/:_id',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\t\t\tconst { customField } = Promise.await(findCustomFieldById({ userId: this.userId, customFieldId: this.urlParams._id }));\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcustomField,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"e570a24e019852f7059659bb019742a44806cb7c"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/addUserToRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/addUserToRoom.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/addUserToRoom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/addUserToRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/addUserToRoom.js"}},"code":"module.export({\n  addUserToRoom: () => addUserToRoom\n});\nlet AppsEngineException;\nmodule.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n  AppsEngineException(v) {\n    AppsEngineException = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet AppEvents, Apps;\nmodule.link(\"../../../apps/server\", {\n  AppEvents(v) {\n    AppEvents = v;\n  },\n\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\nlet Messages, Rooms, Subscriptions;\nmodule.link(\"../../../models\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 4);\nlet Team;\nmodule.link(\"../../../../server/sdk\", {\n  Team(v) {\n    Team = v;\n  }\n\n}, 5);\nlet RoomMemberActions, roomTypes;\nmodule.link(\"../../../utils/server\", {\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  },\n\n  roomTypes(v) {\n    roomTypes = v;\n  }\n\n}, 6);\n\nconst addUserToRoom = function (rid, user, inviter, silenced) {\n  const now = new Date();\n  const room = Rooms.findOneById(rid);\n  const roomConfig = roomTypes.getConfig(room.t);\n\n  if (!roomConfig.allowMemberAction(room, RoomMemberActions.JOIN) && !roomConfig.allowMemberAction(room, RoomMemberActions.INVITE)) {\n    return;\n  } // Check if user is already in room\n\n\n  const subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\n  if (subscription) {\n    return;\n  }\n\n  try {\n    Promise.await(Apps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter));\n  } catch (error) {\n    if (error instanceof AppsEngineException) {\n      throw new Meteor.Error('error-app-prevented', error.message);\n    }\n\n    throw error;\n  }\n\n  if (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n    // Add a new event, with an optional inviter\n    callbacks.run('beforeAddedToRoom', {\n      user,\n      inviter\n    }, room); // Keep the current event\n\n    callbacks.run('beforeJoinRoom', user, room);\n  }\n\n  Promise.await(Apps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter).catch(error => {\n    if (error instanceof AppsEngineException) {\n      throw new Meteor.Error('error-app-prevented', error.message);\n    }\n\n    throw error;\n  }));\n  Subscriptions.createWithRoomAndUser(room, user, {\n    ts: now,\n    open: true,\n    alert: true,\n    unread: 1,\n    userMentions: 1,\n    groupMentions: 0\n  });\n\n  if (!silenced) {\n    if (inviter) {\n      Messages.createUserAddedWithRoomIdAndUser(rid, user, {\n        ts: now,\n        u: {\n          _id: inviter._id,\n          username: inviter.username\n        }\n      });\n    } else if (room.prid) {\n      Messages.createUserJoinWithRoomIdAndUserDiscussion(rid, user, {\n        ts: now\n      });\n    } else if (room.teamMain) {\n      Messages.createUserJoinTeamWithRoomIdAndUser(rid, user, {\n        ts: now\n      });\n    } else {\n      Messages.createUserJoinWithRoomIdAndUser(rid, user, {\n        ts: now\n      });\n    }\n  }\n\n  if (room.t === 'c' || room.t === 'p') {\n    Meteor.defer(function () {\n      // Add a new event, with an optional inviter\n      callbacks.run('afterAddedToRoom', {\n        user,\n        inviter\n      }, room); // Keep the current event\n\n      callbacks.run('afterJoinRoom', user, room);\n      Apps.triggerEvent(AppEvents.IPostRoomUserJoined, room, user, inviter);\n    });\n  }\n\n  if (room.teamMain && room.teamId) {\n    // if user is joining to main team channel, create a membership\n    Promise.await(Team.addMember(inviter, user._id, room.teamId));\n  }\n\n  return true;\n};","map":{"version":3,"sources":["app/lib/server/functions/addUserToRoom.js"],"names":["module","export","addUserToRoom","AppsEngineException","link","v","Meteor","AppEvents","Apps","callbacks","Messages","Rooms","Subscriptions","Team","RoomMemberActions","roomTypes","rid","user","inviter","silenced","now","Date","room","findOneById","roomConfig","getConfig","t","allowMemberAction","JOIN","INVITE","subscription","findOneByRoomIdAndUserId","_id","Promise","await","triggerEvent","IPreRoomUserJoined","error","Error","message","run","catch","createWithRoomAndUser","ts","open","alert","unread","userMentions","groupMentions","createUserAddedWithRoomIdAndUser","u","username","prid","createUserJoinWithRoomIdAndUserDiscussion","teamMain","createUserJoinTeamWithRoomIdAndUser","createUserJoinWithRoomIdAndUser","defer","IPostRoomUserJoined","teamId","addMember"],"mappings":"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","sourcesContent":["import { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Meteor } from 'meteor/meteor';\n\nimport { AppEvents, Apps } from '../../../apps/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Messages, Rooms, Subscriptions } from '../../../models';\nimport { Team } from '../../../../server/sdk';\nimport { RoomMemberActions, roomTypes } from '../../../utils/server';\n\nexport const addUserToRoom = function (rid, user, inviter, silenced) {\n\tconst now = new Date();\n\tconst room = Rooms.findOneById(rid);\n\n\tconst roomConfig = roomTypes.getConfig(room.t);\n\tif (!roomConfig.allowMemberAction(room, RoomMemberActions.JOIN) && !roomConfig.allowMemberAction(room, RoomMemberActions.INVITE)) {\n\t\treturn;\n\t}\n\n\t// Check if user is already in room\n\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\tif (subscription) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tPromise.await(Apps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter));\n\t} catch (error) {\n\t\tif (error instanceof AppsEngineException) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tif (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n\t\t// Add a new event, with an optional inviter\n\t\tcallbacks.run('beforeAddedToRoom', { user, inviter }, room);\n\n\t\t// Keep the current event\n\t\tcallbacks.run('beforeJoinRoom', user, room);\n\t}\n\n\tPromise.await(\n\t\tApps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter).catch((error) => {\n\t\t\tif (error instanceof AppsEngineException) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}),\n\t);\n\n\tSubscriptions.createWithRoomAndUser(room, user, {\n\t\tts: now,\n\t\topen: true,\n\t\talert: true,\n\t\tunread: 1,\n\t\tuserMentions: 1,\n\t\tgroupMentions: 0,\n\t});\n\n\tif (!silenced) {\n\t\tif (inviter) {\n\t\t\tMessages.createUserAddedWithRoomIdAndUser(rid, user, {\n\t\t\t\tts: now,\n\t\t\t\tu: {\n\t\t\t\t\t_id: inviter._id,\n\t\t\t\t\tusername: inviter.username,\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (room.prid) {\n\t\t\tMessages.createUserJoinWithRoomIdAndUserDiscussion(rid, user, { ts: now });\n\t\t} else if (room.teamMain) {\n\t\t\tMessages.createUserJoinTeamWithRoomIdAndUser(rid, user, { ts: now });\n\t\t} else {\n\t\t\tMessages.createUserJoinWithRoomIdAndUser(rid, user, { ts: now });\n\t\t}\n\t}\n\n\tif (room.t === 'c' || room.t === 'p') {\n\t\tMeteor.defer(function () {\n\t\t\t// Add a new event, with an optional inviter\n\t\t\tcallbacks.run('afterAddedToRoom', { user, inviter }, room);\n\n\t\t\t// Keep the current event\n\t\t\tcallbacks.run('afterJoinRoom', user, room);\n\n\t\t\tApps.triggerEvent(AppEvents.IPostRoomUserJoined, room, user, inviter);\n\t\t});\n\t}\n\n\tif (room.teamMain && room.teamId) {\n\t\t// if user is joining to main team channel, create a membership\n\t\tPromise.await(Team.addMember(inviter, user._id, room.teamId));\n\t}\n\n\treturn true;\n};\n"]},"sourceType":"module","hash":"b9a3dbdbfffca5333cd6fc8aeb7d446f1ca99d62"}

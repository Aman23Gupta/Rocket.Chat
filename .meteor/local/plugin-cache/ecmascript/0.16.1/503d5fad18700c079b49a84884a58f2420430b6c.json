{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v187.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v187.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v187.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v187.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v187.js"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 1);\nlet NotificationQueue, Settings;\nmodule.link(\"../../../app/models/server/raw\", {\n  NotificationQueue(v) {\n    NotificationQueue = v;\n  },\n\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 2);\n\nfunction convertNotification(notification) {\n  try {\n    var _notification$payload, _notification$apn;\n\n    const {\n      userId\n    } = JSON.parse(notification.query);\n    const username = (_notification$payload = notification.payload.sender) === null || _notification$payload === void 0 ? void 0 : _notification$payload.username;\n    const roomName = notification.title !== username ? notification.title : '';\n    const message = roomName === '' ? notification.text : notification.text.replace(\"\".concat(username, \": \"), '');\n    return {\n      _id: notification._id,\n      uid: userId,\n      rid: notification.payload.rid,\n      mid: notification.payload.messageId,\n      ts: notification.createdAt,\n      items: [{\n        type: 'push',\n        data: {\n          payload: notification.payload,\n          roomName,\n          username,\n          message,\n          badge: notification.badge,\n          category: (_notification$apn = notification.apn) === null || _notification$apn === void 0 ? void 0 : _notification$apn.category\n        }\n      }]\n    };\n  } catch (e) {//\n  }\n}\n\nfunction migrateNotifications() {\n  return Promise.asyncApply(() => {\n    const notificationsCollection = new Mongo.Collection('_raix_push_notifications');\n    const date = new Date();\n    date.setHours(date.getHours() - 2); // 2 hours ago;\n\n    const cursor = notificationsCollection.rawCollection().find({\n      createdAt: {\n        $gte: date\n      }\n    });\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n\n    var _iteratorError;\n\n    try {\n      for (var _iterator = _asyncIterator(cursor), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n        const notification = _step.value;\n        const newNotification = convertNotification(notification);\n\n        if (newNotification) {\n          Promise.await(NotificationQueue.insertOne(newNotification));\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          Promise.await(_iterator.return());\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return notificationsCollection.rawCollection().drop();\n  });\n}\n\naddMigration({\n  version: 187,\n\n  up() {\n    return Promise.asyncApply(() => {\n      Promise.await(Settings.removeById('Push_send_interval'));\n      Promise.await(Settings.removeById('Push_send_batch_size'));\n      Promise.await(Settings.removeById('Push_debug'));\n      Promise.await(Settings.removeById('Notifications_Always_Notify_Mobile'));\n\n      try {\n        Promise.await(migrateNotifications());\n      } catch (err) {\n        // Ignore if the collection does not exist\n        if (!err.code || err.code !== 26) {\n          throw err;\n        }\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v187.js"],"names":["_asyncIterator","module","link","default","v","Mongo","addMigration","NotificationQueue","Settings","convertNotification","notification","userId","JSON","parse","query","username","payload","sender","roomName","title","message","text","replace","_id","uid","rid","mid","messageId","ts","createdAt","items","type","data","badge","category","apn","e","migrateNotifications","notificationsCollection","Collection","date","Date","setHours","getHours","cursor","rawCollection","find","$gte","newNotification","insertOne","drop","version","up","removeById","err","code"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nimport { addMigration } from '../../lib/migrations';\nimport { NotificationQueue, Settings } from '../../../app/models/server/raw';\n\nfunction convertNotification(notification) {\n\ttry {\n\t\tconst { userId } = JSON.parse(notification.query);\n\t\tconst username = notification.payload.sender?.username;\n\t\tconst roomName = notification.title !== username ? notification.title : '';\n\n\t\tconst message = roomName === '' ? notification.text : notification.text.replace(`${username}: `, '');\n\n\t\treturn {\n\t\t\t_id: notification._id,\n\t\t\tuid: userId,\n\t\t\trid: notification.payload.rid,\n\t\t\tmid: notification.payload.messageId,\n\t\t\tts: notification.createdAt,\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'push',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tpayload: notification.payload,\n\t\t\t\t\t\troomName,\n\t\t\t\t\t\tusername,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tbadge: notification.badge,\n\t\t\t\t\t\tcategory: notification.apn?.category,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t} catch (e) {\n\t\t//\n\t}\n}\n\nasync function migrateNotifications() {\n\tconst notificationsCollection = new Mongo.Collection('_raix_push_notifications');\n\n\tconst date = new Date();\n\tdate.setHours(date.getHours() - 2); // 2 hours ago;\n\n\tconst cursor = notificationsCollection.rawCollection().find({\n\t\tcreatedAt: { $gte: date },\n\t});\n\tfor await (const notification of cursor) {\n\t\tconst newNotification = convertNotification(notification);\n\t\tif (newNotification) {\n\t\t\tawait NotificationQueue.insertOne(newNotification);\n\t\t}\n\t}\n\treturn notificationsCollection.rawCollection().drop();\n}\n\naddMigration({\n\tversion: 187,\n\tasync up() {\n\t\tawait Settings.removeById('Push_send_interval');\n\t\tawait Settings.removeById('Push_send_batch_size');\n\t\tawait Settings.removeById('Push_debug');\n\t\tawait Settings.removeById('Notifications_Always_Notify_Mobile');\n\n\t\ttry {\n\t\t\tawait migrateNotifications();\n\t\t} catch (err) {\n\t\t\t// Ignore if the collection does not exist\n\t\t\tif (!err.code || err.code !== 26) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t},\n});\n"]},"sourceType":"module","hash":"503d5fad18700c079b49a84884a58f2420430b6c"}

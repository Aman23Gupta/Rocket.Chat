{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/handler/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/handler/index.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/handler/index.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/handler/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/handler/index.js"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nmodule.export({\n  federationSearchUsers: () => federationSearchUsers,\n  getUserByUsername: () => getUserByUsername,\n  requestEventsFromLatest: () => requestEventsFromLatest,\n  dispatchEvents: () => dispatchEvents,\n  dispatchEvent: () => dispatchEvent,\n  getUpload: () => getUpload\n});\nlet qs;\nmodule.link(\"querystring\", {\n  default(v) {\n    qs = v;\n  }\n\n}, 0);\nlet disabled;\nmodule.link(\"../functions/errors\", {\n  disabled(v) {\n    disabled = v;\n  }\n\n}, 1);\nlet clientLogger;\nmodule.link(\"../lib/logger\", {\n  clientLogger(v) {\n    clientLogger = v;\n  }\n\n}, 2);\nlet isFederationEnabled;\nmodule.link(\"../lib/isFederationEnabled\", {\n  isFederationEnabled(v) {\n    isFederationEnabled = v;\n  }\n\n}, 3);\nlet federationRequestToPeer;\nmodule.link(\"../lib/http\", {\n  federationRequestToPeer(v) {\n    federationRequestToPeer = v;\n  }\n\n}, 4);\n\nfunction federationSearchUsers(query) {\n  return Promise.asyncApply(() => {\n    if (!isFederationEnabled()) {\n      throw disabled('client.searchUsers');\n    }\n\n    clientLogger.debug({\n      msg: 'searchUsers',\n      query\n    });\n    const [username, peerDomain] = query.split('@');\n    const uri = \"/api/v1/federation.users.search?\".concat(qs.stringify({\n      username,\n      domain: peerDomain\n    }));\n    const {\n      data: {\n        users\n      }\n    } = Promise.await(federationRequestToPeer('GET', peerDomain, uri));\n    return users;\n  });\n}\n\nfunction getUserByUsername(query) {\n  return Promise.asyncApply(() => {\n    if (!isFederationEnabled()) {\n      throw disabled('client.searchUsers');\n    }\n\n    clientLogger.debug({\n      msg: 'getUserByUsername',\n      query\n    });\n    const [username, peerDomain] = query.split('@');\n    const uri = \"/api/v1/federation.users.getByUsername?\".concat(qs.stringify({\n      username\n    }));\n    const {\n      data: {\n        user\n      }\n    } = Promise.await(federationRequestToPeer('GET', peerDomain, uri));\n    return user;\n  });\n}\n\nfunction requestEventsFromLatest(domain, fromDomain, contextType, contextQuery, latestEventIds) {\n  return Promise.asyncApply(() => {\n    if (!isFederationEnabled()) {\n      throw disabled('client.requestEventsFromLatest');\n    }\n\n    clientLogger.debug({\n      msg: 'requestEventsFromLatest',\n      domain,\n      contextType,\n      contextQuery,\n      latestEventIds\n    });\n    const uri = '/api/v1/federation.events.requestFromLatest';\n    Promise.await(federationRequestToPeer('POST', domain, uri, {\n      fromDomain,\n      contextType,\n      contextQuery,\n      latestEventIds\n    }));\n  });\n}\n\nfunction dispatchEvents(domains, events) {\n  return Promise.asyncApply(() => {\n    if (!isFederationEnabled()) {\n      throw disabled('client.dispatchEvents');\n    }\n\n    domains = [...new Set(domains)];\n    clientLogger.debug({\n      msg: 'dispatchEvents',\n      domains,\n      events\n    });\n    const uri = '/api/v1/federation.events.dispatch';\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n\n    var _iteratorError;\n\n    try {\n      for (var _iterator = _asyncIterator(domains), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n        const domain = _step.value;\n        Promise.await(federationRequestToPeer('POST', domain, uri, {\n          events\n        }, {\n          ignoreErrors: true\n        }));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          Promise.await(_iterator.return());\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  });\n}\n\nfunction dispatchEvent(domains, event) {\n  return Promise.asyncApply(() => {\n    Promise.await(dispatchEvents([...new Set(domains)], [event]));\n  });\n}\n\nfunction getUpload(domain, fileId) {\n  return Promise.asyncApply(() => {\n    const {\n      data: {\n        upload,\n        buffer\n      }\n    } = Promise.await(federationRequestToPeer('GET', domain, \"/api/v1/federation.uploads?\".concat(qs.stringify({\n      upload_id: fileId\n    }))));\n    return {\n      upload,\n      buffer: Buffer.from(buffer)\n    };\n  });\n}","map":{"version":3,"sources":["app/federation/server/handler/index.js"],"names":["_asyncIterator","module","link","default","v","export","federationSearchUsers","getUserByUsername","requestEventsFromLatest","dispatchEvents","dispatchEvent","getUpload","qs","disabled","clientLogger","isFederationEnabled","federationRequestToPeer","query","debug","msg","username","peerDomain","split","uri","stringify","domain","data","users","user","fromDomain","contextType","contextQuery","latestEventIds","domains","events","Set","ignoreErrors","event","fileId","upload","buffer","upload_id","Buffer","from"],"mappings":"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","sourcesContent":["import qs from 'querystring';\n\nimport { disabled } from '../functions/errors';\nimport { clientLogger } from '../lib/logger';\nimport { isFederationEnabled } from '../lib/isFederationEnabled';\nimport { federationRequestToPeer } from '../lib/http';\n\nexport async function federationSearchUsers(query) {\n\tif (!isFederationEnabled()) {\n\t\tthrow disabled('client.searchUsers');\n\t}\n\n\tclientLogger.debug({ msg: 'searchUsers', query });\n\n\tconst [username, peerDomain] = query.split('@');\n\n\tconst uri = `/api/v1/federation.users.search?${qs.stringify({ username, domain: peerDomain })}`;\n\n\tconst {\n\t\tdata: { users },\n\t} = await federationRequestToPeer('GET', peerDomain, uri);\n\n\treturn users;\n}\n\nexport async function getUserByUsername(query) {\n\tif (!isFederationEnabled()) {\n\t\tthrow disabled('client.searchUsers');\n\t}\n\n\tclientLogger.debug({ msg: 'getUserByUsername', query });\n\n\tconst [username, peerDomain] = query.split('@');\n\n\tconst uri = `/api/v1/federation.users.getByUsername?${qs.stringify({ username })}`;\n\n\tconst {\n\t\tdata: { user },\n\t} = await federationRequestToPeer('GET', peerDomain, uri);\n\n\treturn user;\n}\n\nexport async function requestEventsFromLatest(domain, fromDomain, contextType, contextQuery, latestEventIds) {\n\tif (!isFederationEnabled()) {\n\t\tthrow disabled('client.requestEventsFromLatest');\n\t}\n\n\tclientLogger.debug({\n\t\tmsg: 'requestEventsFromLatest',\n\t\tdomain,\n\t\tcontextType,\n\t\tcontextQuery,\n\t\tlatestEventIds,\n\t});\n\n\tconst uri = '/api/v1/federation.events.requestFromLatest';\n\n\tawait federationRequestToPeer('POST', domain, uri, {\n\t\tfromDomain,\n\t\tcontextType,\n\t\tcontextQuery,\n\t\tlatestEventIds,\n\t});\n}\n\nexport async function dispatchEvents(domains, events) {\n\tif (!isFederationEnabled()) {\n\t\tthrow disabled('client.dispatchEvents');\n\t}\n\n\tdomains = [...new Set(domains)];\n\n\tclientLogger.debug({ msg: 'dispatchEvents', domains, events });\n\n\tconst uri = '/api/v1/federation.events.dispatch';\n\n\tfor await (const domain of domains) {\n\t\tawait federationRequestToPeer('POST', domain, uri, { events }, { ignoreErrors: true });\n\t}\n}\n\nexport async function dispatchEvent(domains, event) {\n\tawait dispatchEvents([...new Set(domains)], [event]);\n}\n\nexport async function getUpload(domain, fileId) {\n\tconst {\n\t\tdata: { upload, buffer },\n\t} = await federationRequestToPeer('GET', domain, `/api/v1/federation.uploads?${qs.stringify({ upload_id: fileId })}`);\n\n\treturn { upload, buffer: Buffer.from(buffer) };\n}\n"]},"sourceType":"module","hash":"e5ff810556f88c6fb99ab209ae7f3e07d007e6c4"}

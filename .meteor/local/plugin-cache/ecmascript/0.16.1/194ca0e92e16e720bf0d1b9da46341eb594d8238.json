{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/server/lib/FileUpload.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/server/lib/FileUpload.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/server/lib/FileUpload.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/server/lib/FileUpload.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/server/lib/FileUpload.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  FileUpload: () => FileUpload,\n  FileUploadClass: () => FileUploadClass\n});\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 0);\nlet stream;\nmodule.link(\"stream\", {\n  default(v) {\n    stream = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 3);\nlet streamBuffers;\nmodule.link(\"stream-buffers\", {\n  default(v) {\n    streamBuffers = v;\n  }\n\n}, 4);\nlet Future;\nmodule.link(\"fibers/future\", {\n  default(v) {\n    Future = v;\n  }\n\n}, 5);\nlet sharp;\nmodule.link(\"sharp\", {\n  default(v) {\n    sharp = v;\n  }\n\n}, 6);\nlet Cookies;\nmodule.link(\"meteor/ostrio:cookies\", {\n  Cookies(v) {\n    Cookies = v;\n  }\n\n}, 7);\nlet UploadFS;\nmodule.link(\"meteor/jalik:ufs\", {\n  UploadFS(v) {\n    UploadFS = v;\n  }\n\n}, 8);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 9);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 10);\nlet filesize;\nmodule.link(\"filesize\", {\n  default(v) {\n    filesize = v;\n  }\n\n}, 11);\nlet AppsEngineException;\nmodule.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n  AppsEngineException(v) {\n    AppsEngineException = v;\n  }\n\n}, 12);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 13);\nlet Avatars, UserDataFiles, Uploads;\nmodule.link(\"../../../models/server/raw\", {\n  Avatars(v) {\n    Avatars = v;\n  },\n\n  UserDataFiles(v) {\n    UserDataFiles = v;\n  },\n\n  Uploads(v) {\n    Uploads = v;\n  }\n\n}, 14);\nlet Users;\nmodule.link(\"../../../models/server/models/Users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 15);\nlet Rooms;\nmodule.link(\"../../../models/server/models/Rooms\", {\n  default(v) {\n    Rooms = v;\n  }\n\n}, 16);\nlet Settings;\nmodule.link(\"../../../models/server/models/Settings\", {\n  default(v) {\n    Settings = v;\n  }\n\n}, 17);\nlet mime;\nmodule.link(\"../../../utils/lib/mimeTypes\", {\n  mime(v) {\n    mime = v;\n  }\n\n}, 18);\nlet roomTypes;\nmodule.link(\"../../../utils/server/lib/roomTypes\", {\n  roomTypes(v) {\n    roomTypes = v;\n  }\n\n}, 19);\nlet hasPermission;\nmodule.link(\"../../../authorization/server/functions/hasPermission\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 20);\nlet canAccessRoom;\nmodule.link(\"../../../authorization/server/functions/canAccessRoom\", {\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  }\n\n}, 21);\nlet fileUploadIsValidContentType;\nmodule.link(\"../../../utils/lib/fileUploadRestrictions\", {\n  fileUploadIsValidContentType(v) {\n    fileUploadIsValidContentType = v;\n  }\n\n}, 22);\nlet isValidJWT, generateJWT;\nmodule.link(\"../../../utils/server/lib/JWTHelper\", {\n  isValidJWT(v) {\n    isValidJWT = v;\n  },\n\n  generateJWT(v) {\n    generateJWT = v;\n  }\n\n}, 23);\nlet Messages;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 24);\nlet AppEvents, Apps;\nmodule.link(\"../../../apps/server\", {\n  AppEvents(v) {\n    AppEvents = v;\n  },\n\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 25);\nlet streamToBuffer;\nmodule.link(\"./streamToBuffer\", {\n  streamToBuffer(v) {\n    streamToBuffer = v;\n  }\n\n}, 26);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 27);\nconst cookie = new Cookies();\nlet maxFileSize = 0;\nsettings.watch('FileUpload_MaxFileSize', function (value) {\n  try {\n    maxFileSize = parseInt(value);\n  } catch (e) {\n    maxFileSize = Settings.findOneById('FileUpload_MaxFileSize').packageValue;\n  }\n});\nconst AvatarModel = new Mongo.Collection(Avatars.col.collectionName);\nconst UserDataFilesModel = new Mongo.Collection(UserDataFiles.col.collectionName);\nconst UploadsModel = new Mongo.Collection(Uploads.col.collectionName);\nconst FileUpload = {\n  handlers: {},\n\n  getPath() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return \"/file-upload/\".concat(path);\n  },\n\n  configureUploadsStore(store, name, options) {\n    const type = name.split(':').pop();\n    const stores = UploadFS.getStores();\n    delete stores[name];\n    return new UploadFS.store[store](Object.assign({\n      name\n    }, options, FileUpload[\"default\".concat(type)]()));\n  },\n\n  validateFileUpload(fileData) {\n    const {\n      file = fileData,\n      content = Buffer.from([])\n    } = fileData;\n\n    if (!Match.test(file.rid, String)) {\n      return false;\n    } // livechat users can upload files but they don't have an userId\n\n\n    const user = file.userId ? Meteor.users.findOne(file.userId) : null;\n    const room = Rooms.findOneById(file.rid);\n    const directMessageAllowed = settings.get('FileUpload_Enabled_Direct');\n    const fileUploadAllowed = settings.get('FileUpload_Enabled');\n\n    if ((user === null || user === void 0 ? void 0 : user.type) !== 'app' && canAccessRoom(room, user, file) !== true) {\n      return false;\n    }\n\n    const language = user ? user.language : 'en';\n\n    if (!fileUploadAllowed) {\n      const reason = TAPi18n.__('FileUpload_Disabled', language);\n\n      throw new Meteor.Error('error-file-upload-disabled', reason);\n    }\n\n    if (!directMessageAllowed && room.t === 'd') {\n      const reason = TAPi18n.__('File_not_allowed_direct_messages', language);\n\n      throw new Meteor.Error('error-direct-message-file-upload-not-allowed', reason);\n    } // -1 maxFileSize means there is no limit\n\n\n    if (maxFileSize > -1 && file.size > maxFileSize) {\n      const reason = TAPi18n.__('File_exceeds_allowed_size_of_bytes', {\n        size: filesize(maxFileSize)\n      }, language);\n\n      throw new Meteor.Error('error-file-too-large', reason);\n    }\n\n    if (!fileUploadIsValidContentType(file.type)) {\n      const reason = TAPi18n.__('File_type_is_not_accepted', language);\n\n      throw new Meteor.Error('error-invalid-file-type', reason);\n    } // App IPreFileUpload event hook\n\n\n    try {\n      Promise.await(Apps.triggerEvent(AppEvents.IPreFileUpload, {\n        file,\n        content\n      }));\n    } catch (error) {\n      if (error instanceof AppsEngineException) {\n        throw new Meteor.Error('error-app-prevented', error.message);\n      }\n\n      throw error;\n    }\n\n    return true;\n  },\n\n  validateAvatarUpload(_ref) {\n    let {\n      file\n    } = _ref;\n\n    if (!Match.test(file.rid, String) && !Match.test(file.userId, String)) {\n      return false;\n    }\n\n    const user = file.uid ? Meteor.users.findOne(file.uid, {\n      fields: {\n        language: 1\n      }\n    }) : null;\n    const language = (user === null || user === void 0 ? void 0 : user.language) || 'en'; // accept only images\n\n    if (!/^image\\//.test(file.type)) {\n      const reason = TAPi18n.__('File_type_is_not_accepted', language);\n\n      throw new Meteor.Error('error-invalid-file-type', reason);\n    } // -1 maxFileSize means there is no limit\n\n\n    if (maxFileSize > -1 && file.size > maxFileSize) {\n      const reason = TAPi18n.__('File_exceeds_allowed_size_of_bytes', {\n        size: filesize(maxFileSize)\n      }, language);\n\n      throw new Meteor.Error('error-file-too-large', reason);\n    }\n\n    return true;\n  },\n\n  defaultUploads() {\n    return {\n      collection: UploadsModel,\n      filter: new UploadFS.Filter({\n        onCheck: FileUpload.validateFileUpload\n      }),\n\n      getPath(file) {\n        return \"\".concat(settings.get('uniqueID'), \"/uploads/\").concat(file.rid, \"/\").concat(file.userId, \"/\").concat(file._id);\n      },\n\n      onValidate: FileUpload.uploadsOnValidate,\n\n      onRead(fileId, file, req, res) {\n        if (!FileUpload.requestCanAccessFiles(req)) {\n          res.writeHead(403);\n          return false;\n        }\n\n        res.setHeader('content-disposition', \"attachment; filename=\\\"\".concat(encodeURIComponent(file.name), \"\\\"\"));\n        return true;\n      }\n\n    };\n  },\n\n  defaultAvatars() {\n    return {\n      collection: AvatarModel,\n      filter: new UploadFS.Filter({\n        onCheck: FileUpload.validateAvatarUpload\n      }),\n\n      getPath(file) {\n        const avatarFile = file.rid ? \"room-\".concat(file.rid) : file.userId;\n        return \"\".concat(settings.get('uniqueID'), \"/avatars/\").concat(avatarFile);\n      },\n\n      onValidate: FileUpload.avatarsOnValidate,\n      onFinishUpload: FileUpload.avatarsOnFinishUpload\n    };\n  },\n\n  defaultUserDataFiles() {\n    return {\n      collection: UserDataFilesModel,\n\n      getPath(file) {\n        return \"\".concat(settings.get('uniqueID'), \"/uploads/userData/\").concat(file.userId);\n      },\n\n      onValidate: FileUpload.uploadsOnValidate,\n\n      onRead(fileId, file, req, res) {\n        if (!FileUpload.requestCanAccessFiles(req)) {\n          res.writeHead(403);\n          return false;\n        }\n\n        res.setHeader('content-disposition', \"attachment; filename=\\\"\".concat(encodeURIComponent(file.name), \"\\\"\"));\n        return true;\n      }\n\n    };\n  },\n\n  avatarsOnValidate(file) {\n    if (settings.get('Accounts_AvatarResize') !== true) {\n      return;\n    }\n\n    if (file.rid) {\n      if (!hasPermission(Meteor.userId(), 'edit-room-avatar', file.rid)) {\n        throw new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n      }\n    } else if (Meteor.userId() !== file.userId && !hasPermission(Meteor.userId(), 'edit-other-user-avatar')) {\n      throw new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n    }\n\n    const tempFilePath = UploadFS.getTempFilePath(file._id);\n    const height = settings.get('Accounts_AvatarSize');\n    const width = height;\n    const future = new Future();\n    const s = sharp(tempFilePath);\n    s.rotate();\n    s.metadata(Meteor.bindEnvironment((err, metadata) => {\n      if (!metadata) {\n        metadata = {};\n      }\n\n      s.resize({\n        width,\n        height,\n        fit: metadata.hasAlpha ? sharp.fit.contain : sharp.fit.cover,\n        background: {\n          r: 255,\n          g: 255,\n          b: 255,\n          alpha: metadata.hasAlpha ? 0 : 1\n        }\n      }) // Use buffer to get the result in memory then replace the existing file\n      // There is no option to override a file using this library\n      //\n      // BY THE SHARP DOCUMENTATION:\n      // toBuffer: Write output to a Buffer. JPEG, PNG, WebP, TIFF and RAW output are supported.\n      // By default, the format will match the input image, except GIF and SVG input which become PNG output.\n      .toBuffer({\n        resolveWithObject: true\n      }).then(Meteor.bindEnvironment(_ref2 => {\n        let {\n          data,\n          info\n        } = _ref2;\n        fs.writeFile(tempFilePath, data, Meteor.bindEnvironment(err => {\n          if (err != null) {\n            SystemLogger.error(err);\n          }\n\n          this.getCollection().direct.update({\n            _id: file._id\n          }, {\n            $set: _objectSpread({\n              size: info.size\n            }, ['gif', 'svg'].includes(metadata.format) ? {\n              type: 'image/png'\n            } : {})\n          });\n          future.return();\n        }));\n      }));\n    }));\n    return future.wait();\n  },\n\n  resizeImagePreview(file) {\n    file = Promise.await(Uploads.findOneById(file._id));\n    file = FileUpload.addExtensionTo(file);\n\n    const image = FileUpload.getStore('Uploads')._store.getReadStream(file._id, file);\n\n    const transformer = sharp().resize({\n      width: 32,\n      height: 32,\n      fit: 'inside'\n    }).jpeg().blur();\n    const result = transformer.toBuffer().then(out => out.toString('base64'));\n    image.pipe(transformer);\n    return result;\n  },\n\n  createImageThumbnail(file) {\n    if (!settings.get('Message_Attachments_Thumbnails_Enabled')) {\n      return;\n    }\n\n    const width = settings.get('Message_Attachments_Thumbnails_Width');\n    const height = settings.get('Message_Attachments_Thumbnails_Height');\n\n    if (file.identify.size && file.identify.size.height < height && file.identify.size.width < width) {\n      return;\n    }\n\n    file = Promise.await(Uploads.findOneById(file._id));\n    file = FileUpload.addExtensionTo(file);\n    const store = FileUpload.getStore('Uploads');\n\n    const image = store._store.getReadStream(file._id, file);\n\n    const transformer = sharp().resize({\n      width,\n      height,\n      fit: 'inside'\n    });\n    const result = transformer.toBuffer({\n      resolveWithObject: true\n    }).then(_ref3 => {\n      let {\n        data,\n        info: {\n          width,\n          height\n        }\n      } = _ref3;\n      return {\n        data,\n        width,\n        height\n      };\n    });\n    image.pipe(transformer);\n    return result;\n  },\n\n  uploadImageThumbnail(file, buffer, rid, userId) {\n    const store = FileUpload.getStore('Uploads');\n    const details = {\n      name: \"thumb-\".concat(file.name),\n      size: buffer.length,\n      type: file.type,\n      rid,\n      userId\n    };\n    return store.insertSync(details, buffer);\n  },\n\n  uploadsOnValidate(file) {\n    if (!/^image\\/((x-windows-)?bmp|p?jpeg|png|gif)$/.test(file.type)) {\n      return;\n    }\n\n    const tmpFile = UploadFS.getTempFilePath(file._id);\n    const fut = new Future();\n    const s = sharp(tmpFile);\n    s.metadata(Meteor.bindEnvironment((err, metadata) => {\n      if (err != null) {\n        SystemLogger.error(err);\n        return fut.return();\n      }\n\n      const rotated = typeof metadata.orientation !== 'undefined' && metadata.orientation !== 1;\n      const identify = {\n        format: metadata.format,\n        size: {\n          width: rotated ? metadata.height : metadata.width,\n          height: rotated ? metadata.width : metadata.height\n        }\n      };\n\n      const reorientation = cb => {\n        if (!rotated || settings.get('FileUpload_RotateImages') !== true) {\n          return cb();\n        }\n\n        s.rotate().toFile(\"\".concat(tmpFile, \".tmp\")).then(Meteor.bindEnvironment(() => {\n          fs.unlink(tmpFile, Meteor.bindEnvironment(() => {\n            fs.rename(\"\".concat(tmpFile, \".tmp\"), tmpFile, Meteor.bindEnvironment(() => {\n              cb();\n            }));\n          }));\n        })).catch(err => {\n          SystemLogger.error(err);\n          fut.return();\n        });\n      };\n\n      reorientation(() => {\n        const {\n          size\n        } = fs.lstatSync(tmpFile);\n        this.getCollection().direct.update({\n          _id: file._id\n        }, {\n          $set: {\n            size,\n            identify\n          }\n        });\n        fut.return();\n      });\n    }));\n    return fut.wait();\n  },\n\n  avatarRoomOnFinishUpload(file) {\n    if (!hasPermission(Meteor.userId(), 'edit-room-avatar', file.rid)) {\n      throw new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n    }\n  },\n\n  avatarsOnFinishUpload(file) {\n    if (file.rid) {\n      return FileUpload.avatarRoomOnFinishUpload(file);\n    }\n\n    if (Meteor.userId() !== file.userId && !hasPermission(Meteor.userId(), 'edit-other-user-avatar')) {\n      throw new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n    } // update file record to match user's username\n\n\n    const user = Users.findOneById(file.userId);\n    const oldAvatar = Promise.await(Avatars.findOneByName(user.username));\n\n    if (oldAvatar) {\n      Promise.await(Avatars.deleteFile(oldAvatar._id));\n    }\n\n    Promise.await(Avatars.updateFileNameById(file._id, user.username)); // console.log('upload finished ->', file);\n  },\n\n  requestCanAccessFiles(_ref4) {\n    let {\n      headers = {},\n      query = {}\n    } = _ref4;\n\n    if (!settings.get('FileUpload_ProtectFiles')) {\n      return true;\n    }\n\n    let {\n      rc_uid,\n      rc_token,\n      rc_rid,\n      rc_room_type\n    } = query;\n    const {\n      token\n    } = query;\n\n    if (!rc_uid && headers.cookie) {\n      rc_uid = cookie.get('rc_uid', headers.cookie);\n      rc_token = cookie.get('rc_token', headers.cookie);\n      rc_rid = cookie.get('rc_rid', headers.cookie);\n      rc_room_type = cookie.get('rc_room_type', headers.cookie);\n    }\n\n    const isAuthorizedByCookies = rc_uid && rc_token && Users.findOneByIdAndLoginToken(rc_uid, rc_token);\n    const isAuthorizedByHeaders = headers['x-user-id'] && headers['x-auth-token'] && Users.findOneByIdAndLoginToken(headers['x-user-id'], headers['x-auth-token']);\n    const isAuthorizedByRoom = rc_room_type && roomTypes.getConfig(rc_room_type).canAccessUploadedFile({\n      rc_uid,\n      rc_rid,\n      rc_token\n    });\n    const isAuthorizedByJWT = settings.get('FileUpload_Enable_json_web_token_for_files') && token && isValidJWT(token, settings.get('FileUpload_json_web_token_secret_for_files'));\n    return isAuthorizedByCookies || isAuthorizedByHeaders || isAuthorizedByRoom || isAuthorizedByJWT;\n  },\n\n  addExtensionTo(file) {\n    if (mime.lookup(file.name) === file.type) {\n      return file;\n    } // This file type can be pretty much anything, so it's better if we don't mess with the file extension\n\n\n    if (file.type !== 'application/octet-stream') {\n      const ext = mime.extension(file.type);\n\n      if (ext && new RegExp(\"\\\\.\".concat(ext, \"$\"), 'i').test(file.name) === false) {\n        file.name = \"\".concat(file.name, \".\").concat(ext);\n      }\n    }\n\n    return file;\n  },\n\n  getStore(modelName) {\n    const storageType = settings.get('FileUpload_Storage_Type');\n    const handlerName = \"\".concat(storageType, \":\").concat(modelName);\n    return this.getStoreByName(handlerName);\n  },\n\n  getStoreByName(handlerName) {\n    if (this.handlers[handlerName] == null) {\n      SystemLogger.error(\"Upload handler \\\"\".concat(handlerName, \"\\\" does not exists\"));\n    }\n\n    return this.handlers[handlerName];\n  },\n\n  get(file, req, res, next) {\n    const store = this.getStoreByName(file.store);\n\n    if (store && store.get) {\n      return store.get(file, req, res, next);\n    }\n\n    res.writeHead(404);\n    res.end();\n  },\n\n  getBuffer(file, cb) {\n    const store = this.getStoreByName(file.store);\n\n    if (!store || !store.get) {\n      cb(new Error('Store is invalid'), null);\n    }\n\n    const buffer = new streamBuffers.WritableStreamBuffer({\n      initialSize: file.size\n    });\n    buffer.on('finish', () => {\n      cb(null, buffer.getContents());\n    });\n    store.copy(file, buffer);\n  },\n\n  getBufferSync: Meteor.wrapAsync((file, cb) => FileUpload.getBuffer(file, cb)),\n\n  copy(file, targetFile) {\n    const store = this.getStoreByName(file.store);\n    const out = fs.createWriteStream(targetFile);\n    file = FileUpload.addExtensionTo(file);\n\n    if (store.copy) {\n      store.copy(file, out);\n      return true;\n    }\n\n    return false;\n  },\n\n  redirectToFile(fileUrl, req, res) {\n    res.removeHeader('Content-Length');\n    res.removeHeader('Cache-Control');\n    res.setHeader('Location', fileUrl);\n    res.writeHead(302);\n    res.end();\n  },\n\n  proxyFile(fileName, fileUrl, forceDownload, request, req, res) {\n    res.setHeader('Content-Disposition', \"\".concat(forceDownload ? 'attachment' : 'inline', \"; filename=\\\"\").concat(encodeURI(fileName), \"\\\"\"));\n    request.get(fileUrl, fileRes => fileRes.pipe(res));\n  },\n\n  generateJWTToFileUrls(_ref5) {\n    let {\n      rid,\n      userId,\n      fileId\n    } = _ref5;\n\n    if (!settings.get('FileUpload_ProtectFiles') || !settings.get('FileUpload_Enable_json_web_token_for_files')) {\n      return;\n    }\n\n    return generateJWT({\n      rid,\n      userId,\n      fileId\n    }, settings.get('FileUpload_json_web_token_secret_for_files'));\n  },\n\n  removeFilesByRoomId(rid) {\n    if (typeof rid !== 'string' || rid.trim().length === 0) {\n      return;\n    }\n\n    Messages.find({\n      rid,\n      'file._id': {\n        $exists: true\n      }\n    }, {\n      fields: {\n        'file._id': 1\n      }\n    }).fetch().forEach(document => FileUpload.getStore('Uploads').deleteById(document.file._id));\n  }\n\n};\n\nclass FileUploadClass {\n  constructor(_ref6) {\n    let {\n      name,\n      model,\n      store,\n      get,\n      insert,\n      getStore,\n      copy\n    } = _ref6;\n    this.name = name;\n    this.model = model || this.getModelFromName();\n    this._store = store || UploadFS.getStore(name);\n    this.get = get;\n    this.copy = copy;\n\n    if (insert) {\n      this.insert = insert;\n    }\n\n    if (getStore) {\n      this.getStore = getStore;\n    }\n\n    FileUpload.handlers[name] = this;\n    this.insertSync = Meteor.wrapAsync(this.insert, this);\n  }\n\n  getStore() {\n    return this._store;\n  }\n\n  get store() {\n    return this.getStore();\n  }\n\n  set store(store) {\n    this._store = store;\n  }\n\n  getModelFromName() {\n    const modelsAvailable = {\n      Avatars,\n      Uploads,\n      UserDataFiles\n    };\n    const modelName = this.name.split(':')[1];\n\n    if (!modelsAvailable[modelName]) {\n      throw new Error('Invalid Model for FileUpload');\n    }\n\n    return modelsAvailable[modelName];\n  }\n\n  delete(fileId) {\n    // TODO: Remove this method\n    if (this.store && this.store.delete) {\n      this.store.delete(fileId);\n    }\n\n    return Promise.await(this.model.deleteFile(fileId));\n  }\n\n  deleteById(fileId) {\n    const file = Promise.await(this.model.findOneById(fileId));\n\n    if (!file) {\n      return;\n    }\n\n    const store = FileUpload.getStoreByName(file.store);\n    return store.delete(file._id);\n  }\n\n  deleteByName(fileName) {\n    const file = Promise.await(this.model.findOneByName(fileName));\n\n    if (!file) {\n      return;\n    }\n\n    const store = FileUpload.getStoreByName(file.store);\n    return store.delete(file._id);\n  }\n\n  deleteByRoomId(rid) {\n    const file = Promise.await(this.model.findOneByRoomId(rid));\n\n    if (!file) {\n      return;\n    }\n\n    const store = FileUpload.getStoreByName(file.store);\n    return store.delete(file._id);\n  }\n\n  _doInsert(fileData, streamOrBuffer, cb) {\n    const fileId = this.store.create(fileData);\n    const token = this.store.createToken(fileId);\n    const tmpFile = UploadFS.getTempFilePath(fileId);\n\n    try {\n      if (streamOrBuffer instanceof stream) {\n        streamOrBuffer.pipe(fs.createWriteStream(tmpFile));\n      } else if (streamOrBuffer instanceof Buffer) {\n        fs.writeFileSync(tmpFile, streamOrBuffer);\n      } else {\n        throw new Error('Invalid file type');\n      }\n\n      const file = Meteor.call('ufsComplete', fileId, this.name, token);\n\n      if (cb) {\n        cb(null, file);\n      }\n\n      return file;\n    } catch (e) {\n      if (cb) {\n        cb(e);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  insert(fileData, streamOrBuffer, cb) {\n    if (streamOrBuffer instanceof stream) {\n      streamOrBuffer = Promise.await(streamToBuffer(streamOrBuffer));\n    } // Check if the fileData matches store filter\n\n\n    const filter = this.store.getFilter();\n\n    if (filter && filter.check) {\n      filter.check({\n        file: fileData,\n        content: streamOrBuffer\n      });\n    }\n\n    return this._doInsert(fileData, streamOrBuffer, cb);\n  }\n\n}","map":{"version":3,"sources":["app/file-upload/server/lib/FileUpload.js"],"names":["_objectSpread","module","link","default","v","export","FileUpload","FileUploadClass","fs","stream","Meteor","Mongo","streamBuffers","Future","sharp","Cookies","UploadFS","Match","TAPi18n","filesize","AppsEngineException","settings","Avatars","UserDataFiles","Uploads","Users","Rooms","Settings","mime","roomTypes","hasPermission","canAccessRoom","fileUploadIsValidContentType","isValidJWT","generateJWT","Messages","AppEvents","Apps","streamToBuffer","SystemLogger","cookie","maxFileSize","watch","value","parseInt","e","findOneById","packageValue","AvatarModel","Collection","col","collectionName","UserDataFilesModel","UploadsModel","handlers","getPath","path","configureUploadsStore","store","name","options","type","split","pop","stores","getStores","Object","assign","validateFileUpload","fileData","file","content","Buffer","from","test","rid","String","user","userId","users","findOne","room","directMessageAllowed","get","fileUploadAllowed","language","reason","__","Error","t","size","Promise","await","triggerEvent","IPreFileUpload","error","message","validateAvatarUpload","uid","fields","defaultUploads","collection","filter","Filter","onCheck","_id","onValidate","uploadsOnValidate","onRead","fileId","req","res","requestCanAccessFiles","writeHead","setHeader","encodeURIComponent","defaultAvatars","avatarFile","avatarsOnValidate","onFinishUpload","avatarsOnFinishUpload","defaultUserDataFiles","tempFilePath","getTempFilePath","height","width","future","s","rotate","metadata","bindEnvironment","err","resize","fit","hasAlpha","contain","cover","background","r","g","b","alpha","toBuffer","resolveWithObject","then","data","info","writeFile","getCollection","direct","update","$set","includes","format","return","wait","resizeImagePreview","addExtensionTo","image","getStore","_store","getReadStream","transformer","jpeg","blur","result","out","toString","pipe","createImageThumbnail","identify","uploadImageThumbnail","buffer","details","length","insertSync","tmpFile","fut","rotated","orientation","reorientation","cb","toFile","unlink","rename","catch","lstatSync","avatarRoomOnFinishUpload","oldAvatar","findOneByName","username","deleteFile","updateFileNameById","headers","query","rc_uid","rc_token","rc_rid","rc_room_type","token","isAuthorizedByCookies","findOneByIdAndLoginToken","isAuthorizedByHeaders","isAuthorizedByRoom","getConfig","canAccessUploadedFile","isAuthorizedByJWT","lookup","ext","extension","RegExp","modelName","storageType","handlerName","getStoreByName","next","end","getBuffer","WritableStreamBuffer","initialSize","on","getContents","copy","getBufferSync","wrapAsync","targetFile","createWriteStream","redirectToFile","fileUrl","removeHeader","proxyFile","fileName","forceDownload","request","encodeURI","fileRes","generateJWTToFileUrls","removeFilesByRoomId","trim","find","$exists","fetch","forEach","document","deleteById","constructor","model","insert","getModelFromName","modelsAvailable","delete","deleteByName","deleteByRoomId","findOneByRoomId","_doInsert","streamOrBuffer","create","createToken","writeFileSync","call","getFilter","check"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport stream from 'stream';\n\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport streamBuffers from 'stream-buffers';\nimport Future from 'fibers/future';\nimport sharp from 'sharp';\nimport { Cookies } from 'meteor/ostrio:cookies';\nimport { UploadFS } from 'meteor/jalik:ufs';\nimport { Match } from 'meteor/check';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport filesize from 'filesize';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\n\nimport { settings } from '../../../settings/server';\nimport { Avatars, UserDataFiles, Uploads } from '../../../models/server/raw';\nimport Users from '../../../models/server/models/Users';\nimport Rooms from '../../../models/server/models/Rooms';\nimport Settings from '../../../models/server/models/Settings';\nimport { mime } from '../../../utils/lib/mimeTypes';\nimport { roomTypes } from '../../../utils/server/lib/roomTypes';\nimport { hasPermission } from '../../../authorization/server/functions/hasPermission';\nimport { canAccessRoom } from '../../../authorization/server/functions/canAccessRoom';\nimport { fileUploadIsValidContentType } from '../../../utils/lib/fileUploadRestrictions';\nimport { isValidJWT, generateJWT } from '../../../utils/server/lib/JWTHelper';\nimport { Messages } from '../../../models/server';\nimport { AppEvents, Apps } from '../../../apps/server';\nimport { streamToBuffer } from './streamToBuffer';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\nconst cookie = new Cookies();\nlet maxFileSize = 0;\n\nsettings.watch('FileUpload_MaxFileSize', function (value) {\n\ttry {\n\t\tmaxFileSize = parseInt(value);\n\t} catch (e) {\n\t\tmaxFileSize = Settings.findOneById('FileUpload_MaxFileSize').packageValue;\n\t}\n});\n\nconst AvatarModel = new Mongo.Collection(Avatars.col.collectionName);\nconst UserDataFilesModel = new Mongo.Collection(UserDataFiles.col.collectionName);\nconst UploadsModel = new Mongo.Collection(Uploads.col.collectionName);\n\nexport const FileUpload = {\n\thandlers: {},\n\n\tgetPath(path = '') {\n\t\treturn `/file-upload/${path}`;\n\t},\n\n\tconfigureUploadsStore(store, name, options) {\n\t\tconst type = name.split(':').pop();\n\t\tconst stores = UploadFS.getStores();\n\t\tdelete stores[name];\n\n\t\treturn new UploadFS.store[store](\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t\tFileUpload[`default${type}`](),\n\t\t\t),\n\t\t);\n\t},\n\n\tvalidateFileUpload(fileData) {\n\t\tconst { file = fileData, content = Buffer.from([]) } = fileData;\n\t\tif (!Match.test(file.rid, String)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// livechat users can upload files but they don't have an userId\n\t\tconst user = file.userId ? Meteor.users.findOne(file.userId) : null;\n\n\t\tconst room = Rooms.findOneById(file.rid);\n\t\tconst directMessageAllowed = settings.get('FileUpload_Enabled_Direct');\n\t\tconst fileUploadAllowed = settings.get('FileUpload_Enabled');\n\t\tif (user?.type !== 'app' && canAccessRoom(room, user, file) !== true) {\n\t\t\treturn false;\n\t\t}\n\t\tconst language = user ? user.language : 'en';\n\t\tif (!fileUploadAllowed) {\n\t\t\tconst reason = TAPi18n.__('FileUpload_Disabled', language);\n\t\t\tthrow new Meteor.Error('error-file-upload-disabled', reason);\n\t\t}\n\n\t\tif (!directMessageAllowed && room.t === 'd') {\n\t\t\tconst reason = TAPi18n.__('File_not_allowed_direct_messages', language);\n\t\t\tthrow new Meteor.Error('error-direct-message-file-upload-not-allowed', reason);\n\t\t}\n\n\t\t// -1 maxFileSize means there is no limit\n\t\tif (maxFileSize > -1 && file.size > maxFileSize) {\n\t\t\tconst reason = TAPi18n.__(\n\t\t\t\t'File_exceeds_allowed_size_of_bytes',\n\t\t\t\t{\n\t\t\t\t\tsize: filesize(maxFileSize),\n\t\t\t\t},\n\t\t\t\tlanguage,\n\t\t\t);\n\t\t\tthrow new Meteor.Error('error-file-too-large', reason);\n\t\t}\n\n\t\tif (!fileUploadIsValidContentType(file.type)) {\n\t\t\tconst reason = TAPi18n.__('File_type_is_not_accepted', language);\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// App IPreFileUpload event hook\n\t\ttry {\n\t\t\tPromise.await(Apps.triggerEvent(AppEvents.IPreFileUpload, { file, content }));\n\t\t} catch (error) {\n\t\t\tif (error instanceof AppsEngineException) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tvalidateAvatarUpload({ file }) {\n\t\tif (!Match.test(file.rid, String) && !Match.test(file.userId, String)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst user = file.uid ? Meteor.users.findOne(file.uid, { fields: { language: 1 } }) : null;\n\t\tconst language = user?.language || 'en';\n\n\t\t// accept only images\n\t\tif (!/^image\\//.test(file.type)) {\n\t\t\tconst reason = TAPi18n.__('File_type_is_not_accepted', language);\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// -1 maxFileSize means there is no limit\n\t\tif (maxFileSize > -1 && file.size > maxFileSize) {\n\t\t\tconst reason = TAPi18n.__(\n\t\t\t\t'File_exceeds_allowed_size_of_bytes',\n\t\t\t\t{\n\t\t\t\t\tsize: filesize(maxFileSize),\n\t\t\t\t},\n\t\t\t\tlanguage,\n\t\t\t);\n\t\t\tthrow new Meteor.Error('error-file-too-large', reason);\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tdefaultUploads() {\n\t\treturn {\n\t\t\tcollection: UploadsModel,\n\t\t\tfilter: new UploadFS.Filter({\n\t\t\t\tonCheck: FileUpload.validateFileUpload,\n\t\t\t}),\n\t\t\tgetPath(file) {\n\t\t\t\treturn `${settings.get('uniqueID')}/uploads/${file.rid}/${file.userId}/${file._id}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.uploadsOnValidate,\n\t\t\tonRead(fileId, file, req, res) {\n\t\t\t\tif (!FileUpload.requestCanAccessFiles(req)) {\n\t\t\t\t\tres.writeHead(403);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tres.setHeader('content-disposition', `attachment; filename=\"${encodeURIComponent(file.name)}\"`);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t};\n\t},\n\n\tdefaultAvatars() {\n\t\treturn {\n\t\t\tcollection: AvatarModel,\n\t\t\tfilter: new UploadFS.Filter({\n\t\t\t\tonCheck: FileUpload.validateAvatarUpload,\n\t\t\t}),\n\t\t\tgetPath(file) {\n\t\t\t\tconst avatarFile = file.rid ? `room-${file.rid}` : file.userId;\n\t\t\t\treturn `${settings.get('uniqueID')}/avatars/${avatarFile}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.avatarsOnValidate,\n\t\t\tonFinishUpload: FileUpload.avatarsOnFinishUpload,\n\t\t};\n\t},\n\n\tdefaultUserDataFiles() {\n\t\treturn {\n\t\t\tcollection: UserDataFilesModel,\n\t\t\tgetPath(file) {\n\t\t\t\treturn `${settings.get('uniqueID')}/uploads/userData/${file.userId}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.uploadsOnValidate,\n\t\t\tonRead(fileId, file, req, res) {\n\t\t\t\tif (!FileUpload.requestCanAccessFiles(req)) {\n\t\t\t\t\tres.writeHead(403);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tres.setHeader('content-disposition', `attachment; filename=\"${encodeURIComponent(file.name)}\"`);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t};\n\t},\n\n\tavatarsOnValidate(file) {\n\t\tif (settings.get('Accounts_AvatarResize') !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (file.rid) {\n\t\t\tif (!hasPermission(Meteor.userId(), 'edit-room-avatar', file.rid)) {\n\t\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t\t}\n\t\t} else if (Meteor.userId() !== file.userId && !hasPermission(Meteor.userId(), 'edit-other-user-avatar')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\n\t\tconst tempFilePath = UploadFS.getTempFilePath(file._id);\n\n\t\tconst height = settings.get('Accounts_AvatarSize');\n\t\tconst width = height;\n\t\tconst future = new Future();\n\n\t\tconst s = sharp(tempFilePath);\n\t\ts.rotate();\n\n\t\ts.metadata(\n\t\t\tMeteor.bindEnvironment((err, metadata) => {\n\t\t\t\tif (!metadata) {\n\t\t\t\t\tmetadata = {};\n\t\t\t\t}\n\n\t\t\t\ts.resize({\n\t\t\t\t\twidth,\n\t\t\t\t\theight,\n\t\t\t\t\tfit: metadata.hasAlpha ? sharp.fit.contain : sharp.fit.cover,\n\t\t\t\t\tbackground: { r: 255, g: 255, b: 255, alpha: metadata.hasAlpha ? 0 : 1 },\n\t\t\t\t})\n\t\t\t\t\t// Use buffer to get the result in memory then replace the existing file\n\t\t\t\t\t// There is no option to override a file using this library\n\t\t\t\t\t//\n\t\t\t\t\t// BY THE SHARP DOCUMENTATION:\n\t\t\t\t\t// toBuffer: Write output to a Buffer. JPEG, PNG, WebP, TIFF and RAW output are supported.\n\t\t\t\t\t// By default, the format will match the input image, except GIF and SVG input which become PNG output.\n\t\t\t\t\t.toBuffer({ resolveWithObject: true })\n\t\t\t\t\t.then(\n\t\t\t\t\t\tMeteor.bindEnvironment(({ data, info }) => {\n\t\t\t\t\t\t\tfs.writeFile(\n\t\t\t\t\t\t\t\ttempFilePath,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tMeteor.bindEnvironment((err) => {\n\t\t\t\t\t\t\t\t\tif (err != null) {\n\t\t\t\t\t\t\t\t\t\tSystemLogger.error(err);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthis.getCollection().direct.update(\n\t\t\t\t\t\t\t\t\t\t{ _id: file._id },\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\t\t\t\t\tsize: info.size,\n\t\t\t\t\t\t\t\t\t\t\t\t...(['gif', 'svg'].includes(metadata.format) ? { type: 'image/png' } : {}),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tfuture.return();\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\treturn future.wait();\n\t},\n\n\tresizeImagePreview(file) {\n\t\tfile = Promise.await(Uploads.findOneById(file._id));\n\t\tfile = FileUpload.addExtensionTo(file);\n\t\tconst image = FileUpload.getStore('Uploads')._store.getReadStream(file._id, file);\n\n\t\tconst transformer = sharp().resize({ width: 32, height: 32, fit: 'inside' }).jpeg().blur();\n\t\tconst result = transformer.toBuffer().then((out) => out.toString('base64'));\n\t\timage.pipe(transformer);\n\t\treturn result;\n\t},\n\n\tcreateImageThumbnail(file) {\n\t\tif (!settings.get('Message_Attachments_Thumbnails_Enabled')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = settings.get('Message_Attachments_Thumbnails_Width');\n\t\tconst height = settings.get('Message_Attachments_Thumbnails_Height');\n\n\t\tif (file.identify.size && file.identify.size.height < height && file.identify.size.width < width) {\n\t\t\treturn;\n\t\t}\n\n\t\tfile = Promise.await(Uploads.findOneById(file._id));\n\t\tfile = FileUpload.addExtensionTo(file);\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tconst image = store._store.getReadStream(file._id, file);\n\n\t\tconst transformer = sharp().resize({ width, height, fit: 'inside' });\n\n\t\tconst result = transformer.toBuffer({ resolveWithObject: true }).then(({ data, info: { width, height } }) => ({ data, width, height }));\n\t\timage.pipe(transformer);\n\n\t\treturn result;\n\t},\n\n\tuploadImageThumbnail(file, buffer, rid, userId) {\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tconst details = {\n\t\t\tname: `thumb-${file.name}`,\n\t\t\tsize: buffer.length,\n\t\t\ttype: file.type,\n\t\t\trid,\n\t\t\tuserId,\n\t\t};\n\n\t\treturn store.insertSync(details, buffer);\n\t},\n\n\tuploadsOnValidate(file) {\n\t\tif (!/^image\\/((x-windows-)?bmp|p?jpeg|png|gif)$/.test(file.type)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tmpFile = UploadFS.getTempFilePath(file._id);\n\n\t\tconst fut = new Future();\n\n\t\tconst s = sharp(tmpFile);\n\t\ts.metadata(\n\t\t\tMeteor.bindEnvironment((err, metadata) => {\n\t\t\t\tif (err != null) {\n\t\t\t\t\tSystemLogger.error(err);\n\t\t\t\t\treturn fut.return();\n\t\t\t\t}\n\n\t\t\t\tconst rotated = typeof metadata.orientation !== 'undefined' && metadata.orientation !== 1;\n\n\t\t\t\tconst identify = {\n\t\t\t\t\tformat: metadata.format,\n\t\t\t\t\tsize: {\n\t\t\t\t\t\twidth: rotated ? metadata.height : metadata.width,\n\t\t\t\t\t\theight: rotated ? metadata.width : metadata.height,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst reorientation = (cb) => {\n\t\t\t\t\tif (!rotated || settings.get('FileUpload_RotateImages') !== true) {\n\t\t\t\t\t\treturn cb();\n\t\t\t\t\t}\n\t\t\t\t\ts.rotate()\n\t\t\t\t\t\t.toFile(`${tmpFile}.tmp`)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tMeteor.bindEnvironment(() => {\n\t\t\t\t\t\t\t\tfs.unlink(\n\t\t\t\t\t\t\t\t\ttmpFile,\n\t\t\t\t\t\t\t\t\tMeteor.bindEnvironment(() => {\n\t\t\t\t\t\t\t\t\t\tfs.rename(\n\t\t\t\t\t\t\t\t\t\t\t`${tmpFile}.tmp`,\n\t\t\t\t\t\t\t\t\t\t\ttmpFile,\n\t\t\t\t\t\t\t\t\t\t\tMeteor.bindEnvironment(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tSystemLogger.error(err);\n\t\t\t\t\t\t\tfut.return();\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\treorientation(() => {\n\t\t\t\t\tconst { size } = fs.lstatSync(tmpFile);\n\t\t\t\t\tthis.getCollection().direct.update(\n\t\t\t\t\t\t{ _id: file._id },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: { size, identify },\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tfut.return();\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\n\t\treturn fut.wait();\n\t},\n\n\tavatarRoomOnFinishUpload(file) {\n\t\tif (!hasPermission(Meteor.userId(), 'edit-room-avatar', file.rid)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\t},\n\tavatarsOnFinishUpload(file) {\n\t\tif (file.rid) {\n\t\t\treturn FileUpload.avatarRoomOnFinishUpload(file);\n\t\t}\n\n\t\tif (Meteor.userId() !== file.userId && !hasPermission(Meteor.userId(), 'edit-other-user-avatar')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\t\t// update file record to match user's username\n\t\tconst user = Users.findOneById(file.userId);\n\t\tconst oldAvatar = Promise.await(Avatars.findOneByName(user.username));\n\t\tif (oldAvatar) {\n\t\t\tPromise.await(Avatars.deleteFile(oldAvatar._id));\n\t\t}\n\t\tPromise.await(Avatars.updateFileNameById(file._id, user.username));\n\t\t// console.log('upload finished ->', file);\n\t},\n\n\trequestCanAccessFiles({ headers = {}, query = {} }) {\n\t\tif (!settings.get('FileUpload_ProtectFiles')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet { rc_uid, rc_token, rc_rid, rc_room_type } = query;\n\t\tconst { token } = query;\n\n\t\tif (!rc_uid && headers.cookie) {\n\t\t\trc_uid = cookie.get('rc_uid', headers.cookie);\n\t\t\trc_token = cookie.get('rc_token', headers.cookie);\n\t\t\trc_rid = cookie.get('rc_rid', headers.cookie);\n\t\t\trc_room_type = cookie.get('rc_room_type', headers.cookie);\n\t\t}\n\n\t\tconst isAuthorizedByCookies = rc_uid && rc_token && Users.findOneByIdAndLoginToken(rc_uid, rc_token);\n\t\tconst isAuthorizedByHeaders =\n\t\t\theaders['x-user-id'] && headers['x-auth-token'] && Users.findOneByIdAndLoginToken(headers['x-user-id'], headers['x-auth-token']);\n\t\tconst isAuthorizedByRoom = rc_room_type && roomTypes.getConfig(rc_room_type).canAccessUploadedFile({ rc_uid, rc_rid, rc_token });\n\t\tconst isAuthorizedByJWT =\n\t\t\tsettings.get('FileUpload_Enable_json_web_token_for_files') &&\n\t\t\ttoken &&\n\t\t\tisValidJWT(token, settings.get('FileUpload_json_web_token_secret_for_files'));\n\t\treturn isAuthorizedByCookies || isAuthorizedByHeaders || isAuthorizedByRoom || isAuthorizedByJWT;\n\t},\n\taddExtensionTo(file) {\n\t\tif (mime.lookup(file.name) === file.type) {\n\t\t\treturn file;\n\t\t}\n\n\t\t// This file type can be pretty much anything, so it's better if we don't mess with the file extension\n\t\tif (file.type !== 'application/octet-stream') {\n\t\t\tconst ext = mime.extension(file.type);\n\t\t\tif (ext && new RegExp(`\\\\.${ext}$`, 'i').test(file.name) === false) {\n\t\t\t\tfile.name = `${file.name}.${ext}`;\n\t\t\t}\n\t\t}\n\n\t\treturn file;\n\t},\n\n\tgetStore(modelName) {\n\t\tconst storageType = settings.get('FileUpload_Storage_Type');\n\t\tconst handlerName = `${storageType}:${modelName}`;\n\n\t\treturn this.getStoreByName(handlerName);\n\t},\n\n\tgetStoreByName(handlerName) {\n\t\tif (this.handlers[handlerName] == null) {\n\t\t\tSystemLogger.error(`Upload handler \"${handlerName}\" does not exists`);\n\t\t}\n\t\treturn this.handlers[handlerName];\n\t},\n\n\tget(file, req, res, next) {\n\t\tconst store = this.getStoreByName(file.store);\n\t\tif (store && store.get) {\n\t\t\treturn store.get(file, req, res, next);\n\t\t}\n\t\tres.writeHead(404);\n\t\tres.end();\n\t},\n\n\tgetBuffer(file, cb) {\n\t\tconst store = this.getStoreByName(file.store);\n\n\t\tif (!store || !store.get) {\n\t\t\tcb(new Error('Store is invalid'), null);\n\t\t}\n\n\t\tconst buffer = new streamBuffers.WritableStreamBuffer({\n\t\t\tinitialSize: file.size,\n\t\t});\n\n\t\tbuffer.on('finish', () => {\n\t\t\tcb(null, buffer.getContents());\n\t\t});\n\n\t\tstore.copy(file, buffer);\n\t},\n\n\tgetBufferSync: Meteor.wrapAsync((file, cb) => FileUpload.getBuffer(file, cb)),\n\n\tcopy(file, targetFile) {\n\t\tconst store = this.getStoreByName(file.store);\n\t\tconst out = fs.createWriteStream(targetFile);\n\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tif (store.copy) {\n\t\t\tstore.copy(file, out);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tredirectToFile(fileUrl, req, res) {\n\t\tres.removeHeader('Content-Length');\n\t\tres.removeHeader('Cache-Control');\n\t\tres.setHeader('Location', fileUrl);\n\t\tres.writeHead(302);\n\t\tres.end();\n\t},\n\n\tproxyFile(fileName, fileUrl, forceDownload, request, req, res) {\n\t\tres.setHeader('Content-Disposition', `${forceDownload ? 'attachment' : 'inline'}; filename=\"${encodeURI(fileName)}\"`);\n\n\t\trequest.get(fileUrl, (fileRes) => fileRes.pipe(res));\n\t},\n\n\tgenerateJWTToFileUrls({ rid, userId, fileId }) {\n\t\tif (!settings.get('FileUpload_ProtectFiles') || !settings.get('FileUpload_Enable_json_web_token_for_files')) {\n\t\t\treturn;\n\t\t}\n\t\treturn generateJWT(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\tuserId,\n\t\t\t\tfileId,\n\t\t\t},\n\t\t\tsettings.get('FileUpload_json_web_token_secret_for_files'),\n\t\t);\n\t},\n\n\tremoveFilesByRoomId(rid) {\n\t\tif (typeof rid !== 'string' || rid.trim().length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tMessages.find(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\t'file._id': {\n\t\t\t\t\t$exists: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'file._id': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t)\n\t\t\t.fetch()\n\t\t\t.forEach((document) => FileUpload.getStore('Uploads').deleteById(document.file._id));\n\t},\n};\n\nexport class FileUploadClass {\n\tconstructor({ name, model, store, get, insert, getStore, copy }) {\n\t\tthis.name = name;\n\t\tthis.model = model || this.getModelFromName();\n\t\tthis._store = store || UploadFS.getStore(name);\n\t\tthis.get = get;\n\t\tthis.copy = copy;\n\n\t\tif (insert) {\n\t\t\tthis.insert = insert;\n\t\t}\n\n\t\tif (getStore) {\n\t\t\tthis.getStore = getStore;\n\t\t}\n\n\t\tFileUpload.handlers[name] = this;\n\n\t\tthis.insertSync = Meteor.wrapAsync(this.insert, this);\n\t}\n\n\tgetStore() {\n\t\treturn this._store;\n\t}\n\n\tget store() {\n\t\treturn this.getStore();\n\t}\n\n\tset store(store) {\n\t\tthis._store = store;\n\t}\n\n\tgetModelFromName() {\n\t\tconst modelsAvailable = {\n\t\t\tAvatars,\n\t\t\tUploads,\n\t\t\tUserDataFiles,\n\t\t};\n\t\tconst modelName = this.name.split(':')[1];\n\t\tif (!modelsAvailable[modelName]) {\n\t\t\tthrow new Error('Invalid Model for FileUpload');\n\t\t}\n\t\treturn modelsAvailable[modelName];\n\t}\n\n\tdelete(fileId) {\n\t\t// TODO: Remove this method\n\t\tif (this.store && this.store.delete) {\n\t\t\tthis.store.delete(fileId);\n\t\t}\n\n\t\treturn Promise.await(this.model.deleteFile(fileId));\n\t}\n\n\tdeleteById(fileId) {\n\t\tconst file = Promise.await(this.model.findOneById(fileId));\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tdeleteByName(fileName) {\n\t\tconst file = Promise.await(this.model.findOneByName(fileName));\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tdeleteByRoomId(rid) {\n\t\tconst file = Promise.await(this.model.findOneByRoomId(rid));\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\t_doInsert(fileData, streamOrBuffer, cb) {\n\t\tconst fileId = this.store.create(fileData);\n\t\tconst token = this.store.createToken(fileId);\n\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\n\t\ttry {\n\t\t\tif (streamOrBuffer instanceof stream) {\n\t\t\t\tstreamOrBuffer.pipe(fs.createWriteStream(tmpFile));\n\t\t\t} else if (streamOrBuffer instanceof Buffer) {\n\t\t\t\tfs.writeFileSync(tmpFile, streamOrBuffer);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid file type');\n\t\t\t}\n\n\t\t\tconst file = Meteor.call('ufsComplete', fileId, this.name, token);\n\n\t\t\tif (cb) {\n\t\t\t\tcb(null, file);\n\t\t\t}\n\n\t\t\treturn file;\n\t\t} catch (e) {\n\t\t\tif (cb) {\n\t\t\t\tcb(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\tinsert(fileData, streamOrBuffer, cb) {\n\t\tif (streamOrBuffer instanceof stream) {\n\t\t\tstreamOrBuffer = Promise.await(streamToBuffer(streamOrBuffer));\n\t\t}\n\n\t\t// Check if the fileData matches store filter\n\t\tconst filter = this.store.getFilter();\n\t\tif (filter && filter.check) {\n\t\t\tfilter.check({ file: fileData, content: streamOrBuffer });\n\t\t}\n\n\t\treturn this._doInsert(fileData, streamOrBuffer, cb);\n\t}\n}\n"]},"sourceType":"module","hash":"194ca0e92e16e720bf0d1b9da46341eb594d8238"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/getFullUserData.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/getFullUserData.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/getFullUserData.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/getFullUserData.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/getFullUserData.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  getFullUserDataByIdOrUsername: () => getFullUserDataByIdOrUsername\n});\nlet Logger;\nmodule.link(\"../../../logger\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet hasPermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 3);\nconst logger = new Logger('getFullUserData');\nconst defaultFields = {\n  name: 1,\n  username: 1,\n  nickname: 1,\n  status: 1,\n  utcOffset: 1,\n  type: 1,\n  active: 1,\n  bio: 1,\n  reason: 1,\n  statusText: 1,\n  avatarETag: 1\n};\nconst fullFields = {\n  emails: 1,\n  phone: 1,\n  statusConnection: 1,\n  bio: 1,\n  createdAt: 1,\n  lastLogin: 1,\n  services: 1,\n  requirePasswordChange: 1,\n  requirePasswordChangeReason: 1,\n  roles: 1\n};\nlet publicCustomFields = {};\nlet customFields = {};\nsettings.watch('Accounts_CustomFields', value => {\n  publicCustomFields = {};\n  customFields = {};\n\n  if (!value.trim()) {\n    return;\n  }\n\n  try {\n    const customFieldsOnServer = JSON.parse(value.trim());\n    Object.keys(customFieldsOnServer).forEach(key => {\n      const element = customFieldsOnServer[key];\n\n      if (element.public) {\n        publicCustomFields[\"customFields.\".concat(key)] = 1;\n      }\n\n      customFields[\"customFields.\".concat(key)] = 1;\n    });\n  } catch (e) {\n    logger.warn(\"The JSON specified for \\\"Accounts_CustomFields\\\" is invalid. The following error was thrown: \".concat(e));\n  }\n});\n\nconst getCustomFields = canViewAllInfo => canViewAllInfo ? customFields : publicCustomFields;\n\nconst getFields = canViewAllInfo => _objectSpread(_objectSpread(_objectSpread({}, defaultFields), canViewAllInfo && fullFields), getCustomFields(canViewAllInfo));\n\nconst removePasswordInfo = user => {\n  if (user && user.services) {\n    delete user.services.password;\n    delete user.services.email;\n    delete user.services.resume;\n    delete user.services.emailCode;\n    delete user.services.cloud;\n    delete user.services.email2fa;\n    delete user.services.totp;\n  }\n\n  return user;\n};\n\nfunction getFullUserDataByIdOrUsername(_ref) {\n  let {\n    userId,\n    filterId,\n    filterUsername\n  } = _ref;\n  const caller = Users.findOneById(userId, {\n    fields: {\n      username: 1\n    }\n  });\n  const targetUser = filterId || filterUsername;\n  const myself = filterId && targetUser === userId || filterUsername && targetUser === caller.username;\n  const canViewAllInfo = !!myself || hasPermission(userId, 'view-full-other-user-info');\n  const fields = getFields(canViewAllInfo);\n  const options = {\n    fields\n  };\n  const user = Users.findOneByIdOrUsername(targetUser, options);\n\n  if (!user) {\n    return null;\n  }\n\n  user.canViewAllInfo = canViewAllInfo;\n  return myself ? user : removePasswordInfo(user);\n}","map":{"version":3,"sources":["app/lib/server/functions/getFullUserData.js"],"names":["_objectSpread","module","link","default","v","export","getFullUserDataByIdOrUsername","Logger","settings","Users","hasPermission","logger","defaultFields","name","username","nickname","status","utcOffset","type","active","bio","reason","statusText","avatarETag","fullFields","emails","phone","statusConnection","createdAt","lastLogin","services","requirePasswordChange","requirePasswordChangeReason","roles","publicCustomFields","customFields","watch","value","trim","customFieldsOnServer","JSON","parse","Object","keys","forEach","key","element","public","e","warn","getCustomFields","canViewAllInfo","getFields","removePasswordInfo","user","password","email","resume","emailCode","cloud","email2fa","totp","userId","filterId","filterUsername","caller","findOneById","fields","targetUser","myself","options","findOneByIdOrUsername"],"mappings":"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","sourcesContent":["import { Logger } from '../../../logger';\nimport { settings } from '../../../settings/server';\nimport { Users } from '../../../models/server';\nimport { hasPermission } from '../../../authorization';\n\nconst logger = new Logger('getFullUserData');\n\nconst defaultFields = {\n\tname: 1,\n\tusername: 1,\n\tnickname: 1,\n\tstatus: 1,\n\tutcOffset: 1,\n\ttype: 1,\n\tactive: 1,\n\tbio: 1,\n\treason: 1,\n\tstatusText: 1,\n\tavatarETag: 1,\n};\n\nconst fullFields = {\n\temails: 1,\n\tphone: 1,\n\tstatusConnection: 1,\n\tbio: 1,\n\tcreatedAt: 1,\n\tlastLogin: 1,\n\tservices: 1,\n\trequirePasswordChange: 1,\n\trequirePasswordChangeReason: 1,\n\troles: 1,\n};\n\nlet publicCustomFields = {};\nlet customFields = {};\n\nsettings.watch('Accounts_CustomFields', (value) => {\n\tpublicCustomFields = {};\n\tcustomFields = {};\n\n\tif (!value.trim()) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst customFieldsOnServer = JSON.parse(value.trim());\n\t\tObject.keys(customFieldsOnServer).forEach((key) => {\n\t\t\tconst element = customFieldsOnServer[key];\n\t\t\tif (element.public) {\n\t\t\t\tpublicCustomFields[`customFields.${key}`] = 1;\n\t\t\t}\n\t\t\tcustomFields[`customFields.${key}`] = 1;\n\t\t});\n\t} catch (e) {\n\t\tlogger.warn(`The JSON specified for \"Accounts_CustomFields\" is invalid. The following error was thrown: ${e}`);\n\t}\n});\n\nconst getCustomFields = (canViewAllInfo) => (canViewAllInfo ? customFields : publicCustomFields);\n\nconst getFields = (canViewAllInfo) => ({\n\t...defaultFields,\n\t...(canViewAllInfo && fullFields),\n\t...getCustomFields(canViewAllInfo),\n});\n\nconst removePasswordInfo = (user) => {\n\tif (user && user.services) {\n\t\tdelete user.services.password;\n\t\tdelete user.services.email;\n\t\tdelete user.services.resume;\n\t\tdelete user.services.emailCode;\n\t\tdelete user.services.cloud;\n\t\tdelete user.services.email2fa;\n\t\tdelete user.services.totp;\n\t}\n\n\treturn user;\n};\n\nexport function getFullUserDataByIdOrUsername({ userId, filterId, filterUsername }) {\n\tconst caller = Users.findOneById(userId, { fields: { username: 1 } });\n\tconst targetUser = filterId || filterUsername;\n\tconst myself = (filterId && targetUser === userId) || (filterUsername && targetUser === caller.username);\n\tconst canViewAllInfo = !!myself || hasPermission(userId, 'view-full-other-user-info');\n\n\tconst fields = getFields(canViewAllInfo);\n\n\tconst options = {\n\t\tfields,\n\t};\n\tconst user = Users.findOneByIdOrUsername(targetUser, options);\n\tif (!user) {\n\t\treturn null;\n\t}\n\n\tuser.canViewAllInfo = canViewAllInfo;\n\n\treturn myself ? user : removePasswordInfo(user);\n}\n"]},"sourceType":"module","hash":"294aef8e5cc217d05edb19f810fa654871a455e1"}

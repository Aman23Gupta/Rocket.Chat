{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/helpers/parseJsonQuery.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/helpers/parseJsonQuery.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/helpers/parseJsonQuery.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/helpers/parseJsonQuery.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/helpers/parseJsonQuery.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 1);\nlet hasPermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 2);\nlet clean;\nmodule.link(\"../lib/cleanQuery\", {\n  clean(v) {\n    clean = v;\n  }\n\n}, 3);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 4);\nconst pathAllowConf = {\n  '/api/v1/users.list': ['$or', '$regex', '$and'],\n  'def': ['$or', '$and', '$regex']\n};\nAPI.helperMethods.set('parseJsonQuery', function _parseJsonQuery() {\n  let sort;\n\n  if (this.queryParams.sort) {\n    try {\n      sort = JSON.parse(this.queryParams.sort);\n    } catch (e) {\n      this.logger.warn(\"Invalid sort parameter provided \\\"\".concat(this.queryParams.sort, \"\\\":\"), e);\n      throw new Meteor.Error('error-invalid-sort', \"Invalid sort parameter provided: \\\"\".concat(this.queryParams.sort, \"\\\"\"), {\n        helperMethod: 'parseJsonQuery'\n      });\n    }\n  }\n\n  let fields;\n\n  if (this.queryParams.fields) {\n    try {\n      fields = JSON.parse(this.queryParams.fields);\n    } catch (e) {\n      this.logger.warn(\"Invalid fields parameter provided \\\"\".concat(this.queryParams.fields, \"\\\":\"), e);\n      throw new Meteor.Error('error-invalid-fields', \"Invalid fields parameter provided: \\\"\".concat(this.queryParams.fields, \"\\\"\"), {\n        helperMethod: 'parseJsonQuery'\n      });\n    }\n  } // Verify the user's selected fields only contains ones which their role allows\n\n\n  if (typeof fields === 'object') {\n    let nonSelectableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\n    if (this.request.route.includes('/v1/users.')) {\n      const getFields = () => Object.keys(hasPermission(this.userId, 'view-full-other-user-info') ? API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser : API.v1.limitedUserFieldsToExclude);\n\n      nonSelectableFields = nonSelectableFields.concat(getFields());\n    }\n\n    Object.keys(fields).forEach(k => {\n      if (nonSelectableFields.includes(k) || nonSelectableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n        delete fields[k];\n      }\n    });\n  } // Limit the fields by default\n\n\n  fields = Object.assign({}, fields, API.v1.defaultFieldsToExclude);\n\n  if (this.request.route.includes('/v1/users.')) {\n    if (hasPermission(this.userId, 'view-full-other-user-info')) {\n      fields = Object.assign(fields, API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser);\n    } else {\n      fields = Object.assign(fields, API.v1.limitedUserFieldsToExclude);\n    }\n  }\n\n  let query = {};\n\n  if (this.queryParams.query) {\n    try {\n      query = EJSON.parse(this.queryParams.query);\n      query = clean(query, pathAllowConf[this.request.route] || pathAllowConf.def);\n    } catch (e) {\n      this.logger.warn(\"Invalid query parameter provided \\\"\".concat(this.queryParams.query, \"\\\":\"), e);\n      throw new Meteor.Error('error-invalid-query', \"Invalid query parameter provided: \\\"\".concat(this.queryParams.query, \"\\\"\"), {\n        helperMethod: 'parseJsonQuery'\n      });\n    }\n  } // Verify the user has permission to query the fields they are\n\n\n  if (typeof query === 'object') {\n    let nonQueryableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\n    if (this.request.route.includes('/v1/users.')) {\n      if (hasPermission(this.userId, 'view-full-other-user-info')) {\n        nonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser));\n      } else {\n        nonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExclude));\n      }\n    }\n\n    Object.keys(query).forEach(k => {\n      if (nonQueryableFields.includes(k) || nonQueryableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n        delete query[k];\n      }\n    });\n  }\n\n  return {\n    sort,\n    fields,\n    query\n  };\n});","map":{"version":3,"sources":["app/api/server/helpers/parseJsonQuery.js"],"names":["Meteor","module","link","v","EJSON","hasPermission","clean","API","pathAllowConf","helperMethods","set","_parseJsonQuery","sort","queryParams","JSON","parse","e","logger","warn","Error","helperMethod","fields","nonSelectableFields","Object","keys","v1","defaultFieldsToExclude","request","route","includes","getFields","userId","limitedUserFieldsToExcludeIfIsPrivilegedUser","limitedUserFieldsToExclude","concat","forEach","k","split","fieldSeparator","assign","query","def","nonQueryableFields"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { EJSON } from 'meteor/ejson';\n\nimport { hasPermission } from '../../../authorization';\nimport { clean } from '../lib/cleanQuery';\nimport { API } from '../api';\n\nconst pathAllowConf = {\n\t'/api/v1/users.list': ['$or', '$regex', '$and'],\n\t'def': ['$or', '$and', '$regex'],\n};\n\nAPI.helperMethods.set('parseJsonQuery', function _parseJsonQuery() {\n\tlet sort;\n\tif (this.queryParams.sort) {\n\t\ttry {\n\t\t\tsort = JSON.parse(this.queryParams.sort);\n\t\t} catch (e) {\n\t\t\tthis.logger.warn(`Invalid sort parameter provided \"${this.queryParams.sort}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-sort', `Invalid sort parameter provided: \"${this.queryParams.sort}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\tlet fields;\n\tif (this.queryParams.fields) {\n\t\ttry {\n\t\t\tfields = JSON.parse(this.queryParams.fields);\n\t\t} catch (e) {\n\t\t\tthis.logger.warn(`Invalid fields parameter provided \"${this.queryParams.fields}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-fields', `Invalid fields parameter provided: \"${this.queryParams.fields}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Verify the user's selected fields only contains ones which their role allows\n\tif (typeof fields === 'object') {\n\t\tlet nonSelectableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\t\tif (this.request.route.includes('/v1/users.')) {\n\t\t\tconst getFields = () =>\n\t\t\t\tObject.keys(\n\t\t\t\t\thasPermission(this.userId, 'view-full-other-user-info')\n\t\t\t\t\t\t? API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser\n\t\t\t\t\t\t: API.v1.limitedUserFieldsToExclude,\n\t\t\t\t);\n\t\t\tnonSelectableFields = nonSelectableFields.concat(getFields());\n\t\t}\n\n\t\tObject.keys(fields).forEach((k) => {\n\t\t\tif (nonSelectableFields.includes(k) || nonSelectableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n\t\t\t\tdelete fields[k];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Limit the fields by default\n\tfields = Object.assign({}, fields, API.v1.defaultFieldsToExclude);\n\tif (this.request.route.includes('/v1/users.')) {\n\t\tif (hasPermission(this.userId, 'view-full-other-user-info')) {\n\t\t\tfields = Object.assign(fields, API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser);\n\t\t} else {\n\t\t\tfields = Object.assign(fields, API.v1.limitedUserFieldsToExclude);\n\t\t}\n\t}\n\n\tlet query = {};\n\tif (this.queryParams.query) {\n\t\ttry {\n\t\t\tquery = EJSON.parse(this.queryParams.query);\n\t\t\tquery = clean(query, pathAllowConf[this.request.route] || pathAllowConf.def);\n\t\t} catch (e) {\n\t\t\tthis.logger.warn(`Invalid query parameter provided \"${this.queryParams.query}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-query', `Invalid query parameter provided: \"${this.queryParams.query}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Verify the user has permission to query the fields they are\n\tif (typeof query === 'object') {\n\t\tlet nonQueryableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\t\tif (this.request.route.includes('/v1/users.')) {\n\t\t\tif (hasPermission(this.userId, 'view-full-other-user-info')) {\n\t\t\t\tnonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser));\n\t\t\t} else {\n\t\t\t\tnonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExclude));\n\t\t\t}\n\t\t}\n\n\t\tObject.keys(query).forEach((k) => {\n\t\t\tif (nonQueryableFields.includes(k) || nonQueryableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n\t\t\t\tdelete query[k];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tsort,\n\t\tfields,\n\t\tquery,\n\t};\n});\n"]},"sourceType":"module","hash":"ae14a7b18e9e6a17dc14fdcf125aec293b2eceb0"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/canDeleteMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/authorization/server/functions/canDeleteMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/canDeleteMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/authorization/server/functions/canDeleteMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authorization/server/functions/canDeleteMessage.js"}},"code":"module.export({\n  canDeleteMessageAsync: () => canDeleteMessageAsync,\n  canDeleteMessage: () => canDeleteMessage\n});\nlet hasPermissionAsync;\nmodule.link(\"./hasPermission\", {\n  hasPermissionAsync(v) {\n    hasPermissionAsync = v;\n  }\n\n}, 0);\nlet getValue;\nmodule.link(\"../../../settings/server/raw\", {\n  getValue(v) {\n    getValue = v;\n  }\n\n}, 1);\nlet Rooms;\nmodule.link(\"../../../models\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 2);\n\nconst elapsedTime = ts => {\n  const dif = Date.now() - ts;\n  return Math.round(dif / 1000 / 60);\n};\n\nconst canDeleteMessageAsync = (uid, _ref) => Promise.asyncApply(() => {\n  let {\n    u,\n    rid,\n    ts\n  } = _ref;\n  const forceDelete = Promise.await(hasPermissionAsync(uid, 'force-delete-message', rid));\n\n  if (forceDelete) {\n    return true;\n  }\n\n  if (!ts) {\n    return false;\n  }\n\n  const deleteAllowed = Promise.await(getValue('Message_AllowDeleting'));\n\n  if (!deleteAllowed) {\n    return false;\n  }\n\n  const allowedToDeleteAny = Promise.await(hasPermissionAsync(uid, 'delete-message', rid));\n  const allowed = allowedToDeleteAny || uid === u._id && Promise.await(hasPermissionAsync(uid, 'delete-own-message'));\n\n  if (!allowed) {\n    return false;\n  }\n\n  const blockDeleteInMinutes = Promise.await(getValue('Message_AllowDeleting_BlockDeleteInMinutes'));\n\n  if (blockDeleteInMinutes) {\n    const timeElapsedForMessage = elapsedTime(ts);\n    return timeElapsedForMessage <= blockDeleteInMinutes;\n  }\n\n  const room = Promise.await(Rooms.findOneById(rid, {\n    fields: {\n      ro: 1,\n      unmuted: 1\n    }\n  }));\n\n  if (room.ro === true && !Promise.await(hasPermissionAsync(uid, 'post-readonly', rid))) {\n    // Unless the user was manually unmuted\n    if (!(room.unmuted || []).includes(u.username)) {\n      throw new Error(\"You can't delete messages because the room is readonly.\");\n    }\n  }\n\n  return true;\n});\n\nconst canDeleteMessage = (uid, _ref2) => {\n  let {\n    u,\n    rid,\n    ts\n  } = _ref2;\n  return Promise.await(canDeleteMessageAsync(uid, {\n    u,\n    rid,\n    ts\n  }));\n};","map":{"version":3,"sources":["app/authorization/server/functions/canDeleteMessage.js"],"names":["module","export","canDeleteMessageAsync","canDeleteMessage","hasPermissionAsync","link","v","getValue","Rooms","elapsedTime","ts","dif","Date","now","Math","round","uid","u","rid","forceDelete","deleteAllowed","allowedToDeleteAny","allowed","_id","blockDeleteInMinutes","timeElapsedForMessage","room","findOneById","fields","ro","unmuted","includes","username","Error","Promise","await"],"mappings":"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","sourcesContent":["import { hasPermissionAsync } from './hasPermission';\nimport { getValue } from '../../../settings/server/raw';\nimport { Rooms } from '../../../models';\n\nconst elapsedTime = (ts) => {\n\tconst dif = Date.now() - ts;\n\treturn Math.round(dif / 1000 / 60);\n};\n\nexport const canDeleteMessageAsync = async (uid, { u, rid, ts }) => {\n\tconst forceDelete = await hasPermissionAsync(uid, 'force-delete-message', rid);\n\n\tif (forceDelete) {\n\t\treturn true;\n\t}\n\n\tif (!ts) {\n\t\treturn false;\n\t}\n\tconst deleteAllowed = await getValue('Message_AllowDeleting');\n\n\tif (!deleteAllowed) {\n\t\treturn false;\n\t}\n\n\tconst allowedToDeleteAny = await hasPermissionAsync(uid, 'delete-message', rid);\n\n\tconst allowed = allowedToDeleteAny || (uid === u._id && (await hasPermissionAsync(uid, 'delete-own-message')));\n\tif (!allowed) {\n\t\treturn false;\n\t}\n\tconst blockDeleteInMinutes = await getValue('Message_AllowDeleting_BlockDeleteInMinutes');\n\n\tif (blockDeleteInMinutes) {\n\t\tconst timeElapsedForMessage = elapsedTime(ts);\n\t\treturn timeElapsedForMessage <= blockDeleteInMinutes;\n\t}\n\n\tconst room = await Rooms.findOneById(rid, { fields: { ro: 1, unmuted: 1 } });\n\tif (room.ro === true && !(await hasPermissionAsync(uid, 'post-readonly', rid))) {\n\t\t// Unless the user was manually unmuted\n\t\tif (!(room.unmuted || []).includes(u.username)) {\n\t\t\tthrow new Error(\"You can't delete messages because the room is readonly.\");\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport const canDeleteMessage = (uid, { u, rid, ts }) => Promise.await(canDeleteMessageAsync(uid, { u, rid, ts }));\n"]},"sourceType":"module","hash":"31b45f029f24279afda46c374bd2a73ba4029123"}

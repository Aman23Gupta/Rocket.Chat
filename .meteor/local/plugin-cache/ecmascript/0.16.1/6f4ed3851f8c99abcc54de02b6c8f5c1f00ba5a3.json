{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/processRoomAbandonment.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/processRoomAbandonment.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/processRoomAbandonment.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/processRoomAbandonment.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/processRoomAbandonment.js"}},"code":"let moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 2);\nlet LivechatRooms, Messages;\nmodule.link(\"../../../models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 3);\nlet businessHourManager;\nmodule.link(\"../business-hour\", {\n  businessHourManager(v) {\n    businessHourManager = v;\n  }\n\n}, 4);\nlet LivechatBusinessHours, LivechatDepartment;\nmodule.link(\"../../../models/server/raw\", {\n  LivechatBusinessHours(v) {\n    LivechatBusinessHours = v;\n  },\n\n  LivechatDepartment(v) {\n    LivechatDepartment = v;\n  }\n\n}, 5);\n\nconst getSecondsWhenOfficeHoursIsDisabled = (room, agentLastMessage) => moment(new Date(room.closedAt)).diff(moment(new Date(agentLastMessage.ts)), 'seconds');\n\nconst parseDays = (acc, day) => {\n  acc[day.day] = {\n    start: {\n      day: day.start.utc.dayOfWeek,\n      time: day.start.utc.time\n    },\n    finish: {\n      day: day.finish.utc.dayOfWeek,\n      time: day.finish.utc.time\n    },\n    open: day.open\n  };\n  return acc;\n};\n\nconst getSecondsSinceLastAgentResponse = (room, agentLastMessage) => Promise.asyncApply(() => {\n  if (!settings.get('Livechat_enable_business_hours')) {\n    return getSecondsWhenOfficeHoursIsDisabled(room, agentLastMessage);\n  }\n\n  let officeDays;\n  const department = room.departmentId && Promise.await(LivechatDepartment.findOneById(room.departmentId));\n\n  if (department && department.businessHourId) {\n    const businessHour = Promise.await(LivechatBusinessHours.findOneById(department.businessHourId));\n    officeDays = Promise.await(businessHourManager.getBusinessHour(businessHour._id, businessHour.type)).workHours.reduce(parseDays, {});\n  } else {\n    officeDays = Promise.await(businessHourManager.getBusinessHour()).workHours.reduce(parseDays, {});\n  }\n\n  let totalSeconds = 0;\n  const endOfConversation = moment(new Date(room.closedAt));\n  const startOfInactivity = moment(new Date(agentLastMessage.ts));\n  const daysOfInactivity = endOfConversation.clone().startOf('day').diff(startOfInactivity.clone().startOf('day'), 'days');\n  const inactivityDay = moment(new Date(agentLastMessage.ts));\n\n  for (let index = 0; index <= daysOfInactivity; index++) {\n    const today = inactivityDay.clone().format('dddd');\n    const officeDay = officeDays[today];\n    const startTodaysOfficeHour = moment(\"\".concat(officeDay.start.day, \":\").concat(officeDay.start.time), 'dddd:HH:mm').add(index, 'days');\n    const endTodaysOfficeHour = moment(\"\".concat(officeDay.finish.day, \":\").concat(officeDay.finish.time), 'dddd:HH:mm').add(index, 'days');\n\n    if (officeDays[today].open) {\n      const firstDayOfInactivity = startOfInactivity.clone().format('D') === inactivityDay.clone().format('D');\n      const lastDayOfInactivity = endOfConversation.clone().format('D') === inactivityDay.clone().format('D');\n\n      if (!firstDayOfInactivity && !lastDayOfInactivity) {\n        totalSeconds += endTodaysOfficeHour.clone().diff(startTodaysOfficeHour, 'seconds');\n      } else {\n        const end = endOfConversation.isBefore(endTodaysOfficeHour) ? endOfConversation : endTodaysOfficeHour;\n        const start = firstDayOfInactivity ? inactivityDay : startTodaysOfficeHour;\n        totalSeconds += end.clone().diff(start, 'seconds');\n      }\n    }\n\n    inactivityDay.add(1, 'days');\n  }\n\n  return totalSeconds;\n});\n\ncallbacks.add('livechat.closeRoom', room => Promise.asyncApply(() => {\n  const closedByAgent = room.closer !== 'visitor';\n  const wasTheLastMessageSentByAgent = room.lastMessage && !room.lastMessage.token;\n\n  if (!closedByAgent || !wasTheLastMessageSentByAgent) {\n    return;\n  }\n\n  const agentLastMessage = Messages.findAgentLastMessageByVisitorLastMessageTs(room._id, room.v.lastMessageTs);\n\n  if (!agentLastMessage) {\n    return;\n  }\n\n  const secondsSinceLastAgentResponse = Promise.await(getSecondsSinceLastAgentResponse(room, agentLastMessage));\n  LivechatRooms.setVisitorInactivityInSecondsById(room._id, secondsSinceLastAgentResponse);\n}), callbacks.priority.HIGH, 'process-room-abandonment');","map":{"version":3,"sources":["app/livechat/server/hooks/processRoomAbandonment.js"],"names":["moment","module","link","default","v","settings","callbacks","LivechatRooms","Messages","businessHourManager","LivechatBusinessHours","LivechatDepartment","getSecondsWhenOfficeHoursIsDisabled","room","agentLastMessage","Date","closedAt","diff","ts","parseDays","acc","day","start","utc","dayOfWeek","time","finish","open","getSecondsSinceLastAgentResponse","get","officeDays","department","departmentId","findOneById","businessHourId","businessHour","getBusinessHour","_id","type","workHours","reduce","totalSeconds","endOfConversation","startOfInactivity","daysOfInactivity","clone","startOf","inactivityDay","index","today","format","officeDay","startTodaysOfficeHour","add","endTodaysOfficeHour","firstDayOfInactivity","lastDayOfInactivity","end","isBefore","closedByAgent","closer","wasTheLastMessageSentByAgent","lastMessage","token","findAgentLastMessageByVisitorLastMessageTs","lastMessageTs","secondsSinceLastAgentResponse","setVisitorInactivityInSecondsById","priority","HIGH"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nimport { settings } from '../../../settings';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { LivechatRooms, Messages } from '../../../models/server';\nimport { businessHourManager } from '../business-hour';\nimport { LivechatBusinessHours, LivechatDepartment } from '../../../models/server/raw';\n\nconst getSecondsWhenOfficeHoursIsDisabled = (room, agentLastMessage) =>\n\tmoment(new Date(room.closedAt)).diff(moment(new Date(agentLastMessage.ts)), 'seconds');\nconst parseDays = (acc, day) => {\n\tacc[day.day] = {\n\t\tstart: { day: day.start.utc.dayOfWeek, time: day.start.utc.time },\n\t\tfinish: { day: day.finish.utc.dayOfWeek, time: day.finish.utc.time },\n\t\topen: day.open,\n\t};\n\treturn acc;\n};\n\nconst getSecondsSinceLastAgentResponse = async (room, agentLastMessage) => {\n\tif (!settings.get('Livechat_enable_business_hours')) {\n\t\treturn getSecondsWhenOfficeHoursIsDisabled(room, agentLastMessage);\n\t}\n\tlet officeDays;\n\tconst department = room.departmentId && (await LivechatDepartment.findOneById(room.departmentId));\n\tif (department && department.businessHourId) {\n\t\tconst businessHour = await LivechatBusinessHours.findOneById(department.businessHourId);\n\t\tofficeDays = (await businessHourManager.getBusinessHour(businessHour._id, businessHour.type)).workHours.reduce(parseDays, {});\n\t} else {\n\t\tofficeDays = (await businessHourManager.getBusinessHour()).workHours.reduce(parseDays, {});\n\t}\n\tlet totalSeconds = 0;\n\tconst endOfConversation = moment(new Date(room.closedAt));\n\tconst startOfInactivity = moment(new Date(agentLastMessage.ts));\n\tconst daysOfInactivity = endOfConversation.clone().startOf('day').diff(startOfInactivity.clone().startOf('day'), 'days');\n\tconst inactivityDay = moment(new Date(agentLastMessage.ts));\n\tfor (let index = 0; index <= daysOfInactivity; index++) {\n\t\tconst today = inactivityDay.clone().format('dddd');\n\t\tconst officeDay = officeDays[today];\n\t\tconst startTodaysOfficeHour = moment(`${officeDay.start.day}:${officeDay.start.time}`, 'dddd:HH:mm').add(index, 'days');\n\t\tconst endTodaysOfficeHour = moment(`${officeDay.finish.day}:${officeDay.finish.time}`, 'dddd:HH:mm').add(index, 'days');\n\t\tif (officeDays[today].open) {\n\t\t\tconst firstDayOfInactivity = startOfInactivity.clone().format('D') === inactivityDay.clone().format('D');\n\t\t\tconst lastDayOfInactivity = endOfConversation.clone().format('D') === inactivityDay.clone().format('D');\n\n\t\t\tif (!firstDayOfInactivity && !lastDayOfInactivity) {\n\t\t\t\ttotalSeconds += endTodaysOfficeHour.clone().diff(startTodaysOfficeHour, 'seconds');\n\t\t\t} else {\n\t\t\t\tconst end = endOfConversation.isBefore(endTodaysOfficeHour) ? endOfConversation : endTodaysOfficeHour;\n\t\t\t\tconst start = firstDayOfInactivity ? inactivityDay : startTodaysOfficeHour;\n\t\t\t\ttotalSeconds += end.clone().diff(start, 'seconds');\n\t\t\t}\n\t\t}\n\t\tinactivityDay.add(1, 'days');\n\t}\n\treturn totalSeconds;\n};\n\ncallbacks.add(\n\t'livechat.closeRoom',\n\tasync (room) => {\n\t\tconst closedByAgent = room.closer !== 'visitor';\n\t\tconst wasTheLastMessageSentByAgent = room.lastMessage && !room.lastMessage.token;\n\t\tif (!closedByAgent || !wasTheLastMessageSentByAgent) {\n\t\t\treturn;\n\t\t}\n\t\tconst agentLastMessage = Messages.findAgentLastMessageByVisitorLastMessageTs(room._id, room.v.lastMessageTs);\n\t\tif (!agentLastMessage) {\n\t\t\treturn;\n\t\t}\n\t\tconst secondsSinceLastAgentResponse = await getSecondsSinceLastAgentResponse(room, agentLastMessage);\n\t\tLivechatRooms.setVisitorInactivityInSecondsById(room._id, secondsSinceLastAgentResponse);\n\t},\n\tcallbacks.priority.HIGH,\n\t'process-room-abandonment',\n);\n"]},"sourceType":"module","hash":"6f4ed3851f8c99abcc54de02b6c8f5c1f00ba5a3"}

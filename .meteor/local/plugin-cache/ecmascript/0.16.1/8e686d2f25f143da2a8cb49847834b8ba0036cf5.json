{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v179.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v179.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v179.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v179.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v179.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Future;\nmodule.link(\"fibers/future\", {\n  default(v) {\n    Future = v;\n  }\n\n}, 1);\nlet addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 2);\nlet Rooms;\nmodule.link(\"../../../app/models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 3);\nconst batchSize = 5000;\n\nconst getIds = _id => {\n  // DM alone\n  if (_id.length === 17) {\n    return [_id];\n  } // DM with rocket.cat\n\n\n  if (_id.match(/rocket\\.cat/)) {\n    return ['rocket.cat', _id.replace('rocket.cat', '')];\n  }\n\n  const total = _id.length; // regular DMs\n\n  const id1 = _id.substr(0, Math.ceil(total / 2));\n\n  const id2 = _id.substr(Math.ceil(total / 2)); // buggy (?) DM alone but with duplicated _id\n  // if (id1 === id2) {\n  // \treturn [id1];\n  // }\n\n\n  return [id1, id2];\n};\n\nfunction migrateDMs(models, total, current) {\n  return Promise.asyncApply(() => {\n    const {\n      roomCollection\n    } = models;\n    console.log(\"DM rooms schema migration \".concat(current, \"/\").concat(total));\n    const items = Promise.await(roomCollection.find({\n      t: 'd',\n      uids: {\n        $exists: false\n      }\n    }, {\n      fields: {\n        _id: 1\n      }\n    }).limit(batchSize).toArray());\n    const actions = items.map(room => ({\n      updateOne: {\n        filter: {\n          _id: room._id\n        },\n        update: {\n          $set: {\n            uids: getIds(room._id)\n          }\n        }\n      }\n    }));\n\n    if (actions.length === 0) {\n      return;\n    }\n\n    const batch = Promise.await(roomCollection.bulkWrite(actions, {\n      ordered: false\n    }));\n\n    if (actions.length === batchSize) {\n      Promise.await(batch);\n      return migrateDMs(models, total, current + batchSize);\n    }\n\n    return batch;\n  });\n}\n\naddMigration({\n  version: 179,\n\n  up() {\n    const fut = new Future();\n    const roomCollection = Rooms.model.rawCollection();\n    Meteor.setTimeout(() => Promise.asyncApply(() => {\n      const rooms = roomCollection.find({\n        t: 'd'\n      });\n      const total = Promise.await(rooms.count());\n      Promise.await(rooms.close());\n\n      if (total < batchSize * 10) {\n        Promise.await(migrateDMs({\n          roomCollection\n        }, total, 0));\n        return fut.return();\n      }\n\n      console.log('Changing schema of Direct Message rooms, this may take a long time ...');\n      Promise.await(migrateDMs({\n        roomCollection\n      }, total, 0));\n      console.log('Changing schema of Direct Message rooms finished.');\n      fut.return();\n    }), 200);\n    fut.wait();\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v179.js"],"names":["Meteor","module","link","v","Future","default","addMigration","Rooms","batchSize","getIds","_id","length","match","replace","total","id1","substr","Math","ceil","id2","migrateDMs","models","current","roomCollection","console","log","items","find","t","uids","$exists","fields","limit","toArray","actions","map","room","updateOne","filter","update","$set","batch","bulkWrite","ordered","version","up","fut","model","rawCollection","setTimeout","rooms","count","close","return","wait"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport Future from 'fibers/future';\n\nimport { addMigration } from '../../lib/migrations';\nimport { Rooms } from '../../../app/models/server';\n\nconst batchSize = 5000;\n\nconst getIds = (_id) => {\n\t// DM alone\n\tif (_id.length === 17) {\n\t\treturn [_id];\n\t}\n\n\t// DM with rocket.cat\n\tif (_id.match(/rocket\\.cat/)) {\n\t\treturn ['rocket.cat', _id.replace('rocket.cat', '')];\n\t}\n\n\tconst total = _id.length;\n\n\t// regular DMs\n\tconst id1 = _id.substr(0, Math.ceil(total / 2));\n\tconst id2 = _id.substr(Math.ceil(total / 2));\n\n\t// buggy (?) DM alone but with duplicated _id\n\t// if (id1 === id2) {\n\t// \treturn [id1];\n\t// }\n\n\treturn [id1, id2];\n};\n\nasync function migrateDMs(models, total, current) {\n\tconst { roomCollection } = models;\n\n\tconsole.log(`DM rooms schema migration ${current}/${total}`);\n\n\tconst items = await roomCollection\n\t\t.find({ t: 'd', uids: { $exists: false } }, { fields: { _id: 1 } })\n\t\t.limit(batchSize)\n\t\t.toArray();\n\n\tconst actions = items.map((room) => ({\n\t\tupdateOne: {\n\t\t\tfilter: { _id: room._id },\n\t\t\tupdate: {\n\t\t\t\t$set: {\n\t\t\t\t\tuids: getIds(room._id),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}));\n\n\tif (actions.length === 0) {\n\t\treturn;\n\t}\n\n\tconst batch = await roomCollection.bulkWrite(actions, { ordered: false });\n\tif (actions.length === batchSize) {\n\t\tawait batch;\n\t\treturn migrateDMs(models, total, current + batchSize);\n\t}\n\n\treturn batch;\n}\n\naddMigration({\n\tversion: 179,\n\tup() {\n\t\tconst fut = new Future();\n\n\t\tconst roomCollection = Rooms.model.rawCollection();\n\n\t\tMeteor.setTimeout(async () => {\n\t\t\tconst rooms = roomCollection.find({ t: 'd' });\n\t\t\tconst total = await rooms.count();\n\t\t\tawait rooms.close();\n\n\t\t\tif (total < batchSize * 10) {\n\t\t\t\tawait migrateDMs({ roomCollection }, total, 0);\n\t\t\t\treturn fut.return();\n\t\t\t}\n\n\t\t\tconsole.log('Changing schema of Direct Message rooms, this may take a long time ...');\n\n\t\t\tawait migrateDMs({ roomCollection }, total, 0);\n\n\t\t\tconsole.log('Changing schema of Direct Message rooms finished.');\n\n\t\t\tfut.return();\n\t\t}, 200);\n\n\t\tfut.wait();\n\t},\n});\n"]},"sourceType":"module","hash":"8e686d2f25f143da2a8cb49847834b8ba0036cf5"}

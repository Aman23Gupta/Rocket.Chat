{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/interceptDirectReplyEmails.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/lib/interceptDirectReplyEmails.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/interceptDirectReplyEmails.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/interceptDirectReplyEmails.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/lib/interceptDirectReplyEmails.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  IMAPIntercepter: () => IMAPIntercepter,\n  POP3Intercepter: () => POP3Intercepter,\n  POP3: () => POP3,\n  POP3Helper: () => POP3Helper\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet POP3Lib;\nmodule.link(\"poplib\", {\n  default(v) {\n    POP3Lib = v;\n  }\n\n}, 1);\nlet simpleParser;\nmodule.link(\"mailparser\", {\n  simpleParser(v) {\n    simpleParser = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 4);\nlet IMAPInterceptor;\nmodule.link(\"../../../../server/email/IMAPInterceptor\", {\n  IMAPInterceptor(v) {\n    IMAPInterceptor = v;\n  }\n\n}, 5);\nlet processDirectEmail;\nmodule.link(\".\", {\n  processDirectEmail(v) {\n    processDirectEmail = v;\n  }\n\n}, 6);\n\nclass IMAPIntercepter extends IMAPInterceptor {\n  constructor(imapConfig) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    imapConfig = _objectSpread({\n      user: settings.get('Direct_Reply_Username'),\n      password: settings.get('Direct_Reply_Password'),\n      host: settings.get('Direct_Reply_Host'),\n      port: settings.get('Direct_Reply_Port'),\n      debug: settings.get('Direct_Reply_Debug') ? console.log : false,\n      tls: !settings.get('Direct_Reply_IgnoreTLS')\n    }, imapConfig);\n    options.deleteAfterRead = settings.get('Direct_Reply_Delete');\n    super(imapConfig, options);\n    this.on('email', Meteor.bindEnvironment(email => processDirectEmail(email)));\n  }\n\n}\n\nclass POP3Intercepter {\n  constructor() {\n    this.pop3 = new POP3Lib(settings.get('Direct_Reply_Port'), settings.get('Direct_Reply_Host'), {\n      enabletls: !settings.get('Direct_Reply_IgnoreTLS'),\n      debug: settings.get('Direct_Reply_Debug') ? console.log : false\n    });\n    this.totalMsgCount = 0;\n    this.currentMsgCount = 0;\n    this.pop3.on('connect', Meteor.bindEnvironment(() => {\n      this.pop3.login(settings.get('Direct_Reply_Username'), settings.get('Direct_Reply_Password'));\n    }));\n    this.pop3.on('login', Meteor.bindEnvironment(status => {\n      if (status) {\n        // run on start\n        this.pop3.list();\n      } else {\n        SystemLogger.info('Unable to Log-in ....');\n      }\n    })); // on getting list of all emails\n\n    this.pop3.on('list', Meteor.bindEnvironment((status, msgcount) => {\n      if (status) {\n        if (msgcount > 0) {\n          this.totalMsgCount = msgcount;\n          this.currentMsgCount = 1; // Retrieve email\n\n          this.pop3.retr(this.currentMsgCount);\n        } else {\n          this.pop3.quit();\n        }\n      } else {\n        SystemLogger.info('Cannot Get Emails ....');\n      }\n    })); // on retrieved email\n\n    this.pop3.on('retr', Meteor.bindEnvironment((status, msgnumber, data) => {\n      if (status) {\n        // parse raw email data to  JSON object\n        simpleParser(data, Meteor.bindEnvironment((err, mail) => {\n          this.initialProcess(mail);\n        }));\n        this.currentMsgCount += 1; // delete email\n\n        this.pop3.dele(msgnumber);\n      } else {\n        SystemLogger.info('Cannot Retrieve Message ....');\n      }\n    })); // on email deleted\n\n    this.pop3.on('dele', Meteor.bindEnvironment(status => {\n      if (status) {\n        // get next email\n        if (this.currentMsgCount <= this.totalMsgCount) {\n          this.pop3.retr(this.currentMsgCount);\n        } else {\n          // parsed all messages.. so quitting\n          this.pop3.quit();\n        }\n      } else {\n        SystemLogger.info('Cannot Delete Message....');\n      }\n    })); // invalid server state\n\n    this.pop3.on('invalid-state', function (cmd) {\n      SystemLogger.info(\"Invalid state. You tried calling \".concat(cmd));\n    }); // locked => command already running, not finished yet\n\n    this.pop3.on('locked', function (cmd) {\n      SystemLogger.info(\"Current command has not finished yet. You tried calling \".concat(cmd));\n    });\n  }\n\n  initialProcess(mail) {\n    const email = {\n      headers: {\n        'from': mail.from.text,\n        'to': mail.to.text,\n        'date': mail.date,\n        'message-id': mail.messageId\n      },\n      body: mail.text\n    };\n    processDirectEmail(email);\n  }\n\n}\n\nlet POP3;\n\nclass POP3Helper {\n  constructor() {\n    this.running = false;\n  }\n\n  start() {\n    // run every x-minutes\n    if (settings.get('Direct_Reply_Frequency')) {\n      module.runSetters(POP3 = new POP3Intercepter(), [\"POP3\"]);\n      this.running = Meteor.setInterval(() => {\n        // get new emails and process\n        module.runSetters(POP3 = new POP3Intercepter(), [\"POP3\"]);\n      }, Math.max(settings.get('Direct_Reply_Frequency') * 60 * 1000, 2 * 60 * 1000));\n    }\n  }\n\n  isActive() {\n    return this.running;\n  }\n\n  stop() {\n    let callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Function();\n\n    if (this.isActive()) {\n      Meteor.clearInterval(this.running);\n    }\n\n    callback();\n  }\n\n}","map":{"version":3,"sources":["app/lib/server/lib/interceptDirectReplyEmails.js"],"names":["_objectSpread","module","link","default","v","export","IMAPIntercepter","POP3Intercepter","POP3","POP3Helper","Meteor","POP3Lib","simpleParser","settings","SystemLogger","IMAPInterceptor","processDirectEmail","constructor","imapConfig","options","user","get","password","host","port","debug","console","log","tls","deleteAfterRead","on","bindEnvironment","email","pop3","enabletls","totalMsgCount","currentMsgCount","login","status","list","info","msgcount","retr","quit","msgnumber","data","err","mail","initialProcess","dele","cmd","headers","from","text","to","date","messageId","body","running","start","setInterval","Math","max","isActive","stop","callback","Function","clearInterval"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport POP3Lib from 'poplib';\nimport { simpleParser } from 'mailparser';\n\nimport { settings } from '../../../settings/server';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { IMAPInterceptor } from '../../../../server/email/IMAPInterceptor';\nimport { processDirectEmail } from '.';\n\nexport class IMAPIntercepter extends IMAPInterceptor {\n\tconstructor(imapConfig, options = {}) {\n\t\timapConfig = {\n\t\t\tuser: settings.get('Direct_Reply_Username'),\n\t\t\tpassword: settings.get('Direct_Reply_Password'),\n\t\t\thost: settings.get('Direct_Reply_Host'),\n\t\t\tport: settings.get('Direct_Reply_Port'),\n\t\t\tdebug: settings.get('Direct_Reply_Debug') ? console.log : false,\n\t\t\ttls: !settings.get('Direct_Reply_IgnoreTLS'),\n\t\t\t...imapConfig,\n\t\t};\n\n\t\toptions.deleteAfterRead = settings.get('Direct_Reply_Delete');\n\n\t\tsuper(imapConfig, options);\n\n\t\tthis.on(\n\t\t\t'email',\n\t\t\tMeteor.bindEnvironment((email) => processDirectEmail(email)),\n\t\t);\n\t}\n}\n\nexport class POP3Intercepter {\n\tconstructor() {\n\t\tthis.pop3 = new POP3Lib(settings.get('Direct_Reply_Port'), settings.get('Direct_Reply_Host'), {\n\t\t\tenabletls: !settings.get('Direct_Reply_IgnoreTLS'),\n\t\t\tdebug: settings.get('Direct_Reply_Debug') ? console.log : false,\n\t\t});\n\n\t\tthis.totalMsgCount = 0;\n\t\tthis.currentMsgCount = 0;\n\n\t\tthis.pop3.on(\n\t\t\t'connect',\n\t\t\tMeteor.bindEnvironment(() => {\n\t\t\t\tthis.pop3.login(settings.get('Direct_Reply_Username'), settings.get('Direct_Reply_Password'));\n\t\t\t}),\n\t\t);\n\n\t\tthis.pop3.on(\n\t\t\t'login',\n\t\t\tMeteor.bindEnvironment((status) => {\n\t\t\t\tif (status) {\n\t\t\t\t\t// run on start\n\t\t\t\t\tthis.pop3.list();\n\t\t\t\t} else {\n\t\t\t\t\tSystemLogger.info('Unable to Log-in ....');\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// on getting list of all emails\n\t\tthis.pop3.on(\n\t\t\t'list',\n\t\t\tMeteor.bindEnvironment((status, msgcount) => {\n\t\t\t\tif (status) {\n\t\t\t\t\tif (msgcount > 0) {\n\t\t\t\t\t\tthis.totalMsgCount = msgcount;\n\t\t\t\t\t\tthis.currentMsgCount = 1;\n\t\t\t\t\t\t// Retrieve email\n\t\t\t\t\t\tthis.pop3.retr(this.currentMsgCount);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pop3.quit();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tSystemLogger.info('Cannot Get Emails ....');\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// on retrieved email\n\t\tthis.pop3.on(\n\t\t\t'retr',\n\t\t\tMeteor.bindEnvironment((status, msgnumber, data) => {\n\t\t\t\tif (status) {\n\t\t\t\t\t// parse raw email data to  JSON object\n\t\t\t\t\tsimpleParser(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tMeteor.bindEnvironment((err, mail) => {\n\t\t\t\t\t\t\tthis.initialProcess(mail);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.currentMsgCount += 1;\n\n\t\t\t\t\t// delete email\n\t\t\t\t\tthis.pop3.dele(msgnumber);\n\t\t\t\t} else {\n\t\t\t\t\tSystemLogger.info('Cannot Retrieve Message ....');\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// on email deleted\n\t\tthis.pop3.on(\n\t\t\t'dele',\n\t\t\tMeteor.bindEnvironment((status) => {\n\t\t\t\tif (status) {\n\t\t\t\t\t// get next email\n\t\t\t\t\tif (this.currentMsgCount <= this.totalMsgCount) {\n\t\t\t\t\t\tthis.pop3.retr(this.currentMsgCount);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// parsed all messages.. so quitting\n\t\t\t\t\t\tthis.pop3.quit();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tSystemLogger.info('Cannot Delete Message....');\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// invalid server state\n\t\tthis.pop3.on('invalid-state', function (cmd) {\n\t\t\tSystemLogger.info(`Invalid state. You tried calling ${cmd}`);\n\t\t});\n\n\t\t// locked => command already running, not finished yet\n\t\tthis.pop3.on('locked', function (cmd) {\n\t\t\tSystemLogger.info(`Current command has not finished yet. You tried calling ${cmd}`);\n\t\t});\n\t}\n\n\tinitialProcess(mail) {\n\t\tconst email = {\n\t\t\theaders: {\n\t\t\t\t'from': mail.from.text,\n\t\t\t\t'to': mail.to.text,\n\t\t\t\t'date': mail.date,\n\t\t\t\t'message-id': mail.messageId,\n\t\t\t},\n\t\t\tbody: mail.text,\n\t\t};\n\n\t\tprocessDirectEmail(email);\n\t}\n}\nexport let POP3;\n\nexport class POP3Helper {\n\tconstructor() {\n\t\tthis.running = false;\n\t}\n\n\tstart() {\n\t\t// run every x-minutes\n\t\tif (settings.get('Direct_Reply_Frequency')) {\n\t\t\tPOP3 = new POP3Intercepter();\n\n\t\t\tthis.running = Meteor.setInterval(() => {\n\t\t\t\t// get new emails and process\n\t\t\t\tPOP3 = new POP3Intercepter();\n\t\t\t}, Math.max(settings.get('Direct_Reply_Frequency') * 60 * 1000, 2 * 60 * 1000));\n\t\t}\n\t}\n\n\tisActive() {\n\t\treturn this.running;\n\t}\n\n\tstop(callback = new Function()) {\n\t\tif (this.isActive()) {\n\t\t\tMeteor.clearInterval(this.running);\n\t\t}\n\t\tcallback();\n\t}\n}\n"]},"sourceType":"module","hash":"43584b23499908ddd894a4c70c558d79ab0025eb"}

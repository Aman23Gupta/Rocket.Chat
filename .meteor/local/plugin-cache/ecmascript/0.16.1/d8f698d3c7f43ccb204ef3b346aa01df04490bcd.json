{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/peerCommandHandlers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/irc/server/servers/RFC2813/peerCommandHandlers.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/peerCommandHandlers.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/servers/RFC2813/peerCommandHandlers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/irc/server/servers/RFC2813/peerCommandHandlers.js"}},"code":"function PASS() {\n  this.log('Received PASS command, continue registering...');\n  this.registerSteps.push('PASS');\n}\n\nfunction SERVER(parsedMessage) {\n  this.log('Received SERVER command, waiting for first PING...');\n  this.serverPrefix = parsedMessage.prefix;\n  this.registerSteps.push('SERVER');\n}\n\nfunction PING() {\n  if (!this.isRegistered && this.registerSteps.length === 2) {\n    this.log('Received first PING command, server is registered!');\n    this.isRegistered = true;\n    this.emit('registered');\n  }\n\n  this.write({\n    prefix: this.config.server.name,\n    command: 'PONG',\n    parameters: [this.config.server.name]\n  });\n}\n\nfunction NICK(parsedMessage) {\n  let command; // Check if the message comes from the server,\n  // which means it is a new user\n\n  if (parsedMessage.prefix === this.serverPrefix) {\n    command = {\n      identifier: 'userRegistered',\n      args: {\n        nick: parsedMessage.args[0],\n        username: parsedMessage.args[2],\n        host: parsedMessage.args[3],\n        name: parsedMessage.args[6]\n      }\n    };\n  } else {\n    // Otherwise, it is a nick change\n    command = {\n      identifier: 'nickChanged',\n      args: {\n        nick: parsedMessage.nick,\n        newNick: parsedMessage.args[0]\n      }\n    };\n  }\n\n  return command;\n}\n\nfunction JOIN(parsedMessage) {\n  const command = {\n    identifier: 'joinedChannel',\n    args: {\n      roomName: parsedMessage.args[0].substring(1),\n      nick: parsedMessage.prefix\n    }\n  };\n  return command;\n}\n\nfunction PART(parsedMessage) {\n  const command = {\n    identifier: 'leftChannel',\n    args: {\n      roomName: parsedMessage.args[0].substring(1),\n      nick: parsedMessage.prefix\n    }\n  };\n  return command;\n}\n\nfunction PRIVMSG(parsedMessage) {\n  const command = {\n    identifier: 'sentMessage',\n    args: {\n      nick: parsedMessage.prefix,\n      message: parsedMessage.args[1]\n    }\n  };\n\n  if (parsedMessage.args[0][0] === '#') {\n    command.args.roomName = parsedMessage.args[0].substring(1);\n  } else {\n    command.args.recipientNick = parsedMessage.args[0];\n  }\n\n  return command;\n}\n\nfunction QUIT(parsedMessage) {\n  const command = {\n    identifier: 'disconnected',\n    args: {\n      nick: parsedMessage.prefix\n    }\n  };\n  return command;\n}\n\nmodule.exportDefault({\n  PASS,\n  SERVER,\n  PING,\n  NICK,\n  JOIN,\n  PART,\n  PRIVMSG,\n  QUIT\n});","map":{"version":3,"sources":["app/irc/server/servers/RFC2813/peerCommandHandlers.js"],"names":["PASS","log","registerSteps","push","SERVER","parsedMessage","serverPrefix","prefix","PING","isRegistered","length","emit","write","config","server","name","command","parameters","NICK","identifier","args","nick","username","host","newNick","JOIN","roomName","substring","PART","PRIVMSG","message","recipientNick","QUIT","module","exportDefault"],"mappings":"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","sourcesContent":["function PASS() {\n\tthis.log('Received PASS command, continue registering...');\n\n\tthis.registerSteps.push('PASS');\n}\n\nfunction SERVER(parsedMessage) {\n\tthis.log('Received SERVER command, waiting for first PING...');\n\n\tthis.serverPrefix = parsedMessage.prefix;\n\n\tthis.registerSteps.push('SERVER');\n}\n\nfunction PING() {\n\tif (!this.isRegistered && this.registerSteps.length === 2) {\n\t\tthis.log('Received first PING command, server is registered!');\n\n\t\tthis.isRegistered = true;\n\n\t\tthis.emit('registered');\n\t}\n\n\tthis.write({\n\t\tprefix: this.config.server.name,\n\t\tcommand: 'PONG',\n\t\tparameters: [this.config.server.name],\n\t});\n}\n\nfunction NICK(parsedMessage) {\n\tlet command;\n\n\t// Check if the message comes from the server,\n\t// which means it is a new user\n\tif (parsedMessage.prefix === this.serverPrefix) {\n\t\tcommand = {\n\t\t\tidentifier: 'userRegistered',\n\t\t\targs: {\n\t\t\t\tnick: parsedMessage.args[0],\n\t\t\t\tusername: parsedMessage.args[2],\n\t\t\t\thost: parsedMessage.args[3],\n\t\t\t\tname: parsedMessage.args[6],\n\t\t\t},\n\t\t};\n\t} else {\n\t\t// Otherwise, it is a nick change\n\t\tcommand = {\n\t\t\tidentifier: 'nickChanged',\n\t\t\targs: {\n\t\t\t\tnick: parsedMessage.nick,\n\t\t\t\tnewNick: parsedMessage.args[0],\n\t\t\t},\n\t\t};\n\t}\n\n\treturn command;\n}\n\nfunction JOIN(parsedMessage) {\n\tconst command = {\n\t\tidentifier: 'joinedChannel',\n\t\targs: {\n\t\t\troomName: parsedMessage.args[0].substring(1),\n\t\t\tnick: parsedMessage.prefix,\n\t\t},\n\t};\n\n\treturn command;\n}\n\nfunction PART(parsedMessage) {\n\tconst command = {\n\t\tidentifier: 'leftChannel',\n\t\targs: {\n\t\t\troomName: parsedMessage.args[0].substring(1),\n\t\t\tnick: parsedMessage.prefix,\n\t\t},\n\t};\n\n\treturn command;\n}\n\nfunction PRIVMSG(parsedMessage) {\n\tconst command = {\n\t\tidentifier: 'sentMessage',\n\t\targs: {\n\t\t\tnick: parsedMessage.prefix,\n\t\t\tmessage: parsedMessage.args[1],\n\t\t},\n\t};\n\n\tif (parsedMessage.args[0][0] === '#') {\n\t\tcommand.args.roomName = parsedMessage.args[0].substring(1);\n\t} else {\n\t\tcommand.args.recipientNick = parsedMessage.args[0];\n\t}\n\n\treturn command;\n}\n\nfunction QUIT(parsedMessage) {\n\tconst command = {\n\t\tidentifier: 'disconnected',\n\t\targs: {\n\t\t\tnick: parsedMessage.prefix,\n\t\t},\n\t};\n\n\treturn command;\n}\n\nexport default { PASS, SERVER, PING, NICK, JOIN, PART, PRIVMSG, QUIT };\n"]},"sourceType":"module","hash":"d8f698d3c7f43ccb204ef3b346aa01df04490bcd"}

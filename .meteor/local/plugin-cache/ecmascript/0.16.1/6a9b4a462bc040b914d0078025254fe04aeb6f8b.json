{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/getValidRoomName.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/utils/lib/getValidRoomName.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/getValidRoomName.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/getValidRoomName.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/lib/getValidRoomName.js"}},"code":"module.export({\n  getValidRoomName: () => getValidRoomName\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet limax;\nmodule.link(\"limax\", {\n  default(v) {\n    limax = v;\n  }\n\n}, 1);\nlet escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet Rooms;\nmodule.link(\"../../models\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 4);\nlet validateName;\nmodule.link(\"../../lib/server/functions/validateName\", {\n  validateName(v) {\n    validateName = v;\n  }\n\n}, 5);\n\nconst getValidRoomName = function (displayName) {\n  let rid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let slugifiedName = displayName;\n\n  if (settings.get('UI_Allow_room_names_with_special_chars')) {\n    const cleanName = limax(displayName);\n\n    if (options.allowDuplicates !== true) {\n      const room = Rooms.findOneByDisplayName(displayName);\n\n      if (room && room._id !== rid) {\n        if (room.archived) {\n          throw new Meteor.Error('error-archived-duplicate-name', \"There's an archived channel with name \".concat(cleanName), {\n            function: 'RocketChat.getValidRoomName',\n            channel_name: cleanName\n          });\n        } else {\n          throw new Meteor.Error('error-duplicate-channel-name', \"A channel with name '\".concat(cleanName, \"' exists\"), {\n            function: 'RocketChat.getValidRoomName',\n            channel_name: cleanName\n          });\n        }\n      }\n    }\n\n    slugifiedName = cleanName;\n  }\n\n  let nameValidation;\n\n  if (options.nameValidationRegex) {\n    nameValidation = new RegExp(options.nameValidationRegex);\n  } else {\n    try {\n      nameValidation = new RegExp(\"^\".concat(settings.get('UTF8_Channel_Names_Validation'), \"$\"));\n    } catch (error) {\n      nameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n    }\n  }\n\n  if (!nameValidation.test(slugifiedName) || !validateName(slugifiedName)) {\n    throw new Meteor.Error('error-invalid-room-name', \"\".concat(escapeHTML(slugifiedName), \" is not a valid room name.\"), {\n      function: 'RocketChat.getValidRoomName',\n      channel_name: escapeHTML(slugifiedName)\n    });\n  }\n\n  if (options.allowDuplicates !== true) {\n    const room = Rooms.findOneByName(slugifiedName);\n\n    if (room && room._id !== rid) {\n      if (settings.get('UI_Allow_room_names_with_special_chars')) {\n        let tmpName = slugifiedName;\n        let next = 0;\n\n        while (Rooms.findOneByNameAndNotId(tmpName, rid)) {\n          tmpName = \"\".concat(slugifiedName, \"-\").concat(++next);\n        }\n\n        slugifiedName = tmpName;\n      } else if (room.archived) {\n        throw new Meteor.Error('error-archived-duplicate-name', \"There's an archived channel with name \".concat(escapeHTML(slugifiedName)), {\n          function: 'RocketChat.getValidRoomName',\n          channel_name: escapeHTML(slugifiedName)\n        });\n      } else {\n        throw new Meteor.Error('error-duplicate-channel-name', \"A channel with name '\".concat(escapeHTML(slugifiedName), \"' exists\"), {\n          function: 'RocketChat.getValidRoomName',\n          channel_name: escapeHTML(slugifiedName)\n        });\n      }\n    }\n  }\n\n  return slugifiedName;\n};","map":{"version":3,"sources":["app/utils/lib/getValidRoomName.js"],"names":["module","export","getValidRoomName","Meteor","link","v","limax","default","escapeHTML","settings","Rooms","validateName","displayName","rid","options","slugifiedName","get","cleanName","allowDuplicates","room","findOneByDisplayName","_id","archived","Error","function","channel_name","nameValidation","nameValidationRegex","RegExp","error","test","findOneByName","tmpName","next","findOneByNameAndNotId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport limax from 'limax';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport { settings } from '../../settings';\nimport { Rooms } from '../../models';\nimport { validateName } from '../../lib/server/functions/validateName';\n\nexport const getValidRoomName = (displayName, rid = '', options = {}) => {\n\tlet slugifiedName = displayName;\n\n\tif (settings.get('UI_Allow_room_names_with_special_chars')) {\n\t\tconst cleanName = limax(displayName);\n\t\tif (options.allowDuplicates !== true) {\n\t\t\tconst room = Rooms.findOneByDisplayName(displayName);\n\t\t\tif (room && room._id !== rid) {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\tthrow new Meteor.Error('error-archived-duplicate-name', `There's an archived channel with name ${cleanName}`, {\n\t\t\t\t\t\tfunction: 'RocketChat.getValidRoomName',\n\t\t\t\t\t\tchannel_name: cleanName,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Meteor.Error('error-duplicate-channel-name', `A channel with name '${cleanName}' exists`, {\n\t\t\t\t\t\tfunction: 'RocketChat.getValidRoomName',\n\t\t\t\t\t\tchannel_name: cleanName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tslugifiedName = cleanName;\n\t}\n\n\tlet nameValidation;\n\n\tif (options.nameValidationRegex) {\n\t\tnameValidation = new RegExp(options.nameValidationRegex);\n\t} else {\n\t\ttry {\n\t\t\tnameValidation = new RegExp(`^${settings.get('UTF8_Channel_Names_Validation')}$`);\n\t\t} catch (error) {\n\t\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t\t}\n\t}\n\n\tif (!nameValidation.test(slugifiedName) || !validateName(slugifiedName)) {\n\t\tthrow new Meteor.Error('error-invalid-room-name', `${escapeHTML(slugifiedName)} is not a valid room name.`, {\n\t\t\tfunction: 'RocketChat.getValidRoomName',\n\t\t\tchannel_name: escapeHTML(slugifiedName),\n\t\t});\n\t}\n\n\tif (options.allowDuplicates !== true) {\n\t\tconst room = Rooms.findOneByName(slugifiedName);\n\t\tif (room && room._id !== rid) {\n\t\t\tif (settings.get('UI_Allow_room_names_with_special_chars')) {\n\t\t\t\tlet tmpName = slugifiedName;\n\t\t\t\tlet next = 0;\n\t\t\t\twhile (Rooms.findOneByNameAndNotId(tmpName, rid)) {\n\t\t\t\t\ttmpName = `${slugifiedName}-${++next}`;\n\t\t\t\t}\n\t\t\t\tslugifiedName = tmpName;\n\t\t\t} else if (room.archived) {\n\t\t\t\tthrow new Meteor.Error('error-archived-duplicate-name', `There's an archived channel with name ${escapeHTML(slugifiedName)}`, {\n\t\t\t\t\tfunction: 'RocketChat.getValidRoomName',\n\t\t\t\t\tchannel_name: escapeHTML(slugifiedName),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Meteor.Error('error-duplicate-channel-name', `A channel with name '${escapeHTML(slugifiedName)}' exists`, {\n\t\t\t\t\tfunction: 'RocketChat.getValidRoomName',\n\t\t\t\t\tchannel_name: escapeHTML(slugifiedName),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\treturn slugifiedName;\n};\n"]},"sourceType":"module","hash":"6a9b4a462bc040b914d0078025254fe04aeb6f8b"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/theme/server/variables.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/theme/server/variables.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/theme/server/variables.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/theme/server/variables.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/theme/server/variables.js"}},"code":"let theme;\nmodule.link(\"./server\", {\n  theme(v) {\n    theme = v;\n  }\n\n}, 0);\nlet settingsRegistry;\nmodule.link(\"../../settings/server\", {\n  settingsRegistry(v) {\n    settingsRegistry = v;\n  }\n\n}, 1);\n// TODO: Define registers/getters/setters for packages to work with established\n// \t\t\theirarchy of colors instead of making duplicate definitions\n// TODO: Settings pages to show simple separation of major/minor/addon colors\n// TODO: Add setting toggle to use defaults for minor colours and hide settings\n// New colors, used for shades on solid backgrounds\n// Defined range of transparencies reduces random colour variances\n// Major colors form the core of the scheme\n// Names changed to reflect usage, comments show pre-refactor names\nconst variablesContent = Assets.getText('client/imports/general/variables.css');\nconst regionRegex = /\\/\\*\\s*#region\\s+([^ ]*?)\\s+(.*?)\\s*\\*\\/((.|\\s)*?)\\/\\*\\s*#endregion\\s*\\*\\//gim;\n\nfor (let matches = regionRegex.exec(variablesContent); matches; matches = regionRegex.exec(variablesContent)) {\n  const [, type, section, content] = matches;\n  [...content.match(/--(.*?):\\s*(.*?);/gim)].forEach(entry => {\n    const matches = /--(.*?):\\s*(.*?);/im.exec(entry);\n    const [, name, value] = matches;\n\n    if (type === 'fonts') {\n      theme.addVariable('font', name, value, 'Fonts', true);\n      return;\n    }\n\n    if (type === 'colors') {\n      if (/var/.test(value)) {\n        const [, variableName] = value.match(/var\\(--(.*?)\\)/i);\n        theme.addVariable('color', name, variableName, section, true, 'expression', ['color', 'expression']);\n        return;\n      }\n\n      theme.addVariable('color', name, value, section, true, 'color', ['color', 'expression']);\n      return;\n    }\n\n    if (type === 'less-colors') {\n      if (/var/.test(value)) {\n        const [, variableName] = value.match(/var\\(--(.*?)\\)/i);\n        theme.addVariable('color', name, \"@\".concat(variableName), section, true, 'expression', ['color', 'expression']);\n        return;\n      }\n\n      theme.addVariable('color', name, value, section, true, 'color', ['color', 'expression']);\n    }\n  });\n}\n\nsettingsRegistry.add('theme-custom-css', '', {\n  group: 'Layout',\n  type: 'code',\n  code: 'text/css',\n  multiline: true,\n  section: 'Custom CSS',\n  public: true\n});","map":{"version":3,"sources":["app/theme/server/variables.js"],"names":["theme","module","link","v","settingsRegistry","variablesContent","Assets","getText","regionRegex","matches","exec","type","section","content","match","forEach","entry","name","value","addVariable","test","variableName","add","group","code","multiline","public"],"mappings":"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","sourcesContent":["import { theme } from './server';\nimport { settingsRegistry } from '../../settings/server';\n// TODO: Define registers/getters/setters for packages to work with established\n// \t\t\theirarchy of colors instead of making duplicate definitions\n// TODO: Settings pages to show simple separation of major/minor/addon colors\n// TODO: Add setting toggle to use defaults for minor colours and hide settings\n\n// New colors, used for shades on solid backgrounds\n// Defined range of transparencies reduces random colour variances\n// Major colors form the core of the scheme\n// Names changed to reflect usage, comments show pre-refactor names\n\nconst variablesContent = Assets.getText('client/imports/general/variables.css');\n\nconst regionRegex = /\\/\\*\\s*#region\\s+([^ ]*?)\\s+(.*?)\\s*\\*\\/((.|\\s)*?)\\/\\*\\s*#endregion\\s*\\*\\//gim;\n\nfor (let matches = regionRegex.exec(variablesContent); matches; matches = regionRegex.exec(variablesContent)) {\n\tconst [, type, section, content] = matches;\n\t[...content.match(/--(.*?):\\s*(.*?);/gim)].forEach((entry) => {\n\t\tconst matches = /--(.*?):\\s*(.*?);/im.exec(entry);\n\t\tconst [, name, value] = matches;\n\n\t\tif (type === 'fonts') {\n\t\t\ttheme.addVariable('font', name, value, 'Fonts', true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === 'colors') {\n\t\t\tif (/var/.test(value)) {\n\t\t\t\tconst [, variableName] = value.match(/var\\(--(.*?)\\)/i);\n\t\t\t\ttheme.addVariable('color', name, variableName, section, true, 'expression', ['color', 'expression']);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttheme.addVariable('color', name, value, section, true, 'color', ['color', 'expression']);\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === 'less-colors') {\n\t\t\tif (/var/.test(value)) {\n\t\t\t\tconst [, variableName] = value.match(/var\\(--(.*?)\\)/i);\n\t\t\t\ttheme.addVariable('color', name, `@${variableName}`, section, true, 'expression', ['color', 'expression']);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttheme.addVariable('color', name, value, section, true, 'color', ['color', 'expression']);\n\t\t}\n\t});\n}\n\nsettingsRegistry.add('theme-custom-css', '', {\n\tgroup: 'Layout',\n\ttype: 'code',\n\tcode: 'text/css',\n\tmultiline: true,\n\tsection: 'Custom CSS',\n\tpublic: true,\n});\n"]},"sourceType":"module","hash":"5cdaeea7351125fb7c6063d266d0efb5705a2fdb"}

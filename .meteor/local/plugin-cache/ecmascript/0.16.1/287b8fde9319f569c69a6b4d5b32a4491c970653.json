{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/LivechatUnit.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/models/server/models/LivechatUnit.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/LivechatUnit.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/LivechatUnit.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/models/server/models/LivechatUnit.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  LivechatUnit: () => LivechatUnit\n});\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 0);\nlet LivechatDepartmentInstance, LivechatDepartment;\nmodule.link(\"../../../../../app/models/server/models/LivechatDepartment\", {\n  default(v) {\n    LivechatDepartmentInstance = v;\n  },\n\n  LivechatDepartment(v) {\n    LivechatDepartment = v;\n  }\n\n}, 1);\nlet getUnitsFromUser;\nmodule.link(\"../../../livechat-enterprise/server/lib/units\", {\n  getUnitsFromUser(v) {\n    getUnitsFromUser = v;\n  }\n\n}, 2);\nlet queriesLogger;\nmodule.link(\"../../../livechat-enterprise/server/lib/logger\", {\n  queriesLogger(v) {\n    queriesLogger = v;\n  }\n\n}, 3);\nlet LivechatUnitMonitors;\nmodule.link(\"./LivechatUnitMonitors\", {\n  default(v) {\n    LivechatUnitMonitors = v;\n  }\n\n}, 4);\n\nconst addQueryRestrictions = function () {\n  let originalQuery = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const query = _objectSpread(_objectSpread({}, originalQuery), {}, {\n    type: 'u'\n  });\n\n  const units = getUnitsFromUser();\n\n  if (Array.isArray(units)) {\n    query.ancestors = {\n      $in: units\n    };\n    const expressions = query.$and || [];\n    const condition = {\n      $or: [{\n        ancestors: {\n          $in: units\n        }\n      }, {\n        _id: {\n          $in: units\n        }\n      }]\n    };\n    query.$and = [condition, ...expressions];\n  }\n\n  return query;\n};\n\nclass LivechatUnit extends LivechatDepartment {\n  find(originalQuery) {\n    const query = addQueryRestrictions(originalQuery);\n    queriesLogger.debug({\n      msg: 'LivechatUnit.find',\n      query\n    });\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return this.unfilteredFind(query, ...args);\n  }\n\n  findOne(originalQuery) {\n    const query = addQueryRestrictions(originalQuery);\n    queriesLogger.debug({\n      msg: 'LivechatUnit.findOne',\n      query\n    });\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return super.unfilteredFindOne(query, ...args);\n  }\n\n  findOneById(_id, options) {\n    const query = addQueryRestrictions({\n      _id\n    });\n    return super.unfilteredFindOne(query, options);\n  }\n\n  update() {\n    return this.unfilteredUpdate(...arguments);\n  }\n\n  createOrUpdateUnit(_id, _ref, ancestors, monitors, departments) {\n    let {\n      name,\n      visibility\n    } = _ref;\n    monitors = [].concat(monitors || []);\n    ancestors = [].concat(ancestors || []);\n    const record = {\n      name,\n      visibility,\n      type: 'u',\n      numMonitors: monitors.length,\n      numDepartments: departments.length\n    };\n\n    if (_id) {\n      this.update({\n        _id\n      }, {\n        $set: record\n      });\n    } else {\n      _id = this.insert(record);\n    }\n\n    ancestors.splice(0, 0, _id);\n\n    const savedMonitors = _.pluck(LivechatUnitMonitors.findByUnitId(_id).fetch(), 'monitorId');\n\n    const monitorsToSave = _.pluck(monitors, 'monitorId'); // remove other monitors\n\n\n    _.difference(savedMonitors, monitorsToSave).forEach(monitorId => {\n      LivechatUnitMonitors.removeByUnitIdAndMonitorId(_id, monitorId);\n    });\n\n    monitors.forEach(monitor => {\n      LivechatUnitMonitors.saveMonitor({\n        monitorId: monitor.monitorId,\n        unitId: _id,\n        username: monitor.username\n      });\n    });\n\n    const savedDepartments = _.pluck(LivechatDepartmentInstance.find({\n      parentId: _id\n    }).fetch(), '_id');\n\n    const departmentsToSave = _.pluck(departments, 'departmentId'); // remove other departments\n\n\n    _.difference(savedDepartments, departmentsToSave).forEach(departmentId => {\n      LivechatDepartmentInstance.update({\n        _id: departmentId\n      }, {\n        $set: {\n          parentId: null,\n          ancestors: null\n        }\n      });\n    });\n\n    departmentsToSave.forEach(departmentId => {\n      LivechatDepartmentInstance.update({\n        _id: departmentId\n      }, {\n        $set: {\n          parentId: _id,\n          ancestors\n        }\n      });\n    });\n    return _.extend(record, {\n      _id\n    });\n  } // REMOVE\n\n\n  remove() {\n    return this.unfilteredRemove(...arguments);\n  }\n\n  removeParentAndAncestorById(parentId) {\n    const query = {\n      parentId\n    };\n    const update = {\n      $unset: {\n        parentId: 1\n      },\n      $pull: {\n        ancestors: parentId\n      }\n    };\n    return this.update(query, update, {\n      multi: true\n    });\n  }\n\n  removeById(_id) {\n    LivechatUnitMonitors.removeByUnitId(_id);\n    this.removeParentAndAncestorById(_id);\n    const query = {\n      _id\n    };\n    return this.remove(query);\n  }\n\n  findOneByIdOrName(_idOrName, options) {\n    const query = {\n      $or: [{\n        _id: _idOrName\n      }, {\n        name: _idOrName\n      }]\n    };\n    return this.findOne(query, options);\n  }\n\n  findByMonitorId(monitorId) {\n    const monitoredUnits = LivechatUnitMonitors.findByMonitorId(monitorId).fetch();\n\n    if (monitoredUnits.length === 0) {\n      return [];\n    }\n\n    return monitoredUnits.map(u => u.unitId);\n  }\n\n  findMonitoredDepartmentsByMonitorId(monitorId) {\n    const monitoredUnits = this.findByMonitorId(monitorId);\n    return LivechatDepartmentInstance.findByUnitIds(monitoredUnits);\n  }\n\n}\n\nmodule.exportDefault(new LivechatUnit(LivechatDepartmentInstance.model));","map":{"version":3,"sources":["ee/app/models/server/models/LivechatUnit.js"],"names":["_objectSpread","module","link","default","v","export","LivechatUnit","_","LivechatDepartmentInstance","LivechatDepartment","getUnitsFromUser","queriesLogger","LivechatUnitMonitors","addQueryRestrictions","originalQuery","query","type","units","Array","isArray","ancestors","$in","expressions","$and","condition","$or","_id","find","debug","msg","args","unfilteredFind","findOne","unfilteredFindOne","findOneById","options","update","unfilteredUpdate","createOrUpdateUnit","monitors","departments","name","visibility","concat","record","numMonitors","length","numDepartments","$set","insert","splice","savedMonitors","pluck","findByUnitId","fetch","monitorsToSave","difference","forEach","monitorId","removeByUnitIdAndMonitorId","monitor","saveMonitor","unitId","username","savedDepartments","parentId","departmentsToSave","departmentId","extend","remove","unfilteredRemove","removeParentAndAncestorById","$unset","$pull","multi","removeById","removeByUnitId","findOneByIdOrName","_idOrName","findByMonitorId","monitoredUnits","map","u","findMonitoredDepartmentsByMonitorId","findByUnitIds","exportDefault","model"],"mappings":"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","sourcesContent":["import _ from 'underscore';\n\nimport LivechatDepartmentInstance, { LivechatDepartment } from '../../../../../app/models/server/models/LivechatDepartment';\nimport { getUnitsFromUser } from '../../../livechat-enterprise/server/lib/units';\nimport { queriesLogger } from '../../../livechat-enterprise/server/lib/logger';\nimport LivechatUnitMonitors from './LivechatUnitMonitors';\n\nconst addQueryRestrictions = (originalQuery = {}) => {\n\tconst query = { ...originalQuery, type: 'u' };\n\n\tconst units = getUnitsFromUser();\n\tif (Array.isArray(units)) {\n\t\tquery.ancestors = { $in: units };\n\t\tconst expressions = query.$and || [];\n\t\tconst condition = { $or: [{ ancestors: { $in: units } }, { _id: { $in: units } }] };\n\t\tquery.$and = [condition, ...expressions];\n\t}\n\n\treturn query;\n};\n\nexport class LivechatUnit extends LivechatDepartment {\n\tfind(originalQuery, ...args) {\n\t\tconst query = addQueryRestrictions(originalQuery);\n\t\tqueriesLogger.debug({ msg: 'LivechatUnit.find', query });\n\t\treturn this.unfilteredFind(query, ...args);\n\t}\n\n\tfindOne(originalQuery, ...args) {\n\t\tconst query = addQueryRestrictions(originalQuery);\n\t\tqueriesLogger.debug({ msg: 'LivechatUnit.findOne', query });\n\t\treturn super.unfilteredFindOne(query, ...args);\n\t}\n\n\tfindOneById(_id, options) {\n\t\tconst query = addQueryRestrictions({ _id });\n\t\treturn super.unfilteredFindOne(query, options);\n\t}\n\n\tupdate(...args) {\n\t\treturn this.unfilteredUpdate(...args);\n\t}\n\n\tcreateOrUpdateUnit(_id, { name, visibility }, ancestors, monitors, departments) {\n\t\tmonitors = [].concat(monitors || []);\n\t\tancestors = [].concat(ancestors || []);\n\n\t\tconst record = {\n\t\t\tname,\n\t\t\tvisibility,\n\t\t\ttype: 'u',\n\t\t\tnumMonitors: monitors.length,\n\t\t\tnumDepartments: departments.length,\n\t\t};\n\n\t\tif (_id) {\n\t\t\tthis.update({ _id }, { $set: record });\n\t\t} else {\n\t\t\t_id = this.insert(record);\n\t\t}\n\n\t\tancestors.splice(0, 0, _id);\n\n\t\tconst savedMonitors = _.pluck(LivechatUnitMonitors.findByUnitId(_id).fetch(), 'monitorId');\n\t\tconst monitorsToSave = _.pluck(monitors, 'monitorId');\n\n\t\t// remove other monitors\n\t\t_.difference(savedMonitors, monitorsToSave).forEach((monitorId) => {\n\t\t\tLivechatUnitMonitors.removeByUnitIdAndMonitorId(_id, monitorId);\n\t\t});\n\n\t\tmonitors.forEach((monitor) => {\n\t\t\tLivechatUnitMonitors.saveMonitor({\n\t\t\t\tmonitorId: monitor.monitorId,\n\t\t\t\tunitId: _id,\n\t\t\t\tusername: monitor.username,\n\t\t\t});\n\t\t});\n\n\t\tconst savedDepartments = _.pluck(LivechatDepartmentInstance.find({ parentId: _id }).fetch(), '_id');\n\t\tconst departmentsToSave = _.pluck(departments, 'departmentId');\n\n\t\t// remove other departments\n\t\t_.difference(savedDepartments, departmentsToSave).forEach((departmentId) => {\n\t\t\tLivechatDepartmentInstance.update(\n\t\t\t\t{ _id: departmentId },\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tparentId: null,\n\t\t\t\t\t\tancestors: null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\n\t\tdepartmentsToSave.forEach((departmentId) => {\n\t\t\tLivechatDepartmentInstance.update(\n\t\t\t\t{ _id: departmentId },\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tparentId: _id,\n\t\t\t\t\t\tancestors,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\n\t\treturn _.extend(record, { _id });\n\t}\n\n\t// REMOVE\n\tremove(...args) {\n\t\treturn this.unfilteredRemove(...args);\n\t}\n\n\tremoveParentAndAncestorById(parentId) {\n\t\tconst query = {\n\t\t\tparentId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: { parentId: 1 },\n\t\t\t$pull: { ancestors: parentId },\n\t\t};\n\n\t\treturn this.update(query, update, { multi: true });\n\t}\n\n\tremoveById(_id) {\n\t\tLivechatUnitMonitors.removeByUnitId(_id);\n\t\tthis.removeParentAndAncestorById(_id);\n\n\t\tconst query = { _id };\n\t\treturn this.remove(query);\n\t}\n\n\tfindOneByIdOrName(_idOrName, options) {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByMonitorId(monitorId) {\n\t\tconst monitoredUnits = LivechatUnitMonitors.findByMonitorId(monitorId).fetch();\n\t\tif (monitoredUnits.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn monitoredUnits.map((u) => u.unitId);\n\t}\n\n\tfindMonitoredDepartmentsByMonitorId(monitorId) {\n\t\tconst monitoredUnits = this.findByMonitorId(monitorId);\n\t\treturn LivechatDepartmentInstance.findByUnitIds(monitoredUnits);\n\t}\n}\n\nexport default new LivechatUnit(LivechatDepartmentInstance.model);\n"]},"sourceType":"module","hash":"287b8fde9319f569c69a6b4d5b32a4491c970653"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/2fa/server/lib/totp.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/2fa/server/lib/totp.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/2fa/server/lib/totp.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/2fa/server/lib/totp.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/2fa/server/lib/totp.js"}},"code":"module.export({\n  TOTP: () => TOTP\n});\nlet SHA256;\nmodule.link(\"meteor/sha\", {\n  SHA256(v) {\n    SHA256 = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet speakeasy;\nmodule.link(\"speakeasy\", {\n  default(v) {\n    speakeasy = v;\n  }\n\n}, 2);\nlet Users;\nmodule.link(\"../../../models\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nconst TOTP = {\n  generateSecret() {\n    return speakeasy.generateSecret();\n  },\n\n  generateOtpauthURL(secret, username) {\n    return speakeasy.otpauthURL({\n      secret: secret.ascii,\n      label: \"Rocket.Chat:\".concat(username)\n    });\n  },\n\n  verify(_ref) {\n    let {\n      secret,\n      token,\n      backupTokens,\n      userId\n    } = _ref;\n\n    // validates a backup code\n    if (token.length === 8 && backupTokens) {\n      const hashedCode = SHA256(token);\n      const usedCode = backupTokens.indexOf(hashedCode);\n\n      if (usedCode !== -1) {\n        backupTokens.splice(usedCode, 1); // mark the code as used (remove it from the list)\n\n        Users.update2FABackupCodesByUserId(userId, backupTokens);\n        return true;\n      }\n\n      return false;\n    }\n\n    const maxDelta = settings.get('Accounts_TwoFactorAuthentication_MaxDelta');\n\n    if (maxDelta) {\n      const verifiedDelta = speakeasy.totp.verifyDelta({\n        secret,\n        encoding: 'base32',\n        token,\n        window: maxDelta\n      });\n      return verifiedDelta !== undefined;\n    }\n\n    return speakeasy.totp.verify({\n      secret,\n      encoding: 'base32',\n      token\n    });\n  },\n\n  generateCodes() {\n    // generate 12 backup codes\n    const codes = [];\n    const hashedCodes = [];\n\n    for (let i = 0; i < 12; i++) {\n      const code = Random.id(8);\n      codes.push(code);\n      hashedCodes.push(SHA256(code));\n    }\n\n    return {\n      codes,\n      hashedCodes\n    };\n  }\n\n};","map":{"version":3,"sources":["app/2fa/server/lib/totp.js"],"names":["module","export","TOTP","SHA256","link","v","Random","speakeasy","default","Users","settings","generateSecret","generateOtpauthURL","secret","username","otpauthURL","ascii","label","verify","token","backupTokens","userId","length","hashedCode","usedCode","indexOf","splice","update2FABackupCodesByUserId","maxDelta","get","verifiedDelta","totp","verifyDelta","encoding","window","undefined","generateCodes","codes","hashedCodes","i","code","id","push"],"mappings":"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","sourcesContent":["import { SHA256 } from 'meteor/sha';\nimport { Random } from 'meteor/random';\nimport speakeasy from 'speakeasy';\n\nimport { Users } from '../../../models';\nimport { settings } from '../../../settings/server';\n\nexport const TOTP = {\n\tgenerateSecret() {\n\t\treturn speakeasy.generateSecret();\n\t},\n\n\tgenerateOtpauthURL(secret, username) {\n\t\treturn speakeasy.otpauthURL({\n\t\t\tsecret: secret.ascii,\n\t\t\tlabel: `Rocket.Chat:${username}`,\n\t\t});\n\t},\n\n\tverify({ secret, token, backupTokens, userId }) {\n\t\t// validates a backup code\n\t\tif (token.length === 8 && backupTokens) {\n\t\t\tconst hashedCode = SHA256(token);\n\t\t\tconst usedCode = backupTokens.indexOf(hashedCode);\n\n\t\t\tif (usedCode !== -1) {\n\t\t\t\tbackupTokens.splice(usedCode, 1);\n\n\t\t\t\t// mark the code as used (remove it from the list)\n\t\t\t\tUsers.update2FABackupCodesByUserId(userId, backupTokens);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst maxDelta = settings.get('Accounts_TwoFactorAuthentication_MaxDelta');\n\t\tif (maxDelta) {\n\t\t\tconst verifiedDelta = speakeasy.totp.verifyDelta({\n\t\t\t\tsecret,\n\t\t\t\tencoding: 'base32',\n\t\t\t\ttoken,\n\t\t\t\twindow: maxDelta,\n\t\t\t});\n\n\t\t\treturn verifiedDelta !== undefined;\n\t\t}\n\n\t\treturn speakeasy.totp.verify({\n\t\t\tsecret,\n\t\t\tencoding: 'base32',\n\t\t\ttoken,\n\t\t});\n\t},\n\n\tgenerateCodes() {\n\t\t// generate 12 backup codes\n\t\tconst codes = [];\n\t\tconst hashedCodes = [];\n\t\tfor (let i = 0; i < 12; i++) {\n\t\t\tconst code = Random.id(8);\n\t\t\tcodes.push(code);\n\t\t\thashedCodes.push(SHA256(code));\n\t\t}\n\n\t\treturn { codes, hashedCodes };\n\t},\n};\n"]},"sourceType":"module","hash":"9fba2e876eabcad08214fc6c71fc69ab4786fa6a"}

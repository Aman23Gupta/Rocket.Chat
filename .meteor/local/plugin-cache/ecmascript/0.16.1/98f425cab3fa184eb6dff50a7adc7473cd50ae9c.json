{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/lib/monitors.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/monitors.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/lib/monitors.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/api/lib/monitors.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/monitors.js"}},"code":"module.export({\n  findMonitors: () => findMonitors,\n  findMonitorByUsername: () => findMonitorByUsername\n});\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 0);\nlet hasPermissionAsync;\nmodule.link(\"../../../../../../app/authorization/server/functions/hasPermission\", {\n  hasPermissionAsync(v) {\n    hasPermissionAsync = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../../../../../app/models/server/raw\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\n\nfunction findMonitors(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      text,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'manage-livechat-monitors'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const query = {};\n\n    if (text) {\n      const filterReg = new RegExp(escapeRegExp(text), 'i');\n      Object.assign(query, {\n        $or: [{\n          username: filterReg\n        }, {\n          name: filterReg\n        }, {\n          'emails.address': filterReg\n        }]\n      });\n    }\n\n    const cursor = Users.findUsersInRolesWithQuery('livechat-monitor', query, {\n      sort: sort || {\n        name: 1\n      },\n      skip: offset,\n      limit: count,\n      projection: {\n        username: 1,\n        name: 1,\n        status: 1,\n        statusLivechat: 1,\n        emails: 1,\n        livechat: 1\n      }\n    });\n    const total = Promise.await(cursor.count());\n    const monitors = Promise.await(cursor.toArray());\n    return {\n      monitors,\n      count: monitors.length,\n      offset,\n      total\n    };\n  });\n}\n\nfunction findMonitorByUsername(_ref2) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      username\n    } = _ref2;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'manage-livechat-monitors'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const user = Promise.await(Users.findOne({\n      username\n    }, {\n      projection: {\n        username: 1,\n        name: 1,\n        status: 1,\n        statusLivechat: 1,\n        emails: 1,\n        livechat: 1\n      }\n    }));\n\n    if (!user || !Promise.await(Users.isUserInRole(user._id, 'livechat-monitor'))) {\n      throw new Error('invalid-user');\n    }\n\n    return user;\n  });\n}","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/api/lib/monitors.js"],"names":["module","export","findMonitors","findMonitorByUsername","escapeRegExp","link","v","hasPermissionAsync","Users","userId","text","pagination","offset","count","sort","Error","query","filterReg","RegExp","Object","assign","$or","username","name","cursor","findUsersInRolesWithQuery","skip","limit","projection","status","statusLivechat","emails","livechat","total","monitors","toArray","length","user","findOne","isUserInRole","_id"],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { hasPermissionAsync } from '../../../../../../app/authorization/server/functions/hasPermission';\nimport { Users } from '../../../../../../app/models/server/raw';\n\nexport async function findMonitors({ userId, text, pagination: { offset, count, sort } }) {\n\tif (!(await hasPermissionAsync(userId, 'manage-livechat-monitors'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst query = {};\n\tif (text) {\n\t\tconst filterReg = new RegExp(escapeRegExp(text), 'i');\n\t\tObject.assign(query, {\n\t\t\t$or: [{ username: filterReg }, { name: filterReg }, { 'emails.address': filterReg }],\n\t\t});\n\t}\n\n\tconst cursor = Users.findUsersInRolesWithQuery('livechat-monitor', query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tstatus: 1,\n\t\t\tstatusLivechat: 1,\n\t\t\temails: 1,\n\t\t\tlivechat: 1,\n\t\t},\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst monitors = await cursor.toArray();\n\n\treturn {\n\t\tmonitors,\n\t\tcount: monitors.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findMonitorByUsername({ userId, username }) {\n\tif (!(await hasPermissionAsync(userId, 'manage-livechat-monitors'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst user = await Users.findOne(\n\t\t{ username },\n\t\t{\n\t\t\tprojection: {\n\t\t\t\tusername: 1,\n\t\t\t\tname: 1,\n\t\t\t\tstatus: 1,\n\t\t\t\tstatusLivechat: 1,\n\t\t\t\temails: 1,\n\t\t\t\tlivechat: 1,\n\t\t\t},\n\t\t},\n\t);\n\n\tif (!user || !(await Users.isUserInRole(user._id, 'livechat-monitor'))) {\n\t\tthrow new Error('invalid-user');\n\t}\n\n\treturn user;\n}\n"]},"sourceType":"module","hash":"98f425cab3fa184eb6dff50a7adc7473cd50ae9c"}

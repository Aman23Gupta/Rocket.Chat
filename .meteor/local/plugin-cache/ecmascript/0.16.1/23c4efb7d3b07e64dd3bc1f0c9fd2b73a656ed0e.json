{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/getUsernameSuggestion.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/getUsernameSuggestion.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/getUsernameSuggestion.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/getUsernameSuggestion.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/getUsernameSuggestion.js"}},"code":"module.export({\n  generateUsernameSuggestion: () => generateUsernameSuggestion\n});\nlet limax;\nmodule.link(\"limax\", {\n  default(v) {\n    limax = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../models\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\n\nfunction slug(text) {\n  return limax(text, {\n    replacement: '.'\n  }).replace(/[^0-9a-z-_.]/g, '');\n}\n\nfunction usernameIsAvaliable(username) {\n  if (username.length === 0) {\n    return false;\n  }\n\n  if (username === 'all') {\n    return false;\n  }\n\n  return !Users.findOneByUsernameIgnoringCase(username);\n}\n\nconst name = username => settings.get('UTF8_Names_Slugify') ? slug(username) : username;\n\nfunction generateUsernameSuggestion(user) {\n  let usernames = [];\n\n  if (user.name) {\n    usernames.push(name(user.name));\n    const nameParts = user.name.split(' ');\n\n    if (nameParts.length > 1) {\n      const [first] = nameParts;\n      const last = nameParts[nameParts.length - 1];\n      usernames.push(name(first[0] + last));\n      usernames.push(name(first + last[0]));\n    }\n  }\n\n  if (user.profile && user.profile.name) {\n    usernames.push(name(user.profile.name));\n  }\n\n  if (Array.isArray(user.services)) {\n    const services = new Set(user.services.flatMap(_ref => {\n      let {\n        name,\n        username,\n        firstName,\n        lastName\n      } = _ref;\n      return [name, username, firstName, lastName];\n    }));\n    usernames.push(...services.map(name));\n  }\n\n  if (user.emails && user.emails.length > 0) {\n    for (const email of user.emails) {\n      if (email.address && email.verified === true) {\n        usernames.push(slug(email.address.replace(/@.+$/, '')));\n        usernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n      }\n    }\n  }\n\n  usernames = usernames.filter(e => e);\n\n  for (const item of usernames) {\n    if (usernameIsAvaliable(item)) {\n      return item;\n    }\n  }\n\n  usernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n  let index = Users.find({\n    username: new RegExp(\"^\".concat(usernames[0], \"-[0-9]+\"))\n  }).count();\n  const username = '';\n\n  while (!username) {\n    if (usernameIsAvaliable(\"\".concat(usernames[0], \"-\").concat(index))) {\n      return \"\".concat(usernames[0], \"-\").concat(index);\n    }\n\n    index++;\n  }\n}","map":{"version":3,"sources":["app/lib/server/functions/getUsernameSuggestion.js"],"names":["module","export","generateUsernameSuggestion","limax","link","default","v","Users","settings","slug","text","replacement","replace","usernameIsAvaliable","username","length","findOneByUsernameIgnoringCase","name","get","user","usernames","push","nameParts","split","first","last","profile","Array","isArray","services","Set","flatMap","firstName","lastName","map","emails","email","address","verified","filter","e","item","index","find","RegExp","count"],"mappings":"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","sourcesContent":["import limax from 'limax';\n\nimport { Users } from '../../../models';\nimport { settings } from '../../../settings';\n\nfunction slug(text) {\n\treturn limax(text, { replacement: '.' }).replace(/[^0-9a-z-_.]/g, '');\n}\n\nfunction usernameIsAvaliable(username) {\n\tif (username.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (username === 'all') {\n\t\treturn false;\n\t}\n\n\treturn !Users.findOneByUsernameIgnoringCase(username);\n}\n\nconst name = (username) => (settings.get('UTF8_Names_Slugify') ? slug(username) : username);\n\nexport function generateUsernameSuggestion(user) {\n\tlet usernames = [];\n\n\tif (user.name) {\n\t\tusernames.push(name(user.name));\n\n\t\tconst nameParts = user.name.split(' ');\n\n\t\tif (nameParts.length > 1) {\n\t\t\tconst [first] = nameParts;\n\t\t\tconst last = nameParts[nameParts.length - 1];\n\t\t\tusernames.push(name(first[0] + last));\n\t\t\tusernames.push(name(first + last[0]));\n\t\t}\n\t}\n\n\tif (user.profile && user.profile.name) {\n\t\tusernames.push(name(user.profile.name));\n\t}\n\n\tif (Array.isArray(user.services)) {\n\t\tconst services = new Set(user.services.flatMap(({ name, username, firstName, lastName }) => [name, username, firstName, lastName]));\n\t\tusernames.push(...services.map(name));\n\t}\n\n\tif (user.emails && user.emails.length > 0) {\n\t\tfor (const email of user.emails) {\n\t\t\tif (email.address && email.verified === true) {\n\t\t\t\tusernames.push(slug(email.address.replace(/@.+$/, '')));\n\t\t\t\tusernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n\t\t\t}\n\t\t}\n\t}\n\n\tusernames = usernames.filter((e) => e);\n\n\tfor (const item of usernames) {\n\t\tif (usernameIsAvaliable(item)) {\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tusernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n\n\tlet index = Users.find({ username: new RegExp(`^${usernames[0]}-[0-9]+`) }).count();\n\tconst username = '';\n\twhile (!username) {\n\t\tif (usernameIsAvaliable(`${usernames[0]}-${index}`)) {\n\t\t\treturn `${usernames[0]}-${index}`;\n\t\t}\n\t\tindex++;\n\t}\n}\n"]},"sourceType":"module","hash":"23c4efb7d3b07e64dd3bc1f0c9fd2b73a656ed0e"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/saveAnalyticsData.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/saveAnalyticsData.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/saveAnalyticsData.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/saveAnalyticsData.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/saveAnalyticsData.js"}},"code":"let callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 0);\nlet LivechatRooms;\nmodule.link(\"../../../models\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 1);\nlet normalizeMessageFileUpload;\nmodule.link(\"../../../utils/server/functions/normalizeMessageFileUpload\", {\n  normalizeMessageFileUpload(v) {\n    normalizeMessageFileUpload = v;\n  }\n\n}, 2);\ncallbacks.add('afterSaveMessage', function (message, room) {\n  // skips this callback if the message was edited\n  if (!message || message.editedAt) {\n    return message;\n  } // check if room is livechat\n\n\n  if (room.t !== 'l') {\n    return message;\n  }\n\n  if (message.file) {\n    message = Promise.await(normalizeMessageFileUpload(message));\n  }\n\n  const now = new Date();\n  let analyticsData; // if the message has a token, it was sent by the visitor\n\n  if (!message.token) {\n    const visitorLastQuery = room.metrics && room.metrics.v ? room.metrics.v.lq : room.ts;\n    const agentLastReply = room.metrics && room.metrics.servedBy ? room.metrics.servedBy.lr : room.ts;\n    const agentJoinTime = room.servedBy && room.servedBy.ts ? room.servedBy.ts : room.ts;\n    const isResponseTt = room.metrics && room.metrics.response && room.metrics.response.tt;\n    const isResponseTotal = room.metrics && room.metrics.response && room.metrics.response.total;\n\n    if (agentLastReply === room.ts) {\n      // first response\n      const firstResponseDate = now;\n      const firstResponseTime = (now.getTime() - visitorLastQuery) / 1000;\n      const responseTime = (now.getTime() - visitorLastQuery) / 1000;\n      const avgResponseTime = ((isResponseTt ? room.metrics.response.tt : 0) + responseTime) / ((isResponseTotal ? room.metrics.response.total : 0) + 1);\n      const firstReactionDate = now;\n      const firstReactionTime = (now.getTime() - agentJoinTime) / 1000;\n      const reactionTime = (now.getTime() - agentJoinTime) / 1000;\n      analyticsData = {\n        firstResponseDate,\n        firstResponseTime,\n        responseTime,\n        avgResponseTime,\n        firstReactionDate,\n        firstReactionTime,\n        reactionTime\n      };\n    } else if (visitorLastQuery > agentLastReply) {\n      // response, not first\n      const responseTime = (now.getTime() - visitorLastQuery) / 1000;\n      const avgResponseTime = ((isResponseTt ? room.metrics.response.tt : 0) + responseTime) / ((isResponseTotal ? room.metrics.response.total : 0) + 1);\n      const reactionTime = (now.getTime() - visitorLastQuery) / 1000;\n      analyticsData = {\n        responseTime,\n        avgResponseTime,\n        reactionTime\n      };\n    } // ignore, its continuing response\n\n  }\n\n  LivechatRooms.saveAnalyticsDataByRoomId(room, message, analyticsData);\n  return message;\n}, callbacks.priority.LOW, 'saveAnalyticsData');","map":{"version":3,"sources":["app/livechat/server/hooks/saveAnalyticsData.js"],"names":["callbacks","module","link","v","LivechatRooms","normalizeMessageFileUpload","add","message","room","editedAt","t","file","Promise","await","now","Date","analyticsData","token","visitorLastQuery","metrics","lq","ts","agentLastReply","servedBy","lr","agentJoinTime","isResponseTt","response","tt","isResponseTotal","total","firstResponseDate","firstResponseTime","getTime","responseTime","avgResponseTime","firstReactionDate","firstReactionTime","reactionTime","saveAnalyticsDataByRoomId","priority","LOW"],"mappings":"AAAA,IAAIA,SAAJ;AAAcC,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACF,EAAAA,SAAS,CAACG,CAAD,EAAG;AAACH,IAAAA,SAAS,GAACG,CAAV;AAAY;;AAA1B,CAAxC,EAAoE,CAApE;AAAuE,IAAIC,aAAJ;AAAkBH,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACE,EAAAA,aAAa,CAACD,CAAD,EAAG;AAACC,IAAAA,aAAa,GAACD,CAAd;AAAgB;;AAAlC,CAA9B,EAAkE,CAAlE;AAAqE,IAAIE,0BAAJ;AAA+BJ,MAAM,CAACC,IAAP,CAAY,4DAAZ,EAAyE;AAACG,EAAAA,0BAA0B,CAACF,CAAD,EAAG;AAACE,IAAAA,0BAA0B,GAACF,CAA3B;AAA6B;;AAA5D,CAAzE,EAAuI,CAAvI;AAI3MH,SAAS,CAACM,GAAV,CACC,kBADD,EAEC,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AACxB;AACA,MAAI,CAACD,OAAD,IAAYA,OAAO,CAACE,QAAxB,EAAkC;AACjC,WAAOF,OAAP;AACA,GAJuB,CAMxB;;;AACA,MAAIC,IAAI,CAACE,CAAL,KAAW,GAAf,EAAoB;AACnB,WAAOH,OAAP;AACA;;AAED,MAAIA,OAAO,CAACI,IAAZ,EAAkB;AACjBJ,IAAAA,OAAO,GAAGK,OAAO,CAACC,KAAR,CAAcR,0BAA0B,CAACE,OAAD,CAAxC,CAAV;AACA;;AAED,QAAMO,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,aAAJ,CAhBwB,CAkBxB;;AACA,MAAI,CAACT,OAAO,CAACU,KAAb,EAAoB;AACnB,UAAMC,gBAAgB,GAAGV,IAAI,CAACW,OAAL,IAAgBX,IAAI,CAACW,OAAL,CAAahB,CAA7B,GAAiCK,IAAI,CAACW,OAAL,CAAahB,CAAb,CAAeiB,EAAhD,GAAqDZ,IAAI,CAACa,EAAnF;AACA,UAAMC,cAAc,GAAGd,IAAI,CAACW,OAAL,IAAgBX,IAAI,CAACW,OAAL,CAAaI,QAA7B,GAAwCf,IAAI,CAACW,OAAL,CAAaI,QAAb,CAAsBC,EAA9D,GAAmEhB,IAAI,CAACa,EAA/F;AACA,UAAMI,aAAa,GAAGjB,IAAI,CAACe,QAAL,IAAiBf,IAAI,CAACe,QAAL,CAAcF,EAA/B,GAAoCb,IAAI,CAACe,QAAL,CAAcF,EAAlD,GAAuDb,IAAI,CAACa,EAAlF;AAEA,UAAMK,YAAY,GAAGlB,IAAI,CAACW,OAAL,IAAgBX,IAAI,CAACW,OAAL,CAAaQ,QAA7B,IAAyCnB,IAAI,CAACW,OAAL,CAAaQ,QAAb,CAAsBC,EAApF;AACA,UAAMC,eAAe,GAAGrB,IAAI,CAACW,OAAL,IAAgBX,IAAI,CAACW,OAAL,CAAaQ,QAA7B,IAAyCnB,IAAI,CAACW,OAAL,CAAaQ,QAAb,CAAsBG,KAAvF;;AAEA,QAAIR,cAAc,KAAKd,IAAI,CAACa,EAA5B,EAAgC;AAC/B;AACA,YAAMU,iBAAiB,GAAGjB,GAA1B;AACA,YAAMkB,iBAAiB,GAAG,CAAClB,GAAG,CAACmB,OAAJ,KAAgBf,gBAAjB,IAAqC,IAA/D;AACA,YAAMgB,YAAY,GAAG,CAACpB,GAAG,CAACmB,OAAJ,KAAgBf,gBAAjB,IAAqC,IAA1D;AACA,YAAMiB,eAAe,GACpB,CAAC,CAACT,YAAY,GAAGlB,IAAI,CAACW,OAAL,CAAaQ,QAAb,CAAsBC,EAAzB,GAA8B,CAA3C,IAAgDM,YAAjD,KAAkE,CAACL,eAAe,GAAGrB,IAAI,CAACW,OAAL,CAAaQ,QAAb,CAAsBG,KAAzB,GAAiC,CAAjD,IAAsD,CAAxH,CADD;AAGA,YAAMM,iBAAiB,GAAGtB,GAA1B;AACA,YAAMuB,iBAAiB,GAAG,CAACvB,GAAG,CAACmB,OAAJ,KAAgBR,aAAjB,IAAkC,IAA5D;AACA,YAAMa,YAAY,GAAG,CAACxB,GAAG,CAACmB,OAAJ,KAAgBR,aAAjB,IAAkC,IAAvD;AAEAT,MAAAA,aAAa,GAAG;AACfe,QAAAA,iBADe;AAEfC,QAAAA,iBAFe;AAGfE,QAAAA,YAHe;AAIfC,QAAAA,eAJe;AAKfC,QAAAA,iBALe;AAMfC,QAAAA,iBANe;AAOfC,QAAAA;AAPe,OAAhB;AASA,KArBD,MAqBO,IAAIpB,gBAAgB,GAAGI,cAAvB,EAAuC;AAC7C;AACA,YAAMY,YAAY,GAAG,CAACpB,GAAG,CAACmB,OAAJ,KAAgBf,gBAAjB,IAAqC,IAA1D;AACA,YAAMiB,eAAe,GACpB,CAAC,CAACT,YAAY,GAAGlB,IAAI,CAACW,OAAL,CAAaQ,QAAb,CAAsBC,EAAzB,GAA8B,CAA3C,IAAgDM,YAAjD,KAAkE,CAACL,eAAe,GAAGrB,IAAI,CAACW,OAAL,CAAaQ,QAAb,CAAsBG,KAAzB,GAAiC,CAAjD,IAAsD,CAAxH,CADD;AAGA,YAAMQ,YAAY,GAAG,CAACxB,GAAG,CAACmB,OAAJ,KAAgBf,gBAAjB,IAAqC,IAA1D;AAEAF,MAAAA,aAAa,GAAG;AACfkB,QAAAA,YADe;AAEfC,QAAAA,eAFe;AAGfG,QAAAA;AAHe,OAAhB;AAKA,KA1CkB,CA0CjB;;AACF;;AAEDlC,EAAAA,aAAa,CAACmC,yBAAd,CAAwC/B,IAAxC,EAA8CD,OAA9C,EAAuDS,aAAvD;AACA,SAAOT,OAAP;AACA,CApEF,EAqECP,SAAS,CAACwC,QAAV,CAAmBC,GArEpB,EAsEC,mBAtED","sourcesContent":["import { callbacks } from '../../../../lib/callbacks';\nimport { LivechatRooms } from '../../../models';\nimport { normalizeMessageFileUpload } from '../../../utils/server/functions/normalizeMessageFileUpload';\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tfunction (message, room) {\n\t\t// skips this callback if the message was edited\n\t\tif (!message || message.editedAt) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// check if room is livechat\n\t\tif (room.t !== 'l') {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (message.file) {\n\t\t\tmessage = Promise.await(normalizeMessageFileUpload(message));\n\t\t}\n\n\t\tconst now = new Date();\n\t\tlet analyticsData;\n\n\t\t// if the message has a token, it was sent by the visitor\n\t\tif (!message.token) {\n\t\t\tconst visitorLastQuery = room.metrics && room.metrics.v ? room.metrics.v.lq : room.ts;\n\t\t\tconst agentLastReply = room.metrics && room.metrics.servedBy ? room.metrics.servedBy.lr : room.ts;\n\t\t\tconst agentJoinTime = room.servedBy && room.servedBy.ts ? room.servedBy.ts : room.ts;\n\n\t\t\tconst isResponseTt = room.metrics && room.metrics.response && room.metrics.response.tt;\n\t\t\tconst isResponseTotal = room.metrics && room.metrics.response && room.metrics.response.total;\n\n\t\t\tif (agentLastReply === room.ts) {\n\t\t\t\t// first response\n\t\t\t\tconst firstResponseDate = now;\n\t\t\t\tconst firstResponseTime = (now.getTime() - visitorLastQuery) / 1000;\n\t\t\t\tconst responseTime = (now.getTime() - visitorLastQuery) / 1000;\n\t\t\t\tconst avgResponseTime =\n\t\t\t\t\t((isResponseTt ? room.metrics.response.tt : 0) + responseTime) / ((isResponseTotal ? room.metrics.response.total : 0) + 1);\n\n\t\t\t\tconst firstReactionDate = now;\n\t\t\t\tconst firstReactionTime = (now.getTime() - agentJoinTime) / 1000;\n\t\t\t\tconst reactionTime = (now.getTime() - agentJoinTime) / 1000;\n\n\t\t\t\tanalyticsData = {\n\t\t\t\t\tfirstResponseDate,\n\t\t\t\t\tfirstResponseTime,\n\t\t\t\t\tresponseTime,\n\t\t\t\t\tavgResponseTime,\n\t\t\t\t\tfirstReactionDate,\n\t\t\t\t\tfirstReactionTime,\n\t\t\t\t\treactionTime,\n\t\t\t\t};\n\t\t\t} else if (visitorLastQuery > agentLastReply) {\n\t\t\t\t// response, not first\n\t\t\t\tconst responseTime = (now.getTime() - visitorLastQuery) / 1000;\n\t\t\t\tconst avgResponseTime =\n\t\t\t\t\t((isResponseTt ? room.metrics.response.tt : 0) + responseTime) / ((isResponseTotal ? room.metrics.response.total : 0) + 1);\n\n\t\t\t\tconst reactionTime = (now.getTime() - visitorLastQuery) / 1000;\n\n\t\t\t\tanalyticsData = {\n\t\t\t\t\tresponseTime,\n\t\t\t\t\tavgResponseTime,\n\t\t\t\t\treactionTime,\n\t\t\t\t};\n\t\t\t} // ignore, its continuing response\n\t\t}\n\n\t\tLivechatRooms.saveAnalyticsDataByRoomId(room, message, analyticsData);\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'saveAnalyticsData',\n);\n"]},"sourceType":"module","hash":"87151b063e6f50e841a89942bd00e19e5d68d8d4"}

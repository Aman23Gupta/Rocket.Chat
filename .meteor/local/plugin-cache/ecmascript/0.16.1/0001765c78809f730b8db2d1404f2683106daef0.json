{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypeConfig.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/utils/lib/RoomTypeConfig.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypeConfig.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypeConfig.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/lib/RoomTypeConfig.js"}},"code":"var _createClass;\n\nmodule.link(\"@babel/runtime/helpers/createClass\", {\n  default: function (v) {\n    _createClass = v;\n  }\n}, 0);\nmodule.export({\n  RoomSettingsEnum: function () {\n    return RoomSettingsEnum;\n  },\n  RoomMemberActions: function () {\n    return RoomMemberActions;\n  },\n  UiTextContext: function () {\n    return UiTextContext;\n  },\n  RoomTypeRouteConfig: function () {\n    return RoomTypeRouteConfig;\n  },\n  RoomTypeConfig: function () {\n    return RoomTypeConfig;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Random;\nmodule.link(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 1);\nvar Users;\nvar settings;\n\nif (Meteor.isServer) {\n  var _require = require('../../settings/server');\n\n  settings = _require.settings;\n  Users = require('../../models/server/models/Users').default;\n} else {\n  var _require2 = require('../../settings/client');\n\n  settings = _require2.settings;\n}\n\nvar RoomSettingsEnum = {\n  TYPE: 'type',\n  NAME: 'roomName',\n  TOPIC: 'roomTopic',\n  ANNOUNCEMENT: 'roomAnnouncement',\n  DESCRIPTION: 'roomDescription',\n  READ_ONLY: 'readOnly',\n  REACT_WHEN_READ_ONLY: 'reactWhenReadOnly',\n  ARCHIVE_OR_UNARCHIVE: 'archiveOrUnarchive',\n  JOIN_CODE: 'joinCode',\n  BROADCAST: 'broadcast',\n  SYSTEM_MESSAGES: 'systemMessages',\n  E2E: 'encrypted'\n};\nvar RoomMemberActions = {\n  ARCHIVE: 'archive',\n  IGNORE: 'ignore',\n  BLOCK: 'block',\n  MUTE: 'mute',\n  SET_AS_OWNER: 'setAsOwner',\n  SET_AS_LEADER: 'setAsLeader',\n  SET_AS_MODERATOR: 'setAsModerator',\n  LEAVE: 'leave',\n  REMOVE_USER: 'removeUser',\n  JOIN: 'join',\n  INVITE: 'invite'\n};\nvar UiTextContext = {\n  CLOSE_WARNING: 'closeWarning',\n  HIDE_WARNING: 'hideWarning',\n  LEAVE_WARNING: 'leaveWarning',\n  NO_ROOMS_SUBSCRIBED: 'noRoomsSubscribed'\n};\n\nvar RoomTypeRouteConfig = /*#__PURE__*/function () {\n  function RoomTypeRouteConfig(_ref) {\n    var name = _ref.name,\n        path = _ref.path;\n\n    if (typeof name !== 'undefined' && (typeof name !== 'string' || name.length === 0)) {\n      throw new Error('The name must be a string.');\n    }\n\n    if (typeof path !== 'undefined' && (typeof path !== 'string' || path.length === 0)) {\n      throw new Error('The path must be a string.');\n    }\n\n    this._name = name;\n    this._path = path;\n  }\n\n  _createClass(RoomTypeRouteConfig, [{\n    key: \"name\",\n    get: function () {\n      return this._name;\n    }\n  }, {\n    key: \"path\",\n    get: function () {\n      return this._path;\n    }\n  }]);\n\n  return RoomTypeRouteConfig;\n}();\n\nvar RoomTypeConfig = /*#__PURE__*/function () {\n  function RoomTypeConfig(_ref2) {\n    var _ref2$identifier = _ref2.identifier,\n        identifier = _ref2$identifier === void 0 ? Random.id() : _ref2$identifier,\n        order = _ref2.order,\n        icon = _ref2.icon,\n        header = _ref2.header,\n        label = _ref2.label,\n        route = _ref2.route;\n\n    if (typeof identifier !== 'string' || identifier.length === 0) {\n      throw new Error('The identifier must be a string.');\n    }\n\n    if (typeof order !== 'number') {\n      throw new Error('The order must be a number.');\n    }\n\n    if (typeof icon !== 'undefined' && (typeof icon !== 'string' || icon.length === 0)) {\n      throw new Error('The icon must be a string.');\n    }\n\n    if (typeof header !== 'undefined' && (typeof header !== 'string' || header.length === 0)) {\n      throw new Error('The header must be a string.');\n    }\n\n    if (typeof label !== 'undefined' && (typeof label !== 'string' || label.length === 0)) {\n      throw new Error('The label must be a string.');\n    }\n\n    if (typeof route !== 'undefined' && !(route instanceof RoomTypeRouteConfig)) {\n      throw new Error('Room\\'s route is not a valid route configuration. Must be an instance of \"RoomTypeRouteConfig\".');\n    }\n\n    this._identifier = identifier;\n    this._order = order;\n    this._icon = icon;\n    this._header = header;\n    this._label = label;\n    this._route = route;\n  }\n  /**\n   * The room type's internal identifier.\n   */\n\n\n  var _proto = RoomTypeConfig.prototype;\n\n  _proto.allowRoomSettingChange = function () {\n    function allowRoomSettingChange() {\n      return true;\n    }\n\n    return allowRoomSettingChange;\n  }();\n\n  _proto.allowMemberAction = function () {\n    function allowMemberAction() {\n      return false;\n    }\n\n    return allowMemberAction;\n  }()\n  /**\n   * Return a room's name\n   *\n   * @abstract\n   * @return {string} Room's name according to it's type\n   */\n  ;\n\n  _proto.roomName = function () {\n    function roomName() {\n      return '';\n    }\n\n    return roomName;\n  }();\n\n  _proto.canBeCreated = function () {\n    function canBeCreated(hasPermission) {\n      if (!hasPermission && typeof hasPermission !== 'function') {\n        throw new Error('You MUST provide the \"hasPermission\" to canBeCreated function');\n      }\n\n      return Meteor.isServer ? hasPermission(Meteor.userId(), \"create-\" + this._identifier) : hasPermission([\"create-\" + this._identifier]);\n    }\n\n    return canBeCreated;\n  }();\n\n  _proto.canBeDeleted = function () {\n    function canBeDeleted(hasPermission, room) {\n      if (!hasPermission && typeof hasPermission !== 'function') {\n        throw new Error('You MUST provide the \"hasPermission\" to canBeDeleted function');\n      }\n\n      return Meteor.isServer ? hasPermission(Meteor.userId(), \"delete-\" + room.t, room._id) : hasPermission(\"delete-\" + room.t, room._id);\n    }\n\n    return canBeDeleted;\n  }();\n\n  _proto.supportMembersList = function () {\n    function supportMembersList() {\n      return true;\n    }\n\n    return supportMembersList;\n  }();\n\n  _proto.isGroupChat = function () {\n    function isGroupChat() {\n      return false;\n    }\n\n    return isGroupChat;\n  }();\n\n  _proto.canAddUser = function () {\n    function canAddUser() {\n      return false;\n    }\n\n    return canAddUser;\n  }();\n\n  _proto.userDetailShowAll = function () {\n    function userDetailShowAll() {\n      return true;\n    }\n\n    return userDetailShowAll;\n  }();\n\n  _proto.userDetailShowAdmin = function () {\n    function userDetailShowAdmin() {\n      return true;\n    }\n\n    return userDetailShowAdmin;\n  }();\n\n  _proto.preventRenaming = function () {\n    function preventRenaming() {\n      return false;\n    }\n\n    return preventRenaming;\n  }();\n\n  _proto.includeInRoomSearch = function () {\n    function includeInRoomSearch() {\n      return false;\n    }\n\n    return includeInRoomSearch;\n  }();\n\n  _proto.enableMembersListProfile = function () {\n    function enableMembersListProfile() {\n      return false;\n    }\n\n    return enableMembersListProfile;\n  }()\n  /**\n   * Returns a text which can be used in generic UIs.\n   * @param context The role of the text in the UI-Element\n   * @return {string} A text or a translation key - the consumers of this method will pass the\n   * returned value to an internationalization library\n   */\n  ;\n\n  _proto.getUiText = function () {\n    function getUiText() {\n      return '';\n    }\n\n    return getUiText;\n  }()\n  /**\n   * Returns the full object of message sender\n   * @param {string} senderId Sender's _id\n   * @return {object} Sender's object from db\n   */\n  ;\n\n  _proto.getMsgSender = function () {\n    function getMsgSender(senderId) {\n      if (Meteor.isServer && Users) {\n        return Users.findOneById(senderId);\n      }\n\n      return {};\n    }\n\n    return getMsgSender;\n  }()\n  /**\n   * Returns details to use on notifications\n   *\n   * @param {object} room\n   * @param {object} user\n   * @param {string} notificationMessage\n   * @return {object} Notification details\n   */\n  ;\n\n  _proto.getNotificationDetails = function () {\n    function getNotificationDetails(room, user, notificationMessage) {\n      if (!Meteor.isServer) {\n        return {};\n      }\n\n      var title = \"#\" + this.roomName(room);\n      var text = (settings.get('UI_Use_Real_Name') ? user.name : user.username) + \": \" + notificationMessage;\n      return {\n        title: title,\n        text: text\n      };\n    }\n\n    return getNotificationDetails;\n  }()\n  /**\n   * Check if there is an user with the same id and loginToken\n   * @param {object} allowData\n   * @return {object} User's object from db\n   */\n  ;\n\n  _proto.canAccessUploadedFile = function () {\n    function canAccessUploadedFile() {\n      return false;\n    }\n\n    return canAccessUploadedFile;\n  }();\n\n  _proto.getReadReceiptsExtraData = function () {\n    function getReadReceiptsExtraData() {\n      return {};\n    }\n\n    return getReadReceiptsExtraData;\n  }();\n\n  _proto.getAvatarPath = function () {\n    function getAvatarPath() {\n      return '';\n    }\n\n    return getAvatarPath;\n  }();\n\n  _proto.openCustomProfileTab = function () {\n    function openCustomProfileTab() {\n      return false;\n    }\n\n    return openCustomProfileTab;\n  }();\n\n  _proto.getDiscussionType = function () {\n    function getDiscussionType() {\n      return 'p';\n    }\n\n    return getDiscussionType;\n  }();\n\n  _createClass(RoomTypeConfig, [{\n    key: \"identifier\",\n    get: function () {\n      return this._identifier;\n    }\n    /**\n     * The order of this room type for the display.\n     */\n\n  }, {\n    key: \"order\",\n    get: function () {\n      return this._order;\n    }\n    /**\n     * Sets the order of this room type for the display.\n     *\n     * @param {number} order the number value for the order\n     */\n    ,\n    set: function (order) {\n      if (typeof order !== 'number') {\n        throw new Error('The order must be a number.');\n      }\n\n      this._order = order;\n    }\n    /**\n     * The icon class, css, to use as the visual aid.\n     */\n\n  }, {\n    key: \"icon\",\n    get: function () {\n      return this._icon;\n    }\n    /**\n     * The header name of this type.\n     */\n\n  }, {\n    key: \"header\",\n    get: function () {\n      return this._header;\n    }\n    /**\n     * The i18n label for this room type.\n     */\n\n  }, {\n    key: \"label\",\n    get: function () {\n      return this._label;\n    }\n    /**\n     * The route config for this room type.\n     */\n\n  }, {\n    key: \"route\",\n    get: function () {\n      return this._route;\n    }\n  }]);\n\n  return RoomTypeConfig;\n}();","map":{"version":3,"sources":["app/utils/lib/RoomTypeConfig.js"],"names":["_createClass","module","link","default","v","export","RoomSettingsEnum","RoomMemberActions","UiTextContext","RoomTypeRouteConfig","RoomTypeConfig","Meteor","Random","Users","settings","isServer","require","TYPE","NAME","TOPIC","ANNOUNCEMENT","DESCRIPTION","READ_ONLY","REACT_WHEN_READ_ONLY","ARCHIVE_OR_UNARCHIVE","JOIN_CODE","BROADCAST","SYSTEM_MESSAGES","E2E","ARCHIVE","IGNORE","BLOCK","MUTE","SET_AS_OWNER","SET_AS_LEADER","SET_AS_MODERATOR","LEAVE","REMOVE_USER","JOIN","INVITE","CLOSE_WARNING","HIDE_WARNING","LEAVE_WARNING","NO_ROOMS_SUBSCRIBED","name","path","length","Error","_name","_path","identifier","id","order","icon","header","label","route","_identifier","_order","_icon","_header","_label","_route","allowRoomSettingChange","allowMemberAction","roomName","canBeCreated","hasPermission","userId","canBeDeleted","room","t","_id","supportMembersList","isGroupChat","canAddUser","userDetailShowAll","userDetailShowAdmin","preventRenaming","includeInRoomSearch","enableMembersListProfile","getUiText","getMsgSender","senderId","findOneById","getNotificationDetails","user","notificationMessage","title","text","get","username","canAccessUploadedFile","getReadReceiptsExtraData","getAvatarPath","openCustomProfileTab","getDiscussionType"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nlet Users;\nlet settings;\nif (Meteor.isServer) {\n\t({ settings } = require('../../settings/server'));\n\tUsers = require('../../models/server/models/Users').default;\n} else {\n\t({ settings } = require('../../settings/client'));\n}\n\nexport const RoomSettingsEnum = {\n\tTYPE: 'type',\n\tNAME: 'roomName',\n\tTOPIC: 'roomTopic',\n\tANNOUNCEMENT: 'roomAnnouncement',\n\tDESCRIPTION: 'roomDescription',\n\tREAD_ONLY: 'readOnly',\n\tREACT_WHEN_READ_ONLY: 'reactWhenReadOnly',\n\tARCHIVE_OR_UNARCHIVE: 'archiveOrUnarchive',\n\tJOIN_CODE: 'joinCode',\n\tBROADCAST: 'broadcast',\n\tSYSTEM_MESSAGES: 'systemMessages',\n\tE2E: 'encrypted',\n};\n\nexport const RoomMemberActions = {\n\tARCHIVE: 'archive',\n\tIGNORE: 'ignore',\n\tBLOCK: 'block',\n\tMUTE: 'mute',\n\tSET_AS_OWNER: 'setAsOwner',\n\tSET_AS_LEADER: 'setAsLeader',\n\tSET_AS_MODERATOR: 'setAsModerator',\n\tLEAVE: 'leave',\n\tREMOVE_USER: 'removeUser',\n\tJOIN: 'join',\n\tINVITE: 'invite',\n};\n\nexport const UiTextContext = {\n\tCLOSE_WARNING: 'closeWarning',\n\tHIDE_WARNING: 'hideWarning',\n\tLEAVE_WARNING: 'leaveWarning',\n\tNO_ROOMS_SUBSCRIBED: 'noRoomsSubscribed',\n};\n\nexport class RoomTypeRouteConfig {\n\tconstructor({ name, path }) {\n\t\tif (typeof name !== 'undefined' && (typeof name !== 'string' || name.length === 0)) {\n\t\t\tthrow new Error('The name must be a string.');\n\t\t}\n\n\t\tif (typeof path !== 'undefined' && (typeof path !== 'string' || path.length === 0)) {\n\t\t\tthrow new Error('The path must be a string.');\n\t\t}\n\n\t\tthis._name = name;\n\t\tthis._path = path;\n\t}\n\n\tget name() {\n\t\treturn this._name;\n\t}\n\n\tget path() {\n\t\treturn this._path;\n\t}\n}\n\nexport class RoomTypeConfig {\n\tconstructor({ identifier = Random.id(), order, icon, header, label, route }) {\n\t\tif (typeof identifier !== 'string' || identifier.length === 0) {\n\t\t\tthrow new Error('The identifier must be a string.');\n\t\t}\n\n\t\tif (typeof order !== 'number') {\n\t\t\tthrow new Error('The order must be a number.');\n\t\t}\n\n\t\tif (typeof icon !== 'undefined' && (typeof icon !== 'string' || icon.length === 0)) {\n\t\t\tthrow new Error('The icon must be a string.');\n\t\t}\n\n\t\tif (typeof header !== 'undefined' && (typeof header !== 'string' || header.length === 0)) {\n\t\t\tthrow new Error('The header must be a string.');\n\t\t}\n\n\t\tif (typeof label !== 'undefined' && (typeof label !== 'string' || label.length === 0)) {\n\t\t\tthrow new Error('The label must be a string.');\n\t\t}\n\n\t\tif (typeof route !== 'undefined' && !(route instanceof RoomTypeRouteConfig)) {\n\t\t\tthrow new Error('Room\\'s route is not a valid route configuration. Must be an instance of \"RoomTypeRouteConfig\".');\n\t\t}\n\n\t\tthis._identifier = identifier;\n\t\tthis._order = order;\n\t\tthis._icon = icon;\n\t\tthis._header = header;\n\t\tthis._label = label;\n\t\tthis._route = route;\n\t}\n\n\t/**\n\t * The room type's internal identifier.\n\t */\n\tget identifier() {\n\t\treturn this._identifier;\n\t}\n\n\t/**\n\t * The order of this room type for the display.\n\t */\n\tget order() {\n\t\treturn this._order;\n\t}\n\n\t/**\n\t * Sets the order of this room type for the display.\n\t *\n\t * @param {number} order the number value for the order\n\t */\n\tset order(order) {\n\t\tif (typeof order !== 'number') {\n\t\t\tthrow new Error('The order must be a number.');\n\t\t}\n\n\t\tthis._order = order;\n\t}\n\n\t/**\n\t * The icon class, css, to use as the visual aid.\n\t */\n\tget icon() {\n\t\treturn this._icon;\n\t}\n\n\t/**\n\t * The header name of this type.\n\t */\n\tget header() {\n\t\treturn this._header;\n\t}\n\n\t/**\n\t * The i18n label for this room type.\n\t */\n\tget label() {\n\t\treturn this._label;\n\t}\n\n\t/**\n\t * The route config for this room type.\n\t */\n\tget route() {\n\t\treturn this._route;\n\t}\n\n\tallowRoomSettingChange(/* room, setting */) {\n\t\treturn true;\n\t}\n\n\tallowMemberAction(/* room, action */) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Return a room's name\n\t *\n\t * @abstract\n\t * @return {string} Room's name according to it's type\n\t */\n\troomName(/* room */) {\n\t\treturn '';\n\t}\n\n\tcanBeCreated(hasPermission) {\n\t\tif (!hasPermission && typeof hasPermission !== 'function') {\n\t\t\tthrow new Error('You MUST provide the \"hasPermission\" to canBeCreated function');\n\t\t}\n\t\treturn Meteor.isServer ? hasPermission(Meteor.userId(), `create-${this._identifier}`) : hasPermission([`create-${this._identifier}`]);\n\t}\n\n\tcanBeDeleted(hasPermission, room) {\n\t\tif (!hasPermission && typeof hasPermission !== 'function') {\n\t\t\tthrow new Error('You MUST provide the \"hasPermission\" to canBeDeleted function');\n\t\t}\n\t\treturn Meteor.isServer ? hasPermission(Meteor.userId(), `delete-${room.t}`, room._id) : hasPermission(`delete-${room.t}`, room._id);\n\t}\n\n\tsupportMembersList(/* room */) {\n\t\treturn true;\n\t}\n\n\tisGroupChat() {\n\t\treturn false;\n\t}\n\n\tcanAddUser(/* userId, room */) {\n\t\treturn false;\n\t}\n\n\tuserDetailShowAll(/* room */) {\n\t\treturn true;\n\t}\n\n\tuserDetailShowAdmin(/* room */) {\n\t\treturn true;\n\t}\n\n\tpreventRenaming(/* room */) {\n\t\treturn false;\n\t}\n\n\tincludeInRoomSearch() {\n\t\treturn false;\n\t}\n\n\tenableMembersListProfile() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a text which can be used in generic UIs.\n\t * @param context The role of the text in the UI-Element\n\t * @return {string} A text or a translation key - the consumers of this method will pass the\n\t * returned value to an internationalization library\n\t */\n\tgetUiText(/* context */) {\n\t\treturn '';\n\t}\n\n\t/**\n\t * Returns the full object of message sender\n\t * @param {string} senderId Sender's _id\n\t * @return {object} Sender's object from db\n\t */\n\tgetMsgSender(senderId) {\n\t\tif (Meteor.isServer && Users) {\n\t\t\treturn Users.findOneById(senderId);\n\t\t}\n\t\treturn {};\n\t}\n\n\t/**\n\t * Returns details to use on notifications\n\t *\n\t * @param {object} room\n\t * @param {object} user\n\t * @param {string} notificationMessage\n\t * @return {object} Notification details\n\t */\n\tgetNotificationDetails(room, user, notificationMessage) {\n\t\tif (!Meteor.isServer) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst title = `#${this.roomName(room)}`;\n\n\t\tconst text = `${settings.get('UI_Use_Real_Name') ? user.name : user.username}: ${notificationMessage}`;\n\n\t\treturn { title, text };\n\t}\n\n\t/**\n\t * Check if there is an user with the same id and loginToken\n\t * @param {object} allowData\n\t * @return {object} User's object from db\n\t */\n\tcanAccessUploadedFile(/* accessData */) {\n\t\treturn false;\n\t}\n\n\tgetReadReceiptsExtraData(/* message */) {\n\t\treturn {};\n\t}\n\n\tgetAvatarPath(/* roomData */) {\n\t\treturn '';\n\t}\n\n\topenCustomProfileTab() {\n\t\treturn false;\n\t}\n\n\tgetDiscussionType() {\n\t\treturn 'p';\n\t}\n}\n"]},"sourceType":"module","hash":"0001765c78809f730b8db2d1404f2683106daef0"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/integrations/server/methods/outgoing/updateOutgoingIntegration.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/integrations/server/methods/outgoing/updateOutgoingIntegration.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/integrations/server/methods/outgoing/updateOutgoingIntegration.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/integrations/server/methods/outgoing/updateOutgoingIntegration.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/integrations/server/methods/outgoing/updateOutgoingIntegration.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet hasPermission;\nmodule.link(\"../../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet Integrations;\nmodule.link(\"../../../../models/server/raw\", {\n  Integrations(v) {\n    Integrations = v;\n  }\n\n}, 3);\nlet integrations;\nmodule.link(\"../../../lib/rocketchat\", {\n  integrations(v) {\n    integrations = v;\n  }\n\n}, 4);\nMeteor.methods({\n  updateOutgoingIntegration(integrationId, integration) {\n    return Promise.asyncApply(() => {\n      integration = integrations.validateOutgoing(integration, this.userId);\n\n      if (!integration.token || integration.token.trim() === '') {\n        throw new Meteor.Error('error-invalid-token', 'Invalid token', {\n          method: 'updateOutgoingIntegration'\n        });\n      }\n\n      let currentIntegration;\n\n      if (hasPermission(this.userId, 'manage-outgoing-integrations')) {\n        currentIntegration = Promise.await(Integrations.findOneById(integrationId));\n      } else if (hasPermission(this.userId, 'manage-own-outgoing-integrations')) {\n        currentIntegration = Promise.await(Integrations.findOne({\n          '_id': integrationId,\n          '_createdBy._id': this.userId\n        }));\n      } else {\n        throw new Meteor.Error('not_authorized', 'Unauthorized', {\n          method: 'updateOutgoingIntegration'\n        });\n      }\n\n      if (!currentIntegration) {\n        throw new Meteor.Error('invalid_integration', '[methods] updateOutgoingIntegration -> integration not found');\n      }\n\n      if (integration.scriptCompiled) {\n        Promise.await(Integrations.updateOne({\n          _id: integrationId\n        }, {\n          $set: {\n            scriptCompiled: integration.scriptCompiled\n          },\n          $unset: {\n            scriptError: 1\n          }\n        }));\n      } else {\n        Promise.await(Integrations.updateOne({\n          _id: integrationId\n        }, {\n          $set: {\n            scriptError: integration.scriptError\n          },\n          $unset: {\n            scriptCompiled: 1\n          }\n        }));\n      }\n\n      Promise.await(Integrations.updateOne({\n        _id: integrationId\n      }, {\n        $set: {\n          event: integration.event,\n          enabled: integration.enabled,\n          name: integration.name,\n          avatar: integration.avatar,\n          emoji: integration.emoji,\n          alias: integration.alias,\n          channel: integration.channel,\n          targetRoom: integration.targetRoom,\n          impersonateUser: integration.impersonateUser,\n          username: integration.username,\n          userId: integration.userId,\n          urls: integration.urls,\n          token: integration.token,\n          script: integration.script,\n          scriptEnabled: integration.scriptEnabled,\n          triggerWords: integration.triggerWords,\n          retryFailedCalls: integration.retryFailedCalls,\n          retryCount: integration.retryCount,\n          retryDelay: integration.retryDelay,\n          triggerWordAnywhere: integration.triggerWordAnywhere,\n          runOnEdits: integration.runOnEdits,\n          _updatedAt: new Date(),\n          _updatedBy: Users.findOne(this.userId, {\n            fields: {\n              username: 1\n            }\n          })\n        }\n      }));\n      return Integrations.findOneById(integrationId);\n    });\n  }\n\n});","map":{"version":3,"sources":["app/integrations/server/methods/outgoing/updateOutgoingIntegration.js"],"names":["Meteor","module","link","v","hasPermission","Users","Integrations","integrations","methods","updateOutgoingIntegration","integrationId","integration","validateOutgoing","userId","token","trim","Error","method","currentIntegration","findOneById","findOne","scriptCompiled","updateOne","_id","$set","$unset","scriptError","event","enabled","name","avatar","emoji","alias","channel","targetRoom","impersonateUser","username","urls","script","scriptEnabled","triggerWords","retryFailedCalls","retryCount","retryDelay","triggerWordAnywhere","runOnEdits","_updatedAt","Date","_updatedBy","fields"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { hasPermission } from '../../../../authorization/server';\nimport { Users } from '../../../../models/server';\nimport { Integrations } from '../../../../models/server/raw';\nimport { integrations } from '../../../lib/rocketchat';\n\nMeteor.methods({\n\tasync updateOutgoingIntegration(integrationId, integration) {\n\t\tintegration = integrations.validateOutgoing(integration, this.userId);\n\n\t\tif (!integration.token || integration.token.trim() === '') {\n\t\t\tthrow new Meteor.Error('error-invalid-token', 'Invalid token', {\n\t\t\t\tmethod: 'updateOutgoingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tlet currentIntegration;\n\n\t\tif (hasPermission(this.userId, 'manage-outgoing-integrations')) {\n\t\t\tcurrentIntegration = await Integrations.findOneById(integrationId);\n\t\t} else if (hasPermission(this.userId, 'manage-own-outgoing-integrations')) {\n\t\t\tcurrentIntegration = await Integrations.findOne({\n\t\t\t\t'_id': integrationId,\n\t\t\t\t'_createdBy._id': this.userId,\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Meteor.Error('not_authorized', 'Unauthorized', {\n\t\t\t\tmethod: 'updateOutgoingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (!currentIntegration) {\n\t\t\tthrow new Meteor.Error('invalid_integration', '[methods] updateOutgoingIntegration -> integration not found');\n\t\t}\n\t\tif (integration.scriptCompiled) {\n\t\t\tawait Integrations.updateOne(\n\t\t\t\t{ _id: integrationId },\n\t\t\t\t{\n\t\t\t\t\t$set: { scriptCompiled: integration.scriptCompiled },\n\t\t\t\t\t$unset: { scriptError: 1 },\n\t\t\t\t},\n\t\t\t);\n\t\t} else {\n\t\t\tawait Integrations.updateOne(\n\t\t\t\t{ _id: integrationId },\n\t\t\t\t{\n\t\t\t\t\t$set: { scriptError: integration.scriptError },\n\t\t\t\t\t$unset: { scriptCompiled: 1 },\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tawait Integrations.updateOne(\n\t\t\t{ _id: integrationId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tevent: integration.event,\n\t\t\t\t\tenabled: integration.enabled,\n\t\t\t\t\tname: integration.name,\n\t\t\t\t\tavatar: integration.avatar,\n\t\t\t\t\temoji: integration.emoji,\n\t\t\t\t\talias: integration.alias,\n\t\t\t\t\tchannel: integration.channel,\n\t\t\t\t\ttargetRoom: integration.targetRoom,\n\t\t\t\t\timpersonateUser: integration.impersonateUser,\n\t\t\t\t\tusername: integration.username,\n\t\t\t\t\tuserId: integration.userId,\n\t\t\t\t\turls: integration.urls,\n\t\t\t\t\ttoken: integration.token,\n\t\t\t\t\tscript: integration.script,\n\t\t\t\t\tscriptEnabled: integration.scriptEnabled,\n\t\t\t\t\ttriggerWords: integration.triggerWords,\n\t\t\t\t\tretryFailedCalls: integration.retryFailedCalls,\n\t\t\t\t\tretryCount: integration.retryCount,\n\t\t\t\t\tretryDelay: integration.retryDelay,\n\t\t\t\t\ttriggerWordAnywhere: integration.triggerWordAnywhere,\n\t\t\t\t\trunOnEdits: integration.runOnEdits,\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_updatedBy: Users.findOne(this.userId, { fields: { username: 1 } }),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn Integrations.findOneById(integrationId);\n\t},\n});\n"]},"sourceType":"module","hash":"2d96c909fa2efb3a303c838aa316b9f326506ef5"}

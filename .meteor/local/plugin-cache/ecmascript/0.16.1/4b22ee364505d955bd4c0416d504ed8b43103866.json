{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/irc-bridge/peerHandlers/userRegistered.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/irc/server/irc-bridge/peerHandlers/userRegistered.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/irc-bridge/peerHandlers/userRegistered.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/irc/server/irc-bridge/peerHandlers/userRegistered.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/irc/server/irc-bridge/peerHandlers/userRegistered.js"}},"code":"module.export({\n  default: () => handleUserRegistered\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../../models\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\n\nfunction handleUserRegistered(args) {\n  return Promise.asyncApply(() => {\n    // Check if there is an user with the given username\n    let user = Users.findOne({\n      'profile.irc.username': args.username\n    }); // If there is no user, create one...\n\n    if (!user) {\n      this.log(\"Registering \".concat(args.username, \" with nick: \").concat(args.nick));\n      const userToInsert = {\n        name: args.nick,\n        username: \"\".concat(args.username, \"-irc\"),\n        status: 'online',\n        utcOffset: 0,\n        active: true,\n        type: 'user',\n        profile: {\n          irc: {\n            fromIRC: true,\n            nick: args.nick,\n            username: args.username,\n            hostname: args.hostname\n          }\n        }\n      };\n      user = Users.create(userToInsert);\n    } else {\n      // ...otherwise, log the user in and update the information\n      this.log(\"Logging in \".concat(args.username, \" with nick: \").concat(args.nick));\n      Meteor.users.update({\n        _id: user._id\n      }, {\n        $set: {\n          'status': 'online',\n          'profile.irc.nick': args.nick,\n          'profile.irc.username': args.username,\n          'profile.irc.hostname': args.hostname\n        }\n      });\n    }\n  });\n}","map":{"version":3,"sources":["app/irc/server/irc-bridge/peerHandlers/userRegistered.js"],"names":["module","export","default","handleUserRegistered","Meteor","link","v","Users","args","user","findOne","username","log","nick","userToInsert","name","status","utcOffset","active","type","profile","irc","fromIRC","hostname","create","users","update","_id","$set"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAAkD,IAAIC,MAAJ;AAAWJ,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAM,CAACE,CAAD,EAAG;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,KAAJ;AAAUP,MAAM,CAACK,IAAP,CAAY,oBAAZ,EAAiC;AAACE,EAAAA,KAAK,CAACD,CAAD,EAAG;AAACC,IAAAA,KAAK,GAACD,CAAN;AAAQ;;AAAlB,CAAjC,EAAqD,CAArD;;AAI7G,SAAeH,oBAAf,CAAoCK,IAApC;AAAA,kCAA0C;AACxD;AACA,QAAIC,IAAI,GAAGF,KAAK,CAACG,OAAN,CAAc;AACxB,8BAAwBF,IAAI,CAACG;AADL,KAAd,CAAX,CAFwD,CAMxD;;AACA,QAAI,CAACF,IAAL,EAAW;AACV,WAAKG,GAAL,uBAAwBJ,IAAI,CAACG,QAA7B,yBAAoDH,IAAI,CAACK,IAAzD;AAEA,YAAMC,YAAY,GAAG;AACpBC,QAAAA,IAAI,EAAEP,IAAI,CAACK,IADS;AAEpBF,QAAAA,QAAQ,YAAKH,IAAI,CAACG,QAAV,SAFY;AAGpBK,QAAAA,MAAM,EAAE,QAHY;AAIpBC,QAAAA,SAAS,EAAE,CAJS;AAKpBC,QAAAA,MAAM,EAAE,IALY;AAMpBC,QAAAA,IAAI,EAAE,MANc;AAOpBC,QAAAA,OAAO,EAAE;AACRC,UAAAA,GAAG,EAAE;AACJC,YAAAA,OAAO,EAAE,IADL;AAEJT,YAAAA,IAAI,EAAEL,IAAI,CAACK,IAFP;AAGJF,YAAAA,QAAQ,EAAEH,IAAI,CAACG,QAHX;AAIJY,YAAAA,QAAQ,EAAEf,IAAI,CAACe;AAJX;AADG;AAPW,OAArB;AAiBAd,MAAAA,IAAI,GAAGF,KAAK,CAACiB,MAAN,CAAaV,YAAb,CAAP;AACA,KArBD,MAqBO;AACN;AACA,WAAKF,GAAL,sBAAuBJ,IAAI,CAACG,QAA5B,yBAAmDH,IAAI,CAACK,IAAxD;AAEAT,MAAAA,MAAM,CAACqB,KAAP,CAAaC,MAAb,CACC;AAAEC,QAAAA,GAAG,EAAElB,IAAI,CAACkB;AAAZ,OADD,EAEC;AACCC,QAAAA,IAAI,EAAE;AACL,oBAAU,QADL;AAEL,8BAAoBpB,IAAI,CAACK,IAFpB;AAGL,kCAAwBL,IAAI,CAACG,QAHxB;AAIL,kCAAwBH,IAAI,CAACe;AAJxB;AADP,OAFD;AAWA;AACD,GA5Cc;AAAA","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Users } from '../../../../models';\n\nexport default async function handleUserRegistered(args) {\n\t// Check if there is an user with the given username\n\tlet user = Users.findOne({\n\t\t'profile.irc.username': args.username,\n\t});\n\n\t// If there is no user, create one...\n\tif (!user) {\n\t\tthis.log(`Registering ${args.username} with nick: ${args.nick}`);\n\n\t\tconst userToInsert = {\n\t\t\tname: args.nick,\n\t\t\tusername: `${args.username}-irc`,\n\t\t\tstatus: 'online',\n\t\t\tutcOffset: 0,\n\t\t\tactive: true,\n\t\t\ttype: 'user',\n\t\t\tprofile: {\n\t\t\t\tirc: {\n\t\t\t\t\tfromIRC: true,\n\t\t\t\t\tnick: args.nick,\n\t\t\t\t\tusername: args.username,\n\t\t\t\t\thostname: args.hostname,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tuser = Users.create(userToInsert);\n\t} else {\n\t\t// ...otherwise, log the user in and update the information\n\t\tthis.log(`Logging in ${args.username} with nick: ${args.nick}`);\n\n\t\tMeteor.users.update(\n\t\t\t{ _id: user._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'status': 'online',\n\t\t\t\t\t'profile.irc.nick': args.nick,\n\t\t\t\t\t'profile.irc.username': args.username,\n\t\t\t\t\t'profile.irc.hostname': args.hostname,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"]},"sourceType":"module","hash":"4b22ee364505d955bd4c0416d504ed8b43103866"}

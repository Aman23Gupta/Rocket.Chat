{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/blockstack/server/settings.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/blockstack/server/settings.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/blockstack/server/settings.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/blockstack/server/settings.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/blockstack/server/settings.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ServiceConfiguration;\nmodule.link(\"meteor/service-configuration\", {\n  ServiceConfiguration(v) {\n    ServiceConfiguration = v;\n  }\n\n}, 1);\nlet logger;\nmodule.link(\"./logger\", {\n  logger(v) {\n    logger = v;\n  }\n\n}, 2);\nlet settings, settingsRegistry;\nmodule.link(\"../../settings/server\", {\n  settings(v) {\n    settings = v;\n  },\n\n  settingsRegistry(v) {\n    settingsRegistry = v;\n  }\n\n}, 3);\nconst defaults = {\n  enable: false,\n  loginStyle: 'redirect',\n  generateUsername: false,\n  manifestURI: Meteor.absoluteUrl('_blockstack/manifest'),\n  redirectURI: Meteor.absoluteUrl('_blockstack/validate'),\n  authDescription: 'Rocket.Chat login',\n  buttonLabelText: 'Blockstack',\n  buttonColor: '#271132',\n  buttonLabelColor: '#ffffff'\n};\nMeteor.startup(() => {\n  settingsRegistry.addGroup('Blockstack', function () {\n    this.add('Blockstack_Enable', defaults.enable, {\n      type: 'boolean',\n      i18nLabel: 'Enable'\n    });\n    this.add('Blockstack_Auth_Description', defaults.authDescription, {\n      type: 'string'\n    });\n    this.add('Blockstack_ButtonLabelText', defaults.buttonLabelText, {\n      type: 'string'\n    });\n    this.add('Blockstack_Generate_Username', defaults.generateUsername, {\n      type: 'boolean'\n    });\n  });\n}); // Helper to return all Blockstack settings\n\nconst getSettings = () => Object.assign({}, defaults, {\n  enable: settings.get('Blockstack_Enable'),\n  authDescription: settings.get('Blockstack_Auth_Description'),\n  buttonLabelText: settings.get('Blockstack_ButtonLabelText'),\n  generateUsername: settings.get('Blockstack_Generate_Username')\n}); // Add settings to auth provider configs on startup\n\n\nsettings.watchMultiple(['Blockstack_Enable', 'Blockstack_Auth_Description', 'Blockstack_ButtonLabelText', 'Blockstack_Generate_Username'], () => {\n  const serviceConfig = getSettings();\n\n  if (!serviceConfig.enable) {\n    logger.debug('Blockstack not enabled', serviceConfig);\n    return ServiceConfiguration.configurations.remove({\n      service: 'blockstack'\n    });\n  }\n\n  ServiceConfiguration.configurations.upsert({\n    service: 'blockstack'\n  }, {\n    $set: serviceConfig\n  });\n  logger.debug('Init Blockstack auth', serviceConfig);\n});","map":{"version":3,"sources":["app/blockstack/server/settings.js"],"names":["Meteor","module","link","v","ServiceConfiguration","logger","settings","settingsRegistry","defaults","enable","loginStyle","generateUsername","manifestURI","absoluteUrl","redirectURI","authDescription","buttonLabelText","buttonColor","buttonLabelColor","startup","addGroup","add","type","i18nLabel","getSettings","Object","assign","get","watchMultiple","serviceConfig","debug","configurations","remove","service","upsert","$set"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,oBAAJ;AAAyBH,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACE,EAAAA,oBAAoB,CAACD,CAAD,EAAG;AAACC,IAAAA,oBAAoB,GAACD,CAArB;AAAuB;;AAAhD,CAA3C,EAA6F,CAA7F;AAAgG,IAAIE,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAuB;AAACG,EAAAA,MAAM,CAACF,CAAD,EAAG;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS;;AAApB,CAAvB,EAA6C,CAA7C;AAAgD,IAAIG,QAAJ,EAAaC,gBAAb;AAA8BN,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACI,EAAAA,QAAQ,CAACH,CAAD,EAAG;AAACG,IAAAA,QAAQ,GAACH,CAAT;AAAW,GAAxB;;AAAyBI,EAAAA,gBAAgB,CAACJ,CAAD,EAAG;AAACI,IAAAA,gBAAgB,GAACJ,CAAjB;AAAmB;;AAAhE,CAApC,EAAsG,CAAtG;AAMlR,MAAMK,QAAQ,GAAG;AAChBC,EAAAA,MAAM,EAAE,KADQ;AAEhBC,EAAAA,UAAU,EAAE,UAFI;AAGhBC,EAAAA,gBAAgB,EAAE,KAHF;AAIhBC,EAAAA,WAAW,EAAEZ,MAAM,CAACa,WAAP,CAAmB,sBAAnB,CAJG;AAKhBC,EAAAA,WAAW,EAAEd,MAAM,CAACa,WAAP,CAAmB,sBAAnB,CALG;AAMhBE,EAAAA,eAAe,EAAE,mBAND;AAOhBC,EAAAA,eAAe,EAAE,YAPD;AAQhBC,EAAAA,WAAW,EAAE,SARG;AAShBC,EAAAA,gBAAgB,EAAE;AATF,CAAjB;AAYAlB,MAAM,CAACmB,OAAP,CAAe,MAAM;AACpBZ,EAAAA,gBAAgB,CAACa,QAAjB,CAA0B,YAA1B,EAAwC,YAAY;AACnD,SAAKC,GAAL,CAAS,mBAAT,EAA8Bb,QAAQ,CAACC,MAAvC,EAA+C;AAC9Ca,MAAAA,IAAI,EAAE,SADwC;AAE9CC,MAAAA,SAAS,EAAE;AAFmC,KAA/C;AAIA,SAAKF,GAAL,CAAS,6BAAT,EAAwCb,QAAQ,CAACO,eAAjD,EAAkE;AACjEO,MAAAA,IAAI,EAAE;AAD2D,KAAlE;AAGA,SAAKD,GAAL,CAAS,4BAAT,EAAuCb,QAAQ,CAACQ,eAAhD,EAAiE;AAChEM,MAAAA,IAAI,EAAE;AAD0D,KAAjE;AAGA,SAAKD,GAAL,CAAS,8BAAT,EAAyCb,QAAQ,CAACG,gBAAlD,EAAoE;AACnEW,MAAAA,IAAI,EAAE;AAD6D,KAApE;AAGA,GAdD;AAeA,CAhBD,E,CAkBA;;AACA,MAAME,WAAW,GAAG,MACnBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlB,QAAlB,EAA4B;AAC3BC,EAAAA,MAAM,EAAEH,QAAQ,CAACqB,GAAT,CAAa,mBAAb,CADmB;AAE3BZ,EAAAA,eAAe,EAAET,QAAQ,CAACqB,GAAT,CAAa,6BAAb,CAFU;AAG3BX,EAAAA,eAAe,EAAEV,QAAQ,CAACqB,GAAT,CAAa,4BAAb,CAHU;AAI3BhB,EAAAA,gBAAgB,EAAEL,QAAQ,CAACqB,GAAT,CAAa,8BAAb;AAJS,CAA5B,CADD,C,CAQA;;;AACArB,QAAQ,CAACsB,aAAT,CACC,CAAC,mBAAD,EAAsB,6BAAtB,EAAqD,4BAArD,EAAmF,8BAAnF,CADD,EAEC,MAAM;AACL,QAAMC,aAAa,GAAGL,WAAW,EAAjC;;AAEA,MAAI,CAACK,aAAa,CAACpB,MAAnB,EAA2B;AAC1BJ,IAAAA,MAAM,CAACyB,KAAP,CAAa,wBAAb,EAAuCD,aAAvC;AACA,WAAOzB,oBAAoB,CAAC2B,cAArB,CAAoCC,MAApC,CAA2C;AACjDC,MAAAA,OAAO,EAAE;AADwC,KAA3C,CAAP;AAGA;;AAED7B,EAAAA,oBAAoB,CAAC2B,cAArB,CAAoCG,MAApC,CACC;AACCD,IAAAA,OAAO,EAAE;AADV,GADD,EAIC;AACCE,IAAAA,IAAI,EAAEN;AADP,GAJD;AASAxB,EAAAA,MAAM,CAACyB,KAAP,CAAa,sBAAb,EAAqCD,aAArC;AACA,CAtBF","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { logger } from './logger';\nimport { settings, settingsRegistry } from '../../settings/server';\n\nconst defaults = {\n\tenable: false,\n\tloginStyle: 'redirect',\n\tgenerateUsername: false,\n\tmanifestURI: Meteor.absoluteUrl('_blockstack/manifest'),\n\tredirectURI: Meteor.absoluteUrl('_blockstack/validate'),\n\tauthDescription: 'Rocket.Chat login',\n\tbuttonLabelText: 'Blockstack',\n\tbuttonColor: '#271132',\n\tbuttonLabelColor: '#ffffff',\n};\n\nMeteor.startup(() => {\n\tsettingsRegistry.addGroup('Blockstack', function () {\n\t\tthis.add('Blockstack_Enable', defaults.enable, {\n\t\t\ttype: 'boolean',\n\t\t\ti18nLabel: 'Enable',\n\t\t});\n\t\tthis.add('Blockstack_Auth_Description', defaults.authDescription, {\n\t\t\ttype: 'string',\n\t\t});\n\t\tthis.add('Blockstack_ButtonLabelText', defaults.buttonLabelText, {\n\t\t\ttype: 'string',\n\t\t});\n\t\tthis.add('Blockstack_Generate_Username', defaults.generateUsername, {\n\t\t\ttype: 'boolean',\n\t\t});\n\t});\n});\n\n// Helper to return all Blockstack settings\nconst getSettings = () =>\n\tObject.assign({}, defaults, {\n\t\tenable: settings.get('Blockstack_Enable'),\n\t\tauthDescription: settings.get('Blockstack_Auth_Description'),\n\t\tbuttonLabelText: settings.get('Blockstack_ButtonLabelText'),\n\t\tgenerateUsername: settings.get('Blockstack_Generate_Username'),\n\t});\n\n// Add settings to auth provider configs on startup\nsettings.watchMultiple(\n\t['Blockstack_Enable', 'Blockstack_Auth_Description', 'Blockstack_ButtonLabelText', 'Blockstack_Generate_Username'],\n\t() => {\n\t\tconst serviceConfig = getSettings();\n\n\t\tif (!serviceConfig.enable) {\n\t\t\tlogger.debug('Blockstack not enabled', serviceConfig);\n\t\t\treturn ServiceConfiguration.configurations.remove({\n\t\t\t\tservice: 'blockstack',\n\t\t\t});\n\t\t}\n\n\t\tServiceConfiguration.configurations.upsert(\n\t\t\t{\n\t\t\t\tservice: 'blockstack',\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: serviceConfig,\n\t\t\t},\n\t\t);\n\n\t\tlogger.debug('Init Blockstack auth', serviceConfig);\n\t},\n);\n"]},"sourceType":"module","hash":"3e8bc9588aef4ecf111b5e308ef1d801daf7e120"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/parseUrlsInMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/parseUrlsInMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/parseUrlsInMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/parseUrlsInMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/parseUrlsInMessage.js"}},"code":"module.export({\n  parseUrlsInMessage: () => parseUrlsInMessage\n});\nlet Markdown;\nmodule.link(\"../../../markdown/server\", {\n  Markdown(v) {\n    Markdown = v;\n  }\n\n}, 0);\n\nconst parseUrlsInMessage = message => {\n  if (message.parseUrls === false) {\n    return message;\n  }\n\n  message.html = message.msg;\n  message = Markdown.code(message);\n  const urls = message.html.match(/([A-Za-z]{3,9}):\\/\\/([-;:&=\\+\\$,\\w]+@{1})?([-A-Za-z0-9\\.]+)+:?(\\d+)?((\\/[-\\+=!:~%\\/\\.@\\,\\w]*)?\\??([-\\+=&!:;%@\\/\\.\\,\\w]+)?(?:#([^\\s\\)]+))?)?/g) || [];\n\n  if (urls) {\n    message.urls = [...new Set(urls)].map(url => ({\n      url\n    }));\n  }\n\n  message = Markdown.mountTokensBack(message, false);\n  message.msg = message.html;\n  delete message.html;\n  delete message.tokens;\n  return message;\n};","map":{"version":3,"sources":["app/lib/server/functions/parseUrlsInMessage.js"],"names":["module","export","parseUrlsInMessage","Markdown","link","v","message","parseUrls","html","msg","code","urls","match","Set","map","url","mountTokensBack","tokens"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,kBAAkB,EAAC,MAAIA;AAAxB,CAAd;AAA2D,IAAIC,QAAJ;AAAaH,MAAM,CAACI,IAAP,CAAY,0BAAZ,EAAuC;AAACD,EAAAA,QAAQ,CAACE,CAAD,EAAG;AAACF,IAAAA,QAAQ,GAACE,CAAT;AAAW;;AAAxB,CAAvC,EAAiE,CAAjE;;AAEjE,MAAMH,kBAAkB,GAAII,OAAD,IAAa;AAC9C,MAAIA,OAAO,CAACC,SAAR,KAAsB,KAA1B,EAAiC;AAChC,WAAOD,OAAP;AACA;;AAEDA,EAAAA,OAAO,CAACE,IAAR,GAAeF,OAAO,CAACG,GAAvB;AACAH,EAAAA,OAAO,GAAGH,QAAQ,CAACO,IAAT,CAAcJ,OAAd,CAAV;AAEA,QAAMK,IAAI,GACTL,OAAO,CAACE,IAAR,CAAaI,KAAb,CACC,8IADD,KAEK,EAHN;;AAIA,MAAID,IAAJ,EAAU;AACTL,IAAAA,OAAO,CAACK,IAAR,GAAe,CAAC,GAAG,IAAIE,GAAJ,CAAQF,IAAR,CAAJ,EAAmBG,GAAnB,CAAwBC,GAAD,KAAU;AAAEA,MAAAA;AAAF,KAAV,CAAvB,CAAf;AACA;;AAEDT,EAAAA,OAAO,GAAGH,QAAQ,CAACa,eAAT,CAAyBV,OAAzB,EAAkC,KAAlC,CAAV;AACAA,EAAAA,OAAO,CAACG,GAAR,GAAcH,OAAO,CAACE,IAAtB;AACA,SAAOF,OAAO,CAACE,IAAf;AACA,SAAOF,OAAO,CAACW,MAAf;AAEA,SAAOX,OAAP;AACA,CAtBM","sourcesContent":["import { Markdown } from '../../../markdown/server';\n\nexport const parseUrlsInMessage = (message) => {\n\tif (message.parseUrls === false) {\n\t\treturn message;\n\t}\n\n\tmessage.html = message.msg;\n\tmessage = Markdown.code(message);\n\n\tconst urls =\n\t\tmessage.html.match(\n\t\t\t/([A-Za-z]{3,9}):\\/\\/([-;:&=\\+\\$,\\w]+@{1})?([-A-Za-z0-9\\.]+)+:?(\\d+)?((\\/[-\\+=!:~%\\/\\.@\\,\\w]*)?\\??([-\\+=&!:;%@\\/\\.\\,\\w]+)?(?:#([^\\s\\)]+))?)?/g,\n\t\t) || [];\n\tif (urls) {\n\t\tmessage.urls = [...new Set(urls)].map((url) => ({ url }));\n\t}\n\n\tmessage = Markdown.mountTokensBack(message, false);\n\tmessage.msg = message.html;\n\tdelete message.html;\n\tdelete message.tokens;\n\n\treturn message;\n};\n"]},"sourceType":"module","hash":"348fffb230922c8c92966b6a21b8b017b3853d4c"}

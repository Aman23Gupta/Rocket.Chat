{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/lib/roomTypes/private.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/lib/roomTypes/private.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/lib/roomTypes/private.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/lib/roomTypes/private.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/lib/roomTypes/private.js"}},"code":"module.export({\n  PrivateRoomRoute: () => PrivateRoomRoute,\n  PrivateRoomType: () => PrivateRoomType\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ChatRoom, ChatSubscription;\nmodule.link(\"../../../models\", {\n  ChatRoom(v) {\n    ChatRoom = v;\n  },\n\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n\n}, 1);\nlet openRoom;\nmodule.link(\"../../../ui-utils\", {\n  openRoom(v) {\n    openRoom = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet hasAtLeastOnePermission, hasPermission;\nmodule.link(\"../../../authorization\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  },\n\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 4);\nlet getUserPreference, RoomSettingsEnum, RoomTypeConfig, RoomTypeRouteConfig, UiTextContext, RoomMemberActions;\nmodule.link(\"../../../utils\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  },\n\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  },\n\n  RoomTypeConfig(v) {\n    RoomTypeConfig = v;\n  },\n\n  RoomTypeRouteConfig(v) {\n    RoomTypeRouteConfig = v;\n  },\n\n  UiTextContext(v) {\n    UiTextContext = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  }\n\n}, 5);\nlet getAvatarURL;\nmodule.link(\"../../../utils/lib/getAvatarURL\", {\n  getAvatarURL(v) {\n    getAvatarURL = v;\n  }\n\n}, 6);\n\nclass PrivateRoomRoute extends RoomTypeRouteConfig {\n  constructor() {\n    super({\n      name: 'group',\n      path: '/group/:name/:tab?/:context?'\n    });\n  }\n\n  action(params) {\n    return openRoom('p', params.name);\n  }\n\n}\n\nclass PrivateRoomType extends RoomTypeConfig {\n  constructor() {\n    super({\n      identifier: 'p',\n      order: 40,\n      icon: 'hashtag-lock',\n      label: 'Private_Groups',\n      route: new PrivateRoomRoute()\n    });\n  }\n\n  getIcon(roomData) {\n    if (roomData.prid) {\n      return 'discussion';\n    }\n\n    if (roomData.teamMain) {\n      return 'team-lock';\n    }\n\n    return this.icon;\n  }\n\n  findRoom(identifier) {\n    const query = {\n      t: 'p',\n      name: identifier\n    };\n    return ChatRoom.findOne(query);\n  }\n\n  roomName(roomData) {\n    if (roomData.prid) {\n      return roomData.fname;\n    }\n\n    if (settings.get('UI_Allow_room_names_with_special_chars')) {\n      return roomData.fname || roomData.name;\n    }\n\n    return roomData.name;\n  }\n\n  condition() {\n    const groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n    return groupByType && hasPermission('view-p-room');\n  }\n\n  isGroupChat() {\n    return true;\n  }\n\n  canAddUser(room) {\n    return hasAtLeastOnePermission(['add-user-to-any-p-room', 'add-user-to-joined-room'], room._id);\n  }\n\n  canSendMessage(roomId) {\n    // TODO: remove duplicated code\n    return ChatSubscription.find({\n      rid: roomId\n    }).count() > 0;\n  }\n\n  allowRoomSettingChange(room, setting) {\n    switch (setting) {\n      case RoomSettingsEnum.JOIN_CODE:\n        return false;\n\n      case RoomSettingsEnum.BROADCAST:\n        return room.broadcast;\n\n      case RoomSettingsEnum.READ_ONLY:\n        return !room.broadcast;\n\n      case RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n        return !room.broadcast && room.ro;\n\n      case RoomSettingsEnum.E2E:\n        return settings.get('E2E_Enable') === true;\n\n      case RoomSettingsEnum.SYSTEM_MESSAGES:\n      default:\n        return true;\n    }\n  }\n\n  allowMemberAction(room, action) {\n    switch (action) {\n      case RoomMemberActions.BLOCK:\n        return false;\n\n      default:\n        return true;\n    }\n  }\n\n  enableMembersListProfile() {\n    return true;\n  }\n\n  getUiText(context) {\n    switch (context) {\n      case UiTextContext.HIDE_WARNING:\n        return 'Hide_Group_Warning';\n\n      case UiTextContext.LEAVE_WARNING:\n        return 'Leave_Group_Warning';\n\n      default:\n        return '';\n    }\n  }\n\n  getAvatarPath(roomData) {\n    return getAvatarURL({\n      roomId: roomData._id,\n      cache: roomData.avatarETag\n    });\n  }\n\n  includeInDashboard() {\n    return true;\n  }\n\n}","map":{"version":3,"sources":["app/lib/lib/roomTypes/private.js"],"names":["module","export","PrivateRoomRoute","PrivateRoomType","Meteor","link","v","ChatRoom","ChatSubscription","openRoom","settings","hasAtLeastOnePermission","hasPermission","getUserPreference","RoomSettingsEnum","RoomTypeConfig","RoomTypeRouteConfig","UiTextContext","RoomMemberActions","getAvatarURL","constructor","name","path","action","params","identifier","order","icon","label","route","getIcon","roomData","prid","teamMain","findRoom","query","t","findOne","roomName","fname","get","condition","groupByType","userId","isGroupChat","canAddUser","room","_id","canSendMessage","roomId","find","rid","count","allowRoomSettingChange","setting","JOIN_CODE","BROADCAST","broadcast","READ_ONLY","REACT_WHEN_READ_ONLY","ro","E2E","SYSTEM_MESSAGES","allowMemberAction","BLOCK","enableMembersListProfile","getUiText","context","HIDE_WARNING","LEAVE_WARNING","getAvatarPath","cache","avatarETag","includeInDashboard"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { ChatRoom, ChatSubscription } from '../../../models';\nimport { openRoom } from '../../../ui-utils';\nimport { settings } from '../../../settings';\nimport { hasAtLeastOnePermission, hasPermission } from '../../../authorization';\nimport { getUserPreference, RoomSettingsEnum, RoomTypeConfig, RoomTypeRouteConfig, UiTextContext, RoomMemberActions } from '../../../utils';\nimport { getAvatarURL } from '../../../utils/lib/getAvatarURL';\n\nexport class PrivateRoomRoute extends RoomTypeRouteConfig {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'group',\n\t\t\tpath: '/group/:name/:tab?/:context?',\n\t\t});\n\t}\n\n\taction(params) {\n\t\treturn openRoom('p', params.name);\n\t}\n}\n\nexport class PrivateRoomType extends RoomTypeConfig {\n\tconstructor() {\n\t\tsuper({\n\t\t\tidentifier: 'p',\n\t\t\torder: 40,\n\t\t\ticon: 'hashtag-lock',\n\t\t\tlabel: 'Private_Groups',\n\t\t\troute: new PrivateRoomRoute(),\n\t\t});\n\t}\n\n\tgetIcon(roomData) {\n\t\tif (roomData.prid) {\n\t\t\treturn 'discussion';\n\t\t}\n\t\tif (roomData.teamMain) {\n\t\t\treturn 'team-lock';\n\t\t}\n\t\treturn this.icon;\n\t}\n\n\tfindRoom(identifier) {\n\t\tconst query = {\n\t\t\tt: 'p',\n\t\t\tname: identifier,\n\t\t};\n\n\t\treturn ChatRoom.findOne(query);\n\t}\n\n\troomName(roomData) {\n\t\tif (roomData.prid) {\n\t\t\treturn roomData.fname;\n\t\t}\n\t\tif (settings.get('UI_Allow_room_names_with_special_chars')) {\n\t\t\treturn roomData.fname || roomData.name;\n\t\t}\n\n\t\treturn roomData.name;\n\t}\n\n\tcondition() {\n\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\treturn groupByType && hasPermission('view-p-room');\n\t}\n\n\tisGroupChat() {\n\t\treturn true;\n\t}\n\n\tcanAddUser(room) {\n\t\treturn hasAtLeastOnePermission(['add-user-to-any-p-room', 'add-user-to-joined-room'], room._id);\n\t}\n\n\tcanSendMessage(roomId) {\n\t\t// TODO: remove duplicated code\n\t\treturn (\n\t\t\tChatSubscription.find({\n\t\t\t\trid: roomId,\n\t\t\t}).count() > 0\n\t\t);\n\t}\n\n\tallowRoomSettingChange(room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.BROADCAST:\n\t\t\t\treturn room.broadcast;\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\treturn !room.broadcast;\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\treturn !room.broadcast && room.ro;\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\tallowMemberAction(room, action) {\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\tenableMembersListProfile() {\n\t\treturn true;\n\t}\n\n\tgetUiText(context) {\n\t\tswitch (context) {\n\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\treturn 'Hide_Group_Warning';\n\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\treturn 'Leave_Group_Warning';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tgetAvatarPath(roomData) {\n\t\treturn getAvatarURL({ roomId: roomData._id, cache: roomData.avatarETag });\n\t}\n\n\tincludeInDashboard() {\n\t\treturn true;\n\t}\n}\n"]},"sourceType":"module","hash":"1a18c96c22e8c618b0b9ae9d5998443e62432b68"}

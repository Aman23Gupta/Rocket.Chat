{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cas/server/cas_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/cas/server/cas_server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cas/server/cas_server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/cas/server/cas_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/cas/server/cas_server.js"}},"code":"let url;\nmodule.link(\"url\", {\n  default(v) {\n    url = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 3);\nlet RoutePolicy;\nmodule.link(\"meteor/routepolicy\", {\n  RoutePolicy(v) {\n    RoutePolicy = v;\n  }\n\n}, 4);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 5);\nlet fiber;\nmodule.link(\"fibers\", {\n  default(v) {\n    fiber = v;\n  }\n\n}, 6);\nlet CAS;\nmodule.link(\"cas\", {\n  default(v) {\n    CAS = v;\n  }\n\n}, 7);\nlet logger;\nmodule.link(\"./cas_rocketchat\", {\n  logger(v) {\n    logger = v;\n  }\n\n}, 8);\nlet settings;\nmodule.link(\"../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 9);\nlet Rooms;\nmodule.link(\"../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 10);\nlet CredentialTokens;\nmodule.link(\"../../models/server/raw\", {\n  CredentialTokens(v) {\n    CredentialTokens = v;\n  }\n\n}, 11);\n\nlet _setRealName;\n\nmodule.link(\"../../lib\", {\n  _setRealName(v) {\n    _setRealName = v;\n  }\n\n}, 12);\nlet createRoom;\nmodule.link(\"../../lib/server/functions/createRoom\", {\n  createRoom(v) {\n    createRoom = v;\n  }\n\n}, 13);\nRoutePolicy.declare('/_cas/', 'network');\n\nconst closePopup = function (res) {\n  res.writeHead(200, {\n    'Content-Type': 'text/html'\n  });\n  const content = '<html><head><script>window.close()</script></head></html>';\n  res.end(content, 'utf-8');\n};\n\nconst casTicket = function (req, token, callback) {\n  // get configuration\n  if (!settings.get('CAS_enabled')) {\n    logger.error('Got ticket validation request, but CAS is not enabled');\n    callback();\n  } // get ticket and validate.\n\n\n  const parsedUrl = url.parse(req.url, true);\n  const ticketId = parsedUrl.query.ticket;\n  const baseUrl = settings.get('CAS_base_url');\n  const cas_version = parseFloat(settings.get('CAS_version'));\n\n  const appUrl = Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n\n  logger.debug(\"Using CAS_base_url: \".concat(baseUrl));\n  const cas = new CAS({\n    base_url: baseUrl,\n    version: cas_version,\n    service: \"\".concat(appUrl, \"/_cas/\").concat(token)\n  });\n  cas.validate(ticketId, Meteor.bindEnvironment(function (err, status, username, details) {\n    return Promise.asyncApply(() => {\n      if (err) {\n        logger.error(\"error when trying to validate: \".concat(err.message));\n      } else if (status) {\n        logger.info(\"Validated user: \".concat(username));\n        const user_info = {\n          username\n        }; // CAS 2.0 attributes handling\n\n        if (details && details.attributes) {\n          _.extend(user_info, {\n            attributes: details.attributes\n          });\n        }\n\n        Promise.await(CredentialTokens.create(token, user_info));\n      } else {\n        logger.error(\"Unable to validate ticket: \".concat(ticketId));\n      } // logger.debug(\"Received response: \" + JSON.stringify(details, null , 4));\n\n\n      callback();\n    });\n  }));\n};\n\nconst middleware = function (req, res, next) {\n  // Make sure to catch any exceptions because otherwise we'd crash\n  // the runner\n  try {\n    const barePath = req.url.substring(0, req.url.indexOf('?'));\n    const splitPath = barePath.split('/'); // Any non-cas request will continue down the default\n    // middlewares.\n\n    if (splitPath[1] !== '_cas') {\n      next();\n      return;\n    } // get auth token\n\n\n    const credentialToken = splitPath[2];\n\n    if (!credentialToken) {\n      closePopup(res);\n      return;\n    } // validate ticket\n\n\n    casTicket(req, credentialToken, function () {\n      closePopup(res);\n    });\n  } catch (err) {\n    logger.error(\"Unexpected error : \".concat(err.message));\n    closePopup(res);\n  }\n}; // Listen to incoming OAuth http requests\n\n\nWebApp.connectHandlers.use(function (req, res, next) {\n  // Need to create a fiber since we're using synchronous http calls and nothing\n  // else is wrapping this in a fiber automatically\n  fiber(function () {\n    middleware(req, res, next);\n  }).run();\n});\n/*\n * Register a server-side login handle.\n * It is call after Accounts.callLoginMethod() is call from client.\n *\n */\n\nAccounts.registerLoginHandler(function (options) {\n  if (!options.cas) {\n    return undefined;\n  } // TODO: Sync wrapper due to the chain conversion to async models\n\n\n  const credentials = Promise.await(CredentialTokens.findOneNotExpiredById(options.cas.credentialToken));\n\n  if (credentials === undefined) {\n    throw new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching login attempt found');\n  }\n\n  const result = credentials.userInfo;\n  const syncUserDataFieldMap = settings.get('CAS_Sync_User_Data_FieldMap').trim();\n  const cas_version = parseFloat(settings.get('CAS_version'));\n  const sync_enabled = settings.get('CAS_Sync_User_Data_Enabled');\n  const trustUsername = settings.get('CAS_trust_username');\n  const verified = settings.get('Accounts_Verify_Email_For_External_Accounts');\n  const userCreationEnabled = settings.get('CAS_Creation_User_Enabled'); // We have these\n\n  const ext_attrs = {\n    username: result.username\n  }; // We need these\n\n  const int_attrs = {\n    email: undefined,\n    name: undefined,\n    username: undefined,\n    rooms: undefined\n  }; // Import response attributes\n\n  if (cas_version >= 2.0) {\n    // Clean & import external attributes\n    _.each(result.attributes, function (value, ext_name) {\n      if (value) {\n        ext_attrs[ext_name] = value[0];\n      }\n    });\n  } // Source internal attributes\n\n\n  if (syncUserDataFieldMap) {\n    // Our mapping table: key(int_attr) -> value(ext_attr)\n    // Spoken: Source this internal attribute from these external attributes\n    const attr_map = JSON.parse(syncUserDataFieldMap);\n\n    _.each(attr_map, function (source, int_name) {\n      // Source is our String to interpolate\n      if (_.isString(source)) {\n        let replacedValue = source;\n\n        _.each(ext_attrs, function (value, ext_name) {\n          replacedValue = replacedValue.replace(\"%\".concat(ext_name, \"%\"), ext_attrs[ext_name]);\n        });\n\n        if (source !== replacedValue) {\n          int_attrs[int_name] = replacedValue;\n          logger.debug(\"Sourced internal attribute: \".concat(int_name, \" = \").concat(replacedValue));\n        } else {\n          logger.debug(\"Sourced internal attribute: \".concat(int_name, \" skipped.\"));\n        }\n      }\n    });\n  } // Search existing user by its external service id\n\n\n  logger.debug(\"Looking up user by id: \".concat(result.username)); // First, look for a user that has logged in from CAS with this username before\n\n  let user = Meteor.users.findOne({\n    'services.cas.external_id': result.username\n  });\n\n  if (!user) {\n    // If that user was not found, check if there's any Rocket.Chat user with that username\n    // With this, CAS login will continue to work if the user is renamed on both sides and also if the user is renamed only on Rocket.Chat.\n    // It'll also allow non-CAS users to switch to CAS based login\n    if (trustUsername) {\n      const username = new RegExp(\"^\".concat(result.username, \"$\"), 'i');\n      user = Meteor.users.findOne({\n        username\n      });\n\n      if (user) {\n        // Update the user's external_id to reflect this new username.\n        Meteor.users.update(user, {\n          $set: {\n            'services.cas.external_id': result.username\n          }\n        });\n      }\n    }\n  }\n\n  if (user) {\n    logger.debug(\"Using existing user for '\".concat(result.username, \"' with id: \").concat(user._id));\n\n    if (sync_enabled) {\n      logger.debug('Syncing user attributes'); // Update name\n\n      if (int_attrs.name) {\n        _setRealName(user._id, int_attrs.name);\n      } // Update email\n\n\n      if (int_attrs.email) {\n        Meteor.users.update(user, {\n          $set: {\n            emails: [{\n              address: int_attrs.email,\n              verified\n            }]\n          }\n        });\n      }\n    }\n  } else if (userCreationEnabled) {\n    // Define new user\n    const newUser = {\n      username: result.username,\n      active: true,\n      globalRoles: ['user'],\n      emails: [],\n      services: {\n        cas: {\n          external_id: result.username,\n          version: cas_version,\n          attrs: int_attrs\n        }\n      }\n    }; // Add username\n\n    if (int_attrs.username) {\n      _.extend(newUser, {\n        username: int_attrs.username\n      });\n    } // Add User.name\n\n\n    if (int_attrs.name) {\n      _.extend(newUser, {\n        name: int_attrs.name\n      });\n    } // Add email\n\n\n    if (int_attrs.email) {\n      _.extend(newUser, {\n        emails: [{\n          address: int_attrs.email,\n          verified\n        }]\n      });\n    } // Create the user\n\n\n    logger.debug(\"User \\\"\".concat(result.username, \"\\\" does not exist yet, creating it\"));\n    const userId = Accounts.insertUserDoc({}, newUser); // Fetch and use it\n\n    user = Meteor.users.findOne(userId);\n    logger.debug(\"Created new user for '\".concat(result.username, \"' with id: \").concat(user._id)); // logger.debug(JSON.stringify(user, undefined, 4));\n\n    logger.debug(\"Joining user to attribute channels: \".concat(int_attrs.rooms));\n\n    if (int_attrs.rooms) {\n      _.each(int_attrs.rooms.split(','), function (room_name) {\n        if (room_name) {\n          let room = Rooms.findOneByNameAndType(room_name, 'c');\n\n          if (!room) {\n            room = createRoom('c', room_name, user.username);\n          }\n        }\n      });\n    }\n  } else {\n    // Should fail as no user exist and can't be created\n    logger.debug(\"User \\\"\".concat(result.username, \"\\\" does not exist yet, will fail as no user creation is enabled\"));\n    throw new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching user account found');\n  }\n\n  return {\n    userId: user._id\n  };\n});","map":{"version":3,"sources":["app/cas/server/cas_server.js"],"names":["url","module","link","default","v","Meteor","Accounts","WebApp","RoutePolicy","_","fiber","CAS","logger","settings","Rooms","CredentialTokens","_setRealName","createRoom","declare","closePopup","res","writeHead","content","end","casTicket","req","token","callback","get","error","parsedUrl","parse","ticketId","query","ticket","baseUrl","cas_version","parseFloat","appUrl","absoluteUrl","replace","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","debug","cas","base_url","version","service","validate","bindEnvironment","err","status","username","details","message","info","user_info","attributes","extend","create","middleware","next","barePath","substring","indexOf","splitPath","split","credentialToken","connectHandlers","use","run","registerLoginHandler","options","undefined","credentials","Promise","await","findOneNotExpiredById","Error","LoginCancelledError","numericError","result","userInfo","syncUserDataFieldMap","trim","sync_enabled","trustUsername","verified","userCreationEnabled","ext_attrs","int_attrs","email","name","rooms","each","value","ext_name","attr_map","JSON","source","int_name","isString","replacedValue","user","users","findOne","RegExp","update","$set","_id","emails","address","newUser","active","globalRoles","services","external_id","attrs","userId","insertUserDoc","room_name","room","findOneByNameAndType"],"mappings":"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","sourcesContent":["import url from 'url';\n\nimport { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { WebApp } from 'meteor/webapp';\nimport { RoutePolicy } from 'meteor/routepolicy';\nimport _ from 'underscore';\nimport fiber from 'fibers';\nimport CAS from 'cas';\n\nimport { logger } from './cas_rocketchat';\nimport { settings } from '../../settings';\nimport { Rooms } from '../../models/server';\nimport { CredentialTokens } from '../../models/server/raw';\nimport { _setRealName } from '../../lib';\nimport { createRoom } from '../../lib/server/functions/createRoom';\n\nRoutePolicy.declare('/_cas/', 'network');\n\nconst closePopup = function (res) {\n\tres.writeHead(200, { 'Content-Type': 'text/html' });\n\tconst content = '<html><head><script>window.close()</script></head></html>';\n\tres.end(content, 'utf-8');\n};\n\nconst casTicket = function (req, token, callback) {\n\t// get configuration\n\tif (!settings.get('CAS_enabled')) {\n\t\tlogger.error('Got ticket validation request, but CAS is not enabled');\n\t\tcallback();\n\t}\n\n\t// get ticket and validate.\n\tconst parsedUrl = url.parse(req.url, true);\n\tconst ticketId = parsedUrl.query.ticket;\n\tconst baseUrl = settings.get('CAS_base_url');\n\tconst cas_version = parseFloat(settings.get('CAS_version'));\n\tconst appUrl = Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n\tlogger.debug(`Using CAS_base_url: ${baseUrl}`);\n\n\tconst cas = new CAS({\n\t\tbase_url: baseUrl,\n\t\tversion: cas_version,\n\t\tservice: `${appUrl}/_cas/${token}`,\n\t});\n\n\tcas.validate(\n\t\tticketId,\n\t\tMeteor.bindEnvironment(async function (err, status, username, details) {\n\t\t\tif (err) {\n\t\t\t\tlogger.error(`error when trying to validate: ${err.message}`);\n\t\t\t} else if (status) {\n\t\t\t\tlogger.info(`Validated user: ${username}`);\n\t\t\t\tconst user_info = { username };\n\n\t\t\t\t// CAS 2.0 attributes handling\n\t\t\t\tif (details && details.attributes) {\n\t\t\t\t\t_.extend(user_info, { attributes: details.attributes });\n\t\t\t\t}\n\t\t\t\tawait CredentialTokens.create(token, user_info);\n\t\t\t} else {\n\t\t\t\tlogger.error(`Unable to validate ticket: ${ticketId}`);\n\t\t\t}\n\t\t\t// logger.debug(\"Received response: \" + JSON.stringify(details, null , 4));\n\n\t\t\tcallback();\n\t\t}),\n\t);\n};\n\nconst middleware = function (req, res, next) {\n\t// Make sure to catch any exceptions because otherwise we'd crash\n\t// the runner\n\ttry {\n\t\tconst barePath = req.url.substring(0, req.url.indexOf('?'));\n\t\tconst splitPath = barePath.split('/');\n\n\t\t// Any non-cas request will continue down the default\n\t\t// middlewares.\n\t\tif (splitPath[1] !== '_cas') {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\t// get auth token\n\t\tconst credentialToken = splitPath[2];\n\t\tif (!credentialToken) {\n\t\t\tclosePopup(res);\n\t\t\treturn;\n\t\t}\n\n\t\t// validate ticket\n\t\tcasTicket(req, credentialToken, function () {\n\t\t\tclosePopup(res);\n\t\t});\n\t} catch (err) {\n\t\tlogger.error(`Unexpected error : ${err.message}`);\n\t\tclosePopup(res);\n\t}\n};\n\n// Listen to incoming OAuth http requests\nWebApp.connectHandlers.use(function (req, res, next) {\n\t// Need to create a fiber since we're using synchronous http calls and nothing\n\t// else is wrapping this in a fiber automatically\n\tfiber(function () {\n\t\tmiddleware(req, res, next);\n\t}).run();\n});\n\n/*\n * Register a server-side login handle.\n * It is call after Accounts.callLoginMethod() is call from client.\n *\n */\nAccounts.registerLoginHandler(function (options) {\n\tif (!options.cas) {\n\t\treturn undefined;\n\t}\n\n\t// TODO: Sync wrapper due to the chain conversion to async models\n\tconst credentials = Promise.await(CredentialTokens.findOneNotExpiredById(options.cas.credentialToken));\n\tif (credentials === undefined) {\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching login attempt found');\n\t}\n\n\tconst result = credentials.userInfo;\n\tconst syncUserDataFieldMap = settings.get('CAS_Sync_User_Data_FieldMap').trim();\n\tconst cas_version = parseFloat(settings.get('CAS_version'));\n\tconst sync_enabled = settings.get('CAS_Sync_User_Data_Enabled');\n\tconst trustUsername = settings.get('CAS_trust_username');\n\tconst verified = settings.get('Accounts_Verify_Email_For_External_Accounts');\n\tconst userCreationEnabled = settings.get('CAS_Creation_User_Enabled');\n\n\t// We have these\n\tconst ext_attrs = {\n\t\tusername: result.username,\n\t};\n\n\t// We need these\n\tconst int_attrs = {\n\t\temail: undefined,\n\t\tname: undefined,\n\t\tusername: undefined,\n\t\trooms: undefined,\n\t};\n\n\t// Import response attributes\n\tif (cas_version >= 2.0) {\n\t\t// Clean & import external attributes\n\t\t_.each(result.attributes, function (value, ext_name) {\n\t\t\tif (value) {\n\t\t\t\text_attrs[ext_name] = value[0];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Source internal attributes\n\tif (syncUserDataFieldMap) {\n\t\t// Our mapping table: key(int_attr) -> value(ext_attr)\n\t\t// Spoken: Source this internal attribute from these external attributes\n\t\tconst attr_map = JSON.parse(syncUserDataFieldMap);\n\n\t\t_.each(attr_map, function (source, int_name) {\n\t\t\t// Source is our String to interpolate\n\t\t\tif (_.isString(source)) {\n\t\t\t\tlet replacedValue = source;\n\t\t\t\t_.each(ext_attrs, function (value, ext_name) {\n\t\t\t\t\treplacedValue = replacedValue.replace(`%${ext_name}%`, ext_attrs[ext_name]);\n\t\t\t\t});\n\n\t\t\t\tif (source !== replacedValue) {\n\t\t\t\t\tint_attrs[int_name] = replacedValue;\n\t\t\t\t\tlogger.debug(`Sourced internal attribute: ${int_name} = ${replacedValue}`);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.debug(`Sourced internal attribute: ${int_name} skipped.`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t// Search existing user by its external service id\n\tlogger.debug(`Looking up user by id: ${result.username}`);\n\t// First, look for a user that has logged in from CAS with this username before\n\tlet user = Meteor.users.findOne({ 'services.cas.external_id': result.username });\n\tif (!user) {\n\t\t// If that user was not found, check if there's any Rocket.Chat user with that username\n\t\t// With this, CAS login will continue to work if the user is renamed on both sides and also if the user is renamed only on Rocket.Chat.\n\t\t// It'll also allow non-CAS users to switch to CAS based login\n\t\tif (trustUsername) {\n\t\t\tconst username = new RegExp(`^${result.username}$`, 'i');\n\t\t\tuser = Meteor.users.findOne({ username });\n\t\t\tif (user) {\n\t\t\t\t// Update the user's external_id to reflect this new username.\n\t\t\t\tMeteor.users.update(user, { $set: { 'services.cas.external_id': result.username } });\n\t\t\t}\n\t\t}\n\t}\n\n\tif (user) {\n\t\tlogger.debug(`Using existing user for '${result.username}' with id: ${user._id}`);\n\t\tif (sync_enabled) {\n\t\t\tlogger.debug('Syncing user attributes');\n\t\t\t// Update name\n\t\t\tif (int_attrs.name) {\n\t\t\t\t_setRealName(user._id, int_attrs.name);\n\t\t\t}\n\n\t\t\t// Update email\n\t\t\tif (int_attrs.email) {\n\t\t\t\tMeteor.users.update(user, { $set: { emails: [{ address: int_attrs.email, verified }] } });\n\t\t\t}\n\t\t}\n\t} else if (userCreationEnabled) {\n\t\t// Define new user\n\t\tconst newUser = {\n\t\t\tusername: result.username,\n\t\t\tactive: true,\n\t\t\tglobalRoles: ['user'],\n\t\t\temails: [],\n\t\t\tservices: {\n\t\t\t\tcas: {\n\t\t\t\t\texternal_id: result.username,\n\t\t\t\t\tversion: cas_version,\n\t\t\t\t\tattrs: int_attrs,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\t// Add username\n\t\tif (int_attrs.username) {\n\t\t\t_.extend(newUser, {\n\t\t\t\tusername: int_attrs.username,\n\t\t\t});\n\t\t}\n\n\t\t// Add User.name\n\t\tif (int_attrs.name) {\n\t\t\t_.extend(newUser, {\n\t\t\t\tname: int_attrs.name,\n\t\t\t});\n\t\t}\n\n\t\t// Add email\n\t\tif (int_attrs.email) {\n\t\t\t_.extend(newUser, {\n\t\t\t\temails: [{ address: int_attrs.email, verified }],\n\t\t\t});\n\t\t}\n\n\t\t// Create the user\n\t\tlogger.debug(`User \"${result.username}\" does not exist yet, creating it`);\n\t\tconst userId = Accounts.insertUserDoc({}, newUser);\n\n\t\t// Fetch and use it\n\t\tuser = Meteor.users.findOne(userId);\n\t\tlogger.debug(`Created new user for '${result.username}' with id: ${user._id}`);\n\t\t// logger.debug(JSON.stringify(user, undefined, 4));\n\n\t\tlogger.debug(`Joining user to attribute channels: ${int_attrs.rooms}`);\n\t\tif (int_attrs.rooms) {\n\t\t\t_.each(int_attrs.rooms.split(','), function (room_name) {\n\t\t\t\tif (room_name) {\n\t\t\t\t\tlet room = Rooms.findOneByNameAndType(room_name, 'c');\n\t\t\t\t\tif (!room) {\n\t\t\t\t\t\troom = createRoom('c', room_name, user.username);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} else {\n\t\t// Should fail as no user exist and can't be created\n\t\tlogger.debug(`User \"${result.username}\" does not exist yet, will fail as no user creation is enabled`);\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching user account found');\n\t}\n\n\treturn { userId: user._id };\n});\n"]},"sourceType":"module","hash":"e2712abca446e14ad33a0878ac7bcd755cb29d38"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/functions/addUser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/functions/addUser.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/functions/addUser.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/functions/addUser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/functions/addUser.js"}},"code":"module.export({\n  addUser: () => addUser\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet federationErrors;\nmodule.link(\"./errors\", {\n  \"*\"(v) {\n    federationErrors = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet FederationServers;\nmodule.link(\"../../../models/server/raw\", {\n  FederationServers(v) {\n    FederationServers = v;\n  }\n\n}, 3);\nlet getUserByUsername;\nmodule.link(\"../handler\", {\n  getUserByUsername(v) {\n    getUserByUsername = v;\n  }\n\n}, 4);\n\nfunction addUser(query) {\n  return Promise.asyncApply(() => {\n    if (!Meteor.userId()) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'addUser'\n      });\n    }\n\n    const user = Promise.await(getUserByUsername(query));\n\n    if (!user) {\n      throw federationErrors.userNotFound(query);\n    }\n\n    let userId = user._id;\n\n    try {\n      // Create the local user\n      userId = Users.create(user); // Refresh the servers list\n\n      Promise.await(FederationServers.refreshServers());\n    } catch (err) {\n      // This might get called twice by the createDirectMessage method\n      // so we need to handle the situation accordingly\n      if (err.code !== 11000) {\n        throw err;\n      }\n    }\n\n    return Users.findOne({\n      _id: userId\n    });\n  });\n}","map":{"version":3,"sources":["app/federation/server/functions/addUser.js"],"names":["module","export","addUser","Meteor","link","v","federationErrors","Users","FederationServers","getUserByUsername","query","userId","Error","method","user","userNotFound","_id","create","refreshServers","err","code","findOne"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIA;AAAb,CAAd;AAAqC,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAM,CAACE,CAAD,EAAG;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,gBAAJ;AAAqBN,MAAM,CAACI,IAAP,CAAY,UAAZ,EAAuB;AAAC,MAAIC,CAAJ,EAAM;AAACC,IAAAA,gBAAgB,GAACD,CAAjB;AAAmB;;AAA3B,CAAvB,EAAoD,CAApD;AAAuD,IAAIE,KAAJ;AAAUP,MAAM,CAACI,IAAP,CAAY,wBAAZ,EAAqC;AAACG,EAAAA,KAAK,CAACF,CAAD,EAAG;AAACE,IAAAA,KAAK,GAACF,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIG,iBAAJ;AAAsBR,MAAM,CAACI,IAAP,CAAY,4BAAZ,EAAyC;AAACI,EAAAA,iBAAiB,CAACH,CAAD,EAAG;AAACG,IAAAA,iBAAiB,GAACH,CAAlB;AAAoB;;AAA1C,CAAzC,EAAqF,CAArF;AAAwF,IAAII,iBAAJ;AAAsBT,MAAM,CAACI,IAAP,CAAY,YAAZ,EAAyB;AAACK,EAAAA,iBAAiB,CAACJ,CAAD,EAAG;AAACI,IAAAA,iBAAiB,GAACJ,CAAlB;AAAoB;;AAA1C,CAAzB,EAAqE,CAArE;;AAOpX,SAAeH,OAAf,CAAuBQ,KAAvB;AAAA,kCAA8B;AACpC,QAAI,CAACP,MAAM,CAACQ,MAAP,EAAL,EAAsB;AACrB,YAAM,IAAIR,MAAM,CAACS,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,UAAMC,IAAI,iBAASL,iBAAiB,CAACC,KAAD,CAA1B,CAAV;;AAEA,QAAI,CAACI,IAAL,EAAW;AACV,YAAMR,gBAAgB,CAACS,YAAjB,CAA8BL,KAA9B,CAAN;AACA;;AAED,QAAIC,MAAM,GAAGG,IAAI,CAACE,GAAlB;;AAEA,QAAI;AACH;AACAL,MAAAA,MAAM,GAAGJ,KAAK,CAACU,MAAN,CAAaH,IAAb,CAAT,CAFG,CAIH;;AACA,oBAAMN,iBAAiB,CAACU,cAAlB,EAAN;AACA,KAND,CAME,OAAOC,GAAP,EAAY;AACb;AACA;AACA,UAAIA,GAAG,CAACC,IAAJ,KAAa,KAAjB,EAAwB;AACvB,cAAMD,GAAN;AACA;AACD;;AAED,WAAOZ,KAAK,CAACc,OAAN,CAAc;AAAEL,MAAAA,GAAG,EAAEL;AAAP,KAAd,CAAP;AACA,GA5BM;AAAA","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport * as federationErrors from './errors';\nimport { Users } from '../../../models/server';\nimport { FederationServers } from '../../../models/server/raw';\nimport { getUserByUsername } from '../handler';\n\nexport async function addUser(query) {\n\tif (!Meteor.userId()) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'addUser' });\n\t}\n\n\tconst user = await getUserByUsername(query);\n\n\tif (!user) {\n\t\tthrow federationErrors.userNotFound(query);\n\t}\n\n\tlet userId = user._id;\n\n\ttry {\n\t\t// Create the local user\n\t\tuserId = Users.create(user);\n\n\t\t// Refresh the servers list\n\t\tawait FederationServers.refreshServers();\n\t} catch (err) {\n\t\t// This might get called twice by the createDirectMessage method\n\t\t// so we need to handle the situation accordingly\n\t\tif (err.code !== 11000) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\treturn Users.findOne({ _id: userId });\n}\n"]},"sourceType":"module","hash":"03dd1c030ce43090348db2436371e8c65c6ef552"}

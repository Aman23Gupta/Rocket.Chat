{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/smarsh-connector/server/functions/generateEml.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/smarsh-connector/server/functions/generateEml.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/smarsh-connector/server/functions/generateEml.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/smarsh-connector/server/functions/generateEml.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/smarsh-connector/server/functions/generateEml.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 2);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet Rooms, Messages, Users;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 5);\nlet SmarshHistory;\nmodule.link(\"../../../models/server/raw\", {\n  SmarshHistory(v) {\n    SmarshHistory = v;\n  }\n\n}, 6);\nlet MessageTypes;\nmodule.link(\"../../../ui-utils\", {\n  MessageTypes(v) {\n    MessageTypes = v;\n  }\n\n}, 7);\nlet smarsh;\nmodule.link(\"../lib/rocketchat\", {\n  smarsh(v) {\n    smarsh = v;\n  }\n\n}, 8);\nmodule.link(\"moment-timezone\");\nconst start = '<table style=\"width: 100%; border: 1px solid; border-collapse: collapse; table-layout: fixed; margin-top: 10px; font-size: 12px; word-break: break-word;\"><tbody>';\nconst end = '</tbody></table>';\nconst opentr = '<tr style=\"border: 1px solid;\">';\nconst closetr = '</tr>';\nconst open20td = '<td style=\"border: 1px solid; text-align: center; width: 20%;\">';\nconst open60td = '<td style=\"border: 1px solid; text-align: left; width: 60%; padding: 0 5px;\">';\nconst closetd = '</td>';\n\nfunction _getLink(attachment) {\n  const url = attachment.title_link.replace(/ /g, '%20');\n\n  if (url.match(/^(https?:)?\\/\\//i)) {\n    return url;\n  }\n\n  return Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + url;\n}\n\nsmarsh.generateEml = () => {\n  Meteor.defer(() => {\n    const smarshMissingEmail = settings.get('Smarsh_MissingEmail_Email');\n    const timeZone = settings.get('Smarsh_Timezone');\n    Rooms.find().forEach(room => Promise.asyncApply(() => {\n      const smarshHistory = Promise.await(SmarshHistory.findOne({\n        _id: room._id\n      }));\n      const query = {\n        rid: room._id\n      };\n\n      if (smarshHistory) {\n        query.ts = {\n          $gt: smarshHistory.lastRan\n        };\n      }\n\n      const date = new Date();\n      const rows = [];\n      const data = {\n        users: [],\n        msgs: 0,\n        files: [],\n        time: smarshHistory ? moment(date).diff(moment(smarshHistory.lastRan), 'minutes') : moment(date).diff(moment(room.ts), 'minutes'),\n        room: room.name ? \"#\".concat(room.name) : \"Direct Message Between: \".concat(room.usernames.join(' & '))\n      };\n      Messages.find(query).forEach(message => {\n        rows.push(opentr); // The timestamp\n\n        rows.push(open20td);\n        rows.push(moment(message.ts).tz(timeZone).format('YYYY-MM-DD HH-mm-ss z'));\n        rows.push(closetd); // The sender\n\n        rows.push(open20td);\n        const sender = Users.findOne({\n          _id: message.u._id\n        });\n\n        if (data.users.indexOf(sender._id) === -1) {\n          data.users.push(sender._id);\n        } // Get the user's email, can be nothing if it is an unconfigured bot account (like rocket.cat)\n\n\n        if (sender.emails && sender.emails[0] && sender.emails[0].address) {\n          rows.push(\"\".concat(sender.name, \" &lt;\").concat(sender.emails[0].address, \"&gt;\"));\n        } else {\n          rows.push(\"\".concat(sender.name, \" &lt;\").concat(smarshMissingEmail, \"&gt;\"));\n        }\n\n        rows.push(closetd); // The message\n\n        rows.push(open60td);\n        data.msgs++;\n\n        if (message.t) {\n          const messageType = MessageTypes.getType(message);\n\n          if (messageType) {\n            rows.push(TAPi18n.__(messageType.message, messageType.data ? messageType.data(message) : '', 'en'));\n          } else {\n            rows.push(\"\".concat(message.msg, \" (\").concat(message.t, \")\"));\n          }\n        } else if (message.file) {\n          data.files.push(message.file._id);\n          rows.push(\"\".concat(message.attachments[0].title, \" (\").concat(_getLink(message.attachments[0]), \")\"));\n        } else if (message.attachments) {\n          const attaches = [];\n\n          _.each(message.attachments, function _loopThroughMessageAttachments(a) {\n            if (a.image_url) {\n              attaches.push(a.image_url);\n            } // TODO: Verify other type of attachments which need to be handled that aren't file uploads and image urls\n            // } else {\n            // \tconsole.log(a);\n            // }\n\n          });\n\n          rows.push(\"\".concat(message.msg, \" (\").concat(attaches.join(', '), \")\"));\n        } else {\n          rows.push(message.msg);\n        }\n\n        rows.push(closetd);\n        rows.push(closetr);\n      });\n\n      if (rows.length !== 0) {\n        const result = start + rows.join('') + end;\n        SmarshHistory.upsert({\n          _id: room._id\n        }, {\n          _id: room._id,\n          lastRan: date,\n          lastResult: result\n        });\n        smarsh.sendEmail({\n          body: result,\n          subject: \"Rocket.Chat, \".concat(data.users.length, \" Users, \").concat(data.msgs, \" Messages, \").concat(data.files.length, \" Files, \").concat(data.time, \" Minutes, in \").concat(data.room),\n          files: data.files\n        });\n      }\n    }));\n  });\n};","map":{"version":3,"sources":["app/smarsh-connector/server/functions/generateEml.js"],"names":["Meteor","module","link","v","TAPi18n","_","default","moment","settings","Rooms","Messages","Users","SmarshHistory","MessageTypes","smarsh","start","end","opentr","closetr","open20td","open60td","closetd","_getLink","attachment","url","title_link","replace","match","absoluteUrl","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","generateEml","defer","smarshMissingEmail","get","timeZone","find","forEach","room","smarshHistory","findOne","_id","query","rid","ts","$gt","lastRan","date","Date","rows","data","users","msgs","files","time","diff","name","usernames","join","message","push","tz","format","sender","u","indexOf","emails","address","t","messageType","getType","__","msg","file","attachments","title","attaches","each","_loopThroughMessageAttachments","a","image_url","length","result","upsert","lastResult","sendEmail","body","subject"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport _ from 'underscore';\nimport moment from 'moment';\n\nimport { settings } from '../../../settings';\nimport { Rooms, Messages, Users } from '../../../models/server';\nimport { SmarshHistory } from '../../../models/server/raw';\nimport { MessageTypes } from '../../../ui-utils';\nimport { smarsh } from '../lib/rocketchat';\nimport 'moment-timezone';\n\nconst start =\n\t'<table style=\"width: 100%; border: 1px solid; border-collapse: collapse; table-layout: fixed; margin-top: 10px; font-size: 12px; word-break: break-word;\"><tbody>';\nconst end = '</tbody></table>';\nconst opentr = '<tr style=\"border: 1px solid;\">';\nconst closetr = '</tr>';\nconst open20td = '<td style=\"border: 1px solid; text-align: center; width: 20%;\">';\nconst open60td = '<td style=\"border: 1px solid; text-align: left; width: 60%; padding: 0 5px;\">';\nconst closetd = '</td>';\n\nfunction _getLink(attachment) {\n\tconst url = attachment.title_link.replace(/ /g, '%20');\n\n\tif (url.match(/^(https?:)?\\/\\//i)) {\n\t\treturn url;\n\t}\n\treturn Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + url;\n}\n\nsmarsh.generateEml = () => {\n\tMeteor.defer(() => {\n\t\tconst smarshMissingEmail = settings.get('Smarsh_MissingEmail_Email');\n\t\tconst timeZone = settings.get('Smarsh_Timezone');\n\n\t\tRooms.find().forEach(async (room) => {\n\t\t\tconst smarshHistory = await SmarshHistory.findOne({ _id: room._id });\n\t\t\tconst query = { rid: room._id };\n\n\t\t\tif (smarshHistory) {\n\t\t\t\tquery.ts = { $gt: smarshHistory.lastRan };\n\t\t\t}\n\n\t\t\tconst date = new Date();\n\t\t\tconst rows = [];\n\t\t\tconst data = {\n\t\t\t\tusers: [],\n\t\t\t\tmsgs: 0,\n\t\t\t\tfiles: [],\n\t\t\t\ttime: smarshHistory ? moment(date).diff(moment(smarshHistory.lastRan), 'minutes') : moment(date).diff(moment(room.ts), 'minutes'),\n\t\t\t\troom: room.name ? `#${room.name}` : `Direct Message Between: ${room.usernames.join(' & ')}`,\n\t\t\t};\n\n\t\t\tMessages.find(query).forEach((message) => {\n\t\t\t\trows.push(opentr);\n\n\t\t\t\t// The timestamp\n\t\t\t\trows.push(open20td);\n\t\t\t\trows.push(moment(message.ts).tz(timeZone).format('YYYY-MM-DD HH-mm-ss z'));\n\t\t\t\trows.push(closetd);\n\n\t\t\t\t// The sender\n\t\t\t\trows.push(open20td);\n\t\t\t\tconst sender = Users.findOne({ _id: message.u._id });\n\t\t\t\tif (data.users.indexOf(sender._id) === -1) {\n\t\t\t\t\tdata.users.push(sender._id);\n\t\t\t\t}\n\n\t\t\t\t// Get the user's email, can be nothing if it is an unconfigured bot account (like rocket.cat)\n\t\t\t\tif (sender.emails && sender.emails[0] && sender.emails[0].address) {\n\t\t\t\t\trows.push(`${sender.name} &lt;${sender.emails[0].address}&gt;`);\n\t\t\t\t} else {\n\t\t\t\t\trows.push(`${sender.name} &lt;${smarshMissingEmail}&gt;`);\n\t\t\t\t}\n\t\t\t\trows.push(closetd);\n\n\t\t\t\t// The message\n\t\t\t\trows.push(open60td);\n\t\t\t\tdata.msgs++;\n\t\t\t\tif (message.t) {\n\t\t\t\t\tconst messageType = MessageTypes.getType(message);\n\t\t\t\t\tif (messageType) {\n\t\t\t\t\t\trows.push(TAPi18n.__(messageType.message, messageType.data ? messageType.data(message) : '', 'en'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(`${message.msg} (${message.t})`);\n\t\t\t\t\t}\n\t\t\t\t} else if (message.file) {\n\t\t\t\t\tdata.files.push(message.file._id);\n\t\t\t\t\trows.push(`${message.attachments[0].title} (${_getLink(message.attachments[0])})`);\n\t\t\t\t} else if (message.attachments) {\n\t\t\t\t\tconst attaches = [];\n\t\t\t\t\t_.each(message.attachments, function _loopThroughMessageAttachments(a) {\n\t\t\t\t\t\tif (a.image_url) {\n\t\t\t\t\t\t\tattaches.push(a.image_url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Verify other type of attachments which need to be handled that aren't file uploads and image urls\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \tconsole.log(a);\n\t\t\t\t\t\t// }\n\t\t\t\t\t});\n\n\t\t\t\t\trows.push(`${message.msg} (${attaches.join(', ')})`);\n\t\t\t\t} else {\n\t\t\t\t\trows.push(message.msg);\n\t\t\t\t}\n\t\t\t\trows.push(closetd);\n\n\t\t\t\trows.push(closetr);\n\t\t\t});\n\n\t\t\tif (rows.length !== 0) {\n\t\t\t\tconst result = start + rows.join('') + end;\n\n\t\t\t\tSmarshHistory.upsert(\n\t\t\t\t\t{ _id: room._id },\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: room._id,\n\t\t\t\t\t\tlastRan: date,\n\t\t\t\t\t\tlastResult: result,\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tsmarsh.sendEmail({\n\t\t\t\t\tbody: result,\n\t\t\t\t\tsubject: `Rocket.Chat, ${data.users.length} Users, ${data.msgs} Messages, ${data.files.length} Files, ${data.time} Minutes, in ${data.room}`,\n\t\t\t\t\tfiles: data.files,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n};\n"]},"sourceType":"module","hash":"265ae143c840a95a38ce5229da98708e6fd1216f"}

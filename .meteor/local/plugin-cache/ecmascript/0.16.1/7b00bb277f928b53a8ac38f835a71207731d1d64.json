{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/deleteUser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/deleteUser.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/deleteUser.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/deleteUser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/deleteUser.js"}},"code":"module.export({\n  deleteUser: () => deleteUser\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\nlet FileUpload;\nmodule.link(\"../../../file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 2);\nlet Users, Subscriptions, Messages, Rooms;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 3);\nlet FederationServers, Integrations;\nmodule.link(\"../../../models/server/raw\", {\n  FederationServers(v) {\n    FederationServers = v;\n  },\n\n  Integrations(v) {\n    Integrations = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\nlet updateGroupDMsName;\nmodule.link(\"./updateGroupDMsName\", {\n  updateGroupDMsName(v) {\n    updateGroupDMsName = v;\n  }\n\n}, 6);\nlet relinquishRoomOwnerships;\nmodule.link(\"./relinquishRoomOwnerships\", {\n  relinquishRoomOwnerships(v) {\n    relinquishRoomOwnerships = v;\n  }\n\n}, 7);\nlet getSubscribedRoomsForUserWithDetails, shouldRemoveOrChangeOwner;\nmodule.link(\"./getRoomsWithSingleOwner\", {\n  getSubscribedRoomsForUserWithDetails(v) {\n    getSubscribedRoomsForUserWithDetails = v;\n  },\n\n  shouldRemoveOrChangeOwner(v) {\n    shouldRemoveOrChangeOwner = v;\n  }\n\n}, 8);\nlet getUserSingleOwnedRooms;\nmodule.link(\"./getUserSingleOwnedRooms\", {\n  getUserSingleOwnedRooms(v) {\n    getUserSingleOwnedRooms = v;\n  }\n\n}, 9);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 10);\n\nfunction deleteUser(userId) {\n  return Promise.asyncApply(() => {\n    let confirmRelinquish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const user = Users.findOneById(userId, {\n      fields: {\n        username: 1,\n        avatarOrigin: 1,\n        federation: 1\n      }\n    });\n\n    if (!user) {\n      return;\n    }\n\n    if (user.federation) {\n      const existingSubscriptions = Subscriptions.find({\n        'u._id': user._id\n      }).count();\n\n      if (existingSubscriptions > 0) {\n        throw new Meteor.Error('FEDERATION_Error_user_is_federated_on_rooms');\n      }\n    }\n\n    const subscribedRooms = getSubscribedRoomsForUserWithDetails(userId);\n\n    if (shouldRemoveOrChangeOwner(subscribedRooms) && !confirmRelinquish) {\n      const rooms = getUserSingleOwnedRooms(subscribedRooms);\n      throw new Meteor.Error('user-last-owner', '', rooms);\n    } // Users without username can't do anything, so there is nothing to remove\n\n\n    if (user.username != null) {\n      Promise.await(relinquishRoomOwnerships(userId, subscribedRooms));\n      const messageErasureType = settings.get('Message_ErasureType');\n\n      switch (messageErasureType) {\n        case 'Delete':\n          const store = FileUpload.getStore('Uploads');\n          Messages.findFilesByUserId(userId).forEach(function (_ref) {\n            let {\n              file\n            } = _ref;\n            store.deleteById(file._id);\n          });\n          Messages.removeByUserId(userId);\n          break;\n\n        case 'Unlink':\n          const rocketCat = Users.findOneById('rocket.cat');\n\n          const nameAlias = TAPi18n.__('Removed_User');\n\n          Messages.unlinkUserId(userId, rocketCat._id, rocketCat.username, nameAlias);\n          break;\n      }\n\n      Rooms.updateGroupDMsRemovingUsernamesByUsername(user.username, userId); // Remove direct rooms with the user\n\n      Rooms.removeDirectRoomContainingUsername(user.username); // Remove direct rooms with the user\n\n      Subscriptions.removeByUserId(userId); // Remove user subscriptions\n      // removes user's avatar\n\n      if (user.avatarOrigin === 'upload' || user.avatarOrigin === 'url') {\n        FileUpload.getStore('Avatars').deleteByName(user.username);\n      }\n\n      Promise.await(Integrations.disableByUserId(userId)); // Disables all the integrations which rely on the user being deleted.\n      // Don't broadcast user.deleted for Erasure Type of 'Keep' so that messages don't dissappear from logged in sessions\n\n      if (messageErasureType !== 'Keep') {\n        api.broadcast('user.deleted', user);\n      }\n    } // Remove user from users database\n\n\n    Users.removeById(userId); // update name and fname of group direct messages\n\n    updateGroupDMsName(user); // Refresh the servers list\n\n    Promise.await(FederationServers.refreshServers());\n  });\n}","map":{"version":3,"sources":["app/lib/server/functions/deleteUser.js"],"names":["module","export","deleteUser","Meteor","link","v","TAPi18n","FileUpload","Users","Subscriptions","Messages","Rooms","FederationServers","Integrations","settings","updateGroupDMsName","relinquishRoomOwnerships","getSubscribedRoomsForUserWithDetails","shouldRemoveOrChangeOwner","getUserSingleOwnedRooms","api","userId","confirmRelinquish","user","findOneById","fields","username","avatarOrigin","federation","existingSubscriptions","find","_id","count","Error","subscribedRooms","rooms","messageErasureType","get","store","getStore","findFilesByUserId","forEach","file","deleteById","removeByUserId","rocketCat","nameAlias","__","unlinkUserId","updateGroupDMsRemovingUsernamesByUsername","removeDirectRoomContainingUsername","deleteByName","disableByUserId","broadcast","removeById","refreshServers"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { FileUpload } from '../../../file-upload/server';\nimport { Users, Subscriptions, Messages, Rooms } from '../../../models/server';\nimport { FederationServers, Integrations } from '../../../models/server/raw';\nimport { settings } from '../../../settings/server';\nimport { updateGroupDMsName } from './updateGroupDMsName';\nimport { relinquishRoomOwnerships } from './relinquishRoomOwnerships';\nimport { getSubscribedRoomsForUserWithDetails, shouldRemoveOrChangeOwner } from './getRoomsWithSingleOwner';\nimport { getUserSingleOwnedRooms } from './getUserSingleOwnedRooms';\nimport { api } from '../../../../server/sdk/api';\n\nexport async function deleteUser(userId, confirmRelinquish = false) {\n\tconst user = Users.findOneById(userId, {\n\t\tfields: { username: 1, avatarOrigin: 1, federation: 1 },\n\t});\n\n\tif (!user) {\n\t\treturn;\n\t}\n\n\tif (user.federation) {\n\t\tconst existingSubscriptions = Subscriptions.find({ 'u._id': user._id }).count();\n\n\t\tif (existingSubscriptions > 0) {\n\t\t\tthrow new Meteor.Error('FEDERATION_Error_user_is_federated_on_rooms');\n\t\t}\n\t}\n\n\tconst subscribedRooms = getSubscribedRoomsForUserWithDetails(userId);\n\n\tif (shouldRemoveOrChangeOwner(subscribedRooms) && !confirmRelinquish) {\n\t\tconst rooms = getUserSingleOwnedRooms(subscribedRooms);\n\t\tthrow new Meteor.Error('user-last-owner', '', rooms);\n\t}\n\n\t// Users without username can't do anything, so there is nothing to remove\n\tif (user.username != null) {\n\t\tawait relinquishRoomOwnerships(userId, subscribedRooms);\n\n\t\tconst messageErasureType = settings.get('Message_ErasureType');\n\t\tswitch (messageErasureType) {\n\t\t\tcase 'Delete':\n\t\t\t\tconst store = FileUpload.getStore('Uploads');\n\t\t\t\tMessages.findFilesByUserId(userId).forEach(function ({ file }) {\n\t\t\t\t\tstore.deleteById(file._id);\n\t\t\t\t});\n\t\t\t\tMessages.removeByUserId(userId);\n\t\t\t\tbreak;\n\t\t\tcase 'Unlink':\n\t\t\t\tconst rocketCat = Users.findOneById('rocket.cat');\n\t\t\t\tconst nameAlias = TAPi18n.__('Removed_User');\n\t\t\t\tMessages.unlinkUserId(userId, rocketCat._id, rocketCat.username, nameAlias);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tRooms.updateGroupDMsRemovingUsernamesByUsername(user.username, userId); // Remove direct rooms with the user\n\t\tRooms.removeDirectRoomContainingUsername(user.username); // Remove direct rooms with the user\n\n\t\tSubscriptions.removeByUserId(userId); // Remove user subscriptions\n\n\t\t// removes user's avatar\n\t\tif (user.avatarOrigin === 'upload' || user.avatarOrigin === 'url') {\n\t\t\tFileUpload.getStore('Avatars').deleteByName(user.username);\n\t\t}\n\n\t\tawait Integrations.disableByUserId(userId); // Disables all the integrations which rely on the user being deleted.\n\n\t\t// Don't broadcast user.deleted for Erasure Type of 'Keep' so that messages don't dissappear from logged in sessions\n\t\tif (messageErasureType !== 'Keep') {\n\t\t\tapi.broadcast('user.deleted', user);\n\t\t}\n\t}\n\n\t// Remove user from users database\n\tUsers.removeById(userId);\n\n\t// update name and fname of group direct messages\n\tupdateGroupDMsName(user);\n\n\t// Refresh the servers list\n\tawait FederationServers.refreshServers();\n}\n"]},"sourceType":"module","hash":"7b00bb277f928b53a8ac38f835a71207731d1d64"}

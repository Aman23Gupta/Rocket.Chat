{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/listeners.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/bridges/listeners.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/listeners.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/bridges/listeners.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/bridges/listeners.js"}},"code":"module.export({\n  AppListenerBridge: () => AppListenerBridge\n});\nlet AppInterface;\nmodule.link(\"@rocket.chat/apps-engine/definition/metadata\", {\n  AppInterface(v) {\n    AppInterface = v;\n  }\n\n}, 0);\nlet LivechatTransferEventType;\nmodule.link(\"@rocket.chat/apps-engine/definition/livechat\", {\n  LivechatTransferEventType(v) {\n    LivechatTransferEventType = v;\n  }\n\n}, 1);\n\nclass AppListenerBridge {\n  constructor(orch) {\n    this.orch = orch;\n  }\n\n  handleEvent(event) {\n    return Promise.asyncApply(() => {\n      const method = (() => {\n        switch (event) {\n          case AppInterface.IPreMessageSentPrevent:\n          case AppInterface.IPreMessageSentExtend:\n          case AppInterface.IPreMessageSentModify:\n          case AppInterface.IPostMessageSent:\n          case AppInterface.IPreMessageDeletePrevent:\n          case AppInterface.IPostMessageDeleted:\n          case AppInterface.IPreMessageUpdatedPrevent:\n          case AppInterface.IPreMessageUpdatedExtend:\n          case AppInterface.IPreMessageUpdatedModify:\n          case AppInterface.IPostMessageUpdated:\n            return 'messageEvent';\n\n          case AppInterface.IPreRoomCreatePrevent:\n          case AppInterface.IPreRoomCreateExtend:\n          case AppInterface.IPreRoomCreateModify:\n          case AppInterface.IPostRoomCreate:\n          case AppInterface.IPreRoomDeletePrevent:\n          case AppInterface.IPostRoomDeleted:\n          case AppInterface.IPreRoomUserJoined:\n          case AppInterface.IPostRoomUserJoined:\n          case AppInterface.IPreRoomUserLeave:\n          case AppInterface.IPostRoomUserLeave:\n            return 'roomEvent';\n\n          /**\n           * @deprecated please prefer the AppInterface.IPostLivechatRoomClosed event\n           */\n\n          case AppInterface.ILivechatRoomClosedHandler:\n          case AppInterface.IPostLivechatRoomStarted:\n          case AppInterface.IPostLivechatRoomClosed:\n          case AppInterface.IPostLivechatAgentAssigned:\n          case AppInterface.IPostLivechatAgentUnassigned:\n          case AppInterface.IPostLivechatRoomTransferred:\n          case AppInterface.IPostLivechatGuestSaved:\n          case AppInterface.IPostLivechatRoomSaved:\n            return 'livechatEvent';\n\n          default:\n            return 'defaultEvent';\n        }\n      })();\n\n      for (var _len = arguments.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        payload[_key - 1] = arguments[_key];\n      }\n\n      return this[method](event, ...payload);\n    });\n  }\n\n  defaultEvent(inte, payload) {\n    return Promise.asyncApply(() => {\n      return this.orch.getManager().getListenerManager().executeListener(inte, payload);\n    });\n  }\n\n  messageEvent(inte, message) {\n    return Promise.asyncApply(() => {\n      const msg = this.orch.getConverters().get('messages').convertMessage(message);\n      const result = Promise.await(this.orch.getManager().getListenerManager().executeListener(inte, msg));\n\n      if (typeof result === 'boolean') {\n        return result;\n      }\n\n      return this.orch.getConverters().get('messages').convertAppMessage(result);\n    });\n  }\n\n  roomEvent(inte, room) {\n    return Promise.asyncApply(() => {\n      for (var _len2 = arguments.length, payload = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        payload[_key2 - 2] = arguments[_key2];\n      }\n\n      const rm = this.orch.getConverters().get('rooms').convertRoom(room);\n\n      const params = (() => {\n        switch (inte) {\n          case AppInterface.IPreRoomUserJoined:\n          case AppInterface.IPostRoomUserJoined:\n            const [joiningUser, invitingUser] = payload;\n            return {\n              room: rm,\n              joiningUser: this.orch.getConverters().get('users').convertToApp(joiningUser),\n              invitingUser: this.orch.getConverters().get('users').convertToApp(invitingUser)\n            };\n\n          case AppInterface.IPreRoomUserLeave:\n          case AppInterface.IPostRoomUserLeave:\n            const [leavingUser] = payload;\n            return {\n              room: rm,\n              leavingUser: this.orch.getConverters().get('users').convertToApp(leavingUser)\n            };\n\n          default:\n            return rm;\n        }\n      })();\n\n      const result = Promise.await(this.orch.getManager().getListenerManager().executeListener(inte, params));\n\n      if (typeof result === 'boolean') {\n        return result;\n      }\n\n      return this.orch.getConverters().get('rooms').convertAppRoom(result);\n    });\n  }\n\n  livechatEvent(inte, data) {\n    return Promise.asyncApply(() => {\n      switch (inte) {\n        case AppInterface.IPostLivechatAgentAssigned:\n        case AppInterface.IPostLivechatAgentUnassigned:\n          return this.orch.getManager().getListenerManager().executeListener(inte, {\n            room: this.orch.getConverters().get('rooms').convertRoom(data.room),\n            agent: this.orch.getConverters().get('users').convertToApp(data.user)\n          });\n\n        case AppInterface.IPostLivechatRoomTransferred:\n          const converter = data.type === LivechatTransferEventType.AGENT ? 'users' : 'departments';\n          return this.orch.getManager().getListenerManager().executeListener(inte, {\n            type: data.type,\n            room: this.orch.getConverters().get('rooms').convertById(data.room),\n            from: this.orch.getConverters().get(converter).convertById(data.from),\n            to: this.orch.getConverters().get(converter).convertById(data.to)\n          });\n\n        case AppInterface.IPostLivechatGuestSaved:\n          return this.orch.getManager().getListenerManager().executeListener(inte, this.orch.getConverters().get('visitors').convertById(data));\n\n        case AppInterface.IPostLivechatRoomSaved:\n          return this.orch.getManager().getListenerManager().executeListener(inte, this.orch.getConverters().get('rooms').convertById(data));\n\n        default:\n          const room = this.orch.getConverters().get('rooms').convertRoom(data);\n          return this.orch.getManager().getListenerManager().executeListener(inte, room);\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["app/apps/server/bridges/listeners.js"],"names":["module","export","AppListenerBridge","AppInterface","link","v","LivechatTransferEventType","constructor","orch","handleEvent","event","method","IPreMessageSentPrevent","IPreMessageSentExtend","IPreMessageSentModify","IPostMessageSent","IPreMessageDeletePrevent","IPostMessageDeleted","IPreMessageUpdatedPrevent","IPreMessageUpdatedExtend","IPreMessageUpdatedModify","IPostMessageUpdated","IPreRoomCreatePrevent","IPreRoomCreateExtend","IPreRoomCreateModify","IPostRoomCreate","IPreRoomDeletePrevent","IPostRoomDeleted","IPreRoomUserJoined","IPostRoomUserJoined","IPreRoomUserLeave","IPostRoomUserLeave","ILivechatRoomClosedHandler","IPostLivechatRoomStarted","IPostLivechatRoomClosed","IPostLivechatAgentAssigned","IPostLivechatAgentUnassigned","IPostLivechatRoomTransferred","IPostLivechatGuestSaved","IPostLivechatRoomSaved","payload","defaultEvent","inte","getManager","getListenerManager","executeListener","messageEvent","message","msg","getConverters","get","convertMessage","result","convertAppMessage","roomEvent","room","rm","convertRoom","params","joiningUser","invitingUser","convertToApp","leavingUser","convertAppRoom","livechatEvent","data","agent","user","converter","type","AGENT","convertById","from","to"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,iBAAiB,EAAC,MAAIA;AAAvB,CAAd;AAAyD,IAAIC,YAAJ;AAAiBH,MAAM,CAACI,IAAP,CAAY,8CAAZ,EAA2D;AAACD,EAAAA,YAAY,CAACE,CAAD,EAAG;AAACF,IAAAA,YAAY,GAACE,CAAb;AAAe;;AAAhC,CAA3D,EAA6F,CAA7F;AAAgG,IAAIC,yBAAJ;AAA8BN,MAAM,CAACI,IAAP,CAAY,8CAAZ,EAA2D;AAACE,EAAAA,yBAAyB,CAACD,CAAD,EAAG;AAACC,IAAAA,yBAAyB,GAACD,CAA1B;AAA4B;;AAA1D,CAA3D,EAAuH,CAAvH;;AAGjM,MAAMH,iBAAN,CAAwB;AAC9BK,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AAEKC,EAAAA,WAAW,CAACC,KAAD;AAAA,oCAAoB;AACpC,YAAMC,MAAM,GAAG,CAAC,MAAM;AACrB,gBAAQD,KAAR;AACC,eAAKP,YAAY,CAACS,sBAAlB;AACA,eAAKT,YAAY,CAACU,qBAAlB;AACA,eAAKV,YAAY,CAACW,qBAAlB;AACA,eAAKX,YAAY,CAACY,gBAAlB;AACA,eAAKZ,YAAY,CAACa,wBAAlB;AACA,eAAKb,YAAY,CAACc,mBAAlB;AACA,eAAKd,YAAY,CAACe,yBAAlB;AACA,eAAKf,YAAY,CAACgB,wBAAlB;AACA,eAAKhB,YAAY,CAACiB,wBAAlB;AACA,eAAKjB,YAAY,CAACkB,mBAAlB;AACC,mBAAO,cAAP;;AACD,eAAKlB,YAAY,CAACmB,qBAAlB;AACA,eAAKnB,YAAY,CAACoB,oBAAlB;AACA,eAAKpB,YAAY,CAACqB,oBAAlB;AACA,eAAKrB,YAAY,CAACsB,eAAlB;AACA,eAAKtB,YAAY,CAACuB,qBAAlB;AACA,eAAKvB,YAAY,CAACwB,gBAAlB;AACA,eAAKxB,YAAY,CAACyB,kBAAlB;AACA,eAAKzB,YAAY,CAAC0B,mBAAlB;AACA,eAAK1B,YAAY,CAAC2B,iBAAlB;AACA,eAAK3B,YAAY,CAAC4B,kBAAlB;AACC,mBAAO,WAAP;;AACD;AACJ;AACA;;AACI,eAAK5B,YAAY,CAAC6B,0BAAlB;AACA,eAAK7B,YAAY,CAAC8B,wBAAlB;AACA,eAAK9B,YAAY,CAAC+B,uBAAlB;AACA,eAAK/B,YAAY,CAACgC,0BAAlB;AACA,eAAKhC,YAAY,CAACiC,4BAAlB;AACA,eAAKjC,YAAY,CAACkC,4BAAlB;AACA,eAAKlC,YAAY,CAACmC,uBAAlB;AACA,eAAKnC,YAAY,CAACoC,sBAAlB;AACC,mBAAO,eAAP;;AACD;AACC,mBAAO,cAAP;AApCF;AAsCA,OAvCc,GAAf;;AADoC,wCAATC,OAAS;AAATA,QAAAA,OAAS;AAAA;;AA0CpC,aAAO,KAAK7B,MAAL,EAAaD,KAAb,EAAoB,GAAG8B,OAAvB,CAAP;AACA,KA3CgB;AAAA;;AA6CXC,EAAAA,YAAY,CAACC,IAAD,EAAOF,OAAP;AAAA,oCAAgB;AACjC,aAAO,KAAKhC,IAAL,CAAUmC,UAAV,GAAuBC,kBAAvB,GAA4CC,eAA5C,CAA4DH,IAA5D,EAAkEF,OAAlE,CAAP;AACA,KAFiB;AAAA;;AAIZM,EAAAA,YAAY,CAACJ,IAAD,EAAOK,OAAP;AAAA,oCAAgB;AACjC,YAAMC,GAAG,GAAG,KAAKxC,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,UAA9B,EAA0CC,cAA1C,CAAyDJ,OAAzD,CAAZ;AACA,YAAMK,MAAM,iBAAS,KAAK5C,IAAL,CAAUmC,UAAV,GAAuBC,kBAAvB,GAA4CC,eAA5C,CAA4DH,IAA5D,EAAkEM,GAAlE,CAAT,CAAZ;;AAEA,UAAI,OAAOI,MAAP,KAAkB,SAAtB,EAAiC;AAChC,eAAOA,MAAP;AACA;;AACD,aAAO,KAAK5C,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,UAA9B,EAA0CG,iBAA1C,CAA4DD,MAA5D,CAAP;AACA,KARiB;AAAA;;AAUZE,EAAAA,SAAS,CAACZ,IAAD,EAAOa,IAAP;AAAA,oCAAyB;AAAA,yCAATf,OAAS;AAATA,QAAAA,OAAS;AAAA;;AACvC,YAAMgB,EAAE,GAAG,KAAKhD,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCO,WAAvC,CAAmDF,IAAnD,CAAX;;AAEA,YAAMG,MAAM,GAAG,CAAC,MAAM;AACrB,gBAAQhB,IAAR;AACC,eAAKvC,YAAY,CAACyB,kBAAlB;AACA,eAAKzB,YAAY,CAAC0B,mBAAlB;AACC,kBAAM,CAAC8B,WAAD,EAAcC,YAAd,IAA8BpB,OAApC;AACA,mBAAO;AACNe,cAAAA,IAAI,EAAEC,EADA;AAENG,cAAAA,WAAW,EAAE,KAAKnD,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCW,YAAvC,CAAoDF,WAApD,CAFP;AAGNC,cAAAA,YAAY,EAAE,KAAKpD,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCW,YAAvC,CAAoDD,YAApD;AAHR,aAAP;;AAKD,eAAKzD,YAAY,CAAC2B,iBAAlB;AACA,eAAK3B,YAAY,CAAC4B,kBAAlB;AACC,kBAAM,CAAC+B,WAAD,IAAgBtB,OAAtB;AACA,mBAAO;AACNe,cAAAA,IAAI,EAAEC,EADA;AAENM,cAAAA,WAAW,EAAE,KAAKtD,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCW,YAAvC,CAAoDC,WAApD;AAFP,aAAP;;AAID;AACC,mBAAON,EAAP;AAjBF;AAmBA,OApBc,GAAf;;AAsBA,YAAMJ,MAAM,iBAAS,KAAK5C,IAAL,CAAUmC,UAAV,GAAuBC,kBAAvB,GAA4CC,eAA5C,CAA4DH,IAA5D,EAAkEgB,MAAlE,CAAT,CAAZ;;AAEA,UAAI,OAAON,MAAP,KAAkB,SAAtB,EAAiC;AAChC,eAAOA,MAAP;AACA;;AACD,aAAO,KAAK5C,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCa,cAAvC,CAAsDX,MAAtD,CAAP;AACA,KA/Bc;AAAA;;AAiCTY,EAAAA,aAAa,CAACtB,IAAD,EAAOuB,IAAP;AAAA,oCAAa;AAC/B,cAAQvB,IAAR;AACC,aAAKvC,YAAY,CAACgC,0BAAlB;AACA,aAAKhC,YAAY,CAACiC,4BAAlB;AACC,iBAAO,KAAK5B,IAAL,CACLmC,UADK,GAELC,kBAFK,GAGLC,eAHK,CAGWH,IAHX,EAGiB;AACtBa,YAAAA,IAAI,EAAE,KAAK/C,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCO,WAAvC,CAAmDQ,IAAI,CAACV,IAAxD,CADgB;AAEtBW,YAAAA,KAAK,EAAE,KAAK1D,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCW,YAAvC,CAAoDI,IAAI,CAACE,IAAzD;AAFe,WAHjB,CAAP;;AAOD,aAAKhE,YAAY,CAACkC,4BAAlB;AACC,gBAAM+B,SAAS,GAAGH,IAAI,CAACI,IAAL,KAAc/D,yBAAyB,CAACgE,KAAxC,GAAgD,OAAhD,GAA0D,aAA5E;AAEA,iBAAO,KAAK9D,IAAL,CACLmC,UADK,GAELC,kBAFK,GAGLC,eAHK,CAGWH,IAHX,EAGiB;AACtB2B,YAAAA,IAAI,EAAEJ,IAAI,CAACI,IADW;AAEtBd,YAAAA,IAAI,EAAE,KAAK/C,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCqB,WAAvC,CAAmDN,IAAI,CAACV,IAAxD,CAFgB;AAGtBiB,YAAAA,IAAI,EAAE,KAAKhE,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8BkB,SAA9B,EAAyCG,WAAzC,CAAqDN,IAAI,CAACO,IAA1D,CAHgB;AAItBC,YAAAA,EAAE,EAAE,KAAKjE,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8BkB,SAA9B,EAAyCG,WAAzC,CAAqDN,IAAI,CAACQ,EAA1D;AAJkB,WAHjB,CAAP;;AASD,aAAKtE,YAAY,CAACmC,uBAAlB;AACC,iBAAO,KAAK9B,IAAL,CACLmC,UADK,GAELC,kBAFK,GAGLC,eAHK,CAGWH,IAHX,EAGiB,KAAKlC,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,UAA9B,EAA0CqB,WAA1C,CAAsDN,IAAtD,CAHjB,CAAP;;AAID,aAAK9D,YAAY,CAACoC,sBAAlB;AACC,iBAAO,KAAK/B,IAAL,CAAUmC,UAAV,GAAuBC,kBAAvB,GAA4CC,eAA5C,CAA4DH,IAA5D,EAAkE,KAAKlC,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCqB,WAAvC,CAAmDN,IAAnD,CAAlE,CAAP;;AACD;AACC,gBAAMV,IAAI,GAAG,KAAK/C,IAAL,CAAUyC,aAAV,GAA0BC,GAA1B,CAA8B,OAA9B,EAAuCO,WAAvC,CAAmDQ,IAAnD,CAAb;AAEA,iBAAO,KAAKzD,IAAL,CAAUmC,UAAV,GAAuBC,kBAAvB,GAA4CC,eAA5C,CAA4DH,IAA5D,EAAkEa,IAAlE,CAAP;AAhCF;AAkCA,KAnCkB;AAAA;;AAjGW","sourcesContent":["import { AppInterface } from '@rocket.chat/apps-engine/definition/metadata';\nimport { LivechatTransferEventType } from '@rocket.chat/apps-engine/definition/livechat';\n\nexport class AppListenerBridge {\n\tconstructor(orch) {\n\t\tthis.orch = orch;\n\t}\n\n\tasync handleEvent(event, ...payload) {\n\t\tconst method = (() => {\n\t\t\tswitch (event) {\n\t\t\t\tcase AppInterface.IPreMessageSentPrevent:\n\t\t\t\tcase AppInterface.IPreMessageSentExtend:\n\t\t\t\tcase AppInterface.IPreMessageSentModify:\n\t\t\t\tcase AppInterface.IPostMessageSent:\n\t\t\t\tcase AppInterface.IPreMessageDeletePrevent:\n\t\t\t\tcase AppInterface.IPostMessageDeleted:\n\t\t\t\tcase AppInterface.IPreMessageUpdatedPrevent:\n\t\t\t\tcase AppInterface.IPreMessageUpdatedExtend:\n\t\t\t\tcase AppInterface.IPreMessageUpdatedModify:\n\t\t\t\tcase AppInterface.IPostMessageUpdated:\n\t\t\t\t\treturn 'messageEvent';\n\t\t\t\tcase AppInterface.IPreRoomCreatePrevent:\n\t\t\t\tcase AppInterface.IPreRoomCreateExtend:\n\t\t\t\tcase AppInterface.IPreRoomCreateModify:\n\t\t\t\tcase AppInterface.IPostRoomCreate:\n\t\t\t\tcase AppInterface.IPreRoomDeletePrevent:\n\t\t\t\tcase AppInterface.IPostRoomDeleted:\n\t\t\t\tcase AppInterface.IPreRoomUserJoined:\n\t\t\t\tcase AppInterface.IPostRoomUserJoined:\n\t\t\t\tcase AppInterface.IPreRoomUserLeave:\n\t\t\t\tcase AppInterface.IPostRoomUserLeave:\n\t\t\t\t\treturn 'roomEvent';\n\t\t\t\t/**\n\t\t\t\t * @deprecated please prefer the AppInterface.IPostLivechatRoomClosed event\n\t\t\t\t */\n\t\t\t\tcase AppInterface.ILivechatRoomClosedHandler:\n\t\t\t\tcase AppInterface.IPostLivechatRoomStarted:\n\t\t\t\tcase AppInterface.IPostLivechatRoomClosed:\n\t\t\t\tcase AppInterface.IPostLivechatAgentAssigned:\n\t\t\t\tcase AppInterface.IPostLivechatAgentUnassigned:\n\t\t\t\tcase AppInterface.IPostLivechatRoomTransferred:\n\t\t\t\tcase AppInterface.IPostLivechatGuestSaved:\n\t\t\t\tcase AppInterface.IPostLivechatRoomSaved:\n\t\t\t\t\treturn 'livechatEvent';\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'defaultEvent';\n\t\t\t}\n\t\t})();\n\n\t\treturn this[method](event, ...payload);\n\t}\n\n\tasync defaultEvent(inte, payload) {\n\t\treturn this.orch.getManager().getListenerManager().executeListener(inte, payload);\n\t}\n\n\tasync messageEvent(inte, message) {\n\t\tconst msg = this.orch.getConverters().get('messages').convertMessage(message);\n\t\tconst result = await this.orch.getManager().getListenerManager().executeListener(inte, msg);\n\n\t\tif (typeof result === 'boolean') {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.orch.getConverters().get('messages').convertAppMessage(result);\n\t}\n\n\tasync roomEvent(inte, room, ...payload) {\n\t\tconst rm = this.orch.getConverters().get('rooms').convertRoom(room);\n\n\t\tconst params = (() => {\n\t\t\tswitch (inte) {\n\t\t\t\tcase AppInterface.IPreRoomUserJoined:\n\t\t\t\tcase AppInterface.IPostRoomUserJoined:\n\t\t\t\t\tconst [joiningUser, invitingUser] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\troom: rm,\n\t\t\t\t\t\tjoiningUser: this.orch.getConverters().get('users').convertToApp(joiningUser),\n\t\t\t\t\t\tinvitingUser: this.orch.getConverters().get('users').convertToApp(invitingUser),\n\t\t\t\t\t};\n\t\t\t\tcase AppInterface.IPreRoomUserLeave:\n\t\t\t\tcase AppInterface.IPostRoomUserLeave:\n\t\t\t\t\tconst [leavingUser] = payload;\n\t\t\t\t\treturn {\n\t\t\t\t\t\troom: rm,\n\t\t\t\t\t\tleavingUser: this.orch.getConverters().get('users').convertToApp(leavingUser),\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn rm;\n\t\t\t}\n\t\t})();\n\n\t\tconst result = await this.orch.getManager().getListenerManager().executeListener(inte, params);\n\n\t\tif (typeof result === 'boolean') {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.orch.getConverters().get('rooms').convertAppRoom(result);\n\t}\n\n\tasync livechatEvent(inte, data) {\n\t\tswitch (inte) {\n\t\t\tcase AppInterface.IPostLivechatAgentAssigned:\n\t\t\tcase AppInterface.IPostLivechatAgentUnassigned:\n\t\t\t\treturn this.orch\n\t\t\t\t\t.getManager()\n\t\t\t\t\t.getListenerManager()\n\t\t\t\t\t.executeListener(inte, {\n\t\t\t\t\t\troom: this.orch.getConverters().get('rooms').convertRoom(data.room),\n\t\t\t\t\t\tagent: this.orch.getConverters().get('users').convertToApp(data.user),\n\t\t\t\t\t});\n\t\t\tcase AppInterface.IPostLivechatRoomTransferred:\n\t\t\t\tconst converter = data.type === LivechatTransferEventType.AGENT ? 'users' : 'departments';\n\n\t\t\t\treturn this.orch\n\t\t\t\t\t.getManager()\n\t\t\t\t\t.getListenerManager()\n\t\t\t\t\t.executeListener(inte, {\n\t\t\t\t\t\ttype: data.type,\n\t\t\t\t\t\troom: this.orch.getConverters().get('rooms').convertById(data.room),\n\t\t\t\t\t\tfrom: this.orch.getConverters().get(converter).convertById(data.from),\n\t\t\t\t\t\tto: this.orch.getConverters().get(converter).convertById(data.to),\n\t\t\t\t\t});\n\t\t\tcase AppInterface.IPostLivechatGuestSaved:\n\t\t\t\treturn this.orch\n\t\t\t\t\t.getManager()\n\t\t\t\t\t.getListenerManager()\n\t\t\t\t\t.executeListener(inte, this.orch.getConverters().get('visitors').convertById(data));\n\t\t\tcase AppInterface.IPostLivechatRoomSaved:\n\t\t\t\treturn this.orch.getManager().getListenerManager().executeListener(inte, this.orch.getConverters().get('rooms').convertById(data));\n\t\t\tdefault:\n\t\t\t\tconst room = this.orch.getConverters().get('rooms').convertRoom(data);\n\n\t\t\t\treturn this.orch.getManager().getListenerManager().executeListener(inte, room);\n\t\t}\n\t}\n}\n"]},"sourceType":"module","hash":"1ba4d0e149bb56c2e452468b7a7172034db9b045"}

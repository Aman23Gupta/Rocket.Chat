{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/loadMessageHistory.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/loadMessageHistory.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/loadMessageHistory.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/loadMessageHistory.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/loadMessageHistory.js"}},"code":"module.export({\n  loadMessageHistory: () => loadMessageHistory\n});\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet Messages, Rooms;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 1);\nlet normalizeMessagesForUser;\nmodule.link(\"../../../utils/server/lib/normalizeMessagesForUser\", {\n  normalizeMessagesForUser(v) {\n    normalizeMessagesForUser = v;\n  }\n\n}, 2);\nlet getHiddenSystemMessages;\nmodule.link(\"../lib/getHiddenSystemMessages\", {\n  getHiddenSystemMessages(v) {\n    getHiddenSystemMessages = v;\n  }\n\n}, 3);\n\nconst loadMessageHistory = function loadMessageHistory(_ref) {\n  let {\n    userId,\n    rid,\n    end,\n    limit = 20,\n    ls,\n    showThreadMessages = true\n  } = _ref;\n  const room = Rooms.findOneById(rid, {\n    fields: {\n      sysMes: 1\n    }\n  });\n  const hiddenMessageTypes = getHiddenSystemMessages(room);\n  const options = {\n    sort: {\n      ts: -1\n    },\n    limit\n  };\n\n  if (!settings.get('Message_ShowEditedStatus')) {\n    options.fields = {\n      editedAt: 0\n    };\n  }\n\n  const records = end != null ? Messages.findVisibleByRoomIdBeforeTimestampNotContainingTypes(rid, end, hiddenMessageTypes, options, showThreadMessages).fetch() : Messages.findVisibleByRoomIdNotContainingTypes(rid, hiddenMessageTypes, options, showThreadMessages).fetch();\n  const messages = normalizeMessagesForUser(records, userId);\n  let unreadNotLoaded = 0;\n  let firstUnread;\n\n  if (ls != null) {\n    const firstMessage = messages[messages.length - 1];\n\n    if ((firstMessage != null ? firstMessage.ts : undefined) > ls) {\n      delete options.limit;\n      const unreadMessages = Messages.findVisibleByRoomIdBetweenTimestampsNotContainingTypes(rid, ls, firstMessage.ts, hiddenMessageTypes, {\n        limit: 1,\n        sort: {\n          ts: 1\n        }\n      }, showThreadMessages);\n      firstUnread = unreadMessages.fetch()[0];\n      unreadNotLoaded = unreadMessages.count();\n    }\n  }\n\n  return {\n    messages,\n    firstUnread,\n    unreadNotLoaded\n  };\n};","map":{"version":3,"sources":["app/lib/server/functions/loadMessageHistory.js"],"names":["module","export","loadMessageHistory","settings","link","v","Messages","Rooms","normalizeMessagesForUser","getHiddenSystemMessages","userId","rid","end","limit","ls","showThreadMessages","room","findOneById","fields","sysMes","hiddenMessageTypes","options","sort","ts","get","editedAt","records","findVisibleByRoomIdBeforeTimestampNotContainingTypes","fetch","findVisibleByRoomIdNotContainingTypes","messages","unreadNotLoaded","firstUnread","firstMessage","length","undefined","unreadMessages","findVisibleByRoomIdBetweenTimestampsNotContainingTypes","count"],"mappings":"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","sourcesContent":["import { settings } from '../../../settings/server';\nimport { Messages, Rooms } from '../../../models/server';\nimport { normalizeMessagesForUser } from '../../../utils/server/lib/normalizeMessagesForUser';\nimport { getHiddenSystemMessages } from '../lib/getHiddenSystemMessages';\n\nexport const loadMessageHistory = function loadMessageHistory({ userId, rid, end, limit = 20, ls, showThreadMessages = true }) {\n\tconst room = Rooms.findOneById(rid, { fields: { sysMes: 1 } });\n\n\tconst hiddenMessageTypes = getHiddenSystemMessages(room);\n\n\tconst options = {\n\t\tsort: {\n\t\t\tts: -1,\n\t\t},\n\t\tlimit,\n\t};\n\n\tif (!settings.get('Message_ShowEditedStatus')) {\n\t\toptions.fields = {\n\t\t\teditedAt: 0,\n\t\t};\n\t}\n\n\tconst records =\n\t\tend != null\n\t\t\t? Messages.findVisibleByRoomIdBeforeTimestampNotContainingTypes(rid, end, hiddenMessageTypes, options, showThreadMessages).fetch()\n\t\t\t: Messages.findVisibleByRoomIdNotContainingTypes(rid, hiddenMessageTypes, options, showThreadMessages).fetch();\n\tconst messages = normalizeMessagesForUser(records, userId);\n\tlet unreadNotLoaded = 0;\n\tlet firstUnread;\n\n\tif (ls != null) {\n\t\tconst firstMessage = messages[messages.length - 1];\n\n\t\tif ((firstMessage != null ? firstMessage.ts : undefined) > ls) {\n\t\t\tdelete options.limit;\n\t\t\tconst unreadMessages = Messages.findVisibleByRoomIdBetweenTimestampsNotContainingTypes(\n\t\t\t\trid,\n\t\t\t\tls,\n\t\t\t\tfirstMessage.ts,\n\t\t\t\thiddenMessageTypes,\n\t\t\t\t{\n\t\t\t\t\tlimit: 1,\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tshowThreadMessages,\n\t\t\t);\n\n\t\t\tfirstUnread = unreadMessages.fetch()[0];\n\t\t\tunreadNotLoaded = unreadMessages.count();\n\t\t}\n\t}\n\n\treturn {\n\t\tmessages,\n\t\tfirstUnread,\n\t\tunreadNotLoaded,\n\t};\n};\n"]},"sourceType":"module","hash":"3df0f2ef1d7088df82478443fb7b10a8cd6a6c07"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/contact.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/v1/contact.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/contact.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/v1/contact.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/v1/contact.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nlet Contacts;\nmodule.link(\"../../lib/Contacts\", {\n  Contacts(v) {\n    Contacts = v;\n  }\n\n}, 3);\nlet LivechatVisitors;\nmodule.link(\"../../../../models\", {\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  }\n\n}, 4);\nAPI.v1.addRoute('omnichannel/contact', {\n  authRequired: true\n}, {\n  post() {\n    try {\n      check(this.bodyParams, {\n        _id: Match.Maybe(String),\n        token: String,\n        name: String,\n        email: Match.Maybe(String),\n        phone: Match.Maybe(String),\n        customFields: Match.Maybe(Object),\n        contactManager: Match.Maybe(Object)\n      });\n      const contact = Contacts.registerContact(this.bodyParams);\n      return API.v1.success({\n        contact\n      });\n    } catch (e) {\n      return API.v1.failure(e);\n    }\n  },\n\n  get() {\n    check(this.queryParams, {\n      contactId: String\n    });\n    const contact = Promise.await(LivechatVisitors.findOneById(this.queryParams.contactId));\n    return API.v1.success({\n      contact\n    });\n  }\n\n});\nAPI.v1.addRoute('omnichannel/contact.search', {\n  authRequired: true\n}, {\n  get() {\n    try {\n      check(this.queryParams, {\n        email: Match.Maybe(String),\n        phone: Match.Maybe(String)\n      });\n      const {\n        email,\n        phone\n      } = this.queryParams;\n\n      if (!email && !phone) {\n        throw new Meteor.Error('error-invalid-params');\n      }\n\n      const query = Object.assign({}, _objectSpread(_objectSpread({}, email && {\n        visitorEmails: {\n          address: email\n        }\n      }), phone && {\n        phone: {\n          phoneNumber: phone\n        }\n      }));\n      const contact = Promise.await(LivechatVisitors.findOne(query));\n      return API.v1.success({\n        contact\n      });\n    } catch (e) {\n      return API.v1.failure(e);\n    }\n  }\n\n});","map":{"version":3,"sources":["app/livechat/server/api/v1/contact.js"],"names":["_objectSpread","module","link","default","v","Match","check","Meteor","API","Contacts","LivechatVisitors","v1","addRoute","authRequired","post","bodyParams","_id","Maybe","String","token","name","email","phone","customFields","Object","contactManager","contact","registerContact","success","e","failure","get","queryParams","contactId","Promise","await","findOneById","Error","query","assign","visitorEmails","address","phoneNumber","findOne"],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { API } from '../../../../api/server';\nimport { Contacts } from '../../lib/Contacts';\nimport { LivechatVisitors } from '../../../../models';\n\nAPI.v1.addRoute(\n\t'omnichannel/contact',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\ttry {\n\t\t\t\tcheck(this.bodyParams, {\n\t\t\t\t\t_id: Match.Maybe(String),\n\t\t\t\t\ttoken: String,\n\t\t\t\t\tname: String,\n\t\t\t\t\temail: Match.Maybe(String),\n\t\t\t\t\tphone: Match.Maybe(String),\n\t\t\t\t\tcustomFields: Match.Maybe(Object),\n\t\t\t\t\tcontactManager: Match.Maybe(Object),\n\t\t\t\t});\n\n\t\t\t\tconst contact = Contacts.registerContact(this.bodyParams);\n\n\t\t\t\treturn API.v1.success({ contact });\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t\tget() {\n\t\t\tcheck(this.queryParams, {\n\t\t\t\tcontactId: String,\n\t\t\t});\n\n\t\t\tconst contact = Promise.await(LivechatVisitors.findOneById(this.queryParams.contactId));\n\n\t\t\treturn API.v1.success({ contact });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'omnichannel/contact.search',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\ttry {\n\t\t\t\tcheck(this.queryParams, {\n\t\t\t\t\temail: Match.Maybe(String),\n\t\t\t\t\tphone: Match.Maybe(String),\n\t\t\t\t});\n\n\t\t\t\tconst { email, phone } = this.queryParams;\n\n\t\t\t\tif (!email && !phone) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-params');\n\t\t\t\t}\n\n\t\t\t\tconst query = Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\t...(email && { visitorEmails: { address: email } }),\n\t\t\t\t\t\t...(phone && { phone: { phoneNumber: phone } }),\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tconst contact = Promise.await(LivechatVisitors.findOne(query));\n\t\t\t\treturn API.v1.success({ contact });\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"1f5635865f5177885f43ac13296623265659e393"}

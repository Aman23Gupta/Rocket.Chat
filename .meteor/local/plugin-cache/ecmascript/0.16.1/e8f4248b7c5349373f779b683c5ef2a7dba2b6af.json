{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/analytics/agents.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/lib/analytics/agents.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/analytics/agents.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/lib/analytics/agents.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/lib/analytics/agents.js"}},"code":"module.export({\n  findAllAverageServiceTime: () => findAllAverageServiceTime,\n  findAllServiceTime: () => findAllServiceTime,\n  findAvailableServiceTimeHistory: () => findAvailableServiceTimeHistory\n});\nlet LivechatRooms, LivechatAgentActivity;\nmodule.link(\"../../../../models/server/raw\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  LivechatAgentActivity(v) {\n    LivechatAgentActivity = v;\n  }\n\n}, 0);\n\nconst findAllAverageServiceTimeAsync = _ref => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    options = {}\n  } = _ref;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(LivechatRooms.findAllAverageServiceTimeByAgents({\n    start,\n    end,\n    onlyCount: true\n  }).toArray());\n  return {\n    agents: Promise.await(LivechatRooms.findAllAverageServiceTimeByAgents({\n      start,\n      end,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllServiceTimeAsync = _ref2 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    options = {}\n  } = _ref2;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(LivechatRooms.findAllServiceTimeByAgent({\n    start,\n    end,\n    onlyCount: true\n  }).toArray());\n  return {\n    agents: Promise.await(LivechatRooms.findAllServiceTimeByAgent({\n      start,\n      end,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAvailableServiceTimeHistoryAsync = _ref3 => Promise.asyncApply(() => {\n  let {\n    start,\n    end,\n    fullReport,\n    options = {}\n  } = _ref3;\n\n  if (!start || !end) {\n    throw new Error('\"start\" and \"end\" must be provided');\n  }\n\n  const total = Promise.await(LivechatAgentActivity.findAvailableServiceTimeHistory({\n    start,\n    end,\n    fullReport,\n    onlyCount: true\n  }).toArray());\n  return {\n    agents: Promise.await(LivechatAgentActivity.findAvailableServiceTimeHistory({\n      start,\n      end,\n      fullReport,\n      options\n    }).toArray()),\n    total: total.length ? total[0].total : 0\n  };\n});\n\nconst findAllAverageServiceTime = _ref4 => {\n  let {\n    start,\n    end,\n    options\n  } = _ref4;\n  return Promise.await(findAllAverageServiceTimeAsync({\n    start,\n    end,\n    options\n  }));\n};\n\nconst findAllServiceTime = _ref5 => {\n  let {\n    start,\n    end,\n    options\n  } = _ref5;\n  return Promise.await(findAllServiceTimeAsync({\n    start,\n    end,\n    options\n  }));\n};\n\nconst findAvailableServiceTimeHistory = _ref6 => {\n  let {\n    start,\n    end,\n    fullReport,\n    options\n  } = _ref6;\n  return Promise.await(findAvailableServiceTimeHistoryAsync({\n    start,\n    end,\n    fullReport,\n    options\n  }));\n};","map":{"version":3,"sources":["app/livechat/server/lib/analytics/agents.js"],"names":["module","export","findAllAverageServiceTime","findAllServiceTime","findAvailableServiceTimeHistory","LivechatRooms","LivechatAgentActivity","link","v","findAllAverageServiceTimeAsync","start","end","options","Error","total","findAllAverageServiceTimeByAgents","onlyCount","toArray","agents","length","findAllServiceTimeAsync","findAllServiceTimeByAgent","findAvailableServiceTimeHistoryAsync","fullReport","Promise","await"],"mappings":"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","sourcesContent":["import { LivechatRooms, LivechatAgentActivity } from '../../../../models/server/raw';\n\nconst findAllAverageServiceTimeAsync = async ({ start, end, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllAverageServiceTimeByAgents({\n\t\tstart,\n\t\tend,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatRooms.findAllAverageServiceTimeByAgents({\n\t\t\tstart,\n\t\t\tend,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nconst findAllServiceTimeAsync = async ({ start, end, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatRooms.findAllServiceTimeByAgent({\n\t\tstart,\n\t\tend,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatRooms.findAllServiceTimeByAgent({ start, end, options }).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nconst findAvailableServiceTimeHistoryAsync = async ({ start, end, fullReport, options = {} }) => {\n\tif (!start || !end) {\n\t\tthrow new Error('\"start\" and \"end\" must be provided');\n\t}\n\tconst total = await LivechatAgentActivity.findAvailableServiceTimeHistory({\n\t\tstart,\n\t\tend,\n\t\tfullReport,\n\t\tonlyCount: true,\n\t}).toArray();\n\treturn {\n\t\tagents: await LivechatAgentActivity.findAvailableServiceTimeHistory({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tfullReport,\n\t\t\toptions,\n\t\t}).toArray(),\n\t\ttotal: total.length ? total[0].total : 0,\n\t};\n};\n\nexport const findAllAverageServiceTime = ({ start, end, options }) =>\n\tPromise.await(findAllAverageServiceTimeAsync({ start, end, options }));\nexport const findAllServiceTime = ({ start, end, options }) => Promise.await(findAllServiceTimeAsync({ start, end, options }));\nexport const findAvailableServiceTimeHistory = ({ start, end, fullReport, options }) =>\n\tPromise.await(findAvailableServiceTimeHistoryAsync({ start, end, fullReport, options }));\n"]},"sourceType":"module","hash":"e8f4248b7c5349373f779b683c5ef2a7dba2b6af"}

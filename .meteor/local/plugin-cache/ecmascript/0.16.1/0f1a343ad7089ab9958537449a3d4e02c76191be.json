{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/sms/server/services/twilio.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/sms/server/services/twilio.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/sms/server/services/twilio.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/sms/server/services/twilio.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/sms/server/services/twilio.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet twilio;\nmodule.link(\"twilio\", {\n  default(v) {\n    twilio = v;\n  }\n\n}, 1);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 2);\nlet filesize;\nmodule.link(\"filesize\", {\n  default(v) {\n    filesize = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet SMS;\nmodule.link(\"../SMS\", {\n  SMS(v) {\n    SMS = v;\n  }\n\n}, 5);\nlet fileUploadIsValidContentType;\nmodule.link(\"../../../utils/lib/fileUploadRestrictions\", {\n  fileUploadIsValidContentType(v) {\n    fileUploadIsValidContentType = v;\n  }\n\n}, 6);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 7);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 8);\nconst MAX_FILE_SIZE = 5242880;\n\nconst notifyAgent = (userId, rid, msg) => api.broadcast('notify.ephemeralMessage', userId, rid, {\n  msg\n});\n\nclass Twilio {\n  constructor() {\n    this.accountSid = settings.get('SMS_Twilio_Account_SID');\n    this.authToken = settings.get('SMS_Twilio_authToken');\n    this.fileUploadEnabled = settings.get('SMS_Twilio_FileUpload_Enabled');\n    this.mediaTypeWhiteList = settings.get('SMS_Twilio_FileUpload_MediaTypeWhiteList');\n  }\n\n  parse(data) {\n    let numMedia = 0;\n    const returnData = {\n      from: data.From,\n      to: data.To,\n      body: data.Body,\n      extra: {\n        toCountry: data.ToCountry,\n        toState: data.ToState,\n        toCity: data.ToCity,\n        toZip: data.ToZip,\n        fromCountry: data.FromCountry,\n        fromState: data.FromState,\n        fromCity: data.FromCity,\n        fromZip: data.FromZip,\n        fromLatitude: data.Latitude,\n        fromLongitude: data.Longitude\n      }\n    };\n\n    if (data.NumMedia) {\n      numMedia = parseInt(data.NumMedia, 10);\n    }\n\n    if (isNaN(numMedia)) {\n      SystemLogger.error(\"Error parsing NumMedia \".concat(data.NumMedia));\n      return returnData;\n    }\n\n    returnData.media = [];\n\n    for (let mediaIndex = 0; mediaIndex < numMedia; mediaIndex++) {\n      const media = {\n        url: '',\n        contentType: ''\n      };\n      const mediaUrl = data[\"MediaUrl\".concat(mediaIndex)];\n      const contentType = data[\"MediaContentType\".concat(mediaIndex)];\n      media.url = mediaUrl;\n      media.contentType = contentType;\n      returnData.media.push(media);\n    }\n\n    return returnData;\n  }\n\n  send(fromNumber, toNumber, message, extraData) {\n    const client = twilio(this.accountSid, this.authToken);\n    let body = message;\n    let mediaUrl;\n    const defaultLanguage = settings.get('Language') || 'en';\n\n    if (extraData && extraData.fileUpload) {\n      const {\n        rid,\n        userId,\n        fileUpload: {\n          size,\n          type,\n          publicFilePath\n        }\n      } = extraData;\n      const user = userId ? Meteor.users.findOne(userId) : null;\n      const lng = user && user.language || defaultLanguage;\n      let reason;\n\n      if (!this.fileUploadEnabled) {\n        reason = TAPi18n.__('FileUpload_Disabled', {\n          lng\n        });\n      } else if (size > MAX_FILE_SIZE) {\n        reason = TAPi18n.__('File_exceeds_allowed_size_of_bytes', {\n          size: filesize(MAX_FILE_SIZE),\n          lng\n        });\n      } else if (!fileUploadIsValidContentType(type, this.fileUploadMediaTypeWhiteList)) {\n        reason = TAPi18n.__('File_type_is_not_accepted', {\n          lng\n        });\n      }\n\n      if (reason) {\n        rid && userId && notifyAgent(userId, rid, reason);\n        return SystemLogger.error(\"(Twilio) -> \".concat(reason));\n      }\n\n      mediaUrl = [publicFilePath];\n    }\n\n    let persistentAction;\n\n    if (extraData && extraData.location) {\n      const [longitude, latitude] = extraData.location.coordinates;\n      persistentAction = \"geo:\".concat(latitude, \",\").concat(longitude);\n      body = TAPi18n.__('Location', {\n        lng: defaultLanguage\n      });\n    }\n\n    client.messages.create(_objectSpread(_objectSpread({\n      to: toNumber,\n      from: fromNumber,\n      body\n    }, mediaUrl && {\n      mediaUrl\n    }), persistentAction && {\n      persistentAction\n    }));\n  }\n\n  response() {\n    return {\n      headers: {\n        'Content-Type': 'text/xml'\n      },\n      body: '<Response></Response>'\n    };\n  }\n\n  error(error) {\n    let message = '';\n\n    if (error.reason) {\n      message = \"<Message>\".concat(error.reason, \"</Message>\");\n    }\n\n    return {\n      headers: {\n        'Content-Type': 'text/xml'\n      },\n      body: \"<Response>\".concat(message, \"</Response>\")\n    };\n  }\n\n}\n\nSMS.registerService('twilio', Twilio);","map":{"version":3,"sources":["app/sms/server/services/twilio.js"],"names":["_objectSpread","module","link","default","v","Meteor","twilio","TAPi18n","filesize","settings","SMS","fileUploadIsValidContentType","api","SystemLogger","MAX_FILE_SIZE","notifyAgent","userId","rid","msg","broadcast","Twilio","constructor","accountSid","get","authToken","fileUploadEnabled","mediaTypeWhiteList","parse","data","numMedia","returnData","from","From","to","To","body","Body","extra","toCountry","ToCountry","toState","ToState","toCity","ToCity","toZip","ToZip","fromCountry","FromCountry","fromState","FromState","fromCity","FromCity","fromZip","FromZip","fromLatitude","Latitude","fromLongitude","Longitude","NumMedia","parseInt","isNaN","error","media","mediaIndex","url","contentType","mediaUrl","push","send","fromNumber","toNumber","message","extraData","client","defaultLanguage","fileUpload","size","type","publicFilePath","user","users","findOne","lng","language","reason","__","fileUploadMediaTypeWhiteList","persistentAction","location","longitude","latitude","coordinates","messages","create","response","headers","registerService"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport twilio from 'twilio';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport filesize from 'filesize';\n\nimport { settings } from '../../../settings';\nimport { SMS } from '../SMS';\nimport { fileUploadIsValidContentType } from '../../../utils/lib/fileUploadRestrictions';\nimport { api } from '../../../../server/sdk/api';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\nconst MAX_FILE_SIZE = 5242880;\n\nconst notifyAgent = (userId, rid, msg) =>\n\tapi.broadcast('notify.ephemeralMessage', userId, rid, {\n\t\tmsg,\n\t});\n\nclass Twilio {\n\tconstructor() {\n\t\tthis.accountSid = settings.get('SMS_Twilio_Account_SID');\n\t\tthis.authToken = settings.get('SMS_Twilio_authToken');\n\t\tthis.fileUploadEnabled = settings.get('SMS_Twilio_FileUpload_Enabled');\n\t\tthis.mediaTypeWhiteList = settings.get('SMS_Twilio_FileUpload_MediaTypeWhiteList');\n\t}\n\n\tparse(data) {\n\t\tlet numMedia = 0;\n\n\t\tconst returnData = {\n\t\t\tfrom: data.From,\n\t\t\tto: data.To,\n\t\t\tbody: data.Body,\n\n\t\t\textra: {\n\t\t\t\ttoCountry: data.ToCountry,\n\t\t\t\ttoState: data.ToState,\n\t\t\t\ttoCity: data.ToCity,\n\t\t\t\ttoZip: data.ToZip,\n\t\t\t\tfromCountry: data.FromCountry,\n\t\t\t\tfromState: data.FromState,\n\t\t\t\tfromCity: data.FromCity,\n\t\t\t\tfromZip: data.FromZip,\n\t\t\t\tfromLatitude: data.Latitude,\n\t\t\t\tfromLongitude: data.Longitude,\n\t\t\t},\n\t\t};\n\n\t\tif (data.NumMedia) {\n\t\t\tnumMedia = parseInt(data.NumMedia, 10);\n\t\t}\n\n\t\tif (isNaN(numMedia)) {\n\t\t\tSystemLogger.error(`Error parsing NumMedia ${data.NumMedia}`);\n\t\t\treturn returnData;\n\t\t}\n\n\t\treturnData.media = [];\n\n\t\tfor (let mediaIndex = 0; mediaIndex < numMedia; mediaIndex++) {\n\t\t\tconst media = {\n\t\t\t\turl: '',\n\t\t\t\tcontentType: '',\n\t\t\t};\n\n\t\t\tconst mediaUrl = data[`MediaUrl${mediaIndex}`];\n\t\t\tconst contentType = data[`MediaContentType${mediaIndex}`];\n\n\t\t\tmedia.url = mediaUrl;\n\t\t\tmedia.contentType = contentType;\n\n\t\t\treturnData.media.push(media);\n\t\t}\n\n\t\treturn returnData;\n\t}\n\n\tsend(fromNumber, toNumber, message, extraData) {\n\t\tconst client = twilio(this.accountSid, this.authToken);\n\t\tlet body = message;\n\n\t\tlet mediaUrl;\n\t\tconst defaultLanguage = settings.get('Language') || 'en';\n\t\tif (extraData && extraData.fileUpload) {\n\t\t\tconst {\n\t\t\t\trid,\n\t\t\t\tuserId,\n\t\t\t\tfileUpload: { size, type, publicFilePath },\n\t\t\t} = extraData;\n\t\t\tconst user = userId ? Meteor.users.findOne(userId) : null;\n\t\t\tconst lng = (user && user.language) || defaultLanguage;\n\n\t\t\tlet reason;\n\t\t\tif (!this.fileUploadEnabled) {\n\t\t\t\treason = TAPi18n.__('FileUpload_Disabled', { lng });\n\t\t\t} else if (size > MAX_FILE_SIZE) {\n\t\t\t\treason = TAPi18n.__('File_exceeds_allowed_size_of_bytes', {\n\t\t\t\t\tsize: filesize(MAX_FILE_SIZE),\n\t\t\t\t\tlng,\n\t\t\t\t});\n\t\t\t} else if (!fileUploadIsValidContentType(type, this.fileUploadMediaTypeWhiteList)) {\n\t\t\t\treason = TAPi18n.__('File_type_is_not_accepted', { lng });\n\t\t\t}\n\n\t\t\tif (reason) {\n\t\t\t\trid && userId && notifyAgent(userId, rid, reason);\n\t\t\t\treturn SystemLogger.error(`(Twilio) -> ${reason}`);\n\t\t\t}\n\n\t\t\tmediaUrl = [publicFilePath];\n\t\t}\n\n\t\tlet persistentAction;\n\t\tif (extraData && extraData.location) {\n\t\t\tconst [longitude, latitude] = extraData.location.coordinates;\n\t\t\tpersistentAction = `geo:${latitude},${longitude}`;\n\t\t\tbody = TAPi18n.__('Location', { lng: defaultLanguage });\n\t\t}\n\n\t\tclient.messages.create({\n\t\t\tto: toNumber,\n\t\t\tfrom: fromNumber,\n\t\t\tbody,\n\t\t\t...(mediaUrl && { mediaUrl }),\n\t\t\t...(persistentAction && { persistentAction }),\n\t\t});\n\t}\n\n\tresponse(/* message */) {\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'text/xml',\n\t\t\t},\n\t\t\tbody: '<Response></Response>',\n\t\t};\n\t}\n\n\terror(error) {\n\t\tlet message = '';\n\t\tif (error.reason) {\n\t\t\tmessage = `<Message>${error.reason}</Message>`;\n\t\t}\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'text/xml',\n\t\t\t},\n\t\t\tbody: `<Response>${message}</Response>`,\n\t\t};\n\t}\n}\n\nSMS.registerService('twilio', Twilio);\n"]},"sourceType":"module","hash":"0f1a343ad7089ab9958537449a3d4e02c76191be"}

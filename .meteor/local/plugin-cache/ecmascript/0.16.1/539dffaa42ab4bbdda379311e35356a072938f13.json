{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/channelsList.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/channelsList.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/channelsList.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/channelsList.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/channelsList.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 2);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 3);\nlet hasPermission;\nmodule.link(\"../../app/authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 4);\nlet Rooms, Subscriptions, Users;\nmodule.link(\"../../app/models\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 5);\nlet getUserPreference;\nmodule.link(\"../../app/utils\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  }\n\n}, 6);\nlet settings;\nmodule.link(\"../../app/settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 7);\nMeteor.methods({\n  channelsList(filter, channelType, limit, sort) {\n    check(filter, String);\n    check(channelType, String);\n    check(limit, Match.Optional(Number));\n    check(sort, Match.Optional(String));\n\n    if (!Meteor.userId()) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'channelsList'\n      });\n    }\n\n    const options = {\n      fields: {\n        name: 1,\n        t: 1\n      },\n      sort: {\n        msgs: -1\n      }\n    };\n\n    if (_.isNumber(limit)) {\n      options.limit = limit;\n    }\n\n    if (s.trim(sort)) {\n      switch (sort) {\n        case 'name':\n          options.sort = {\n            name: 1\n          };\n          break;\n\n        case 'msgs':\n          options.sort = {\n            msgs: -1\n          };\n      }\n    }\n\n    let channels = [];\n    const userId = Meteor.userId();\n\n    if (channelType !== 'private') {\n      if (hasPermission(userId, 'view-c-room')) {\n        if (filter) {\n          channels = channels.concat(Rooms.findByTypeAndNameContaining('c', filter, options).fetch());\n        } else {\n          channels = channels.concat(Rooms.findByType('c', options).fetch());\n        }\n      } else if (hasPermission(userId, 'view-joined-room')) {\n        const roomIds = Subscriptions.findByTypeAndUserId('c', userId, {\n          fields: {\n            rid: 1\n          }\n        }).fetch().map(s => s.rid);\n\n        if (filter) {\n          channels = channels.concat(Rooms.findByTypeInIdsAndNameContaining('c', roomIds, filter, options).fetch());\n        } else {\n          channels = channels.concat(Rooms.findByTypeInIds('c', roomIds, options).fetch());\n        }\n      }\n    }\n\n    if (channelType !== 'public' && hasPermission(userId, 'view-p-room')) {\n      const user = Users.findOne(userId, {\n        fields: {\n          'username': 1,\n          'settings.preferences.sidebarGroupByType': 1\n        }\n      });\n      const userPref = getUserPreference(user, 'sidebarGroupByType'); // needs to negate globalPref because userPref represents its opposite\n\n      const groupByType = userPref !== undefined ? userPref : settings.get('UI_Group_Channels_By_Type');\n\n      if (!groupByType) {\n        const roomIds = Subscriptions.findByTypeAndUserId('p', userId, {\n          fields: {\n            rid: 1\n          }\n        }).fetch().map(s => s.rid);\n\n        if (filter) {\n          channels = channels.concat(Rooms.findByTypeInIdsAndNameContaining('p', roomIds, filter, options).fetch());\n        } else {\n          channels = channels.concat(Rooms.findByTypeInIds('p', roomIds, options).fetch());\n        }\n      }\n    }\n\n    return {\n      channels\n    };\n  }\n\n});","map":{"version":3,"sources":["server/methods/channelsList.js"],"names":["Meteor","module","link","v","Match","check","_","default","s","hasPermission","Rooms","Subscriptions","Users","getUserPreference","settings","methods","channelsList","filter","channelType","limit","sort","String","Optional","Number","userId","Error","method","options","fields","name","t","msgs","isNumber","trim","channels","concat","findByTypeAndNameContaining","fetch","findByType","roomIds","findByTypeAndUserId","rid","map","findByTypeInIdsAndNameContaining","findByTypeInIds","user","findOne","userPref","groupByType","undefined","get"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\nimport _ from 'underscore';\nimport s from 'underscore.string';\n\nimport { hasPermission } from '../../app/authorization';\nimport { Rooms, Subscriptions, Users } from '../../app/models';\nimport { getUserPreference } from '../../app/utils';\nimport { settings } from '../../app/settings';\n\nMeteor.methods({\n\tchannelsList(filter, channelType, limit, sort) {\n\t\tcheck(filter, String);\n\t\tcheck(channelType, String);\n\t\tcheck(limit, Match.Optional(Number));\n\t\tcheck(sort, Match.Optional(String));\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'channelsList',\n\t\t\t});\n\t\t}\n\n\t\tconst options = {\n\t\t\tfields: {\n\t\t\t\tname: 1,\n\t\t\t\tt: 1,\n\t\t\t},\n\t\t\tsort: {\n\t\t\t\tmsgs: -1,\n\t\t\t},\n\t\t};\n\n\t\tif (_.isNumber(limit)) {\n\t\t\toptions.limit = limit;\n\t\t}\n\n\t\tif (s.trim(sort)) {\n\t\t\tswitch (sort) {\n\t\t\t\tcase 'name':\n\t\t\t\t\toptions.sort = {\n\t\t\t\t\t\tname: 1,\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'msgs':\n\t\t\t\t\toptions.sort = {\n\t\t\t\t\t\tmsgs: -1,\n\t\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tlet channels = [];\n\n\t\tconst userId = Meteor.userId();\n\n\t\tif (channelType !== 'private') {\n\t\t\tif (hasPermission(userId, 'view-c-room')) {\n\t\t\t\tif (filter) {\n\t\t\t\t\tchannels = channels.concat(Rooms.findByTypeAndNameContaining('c', filter, options).fetch());\n\t\t\t\t} else {\n\t\t\t\t\tchannels = channels.concat(Rooms.findByType('c', options).fetch());\n\t\t\t\t}\n\t\t\t} else if (hasPermission(userId, 'view-joined-room')) {\n\t\t\t\tconst roomIds = Subscriptions.findByTypeAndUserId('c', userId, { fields: { rid: 1 } })\n\t\t\t\t\t.fetch()\n\t\t\t\t\t.map((s) => s.rid);\n\t\t\t\tif (filter) {\n\t\t\t\t\tchannels = channels.concat(Rooms.findByTypeInIdsAndNameContaining('c', roomIds, filter, options).fetch());\n\t\t\t\t} else {\n\t\t\t\t\tchannels = channels.concat(Rooms.findByTypeInIds('c', roomIds, options).fetch());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (channelType !== 'public' && hasPermission(userId, 'view-p-room')) {\n\t\t\tconst user = Users.findOne(userId, {\n\t\t\t\tfields: {\n\t\t\t\t\t'username': 1,\n\t\t\t\t\t'settings.preferences.sidebarGroupByType': 1,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst userPref = getUserPreference(user, 'sidebarGroupByType');\n\t\t\t// needs to negate globalPref because userPref represents its opposite\n\t\t\tconst groupByType = userPref !== undefined ? userPref : settings.get('UI_Group_Channels_By_Type');\n\n\t\t\tif (!groupByType) {\n\t\t\t\tconst roomIds = Subscriptions.findByTypeAndUserId('p', userId, { fields: { rid: 1 } })\n\t\t\t\t\t.fetch()\n\t\t\t\t\t.map((s) => s.rid);\n\t\t\t\tif (filter) {\n\t\t\t\t\tchannels = channels.concat(Rooms.findByTypeInIdsAndNameContaining('p', roomIds, filter, options).fetch());\n\t\t\t\t} else {\n\t\t\t\t\tchannels = channels.concat(Rooms.findByTypeInIds('p', roomIds, options).fetch());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tchannels,\n\t\t};\n\t},\n});\n"]},"sourceType":"module","hash":"539dffaa42ab4bbdda379311e35356a072938f13"}

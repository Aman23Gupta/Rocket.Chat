{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypesCommon.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/utils/lib/RoomTypesCommon.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypesCommon.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/lib/RoomTypesCommon.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/lib/RoomTypesCommon.js"}},"code":"module.export({\n  RoomTypesCommon: () => RoomTypesCommon\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 1);\nlet RoomTypeConfig;\nmodule.link(\"./RoomTypeConfig\", {\n  RoomTypeConfig(v) {\n    RoomTypeConfig = v;\n  }\n\n}, 2);\nlet roomExit;\nmodule.link(\"./roomExit\", {\n  roomExit(v) {\n    roomExit = v;\n  }\n\n}, 3);\n\nclass RoomTypesCommon {\n  constructor() {\n    this.roomTypes = {};\n    this.roomTypesOrder = [];\n    this.mainOrder = 1;\n  }\n\n  getTypesToShowOnDashboard() {\n    return Object.keys(this.roomTypes).filter(key => this.roomTypes[key].includeInDashboard && this.roomTypes[key].includeInDashboard());\n  }\n  /**\n   * Adds a room type to the application.\n   *\n   * @param {RoomTypeConfig} roomConfig\n   * @returns {void}\n   */\n\n\n  add(roomConfig) {\n    if (!(roomConfig instanceof RoomTypeConfig)) {\n      throw new Error('Invalid Room Configuration object, it must extend \"RoomTypeConfig\"');\n    }\n\n    if (this.roomTypes[roomConfig.identifier]) {\n      return false;\n    }\n\n    if (!roomConfig.order) {\n      roomConfig.order = this.mainOrder + 10;\n      this.mainOrder += 10;\n    }\n\n    this.roomTypesOrder.push({\n      identifier: roomConfig.identifier,\n      order: roomConfig.order\n    });\n    this.roomTypes[roomConfig.identifier] = roomConfig;\n\n    if (roomConfig.route && roomConfig.route.path && roomConfig.route.name && roomConfig.route.action) {\n      const routeConfig = {\n        name: roomConfig.route.name,\n        action: roomConfig.route.action // triggersExit: [() => Session.set('openedRoom', '')],\n\n      };\n\n      if (Meteor.isClient) {\n        routeConfig.triggersExit = [roomExit];\n      }\n\n      return FlowRouter.route(roomConfig.route.path, routeConfig);\n    }\n  }\n\n  hasCustomLink(roomType) {\n    return this.roomTypes[roomType] && this.roomTypes[roomType].route && this.roomTypes[roomType].route.link != null;\n  }\n  /**\n   * @param {string} roomType room type (e.g.: c (for channels), d (for direct channels))\n   * @param {object} subData the user's subscription data\n   */\n\n\n  getRouteLink(roomType, subData) {\n    const routeData = this.getRouteData(roomType, subData);\n\n    if (!routeData) {\n      return false;\n    }\n\n    return FlowRouter.path(this.roomTypes[roomType].route.name, routeData);\n  }\n  /**\n   * @param {string} roomType room type (e.g.: c (for channels), d (for direct channels))\n   * @param {RoomTypeConfig} roomConfig room's type configuration\n   */\n\n\n  getConfig(roomType) {\n    return this.roomTypes[roomType];\n  }\n  /**\n   * @param {string} roomType room type (e.g.: c (for channels), d (for direct channels))\n   * @param {object} subData the user's subscription data\n   */\n\n\n  getURL(roomType, subData) {\n    const routeData = this.getRouteData(roomType, subData);\n\n    if (!routeData) {\n      return false;\n    }\n\n    return FlowRouter.url(this.roomTypes[roomType].route.name, routeData);\n  }\n\n  getRelativePath(roomType, subData) {\n    return this.getRouteLink(roomType, subData).replace(Meteor.absoluteUrl(), '');\n  }\n\n  getRouteData(roomType, subData) {\n    if (!this.roomTypes[roomType]) {\n      return false;\n    }\n\n    let routeData = {};\n\n    if (this.roomTypes[roomType] && this.roomTypes[roomType].route && this.roomTypes[roomType].route.link) {\n      routeData = this.roomTypes[roomType].route.link(subData);\n    } else if (subData && subData.name) {\n      routeData = {\n        rid: subData.rid || subData._id,\n        name: subData.name\n      };\n    }\n\n    return routeData;\n  }\n\n}","map":{"version":3,"sources":["app/utils/lib/RoomTypesCommon.js"],"names":["module","export","RoomTypesCommon","Meteor","link","v","FlowRouter","RoomTypeConfig","roomExit","constructor","roomTypes","roomTypesOrder","mainOrder","getTypesToShowOnDashboard","Object","keys","filter","key","includeInDashboard","add","roomConfig","Error","identifier","order","push","route","path","name","action","routeConfig","isClient","triggersExit","hasCustomLink","roomType","getRouteLink","subData","routeData","getRouteData","getConfig","getURL","url","getRelativePath","replace","absoluteUrl","rid","_id"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n// import { Session } from 'meteor/session';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\n\nimport { RoomTypeConfig } from './RoomTypeConfig';\nimport { roomExit } from './roomExit';\n\nexport class RoomTypesCommon {\n\tconstructor() {\n\t\tthis.roomTypes = {};\n\t\tthis.roomTypesOrder = [];\n\t\tthis.mainOrder = 1;\n\t}\n\n\tgetTypesToShowOnDashboard() {\n\t\treturn Object.keys(this.roomTypes).filter((key) => this.roomTypes[key].includeInDashboard && this.roomTypes[key].includeInDashboard());\n\t}\n\n\t/**\n\t * Adds a room type to the application.\n\t *\n\t * @param {RoomTypeConfig} roomConfig\n\t * @returns {void}\n\t */\n\tadd(roomConfig) {\n\t\tif (!(roomConfig instanceof RoomTypeConfig)) {\n\t\t\tthrow new Error('Invalid Room Configuration object, it must extend \"RoomTypeConfig\"');\n\t\t}\n\n\t\tif (this.roomTypes[roomConfig.identifier]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!roomConfig.order) {\n\t\t\troomConfig.order = this.mainOrder + 10;\n\t\t\tthis.mainOrder += 10;\n\t\t}\n\n\t\tthis.roomTypesOrder.push({\n\t\t\tidentifier: roomConfig.identifier,\n\t\t\torder: roomConfig.order,\n\t\t});\n\n\t\tthis.roomTypes[roomConfig.identifier] = roomConfig;\n\n\t\tif (roomConfig.route && roomConfig.route.path && roomConfig.route.name && roomConfig.route.action) {\n\t\t\tconst routeConfig = {\n\t\t\t\tname: roomConfig.route.name,\n\t\t\t\taction: roomConfig.route.action,\n\t\t\t\t// triggersExit: [() => Session.set('openedRoom', '')],\n\t\t\t};\n\n\t\t\tif (Meteor.isClient) {\n\t\t\t\trouteConfig.triggersExit = [roomExit];\n\t\t\t}\n\n\t\t\treturn FlowRouter.route(roomConfig.route.path, routeConfig);\n\t\t}\n\t}\n\n\thasCustomLink(roomType) {\n\t\treturn this.roomTypes[roomType] && this.roomTypes[roomType].route && this.roomTypes[roomType].route.link != null;\n\t}\n\n\t/**\n\t * @param {string} roomType room type (e.g.: c (for channels), d (for direct channels))\n\t * @param {object} subData the user's subscription data\n\t */\n\tgetRouteLink(roomType, subData) {\n\t\tconst routeData = this.getRouteData(roomType, subData);\n\t\tif (!routeData) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn FlowRouter.path(this.roomTypes[roomType].route.name, routeData);\n\t}\n\n\t/**\n\t * @param {string} roomType room type (e.g.: c (for channels), d (for direct channels))\n\t * @param {RoomTypeConfig} roomConfig room's type configuration\n\t */\n\tgetConfig(roomType) {\n\t\treturn this.roomTypes[roomType];\n\t}\n\n\t/**\n\t * @param {string} roomType room type (e.g.: c (for channels), d (for direct channels))\n\t * @param {object} subData the user's subscription data\n\t */\n\tgetURL(roomType, subData) {\n\t\tconst routeData = this.getRouteData(roomType, subData);\n\t\tif (!routeData) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn FlowRouter.url(this.roomTypes[roomType].route.name, routeData);\n\t}\n\n\tgetRelativePath(roomType, subData) {\n\t\treturn this.getRouteLink(roomType, subData).replace(Meteor.absoluteUrl(), '');\n\t}\n\n\tgetRouteData(roomType, subData) {\n\t\tif (!this.roomTypes[roomType]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet routeData = {};\n\t\tif (this.roomTypes[roomType] && this.roomTypes[roomType].route && this.roomTypes[roomType].route.link) {\n\t\t\trouteData = this.roomTypes[roomType].route.link(subData);\n\t\t} else if (subData && subData.name) {\n\t\t\trouteData = {\n\t\t\t\trid: subData.rid || subData._id,\n\t\t\t\tname: subData.name,\n\t\t\t};\n\t\t}\n\n\t\treturn routeData;\n\t}\n}\n"]},"sourceType":"module","hash":"ce170e82a1c56328b0c6bceb76d10d1f65915a5e"}

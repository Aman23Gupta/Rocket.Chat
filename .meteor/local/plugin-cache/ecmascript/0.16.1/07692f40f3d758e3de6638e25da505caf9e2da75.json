{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/threads/server/functions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/threads/server/functions.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/threads/server/functions.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/threads/server/functions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/threads/server/functions.js"}},"code":"module.export({\n  reply: () => reply,\n  undoReply: () => undoReply,\n  follow: () => follow,\n  unfollow: () => unfollow,\n  readThread: () => readThread,\n  readAllThreads: () => readAllThreads\n});\nlet Messages, Subscriptions;\nmodule.link(\"../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 0);\nlet getMentions;\nmodule.link(\"../../lib/server/lib/notifyUsersOnMessage\", {\n  getMentions(v) {\n    getMentions = v;\n  }\n\n}, 1);\n\nconst reply = (_ref, message, parentMessage, followers) => {\n  let {\n    tmid\n  } = _ref;\n  const {\n    rid,\n    ts,\n    u,\n    editedAt\n  } = message;\n\n  if (!tmid || editedAt) {\n    return false;\n  }\n\n  const {\n    toAll,\n    toHere,\n    mentionIds\n  } = getMentions(message);\n  const addToReplies = [...new Set([...followers, ...mentionIds, ...(Array.isArray(parentMessage.replies) && parentMessage.replies.length ? [u._id] : [parentMessage.u._id, u._id])])];\n  Messages.updateRepliesByThreadId(tmid, addToReplies, ts);\n  const replies = Messages.getThreadFollowsByThreadId(tmid);\n  const repliesFiltered = replies.filter(userId => userId !== u._id).filter(userId => !mentionIds.includes(userId));\n\n  if (toAll || toHere) {\n    Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, repliesFiltered, tmid, {\n      groupMention: true\n    });\n  } else {\n    Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, repliesFiltered, tmid);\n  }\n\n  mentionIds.forEach(mentionId => Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, [mentionId], tmid, {\n    userMention: true\n  }));\n};\n\nconst undoReply = _ref2 => {\n  let {\n    tmid\n  } = _ref2;\n\n  if (!tmid) {\n    return false;\n  }\n\n  const {\n    ts\n  } = Messages.getFirstReplyTsByThreadId(tmid) || {};\n\n  if (!ts) {\n    return Messages.unsetThreadByThreadId(tmid);\n  }\n\n  return Messages.updateThreadLastMessageAndCountByThreadId(tmid, ts, -1);\n};\n\nconst follow = _ref3 => {\n  let {\n    tmid,\n    uid\n  } = _ref3;\n\n  if (!tmid || !uid) {\n    return false;\n  }\n\n  Messages.addThreadFollowerByThreadId(tmid, uid);\n};\n\nconst unfollow = _ref4 => {\n  let {\n    tmid,\n    rid,\n    uid\n  } = _ref4;\n\n  if (!tmid || !uid) {\n    return false;\n  }\n\n  Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, uid, tmid);\n  return Messages.removeThreadFollowerByThreadId(tmid, uid);\n};\n\nconst readThread = _ref5 => {\n  var _sub$tunread;\n\n  let {\n    userId,\n    rid,\n    tmid\n  } = _ref5;\n  const fields = {\n    tunread: 1\n  };\n  const sub = Subscriptions.findOneByRoomIdAndUserId(rid, userId, {\n    fields\n  });\n\n  if (!sub) {\n    return;\n  } // if the thread being marked as read is the last one unread also clear the unread subscription flag\n\n\n  const clearAlert = ((_sub$tunread = sub.tunread) === null || _sub$tunread === void 0 ? void 0 : _sub$tunread.length) <= 1 && sub.tunread.includes(tmid);\n  Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, userId, tmid, clearAlert);\n};\n\nconst readAllThreads = (rid, userId) => Subscriptions.removeAllUnreadThreadsByRoomIdAndUserId(rid, userId);","map":{"version":3,"sources":["app/threads/server/functions.js"],"names":["module","export","reply","undoReply","follow","unfollow","readThread","readAllThreads","Messages","Subscriptions","link","v","getMentions","message","parentMessage","followers","tmid","rid","ts","u","editedAt","toAll","toHere","mentionIds","addToReplies","Set","Array","isArray","replies","length","_id","updateRepliesByThreadId","getThreadFollowsByThreadId","repliesFiltered","filter","userId","includes","addUnreadThreadByRoomIdAndUserIds","groupMention","forEach","mentionId","userMention","getFirstReplyTsByThreadId","unsetThreadByThreadId","updateThreadLastMessageAndCountByThreadId","uid","addThreadFollowerByThreadId","removeUnreadThreadByRoomIdAndUserId","removeThreadFollowerByThreadId","fields","tunread","sub","findOneByRoomIdAndUserId","clearAlert","removeAllUnreadThreadsByRoomIdAndUserId"],"mappings":"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","sourcesContent":["import { Messages, Subscriptions } from '../../models/server';\nimport { getMentions } from '../../lib/server/lib/notifyUsersOnMessage';\n\nexport const reply = ({ tmid }, message, parentMessage, followers) => {\n\tconst { rid, ts, u, editedAt } = message;\n\tif (!tmid || editedAt) {\n\t\treturn false;\n\t}\n\n\tconst { toAll, toHere, mentionIds } = getMentions(message);\n\n\tconst addToReplies = [\n\t\t...new Set([\n\t\t\t...followers,\n\t\t\t...mentionIds,\n\t\t\t...(Array.isArray(parentMessage.replies) && parentMessage.replies.length ? [u._id] : [parentMessage.u._id, u._id]),\n\t\t]),\n\t];\n\n\tMessages.updateRepliesByThreadId(tmid, addToReplies, ts);\n\n\tconst replies = Messages.getThreadFollowsByThreadId(tmid);\n\n\tconst repliesFiltered = replies.filter((userId) => userId !== u._id).filter((userId) => !mentionIds.includes(userId));\n\n\tif (toAll || toHere) {\n\t\tSubscriptions.addUnreadThreadByRoomIdAndUserIds(rid, repliesFiltered, tmid, {\n\t\t\tgroupMention: true,\n\t\t});\n\t} else {\n\t\tSubscriptions.addUnreadThreadByRoomIdAndUserIds(rid, repliesFiltered, tmid);\n\t}\n\n\tmentionIds.forEach((mentionId) => Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, [mentionId], tmid, { userMention: true }));\n};\n\nexport const undoReply = ({ tmid }) => {\n\tif (!tmid) {\n\t\treturn false;\n\t}\n\n\tconst { ts } = Messages.getFirstReplyTsByThreadId(tmid) || {};\n\tif (!ts) {\n\t\treturn Messages.unsetThreadByThreadId(tmid);\n\t}\n\n\treturn Messages.updateThreadLastMessageAndCountByThreadId(tmid, ts, -1);\n};\n\nexport const follow = ({ tmid, uid }) => {\n\tif (!tmid || !uid) {\n\t\treturn false;\n\t}\n\n\tMessages.addThreadFollowerByThreadId(tmid, uid);\n};\n\nexport const unfollow = ({ tmid, rid, uid }) => {\n\tif (!tmid || !uid) {\n\t\treturn false;\n\t}\n\n\tSubscriptions.removeUnreadThreadByRoomIdAndUserId(rid, uid, tmid);\n\n\treturn Messages.removeThreadFollowerByThreadId(tmid, uid);\n};\n\nexport const readThread = ({ userId, rid, tmid }) => {\n\tconst fields = { tunread: 1 };\n\tconst sub = Subscriptions.findOneByRoomIdAndUserId(rid, userId, { fields });\n\tif (!sub) {\n\t\treturn;\n\t}\n\t// if the thread being marked as read is the last one unread also clear the unread subscription flag\n\tconst clearAlert = sub.tunread?.length <= 1 && sub.tunread.includes(tmid);\n\n\tSubscriptions.removeUnreadThreadByRoomIdAndUserId(rid, userId, tmid, clearAlert);\n};\n\nexport const readAllThreads = (rid, userId) => Subscriptions.removeAllUnreadThreadsByRoomIdAndUserId(rid, userId);\n"]},"sourceType":"module","hash":"07692f40f3d758e3de6638e25da505caf9e2da75"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/emoji-custom/server/methods/insertOrUpdateEmoji.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/emoji-custom/server/methods/insertOrUpdateEmoji.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/emoji-custom/server/methods/insertOrUpdateEmoji.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/emoji-custom/server/methods/insertOrUpdateEmoji.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/emoji-custom/server/methods/insertOrUpdateEmoji.js"}},"code":"let _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 2);\nlet limax;\nmodule.link(\"limax\", {\n  default(v) {\n    limax = v;\n  }\n\n}, 3);\nlet hasPermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 4);\nlet EmojiCustom;\nmodule.link(\"../../../models/server/raw\", {\n  EmojiCustom(v) {\n    EmojiCustom = v;\n  }\n\n}, 5);\nlet RocketChatFileEmojiCustomInstance;\nmodule.link(\"../startup/emoji-custom\", {\n  RocketChatFileEmojiCustomInstance(v) {\n    RocketChatFileEmojiCustomInstance = v;\n  }\n\n}, 6);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 7);\nMeteor.methods({\n  insertOrUpdateEmoji(emojiData) {\n    return Promise.asyncApply(() => {\n      if (!hasPermission(this.userId, 'manage-emoji')) {\n        throw new Meteor.Error('not_authorized');\n      }\n\n      if (!s.trim(emojiData.name)) {\n        throw new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n          method: 'insertOrUpdateEmoji',\n          field: 'Name'\n        });\n      }\n\n      emojiData.name = limax(emojiData.name, {\n        replacement: '_'\n      });\n      emojiData.aliases = limax(emojiData.aliases, {\n        replacement: '_'\n      }); // allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n      // more practical than allowing specific sets of characters; also allows foreign languages\n\n      const nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n      const aliasValidation = /[:><&\\|\"'\\/\\\\\\(\\)]/; // silently strip colon; this allows for uploading :emojiname: as emojiname\n\n      emojiData.name = emojiData.name.replace(/:/g, '');\n      emojiData.aliases = emojiData.aliases.replace(/:/g, '');\n\n      if (nameValidation.test(emojiData.name)) {\n        throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(emojiData.name, \" is not a valid name\"), {\n          method: 'insertOrUpdateEmoji',\n          input: emojiData.name,\n          field: 'Name'\n        });\n      }\n\n      if (emojiData.aliases) {\n        if (aliasValidation.test(emojiData.aliases)) {\n          throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(emojiData.aliases, \" is not a valid alias set\"), {\n            method: 'insertOrUpdateEmoji',\n            input: emojiData.aliases,\n            field: 'Alias_Set'\n          });\n        }\n\n        emojiData.aliases = emojiData.aliases.split(/[\\s,]/);\n        emojiData.aliases = emojiData.aliases.filter(Boolean);\n        emojiData.aliases = _.without(emojiData.aliases, emojiData.name);\n      } else {\n        emojiData.aliases = [];\n      }\n\n      emojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;\n      let matchingResults = [];\n\n      if (emojiData._id) {\n        matchingResults = Promise.await(EmojiCustom.findByNameOrAliasExceptID(emojiData.name, emojiData._id).toArray());\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n\n        var _iteratorError;\n\n        try {\n          for (var _iterator = _asyncIterator(emojiData.aliases), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n            const alias = _step.value;\n            matchingResults = matchingResults.concat(Promise.await(EmojiCustom.findByNameOrAliasExceptID(alias, emojiData._id).toArray()));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              Promise.await(_iterator.return());\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        matchingResults = Promise.await(EmojiCustom.findByNameOrAlias(emojiData.name).toArray());\n        var _iteratorAbruptCompletion2 = false;\n        var _didIteratorError2 = false;\n\n        var _iteratorError2;\n\n        try {\n          for (var _iterator2 = _asyncIterator(emojiData.aliases), _step2; _iteratorAbruptCompletion2 = !(_step2 = Promise.await(_iterator2.next())).done; _iteratorAbruptCompletion2 = false) {\n            const alias = _step2.value;\n            matchingResults = matchingResults.concat(Promise.await(EmojiCustom.findByNameOrAlias(alias).toArray()));\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n              Promise.await(_iterator2.return());\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      if (matchingResults.length > 0) {\n        throw new Meteor.Error('Custom_Emoji_Error_Name_Or_Alias_Already_In_Use', 'The custom emoji or one of its aliases is already in use', {\n          method: 'insertOrUpdateEmoji'\n        });\n      }\n\n      if (typeof emojiData.extension === 'undefined') {\n        throw new Meteor.Error('error-the-field-is-required', 'The custom emoji file is required', {\n          method: 'insertOrUpdateEmoji'\n        });\n      }\n\n      if (!emojiData._id) {\n        // insert emoji\n        const createEmoji = {\n          name: emojiData.name,\n          aliases: emojiData.aliases,\n          extension: emojiData.extension\n        };\n        const _id = Promise.await(EmojiCustom.create(createEmoji)).insertedId;\n        api.broadcast('emoji.updateCustom', createEmoji);\n        return _id;\n      } // update emoji\n\n\n      if (emojiData.newFile) {\n        RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.extension)));\n        RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.previousExtension)));\n        RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.previousName, \".\").concat(emojiData.extension)));\n        RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.previousName, \".\").concat(emojiData.previousExtension)));\n        Promise.await(EmojiCustom.setExtension(emojiData._id, emojiData.extension));\n      } else if (emojiData.name !== emojiData.previousName) {\n        const rs = RocketChatFileEmojiCustomInstance.getFileWithReadStream(encodeURIComponent(\"\".concat(emojiData.previousName, \".\").concat(emojiData.previousExtension)));\n\n        if (rs !== null) {\n          RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.extension)));\n          const ws = RocketChatFileEmojiCustomInstance.createWriteStream(encodeURIComponent(\"\".concat(emojiData.name, \".\").concat(emojiData.previousExtension)), rs.contentType);\n          ws.on('end', Meteor.bindEnvironment(() => RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(\"\".concat(emojiData.previousName, \".\").concat(emojiData.previousExtension)))));\n          rs.readStream.pipe(ws);\n        }\n      }\n\n      if (emojiData.name !== emojiData.previousName) {\n        Promise.await(EmojiCustom.setName(emojiData._id, emojiData.name));\n      }\n\n      if (emojiData.aliases) {\n        Promise.await(EmojiCustom.setAliases(emojiData._id, emojiData.aliases));\n      } else {\n        Promise.await(EmojiCustom.setAliases(emojiData._id, []));\n      }\n\n      api.broadcast('emoji.updateCustom', emojiData);\n      return true;\n    });\n  }\n\n});","map":{"version":3,"sources":["app/emoji-custom/server/methods/insertOrUpdateEmoji.js"],"names":["_asyncIterator","module","link","default","v","Meteor","_","s","limax","hasPermission","EmojiCustom","RocketChatFileEmojiCustomInstance","api","methods","insertOrUpdateEmoji","emojiData","userId","Error","trim","name","method","field","replacement","aliases","nameValidation","aliasValidation","replace","test","input","split","filter","Boolean","without","extension","matchingResults","_id","findByNameOrAliasExceptID","toArray","alias","concat","findByNameOrAlias","length","createEmoji","create","insertedId","broadcast","newFile","deleteFile","encodeURIComponent","previousExtension","previousName","setExtension","rs","getFileWithReadStream","ws","createWriteStream","contentType","on","bindEnvironment","readStream","pipe","setName","setAliases"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\nimport s from 'underscore.string';\nimport limax from 'limax';\n\nimport { hasPermission } from '../../../authorization';\nimport { EmojiCustom } from '../../../models/server/raw';\nimport { RocketChatFileEmojiCustomInstance } from '../startup/emoji-custom';\nimport { api } from '../../../../server/sdk/api';\n\nMeteor.methods({\n\tasync insertOrUpdateEmoji(emojiData) {\n\t\tif (!hasPermission(this.userId, 'manage-emoji')) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\tif (!s.trim(emojiData.name)) {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\temojiData.name = limax(emojiData.name, { replacement: '_' });\n\t\temojiData.aliases = limax(emojiData.aliases, { replacement: '_' });\n\n\t\t// allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n\t\t// more practical than allowing specific sets of characters; also allows foreign languages\n\t\tconst nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n\t\tconst aliasValidation = /[:><&\\|\"'\\/\\\\\\(\\)]/;\n\n\t\t// silently strip colon; this allows for uploading :emojiname: as emojiname\n\t\temojiData.name = emojiData.name.replace(/:/g, '');\n\t\temojiData.aliases = emojiData.aliases.replace(/:/g, '');\n\n\t\tif (nameValidation.test(emojiData.name)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${emojiData.name} is not a valid name`, {\n\t\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\t\tinput: emojiData.name,\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\tif (emojiData.aliases) {\n\t\t\tif (aliasValidation.test(emojiData.aliases)) {\n\t\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${emojiData.aliases} is not a valid alias set`, {\n\t\t\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\t\t\tinput: emojiData.aliases,\n\t\t\t\t\tfield: 'Alias_Set',\n\t\t\t\t});\n\t\t\t}\n\t\t\temojiData.aliases = emojiData.aliases.split(/[\\s,]/);\n\t\t\temojiData.aliases = emojiData.aliases.filter(Boolean);\n\t\t\temojiData.aliases = _.without(emojiData.aliases, emojiData.name);\n\t\t} else {\n\t\t\temojiData.aliases = [];\n\t\t}\n\n\t\temojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;\n\n\t\tlet matchingResults = [];\n\n\t\tif (emojiData._id) {\n\t\t\tmatchingResults = await EmojiCustom.findByNameOrAliasExceptID(emojiData.name, emojiData._id).toArray();\n\t\t\tfor await (const alias of emojiData.aliases) {\n\t\t\t\tmatchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAliasExceptID(alias, emojiData._id).toArray());\n\t\t\t}\n\t\t} else {\n\t\t\tmatchingResults = await EmojiCustom.findByNameOrAlias(emojiData.name).toArray();\n\t\t\tfor await (const alias of emojiData.aliases) {\n\t\t\t\tmatchingResults = matchingResults.concat(await EmojiCustom.findByNameOrAlias(alias).toArray());\n\t\t\t}\n\t\t}\n\n\t\tif (matchingResults.length > 0) {\n\t\t\tthrow new Meteor.Error(\n\t\t\t\t'Custom_Emoji_Error_Name_Or_Alias_Already_In_Use',\n\t\t\t\t'The custom emoji or one of its aliases is already in use',\n\t\t\t\t{ method: 'insertOrUpdateEmoji' },\n\t\t\t);\n\t\t}\n\n\t\tif (typeof emojiData.extension === 'undefined') {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The custom emoji file is required', {\n\t\t\t\tmethod: 'insertOrUpdateEmoji',\n\t\t\t});\n\t\t}\n\n\t\tif (!emojiData._id) {\n\t\t\t// insert emoji\n\t\t\tconst createEmoji = {\n\t\t\t\tname: emojiData.name,\n\t\t\t\taliases: emojiData.aliases,\n\t\t\t\textension: emojiData.extension,\n\t\t\t};\n\n\t\t\tconst _id = (await EmojiCustom.create(createEmoji)).insertedId;\n\n\t\t\tapi.broadcast('emoji.updateCustom', createEmoji);\n\n\t\t\treturn _id;\n\t\t}\n\t\t// update emoji\n\t\tif (emojiData.newFile) {\n\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.previousExtension}`));\n\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.extension}`));\n\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`));\n\n\t\t\tawait EmojiCustom.setExtension(emojiData._id, emojiData.extension);\n\t\t} else if (emojiData.name !== emojiData.previousName) {\n\t\t\tconst rs = RocketChatFileEmojiCustomInstance.getFileWithReadStream(\n\t\t\t\tencodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`),\n\t\t\t);\n\t\t\tif (rs !== null) {\n\t\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.name}.${emojiData.extension}`));\n\t\t\t\tconst ws = RocketChatFileEmojiCustomInstance.createWriteStream(\n\t\t\t\t\tencodeURIComponent(`${emojiData.name}.${emojiData.previousExtension}`),\n\t\t\t\t\trs.contentType,\n\t\t\t\t);\n\t\t\t\tws.on(\n\t\t\t\t\t'end',\n\t\t\t\t\tMeteor.bindEnvironment(() =>\n\t\t\t\t\t\tRocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${emojiData.previousName}.${emojiData.previousExtension}`)),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\trs.readStream.pipe(ws);\n\t\t\t}\n\t\t}\n\n\t\tif (emojiData.name !== emojiData.previousName) {\n\t\t\tawait EmojiCustom.setName(emojiData._id, emojiData.name);\n\t\t}\n\n\t\tif (emojiData.aliases) {\n\t\t\tawait EmojiCustom.setAliases(emojiData._id, emojiData.aliases);\n\t\t} else {\n\t\t\tawait EmojiCustom.setAliases(emojiData._id, []);\n\t\t}\n\n\t\tapi.broadcast('emoji.updateCustom', emojiData);\n\n\t\treturn true;\n\t},\n});\n"]},"sourceType":"module","hash":"dbfdf52c388dd1c103ba06ffab430dc337e013b3"}

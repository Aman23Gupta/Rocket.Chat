{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/bot-helpers/server/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/bot-helpers/server/index.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/bot-helpers/server/index.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/bot-helpers/server/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/bot-helpers/server/index.js"}},"code":"module.link(\"./settings\");\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet Users, Rooms;\nmodule.link(\"../../models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet hasRole;\nmodule.link(\"../../authorization/server\", {\n  hasRole(v) {\n    hasRole = v;\n  }\n\n}, 4);\n\n/**\n * BotHelpers helps bots\n * \"private\" properties use meteor collection cursors, so they stay reactive\n * \"public\" properties use getters to fetch and filter collections as array\n */\nclass BotHelpers {\n  constructor() {\n    this.queries = {\n      online: {\n        status: {\n          $ne: 'offline'\n        }\n      },\n      users: {\n        roles: {\n          $not: {\n            $all: ['bot']\n          }\n        }\n      }\n    };\n  } // setup collection cursors with array of fields from setting\n\n\n  setupCursors(fieldsSetting) {\n    this.userFields = {};\n\n    if (typeof fieldsSetting === 'string') {\n      fieldsSetting = fieldsSetting.split(',');\n    }\n\n    fieldsSetting.forEach(n => {\n      this.userFields[n.trim()] = 1;\n    });\n    this._allUsers = Users.find(this.queries.users, {\n      fields: this.userFields\n    });\n    this._onlineUsers = Users.find({\n      $and: [this.queries.users, this.queries.online]\n    }, {\n      fields: this.userFields\n    });\n  } // request methods or props as arguments to Meteor.call\n\n\n  request(prop) {\n    if (typeof this[prop] === 'undefined') {\n      return null;\n    }\n\n    if (typeof this[prop] === 'function') {\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      return this[prop](...params);\n    }\n\n    return this[prop];\n  }\n\n  addUserToRole(userName, roleName) {\n    Meteor.call('authorization:addUserToRole', roleName, userName);\n  }\n\n  removeUserFromRole(userName, roleName) {\n    Meteor.call('authorization:removeUserFromRole', roleName, userName);\n  }\n\n  addUserToRoom(userName, room) {\n    const foundRoom = Rooms.findOneByIdOrName(room);\n\n    if (!_.isObject(foundRoom)) {\n      throw new Meteor.Error('invalid-channel');\n    }\n\n    const data = {};\n    data.rid = foundRoom._id;\n    data.username = userName;\n    Meteor.call('addUserToRoom', data);\n  }\n\n  removeUserFromRoom(userName, room) {\n    const foundRoom = Rooms.findOneByIdOrName(room);\n\n    if (!_.isObject(foundRoom)) {\n      throw new Meteor.Error('invalid-channel');\n    }\n\n    const data = {};\n    data.rid = foundRoom._id;\n    data.username = userName;\n    Meteor.call('removeUserFromRoom', data);\n  } // generic error whenever property access insufficient to fill request\n\n\n  requestError() {\n    throw new Meteor.Error('error-not-allowed', 'Bot request not allowed', {\n      method: 'botRequest',\n      action: 'bot_request'\n    });\n  } // \"public\" properties accessed by getters\n  // allUsers / onlineUsers return whichever properties are enabled by settings\n\n\n  get allUsers() {\n    if (!Object.keys(this.userFields).length) {\n      this.requestError();\n      return false;\n    }\n\n    return this._allUsers.fetch();\n  }\n\n  get onlineUsers() {\n    if (!Object.keys(this.userFields).length) {\n      this.requestError();\n      return false;\n    }\n\n    return this._onlineUsers.fetch();\n  }\n\n  get allUsernames() {\n    if (!this.userFields.hasOwnProperty('username')) {\n      this.requestError();\n      return false;\n    }\n\n    return this._allUsers.fetch().map(user => user.username);\n  }\n\n  get onlineUsernames() {\n    if (!this.userFields.hasOwnProperty('username')) {\n      this.requestError();\n      return false;\n    }\n\n    return this._onlineUsers.fetch().map(user => user.username);\n  }\n\n  get allNames() {\n    if (!this.userFields.hasOwnProperty('name')) {\n      this.requestError();\n      return false;\n    }\n\n    return this._allUsers.fetch().map(user => user.name);\n  }\n\n  get onlineNames() {\n    if (!this.userFields.hasOwnProperty('name')) {\n      this.requestError();\n      return false;\n    }\n\n    return this._onlineUsers.fetch().map(user => user.name);\n  }\n\n  get allIDs() {\n    if (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n      this.requestError();\n      return false;\n    }\n\n    return this._allUsers.fetch().map(user => ({\n      id: user._id,\n      name: user.username\n    }));\n  }\n\n  get onlineIDs() {\n    if (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n      this.requestError();\n      return false;\n    }\n\n    return this._onlineUsers.fetch().map(user => ({\n      id: user._id,\n      name: user.username\n    }));\n  }\n\n} // add class to meteor methods\n\n\nconst botHelpers = new BotHelpers(); // init cursors with fields setting and update on setting change\n\nsettings.watch('BotHelpers_userFields', function (settingValue) {\n  botHelpers.setupCursors(settingValue);\n});\nMeteor.methods({\n  botRequest: function () {\n    const userID = Meteor.userId();\n\n    if (userID && hasRole(userID, 'bot')) {\n      return botHelpers.request(...arguments);\n    }\n\n    throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n      method: 'botRequest'\n    });\n  }\n});","map":{"version":3,"sources":["app/bot-helpers/server/index.js"],"names":["module","link","Meteor","v","_","default","Users","Rooms","settings","hasRole","BotHelpers","constructor","queries","online","status","$ne","users","roles","$not","$all","setupCursors","fieldsSetting","userFields","split","forEach","n","trim","_allUsers","find","fields","_onlineUsers","$and","request","prop","params","addUserToRole","userName","roleName","call","removeUserFromRole","addUserToRoom","room","foundRoom","findOneByIdOrName","isObject","Error","data","rid","_id","username","removeUserFromRoom","requestError","method","action","allUsers","Object","keys","length","fetch","onlineUsers","allUsernames","hasOwnProperty","map","user","onlineUsernames","allNames","name","onlineNames","allIDs","id","onlineIDs","botHelpers","watch","settingValue","methods","botRequest","userID","userId"],"mappings":"AAAAA,MAAM,CAACC,IAAP,CAAY,YAAZ;AAA0B,IAAIC,MAAJ;AAAWF,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACC,EAAAA,MAAM,CAACC,CAAD,EAAG;AAACD,IAAAA,MAAM,GAACC,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;;AAAqD,IAAIC,CAAJ;;AAAMJ,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACI,EAAAA,OAAO,CAACF,CAAD,EAAG;AAACC,IAAAA,CAAC,GAACD,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAA8C,IAAIG,KAAJ,EAAUC,KAAV;AAAgBP,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACK,EAAAA,KAAK,CAACH,CAAD,EAAG;AAACG,IAAAA,KAAK,GAACH,CAAN;AAAQ,GAAlB;;AAAmBI,EAAAA,KAAK,CAACJ,CAAD,EAAG;AAACI,IAAAA,KAAK,GAACJ,CAAN;AAAQ;;AAApC,CAAlC,EAAwE,CAAxE;AAA2E,IAAIK,QAAJ;AAAaR,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACO,EAAAA,QAAQ,CAACL,CAAD,EAAG;AAACK,IAAAA,QAAQ,GAACL,CAAT;AAAW;;AAAxB,CAApC,EAA8D,CAA9D;AAAiE,IAAIM,OAAJ;AAAYT,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACQ,EAAAA,OAAO,CAACN,CAAD,EAAG;AAACM,IAAAA,OAAO,GAACN,CAAR;AAAU;;AAAtB,CAAzC,EAAiE,CAAjE;;AAQnU;AACA;AACA;AACA;AACA;AACA,MAAMO,UAAN,CAAiB;AAChBC,EAAAA,WAAW,GAAG;AACb,SAAKC,OAAL,GAAe;AACdC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP;AAAV,OADM;AAEdC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,IAAI,EAAE,CAAC,KAAD;AAAR;AAAR;AAAT;AAFO,KAAf;AAIA,GANe,CAQhB;;;AACAC,EAAAA,YAAY,CAACC,aAAD,EAAgB;AAC3B,SAAKC,UAAL,GAAkB,EAAlB;;AACA,QAAI,OAAOD,aAAP,KAAyB,QAA7B,EAAuC;AACtCA,MAAAA,aAAa,GAAGA,aAAa,CAACE,KAAd,CAAoB,GAApB,CAAhB;AACA;;AACDF,IAAAA,aAAa,CAACG,OAAd,CAAuBC,CAAD,IAAO;AAC5B,WAAKH,UAAL,CAAgBG,CAAC,CAACC,IAAF,EAAhB,IAA4B,CAA5B;AACA,KAFD;AAGA,SAAKC,SAAL,GAAiBrB,KAAK,CAACsB,IAAN,CAAW,KAAKhB,OAAL,CAAaI,KAAxB,EAA+B;AAAEa,MAAAA,MAAM,EAAE,KAAKP;AAAf,KAA/B,CAAjB;AACA,SAAKQ,YAAL,GAAoBxB,KAAK,CAACsB,IAAN,CAAW;AAAEG,MAAAA,IAAI,EAAE,CAAC,KAAKnB,OAAL,CAAaI,KAAd,EAAqB,KAAKJ,OAAL,CAAaC,MAAlC;AAAR,KAAX,EAAgE;AAAEgB,MAAAA,MAAM,EAAE,KAAKP;AAAf,KAAhE,CAApB;AACA,GAnBe,CAqBhB;;;AACAU,EAAAA,OAAO,CAACC,IAAD,EAAkB;AACxB,QAAI,OAAO,KAAKA,IAAL,CAAP,KAAsB,WAA1B,EAAuC;AACtC,aAAO,IAAP;AACA;;AACD,QAAI,OAAO,KAAKA,IAAL,CAAP,KAAsB,UAA1B,EAAsC;AAAA,wCAJtBC,MAIsB;AAJtBA,QAAAA,MAIsB;AAAA;;AACrC,aAAO,KAAKD,IAAL,EAAW,GAAGC,MAAd,CAAP;AACA;;AACD,WAAO,KAAKD,IAAL,CAAP;AACA;;AAEDE,EAAAA,aAAa,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACjCnC,IAAAA,MAAM,CAACoC,IAAP,CAAY,6BAAZ,EAA2CD,QAA3C,EAAqDD,QAArD;AACA;;AAEDG,EAAAA,kBAAkB,CAACH,QAAD,EAAWC,QAAX,EAAqB;AACtCnC,IAAAA,MAAM,CAACoC,IAAP,CAAY,kCAAZ,EAAgDD,QAAhD,EAA0DD,QAA1D;AACA;;AAEDI,EAAAA,aAAa,CAACJ,QAAD,EAAWK,IAAX,EAAiB;AAC7B,UAAMC,SAAS,GAAGnC,KAAK,CAACoC,iBAAN,CAAwBF,IAAxB,CAAlB;;AAEA,QAAI,CAACrC,CAAC,CAACwC,QAAF,CAAWF,SAAX,CAAL,EAA4B;AAC3B,YAAM,IAAIxC,MAAM,CAAC2C,KAAX,CAAiB,iBAAjB,CAAN;AACA;;AAED,UAAMC,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAACC,GAAL,GAAWL,SAAS,CAACM,GAArB;AACAF,IAAAA,IAAI,CAACG,QAAL,GAAgBb,QAAhB;AACAlC,IAAAA,MAAM,CAACoC,IAAP,CAAY,eAAZ,EAA6BQ,IAA7B;AACA;;AAEDI,EAAAA,kBAAkB,CAACd,QAAD,EAAWK,IAAX,EAAiB;AAClC,UAAMC,SAAS,GAAGnC,KAAK,CAACoC,iBAAN,CAAwBF,IAAxB,CAAlB;;AAEA,QAAI,CAACrC,CAAC,CAACwC,QAAF,CAAWF,SAAX,CAAL,EAA4B;AAC3B,YAAM,IAAIxC,MAAM,CAAC2C,KAAX,CAAiB,iBAAjB,CAAN;AACA;;AACD,UAAMC,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAACC,GAAL,GAAWL,SAAS,CAACM,GAArB;AACAF,IAAAA,IAAI,CAACG,QAAL,GAAgBb,QAAhB;AACAlC,IAAAA,MAAM,CAACoC,IAAP,CAAY,oBAAZ,EAAkCQ,IAAlC;AACA,GA/De,CAiEhB;;;AACAK,EAAAA,YAAY,GAAG;AACd,UAAM,IAAIjD,MAAM,CAAC2C,KAAX,CAAiB,mBAAjB,EAAsC,yBAAtC,EAAiE;AACtEO,MAAAA,MAAM,EAAE,YAD8D;AAEtEC,MAAAA,MAAM,EAAE;AAF8D,KAAjE,CAAN;AAIA,GAvEe,CAyEhB;AACA;;;AACY,MAARC,QAAQ,GAAG;AACd,QAAI,CAACC,MAAM,CAACC,IAAP,CAAY,KAAKlC,UAAjB,EAA6BmC,MAAlC,EAA0C;AACzC,WAAKN,YAAL;AACA,aAAO,KAAP;AACA;;AACD,WAAO,KAAKxB,SAAL,CAAe+B,KAAf,EAAP;AACA;;AAEc,MAAXC,WAAW,GAAG;AACjB,QAAI,CAACJ,MAAM,CAACC,IAAP,CAAY,KAAKlC,UAAjB,EAA6BmC,MAAlC,EAA0C;AACzC,WAAKN,YAAL;AACA,aAAO,KAAP;AACA;;AACD,WAAO,KAAKrB,YAAL,CAAkB4B,KAAlB,EAAP;AACA;;AAEe,MAAZE,YAAY,GAAG;AAClB,QAAI,CAAC,KAAKtC,UAAL,CAAgBuC,cAAhB,CAA+B,UAA/B,CAAL,EAAiD;AAChD,WAAKV,YAAL;AACA,aAAO,KAAP;AACA;;AACD,WAAO,KAAKxB,SAAL,CAAe+B,KAAf,GAAuBI,GAAvB,CAA4BC,IAAD,IAAUA,IAAI,CAACd,QAA1C,CAAP;AACA;;AAEkB,MAAfe,eAAe,GAAG;AACrB,QAAI,CAAC,KAAK1C,UAAL,CAAgBuC,cAAhB,CAA+B,UAA/B,CAAL,EAAiD;AAChD,WAAKV,YAAL;AACA,aAAO,KAAP;AACA;;AACD,WAAO,KAAKrB,YAAL,CAAkB4B,KAAlB,GAA0BI,GAA1B,CAA+BC,IAAD,IAAUA,IAAI,CAACd,QAA7C,CAAP;AACA;;AAEW,MAARgB,QAAQ,GAAG;AACd,QAAI,CAAC,KAAK3C,UAAL,CAAgBuC,cAAhB,CAA+B,MAA/B,CAAL,EAA6C;AAC5C,WAAKV,YAAL;AACA,aAAO,KAAP;AACA;;AACD,WAAO,KAAKxB,SAAL,CAAe+B,KAAf,GAAuBI,GAAvB,CAA4BC,IAAD,IAAUA,IAAI,CAACG,IAA1C,CAAP;AACA;;AAEc,MAAXC,WAAW,GAAG;AACjB,QAAI,CAAC,KAAK7C,UAAL,CAAgBuC,cAAhB,CAA+B,MAA/B,CAAL,EAA6C;AAC5C,WAAKV,YAAL;AACA,aAAO,KAAP;AACA;;AACD,WAAO,KAAKrB,YAAL,CAAkB4B,KAAlB,GAA0BI,GAA1B,CAA+BC,IAAD,IAAUA,IAAI,CAACG,IAA7C,CAAP;AACA;;AAES,MAANE,MAAM,GAAG;AACZ,QAAI,CAAC,KAAK9C,UAAL,CAAgBuC,cAAhB,CAA+B,KAA/B,CAAD,IAA0C,CAAC,KAAKvC,UAAL,CAAgBuC,cAAhB,CAA+B,UAA/B,CAA/C,EAA2F;AAC1F,WAAKV,YAAL;AACA,aAAO,KAAP;AACA;;AACD,WAAO,KAAKxB,SAAL,CAAe+B,KAAf,GAAuBI,GAAvB,CAA4BC,IAAD,KAAW;AAAEM,MAAAA,EAAE,EAAEN,IAAI,CAACf,GAAX;AAAgBkB,MAAAA,IAAI,EAAEH,IAAI,CAACd;AAA3B,KAAX,CAA3B,CAAP;AACA;;AAEY,MAATqB,SAAS,GAAG;AACf,QAAI,CAAC,KAAKhD,UAAL,CAAgBuC,cAAhB,CAA+B,KAA/B,CAAD,IAA0C,CAAC,KAAKvC,UAAL,CAAgBuC,cAAhB,CAA+B,UAA/B,CAA/C,EAA2F;AAC1F,WAAKV,YAAL;AACA,aAAO,KAAP;AACA;;AACD,WAAO,KAAKrB,YAAL,CAAkB4B,KAAlB,GAA0BI,GAA1B,CAA+BC,IAAD,KAAW;AAAEM,MAAAA,EAAE,EAAEN,IAAI,CAACf,GAAX;AAAgBkB,MAAAA,IAAI,EAAEH,IAAI,CAACd;AAA3B,KAAX,CAA9B,CAAP;AACA;;AAzIe,C,CA4IjB;;;AACA,MAAMsB,UAAU,GAAG,IAAI7D,UAAJ,EAAnB,C,CAEA;;AACAF,QAAQ,CAACgE,KAAT,CAAe,uBAAf,EAAwC,UAAUC,YAAV,EAAwB;AAC/DF,EAAAA,UAAU,CAACnD,YAAX,CAAwBqD,YAAxB;AACA,CAFD;AAIAvE,MAAM,CAACwE,OAAP,CAAe;AACdC,EAAAA,UAAU,EAAE,YAAa;AACxB,UAAMC,MAAM,GAAG1E,MAAM,CAAC2E,MAAP,EAAf;;AACA,QAAID,MAAM,IAAInE,OAAO,CAACmE,MAAD,EAAS,KAAT,CAArB,EAAsC;AACrC,aAAOL,UAAU,CAACvC,OAAX,CAAmB,YAAnB,CAAP;AACA;;AACD,UAAM,IAAI9B,MAAM,CAAC2C,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAvD,CAAN;AACA;AAPa,CAAf","sourcesContent":["import './settings';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { Users, Rooms } from '../../models/server';\nimport { settings } from '../../settings/server';\nimport { hasRole } from '../../authorization/server';\n\n/**\n * BotHelpers helps bots\n * \"private\" properties use meteor collection cursors, so they stay reactive\n * \"public\" properties use getters to fetch and filter collections as array\n */\nclass BotHelpers {\n\tconstructor() {\n\t\tthis.queries = {\n\t\t\tonline: { status: { $ne: 'offline' } },\n\t\t\tusers: { roles: { $not: { $all: ['bot'] } } },\n\t\t};\n\t}\n\n\t// setup collection cursors with array of fields from setting\n\tsetupCursors(fieldsSetting) {\n\t\tthis.userFields = {};\n\t\tif (typeof fieldsSetting === 'string') {\n\t\t\tfieldsSetting = fieldsSetting.split(',');\n\t\t}\n\t\tfieldsSetting.forEach((n) => {\n\t\t\tthis.userFields[n.trim()] = 1;\n\t\t});\n\t\tthis._allUsers = Users.find(this.queries.users, { fields: this.userFields });\n\t\tthis._onlineUsers = Users.find({ $and: [this.queries.users, this.queries.online] }, { fields: this.userFields });\n\t}\n\n\t// request methods or props as arguments to Meteor.call\n\trequest(prop, ...params) {\n\t\tif (typeof this[prop] === 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\tif (typeof this[prop] === 'function') {\n\t\t\treturn this[prop](...params);\n\t\t}\n\t\treturn this[prop];\n\t}\n\n\taddUserToRole(userName, roleName) {\n\t\tMeteor.call('authorization:addUserToRole', roleName, userName);\n\t}\n\n\tremoveUserFromRole(userName, roleName) {\n\t\tMeteor.call('authorization:removeUserFromRole', roleName, userName);\n\t}\n\n\taddUserToRoom(userName, room) {\n\t\tconst foundRoom = Rooms.findOneByIdOrName(room);\n\n\t\tif (!_.isObject(foundRoom)) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tconst data = {};\n\t\tdata.rid = foundRoom._id;\n\t\tdata.username = userName;\n\t\tMeteor.call('addUserToRoom', data);\n\t}\n\n\tremoveUserFromRoom(userName, room) {\n\t\tconst foundRoom = Rooms.findOneByIdOrName(room);\n\n\t\tif (!_.isObject(foundRoom)) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\t\tconst data = {};\n\t\tdata.rid = foundRoom._id;\n\t\tdata.username = userName;\n\t\tMeteor.call('removeUserFromRoom', data);\n\t}\n\n\t// generic error whenever property access insufficient to fill request\n\trequestError() {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Bot request not allowed', {\n\t\t\tmethod: 'botRequest',\n\t\t\taction: 'bot_request',\n\t\t});\n\t}\n\n\t// \"public\" properties accessed by getters\n\t// allUsers / onlineUsers return whichever properties are enabled by settings\n\tget allUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._allUsers.fetch();\n\t}\n\n\tget onlineUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._onlineUsers.fetch();\n\t}\n\n\tget allUsernames() {\n\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._allUsers.fetch().map((user) => user.username);\n\t}\n\n\tget onlineUsernames() {\n\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._onlineUsers.fetch().map((user) => user.username);\n\t}\n\n\tget allNames() {\n\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._allUsers.fetch().map((user) => user.name);\n\t}\n\n\tget onlineNames() {\n\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._onlineUsers.fetch().map((user) => user.name);\n\t}\n\n\tget allIDs() {\n\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._allUsers.fetch().map((user) => ({ id: user._id, name: user.username }));\n\t}\n\n\tget onlineIDs() {\n\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._onlineUsers.fetch().map((user) => ({ id: user._id, name: user.username }));\n\t}\n}\n\n// add class to meteor methods\nconst botHelpers = new BotHelpers();\n\n// init cursors with fields setting and update on setting change\nsettings.watch('BotHelpers_userFields', function (settingValue) {\n\tbotHelpers.setupCursors(settingValue);\n});\n\nMeteor.methods({\n\tbotRequest: (...args) => {\n\t\tconst userID = Meteor.userId();\n\t\tif (userID && hasRole(userID, 'bot')) {\n\t\t\treturn botHelpers.request(...args);\n\t\t}\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'botRequest' });\n\t},\n});\n"]},"sourceType":"module","hash":"5b11c60446b4b9bca9397cc60487ef92f96e9941"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/sendToCRM.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/sendToCRM.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/sendToCRM.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/sendToCRM.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/sendToCRM.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 1);\nlet Messages, LivechatRooms;\nmodule.link(\"../../../models\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 2);\nlet Livechat;\nmodule.link(\"../lib/Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 3);\nlet normalizeMessageFileUpload;\nmodule.link(\"../../../utils/server/functions/normalizeMessageFileUpload\", {\n  normalizeMessageFileUpload(v) {\n    normalizeMessageFileUpload = v;\n  }\n\n}, 4);\nconst msgNavType = 'livechat_navigation_history';\nconst msgClosingType = 'livechat-close';\n\nconst sendMessageType = msgType => {\n  switch (msgType) {\n    case msgClosingType:\n      return true;\n\n    case msgNavType:\n      return settings.get('Livechat_Visitor_navigation_as_a_message') && settings.get('Send_visitor_navigation_history_livechat_webhook_request');\n\n    default:\n      return false;\n  }\n};\n\nconst getAdditionalFieldsByType = (type, room) => {\n  const {\n    departmentId,\n    servedBy,\n    closedAt,\n    closedBy,\n    closer,\n    oldServedBy,\n    oldDepartmentId\n  } = room;\n\n  switch (type) {\n    case 'LivechatSessionStarted':\n    case 'LivechatSessionQueued':\n      return {\n        departmentId\n      };\n\n    case 'LivechatSession':\n      return {\n        departmentId,\n        servedBy,\n        closedAt,\n        closedBy,\n        closer\n      };\n\n    case 'LivechatSessionTaken':\n      return {\n        departmentId,\n        servedBy\n      };\n\n    case 'LivechatSessionForwarded':\n      return {\n        departmentId,\n        servedBy,\n        oldDepartmentId,\n        oldServedBy\n      };\n\n    default:\n      return {};\n  }\n};\n\nfunction sendToCRM(type, room) {\n  let includeMessages = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (!settings.get('Livechat_webhookUrl')) {\n    return room;\n  }\n\n  const postData = Livechat.getLivechatRoomGuestInfo(room);\n  postData.type = type;\n  postData.messages = [];\n  let messages;\n\n  if (typeof includeMessages === 'boolean' && includeMessages) {\n    messages = Messages.findVisibleByRoomId(room._id, {\n      sort: {\n        ts: 1\n      }\n    });\n  } else if (includeMessages instanceof Array) {\n    messages = includeMessages;\n  }\n\n  if (messages) {\n    messages.forEach(message => {\n      if (message.t && !sendMessageType(message.t)) {\n        return;\n      }\n\n      const msg = {\n        _id: message._id,\n        username: message.u.username,\n        msg: message.msg,\n        ts: message.ts,\n        editedAt: message.editedAt\n      };\n\n      if (message.u.username !== postData.visitor.username) {\n        msg.agentId = message.u._id;\n      }\n\n      if (message.t === msgNavType) {\n        msg.navigation = message.navigation;\n      }\n\n      if (message.t === msgClosingType) {\n        msg.closingMessage = true;\n      }\n\n      if (message.file) {\n        msg.file = message.file;\n        msg.attachments = message.attachments;\n      }\n\n      const {\n        u\n      } = message;\n      postData.messages.push(Promise.await(normalizeMessageFileUpload(_objectSpread({\n        u\n      }, msg))));\n    });\n  }\n\n  const additionalData = getAdditionalFieldsByType(type, room);\n  const responseData = Object.assign(postData, additionalData);\n  const response = Livechat.sendRequest(responseData);\n\n  if (response && response.data && response.data.data) {\n    LivechatRooms.saveCRMDataByRoomId(room._id, response.data.data);\n  }\n\n  return room;\n}\n\ncallbacks.add('livechat.closeRoom', room => {\n  if (!settings.get('Livechat_webhook_on_close')) {\n    return room;\n  }\n\n  return sendToCRM('LivechatSession', room);\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-close-room');\ncallbacks.add('livechat.newRoom', room => {\n  if (!settings.get('Livechat_webhook_on_start')) {\n    return room;\n  }\n\n  return sendToCRM('LivechatSessionStart', room);\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-start-room');\ncallbacks.add('livechat.afterTakeInquiry', inquiry => {\n  if (!settings.get('Livechat_webhook_on_chat_taken')) {\n    return inquiry;\n  }\n\n  const {\n    rid\n  } = inquiry;\n  const room = LivechatRooms.findOneById(rid);\n  return sendToCRM('LivechatSessionTaken', room);\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-room-taken');\ncallbacks.add('livechat.chatQueued', room => {\n  if (!settings.get('Livechat_webhook_on_chat_queued')) {\n    return room;\n  }\n\n  return sendToCRM('LivechatSessionQueued', room);\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-room-queued');\ncallbacks.add('livechat.afterForwardChatToAgent', params => {\n  const {\n    rid,\n    oldServedBy\n  } = params;\n\n  if (!settings.get('Livechat_webhook_on_forward')) {\n    return params;\n  }\n\n  const originalRoom = LivechatRooms.findOneById(rid);\n  const room = Object.assign(originalRoom, {\n    oldServedBy\n  });\n  sendToCRM('LivechatSessionForwarded', room);\n  return params;\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-room-forwarded-to-agent');\ncallbacks.add('livechat.afterForwardChatToDepartment', params => {\n  const {\n    rid,\n    oldDepartmentId\n  } = params;\n\n  if (!settings.get('Livechat_webhook_on_forward')) {\n    return params;\n  }\n\n  const originalRoom = LivechatRooms.findOneById(rid);\n  const room = Object.assign(originalRoom, {\n    oldDepartmentId\n  });\n  sendToCRM('LivechatSessionForwarded', room);\n  return params;\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-room-forwarded-to-department');\ncallbacks.add('livechat.saveInfo', room => {\n  // Do not send to CRM if the chat is still open\n  if (room.open) {\n    return room;\n  }\n\n  return sendToCRM('LivechatEdit', room);\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-save-info');\ncallbacks.add('afterSaveMessage', function (message, room) {\n  // only call webhook if it is a livechat room\n  if (room.t !== 'l' || room.v == null || room.v.token == null) {\n    return message;\n  } // if the message has a token, it was sent from the visitor\n  // if not, it was sent from the agent\n\n\n  if (message.token) {\n    if (!settings.get('Livechat_webhook_on_visitor_message')) {\n      return message;\n    }\n  } else if (!settings.get('Livechat_webhook_on_agent_message')) {\n    return message;\n  } // if the message has a type means it is a special message (like the closing comment), so skips\n  // unless the settings that handle with visitor navigation history are enabled\n\n\n  if (message.t && !sendMessageType(message.t)) {\n    return message;\n  }\n\n  sendToCRM('Message', room, [message]);\n  return message;\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-message');\ncallbacks.add('livechat.leadCapture', room => {\n  if (!settings.get('Livechat_webhook_on_capture')) {\n    return room;\n  }\n\n  return sendToCRM('LeadCapture', room, false);\n}, callbacks.priority.MEDIUM, 'livechat-send-crm-lead-capture');","map":{"version":3,"sources":["app/livechat/server/hooks/sendToCRM.js"],"names":["_objectSpread","module","link","default","v","settings","callbacks","Messages","LivechatRooms","Livechat","normalizeMessageFileUpload","msgNavType","msgClosingType","sendMessageType","msgType","get","getAdditionalFieldsByType","type","room","departmentId","servedBy","closedAt","closedBy","closer","oldServedBy","oldDepartmentId","sendToCRM","includeMessages","postData","getLivechatRoomGuestInfo","messages","findVisibleByRoomId","_id","sort","ts","Array","forEach","message","t","msg","username","u","editedAt","visitor","agentId","navigation","closingMessage","file","attachments","push","Promise","await","additionalData","responseData","Object","assign","response","sendRequest","data","saveCRMDataByRoomId","add","priority","MEDIUM","inquiry","rid","findOneById","params","originalRoom","open","token"],"mappings":"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","sourcesContent":["import { settings } from '../../../settings/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Messages, LivechatRooms } from '../../../models';\nimport { Livechat } from '../lib/Livechat';\nimport { normalizeMessageFileUpload } from '../../../utils/server/functions/normalizeMessageFileUpload';\n\nconst msgNavType = 'livechat_navigation_history';\nconst msgClosingType = 'livechat-close';\n\nconst sendMessageType = (msgType) => {\n\tswitch (msgType) {\n\t\tcase msgClosingType:\n\t\t\treturn true;\n\t\tcase msgNavType:\n\t\t\treturn (\n\t\t\t\tsettings.get('Livechat_Visitor_navigation_as_a_message') && settings.get('Send_visitor_navigation_history_livechat_webhook_request')\n\t\t\t);\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n\nconst getAdditionalFieldsByType = (type, room) => {\n\tconst { departmentId, servedBy, closedAt, closedBy, closer, oldServedBy, oldDepartmentId } = room;\n\tswitch (type) {\n\t\tcase 'LivechatSessionStarted':\n\t\tcase 'LivechatSessionQueued':\n\t\t\treturn { departmentId };\n\t\tcase 'LivechatSession':\n\t\t\treturn { departmentId, servedBy, closedAt, closedBy, closer };\n\t\tcase 'LivechatSessionTaken':\n\t\t\treturn { departmentId, servedBy };\n\t\tcase 'LivechatSessionForwarded':\n\t\t\treturn { departmentId, servedBy, oldDepartmentId, oldServedBy };\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\nfunction sendToCRM(type, room, includeMessages = true) {\n\tif (!settings.get('Livechat_webhookUrl')) {\n\t\treturn room;\n\t}\n\n\tconst postData = Livechat.getLivechatRoomGuestInfo(room);\n\n\tpostData.type = type;\n\n\tpostData.messages = [];\n\n\tlet messages;\n\tif (typeof includeMessages === 'boolean' && includeMessages) {\n\t\tmessages = Messages.findVisibleByRoomId(room._id, { sort: { ts: 1 } });\n\t} else if (includeMessages instanceof Array) {\n\t\tmessages = includeMessages;\n\t}\n\n\tif (messages) {\n\t\tmessages.forEach((message) => {\n\t\t\tif (message.t && !sendMessageType(message.t)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst msg = {\n\t\t\t\t_id: message._id,\n\t\t\t\tusername: message.u.username,\n\t\t\t\tmsg: message.msg,\n\t\t\t\tts: message.ts,\n\t\t\t\teditedAt: message.editedAt,\n\t\t\t};\n\n\t\t\tif (message.u.username !== postData.visitor.username) {\n\t\t\t\tmsg.agentId = message.u._id;\n\t\t\t}\n\n\t\t\tif (message.t === msgNavType) {\n\t\t\t\tmsg.navigation = message.navigation;\n\t\t\t}\n\n\t\t\tif (message.t === msgClosingType) {\n\t\t\t\tmsg.closingMessage = true;\n\t\t\t}\n\n\t\t\tif (message.file) {\n\t\t\t\tmsg.file = message.file;\n\t\t\t\tmsg.attachments = message.attachments;\n\t\t\t}\n\n\t\t\tconst { u } = message;\n\t\t\tpostData.messages.push(Promise.await(normalizeMessageFileUpload({ u, ...msg })));\n\t\t});\n\t}\n\n\tconst additionalData = getAdditionalFieldsByType(type, room);\n\tconst responseData = Object.assign(postData, additionalData);\n\n\tconst response = Livechat.sendRequest(responseData);\n\n\tif (response && response.data && response.data.data) {\n\t\tLivechatRooms.saveCRMDataByRoomId(room._id, response.data.data);\n\t}\n\n\treturn room;\n}\n\ncallbacks.add(\n\t'livechat.closeRoom',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_close')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSession', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-close-room',\n);\n\ncallbacks.add(\n\t'livechat.newRoom',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_start')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionStart', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-start-room',\n);\n\ncallbacks.add(\n\t'livechat.afterTakeInquiry',\n\t(inquiry) => {\n\t\tif (!settings.get('Livechat_webhook_on_chat_taken')) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\tconst { rid } = inquiry;\n\t\tconst room = LivechatRooms.findOneById(rid);\n\n\t\treturn sendToCRM('LivechatSessionTaken', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-taken',\n);\n\ncallbacks.add(\n\t'livechat.chatQueued',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_chat_queued')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionQueued', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-queued',\n);\n\ncallbacks.add(\n\t'livechat.afterForwardChatToAgent',\n\t(params) => {\n\t\tconst { rid, oldServedBy } = params;\n\t\tif (!settings.get('Livechat_webhook_on_forward')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst originalRoom = LivechatRooms.findOneById(rid);\n\t\tconst room = Object.assign(originalRoom, { oldServedBy });\n\t\tsendToCRM('LivechatSessionForwarded', room);\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-forwarded-to-agent',\n);\n\ncallbacks.add(\n\t'livechat.afterForwardChatToDepartment',\n\t(params) => {\n\t\tconst { rid, oldDepartmentId } = params;\n\t\tif (!settings.get('Livechat_webhook_on_forward')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst originalRoom = LivechatRooms.findOneById(rid);\n\t\tconst room = Object.assign(originalRoom, { oldDepartmentId });\n\t\tsendToCRM('LivechatSessionForwarded', room);\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-forwarded-to-department',\n);\n\ncallbacks.add(\n\t'livechat.saveInfo',\n\t(room) => {\n\t\t// Do not send to CRM if the chat is still open\n\t\tif (room.open) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatEdit', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-save-info',\n);\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tfunction (message, room) {\n\t\t// only call webhook if it is a livechat room\n\t\tif (room.t !== 'l' || room.v == null || room.v.token == null) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// if the message has a token, it was sent from the visitor\n\t\t// if not, it was sent from the agent\n\t\tif (message.token) {\n\t\t\tif (!settings.get('Livechat_webhook_on_visitor_message')) {\n\t\t\t\treturn message;\n\t\t\t}\n\t\t} else if (!settings.get('Livechat_webhook_on_agent_message')) {\n\t\t\treturn message;\n\t\t}\n\t\t// if the message has a type means it is a special message (like the closing comment), so skips\n\t\t// unless the settings that handle with visitor navigation history are enabled\n\t\tif (message.t && !sendMessageType(message.t)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tsendToCRM('Message', room, [message]);\n\t\treturn message;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-message',\n);\n\ncallbacks.add(\n\t'livechat.leadCapture',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_capture')) {\n\t\t\treturn room;\n\t\t}\n\t\treturn sendToCRM('LeadCapture', room, false);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-lead-capture',\n);\n"]},"sourceType":"module","hash":"3c9bcf0d54272d2f9d164c731b50f3d768c5cc60"}

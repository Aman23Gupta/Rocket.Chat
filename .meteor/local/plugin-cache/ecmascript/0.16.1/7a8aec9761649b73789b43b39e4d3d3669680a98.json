{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/methods/registerGuest.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/methods/registerGuest.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/methods/registerGuest.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/methods/registerGuest.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/methods/registerGuest.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Messages, LivechatRooms, LivechatVisitors;\nmodule.link(\"../../../models\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  }\n\n}, 1);\nlet Livechat;\nmodule.link(\"../lib/Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 2);\nMeteor.methods({\n  'livechat:registerGuest'() {\n    let {\n      token,\n      name,\n      email,\n      department,\n      customFields\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const userId = Livechat.registerGuest.call(this, {\n      token,\n      name,\n      email,\n      department\n    }); // update visited page history to not expire\n\n    Messages.keepHistoryForToken(token);\n    const visitor = LivechatVisitors.getVisitorByToken(token, {\n      fields: {\n        token: 1,\n        name: 1,\n        username: 1,\n        visitorEmails: 1,\n        department: 1\n      }\n    }); // If it's updating an existing visitor, it must also update the roomInfo\n\n    const cursor = LivechatRooms.findOpenByVisitorToken(token);\n    cursor.forEach(room => {\n      Livechat.saveRoomInfo(room, visitor);\n    });\n\n    if (customFields && customFields instanceof Array) {\n      customFields.forEach(customField => {\n        if (typeof customField !== 'object') {\n          return;\n        }\n\n        if (!customField.scope || customField.scope !== 'room') {\n          const {\n            key,\n            value,\n            overwrite\n          } = customField;\n          LivechatVisitors.updateLivechatDataByToken(token, key, value, overwrite);\n        }\n      });\n    }\n\n    return {\n      userId,\n      visitor\n    };\n  }\n\n});","map":{"version":3,"sources":["app/livechat/server/methods/registerGuest.js"],"names":["Meteor","module","link","v","Messages","LivechatRooms","LivechatVisitors","Livechat","methods","token","name","email","department","customFields","userId","registerGuest","call","keepHistoryForToken","visitor","getVisitorByToken","fields","username","visitorEmails","cursor","findOpenByVisitorToken","forEach","room","saveRoomInfo","Array","customField","scope","key","value","overwrite","updateLivechatDataByToken"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,QAAJ,EAAaC,aAAb,EAA2BC,gBAA3B;AAA4CL,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACE,EAAAA,QAAQ,CAACD,CAAD,EAAG;AAACC,IAAAA,QAAQ,GAACD,CAAT;AAAW,GAAxB;;AAAyBE,EAAAA,aAAa,CAACF,CAAD,EAAG;AAACE,IAAAA,aAAa,GAACF,CAAd;AAAgB,GAA1D;;AAA2DG,EAAAA,gBAAgB,CAACH,CAAD,EAAG;AAACG,IAAAA,gBAAgB,GAACH,CAAjB;AAAmB;;AAAlG,CAA9B,EAAkI,CAAlI;AAAqI,IAAII,QAAJ;AAAaN,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACK,EAAAA,QAAQ,CAACJ,CAAD,EAAG;AAACI,IAAAA,QAAQ,GAACJ,CAAT;AAAW;;AAAxB,CAA9B,EAAwD,CAAxD;AAK9PH,MAAM,CAACQ,OAAP,CAAe;AACd,6BAAgF;AAAA,QAAvD;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA,UAAtB;AAAkCC,MAAAA;AAAlC,KAAuD,uEAAJ,EAAI;AAC/E,UAAMC,MAAM,GAAGP,QAAQ,CAACQ,aAAT,CAAuBC,IAAvB,CAA4B,IAA5B,EAAkC;AAChDP,MAAAA,KADgD;AAEhDC,MAAAA,IAFgD;AAGhDC,MAAAA,KAHgD;AAIhDC,MAAAA;AAJgD,KAAlC,CAAf,CAD+E,CAQ/E;;AACAR,IAAAA,QAAQ,CAACa,mBAAT,CAA6BR,KAA7B;AAEA,UAAMS,OAAO,GAAGZ,gBAAgB,CAACa,iBAAjB,CAAmCV,KAAnC,EAA0C;AACzDW,MAAAA,MAAM,EAAE;AACPX,QAAAA,KAAK,EAAE,CADA;AAEPC,QAAAA,IAAI,EAAE,CAFC;AAGPW,QAAAA,QAAQ,EAAE,CAHH;AAIPC,QAAAA,aAAa,EAAE,CAJR;AAKPV,QAAAA,UAAU,EAAE;AALL;AADiD,KAA1C,CAAhB,CAX+E,CAqB/E;;AACA,UAAMW,MAAM,GAAGlB,aAAa,CAACmB,sBAAd,CAAqCf,KAArC,CAAf;AACAc,IAAAA,MAAM,CAACE,OAAP,CAAgBC,IAAD,IAAU;AACxBnB,MAAAA,QAAQ,CAACoB,YAAT,CAAsBD,IAAtB,EAA4BR,OAA5B;AACA,KAFD;;AAIA,QAAIL,YAAY,IAAIA,YAAY,YAAYe,KAA5C,EAAmD;AAClDf,MAAAA,YAAY,CAACY,OAAb,CAAsBI,WAAD,IAAiB;AACrC,YAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACpC;AACA;;AAED,YAAI,CAACA,WAAW,CAACC,KAAb,IAAsBD,WAAW,CAACC,KAAZ,KAAsB,MAAhD,EAAwD;AACvD,gBAAM;AAAEC,YAAAA,GAAF;AAAOC,YAAAA,KAAP;AAAcC,YAAAA;AAAd,cAA4BJ,WAAlC;AACAvB,UAAAA,gBAAgB,CAAC4B,yBAAjB,CAA2CzB,KAA3C,EAAkDsB,GAAlD,EAAuDC,KAAvD,EAA8DC,SAA9D;AACA;AACD,OATD;AAUA;;AAED,WAAO;AACNnB,MAAAA,MADM;AAENI,MAAAA;AAFM,KAAP;AAIA;;AA7Ca,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Messages, LivechatRooms, LivechatVisitors } from '../../../models';\nimport { Livechat } from '../lib/Livechat';\n\nMeteor.methods({\n\t'livechat:registerGuest'({ token, name, email, department, customFields } = {}) {\n\t\tconst userId = Livechat.registerGuest.call(this, {\n\t\t\ttoken,\n\t\t\tname,\n\t\t\temail,\n\t\t\tdepartment,\n\t\t});\n\n\t\t// update visited page history to not expire\n\t\tMessages.keepHistoryForToken(token);\n\n\t\tconst visitor = LivechatVisitors.getVisitorByToken(token, {\n\t\t\tfields: {\n\t\t\t\ttoken: 1,\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t\tvisitorEmails: 1,\n\t\t\t\tdepartment: 1,\n\t\t\t},\n\t\t});\n\n\t\t// If it's updating an existing visitor, it must also update the roomInfo\n\t\tconst cursor = LivechatRooms.findOpenByVisitorToken(token);\n\t\tcursor.forEach((room) => {\n\t\t\tLivechat.saveRoomInfo(room, visitor);\n\t\t});\n\n\t\tif (customFields && customFields instanceof Array) {\n\t\t\tcustomFields.forEach((customField) => {\n\t\t\t\tif (typeof customField !== 'object') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!customField.scope || customField.scope !== 'room') {\n\t\t\t\t\tconst { key, value, overwrite } = customField;\n\t\t\t\t\tLivechatVisitors.updateLivechatDataByToken(token, key, value, overwrite);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tuserId,\n\t\t\tvisitor,\n\t\t};\n\t},\n});\n"]},"sourceType":"module","hash":"7a8aec9761649b73789b43b39e4d3d3669680a98"}

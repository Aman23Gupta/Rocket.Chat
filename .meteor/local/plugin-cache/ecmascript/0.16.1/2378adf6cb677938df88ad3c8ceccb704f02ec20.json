{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/lib/rooms.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/lib/rooms.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/lib/rooms.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/lib/rooms.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/lib/rooms.js"}},"code":"module.export({\n  findAdminRooms: () => findAdminRooms,\n  findAdminRoom: () => findAdminRoom,\n  findChannelAndPrivateAutocomplete: () => findChannelAndPrivateAutocomplete,\n  findAdminRoomsAutocomplete: () => findAdminRoomsAutocomplete,\n  findChannelAndPrivateAutocompleteWithPagination: () => findChannelAndPrivateAutocompleteWithPagination,\n  findRoomsAvailableForTeams: () => findRoomsAvailableForTeams\n});\nlet hasPermissionAsync, hasAtLeastOnePermissionAsync;\nmodule.link(\"../../../authorization/server/functions/hasPermission\", {\n  hasPermissionAsync(v) {\n    hasPermissionAsync = v;\n  },\n\n  hasAtLeastOnePermissionAsync(v) {\n    hasAtLeastOnePermissionAsync = v;\n  }\n\n}, 0);\nlet Rooms;\nmodule.link(\"../../../models/server/raw\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 1);\nlet Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 2);\n\nfunction findAdminRooms(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      filter,\n      types = [],\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref;\n\n    if (!Promise.await(hasPermissionAsync(uid, 'view-room-administration'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const fields = {\n      prid: 1,\n      fname: 1,\n      name: 1,\n      t: 1,\n      cl: 1,\n      u: 1,\n      usernames: 1,\n      usersCount: 1,\n      muted: 1,\n      unmuted: 1,\n      ro: 1,\n      default: 1,\n      favorite: 1,\n      featured: 1,\n      topic: 1,\n      msgs: 1,\n      archived: 1,\n      tokenpass: 1,\n      teamId: 1,\n      teamMain: 1\n    };\n    const name = filter && filter.trim();\n    const discussion = types && types.includes('discussions');\n    const includeTeams = types && types.includes('teams');\n    const showOnlyTeams = types.length === 1 && types.includes('teams');\n    const typesToRemove = ['discussions', 'teams'];\n    const showTypes = Array.isArray(types) ? types.filter(type => !typesToRemove.includes(type)) : [];\n    const options = {\n      fields,\n      sort: sort || {\n        default: -1,\n        name: 1\n      },\n      skip: offset,\n      limit: count\n    };\n    let cursor;\n\n    if (name && showTypes.length) {\n      cursor = Rooms.findByNameContainingAndTypes(name, showTypes, discussion, includeTeams, showOnlyTeams, options);\n    } else if (showTypes.length) {\n      cursor = Rooms.findByTypes(showTypes, discussion, includeTeams, showOnlyTeams, options);\n    } else {\n      cursor = Rooms.findByNameContaining(name, discussion, includeTeams, showOnlyTeams, options);\n    }\n\n    const total = Promise.await(cursor.count());\n    const rooms = Promise.await(cursor.toArray());\n    return {\n      rooms,\n      count: rooms.length,\n      offset,\n      total\n    };\n  });\n}\n\nfunction findAdminRoom(_ref2) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      rid\n    } = _ref2;\n\n    if (!Promise.await(hasPermissionAsync(uid, 'view-room-administration'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const fields = {\n      prid: 1,\n      fname: 1,\n      name: 1,\n      t: 1,\n      cl: 1,\n      u: 1,\n      usernames: 1,\n      usersCount: 1,\n      muted: 1,\n      unmuted: 1,\n      ro: 1,\n      default: 1,\n      favorite: 1,\n      featured: 1,\n      topic: 1,\n      msgs: 1,\n      archived: 1,\n      tokenpass: 1,\n      announcement: 1,\n      description: 1\n    };\n    return Rooms.findOneById(rid, {\n      fields\n    });\n  });\n}\n\nfunction findChannelAndPrivateAutocomplete(_ref3) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      selector\n    } = _ref3;\n    const options = {\n      fields: {\n        _id: 1,\n        fname: 1,\n        name: 1,\n        t: 1,\n        avatarETag: 1\n      },\n      limit: 10,\n      sort: {\n        name: 1\n      }\n    };\n    const userRoomsIds = Subscriptions.cachedFindByUserId(uid, {\n      fields: {\n        rid: 1\n      }\n    }).fetch().map(item => item.rid);\n    const rooms = Promise.await(Rooms.findRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options).toArray());\n    return {\n      items: rooms\n    };\n  });\n}\n\nfunction findAdminRoomsAutocomplete(_ref4) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      selector\n    } = _ref4;\n\n    if (!Promise.await(hasAtLeastOnePermissionAsync(uid, ['view-room-administration', 'can-audit']))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const options = {\n      fields: {\n        _id: 1,\n        fname: 1,\n        name: 1,\n        t: 1,\n        avatarETag: 1\n      },\n      limit: 10,\n      sort: {\n        name: 1\n      }\n    };\n    const rooms = Promise.await(Rooms.findRoomsByNameOrFnameStarting(selector.name, options).toArray());\n    return {\n      items: rooms\n    };\n  });\n}\n\nfunction findChannelAndPrivateAutocompleteWithPagination(_ref5) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      selector,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref5;\n    const userRoomsIds = Subscriptions.cachedFindByUserId(uid, {\n      fields: {\n        rid: 1\n      }\n    }).fetch().map(item => item.rid);\n    const options = {\n      fields: {\n        _id: 1,\n        fname: 1,\n        name: 1,\n        t: 1,\n        avatarETag: 1\n      },\n      sort: sort || {\n        name: 1\n      },\n      skip: offset,\n      limit: count\n    };\n    const cursor = Promise.await(Rooms.findRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options));\n    const total = Promise.await(cursor.count());\n    const rooms = Promise.await(cursor.toArray());\n    return {\n      items: rooms,\n      total\n    };\n  });\n}\n\nfunction findRoomsAvailableForTeams(_ref6) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      name\n    } = _ref6;\n    const options = {\n      fields: {\n        _id: 1,\n        fname: 1,\n        name: 1,\n        t: 1,\n        avatarETag: 1\n      },\n      limit: 10,\n      sort: {\n        name: 1\n      }\n    };\n    const userRooms = Subscriptions.findByUserIdAndRoles(uid, ['owner'], {\n      fields: {\n        rid: 1\n      }\n    }).fetch().map(item => item.rid);\n    const rooms = Promise.await(Rooms.findChannelAndGroupListWithoutTeamsByNameStartingByOwner(uid, name, userRooms, options).toArray());\n    return {\n      items: rooms\n    };\n  });\n}","map":{"version":3,"sources":["app/api/server/lib/rooms.js"],"names":["module","export","findAdminRooms","findAdminRoom","findChannelAndPrivateAutocomplete","findAdminRoomsAutocomplete","findChannelAndPrivateAutocompleteWithPagination","findRoomsAvailableForTeams","hasPermissionAsync","hasAtLeastOnePermissionAsync","link","v","Rooms","Subscriptions","uid","filter","types","pagination","offset","count","sort","Error","fields","prid","fname","name","t","cl","u","usernames","usersCount","muted","unmuted","ro","default","favorite","featured","topic","msgs","archived","tokenpass","teamId","teamMain","trim","discussion","includes","includeTeams","showOnlyTeams","length","typesToRemove","showTypes","Array","isArray","type","options","skip","limit","cursor","findByNameContainingAndTypes","findByTypes","findByNameContaining","total","rooms","toArray","rid","announcement","description","findOneById","selector","_id","avatarETag","userRoomsIds","cachedFindByUserId","fetch","map","item","findRoomsWithoutDiscussionsByRoomIds","items","findRoomsByNameOrFnameStarting","userRooms","findByUserIdAndRoles","findChannelAndGroupListWithoutTeamsByNameStartingByOwner"],"mappings":"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","sourcesContent":["import { hasPermissionAsync, hasAtLeastOnePermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { Rooms } from '../../../models/server/raw';\nimport { Subscriptions } from '../../../models/server';\n\nexport async function findAdminRooms({ uid, filter, types = [], pagination: { offset, count, sort } }) {\n\tif (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst fields = {\n\t\tprid: 1,\n\t\tfname: 1,\n\t\tname: 1,\n\t\tt: 1,\n\t\tcl: 1,\n\t\tu: 1,\n\t\tusernames: 1,\n\t\tusersCount: 1,\n\t\tmuted: 1,\n\t\tunmuted: 1,\n\t\tro: 1,\n\t\tdefault: 1,\n\t\tfavorite: 1,\n\t\tfeatured: 1,\n\t\ttopic: 1,\n\t\tmsgs: 1,\n\t\tarchived: 1,\n\t\ttokenpass: 1,\n\t\tteamId: 1,\n\t\tteamMain: 1,\n\t};\n\n\tconst name = filter && filter.trim();\n\tconst discussion = types && types.includes('discussions');\n\tconst includeTeams = types && types.includes('teams');\n\tconst showOnlyTeams = types.length === 1 && types.includes('teams');\n\tconst typesToRemove = ['discussions', 'teams'];\n\tconst showTypes = Array.isArray(types) ? types.filter((type) => !typesToRemove.includes(type)) : [];\n\tconst options = {\n\t\tfields,\n\t\tsort: sort || { default: -1, name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tlet cursor;\n\tif (name && showTypes.length) {\n\t\tcursor = Rooms.findByNameContainingAndTypes(name, showTypes, discussion, includeTeams, showOnlyTeams, options);\n\t} else if (showTypes.length) {\n\t\tcursor = Rooms.findByTypes(showTypes, discussion, includeTeams, showOnlyTeams, options);\n\t} else {\n\t\tcursor = Rooms.findByNameContaining(name, discussion, includeTeams, showOnlyTeams, options);\n\t}\n\n\tconst total = await cursor.count();\n\n\tconst rooms = await cursor.toArray();\n\n\treturn {\n\t\trooms,\n\t\tcount: rooms.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findAdminRoom({ uid, rid }) {\n\tif (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst fields = {\n\t\tprid: 1,\n\t\tfname: 1,\n\t\tname: 1,\n\t\tt: 1,\n\t\tcl: 1,\n\t\tu: 1,\n\t\tusernames: 1,\n\t\tusersCount: 1,\n\t\tmuted: 1,\n\t\tunmuted: 1,\n\t\tro: 1,\n\t\tdefault: 1,\n\t\tfavorite: 1,\n\t\tfeatured: 1,\n\t\ttopic: 1,\n\t\tmsgs: 1,\n\t\tarchived: 1,\n\t\ttokenpass: 1,\n\t\tannouncement: 1,\n\t\tdescription: 1,\n\t};\n\n\treturn Rooms.findOneById(rid, { fields });\n}\n\nexport async function findChannelAndPrivateAutocomplete({ uid, selector }) {\n\tconst options = {\n\t\tfields: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst userRoomsIds = Subscriptions.cachedFindByUserId(uid, { fields: { rid: 1 } })\n\t\t.fetch()\n\t\t.map((item) => item.rid);\n\n\tconst rooms = await Rooms.findRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n\nexport async function findAdminRoomsAutocomplete({ uid, selector }) {\n\tif (!(await hasAtLeastOnePermissionAsync(uid, ['view-room-administration', 'can-audit']))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst options = {\n\t\tfields: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst rooms = await Rooms.findRoomsByNameOrFnameStarting(selector.name, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n\nexport async function findChannelAndPrivateAutocompleteWithPagination({ uid, selector, pagination: { offset, count, sort } }) {\n\tconst userRoomsIds = Subscriptions.cachedFindByUserId(uid, { fields: { rid: 1 } })\n\t\t.fetch()\n\t\t.map((item) => item.rid);\n\n\tconst options = {\n\t\tfields: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst cursor = await Rooms.findRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options);\n\n\tconst total = await cursor.count();\n\tconst rooms = await cursor.toArray();\n\n\treturn {\n\t\titems: rooms,\n\t\ttotal,\n\t};\n}\n\nexport async function findRoomsAvailableForTeams({ uid, name }) {\n\tconst options = {\n\t\tfields: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst userRooms = Subscriptions.findByUserIdAndRoles(uid, ['owner'], { fields: { rid: 1 } })\n\t\t.fetch()\n\t\t.map((item) => item.rid);\n\n\tconst rooms = await Rooms.findChannelAndGroupListWithoutTeamsByNameStartingByOwner(uid, name, userRooms, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n"]},"sourceType":"module","hash":"2378adf6cb677938df88ad3c8ceccb704f02ec20"}

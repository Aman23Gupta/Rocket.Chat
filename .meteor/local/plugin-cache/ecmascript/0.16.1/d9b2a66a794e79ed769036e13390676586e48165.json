{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/saveUserProfile.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/saveUserProfile.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/saveUserProfile.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/saveUserProfile.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/saveUserProfile.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet saveCustomFields, passwordPolicy;\nmodule.link(\"../../app/lib/server\", {\n  saveCustomFields(v) {\n    saveCustomFields = v;\n  },\n\n  passwordPolicy(v) {\n    passwordPolicy = v;\n  }\n\n}, 3);\nlet validateUserEditing;\nmodule.link(\"../../app/lib/server/functions/saveUser\", {\n  validateUserEditing(v) {\n    validateUserEditing = v;\n  }\n\n}, 4);\nlet Users;\nmodule.link(\"../../app/models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 5);\nlet rcSettings;\nmodule.link(\"../../app/settings/server\", {\n  settings(v) {\n    rcSettings = v;\n  }\n\n}, 6);\nlet twoFactorRequired;\nmodule.link(\"../../app/2fa/server/twoFactorRequired\", {\n  twoFactorRequired(v) {\n    twoFactorRequired = v;\n  }\n\n}, 7);\nlet saveUserIdentity;\nmodule.link(\"../../app/lib/server/functions/saveUserIdentity\", {\n  saveUserIdentity(v) {\n    saveUserIdentity = v;\n  }\n\n}, 8);\nlet compareUserPassword;\nmodule.link(\"../lib/compareUserPassword\", {\n  compareUserPassword(v) {\n    compareUserPassword = v;\n  }\n\n}, 9);\nlet compareUserPasswordHistory;\nmodule.link(\"../lib/compareUserPasswordHistory\", {\n  compareUserPasswordHistory(v) {\n    compareUserPasswordHistory = v;\n  }\n\n}, 10);\n\nfunction saveUserProfile(settings, customFields) {\n  var _user$services;\n\n  if (!rcSettings.get('Accounts_AllowUserProfileChange')) {\n    throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n      method: 'saveUserProfile'\n    });\n  }\n\n  if (!this.userId) {\n    throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n      method: 'saveUserProfile'\n    });\n  }\n\n  validateUserEditing(this.userId, {\n    _id: this.userId,\n    email: settings.email,\n    username: settings.username,\n    name: settings.realname,\n    password: settings.newPassword,\n    statusText: settings.statusText\n  });\n  const user = Users.findOneById(this.userId);\n\n  if (settings.realname || settings.username) {\n    if (!saveUserIdentity({\n      _id: this.userId,\n      name: settings.realname,\n      username: settings.username\n    })) {\n      throw new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n        method: 'saveUserProfile'\n      });\n    }\n  }\n\n  if (settings.statusText || settings.statusText === '') {\n    Meteor.call('setUserStatus', null, settings.statusText);\n  }\n\n  if (settings.statusType) {\n    Meteor.call('setUserStatus', settings.statusType, null);\n  }\n\n  if (settings.bio != null) {\n    if (typeof settings.bio !== 'string' || settings.bio.length > 260) {\n      throw new Meteor.Error('error-invalid-field', 'bio', {\n        method: 'saveUserProfile'\n      });\n    }\n\n    Users.setBio(user._id, settings.bio.trim());\n  }\n\n  if (settings.nickname != null) {\n    if (typeof settings.nickname !== 'string' || settings.nickname.length > 120) {\n      throw new Meteor.Error('error-invalid-field', 'nickname', {\n        method: 'saveUserProfile'\n      });\n    }\n\n    Users.setNickname(user._id, settings.nickname.trim());\n  }\n\n  if (settings.email) {\n    Meteor.call('setEmail', settings.email);\n  }\n\n  const canChangePasswordForOAuth = rcSettings.get('Accounts_AllowPasswordChangeForOAuthUsers');\n\n  if (canChangePasswordForOAuth || (_user$services = user.services) !== null && _user$services !== void 0 && _user$services.password) {\n    // Should be the last check to prevent error when trying to check password for users without password\n    if (settings.newPassword && rcSettings.get('Accounts_AllowPasswordChange') === true) {\n      var _user$services2, _user$services3;\n\n      // don't let user change to same password\n      if (compareUserPassword(user, {\n        plain: settings.newPassword\n      })) {\n        throw new Meteor.Error('error-password-same-as-current', 'Entered password same as current password', {\n          method: 'saveUserProfile'\n        });\n      }\n\n      if ((_user$services2 = user.services) !== null && _user$services2 !== void 0 && _user$services2.passwordHistory && !compareUserPasswordHistory(user, {\n        plain: settings.newPassword\n      })) {\n        throw new Meteor.Error('error-password-in-history', 'Entered password has been previously used', {\n          method: 'saveUserProfile'\n        });\n      }\n\n      passwordPolicy.validate(settings.newPassword);\n      Accounts.setPassword(this.userId, settings.newPassword, {\n        logout: false\n      });\n      Users.addPasswordToHistory(this.userId, (_user$services3 = user.services) === null || _user$services3 === void 0 ? void 0 : _user$services3.password.bcrypt);\n\n      try {\n        Meteor.call('removeOtherTokens');\n      } catch (e) {\n        Accounts._clearAllLoginTokens(this.userId);\n      }\n    }\n  }\n\n  Users.setProfile(this.userId, {});\n\n  if (customFields && Object.keys(customFields).length) {\n    saveCustomFields(this.userId, customFields);\n  }\n\n  return true;\n}\n\nconst saveUserProfileWithTwoFactor = twoFactorRequired(saveUserProfile, {\n  requireSecondFactor: true\n});\nMeteor.methods({\n  saveUserProfile(settings, customFields) {\n    check(settings, Object);\n    check(customFields, Match.Maybe(Object));\n\n    if (settings.email || settings.newPassword) {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      return saveUserProfileWithTwoFactor.call(this, settings, customFields, ...args);\n    }\n\n    return saveUserProfile.call(this, settings, customFields);\n  }\n\n});","map":{"version":3,"sources":["server/methods/saveUserProfile.js"],"names":["Meteor","module","link","v","Match","check","Accounts","saveCustomFields","passwordPolicy","validateUserEditing","Users","rcSettings","settings","twoFactorRequired","saveUserIdentity","compareUserPassword","compareUserPasswordHistory","saveUserProfile","customFields","get","Error","method","userId","_id","email","username","name","realname","password","newPassword","statusText","user","findOneById","call","statusType","bio","length","setBio","trim","nickname","setNickname","canChangePasswordForOAuth","services","plain","passwordHistory","validate","setPassword","logout","addPasswordToHistory","bcrypt","e","_clearAllLoginTokens","setProfile","Object","keys","saveUserProfileWithTwoFactor","requireSecondFactor","methods","Maybe","args"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { saveCustomFields, passwordPolicy } from '../../app/lib/server';\nimport { validateUserEditing } from '../../app/lib/server/functions/saveUser';\nimport { Users } from '../../app/models/server';\nimport { settings as rcSettings } from '../../app/settings/server';\nimport { twoFactorRequired } from '../../app/2fa/server/twoFactorRequired';\nimport { saveUserIdentity } from '../../app/lib/server/functions/saveUserIdentity';\nimport { compareUserPassword } from '../lib/compareUserPassword';\nimport { compareUserPasswordHistory } from '../lib/compareUserPasswordHistory';\n\nfunction saveUserProfile(settings, customFields) {\n\tif (!rcSettings.get('Accounts_AllowUserProfileChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'saveUserProfile',\n\t\t});\n\t}\n\n\tif (!this.userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'saveUserProfile',\n\t\t});\n\t}\n\n\tvalidateUserEditing(this.userId, {\n\t\t_id: this.userId,\n\t\temail: settings.email,\n\t\tusername: settings.username,\n\t\tname: settings.realname,\n\t\tpassword: settings.newPassword,\n\t\tstatusText: settings.statusText,\n\t});\n\n\tconst user = Users.findOneById(this.userId);\n\n\tif (settings.realname || settings.username) {\n\t\tif (\n\t\t\t!saveUserIdentity({\n\t\t\t\t_id: this.userId,\n\t\t\t\tname: settings.realname,\n\t\t\t\tusername: settings.username,\n\t\t\t})\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (settings.statusText || settings.statusText === '') {\n\t\tMeteor.call('setUserStatus', null, settings.statusText);\n\t}\n\n\tif (settings.statusType) {\n\t\tMeteor.call('setUserStatus', settings.statusType, null);\n\t}\n\n\tif (settings.bio != null) {\n\t\tif (typeof settings.bio !== 'string' || settings.bio.length > 260) {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'bio', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tUsers.setBio(user._id, settings.bio.trim());\n\t}\n\n\tif (settings.nickname != null) {\n\t\tif (typeof settings.nickname !== 'string' || settings.nickname.length > 120) {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'nickname', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tUsers.setNickname(user._id, settings.nickname.trim());\n\t}\n\n\tif (settings.email) {\n\t\tMeteor.call('setEmail', settings.email);\n\t}\n\n\tconst canChangePasswordForOAuth = rcSettings.get('Accounts_AllowPasswordChangeForOAuthUsers');\n\tif (canChangePasswordForOAuth || user.services?.password) {\n\t\t// Should be the last check to prevent error when trying to check password for users without password\n\t\tif (settings.newPassword && rcSettings.get('Accounts_AllowPasswordChange') === true) {\n\t\t\t// don't let user change to same password\n\t\t\tif (compareUserPassword(user, { plain: settings.newPassword })) {\n\t\t\t\tthrow new Meteor.Error('error-password-same-as-current', 'Entered password same as current password', {\n\t\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (user.services?.passwordHistory && !compareUserPasswordHistory(user, { plain: settings.newPassword })) {\n\t\t\t\tthrow new Meteor.Error('error-password-in-history', 'Entered password has been previously used', {\n\t\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tpasswordPolicy.validate(settings.newPassword);\n\n\t\t\tAccounts.setPassword(this.userId, settings.newPassword, {\n\t\t\t\tlogout: false,\n\t\t\t});\n\n\t\t\tUsers.addPasswordToHistory(this.userId, user.services?.password.bcrypt);\n\n\t\t\ttry {\n\t\t\t\tMeteor.call('removeOtherTokens');\n\t\t\t} catch (e) {\n\t\t\t\tAccounts._clearAllLoginTokens(this.userId);\n\t\t\t}\n\t\t}\n\t}\n\n\tUsers.setProfile(this.userId, {});\n\n\tif (customFields && Object.keys(customFields).length) {\n\t\tsaveCustomFields(this.userId, customFields);\n\t}\n\n\treturn true;\n}\n\nconst saveUserProfileWithTwoFactor = twoFactorRequired(saveUserProfile, {\n\trequireSecondFactor: true,\n});\n\nMeteor.methods({\n\tsaveUserProfile(settings, customFields, ...args) {\n\t\tcheck(settings, Object);\n\t\tcheck(customFields, Match.Maybe(Object));\n\n\t\tif (settings.email || settings.newPassword) {\n\t\t\treturn saveUserProfileWithTwoFactor.call(this, settings, customFields, ...args);\n\t\t}\n\n\t\treturn saveUserProfile.call(this, settings, customFields);\n\t},\n});\n"]},"sourceType":"module","hash":"d9b2a66a794e79ed769036e13390676586e48165"}

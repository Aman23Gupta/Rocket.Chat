{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/functions/getMongoInfo.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/utils/server/functions/getMongoInfo.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/functions/getMongoInfo.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/utils/server/functions/getMongoInfo.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/server/functions/getMongoInfo.js"}},"code":"module.export({\n  getOplogInfo: () => getOplogInfo,\n  getMongoInfo: () => getMongoInfo\n});\nlet MongoInternals;\nmodule.link(\"meteor/mongo\", {\n  MongoInternals(v) {\n    MongoInternals = v;\n  }\n\n}, 0);\nlet getOplogHandle;\nmodule.link(\"../../../models/server/models/_oplogHandle\", {\n  getOplogHandle(v) {\n    getOplogHandle = v;\n  }\n\n}, 1);\n\nfunction getOplogInfo() {\n  const {\n    mongo\n  } = MongoInternals.defaultRemoteCollectionDriver();\n  const oplogEnabled = !!Promise.await(getOplogHandle());\n  return {\n    oplogEnabled,\n    mongo\n  };\n}\n\nfunction fallbackMongoInfo() {\n  let mongoVersion;\n  let mongoStorageEngine;\n  const {\n    oplogEnabled,\n    mongo\n  } = getOplogInfo();\n\n  try {\n    const {\n      version\n    } = Promise.await(mongo.db.command({\n      buildinfo: 1\n    }));\n    mongoVersion = version;\n    mongoStorageEngine = 'unknown';\n  } catch (e) {\n    console.error('=== Error getting MongoDB info ===');\n    console.error(e && e.toString());\n    console.error('----------------------------------');\n    console.error(\"Without mongodb version we can't ensure you are running a compatible version.\");\n    console.error('If you are running your mongodb with auth enabled and an user different from admin');\n    console.error('you may need to grant permissions for this user to check cluster data.');\n    console.error('You can do it via mongo shell running the following command replacing');\n    console.error(\"the string YOUR_USER by the correct user's name:\");\n    console.error('');\n    console.error('   db.runCommand({ grantRolesToUser: \"YOUR_USER\" , roles: [{role: \"clusterMonitor\", db: \"admin\"}]})');\n    console.error('');\n    console.error('==================================');\n  }\n\n  return {\n    oplogEnabled,\n    mongoVersion,\n    mongoStorageEngine,\n    mongo\n  };\n}\n\nfunction getMongoInfo() {\n  let mongoVersion;\n  let mongoStorageEngine;\n  const {\n    oplogEnabled,\n    mongo\n  } = getOplogInfo();\n\n  try {\n    const {\n      version,\n      storageEngine\n    } = Promise.await(mongo.db.command({\n      serverStatus: 1\n    }));\n    mongoVersion = version;\n    mongoStorageEngine = storageEngine.name;\n  } catch (e) {\n    return fallbackMongoInfo();\n  }\n\n  return {\n    oplogEnabled,\n    mongoVersion,\n    mongoStorageEngine,\n    mongo\n  };\n}","map":{"version":3,"sources":["app/utils/server/functions/getMongoInfo.js"],"names":["module","export","getOplogInfo","getMongoInfo","MongoInternals","link","v","getOplogHandle","mongo","defaultRemoteCollectionDriver","oplogEnabled","Promise","await","fallbackMongoInfo","mongoVersion","mongoStorageEngine","version","db","command","buildinfo","e","console","error","toString","storageEngine","serverStatus","name"],"mappings":"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","sourcesContent":["import { MongoInternals } from 'meteor/mongo';\n\nimport { getOplogHandle } from '../../../models/server/models/_oplogHandle';\n\nexport function getOplogInfo() {\n\tconst { mongo } = MongoInternals.defaultRemoteCollectionDriver();\n\n\tconst oplogEnabled = !!Promise.await(getOplogHandle());\n\n\treturn { oplogEnabled, mongo };\n}\n\nfunction fallbackMongoInfo() {\n\tlet mongoVersion;\n\tlet mongoStorageEngine;\n\n\tconst { oplogEnabled, mongo } = getOplogInfo();\n\n\ttry {\n\t\tconst { version } = Promise.await(mongo.db.command({ buildinfo: 1 }));\n\t\tmongoVersion = version;\n\t\tmongoStorageEngine = 'unknown';\n\t} catch (e) {\n\t\tconsole.error('=== Error getting MongoDB info ===');\n\t\tconsole.error(e && e.toString());\n\t\tconsole.error('----------------------------------');\n\t\tconsole.error(\"Without mongodb version we can't ensure you are running a compatible version.\");\n\t\tconsole.error('If you are running your mongodb with auth enabled and an user different from admin');\n\t\tconsole.error('you may need to grant permissions for this user to check cluster data.');\n\t\tconsole.error('You can do it via mongo shell running the following command replacing');\n\t\tconsole.error(\"the string YOUR_USER by the correct user's name:\");\n\t\tconsole.error('');\n\t\tconsole.error('   db.runCommand({ grantRolesToUser: \"YOUR_USER\" , roles: [{role: \"clusterMonitor\", db: \"admin\"}]})');\n\t\tconsole.error('');\n\t\tconsole.error('==================================');\n\t}\n\n\treturn { oplogEnabled, mongoVersion, mongoStorageEngine, mongo };\n}\n\nexport function getMongoInfo() {\n\tlet mongoVersion;\n\tlet mongoStorageEngine;\n\n\tconst { oplogEnabled, mongo } = getOplogInfo();\n\n\ttry {\n\t\tconst { version, storageEngine } = Promise.await(mongo.db.command({ serverStatus: 1 }));\n\n\t\tmongoVersion = version;\n\t\tmongoStorageEngine = storageEngine.name;\n\t} catch (e) {\n\t\treturn fallbackMongoInfo();\n\t}\n\n\treturn { oplogEnabled, mongoVersion, mongoStorageEngine, mongo };\n}\n"]},"sourceType":"module","hash":"fd853da441334707c02de06908b5b6f015871b20"}

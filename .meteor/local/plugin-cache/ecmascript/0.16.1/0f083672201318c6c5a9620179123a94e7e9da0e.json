{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/message.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/normalizers/message.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/message.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/message.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/normalizers/message.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet getNameAndDomain, isFullyQualified;\nmodule.link(\"../functions/helpers\", {\n  getNameAndDomain(v) {\n    getNameAndDomain = v;\n  },\n\n  isFullyQualified(v) {\n    isFullyQualified = v;\n  }\n\n}, 0);\nlet getFederationDomain;\nmodule.link(\"../lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 1);\n\nconst denormalizeMessage = originalResource => {\n  const resource = _objectSpread({}, originalResource);\n\n  const [username, domain] = getNameAndDomain(resource.u.username);\n  const localDomain = getFederationDomain(); // Denormalize username\n\n  resource.u.username = domain === localDomain ? username : resource.u.username; // Denormalize mentions\n\n  for (const mention of resource.mentions) {\n    // Ignore if we are dealing with all, here or rocket.cat\n    if (['all', 'here', 'rocket.cat'].indexOf(mention.username) !== -1) {\n      continue;\n    }\n\n    const [username, domain] = getNameAndDomain(mention.username);\n\n    if (domain === localDomain) {\n      const originalUsername = mention.username;\n      mention.username = username;\n      resource.msg = resource.msg.split(originalUsername).join(username);\n    }\n  } // Denormalize channels\n\n\n  for (const channel of resource.channels) {\n    // Ignore if we are dealing with all, here or rocket.cat\n    if (['all', 'here', 'rocket.cat'].indexOf(channel.name) !== -1) {\n      continue;\n    }\n\n    const [username, domain] = getNameAndDomain(channel.name);\n\n    if (domain === localDomain) {\n      const originalUsername = channel.name;\n      channel.name = username;\n      resource.msg = resource.msg.split(originalUsername).join(username);\n    }\n  }\n\n  return resource;\n};\n\nconst denormalizeAllMessages = resources => resources.map(denormalizeMessage);\n\nconst normalizeMessage = originalResource => {\n  const resource = _objectSpread({}, originalResource);\n\n  resource.u.username = !isFullyQualified(resource.u.username) ? \"\".concat(resource.u.username, \"@\").concat(getFederationDomain()) : resource.u.username; // Federation\n\n  resource.federation = resource.federation || {\n    origin: getFederationDomain() // The origin of this resource, where it was created\n\n  }; // Normalize mentions\n\n  for (const mention of resource.mentions || []) {\n    // Ignore if we are dealing with all, here or rocket.cat\n    if (['all', 'here', 'rocket.cat'].indexOf(mention.username) !== -1) {\n      continue;\n    }\n\n    if (!isFullyQualified(mention.username)) {\n      const originalUsername = mention.username;\n      mention.username = \"\".concat(mention.username, \"@\").concat(getFederationDomain());\n      resource.msg = resource.msg.split(originalUsername).join(mention.username);\n    }\n  } // Normalize channels\n\n\n  for (const channel of resource.channels || []) {\n    if (!isFullyQualified(channel.name)) {\n      const originalUsername = channel.name;\n      channel.name = \"\".concat(channel.name, \"@\").concat(getFederationDomain());\n      resource.msg = resource.msg.split(originalUsername).join(channel.name);\n    }\n  }\n\n  return resource;\n};\n\nconst normalizeAllMessages = resources => resources.map(normalizeMessage);\n\nmodule.exportDefault({\n  denormalizeMessage,\n  denormalizeAllMessages,\n  normalizeMessage,\n  normalizeAllMessages\n});","map":{"version":3,"sources":["app/federation/server/normalizers/message.js"],"names":["_objectSpread","module","link","default","v","getNameAndDomain","isFullyQualified","getFederationDomain","denormalizeMessage","originalResource","resource","username","domain","u","localDomain","mention","mentions","indexOf","originalUsername","msg","split","join","channel","channels","name","denormalizeAllMessages","resources","map","normalizeMessage","federation","origin","normalizeAllMessages","exportDefault"],"mappings":"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","sourcesContent":["import { getNameAndDomain, isFullyQualified } from '../functions/helpers';\nimport { getFederationDomain } from '../lib/getFederationDomain';\n\nconst denormalizeMessage = (originalResource) => {\n\tconst resource = { ...originalResource };\n\n\tconst [username, domain] = getNameAndDomain(resource.u.username);\n\n\tconst localDomain = getFederationDomain();\n\n\t// Denormalize username\n\tresource.u.username = domain === localDomain ? username : resource.u.username;\n\n\t// Denormalize mentions\n\tfor (const mention of resource.mentions) {\n\t\t// Ignore if we are dealing with all, here or rocket.cat\n\t\tif (['all', 'here', 'rocket.cat'].indexOf(mention.username) !== -1) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [username, domain] = getNameAndDomain(mention.username);\n\n\t\tif (domain === localDomain) {\n\t\t\tconst originalUsername = mention.username;\n\n\t\t\tmention.username = username;\n\n\t\t\tresource.msg = resource.msg.split(originalUsername).join(username);\n\t\t}\n\t}\n\n\t// Denormalize channels\n\tfor (const channel of resource.channels) {\n\t\t// Ignore if we are dealing with all, here or rocket.cat\n\t\tif (['all', 'here', 'rocket.cat'].indexOf(channel.name) !== -1) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [username, domain] = getNameAndDomain(channel.name);\n\n\t\tif (domain === localDomain) {\n\t\t\tconst originalUsername = channel.name;\n\n\t\t\tchannel.name = username;\n\n\t\t\tresource.msg = resource.msg.split(originalUsername).join(username);\n\t\t}\n\t}\n\n\treturn resource;\n};\n\nconst denormalizeAllMessages = (resources) => resources.map(denormalizeMessage);\n\nconst normalizeMessage = (originalResource) => {\n\tconst resource = { ...originalResource };\n\n\tresource.u.username = !isFullyQualified(resource.u.username) ? `${resource.u.username}@${getFederationDomain()}` : resource.u.username;\n\n\t// Federation\n\tresource.federation = resource.federation || {\n\t\torigin: getFederationDomain(), // The origin of this resource, where it was created\n\t};\n\n\t// Normalize mentions\n\tfor (const mention of resource.mentions || []) {\n\t\t// Ignore if we are dealing with all, here or rocket.cat\n\t\tif (['all', 'here', 'rocket.cat'].indexOf(mention.username) !== -1) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isFullyQualified(mention.username)) {\n\t\t\tconst originalUsername = mention.username;\n\n\t\t\tmention.username = `${mention.username}@${getFederationDomain()}`;\n\n\t\t\tresource.msg = resource.msg.split(originalUsername).join(mention.username);\n\t\t}\n\t}\n\n\t// Normalize channels\n\tfor (const channel of resource.channels || []) {\n\t\tif (!isFullyQualified(channel.name)) {\n\t\t\tconst originalUsername = channel.name;\n\n\t\t\tchannel.name = `${channel.name}@${getFederationDomain()}`;\n\n\t\t\tresource.msg = resource.msg.split(originalUsername).join(channel.name);\n\t\t}\n\t}\n\n\treturn resource;\n};\n\nconst normalizeAllMessages = (resources) => resources.map(normalizeMessage);\n\nexport default {\n\tdenormalizeMessage,\n\tdenormalizeAllMessages,\n\tnormalizeMessage,\n\tnormalizeAllMessages,\n};\n"]},"sourceType":"module","hash":"0f083672201318c6c5a9620179123a94e7e9da0e"}

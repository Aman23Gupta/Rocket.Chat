{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/mentions/server/server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/mentions/server/server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/mentions/server/server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/mentions/server/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/mentions/server/server.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  MentionQueries: () => MentionQueries\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\nlet MentionsServer;\nmodule.link(\"./Mentions\", {\n  default(v) {\n    MentionsServer = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet callbacks;\nmodule.link(\"../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 4);\nlet Users, Subscriptions, Rooms;\nmodule.link(\"../../models\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 5);\nlet api;\nmodule.link(\"../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 6);\n\nclass MentionQueries {\n  getUsers(usernames) {\n    const users = Meteor.users.find({\n      username: {\n        $in: [...new Set(usernames)]\n      }\n    }, {\n      fields: {\n        _id: true,\n        username: true,\n        name: 1\n      }\n    }).fetch();\n    return users.map(user => _objectSpread(_objectSpread({}, user), {}, {\n      type: 'user'\n    }));\n  }\n\n  getUser(userId) {\n    return Users.findOneById(userId);\n  }\n\n  getTotalChannelMembers(rid) {\n    return Subscriptions.findByRoomId(rid).count();\n  }\n\n  getChannels(channels) {\n    return Rooms.find({\n      name: {\n        $in: [...new Set(channels)]\n      },\n      t: {\n        $in: ['c', 'p']\n      }\n    }, {\n      fields: {\n        _id: 1,\n        name: 1\n      }\n    }).fetch();\n  }\n\n}\n\nconst queries = new MentionQueries();\nconst mention = new MentionsServer({\n  pattern: () => settings.get('UTF8_User_Names_Validation'),\n  messageMaxAll: () => settings.get('Message_MaxAll'),\n  getUsers: usernames => queries.getUsers(usernames),\n  getUser: userId => queries.getUser(userId),\n  getTotalChannelMembers: rid => queries.getTotalChannelMembers(rid),\n  getChannels: channels => queries.getChannels(channels),\n\n  onMaxRoomMembersExceeded(_ref) {\n    let {\n      sender,\n      rid\n    } = _ref;\n    // Get the language of the user for the error notification.\n    const {\n      language\n    } = this.getUser(sender._id);\n\n    const msg = TAPi18n.__('Group_mentions_disabled_x_members', {\n      total: this.messageMaxAll\n    }, language);\n\n    api.broadcast('notify.ephemeralMessage', sender._id, rid, {\n      msg\n    }); // Also throw to stop propagation of 'sendMessage'.\n\n    throw new Meteor.Error('error-action-not-allowed', msg, {\n      method: 'filterATAllTag',\n      action: msg\n    });\n  }\n\n});\ncallbacks.add('beforeSaveMessage', message => mention.execute(message), callbacks.priority.HIGH, 'mentions');","map":{"version":3,"sources":["app/mentions/server/server.js"],"names":["_objectSpread","module","link","default","v","export","MentionQueries","Meteor","TAPi18n","MentionsServer","settings","callbacks","Users","Subscriptions","Rooms","api","getUsers","usernames","users","find","username","$in","Set","fields","_id","name","fetch","map","user","type","getUser","userId","findOneById","getTotalChannelMembers","rid","findByRoomId","count","getChannels","channels","t","queries","mention","pattern","get","messageMaxAll","onMaxRoomMembersExceeded","sender","language","msg","__","total","broadcast","Error","method","action","add","message","execute","priority","HIGH"],"mappings":"AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,aAAa,GAACI,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;AAAlBH,MAAM,CAACI,MAAP,CAAc;AAACC,EAAAA,cAAc,EAAC,MAAIA;AAApB,CAAd;AAAmD,IAAIC,MAAJ;AAAWN,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACK,EAAAA,MAAM,CAACH,CAAD,EAAG;AAACG,IAAAA,MAAM,GAACH,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAII,OAAJ;AAAYP,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACM,EAAAA,OAAO,CAACJ,CAAD,EAAG;AAACI,IAAAA,OAAO,GAACJ,CAAR;AAAU;;AAAtB,CAAzC,EAAiE,CAAjE;AAAoE,IAAIK,cAAJ;AAAmBR,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACK,IAAAA,cAAc,GAACL,CAAf;AAAiB;;AAA7B,CAAzB,EAAwD,CAAxD;AAA2D,IAAIM,QAAJ;AAAaT,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACQ,EAAAA,QAAQ,CAACN,CAAD,EAAG;AAACM,IAAAA,QAAQ,GAACN,CAAT;AAAW;;AAAxB,CAA7B,EAAuD,CAAvD;AAA0D,IAAIO,SAAJ;AAAcV,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACS,EAAAA,SAAS,CAACP,CAAD,EAAG;AAACO,IAAAA,SAAS,GAACP,CAAV;AAAY;;AAA1B,CAArC,EAAiE,CAAjE;AAAoE,IAAIQ,KAAJ,EAAUC,aAAV,EAAwBC,KAAxB;AAA8Bb,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACU,EAAAA,KAAK,CAACR,CAAD,EAAG;AAACQ,IAAAA,KAAK,GAACR,CAAN;AAAQ,GAAlB;;AAAmBS,EAAAA,aAAa,CAACT,CAAD,EAAG;AAACS,IAAAA,aAAa,GAACT,CAAd;AAAgB,GAApD;;AAAqDU,EAAAA,KAAK,CAACV,CAAD,EAAG;AAACU,IAAAA,KAAK,GAACV,CAAN;AAAQ;;AAAtE,CAA3B,EAAmG,CAAnG;AAAsG,IAAIW,GAAJ;AAAQd,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAsC;AAACa,EAAAA,GAAG,CAACX,CAAD,EAAG;AAACW,IAAAA,GAAG,GAACX,CAAJ;AAAM;;AAAd,CAAtC,EAAsD,CAAtD;;AAS/iB,MAAME,cAAN,CAAqB;AAC3BU,EAAAA,QAAQ,CAACC,SAAD,EAAY;AACnB,UAAMC,KAAK,GAAGX,MAAM,CAACW,KAAP,CACZC,IADY,CACP;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC,GAAG,IAAIC,GAAJ,CAAQL,SAAR,CAAJ;AAAP;AAAZ,KADO,EACyC;AAAEM,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,IAAP;AAAaJ,QAAAA,QAAQ,EAAE,IAAvB;AAA6BK,QAAAA,IAAI,EAAE;AAAnC;AAAV,KADzC,EAEZC,KAFY,EAAd;AAIA,WAAOR,KAAK,CAACS,GAAN,CAAWC,IAAD,oCACbA,IADa;AAEhBC,MAAAA,IAAI,EAAE;AAFU,MAAV,CAAP;AAIA;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACf,WAAOnB,KAAK,CAACoB,WAAN,CAAkBD,MAAlB,CAAP;AACA;;AAEDE,EAAAA,sBAAsB,CAACC,GAAD,EAAM;AAC3B,WAAOrB,aAAa,CAACsB,YAAd,CAA2BD,GAA3B,EAAgCE,KAAhC,EAAP;AACA;;AAEDC,EAAAA,WAAW,CAACC,QAAD,EAAW;AACrB,WAAOxB,KAAK,CAACK,IAAN,CAAW;AAAEM,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,GAAG,EAAE,CAAC,GAAG,IAAIC,GAAJ,CAAQgB,QAAR,CAAJ;AAAP,OAAR;AAAyCC,MAAAA,CAAC,EAAE;AAAElB,QAAAA,GAAG,EAAE,CAAC,GAAD,EAAM,GAAN;AAAP;AAA5C,KAAX,EAA8E;AAAEE,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,IAAI,EAAE;AAAhB;AAAV,KAA9E,EAA+GC,KAA/G,EAAP;AACA;;AAtB0B;;AAyB5B,MAAMc,OAAO,GAAG,IAAIlC,cAAJ,EAAhB;AAEA,MAAMmC,OAAO,GAAG,IAAIhC,cAAJ,CAAmB;AAClCiC,EAAAA,OAAO,EAAE,MAAMhC,QAAQ,CAACiC,GAAT,CAAa,4BAAb,CADmB;AAElCC,EAAAA,aAAa,EAAE,MAAMlC,QAAQ,CAACiC,GAAT,CAAa,gBAAb,CAFa;AAGlC3B,EAAAA,QAAQ,EAAGC,SAAD,IAAeuB,OAAO,CAACxB,QAAR,CAAiBC,SAAjB,CAHS;AAIlCa,EAAAA,OAAO,EAAGC,MAAD,IAAYS,OAAO,CAACV,OAAR,CAAgBC,MAAhB,CAJa;AAKlCE,EAAAA,sBAAsB,EAAGC,GAAD,IAASM,OAAO,CAACP,sBAAR,CAA+BC,GAA/B,CALC;AAMlCG,EAAAA,WAAW,EAAGC,QAAD,IAAcE,OAAO,CAACH,WAAR,CAAoBC,QAApB,CANO;;AAOlCO,EAAAA,wBAAwB,OAAkB;AAAA,QAAjB;AAAEC,MAAAA,MAAF;AAAUZ,MAAAA;AAAV,KAAiB;AACzC;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAe,KAAKjB,OAAL,CAAagB,MAAM,CAACtB,GAApB,CAArB;;AACA,UAAMwB,GAAG,GAAGxC,OAAO,CAACyC,EAAR,CAAW,mCAAX,EAAgD;AAAEC,MAAAA,KAAK,EAAE,KAAKN;AAAd,KAAhD,EAA+EG,QAA/E,CAAZ;;AAEAhC,IAAAA,GAAG,CAACoC,SAAJ,CAAc,yBAAd,EAAyCL,MAAM,CAACtB,GAAhD,EAAqDU,GAArD,EAA0D;AACzDc,MAAAA;AADyD,KAA1D,EALyC,CASzC;;AACA,UAAM,IAAIzC,MAAM,CAAC6C,KAAX,CAAiB,0BAAjB,EAA6CJ,GAA7C,EAAkD;AACvDK,MAAAA,MAAM,EAAE,gBAD+C;AAEvDC,MAAAA,MAAM,EAAEN;AAF+C,KAAlD,CAAN;AAIA;;AArBiC,CAAnB,CAAhB;AAuBArC,SAAS,CAAC4C,GAAV,CAAc,mBAAd,EAAoCC,OAAD,IAAaf,OAAO,CAACgB,OAAR,CAAgBD,OAAhB,CAAhD,EAA0E7C,SAAS,CAAC+C,QAAV,CAAmBC,IAA7F,EAAmG,UAAnG","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport MentionsServer from './Mentions';\nimport { settings } from '../../settings';\nimport { callbacks } from '../../../lib/callbacks';\nimport { Users, Subscriptions, Rooms } from '../../models';\nimport { api } from '../../../server/sdk/api';\n\nexport class MentionQueries {\n\tgetUsers(usernames) {\n\t\tconst users = Meteor.users\n\t\t\t.find({ username: { $in: [...new Set(usernames)] } }, { fields: { _id: true, username: true, name: 1 } })\n\t\t\t.fetch();\n\n\t\treturn users.map((user) => ({\n\t\t\t...user,\n\t\t\ttype: 'user',\n\t\t}));\n\t}\n\n\tgetUser(userId) {\n\t\treturn Users.findOneById(userId);\n\t}\n\n\tgetTotalChannelMembers(rid) {\n\t\treturn Subscriptions.findByRoomId(rid).count();\n\t}\n\n\tgetChannels(channels) {\n\t\treturn Rooms.find({ name: { $in: [...new Set(channels)] }, t: { $in: ['c', 'p'] } }, { fields: { _id: 1, name: 1 } }).fetch();\n\t}\n}\n\nconst queries = new MentionQueries();\n\nconst mention = new MentionsServer({\n\tpattern: () => settings.get('UTF8_User_Names_Validation'),\n\tmessageMaxAll: () => settings.get('Message_MaxAll'),\n\tgetUsers: (usernames) => queries.getUsers(usernames),\n\tgetUser: (userId) => queries.getUser(userId),\n\tgetTotalChannelMembers: (rid) => queries.getTotalChannelMembers(rid),\n\tgetChannels: (channels) => queries.getChannels(channels),\n\tonMaxRoomMembersExceeded({ sender, rid }) {\n\t\t// Get the language of the user for the error notification.\n\t\tconst { language } = this.getUser(sender._id);\n\t\tconst msg = TAPi18n.__('Group_mentions_disabled_x_members', { total: this.messageMaxAll }, language);\n\n\t\tapi.broadcast('notify.ephemeralMessage', sender._id, rid, {\n\t\t\tmsg,\n\t\t});\n\n\t\t// Also throw to stop propagation of 'sendMessage'.\n\t\tthrow new Meteor.Error('error-action-not-allowed', msg, {\n\t\t\tmethod: 'filterATAllTag',\n\t\t\taction: msg,\n\t\t});\n\t},\n});\ncallbacks.add('beforeSaveMessage', (message) => mention.execute(message), callbacks.priority.HIGH, 'mentions');\n"]},"sourceType":"module","hash":"79c0609d916ea44aa92f9b42396a8b1509e59f2e"}

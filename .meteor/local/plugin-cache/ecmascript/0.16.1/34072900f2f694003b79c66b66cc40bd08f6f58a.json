{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterSetReaction.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/hooks/afterSetReaction.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterSetReaction.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/hooks/afterSetReaction.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/hooks/afterSetReaction.js"}},"code":"module.export({\n  definition: () => definition\n});\nlet FederationRoomEvents, Rooms;\nmodule.link(\"../../../models/server\", {\n  FederationRoomEvents(v) {\n    FederationRoomEvents = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 0);\nlet clientLogger;\nmodule.link(\"../lib/logger\", {\n  clientLogger(v) {\n    clientLogger = v;\n  }\n\n}, 1);\nlet hasExternalDomain;\nmodule.link(\"../functions/helpers\", {\n  hasExternalDomain(v) {\n    hasExternalDomain = v;\n  }\n\n}, 2);\nlet getFederationDomain;\nmodule.link(\"../lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 3);\nlet dispatchEvent;\nmodule.link(\"../handler\", {\n  dispatchEvent(v) {\n    dispatchEvent = v;\n  }\n\n}, 4);\n\nfunction afterSetReaction(message, _ref) {\n  return Promise.asyncApply(() => {\n    let {\n      user,\n      reaction\n    } = _ref;\n    const room = Rooms.findOneById(message.rid, {\n      fields: {\n        federation: 1\n      }\n    }); // If there are not federated users on this room, ignore it\n\n    if (!hasExternalDomain(room)) {\n      return message;\n    }\n\n    clientLogger.debug({\n      msg: 'afterSetReaction',\n      message,\n      room,\n      user,\n      reaction\n    }); // Create the event\n\n    const event = Promise.await(FederationRoomEvents.createSetMessageReactionEvent(getFederationDomain(), room._id, message._id, user.username, reaction)); // Dispatch event (async)\n\n    dispatchEvent(room.federation.domains, event);\n    return message;\n  });\n}\n\nconst definition = {\n  hook: 'afterSetReaction',\n  callback: (message, extras) => Promise.await(afterSetReaction(message, extras)),\n  id: 'federation-after-set-reaction'\n};","map":{"version":3,"sources":["app/federation/server/hooks/afterSetReaction.js"],"names":["module","export","definition","FederationRoomEvents","Rooms","link","v","clientLogger","hasExternalDomain","getFederationDomain","dispatchEvent","afterSetReaction","message","user","reaction","room","findOneById","rid","fields","federation","debug","msg","event","createSetMessageReactionEvent","_id","username","domains","hook","callback","extras","Promise","await","id"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,UAAU,EAAC,MAAIA;AAAhB,CAAd;AAA2C,IAAIC,oBAAJ,EAAyBC,KAAzB;AAA+BJ,MAAM,CAACK,IAAP,CAAY,wBAAZ,EAAqC;AAACF,EAAAA,oBAAoB,CAACG,CAAD,EAAG;AAACH,IAAAA,oBAAoB,GAACG,CAArB;AAAuB,GAAhD;;AAAiDF,EAAAA,KAAK,CAACE,CAAD,EAAG;AAACF,IAAAA,KAAK,GAACE,CAAN;AAAQ;;AAAlE,CAArC,EAAyG,CAAzG;AAA4G,IAAIC,YAAJ;AAAiBP,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4B;AAACE,EAAAA,YAAY,CAACD,CAAD,EAAG;AAACC,IAAAA,YAAY,GAACD,CAAb;AAAe;;AAAhC,CAA5B,EAA8D,CAA9D;AAAiE,IAAIE,iBAAJ;AAAsBR,MAAM,CAACK,IAAP,CAAY,sBAAZ,EAAmC;AAACG,EAAAA,iBAAiB,CAACF,CAAD,EAAG;AAACE,IAAAA,iBAAiB,GAACF,CAAlB;AAAoB;;AAA1C,CAAnC,EAA+E,CAA/E;AAAkF,IAAIG,mBAAJ;AAAwBT,MAAM,CAACK,IAAP,CAAY,4BAAZ,EAAyC;AAACI,EAAAA,mBAAmB,CAACH,CAAD,EAAG;AAACG,IAAAA,mBAAmB,GAACH,CAApB;AAAsB;;AAA9C,CAAzC,EAAyF,CAAzF;AAA4F,IAAII,aAAJ;AAAkBV,MAAM,CAACK,IAAP,CAAY,YAAZ,EAAyB;AAACK,EAAAA,aAAa,CAACJ,CAAD,EAAG;AAACI,IAAAA,aAAa,GAACJ,CAAd;AAAgB;;AAAlC,CAAzB,EAA6D,CAA7D;;AAMtf,SAAeK,gBAAf,CAAgCC,OAAhC;AAAA,kCAA6D;AAAA,QAApB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAoB;AAC5D,UAAMC,IAAI,GAAGX,KAAK,CAACY,WAAN,CAAkBJ,OAAO,CAACK,GAA1B,EAA+B;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd;AAAV,KAA/B,CAAb,CAD4D,CAG5D;;AACA,QAAI,CAACX,iBAAiB,CAACO,IAAD,CAAtB,EAA8B;AAC7B,aAAOH,OAAP;AACA;;AAEDL,IAAAA,YAAY,CAACa,KAAb,CAAmB;AAAEC,MAAAA,GAAG,EAAE,kBAAP;AAA2BT,MAAAA,OAA3B;AAAoCG,MAAAA,IAApC;AAA0CF,MAAAA,IAA1C;AAAgDC,MAAAA;AAAhD,KAAnB,EAR4D,CAU5D;;AACA,UAAMQ,KAAK,iBAASnB,oBAAoB,CAACoB,6BAArB,CACnBd,mBAAmB,EADA,EAEnBM,IAAI,CAACS,GAFc,EAGnBZ,OAAO,CAACY,GAHW,EAInBX,IAAI,CAACY,QAJc,EAKnBX,QALmB,CAAT,CAAX,CAX4D,CAmB5D;;AACAJ,IAAAA,aAAa,CAACK,IAAI,CAACI,UAAL,CAAgBO,OAAjB,EAA0BJ,KAA1B,CAAb;AAEA,WAAOV,OAAP;AACA,GAvBD;AAAA;;AAyBO,MAAMV,UAAU,GAAG;AACzByB,EAAAA,IAAI,EAAE,kBADmB;AAEzBC,EAAAA,QAAQ,EAAE,CAAChB,OAAD,EAAUiB,MAAV,KAAqBC,OAAO,CAACC,KAAR,CAAcpB,gBAAgB,CAACC,OAAD,EAAUiB,MAAV,CAA9B,CAFN;AAGzBG,EAAAA,EAAE,EAAE;AAHqB,CAAnB","sourcesContent":["import { FederationRoomEvents, Rooms } from '../../../models/server';\nimport { clientLogger } from '../lib/logger';\nimport { hasExternalDomain } from '../functions/helpers';\nimport { getFederationDomain } from '../lib/getFederationDomain';\nimport { dispatchEvent } from '../handler';\n\nasync function afterSetReaction(message, { user, reaction }) {\n\tconst room = Rooms.findOneById(message.rid, { fields: { federation: 1 } });\n\n\t// If there are not federated users on this room, ignore it\n\tif (!hasExternalDomain(room)) {\n\t\treturn message;\n\t}\n\n\tclientLogger.debug({ msg: 'afterSetReaction', message, room, user, reaction });\n\n\t// Create the event\n\tconst event = await FederationRoomEvents.createSetMessageReactionEvent(\n\t\tgetFederationDomain(),\n\t\troom._id,\n\t\tmessage._id,\n\t\tuser.username,\n\t\treaction,\n\t);\n\n\t// Dispatch event (async)\n\tdispatchEvent(room.federation.domains, event);\n\n\treturn message;\n}\n\nexport const definition = {\n\thook: 'afterSetReaction',\n\tcallback: (message, extras) => Promise.await(afterSetReaction(message, extras)),\n\tid: 'federation-after-set-reaction',\n};\n"]},"sourceType":"module","hash":"34072900f2f694003b79c66b66cc40bd08f6f58a"}

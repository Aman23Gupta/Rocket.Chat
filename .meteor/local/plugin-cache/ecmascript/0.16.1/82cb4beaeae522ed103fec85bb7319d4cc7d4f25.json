{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/visitors.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/visitors.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/visitors.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/visitors.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/visitors.js"}},"code":"let Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nlet findVisitorInfo, findVisitedPages, findChatHistory, searchChats, findVisitorsToAutocomplete, findVisitorsByEmailOrPhoneOrNameOrUsername;\nmodule.link(\"../../../server/api/lib/visitors\", {\n  findVisitorInfo(v) {\n    findVisitorInfo = v;\n  },\n\n  findVisitedPages(v) {\n    findVisitedPages = v;\n  },\n\n  findChatHistory(v) {\n    findChatHistory = v;\n  },\n\n  searchChats(v) {\n    searchChats = v;\n  },\n\n  findVisitorsToAutocomplete(v) {\n    findVisitorsToAutocomplete = v;\n  },\n\n  findVisitorsByEmailOrPhoneOrNameOrUsername(v) {\n    findVisitorsByEmailOrPhoneOrNameOrUsername = v;\n  }\n\n}, 2);\nAPI.v1.addRoute('livechat/visitors.info', {\n  authRequired: true\n}, {\n  get() {\n    check(this.queryParams, {\n      visitorId: String\n    });\n    const visitor = Promise.await(findVisitorInfo({\n      userId: this.userId,\n      visitorId: this.queryParams.visitorId\n    }));\n    return API.v1.success(visitor);\n  }\n\n});\nAPI.v1.addRoute('livechat/visitors.pagesVisited/:roomId', {\n  authRequired: true\n}, {\n  get() {\n    check(this.urlParams, {\n      roomId: String\n    });\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort\n    } = this.parseJsonQuery();\n    const pages = Promise.await(findVisitedPages({\n      userId: this.userId,\n      roomId: this.urlParams.roomId,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    }));\n    return API.v1.success(pages);\n  }\n\n});\nAPI.v1.addRoute('livechat/visitors.chatHistory/room/:roomId/visitor/:visitorId', {\n  authRequired: true\n}, {\n  get() {\n    check(this.urlParams, {\n      visitorId: String,\n      roomId: String\n    });\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort\n    } = this.parseJsonQuery();\n    const history = Promise.await(findChatHistory({\n      userId: this.userId,\n      roomId: this.urlParams.roomId,\n      visitorId: this.urlParams.visitorId,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    }));\n    return API.v1.success(history);\n  }\n\n});\nAPI.v1.addRoute('livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n  authRequired: true\n}, {\n  get() {\n    check(this.urlParams, {\n      visitorId: String,\n      roomId: String\n    });\n    const {\n      roomId,\n      visitorId\n    } = this.urlParams;\n    const {\n      searchText,\n      closedChatsOnly,\n      servedChatsOnly\n    } = this.queryParams;\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort\n    } = this.parseJsonQuery();\n    const history = Promise.await(searchChats({\n      userId: this.userId,\n      roomId,\n      visitorId,\n      searchText,\n      closedChatsOnly,\n      servedChatsOnly,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    }));\n    return API.v1.success(history);\n  }\n\n});\nAPI.v1.addRoute('livechat/visitors.autocomplete', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      selector\n    } = this.queryParams;\n\n    if (!selector) {\n      return API.v1.failure(\"The 'selector' param is required\");\n    }\n\n    return API.v1.success(Promise.await(findVisitorsToAutocomplete({\n      userId: this.userId,\n      selector: JSON.parse(selector)\n    })));\n  }\n\n});\nAPI.v1.addRoute('livechat/visitors.search', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      term\n    } = this.requestParams();\n    check(term, Match.Maybe(String));\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort\n    } = this.parseJsonQuery();\n    return API.v1.success(Promise.await(findVisitorsByEmailOrPhoneOrNameOrUsername({\n      userId: this.userId,\n      term,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    })));\n  }\n\n});","map":{"version":3,"sources":["app/livechat/imports/server/rest/visitors.js"],"names":["Match","check","module","link","v","API","findVisitorInfo","findVisitedPages","findChatHistory","searchChats","findVisitorsToAutocomplete","findVisitorsByEmailOrPhoneOrNameOrUsername","v1","addRoute","authRequired","get","queryParams","visitorId","String","visitor","Promise","await","userId","success","urlParams","roomId","offset","count","getPaginationItems","sort","parseJsonQuery","pages","pagination","history","searchText","closedChatsOnly","servedChatsOnly","selector","failure","JSON","parse","term","requestParams","Maybe"],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport {\n\tfindVisitorInfo,\n\tfindVisitedPages,\n\tfindChatHistory,\n\tsearchChats,\n\tfindVisitorsToAutocomplete,\n\tfindVisitorsByEmailOrPhoneOrNameOrUsername,\n} from '../../../server/api/lib/visitors';\n\nAPI.v1.addRoute(\n\t'livechat/visitors.info',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(this.queryParams, {\n\t\t\t\tvisitorId: String,\n\t\t\t});\n\n\t\t\tconst visitor = Promise.await(findVisitorInfo({ userId: this.userId, visitorId: this.queryParams.visitorId }));\n\n\t\t\treturn API.v1.success(visitor);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.pagesVisited/:roomId',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\troomId: String,\n\t\t\t});\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\n\t\t\tconst pages = Promise.await(\n\t\t\t\tfindVisitedPages({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\troomId: this.urlParams.roomId,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn API.v1.success(pages);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.chatHistory/room/:roomId/visitor/:visitorId',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\tvisitorId: String,\n\t\t\t\troomId: String,\n\t\t\t});\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst history = Promise.await(\n\t\t\t\tfindChatHistory({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\troomId: this.urlParams.roomId,\n\t\t\t\t\tvisitorId: this.urlParams.visitorId,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn API.v1.success(history);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.searchChats/room/:roomId/visitor/:visitorId',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\tvisitorId: String,\n\t\t\t\troomId: String,\n\t\t\t});\n\t\t\tconst { roomId, visitorId } = this.urlParams;\n\t\t\tconst { searchText, closedChatsOnly, servedChatsOnly } = this.queryParams;\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst history = Promise.await(\n\t\t\t\tsearchChats({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\troomId,\n\t\t\t\t\tvisitorId,\n\t\t\t\t\tsearchText,\n\t\t\t\t\tclosedChatsOnly,\n\t\t\t\t\tservedChatsOnly,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t\treturn API.v1.success(history);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.autocomplete',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { selector } = this.queryParams;\n\t\t\tif (!selector) {\n\t\t\t\treturn API.v1.failure(\"The 'selector' param is required\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindVisitorsToAutocomplete({\n\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\tselector: JSON.parse(selector),\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/visitors.search',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { term } = this.requestParams();\n\n\t\t\tcheck(term, Match.Maybe(String));\n\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindVisitorsByEmailOrPhoneOrNameOrUsername({\n\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\tterm,\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\toffset,\n\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\tsort,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"82cb4beaeae522ed103fec85bb7319d4cc7d4f25"}

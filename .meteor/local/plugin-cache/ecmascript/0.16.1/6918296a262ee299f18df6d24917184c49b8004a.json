{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/e2e.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/e2e.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/e2e.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/e2e.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/e2e.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nAPI.v1.addRoute('e2e.fetchMyKeys', {\n  authRequired: true\n}, {\n  get() {\n    let result;\n    Meteor.runAsUser(this.userId, () => {\n      result = Meteor.call('e2e.fetchMyKeys');\n    });\n    return API.v1.success(result);\n  }\n\n});\nAPI.v1.addRoute('e2e.getUsersOfRoomWithoutKey', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      rid\n    } = this.queryParams;\n    let result;\n    Meteor.runAsUser(this.userId, () => {\n      result = Meteor.call('e2e.getUsersOfRoomWithoutKey', rid);\n    });\n    return API.v1.success(result);\n  }\n\n});\n/**\n * @openapi\n *  /api/v1/e2e.setRoomKeyID:\n *    post:\n *      description: Sets the end-to-end encryption key ID for a room\n *      security:\n *        - autenticated: {}\n *      requestBody:\n *        description: A tuple containing the room ID and the key ID\n *        content:\n *          application/json:\n *            schema:\n *              type: object\n *              properties:\n *                rid:\n *                  type: string\n *                keyID:\n *                  type: string\n *      responses:\n *        200:\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiSuccessV1'\n *        default:\n *          description: Unexpected error\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiFailureV1'\n */\n\nAPI.v1.addRoute('e2e.setRoomKeyID', {\n  authRequired: true\n}, {\n  post() {\n    const {\n      rid,\n      keyID\n    } = this.bodyParams;\n    Meteor.runAsUser(this.userId, () => {\n      API.v1.success(Meteor.call('e2e.setRoomKeyID', rid, keyID));\n    });\n    return API.v1.success();\n  }\n\n});\n/**\n * @openapi\n *  /api/v1/e2e.setUserPublicAndPrivateKeys:\n *    post:\n *      description: Sets the end-to-end encryption keys for the authenticated user\n *      security:\n *        - autenticated: {}\n *      requestBody:\n *        description: A tuple containing the public and the private keys\n *        content:\n *          application/json:\n *            schema:\n *              type: object\n *              properties:\n *                public_key:\n *                  type: string\n *                private_key:\n *                  type: string\n *      responses:\n *        200:\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiSuccessV1'\n *        default:\n *          description: Unexpected error\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiFailureV1'\n */\n\nAPI.v1.addRoute('e2e.setUserPublicAndPrivateKeys', {\n  authRequired: true\n}, {\n  post() {\n    const {\n      public_key,\n      private_key\n    } = this.bodyParams;\n    Meteor.runAsUser(this.userId, () => {\n      API.v1.success(Meteor.call('e2e.setUserPublicAndPrivateKeys', {\n        public_key,\n        private_key\n      }));\n    });\n    return API.v1.success();\n  }\n\n});\n/**\n * @openapi\n *  /api/v1/e2e.updateGroupKey:\n *    post:\n *      description: Updates the end-to-end encryption key for a user on a room\n *      security:\n *        - autenticated: {}\n *      requestBody:\n *        description: A tuple containing the user ID, the room ID, and the key\n *        content:\n *          application/json:\n *            schema:\n *              type: object\n *              properties:\n *                uid:\n *                  type: string\n *                rid:\n *                  type: string\n *                key:\n *                  type: string\n *      responses:\n *        200:\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiSuccessV1'\n *        default:\n *          description: Unexpected error\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiFailureV1'\n */\n\nAPI.v1.addRoute('e2e.updateGroupKey', {\n  authRequired: true\n}, {\n  post() {\n    const {\n      uid,\n      rid,\n      key\n    } = this.bodyParams;\n    Meteor.runAsUser(this.userId, () => {\n      API.v1.success(Meteor.call('e2e.updateGroupKey', rid, uid, key));\n    });\n    return API.v1.success();\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/e2e.js"],"names":["Meteor","module","link","v","API","v1","addRoute","authRequired","get","result","runAsUser","userId","call","success","rid","queryParams","post","keyID","bodyParams","public_key","private_key","uid","key"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'e2e.fetchMyKeys',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tlet result;\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tresult = Meteor.call('e2e.fetchMyKeys');\n\t\t\t});\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'e2e.getUsersOfRoomWithoutKey',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { rid } = this.queryParams;\n\n\t\t\tlet result;\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tresult = Meteor.call('e2e.getUsersOfRoomWithoutKey', rid);\n\t\t\t});\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\n/**\n * @openapi\n *  /api/v1/e2e.setRoomKeyID:\n *    post:\n *      description: Sets the end-to-end encryption key ID for a room\n *      security:\n *        - autenticated: {}\n *      requestBody:\n *        description: A tuple containing the room ID and the key ID\n *        content:\n *          application/json:\n *            schema:\n *              type: object\n *              properties:\n *                rid:\n *                  type: string\n *                keyID:\n *                  type: string\n *      responses:\n *        200:\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiSuccessV1'\n *        default:\n *          description: Unexpected error\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiFailureV1'\n */\nAPI.v1.addRoute(\n\t'e2e.setRoomKeyID',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { rid, keyID } = this.bodyParams;\n\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tAPI.v1.success(Meteor.call('e2e.setRoomKeyID', rid, keyID));\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\n/**\n * @openapi\n *  /api/v1/e2e.setUserPublicAndPrivateKeys:\n *    post:\n *      description: Sets the end-to-end encryption keys for the authenticated user\n *      security:\n *        - autenticated: {}\n *      requestBody:\n *        description: A tuple containing the public and the private keys\n *        content:\n *          application/json:\n *            schema:\n *              type: object\n *              properties:\n *                public_key:\n *                  type: string\n *                private_key:\n *                  type: string\n *      responses:\n *        200:\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiSuccessV1'\n *        default:\n *          description: Unexpected error\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiFailureV1'\n */\nAPI.v1.addRoute(\n\t'e2e.setUserPublicAndPrivateKeys',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { public_key, private_key } = this.bodyParams;\n\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tAPI.v1.success(\n\t\t\t\t\tMeteor.call('e2e.setUserPublicAndPrivateKeys', {\n\t\t\t\t\t\tpublic_key,\n\t\t\t\t\t\tprivate_key,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\n/**\n * @openapi\n *  /api/v1/e2e.updateGroupKey:\n *    post:\n *      description: Updates the end-to-end encryption key for a user on a room\n *      security:\n *        - autenticated: {}\n *      requestBody:\n *        description: A tuple containing the user ID, the room ID, and the key\n *        content:\n *          application/json:\n *            schema:\n *              type: object\n *              properties:\n *                uid:\n *                  type: string\n *                rid:\n *                  type: string\n *                key:\n *                  type: string\n *      responses:\n *        200:\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiSuccessV1'\n *        default:\n *          description: Unexpected error\n *          content:\n *            application/json:\n *              schema:\n *                $ref: '#/components/schemas/ApiFailureV1'\n */\nAPI.v1.addRoute(\n\t'e2e.updateGroupKey',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tconst { uid, rid, key } = this.bodyParams;\n\n\t\t\tMeteor.runAsUser(this.userId, () => {\n\t\t\t\tAPI.v1.success(Meteor.call('e2e.updateGroupKey', rid, uid, key));\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"6918296a262ee299f18df6d24917184c49b8004a"}

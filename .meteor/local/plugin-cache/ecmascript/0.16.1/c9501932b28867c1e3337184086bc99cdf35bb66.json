{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/dashboards.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/dashboards.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/dashboards.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/dashboards.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/dashboards.js"}},"code":"let Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nlet hasPermission;\nmodule.link(\"../../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 2);\nlet findAllChatsStatus, getProductivityMetrics, getConversationsMetrics, findAllChatMetricsByAgent, findAllAgentsStatus, findAllChatMetricsByDepartment, findAllResponseTimeMetrics, getAgentsProductivityMetrics, getChatsMetrics;\nmodule.link(\"../../../server/lib/analytics/dashboards\", {\n  findAllChatsStatus(v) {\n    findAllChatsStatus = v;\n  },\n\n  getProductivityMetrics(v) {\n    getProductivityMetrics = v;\n  },\n\n  getConversationsMetrics(v) {\n    getConversationsMetrics = v;\n  },\n\n  findAllChatMetricsByAgent(v) {\n    findAllChatMetricsByAgent = v;\n  },\n\n  findAllAgentsStatus(v) {\n    findAllAgentsStatus = v;\n  },\n\n  findAllChatMetricsByDepartment(v) {\n    findAllChatMetricsByDepartment = v;\n  },\n\n  findAllResponseTimeMetrics(v) {\n    findAllResponseTimeMetrics = v;\n  },\n\n  getAgentsProductivityMetrics(v) {\n    getAgentsProductivityMetrics = v;\n  },\n\n  getChatsMetrics(v) {\n    getChatsMetrics = v;\n  }\n\n}, 3);\nlet Users;\nmodule.link(\"../../../../models\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 4);\nAPI.v1.addRoute('livechat/analytics/dashboards/conversation-totalizers', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    let {\n      start,\n      end\n    } = this.requestParams();\n    const {\n      departmentId\n    } = this.requestParams();\n    check(start, String);\n    check(end, String);\n    check(departmentId, Match.Maybe(String));\n\n    if (isNaN(Date.parse(start))) {\n      return API.v1.failure('The \"start\" query parameter must be a valid date.');\n    }\n\n    start = new Date(start);\n\n    if (isNaN(Date.parse(end))) {\n      return API.v1.failure('The \"end\" query parameter must be a valid date.');\n    }\n\n    end = new Date(end);\n    const user = Users.findOneById(this.userId, {\n      fields: {\n        utcOffset: 1,\n        language: 1\n      }\n    });\n    const totalizers = getConversationsMetrics({\n      start,\n      end,\n      departmentId,\n      user\n    });\n    return API.v1.success(totalizers);\n  }\n\n});\nAPI.v1.addRoute('livechat/analytics/dashboards/agents-productivity-totalizers', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    let {\n      start,\n      end\n    } = this.requestParams();\n    const {\n      departmentId\n    } = this.requestParams();\n    check(start, String);\n    check(end, String);\n    check(departmentId, Match.Maybe(String));\n\n    if (isNaN(Date.parse(start))) {\n      return API.v1.failure('The \"start\" query parameter must be a valid date.');\n    }\n\n    start = new Date(start);\n\n    if (isNaN(Date.parse(end))) {\n      return API.v1.failure('The \"end\" query parameter must be a valid date.');\n    }\n\n    end = new Date(end);\n    const user = Users.findOneById(this.userId, {\n      fields: {\n        utcOffset: 1,\n        language: 1\n      }\n    });\n    const totalizers = getAgentsProductivityMetrics({\n      start,\n      end,\n      departmentId,\n      user\n    });\n    return API.v1.success(totalizers);\n  }\n\n});\nAPI.v1.addRoute('livechat/analytics/dashboards/chats-totalizers', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    let {\n      start,\n      end\n    } = this.requestParams();\n    const {\n      departmentId\n    } = this.requestParams();\n    check(start, String);\n    check(end, String);\n    check(departmentId, Match.Maybe(String));\n\n    if (isNaN(Date.parse(start))) {\n      return API.v1.failure('The \"start\" query parameter must be a valid date.');\n    }\n\n    start = new Date(start);\n\n    if (isNaN(Date.parse(end))) {\n      return API.v1.failure('The \"end\" query parameter must be a valid date.');\n    }\n\n    end = new Date(end);\n    const totalizers = getChatsMetrics({\n      start,\n      end,\n      departmentId\n    });\n    return API.v1.success(totalizers);\n  }\n\n});\nAPI.v1.addRoute('livechat/analytics/dashboards/productivity-totalizers', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    let {\n      start,\n      end\n    } = this.requestParams();\n    const {\n      departmentId\n    } = this.requestParams();\n    check(start, String);\n    check(end, String);\n    check(departmentId, Match.Maybe(String));\n\n    if (isNaN(Date.parse(start))) {\n      return API.v1.failure('The \"start\" query parameter must be a valid date.');\n    }\n\n    start = new Date(start);\n\n    if (isNaN(Date.parse(end))) {\n      return API.v1.failure('The \"end\" query parameter must be a valid date.');\n    }\n\n    end = new Date(end);\n    const user = Users.findOneById(this.userId, {\n      fields: {\n        utcOffset: 1,\n        language: 1\n      }\n    });\n    const totalizers = getProductivityMetrics({\n      start,\n      end,\n      departmentId,\n      user\n    });\n    return API.v1.success(totalizers);\n  }\n\n});\nAPI.v1.addRoute('livechat/analytics/dashboards/charts/chats', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    let {\n      start,\n      end\n    } = this.requestParams();\n    const {\n      departmentId\n    } = this.requestParams();\n    check(start, String);\n    check(end, String);\n    check(departmentId, Match.Maybe(String));\n\n    if (isNaN(Date.parse(start))) {\n      return API.v1.failure('The \"start\" query parameter must be a valid date.');\n    }\n\n    start = new Date(start);\n\n    if (isNaN(Date.parse(end))) {\n      return API.v1.failure('The \"end\" query parameter must be a valid date.');\n    }\n\n    end = new Date(end);\n    const result = findAllChatsStatus({\n      start,\n      end,\n      departmentId\n    });\n    return API.v1.success(result);\n  }\n\n});\nAPI.v1.addRoute('livechat/analytics/dashboards/charts/chats-per-agent', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    let {\n      start,\n      end\n    } = this.requestParams();\n    const {\n      departmentId\n    } = this.requestParams();\n    check(start, String);\n    check(end, String);\n    check(departmentId, Match.Maybe(String));\n\n    if (isNaN(Date.parse(start))) {\n      return API.v1.failure('The \"start\" query parameter must be a valid date.');\n    }\n\n    start = new Date(start);\n\n    if (isNaN(Date.parse(end))) {\n      return API.v1.failure('The \"end\" query parameter must be a valid date.');\n    }\n\n    end = new Date(end);\n    const result = findAllChatMetricsByAgent({\n      start,\n      end,\n      departmentId\n    });\n    return API.v1.success(result);\n  }\n\n});\nAPI.v1.addRoute('livechat/analytics/dashboards/charts/agents-status', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    const {\n      departmentId\n    } = this.requestParams();\n    check(departmentId, Match.Maybe(String));\n    const result = findAllAgentsStatus({\n      departmentId\n    });\n    return API.v1.success(result);\n  }\n\n});\nAPI.v1.addRoute('livechat/analytics/dashboards/charts/chats-per-department', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    let {\n      start,\n      end\n    } = this.requestParams();\n    const {\n      departmentId\n    } = this.requestParams();\n    check(start, String);\n    check(end, String);\n    check(departmentId, Match.Maybe(String));\n\n    if (isNaN(Date.parse(start))) {\n      return API.v1.failure('The \"start\" query parameter must be a valid date.');\n    }\n\n    start = new Date(start);\n\n    if (isNaN(Date.parse(end))) {\n      return API.v1.failure('The \"end\" query parameter must be a valid date.');\n    }\n\n    end = new Date(end);\n    const result = findAllChatMetricsByDepartment({\n      start,\n      end,\n      departmentId\n    });\n    return API.v1.success(result);\n  }\n\n});\nAPI.v1.addRoute('livechat/analytics/dashboards/charts/timings', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    let {\n      start,\n      end\n    } = this.requestParams();\n    const {\n      departmentId\n    } = this.requestParams();\n    check(start, String);\n    check(end, String);\n    check(departmentId, Match.Maybe(String));\n\n    if (isNaN(Date.parse(start))) {\n      return API.v1.failure('The \"start\" query parameter must be a valid date.');\n    }\n\n    start = new Date(start);\n\n    if (isNaN(Date.parse(end))) {\n      return API.v1.failure('The \"end\" query parameter must be a valid date.');\n    }\n\n    end = new Date(end);\n    const result = findAllResponseTimeMetrics({\n      start,\n      end,\n      departmentId\n    });\n    return API.v1.success(result);\n  }\n\n});","map":{"version":3,"sources":["app/livechat/imports/server/rest/dashboards.js"],"names":["Match","check","module","link","v","API","hasPermission","findAllChatsStatus","getProductivityMetrics","getConversationsMetrics","findAllChatMetricsByAgent","findAllAgentsStatus","findAllChatMetricsByDepartment","findAllResponseTimeMetrics","getAgentsProductivityMetrics","getChatsMetrics","Users","v1","addRoute","authRequired","get","userId","unauthorized","start","end","requestParams","departmentId","String","Maybe","isNaN","Date","parse","failure","user","findOneById","fields","utcOffset","language","totalizers","success","result"],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport { hasPermission } from '../../../../authorization/server';\nimport {\n\tfindAllChatsStatus,\n\tgetProductivityMetrics,\n\tgetConversationsMetrics,\n\tfindAllChatMetricsByAgent,\n\tfindAllAgentsStatus,\n\tfindAllChatMetricsByDepartment,\n\tfindAllResponseTimeMetrics,\n\tgetAgentsProductivityMetrics,\n\tgetChatsMetrics,\n} from '../../../server/lib/analytics/dashboards';\nimport { Users } from '../../../../models';\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/conversation-totalizers',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tlet { start, end } = this.requestParams();\n\t\t\tconst { departmentId } = this.requestParams();\n\n\t\t\tcheck(start, String);\n\t\t\tcheck(end, String);\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tstart = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tend = new Date(end);\n\n\t\t\tconst user = Users.findOneById(this.userId, { fields: { utcOffset: 1, language: 1 } });\n\n\t\t\tconst totalizers = getConversationsMetrics({ start, end, departmentId, user });\n\t\t\treturn API.v1.success(totalizers);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/agents-productivity-totalizers',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tlet { start, end } = this.requestParams();\n\t\t\tconst { departmentId } = this.requestParams();\n\n\t\t\tcheck(start, String);\n\t\t\tcheck(end, String);\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tstart = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tend = new Date(end);\n\n\t\t\tconst user = Users.findOneById(this.userId, { fields: { utcOffset: 1, language: 1 } });\n\n\t\t\tconst totalizers = getAgentsProductivityMetrics({ start, end, departmentId, user });\n\t\t\treturn API.v1.success(totalizers);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/chats-totalizers',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tlet { start, end } = this.requestParams();\n\t\t\tconst { departmentId } = this.requestParams();\n\n\t\t\tcheck(start, String);\n\t\t\tcheck(end, String);\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tstart = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tend = new Date(end);\n\n\t\t\tconst totalizers = getChatsMetrics({ start, end, departmentId });\n\t\t\treturn API.v1.success(totalizers);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/productivity-totalizers',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tlet { start, end } = this.requestParams();\n\t\t\tconst { departmentId } = this.requestParams();\n\n\t\t\tcheck(start, String);\n\t\t\tcheck(end, String);\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tstart = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tend = new Date(end);\n\n\t\t\tconst user = Users.findOneById(this.userId, { fields: { utcOffset: 1, language: 1 } });\n\n\t\t\tconst totalizers = getProductivityMetrics({ start, end, departmentId, user });\n\n\t\t\treturn API.v1.success(totalizers);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/charts/chats',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tlet { start, end } = this.requestParams();\n\t\t\tconst { departmentId } = this.requestParams();\n\n\t\t\tcheck(start, String);\n\t\t\tcheck(end, String);\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tstart = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tend = new Date(end);\n\t\t\tconst result = findAllChatsStatus({ start, end, departmentId });\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/charts/chats-per-agent',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tlet { start, end } = this.requestParams();\n\t\t\tconst { departmentId } = this.requestParams();\n\n\t\t\tcheck(start, String);\n\t\t\tcheck(end, String);\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tstart = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tend = new Date(end);\n\t\t\tconst result = findAllChatMetricsByAgent({ start, end, departmentId });\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/charts/agents-status',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst { departmentId } = this.requestParams();\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tconst result = findAllAgentsStatus({ departmentId });\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/charts/chats-per-department',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tlet { start, end } = this.requestParams();\n\t\t\tconst { departmentId } = this.requestParams();\n\n\t\t\tcheck(start, String);\n\t\t\tcheck(end, String);\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tstart = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tend = new Date(end);\n\t\t\tconst result = findAllChatMetricsByDepartment({ start, end, departmentId });\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/dashboards/charts/timings',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tlet { start, end } = this.requestParams();\n\t\t\tconst { departmentId } = this.requestParams();\n\n\t\t\tcheck(start, String);\n\t\t\tcheck(end, String);\n\t\t\tcheck(departmentId, Match.Maybe(String));\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tstart = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tend = new Date(end);\n\t\t\tconst result = findAllResponseTimeMetrics({ start, end, departmentId });\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"c9501932b28867c1e3337184086bc99cdf35bb66"}

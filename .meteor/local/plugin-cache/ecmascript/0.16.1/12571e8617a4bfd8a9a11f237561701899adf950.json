{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/inquiries.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/inquiries.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/inquiries.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/inquiries.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/inquiries.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nlet hasPermission;\nmodule.link(\"../../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 3);\nlet Users, LivechatDepartment, LivechatInquiry;\nmodule.link(\"../../../../models\", {\n  Users(v) {\n    Users = v;\n  },\n\n  LivechatDepartment(v) {\n    LivechatDepartment = v;\n  },\n\n  LivechatInquiry(v) {\n    LivechatInquiry = v;\n  }\n\n}, 4);\nlet findInquiries, findOneInquiryByRoomId;\nmodule.link(\"../../../server/api/lib/inquiries\", {\n  findInquiries(v) {\n    findInquiries = v;\n  },\n\n  findOneInquiryByRoomId(v) {\n    findOneInquiryByRoomId = v;\n  }\n\n}, 5);\nAPI.v1.addRoute('livechat/inquiries.list', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'view-livechat-manager')) {\n      return API.v1.unauthorized();\n    }\n\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort\n    } = this.parseJsonQuery();\n    const {\n      department\n    } = this.requestParams();\n    const ourQuery = Object.assign({}, {\n      status: 'queued'\n    });\n\n    if (department) {\n      const departmentFromDB = LivechatDepartment.findOneByIdOrName(department);\n\n      if (departmentFromDB) {\n        ourQuery.department = departmentFromDB._id;\n      }\n    }\n\n    const cursor = LivechatInquiry.find(ourQuery, {\n      sort: sort || {\n        ts: -1\n      },\n      skip: offset,\n      limit: count,\n      fields: {\n        rid: 1,\n        name: 1,\n        ts: 1,\n        status: 1,\n        department: 1\n      }\n    });\n    const totalCount = cursor.count();\n    const inquiries = cursor.fetch();\n    return API.v1.success({\n      inquiries,\n      offset,\n      count: inquiries.length,\n      total: totalCount\n    });\n  }\n\n});\nAPI.v1.addRoute('livechat/inquiries.take', {\n  authRequired: true\n}, {\n  post() {\n    try {\n      check(this.bodyParams, {\n        inquiryId: String,\n        userId: Match.Maybe(String)\n      });\n\n      if (this.bodyParams.userId && !Users.findOneById(this.bodyParams.userId, {\n        fields: {\n          _id: 1\n        }\n      })) {\n        return API.v1.failure('The user is invalid');\n      }\n\n      return API.v1.success({\n        inquiry: Meteor.runAsUser(this.bodyParams.userId || this.userId, () => Meteor.call('livechat:takeInquiry', this.bodyParams.inquiryId))\n      });\n    } catch (e) {\n      return API.v1.failure(e);\n    }\n  }\n\n});\nAPI.v1.addRoute('livechat/inquiries.queued', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort\n    } = this.parseJsonQuery();\n    const {\n      department\n    } = this.requestParams();\n    return API.v1.success(Promise.await(findInquiries({\n      userId: this.userId,\n      department,\n      status: 'queued',\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    })));\n  }\n\n});\nAPI.v1.addRoute('livechat/inquiries.getOne', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      roomId\n    } = this.queryParams;\n\n    if (!roomId) {\n      return API.v1.failure(\"The 'roomId' param is required\");\n    }\n\n    return API.v1.success(Promise.await(findOneInquiryByRoomId({\n      userId: this.userId,\n      roomId\n    })));\n  }\n\n});","map":{"version":3,"sources":["app/livechat/imports/server/rest/inquiries.js"],"names":["Meteor","module","link","v","Match","check","API","hasPermission","Users","LivechatDepartment","LivechatInquiry","findInquiries","findOneInquiryByRoomId","v1","addRoute","authRequired","get","userId","unauthorized","offset","count","getPaginationItems","sort","parseJsonQuery","department","requestParams","ourQuery","Object","assign","status","departmentFromDB","findOneByIdOrName","_id","cursor","find","ts","skip","limit","fields","rid","name","totalCount","inquiries","fetch","success","length","total","post","bodyParams","inquiryId","String","Maybe","findOneById","failure","inquiry","runAsUser","call","e","Promise","await","pagination","roomId","queryParams"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\n\nimport { API } from '../../../../api/server';\nimport { hasPermission } from '../../../../authorization';\nimport { Users, LivechatDepartment, LivechatInquiry } from '../../../../models';\nimport { findInquiries, findOneInquiryByRoomId } from '../../../server/api/lib/inquiries';\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.list',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'view-livechat-manager')) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst { department } = this.requestParams();\n\t\t\tconst ourQuery = Object.assign({}, { status: 'queued' });\n\t\t\tif (department) {\n\t\t\t\tconst departmentFromDB = LivechatDepartment.findOneByIdOrName(department);\n\t\t\t\tif (departmentFromDB) {\n\t\t\t\t\tourQuery.department = departmentFromDB._id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst cursor = LivechatInquiry.find(ourQuery, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tfields: {\n\t\t\t\t\trid: 1,\n\t\t\t\t\tname: 1,\n\t\t\t\t\tts: 1,\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tdepartment: 1,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst totalCount = cursor.count();\n\t\t\tconst inquiries = cursor.fetch();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tinquiries,\n\t\t\t\toffset,\n\t\t\t\tcount: inquiries.length,\n\t\t\t\ttotal: totalCount,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.take',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\ttry {\n\t\t\t\tcheck(this.bodyParams, {\n\t\t\t\t\tinquiryId: String,\n\t\t\t\t\tuserId: Match.Maybe(String),\n\t\t\t\t});\n\t\t\t\tif (this.bodyParams.userId && !Users.findOneById(this.bodyParams.userId, { fields: { _id: 1 } })) {\n\t\t\t\t\treturn API.v1.failure('The user is invalid');\n\t\t\t\t}\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tinquiry: Meteor.runAsUser(this.bodyParams.userId || this.userId, () =>\n\t\t\t\t\t\tMeteor.call('livechat:takeInquiry', this.bodyParams.inquiryId),\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(e);\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.queued',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort } = this.parseJsonQuery();\n\t\t\tconst { department } = this.requestParams();\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindInquiries({\n\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\tdepartment,\n\t\t\t\t\t\tstatus: 'queued',\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\toffset,\n\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\tsort,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.getOne',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { roomId } = this.queryParams;\n\t\t\tif (!roomId) {\n\t\t\t\treturn API.v1.failure(\"The 'roomId' param is required\");\n\t\t\t}\n\n\t\t\treturn API.v1.success(\n\t\t\t\tPromise.await(\n\t\t\t\t\tfindOneInquiryByRoomId({\n\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\troomId,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"12571e8617a4bfd8a9a11f237561701899adf950"}

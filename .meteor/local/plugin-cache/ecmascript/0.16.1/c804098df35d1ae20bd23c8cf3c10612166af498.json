{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/cleanRoomHistory.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/cleanRoomHistory.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/cleanRoomHistory.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/cleanRoomHistory.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/cleanRoomHistory.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  cleanRoomHistory: () => cleanRoomHistory\n});\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 0);\nlet deleteRoom;\nmodule.link(\"./deleteRoom\", {\n  deleteRoom(v) {\n    deleteRoom = v;\n  }\n\n}, 1);\nlet FileUpload;\nmodule.link(\"../../../file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 2);\nlet Messages, Rooms, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 3);\nlet Notifications;\nmodule.link(\"../../../notifications/server\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 4);\n\nconst cleanRoomHistory = function (_ref) {\n  let {\n    rid,\n    latest = new Date(),\n    oldest = new Date('0001-01-01T00:00:00Z'),\n    inclusive = true,\n    limit = 0,\n    excludePinned = true,\n    ignoreDiscussion = true,\n    filesOnly = false,\n    fromUsers = [],\n    ignoreThreads = true\n  } = _ref;\n  const gt = inclusive ? '$gte' : '$gt';\n  const lt = inclusive ? '$lte' : '$lt';\n  const ts = {\n    [gt]: oldest,\n    [lt]: latest\n  };\n  const text = \"_\".concat(TAPi18n.__('File_removed_by_prune'), \"_\");\n  let fileCount = 0;\n  Messages.findFilesByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ignoreDiscussion, ts, fromUsers, ignoreThreads, {\n    fields: {\n      'file._id': 1,\n      'pinned': 1\n    },\n    limit\n  }).forEach(document => {\n    FileUpload.getStore('Uploads').deleteById(document.file._id);\n    fileCount++;\n\n    if (filesOnly) {\n      Messages.update({\n        _id: document._id\n      }, {\n        $unset: {\n          file: 1\n        },\n        $set: {\n          attachments: [{\n            color: '#FD745E',\n            text\n          }]\n        }\n      });\n    }\n  });\n\n  if (filesOnly) {\n    return fileCount;\n  }\n\n  if (!ignoreDiscussion) {\n    Messages.findDiscussionByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ts, fromUsers, _objectSpread({\n      fields: {\n        drid: 1\n      }\n    }, limit && {\n      limit\n    }), ignoreThreads).fetch().forEach(_ref2 => {\n      let {\n        drid\n      } = _ref2;\n      return deleteRoom(drid);\n    });\n  }\n\n  if (!ignoreThreads) {\n    const threads = new Set();\n    Messages.findThreadsByRoomIdPinnedTimestampAndUsers({\n      rid,\n      pinned: excludePinned,\n      ignoreDiscussion,\n      ts,\n      users: fromUsers\n    }, {\n      fields: {\n        _id: 1\n      }\n    }).forEach(_ref3 => {\n      let {\n        _id\n      } = _ref3;\n      return threads.add(_id);\n    });\n\n    if (threads.size > 0) {\n      Subscriptions.removeUnreadThreadsByRoomId(rid, [...threads]);\n    }\n  }\n\n  const count = Messages.removeByIdPinnedTimestampLimitAndUsers(rid, excludePinned, ignoreDiscussion, ts, limit, fromUsers, ignoreThreads);\n\n  if (count) {\n    Rooms.resetLastMessageById(rid);\n    Notifications.notifyRoom(rid, 'deleteMessageBulk', {\n      rid,\n      excludePinned,\n      ignoreDiscussion,\n      ts,\n      users: fromUsers\n    });\n  }\n\n  return count;\n};","map":{"version":3,"sources":["app/lib/server/functions/cleanRoomHistory.js"],"names":["_objectSpread","module","link","default","v","export","cleanRoomHistory","TAPi18n","deleteRoom","FileUpload","Messages","Rooms","Subscriptions","Notifications","rid","latest","Date","oldest","inclusive","limit","excludePinned","ignoreDiscussion","filesOnly","fromUsers","ignoreThreads","gt","lt","ts","text","__","fileCount","findFilesByRoomIdPinnedTimestampAndUsers","fields","forEach","document","getStore","deleteById","file","_id","update","$unset","$set","attachments","color","findDiscussionByRoomIdPinnedTimestampAndUsers","drid","fetch","threads","Set","findThreadsByRoomIdPinnedTimestampAndUsers","pinned","users","add","size","removeUnreadThreadsByRoomId","count","removeByIdPinnedTimestampLimitAndUsers","resetLastMessageById","notifyRoom"],"mappings":"AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,aAAa,GAACI,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;AAAlBH,MAAM,CAACI,MAAP,CAAc;AAACC,EAAAA,gBAAgB,EAAC,MAAIA;AAAtB,CAAd;AAAuD,IAAIC,OAAJ;AAAYN,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACK,EAAAA,OAAO,CAACH,CAAD,EAAG;AAACG,IAAAA,OAAO,GAACH,CAAR;AAAU;;AAAtB,CAAzC,EAAiE,CAAjE;AAAoE,IAAII,UAAJ;AAAeP,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACM,EAAAA,UAAU,CAACJ,CAAD,EAAG;AAACI,IAAAA,UAAU,GAACJ,CAAX;AAAa;;AAA5B,CAA3B,EAAyD,CAAzD;AAA4D,IAAIK,UAAJ;AAAeR,MAAM,CAACC,IAAP,CAAY,6BAAZ,EAA0C;AAACO,EAAAA,UAAU,CAACL,CAAD,EAAG;AAACK,IAAAA,UAAU,GAACL,CAAX;AAAa;;AAA5B,CAA1C,EAAwE,CAAxE;AAA2E,IAAIM,QAAJ,EAAaC,KAAb,EAAmBC,aAAnB;AAAiCX,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACQ,EAAAA,QAAQ,CAACN,CAAD,EAAG;AAACM,IAAAA,QAAQ,GAACN,CAAT;AAAW,GAAxB;;AAAyBO,EAAAA,KAAK,CAACP,CAAD,EAAG;AAACO,IAAAA,KAAK,GAACP,CAAN;AAAQ,GAA1C;;AAA2CQ,EAAAA,aAAa,CAACR,CAAD,EAAG;AAACQ,IAAAA,aAAa,GAACR,CAAd;AAAgB;;AAA5E,CAArC,EAAmH,CAAnH;AAAsH,IAAIS,aAAJ;AAAkBZ,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAACW,EAAAA,aAAa,CAACT,CAAD,EAAG;AAACS,IAAAA,aAAa,GAACT,CAAd;AAAgB;;AAAlC,CAA5C,EAAgF,CAAhF;;AAO9c,MAAME,gBAAgB,GAAG,gBAW7B;AAAA,MAXuC;AACzCQ,IAAAA,GADyC;AAEzCC,IAAAA,MAAM,GAAG,IAAIC,IAAJ,EAFgC;AAGzCC,IAAAA,MAAM,GAAG,IAAID,IAAJ,CAAS,sBAAT,CAHgC;AAIzCE,IAAAA,SAAS,GAAG,IAJ6B;AAKzCC,IAAAA,KAAK,GAAG,CALiC;AAMzCC,IAAAA,aAAa,GAAG,IANyB;AAOzCC,IAAAA,gBAAgB,GAAG,IAPsB;AAQzCC,IAAAA,SAAS,GAAG,KAR6B;AASzCC,IAAAA,SAAS,GAAG,EAT6B;AAUzCC,IAAAA,aAAa,GAAG;AAVyB,GAWvC;AACF,QAAMC,EAAE,GAAGP,SAAS,GAAG,MAAH,GAAY,KAAhC;AACA,QAAMQ,EAAE,GAAGR,SAAS,GAAG,MAAH,GAAY,KAAhC;AAEA,QAAMS,EAAE,GAAG;AAAE,KAACF,EAAD,GAAMR,MAAR;AAAgB,KAACS,EAAD,GAAMX;AAAtB,GAAX;AAEA,QAAMa,IAAI,cAAOrB,OAAO,CAACsB,EAAR,CAAW,uBAAX,CAAP,MAAV;AAEA,MAAIC,SAAS,GAAG,CAAhB;AACApB,EAAAA,QAAQ,CAACqB,wCAAT,CAAkDjB,GAAlD,EAAuDM,aAAvD,EAAsEC,gBAAtE,EAAwFM,EAAxF,EAA4FJ,SAA5F,EAAuGC,aAAvG,EAAsH;AACrHQ,IAAAA,MAAM,EAAE;AAAE,kBAAY,CAAd;AAAiB,gBAAU;AAA3B,KAD6G;AAErHb,IAAAA;AAFqH,GAAtH,EAGGc,OAHH,CAGYC,QAAD,IAAc;AACxBzB,IAAAA,UAAU,CAAC0B,QAAX,CAAoB,SAApB,EAA+BC,UAA/B,CAA0CF,QAAQ,CAACG,IAAT,CAAcC,GAAxD;AACAR,IAAAA,SAAS;;AACT,QAAIR,SAAJ,EAAe;AACdZ,MAAAA,QAAQ,CAAC6B,MAAT,CAAgB;AAAED,QAAAA,GAAG,EAAEJ,QAAQ,CAACI;AAAhB,OAAhB,EAAuC;AAAEE,QAAAA,MAAM,EAAE;AAAEH,UAAAA,IAAI,EAAE;AAAR,SAAV;AAAuBI,QAAAA,IAAI,EAAE;AAAEC,UAAAA,WAAW,EAAE,CAAC;AAAEC,YAAAA,KAAK,EAAE,SAAT;AAAoBf,YAAAA;AAApB,WAAD;AAAf;AAA7B,OAAvC;AACA;AACD,GATD;;AAWA,MAAIN,SAAJ,EAAe;AACd,WAAOQ,SAAP;AACA;;AAED,MAAI,CAACT,gBAAL,EAAuB;AACtBX,IAAAA,QAAQ,CAACkC,6CAAT,CACC9B,GADD,EAECM,aAFD,EAGCO,EAHD,EAICJ,SAJD;AAKGS,MAAAA,MAAM,EAAE;AAAEa,QAAAA,IAAI,EAAE;AAAR;AALX,OAK4B1B,KAAK,IAAI;AAAEA,MAAAA;AAAF,KALrC,GAMCK,aAND,EAQEsB,KARF,GASEb,OATF,CASU;AAAA,UAAC;AAAEY,QAAAA;AAAF,OAAD;AAAA,aAAcrC,UAAU,CAACqC,IAAD,CAAxB;AAAA,KATV;AAUA;;AAED,MAAI,CAACrB,aAAL,EAAoB;AACnB,UAAMuB,OAAO,GAAG,IAAIC,GAAJ,EAAhB;AACAtC,IAAAA,QAAQ,CAACuC,0CAAT,CACC;AAAEnC,MAAAA,GAAF;AAAOoC,MAAAA,MAAM,EAAE9B,aAAf;AAA8BC,MAAAA,gBAA9B;AAAgDM,MAAAA,EAAhD;AAAoDwB,MAAAA,KAAK,EAAE5B;AAA3D,KADD,EAEC;AAAES,MAAAA,MAAM,EAAE;AAAEM,QAAAA,GAAG,EAAE;AAAP;AAAV,KAFD,EAGEL,OAHF,CAGU;AAAA,UAAC;AAAEK,QAAAA;AAAF,OAAD;AAAA,aAAaS,OAAO,CAACK,GAAR,CAAYd,GAAZ,CAAb;AAAA,KAHV;;AAKA,QAAIS,OAAO,CAACM,IAAR,GAAe,CAAnB,EAAsB;AACrBzC,MAAAA,aAAa,CAAC0C,2BAAd,CAA0CxC,GAA1C,EAA+C,CAAC,GAAGiC,OAAJ,CAA/C;AACA;AACD;;AAED,QAAMQ,KAAK,GAAG7C,QAAQ,CAAC8C,sCAAT,CAAgD1C,GAAhD,EAAqDM,aAArD,EAAoEC,gBAApE,EAAsFM,EAAtF,EAA0FR,KAA1F,EAAiGI,SAAjG,EAA4GC,aAA5G,CAAd;;AACA,MAAI+B,KAAJ,EAAW;AACV5C,IAAAA,KAAK,CAAC8C,oBAAN,CAA2B3C,GAA3B;AACAD,IAAAA,aAAa,CAAC6C,UAAd,CAAyB5C,GAAzB,EAA8B,mBAA9B,EAAmD;AAClDA,MAAAA,GADkD;AAElDM,MAAAA,aAFkD;AAGlDC,MAAAA,gBAHkD;AAIlDM,MAAAA,EAJkD;AAKlDwB,MAAAA,KAAK,EAAE5B;AAL2C,KAAnD;AAOA;;AACD,SAAOgC,KAAP;AACA,CAxEM","sourcesContent":["import { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { deleteRoom } from './deleteRoom';\nimport { FileUpload } from '../../../file-upload/server';\nimport { Messages, Rooms, Subscriptions } from '../../../models/server';\nimport { Notifications } from '../../../notifications/server';\n\nexport const cleanRoomHistory = function ({\n\trid,\n\tlatest = new Date(),\n\toldest = new Date('0001-01-01T00:00:00Z'),\n\tinclusive = true,\n\tlimit = 0,\n\texcludePinned = true,\n\tignoreDiscussion = true,\n\tfilesOnly = false,\n\tfromUsers = [],\n\tignoreThreads = true,\n}) {\n\tconst gt = inclusive ? '$gte' : '$gt';\n\tconst lt = inclusive ? '$lte' : '$lt';\n\n\tconst ts = { [gt]: oldest, [lt]: latest };\n\n\tconst text = `_${TAPi18n.__('File_removed_by_prune')}_`;\n\n\tlet fileCount = 0;\n\tMessages.findFilesByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ignoreDiscussion, ts, fromUsers, ignoreThreads, {\n\t\tfields: { 'file._id': 1, 'pinned': 1 },\n\t\tlimit,\n\t}).forEach((document) => {\n\t\tFileUpload.getStore('Uploads').deleteById(document.file._id);\n\t\tfileCount++;\n\t\tif (filesOnly) {\n\t\t\tMessages.update({ _id: document._id }, { $unset: { file: 1 }, $set: { attachments: [{ color: '#FD745E', text }] } });\n\t\t}\n\t});\n\n\tif (filesOnly) {\n\t\treturn fileCount;\n\t}\n\n\tif (!ignoreDiscussion) {\n\t\tMessages.findDiscussionByRoomIdPinnedTimestampAndUsers(\n\t\t\trid,\n\t\t\texcludePinned,\n\t\t\tts,\n\t\t\tfromUsers,\n\t\t\t{ fields: { drid: 1 }, ...(limit && { limit }) },\n\t\t\tignoreThreads,\n\t\t)\n\t\t\t.fetch()\n\t\t\t.forEach(({ drid }) => deleteRoom(drid));\n\t}\n\n\tif (!ignoreThreads) {\n\t\tconst threads = new Set();\n\t\tMessages.findThreadsByRoomIdPinnedTimestampAndUsers(\n\t\t\t{ rid, pinned: excludePinned, ignoreDiscussion, ts, users: fromUsers },\n\t\t\t{ fields: { _id: 1 } },\n\t\t).forEach(({ _id }) => threads.add(_id));\n\n\t\tif (threads.size > 0) {\n\t\t\tSubscriptions.removeUnreadThreadsByRoomId(rid, [...threads]);\n\t\t}\n\t}\n\n\tconst count = Messages.removeByIdPinnedTimestampLimitAndUsers(rid, excludePinned, ignoreDiscussion, ts, limit, fromUsers, ignoreThreads);\n\tif (count) {\n\t\tRooms.resetLastMessageById(rid);\n\t\tNotifications.notifyRoom(rid, 'deleteMessageBulk', {\n\t\t\trid,\n\t\t\texcludePinned,\n\t\t\tignoreDiscussion,\n\t\t\tts,\n\t\t\tusers: fromUsers,\n\t\t});\n\t}\n\treturn count;\n};\n"]},"sourceType":"module","hash":"c804098df35d1ae20bd23c8cf3c10612166af498"}

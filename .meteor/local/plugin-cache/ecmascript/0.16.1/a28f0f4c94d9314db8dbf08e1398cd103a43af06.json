{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/notifications/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/notifications/index.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/notifications/index.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/notifications/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/notifications/index.js"}},"code":"module.export({\n  parseMessageTextPerUser: () => parseMessageTextPerUser,\n  replaceMentionedUsernamesWithFullNames: () => replaceMentionedUsernamesWithFullNames,\n  messageContainsHighlight: () => messageContainsHighlight,\n  callJoinRoom: () => callJoinRoom\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\n\nfunction parseMessageTextPerUser(messageText, message, receiver) {\n  const lng = receiver.language || settings.get('Language') || 'en';\n\n  if (!message.msg && message.attachments && message.attachments[0]) {\n    return message.attachments[0].image_type ? TAPi18n.__('User_uploaded_image', {\n      lng\n    }) : TAPi18n.__('User_uploaded_file', {\n      lng\n    });\n  }\n\n  if (message.msg && message.t === 'e2e') {\n    return TAPi18n.__('Encrypted_message', {\n      lng\n    });\n  } // perform processing required before sending message as notification such as markdown filtering\n\n\n  return callbacks.run('renderNotification', messageText);\n}\n\nfunction replaceMentionedUsernamesWithFullNames(message, mentions) {\n  if (!mentions || !mentions.length) {\n    return message;\n  }\n\n  mentions.forEach(mention => {\n    if (mention.name) {\n      message = message.replace(new RegExp(escapeRegExp(\"@\".concat(mention.username)), 'g'), mention.name);\n    }\n  });\n  return message;\n}\n\nfunction messageContainsHighlight(message, highlights) {\n  if (!highlights || highlights.length === 0) {\n    return false;\n  }\n\n  return highlights.some(function (highlight) {\n    const regexp = new RegExp(escapeRegExp(highlight), 'i');\n    return regexp.test(message.msg);\n  });\n}\n\nfunction callJoinRoom(userId, rid) {\n  return new Promise((resolve, reject) => {\n    Meteor.runAsUser(userId, () => Meteor.call('joinRoom', rid, (error, result) => {\n      if (error) {\n        return reject(error);\n      }\n\n      return resolve(result);\n    }));\n  });\n}","map":{"version":3,"sources":["app/lib/server/functions/notifications/index.js"],"names":["module","export","parseMessageTextPerUser","replaceMentionedUsernamesWithFullNames","messageContainsHighlight","callJoinRoom","Meteor","link","v","TAPi18n","escapeRegExp","callbacks","settings","messageText","message","receiver","lng","language","get","msg","attachments","image_type","__","t","run","mentions","length","forEach","mention","name","replace","RegExp","username","highlights","some","highlight","regexp","test","userId","rid","Promise","resolve","reject","runAsUser","call","error","result"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { settings } from '../../../../settings';\n\n/**\n * This function returns a string ready to be shown in the notification\n *\n * @param {object} message the message to be parsed\n */\nexport function parseMessageTextPerUser(messageText, message, receiver) {\n\tconst lng = receiver.language || settings.get('Language') || 'en';\n\n\tif (!message.msg && message.attachments && message.attachments[0]) {\n\t\treturn message.attachments[0].image_type ? TAPi18n.__('User_uploaded_image', { lng }) : TAPi18n.__('User_uploaded_file', { lng });\n\t}\n\n\tif (message.msg && message.t === 'e2e') {\n\t\treturn TAPi18n.__('Encrypted_message', { lng });\n\t}\n\n\t// perform processing required before sending message as notification such as markdown filtering\n\treturn callbacks.run('renderNotification', messageText);\n}\n\n/**\n * Replaces @username with full name\n *\n * @param {string} message The message to replace\n * @param {object[]} mentions Array of mentions used to make replacements\n *\n * @returns {string}\n */\nexport function replaceMentionedUsernamesWithFullNames(message, mentions) {\n\tif (!mentions || !mentions.length) {\n\t\treturn message;\n\t}\n\tmentions.forEach((mention) => {\n\t\tif (mention.name) {\n\t\t\tmessage = message.replace(new RegExp(escapeRegExp(`@${mention.username}`), 'g'), mention.name);\n\t\t}\n\t});\n\treturn message;\n}\n\n/**\n * Checks if a message contains a user highlight\n *\n * @param {string} message\n * @param {array|undefined} highlights\n *\n * @returns {boolean}\n */\nexport function messageContainsHighlight(message, highlights) {\n\tif (!highlights || highlights.length === 0) {\n\t\treturn false;\n\t}\n\n\treturn highlights.some(function (highlight) {\n\t\tconst regexp = new RegExp(escapeRegExp(highlight), 'i');\n\t\treturn regexp.test(message.msg);\n\t});\n}\n\nexport function callJoinRoom(userId, rid) {\n\treturn new Promise((resolve, reject) => {\n\t\tMeteor.runAsUser(userId, () =>\n\t\t\tMeteor.call('joinRoom', rid, (error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\t\t\t\treturn resolve(result);\n\t\t\t}),\n\t\t);\n\t});\n}\n"]},"sourceType":"module","hash":"a28f0f4c94d9314db8dbf08e1398cd103a43af06"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/sms/server/services/voxtelesys.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/sms/server/services/voxtelesys.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/sms/server/services/voxtelesys.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/sms/server/services/voxtelesys.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/sms/server/services/voxtelesys.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 2);\nlet filesize;\nmodule.link(\"filesize\", {\n  default(v) {\n    filesize = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet SMS;\nmodule.link(\"../SMS\", {\n  SMS(v) {\n    SMS = v;\n  }\n\n}, 5);\nlet fileUploadIsValidContentType;\nmodule.link(\"../../../utils/lib/fileUploadRestrictions\", {\n  fileUploadIsValidContentType(v) {\n    fileUploadIsValidContentType = v;\n  }\n\n}, 6);\nlet mime;\nmodule.link(\"../../../utils/lib/mimeTypes\", {\n  mime(v) {\n    mime = v;\n  }\n\n}, 7);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 8);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 9);\nconst MAX_FILE_SIZE = 5242880;\n\nconst notifyAgent = (userId, rid, msg) => api.broadcast('notify.ephemeralMessage', userId, rid, {\n  msg\n});\n\nclass Voxtelesys {\n  constructor() {\n    this.authToken = settings.get('SMS_Voxtelesys_authToken');\n    this.URL = settings.get('SMS_Voxtelesys_URL');\n    this.fileUploadEnabled = settings.get('SMS_Voxtelesys_FileUpload_Enabled');\n    this.mediaTypeWhiteList = settings.get('SMS_Voxtelesys_FileUpload_MediaTypeWhiteList');\n  }\n\n  parse(data) {\n    const returnData = {\n      from: data.from,\n      to: data.to,\n      body: data.body,\n      media: [],\n      extra: {\n        received_at: data.received_at\n      }\n    };\n\n    if (!data.media) {\n      return returnData;\n    }\n\n    for (let mediaIndex = 0; mediaIndex < data.media.length; mediaIndex++) {\n      const media = {\n        url: '',\n        contentType: ''\n      };\n      const mediaUrl = data.media[mediaIndex];\n      const contentType = mime.lookup(new URL(data.media[mediaIndex]).pathname);\n      media.url = mediaUrl;\n      media.contentType = contentType;\n      returnData.media.push(media);\n    }\n\n    return returnData;\n  }\n\n  send(fromNumber, toNumber, message, extraData) {\n    let media;\n    const defaultLanguage = settings.get('Language') || 'en';\n\n    if (extraData && extraData.fileUpload) {\n      const {\n        rid,\n        userId,\n        fileUpload: {\n          size,\n          type,\n          publicFilePath\n        }\n      } = extraData;\n      const user = userId ? Meteor.users.findOne(userId) : null;\n      const lng = user && user.language || defaultLanguage;\n      let reason;\n\n      if (!this.fileUploadEnabled) {\n        reason = TAPi18n.__('FileUpload_Disabled', {\n          lng\n        });\n      } else if (size > MAX_FILE_SIZE) {\n        reason = TAPi18n.__('File_exceeds_allowed_size_of_bytes', {\n          size: filesize(MAX_FILE_SIZE),\n          lng\n        });\n      } else if (!fileUploadIsValidContentType(type, this.fileUploadMediaTypeWhiteList)) {\n        reason = TAPi18n.__('File_type_is_not_accepted', {\n          lng\n        });\n      }\n\n      if (reason) {\n        rid && userId && notifyAgent(userId, rid, reason);\n        return SystemLogger.error(\"(Voxtelesys) -> \".concat(reason));\n      }\n\n      media = [publicFilePath];\n    }\n\n    const options = {\n      headers: {\n        Authorization: \"Bearer \".concat(this.authToken)\n      },\n      data: _objectSpread({\n        to: [toNumber],\n        from: fromNumber,\n        body: message\n      }, media && {\n        media\n      })\n    };\n\n    try {\n      HTTP.call('POST', this.URL || 'https://smsapi.voxtelesys.net/api/v1/sms', options);\n    } catch (error) {\n      SystemLogger.error(\"Error connecting to Voxtelesys SMS API: \".concat(error));\n    }\n  }\n\n  response() {\n    return {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        success: true\n      }\n    };\n  }\n\n  error(error) {\n    let message = '';\n\n    if (error.reason) {\n      message = error.reason;\n    }\n\n    return {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        success: false,\n        error: message\n      }\n    };\n  }\n\n}\n\nSMS.registerService('voxtelesys', Voxtelesys);","map":{"version":3,"sources":["app/sms/server/services/voxtelesys.js"],"names":["_objectSpread","module","link","default","v","HTTP","Meteor","TAPi18n","filesize","settings","SMS","fileUploadIsValidContentType","mime","api","SystemLogger","MAX_FILE_SIZE","notifyAgent","userId","rid","msg","broadcast","Voxtelesys","constructor","authToken","get","URL","fileUploadEnabled","mediaTypeWhiteList","parse","data","returnData","from","to","body","media","extra","received_at","mediaIndex","length","url","contentType","mediaUrl","lookup","pathname","push","send","fromNumber","toNumber","message","extraData","defaultLanguage","fileUpload","size","type","publicFilePath","user","users","findOne","lng","language","reason","__","fileUploadMediaTypeWhiteList","error","options","headers","Authorization","call","response","success","registerService"],"mappings":"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","sourcesContent":["import { HTTP } from 'meteor/http';\nimport { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport filesize from 'filesize';\n\nimport { settings } from '../../../settings';\nimport { SMS } from '../SMS';\nimport { fileUploadIsValidContentType } from '../../../utils/lib/fileUploadRestrictions';\nimport { mime } from '../../../utils/lib/mimeTypes';\nimport { api } from '../../../../server/sdk/api';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\nconst MAX_FILE_SIZE = 5242880;\n\nconst notifyAgent = (userId, rid, msg) =>\n\tapi.broadcast('notify.ephemeralMessage', userId, rid, {\n\t\tmsg,\n\t});\n\nclass Voxtelesys {\n\tconstructor() {\n\t\tthis.authToken = settings.get('SMS_Voxtelesys_authToken');\n\t\tthis.URL = settings.get('SMS_Voxtelesys_URL');\n\t\tthis.fileUploadEnabled = settings.get('SMS_Voxtelesys_FileUpload_Enabled');\n\t\tthis.mediaTypeWhiteList = settings.get('SMS_Voxtelesys_FileUpload_MediaTypeWhiteList');\n\t}\n\n\tparse(data) {\n\t\tconst returnData = {\n\t\t\tfrom: data.from,\n\t\t\tto: data.to,\n\t\t\tbody: data.body,\n\t\t\tmedia: [],\n\n\t\t\textra: {\n\t\t\t\treceived_at: data.received_at,\n\t\t\t},\n\t\t};\n\n\t\tif (!data.media) {\n\t\t\treturn returnData;\n\t\t}\n\n\t\tfor (let mediaIndex = 0; mediaIndex < data.media.length; mediaIndex++) {\n\t\t\tconst media = {\n\t\t\t\turl: '',\n\t\t\t\tcontentType: '',\n\t\t\t};\n\n\t\t\tconst mediaUrl = data.media[mediaIndex];\n\t\t\tconst contentType = mime.lookup(new URL(data.media[mediaIndex]).pathname);\n\n\t\t\tmedia.url = mediaUrl;\n\t\t\tmedia.contentType = contentType;\n\n\t\t\treturnData.media.push(media);\n\t\t}\n\n\t\treturn returnData;\n\t}\n\n\tsend(fromNumber, toNumber, message, extraData) {\n\t\tlet media;\n\t\tconst defaultLanguage = settings.get('Language') || 'en';\n\t\tif (extraData && extraData.fileUpload) {\n\t\t\tconst {\n\t\t\t\trid,\n\t\t\t\tuserId,\n\t\t\t\tfileUpload: { size, type, publicFilePath },\n\t\t\t} = extraData;\n\t\t\tconst user = userId ? Meteor.users.findOne(userId) : null;\n\t\t\tconst lng = (user && user.language) || defaultLanguage;\n\n\t\t\tlet reason;\n\t\t\tif (!this.fileUploadEnabled) {\n\t\t\t\treason = TAPi18n.__('FileUpload_Disabled', { lng });\n\t\t\t} else if (size > MAX_FILE_SIZE) {\n\t\t\t\treason = TAPi18n.__('File_exceeds_allowed_size_of_bytes', {\n\t\t\t\t\tsize: filesize(MAX_FILE_SIZE),\n\t\t\t\t\tlng,\n\t\t\t\t});\n\t\t\t} else if (!fileUploadIsValidContentType(type, this.fileUploadMediaTypeWhiteList)) {\n\t\t\t\treason = TAPi18n.__('File_type_is_not_accepted', { lng });\n\t\t\t}\n\n\t\t\tif (reason) {\n\t\t\t\trid && userId && notifyAgent(userId, rid, reason);\n\t\t\t\treturn SystemLogger.error(`(Voxtelesys) -> ${reason}`);\n\t\t\t}\n\n\t\t\tmedia = [publicFilePath];\n\t\t}\n\n\t\tconst options = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${this.authToken}`,\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\tto: [toNumber],\n\t\t\t\tfrom: fromNumber,\n\t\t\t\tbody: message,\n\t\t\t\t...(media && { media }),\n\t\t\t},\n\t\t};\n\n\t\ttry {\n\t\t\tHTTP.call('POST', this.URL || 'https://smsapi.voxtelesys.net/api/v1/sms', options);\n\t\t} catch (error) {\n\t\t\tSystemLogger.error(`Error connecting to Voxtelesys SMS API: ${error}`);\n\t\t}\n\t}\n\n\tresponse(/* message */) {\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: {\n\t\t\t\tsuccess: true,\n\t\t\t},\n\t\t};\n\t}\n\n\terror(error) {\n\t\tlet message = '';\n\t\tif (error.reason) {\n\t\t\tmessage = error.reason;\n\t\t}\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: message,\n\t\t\t},\n\t\t};\n\t}\n}\n\nSMS.registerService('voxtelesys', Voxtelesys);\n"]},"sourceType":"module","hash":"4750e16ac96ee94ff383833cd240ef926c0dc23c"}

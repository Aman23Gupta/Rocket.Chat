{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/processWebhookMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/processWebhookMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/processWebhookMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/processWebhookMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/processWebhookMessage.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  processWebhookMessage: () => processWebhookMessage\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 2);\nlet getRoomByNameOrIdWithOptionToJoin;\nmodule.link(\"./getRoomByNameOrIdWithOptionToJoin\", {\n  getRoomByNameOrIdWithOptionToJoin(v) {\n    getRoomByNameOrIdWithOptionToJoin = v;\n  }\n\n}, 3);\nlet sendMessage;\nmodule.link(\"./sendMessage\", {\n  sendMessage(v) {\n    sendMessage = v;\n  }\n\n}, 4);\nlet validateRoomMessagePermissions;\nmodule.link(\"../../../authorization/server/functions/canSendMessage\", {\n  validateRoomMessagePermissions(v) {\n    validateRoomMessagePermissions = v;\n  }\n\n}, 5);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 6);\nlet getDirectMessageByIdWithOptionToJoin, getDirectMessageByNameOrIdWithOptionToJoin;\nmodule.link(\"./getDirectMessageByNameOrIdWithOptionToJoin\", {\n  getDirectMessageByIdWithOptionToJoin(v) {\n    getDirectMessageByIdWithOptionToJoin = v;\n  },\n\n  getDirectMessageByNameOrIdWithOptionToJoin(v) {\n    getDirectMessageByNameOrIdWithOptionToJoin = v;\n  }\n\n}, 7);\n\nconst processWebhookMessage = function (messageObj, user) {\n  let defaultValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    channel: '',\n    alias: '',\n    avatar: '',\n    emoji: ''\n  };\n  const sentData = [];\n  const channels = [].concat(messageObj.channel || messageObj.roomId || defaultValues.channel);\n\n  for (const channel of channels) {\n    const channelType = channel[0];\n    let channelValue = channel.substr(1);\n    let room;\n\n    switch (channelType) {\n      case '#':\n        room = getRoomByNameOrIdWithOptionToJoin({\n          currentUserId: user._id,\n          nameOrId: channelValue,\n          joinChannel: true\n        });\n        break;\n\n      case '@':\n        room = getDirectMessageByNameOrIdWithOptionToJoin({\n          currentUserId: user._id,\n          nameOrId: channelValue\n        });\n        break;\n\n      default:\n        channelValue = channelType + channelValue; // Try to find the room by id or name if they didn't include the prefix.\n\n        room = getRoomByNameOrIdWithOptionToJoin({\n          currentUserId: user._id,\n          nameOrId: channelValue,\n          joinChannel: true,\n          errorOnEmpty: false\n        });\n\n        if (room) {\n          break;\n        } // We didn't get a room, let's try finding direct messages\n\n\n        room = getDirectMessageByIdWithOptionToJoin({\n          currentUserId: user._id,\n          nameOrId: channelValue\n        });\n\n        if (room) {\n          break;\n        } // No room, so throw an error\n\n\n        throw new Meteor.Error('invalid-channel');\n    }\n\n    if (messageObj.attachments && !Array.isArray(messageObj.attachments)) {\n      SystemLogger.warn({\n        msg: 'Attachments should be Array, ignoring value',\n        attachments: messageObj.attachments\n      });\n      messageObj.attachments = undefined;\n    }\n\n    const message = {\n      alias: messageObj.username || messageObj.alias || defaultValues.alias,\n      msg: s.trim(messageObj.text || messageObj.msg || ''),\n      attachments: messageObj.attachments || [],\n      parseUrls: messageObj.parseUrls !== undefined ? messageObj.parseUrls : !messageObj.attachments,\n      bot: messageObj.bot,\n      groupable: messageObj.groupable !== undefined ? messageObj.groupable : false,\n      tmid: messageObj.tmid\n    };\n\n    if (!_.isEmpty(messageObj.icon_url) || !_.isEmpty(messageObj.avatar)) {\n      message.avatar = messageObj.icon_url || messageObj.avatar;\n    } else if (!_.isEmpty(messageObj.icon_emoji) || !_.isEmpty(messageObj.emoji)) {\n      message.emoji = messageObj.icon_emoji || messageObj.emoji;\n    } else if (!_.isEmpty(defaultValues.avatar)) {\n      message.avatar = defaultValues.avatar;\n    } else if (!_.isEmpty(defaultValues.emoji)) {\n      message.emoji = defaultValues.emoji;\n    }\n\n    if (_.isArray(message.attachments)) {\n      for (let i = 0; i < message.attachments.length; i++) {\n        const attachment = message.attachments[i];\n\n        if (attachment.msg) {\n          attachment.text = s.trim(attachment.msg);\n          delete attachment.msg;\n        }\n      }\n    }\n\n    validateRoomMessagePermissions(room, _objectSpread({\n      uid: user._id\n    }, user));\n    const messageReturn = sendMessage(user, message, room);\n    sentData.push({\n      channel,\n      message: messageReturn\n    });\n  }\n\n  return sentData;\n};","map":{"version":3,"sources":["app/lib/server/functions/processWebhookMessage.js"],"names":["_objectSpread","module","link","default","v","export","processWebhookMessage","Meteor","_","s","getRoomByNameOrIdWithOptionToJoin","sendMessage","validateRoomMessagePermissions","SystemLogger","getDirectMessageByIdWithOptionToJoin","getDirectMessageByNameOrIdWithOptionToJoin","messageObj","user","defaultValues","channel","alias","avatar","emoji","sentData","channels","concat","roomId","channelType","channelValue","substr","room","currentUserId","_id","nameOrId","joinChannel","errorOnEmpty","Error","attachments","Array","isArray","warn","msg","undefined","message","username","trim","text","parseUrls","bot","groupable","tmid","isEmpty","icon_url","icon_emoji","i","length","attachment","uid","messageReturn","push"],"mappings":"AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,aAAa,GAACI,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;AAAlBH,MAAM,CAACI,MAAP,CAAc;AAACC,EAAAA,qBAAqB,EAAC,MAAIA;AAA3B,CAAd;AAAiE,IAAIC,MAAJ;AAAWN,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACK,EAAAA,MAAM,CAACH,CAAD,EAAG;AAACG,IAAAA,MAAM,GAACH,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;;AAAqD,IAAII,CAAJ;;AAAMP,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACI,IAAAA,CAAC,GAACJ,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAA8C,IAAIK,CAAJ;AAAMR,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACK,IAAAA,CAAC,GAACL,CAAF;AAAI;;AAAhB,CAAhC,EAAkD,CAAlD;AAAqD,IAAIM,iCAAJ;AAAsCT,MAAM,CAACC,IAAP,CAAY,qCAAZ,EAAkD;AAACQ,EAAAA,iCAAiC,CAACN,CAAD,EAAG;AAACM,IAAAA,iCAAiC,GAACN,CAAlC;AAAoC;;AAA1E,CAAlD,EAA8H,CAA9H;AAAiI,IAAIO,WAAJ;AAAgBV,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACS,EAAAA,WAAW,CAACP,CAAD,EAAG;AAACO,IAAAA,WAAW,GAACP,CAAZ;AAAc;;AAA9B,CAA5B,EAA4D,CAA5D;AAA+D,IAAIQ,8BAAJ;AAAmCX,MAAM,CAACC,IAAP,CAAY,wDAAZ,EAAqE;AAACU,EAAAA,8BAA8B,CAACR,CAAD,EAAG;AAACQ,IAAAA,8BAA8B,GAACR,CAA/B;AAAiC;;AAApE,CAArE,EAA2I,CAA3I;AAA8I,IAAIS,YAAJ;AAAiBZ,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACW,EAAAA,YAAY,CAACT,CAAD,EAAG;AAACS,IAAAA,YAAY,GAACT,CAAb;AAAe;;AAAhC,CAAnD,EAAqF,CAArF;AAAwF,IAAIU,oCAAJ,EAAyCC,0CAAzC;AAAoFd,MAAM,CAACC,IAAP,CAAY,8CAAZ,EAA2D;AAACY,EAAAA,oCAAoC,CAACV,CAAD,EAAG;AAACU,IAAAA,oCAAoC,GAACV,CAArC;AAAuC,GAAhF;;AAAiFW,EAAAA,0CAA0C,CAACX,CAAD,EAAG;AAACW,IAAAA,0CAA0C,GAACX,CAA3C;AAA6C;;AAA5K,CAA3D,EAAyO,CAAzO;;AAa70B,MAAME,qBAAqB,GAAG,UAAUU,UAAV,EAAsBC,IAAtB,EAA+F;AAAA,MAAnEC,aAAmE,uEAAnD;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,KAAK,EAAE,EAAtB;AAA0BC,IAAAA,MAAM,EAAE,EAAlC;AAAsCC,IAAAA,KAAK,EAAE;AAA7C,GAAmD;AACnI,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,QAAQ,GAAG,GAAGC,MAAH,CAAUT,UAAU,CAACG,OAAX,IAAsBH,UAAU,CAACU,MAAjC,IAA2CR,aAAa,CAACC,OAAnE,CAAjB;;AAEA,OAAK,MAAMA,OAAX,IAAsBK,QAAtB,EAAgC;AAC/B,UAAMG,WAAW,GAAGR,OAAO,CAAC,CAAD,CAA3B;AAEA,QAAIS,YAAY,GAAGT,OAAO,CAACU,MAAR,CAAe,CAAf,CAAnB;AACA,QAAIC,IAAJ;;AAEA,YAAQH,WAAR;AACC,WAAK,GAAL;AACCG,QAAAA,IAAI,GAAGpB,iCAAiC,CAAC;AACxCqB,UAAAA,aAAa,EAAEd,IAAI,CAACe,GADoB;AAExCC,UAAAA,QAAQ,EAAEL,YAF8B;AAGxCM,UAAAA,WAAW,EAAE;AAH2B,SAAD,CAAxC;AAKA;;AACD,WAAK,GAAL;AACCJ,QAAAA,IAAI,GAAGf,0CAA0C,CAAC;AACjDgB,UAAAA,aAAa,EAAEd,IAAI,CAACe,GAD6B;AAEjDC,UAAAA,QAAQ,EAAEL;AAFuC,SAAD,CAAjD;AAIA;;AACD;AACCA,QAAAA,YAAY,GAAGD,WAAW,GAAGC,YAA7B,CADD,CAGC;;AACAE,QAAAA,IAAI,GAAGpB,iCAAiC,CAAC;AACxCqB,UAAAA,aAAa,EAAEd,IAAI,CAACe,GADoB;AAExCC,UAAAA,QAAQ,EAAEL,YAF8B;AAGxCM,UAAAA,WAAW,EAAE,IAH2B;AAIxCC,UAAAA,YAAY,EAAE;AAJ0B,SAAD,CAAxC;;AAMA,YAAIL,IAAJ,EAAU;AACT;AACA,SAZF,CAcC;;;AACAA,QAAAA,IAAI,GAAGhB,oCAAoC,CAAC;AAC3CiB,UAAAA,aAAa,EAAEd,IAAI,CAACe,GADuB;AAE3CC,UAAAA,QAAQ,EAAEL;AAFiC,SAAD,CAA3C;;AAIA,YAAIE,IAAJ,EAAU;AACT;AACA,SArBF,CAuBC;;;AACA,cAAM,IAAIvB,MAAM,CAAC6B,KAAX,CAAiB,iBAAjB,CAAN;AAtCF;;AAyCA,QAAIpB,UAAU,CAACqB,WAAX,IAA0B,CAACC,KAAK,CAACC,OAAN,CAAcvB,UAAU,CAACqB,WAAzB,CAA/B,EAAsE;AACrExB,MAAAA,YAAY,CAAC2B,IAAb,CAAkB;AACjBC,QAAAA,GAAG,EAAE,6CADY;AAEjBJ,QAAAA,WAAW,EAAErB,UAAU,CAACqB;AAFP,OAAlB;AAIArB,MAAAA,UAAU,CAACqB,WAAX,GAAyBK,SAAzB;AACA;;AAED,UAAMC,OAAO,GAAG;AACfvB,MAAAA,KAAK,EAAEJ,UAAU,CAAC4B,QAAX,IAAuB5B,UAAU,CAACI,KAAlC,IAA2CF,aAAa,CAACE,KADjD;AAEfqB,MAAAA,GAAG,EAAEhC,CAAC,CAACoC,IAAF,CAAO7B,UAAU,CAAC8B,IAAX,IAAmB9B,UAAU,CAACyB,GAA9B,IAAqC,EAA5C,CAFU;AAGfJ,MAAAA,WAAW,EAAErB,UAAU,CAACqB,WAAX,IAA0B,EAHxB;AAIfU,MAAAA,SAAS,EAAE/B,UAAU,CAAC+B,SAAX,KAAyBL,SAAzB,GAAqC1B,UAAU,CAAC+B,SAAhD,GAA4D,CAAC/B,UAAU,CAACqB,WAJpE;AAKfW,MAAAA,GAAG,EAAEhC,UAAU,CAACgC,GALD;AAMfC,MAAAA,SAAS,EAAEjC,UAAU,CAACiC,SAAX,KAAyBP,SAAzB,GAAqC1B,UAAU,CAACiC,SAAhD,GAA4D,KANxD;AAOfC,MAAAA,IAAI,EAAElC,UAAU,CAACkC;AAPF,KAAhB;;AAUA,QAAI,CAAC1C,CAAC,CAAC2C,OAAF,CAAUnC,UAAU,CAACoC,QAArB,CAAD,IAAmC,CAAC5C,CAAC,CAAC2C,OAAF,CAAUnC,UAAU,CAACK,MAArB,CAAxC,EAAsE;AACrEsB,MAAAA,OAAO,CAACtB,MAAR,GAAiBL,UAAU,CAACoC,QAAX,IAAuBpC,UAAU,CAACK,MAAnD;AACA,KAFD,MAEO,IAAI,CAACb,CAAC,CAAC2C,OAAF,CAAUnC,UAAU,CAACqC,UAArB,CAAD,IAAqC,CAAC7C,CAAC,CAAC2C,OAAF,CAAUnC,UAAU,CAACM,KAArB,CAA1C,EAAuE;AAC7EqB,MAAAA,OAAO,CAACrB,KAAR,GAAgBN,UAAU,CAACqC,UAAX,IAAyBrC,UAAU,CAACM,KAApD;AACA,KAFM,MAEA,IAAI,CAACd,CAAC,CAAC2C,OAAF,CAAUjC,aAAa,CAACG,MAAxB,CAAL,EAAsC;AAC5CsB,MAAAA,OAAO,CAACtB,MAAR,GAAiBH,aAAa,CAACG,MAA/B;AACA,KAFM,MAEA,IAAI,CAACb,CAAC,CAAC2C,OAAF,CAAUjC,aAAa,CAACI,KAAxB,CAAL,EAAqC;AAC3CqB,MAAAA,OAAO,CAACrB,KAAR,GAAgBJ,aAAa,CAACI,KAA9B;AACA;;AAED,QAAId,CAAC,CAAC+B,OAAF,CAAUI,OAAO,CAACN,WAAlB,CAAJ,EAAoC;AACnC,WAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,OAAO,CAACN,WAAR,CAAoBkB,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACpD,cAAME,UAAU,GAAGb,OAAO,CAACN,WAAR,CAAoBiB,CAApB,CAAnB;;AACA,YAAIE,UAAU,CAACf,GAAf,EAAoB;AACnBe,UAAAA,UAAU,CAACV,IAAX,GAAkBrC,CAAC,CAACoC,IAAF,CAAOW,UAAU,CAACf,GAAlB,CAAlB;AACA,iBAAOe,UAAU,CAACf,GAAlB;AACA;AACD;AACD;;AAED7B,IAAAA,8BAA8B,CAACkB,IAAD;AAAS2B,MAAAA,GAAG,EAAExC,IAAI,CAACe;AAAnB,OAA2Bf,IAA3B,EAA9B;AAEA,UAAMyC,aAAa,GAAG/C,WAAW,CAACM,IAAD,EAAO0B,OAAP,EAAgBb,IAAhB,CAAjC;AACAP,IAAAA,QAAQ,CAACoC,IAAT,CAAc;AAAExC,MAAAA,OAAF;AAAWwB,MAAAA,OAAO,EAAEe;AAApB,KAAd;AACA;;AAED,SAAOnC,QAAP;AACA,CAhGM","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\nimport s from 'underscore.string';\n\nimport { getRoomByNameOrIdWithOptionToJoin } from './getRoomByNameOrIdWithOptionToJoin';\nimport { sendMessage } from './sendMessage';\nimport { validateRoomMessagePermissions } from '../../../authorization/server/functions/canSendMessage';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport {\n\tgetDirectMessageByIdWithOptionToJoin,\n\tgetDirectMessageByNameOrIdWithOptionToJoin,\n} from './getDirectMessageByNameOrIdWithOptionToJoin';\n\nexport const processWebhookMessage = function (messageObj, user, defaultValues = { channel: '', alias: '', avatar: '', emoji: '' }) {\n\tconst sentData = [];\n\tconst channels = [].concat(messageObj.channel || messageObj.roomId || defaultValues.channel);\n\n\tfor (const channel of channels) {\n\t\tconst channelType = channel[0];\n\n\t\tlet channelValue = channel.substr(1);\n\t\tlet room;\n\n\t\tswitch (channelType) {\n\t\t\tcase '#':\n\t\t\t\troom = getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tcurrentUserId: user._id,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\tjoinChannel: true,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '@':\n\t\t\t\troom = getDirectMessageByNameOrIdWithOptionToJoin({\n\t\t\t\t\tcurrentUserId: user._id,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tchannelValue = channelType + channelValue;\n\n\t\t\t\t// Try to find the room by id or name if they didn't include the prefix.\n\t\t\t\troom = getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tcurrentUserId: user._id,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\tjoinChannel: true,\n\t\t\t\t\terrorOnEmpty: false,\n\t\t\t\t});\n\t\t\t\tif (room) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// We didn't get a room, let's try finding direct messages\n\t\t\t\troom = getDirectMessageByIdWithOptionToJoin({\n\t\t\t\t\tcurrentUserId: user._id,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t});\n\t\t\t\tif (room) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// No room, so throw an error\n\t\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tif (messageObj.attachments && !Array.isArray(messageObj.attachments)) {\n\t\t\tSystemLogger.warn({\n\t\t\t\tmsg: 'Attachments should be Array, ignoring value',\n\t\t\t\tattachments: messageObj.attachments,\n\t\t\t});\n\t\t\tmessageObj.attachments = undefined;\n\t\t}\n\n\t\tconst message = {\n\t\t\talias: messageObj.username || messageObj.alias || defaultValues.alias,\n\t\t\tmsg: s.trim(messageObj.text || messageObj.msg || ''),\n\t\t\tattachments: messageObj.attachments || [],\n\t\t\tparseUrls: messageObj.parseUrls !== undefined ? messageObj.parseUrls : !messageObj.attachments,\n\t\t\tbot: messageObj.bot,\n\t\t\tgroupable: messageObj.groupable !== undefined ? messageObj.groupable : false,\n\t\t\ttmid: messageObj.tmid,\n\t\t};\n\n\t\tif (!_.isEmpty(messageObj.icon_url) || !_.isEmpty(messageObj.avatar)) {\n\t\t\tmessage.avatar = messageObj.icon_url || messageObj.avatar;\n\t\t} else if (!_.isEmpty(messageObj.icon_emoji) || !_.isEmpty(messageObj.emoji)) {\n\t\t\tmessage.emoji = messageObj.icon_emoji || messageObj.emoji;\n\t\t} else if (!_.isEmpty(defaultValues.avatar)) {\n\t\t\tmessage.avatar = defaultValues.avatar;\n\t\t} else if (!_.isEmpty(defaultValues.emoji)) {\n\t\t\tmessage.emoji = defaultValues.emoji;\n\t\t}\n\n\t\tif (_.isArray(message.attachments)) {\n\t\t\tfor (let i = 0; i < message.attachments.length; i++) {\n\t\t\t\tconst attachment = message.attachments[i];\n\t\t\t\tif (attachment.msg) {\n\t\t\t\t\tattachment.text = s.trim(attachment.msg);\n\t\t\t\t\tdelete attachment.msg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvalidateRoomMessagePermissions(room, { uid: user._id, ...user });\n\n\t\tconst messageReturn = sendMessage(user, message, room);\n\t\tsentData.push({ channel, message: messageReturn });\n\t}\n\n\treturn sentData;\n};\n"]},"sourceType":"module","hash":"89828f530691d5b9882d3e3b61e531601223951e"}

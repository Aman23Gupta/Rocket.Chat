{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/LivechatAgentActivity.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/models/LivechatAgentActivity.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/LivechatAgentActivity.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/LivechatAgentActivity.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/models/LivechatAgentActivity.js"}},"code":"module.export({\n  LivechatAgentActivity: () => LivechatAgentActivity\n});\nlet Base;\nmodule.link(\"./_Base\", {\n  Base(v) {\n    Base = v;\n  }\n\n}, 0);\n\nclass LivechatAgentActivity extends Base {\n  constructor() {\n    super(...arguments);\n    this.tryEnsureIndex({\n      date: 1\n    });\n    this.tryEnsureIndex({\n      agentId: 1,\n      date: 1\n    }, {\n      unique: true\n    });\n    this.tryEnsureIndex({\n      agentId: 1\n    });\n  }\n\n  createOrUpdate() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      date,\n      agentId,\n      lastStartedAt\n    } = data;\n\n    if (!date || !agentId) {\n      return;\n    }\n\n    return this.upsert({\n      agentId,\n      date\n    }, {\n      $unset: {\n        lastStoppedAt: 1\n      },\n      $set: {\n        lastStartedAt: lastStartedAt || new Date()\n      },\n      $setOnInsert: {\n        date,\n        agentId\n      }\n    });\n  }\n\n  updateLastStoppedAt(_ref) {\n    let {\n      agentId,\n      date,\n      lastStoppedAt,\n      availableTime\n    } = _ref;\n    const query = {\n      agentId,\n      date\n    };\n    const update = {\n      $inc: {\n        availableTime\n      },\n      $set: {\n        lastStoppedAt\n      }\n    };\n    return this.update(query, update);\n  }\n\n  updateServiceHistory(_ref2) {\n    let {\n      agentId,\n      date,\n      serviceHistory\n    } = _ref2;\n    const query = {\n      agentId,\n      date\n    };\n    const update = {\n      $addToSet: {\n        serviceHistory\n      }\n    };\n    return this.update(query, update);\n  }\n\n  findOpenSessions() {\n    const query = {\n      lastStoppedAt: {\n        $exists: false\n      }\n    };\n    return this.find(query);\n  }\n\n}\n\nmodule.exportDefault(new LivechatAgentActivity('livechat_agent_activity'));","map":{"version":3,"sources":["app/models/server/models/LivechatAgentActivity.js"],"names":["module","export","LivechatAgentActivity","Base","link","v","constructor","tryEnsureIndex","date","agentId","unique","createOrUpdate","data","lastStartedAt","upsert","$unset","lastStoppedAt","$set","Date","$setOnInsert","updateLastStoppedAt","availableTime","query","update","$inc","updateServiceHistory","serviceHistory","$addToSet","findOpenSessions","$exists","find","exportDefault"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,qBAAqB,EAAC,MAAIA;AAA3B,CAAd;AAAiE,IAAIC,IAAJ;AAASH,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAsB;AAACD,EAAAA,IAAI,CAACE,CAAD,EAAG;AAACF,IAAAA,IAAI,GAACE,CAAL;AAAO;;AAAhB,CAAtB,EAAwC,CAAxC;;AAEnE,MAAMH,qBAAN,SAAoCC,IAApC,CAAyC;AAC/CG,EAAAA,WAAW,GAAU;AACpB,UAAM,YAAN;AAEA,SAAKC,cAAL,CAAoB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApB;AACA,SAAKD,cAAL,CAAoB;AAAEE,MAAAA,OAAO,EAAE,CAAX;AAAcD,MAAAA,IAAI,EAAE;AAApB,KAApB,EAA6C;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAA7C;AACA,SAAKH,cAAL,CAAoB;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAApB;AACA;;AAEDE,EAAAA,cAAc,GAAY;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AACzB,UAAM;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBI,MAAAA;AAAjB,QAAmCD,IAAzC;;AAEA,QAAI,CAACJ,IAAD,IAAS,CAACC,OAAd,EAAuB;AACtB;AACA;;AAED,WAAO,KAAKK,MAAL,CACN;AAAEL,MAAAA,OAAF;AAAWD,MAAAA;AAAX,KADM,EAEN;AACCO,MAAAA,MAAM,EAAE;AACPC,QAAAA,aAAa,EAAE;AADR,OADT;AAICC,MAAAA,IAAI,EAAE;AACLJ,QAAAA,aAAa,EAAEA,aAAa,IAAI,IAAIK,IAAJ;AAD3B,OAJP;AAOCC,MAAAA,YAAY,EAAE;AACbX,QAAAA,IADa;AAEbC,QAAAA;AAFa;AAPf,KAFM,CAAP;AAeA;;AAEDW,EAAAA,mBAAmB,OAAkD;AAAA,QAAjD;AAAEX,MAAAA,OAAF;AAAWD,MAAAA,IAAX;AAAiBQ,MAAAA,aAAjB;AAAgCK,MAAAA;AAAhC,KAAiD;AACpE,UAAMC,KAAK,GAAG;AACbb,MAAAA,OADa;AAEbD,MAAAA;AAFa,KAAd;AAIA,UAAMe,MAAM,GAAG;AACdC,MAAAA,IAAI,EAAE;AAAEH,QAAAA;AAAF,OADQ;AAEdJ,MAAAA,IAAI,EAAE;AACLD,QAAAA;AADK;AAFQ,KAAf;AAMA,WAAO,KAAKO,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA;;AAEDE,EAAAA,oBAAoB,QAAoC;AAAA,QAAnC;AAAEhB,MAAAA,OAAF;AAAWD,MAAAA,IAAX;AAAiBkB,MAAAA;AAAjB,KAAmC;AACvD,UAAMJ,KAAK,GAAG;AACbb,MAAAA,OADa;AAEbD,MAAAA;AAFa,KAAd;AAIA,UAAMe,MAAM,GAAG;AACdI,MAAAA,SAAS,EAAE;AACVD,QAAAA;AADU;AADG,KAAf;AAKA,WAAO,KAAKH,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA;;AAEDK,EAAAA,gBAAgB,GAAG;AAClB,UAAMN,KAAK,GAAG;AACbN,MAAAA,aAAa,EAAE;AAAEa,QAAAA,OAAO,EAAE;AAAX;AADF,KAAd;AAIA,WAAO,KAAKC,IAAL,CAAUR,KAAV,CAAP;AACA;;AAlE8C;;AAFhDtB,MAAM,CAAC+B,aAAP,CAuEe,IAAI7B,qBAAJ,CAA0B,yBAA1B,CAvEf","sourcesContent":["import { Base } from './_Base';\n\nexport class LivechatAgentActivity extends Base {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis.tryEnsureIndex({ date: 1 });\n\t\tthis.tryEnsureIndex({ agentId: 1, date: 1 }, { unique: true });\n\t\tthis.tryEnsureIndex({ agentId: 1 });\n\t}\n\n\tcreateOrUpdate(data = {}) {\n\t\tconst { date, agentId, lastStartedAt } = data;\n\n\t\tif (!date || !agentId) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.upsert(\n\t\t\t{ agentId, date },\n\t\t\t{\n\t\t\t\t$unset: {\n\t\t\t\t\tlastStoppedAt: 1,\n\t\t\t\t},\n\t\t\t\t$set: {\n\t\t\t\t\tlastStartedAt: lastStartedAt || new Date(),\n\t\t\t\t},\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdate,\n\t\t\t\t\tagentId,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tupdateLastStoppedAt({ agentId, date, lastStoppedAt, availableTime }) {\n\t\tconst query = {\n\t\t\tagentId,\n\t\t\tdate,\n\t\t};\n\t\tconst update = {\n\t\t\t$inc: { availableTime },\n\t\t\t$set: {\n\t\t\t\tlastStoppedAt,\n\t\t\t},\n\t\t};\n\t\treturn this.update(query, update);\n\t}\n\n\tupdateServiceHistory({ agentId, date, serviceHistory }) {\n\t\tconst query = {\n\t\t\tagentId,\n\t\t\tdate,\n\t\t};\n\t\tconst update = {\n\t\t\t$addToSet: {\n\t\t\t\tserviceHistory,\n\t\t\t},\n\t\t};\n\t\treturn this.update(query, update);\n\t}\n\n\tfindOpenSessions() {\n\t\tconst query = {\n\t\t\tlastStoppedAt: { $exists: false },\n\t\t};\n\n\t\treturn this.find(query);\n\t}\n}\n\nexport default new LivechatAgentActivity('livechat_agent_activity');\n"]},"sourceType":"module","hash":"28e2d919525bbafe5ac2f0ded55acb5adc703e09"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/updateMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/methods/updateMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/updateMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/methods/updateMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/methods/updateMessage.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet Messages;\nmodule.link(\"../../../models\", {\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet hasPermission, canSendMessage;\nmodule.link(\"../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  canSendMessage(v) {\n    canSendMessage = v;\n  }\n\n}, 5);\nlet updateMessage;\nmodule.link(\"../functions\", {\n  updateMessage(v) {\n    updateMessage = v;\n  }\n\n}, 6);\nMeteor.methods({\n  updateMessage(message) {\n    check(message, Match.ObjectIncluding({\n      _id: String\n    }));\n\n    if (!Meteor.userId()) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'updateMessage'\n      });\n    }\n\n    const originalMessage = Messages.findOneById(message._id);\n\n    if (!originalMessage || !originalMessage._id) {\n      return;\n    }\n\n    if (originalMessage.msg === message.msg) {\n      return;\n    }\n\n    if (!!message.tmid && originalMessage._id === message.tmid) {\n      throw new Meteor.Error('error-message-same-as-tmid', 'Cannot set tmid the same as the _id', {\n        method: 'updateMessage'\n      });\n    }\n\n    if (!originalMessage.tmid && !!message.tmid) {\n      throw new Meteor.Error('error-message-change-to-thread', 'Cannot update message to a thread', {\n        method: 'updateMessage'\n      });\n    }\n\n    const _hasPermission = hasPermission(Meteor.userId(), 'edit-message', message.rid);\n\n    const editAllowed = settings.get('Message_AllowEditing');\n    const editOwn = originalMessage.u && originalMessage.u._id === Meteor.userId();\n\n    if (!_hasPermission && (!editAllowed || !editOwn)) {\n      throw new Meteor.Error('error-action-not-allowed', 'Message editing not allowed', {\n        method: 'updateMessage',\n        action: 'Message_editing'\n      });\n    }\n\n    const blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes');\n\n    if (Match.test(blockEditInMinutes, Number) && blockEditInMinutes !== 0) {\n      let currentTsDiff;\n      let msgTs;\n\n      if (Match.test(originalMessage.ts, Number)) {\n        msgTs = moment(originalMessage.ts);\n      }\n\n      if (msgTs) {\n        currentTsDiff = moment().diff(msgTs, 'minutes');\n      }\n\n      if (currentTsDiff > blockEditInMinutes) {\n        throw new Meteor.Error('error-message-editing-blocked', 'Message editing is blocked', {\n          method: 'updateMessage'\n        });\n      }\n    }\n\n    const user = Meteor.users.findOne(Meteor.userId());\n    canSendMessage(message.rid, _objectSpread({\n      uid: user._id\n    }, user)); // It is possible to have an empty array as the attachments property, so ensure both things exist\n\n    if (originalMessage.attachments && originalMessage.attachments.length > 0 && originalMessage.attachments[0].description !== undefined) {\n      message.attachments = originalMessage.attachments;\n      message.attachments[0].description = message.msg;\n      message.msg = originalMessage.msg;\n    }\n\n    message.u = originalMessage.u;\n    return updateMessage(message, Meteor.user(), originalMessage);\n  }\n\n});","map":{"version":3,"sources":["app/lib/server/methods/updateMessage.js"],"names":["_objectSpread","module","link","default","v","Meteor","Match","check","moment","Messages","settings","hasPermission","canSendMessage","updateMessage","methods","message","ObjectIncluding","_id","String","userId","Error","method","originalMessage","findOneById","msg","tmid","_hasPermission","rid","editAllowed","get","editOwn","u","action","blockEditInMinutes","test","Number","currentTsDiff","msgTs","ts","diff","user","users","findOne","uid","attachments","length","description","undefined"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\nimport moment from 'moment';\n\nimport { Messages } from '../../../models';\nimport { settings } from '../../../settings';\nimport { hasPermission, canSendMessage } from '../../../authorization/server';\nimport { updateMessage } from '../functions';\n\nMeteor.methods({\n\tupdateMessage(message) {\n\t\tcheck(message, Match.ObjectIncluding({ _id: String }));\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'updateMessage' });\n\t\t}\n\n\t\tconst originalMessage = Messages.findOneById(message._id);\n\n\t\tif (!originalMessage || !originalMessage._id) {\n\t\t\treturn;\n\t\t}\n\t\tif (originalMessage.msg === message.msg) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!!message.tmid && originalMessage._id === message.tmid) {\n\t\t\tthrow new Meteor.Error('error-message-same-as-tmid', 'Cannot set tmid the same as the _id', {\n\t\t\t\tmethod: 'updateMessage',\n\t\t\t});\n\t\t}\n\n\t\tif (!originalMessage.tmid && !!message.tmid) {\n\t\t\tthrow new Meteor.Error('error-message-change-to-thread', 'Cannot update message to a thread', { method: 'updateMessage' });\n\t\t}\n\n\t\tconst _hasPermission = hasPermission(Meteor.userId(), 'edit-message', message.rid);\n\t\tconst editAllowed = settings.get('Message_AllowEditing');\n\t\tconst editOwn = originalMessage.u && originalMessage.u._id === Meteor.userId();\n\n\t\tif (!_hasPermission && (!editAllowed || !editOwn)) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Message editing not allowed', {\n\t\t\t\tmethod: 'updateMessage',\n\t\t\t\taction: 'Message_editing',\n\t\t\t});\n\t\t}\n\n\t\tconst blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes');\n\t\tif (Match.test(blockEditInMinutes, Number) && blockEditInMinutes !== 0) {\n\t\t\tlet currentTsDiff;\n\t\t\tlet msgTs;\n\n\t\t\tif (Match.test(originalMessage.ts, Number)) {\n\t\t\t\tmsgTs = moment(originalMessage.ts);\n\t\t\t}\n\t\t\tif (msgTs) {\n\t\t\t\tcurrentTsDiff = moment().diff(msgTs, 'minutes');\n\t\t\t}\n\t\t\tif (currentTsDiff > blockEditInMinutes) {\n\t\t\t\tthrow new Meteor.Error('error-message-editing-blocked', 'Message editing is blocked', {\n\t\t\t\t\tmethod: 'updateMessage',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst user = Meteor.users.findOne(Meteor.userId());\n\t\tcanSendMessage(message.rid, { uid: user._id, ...user });\n\n\t\t// It is possible to have an empty array as the attachments property, so ensure both things exist\n\t\tif (originalMessage.attachments && originalMessage.attachments.length > 0 && originalMessage.attachments[0].description !== undefined) {\n\t\t\tmessage.attachments = originalMessage.attachments;\n\t\t\tmessage.attachments[0].description = message.msg;\n\t\t\tmessage.msg = originalMessage.msg;\n\t\t}\n\n\t\tmessage.u = originalMessage.u;\n\n\t\treturn updateMessage(message, Meteor.user(), originalMessage);\n\t},\n});\n"]},"sourceType":"module","hash":"7570e9b62c614561c59092037c418077e54f689d"}

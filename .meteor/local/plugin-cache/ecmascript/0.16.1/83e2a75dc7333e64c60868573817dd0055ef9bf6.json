{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/client/views/omnichannel/agents/AgentEdit.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/agents/AgentEdit.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/client/views/omnichannel/agents/AgentEdit.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/client/views/omnichannel/agents/AgentEdit.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/agents/AgentEdit.js"}},"code":"const _excluded = [\"data\", \"userDepartments\", \"availableDepartments\", \"uid\", \"reset\"],\n      _excluded2 = [\"hasUnsavedChanges\"];\n\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\nlet Field, TextInput, Button, Margins, Box, MultiSelect, Icon, Select;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Field(v) {\n    Field = v;\n  },\n\n  TextInput(v) {\n    TextInput = v;\n  },\n\n  Button(v) {\n    Button = v;\n  },\n\n  Margins(v) {\n    Margins = v;\n  },\n\n  Box(v) {\n    Box = v;\n  },\n\n  MultiSelect(v) {\n    MultiSelect = v;\n  },\n\n  Icon(v) {\n    Icon = v;\n  },\n\n  Select(v) {\n    Select = v;\n  }\n\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 1);\nlet React, useMemo, useRef, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useRef(v) {\n    useRef = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 2);\nlet useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription(v) {\n    useSubscription = v;\n  }\n\n}, 3);\nlet getUserEmailAddress;\nmodule.link(\"../../../../lib/getUserEmailAddress\", {\n  getUserEmailAddress(v) {\n    getUserEmailAddress = v;\n  }\n\n}, 4);\nlet VerticalBar;\nmodule.link(\"../../../components/VerticalBar\", {\n  default(v) {\n    VerticalBar = v;\n  }\n\n}, 5);\nlet useRoute;\nmodule.link(\"../../../contexts/RouterContext\", {\n  useRoute(v) {\n    useRoute = v;\n  }\n\n}, 6);\nlet useMethod;\nmodule.link(\"../../../contexts/ServerContext\", {\n  useMethod(v) {\n    useMethod = v;\n  }\n\n}, 7);\nlet useToastMessageDispatch;\nmodule.link(\"../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 8);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 9);\nlet useForm;\nmodule.link(\"../../../hooks/useForm\", {\n  useForm(v) {\n    useForm = v;\n  }\n\n}, 10);\nlet UserInfo;\nmodule.link(\"../../room/contextualBar/UserInfo\", {\n  default(v) {\n    UserInfo = v;\n  }\n\n}, 11);\nlet formsSubscription;\nmodule.link(\"../additionalForms\", {\n  formsSubscription(v) {\n    formsSubscription = v;\n  }\n\n}, 12);\n\nfunction AgentEdit(_ref) {\n  let {\n    data,\n    userDepartments,\n    availableDepartments,\n    uid,\n    reset\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const t = useTranslation();\n  const agentsRoute = useRoute('omnichannel-agents');\n  const [maxChatUnsaved, setMaxChatUnsaved] = useState();\n  const {\n    user\n  } = data || {\n    user: {}\n  };\n  const {\n    name,\n    username,\n    statusLivechat\n  } = user;\n  const email = getUserEmailAddress(user);\n  const options = useMemo(() => availableDepartments && availableDepartments.departments ? availableDepartments.departments.map(_ref2 => {\n    let {\n      _id,\n      name\n    } = _ref2;\n    return [_id, name || _id];\n  }) : [], [availableDepartments]);\n  const initialDepartmentValue = useMemo(() => userDepartments && userDepartments.departments ? userDepartments.departments.map(_ref3 => {\n    let {\n      departmentId\n    } = _ref3;\n    return departmentId;\n  }) : [], [userDepartments]);\n  const eeForms = useSubscription(formsSubscription);\n  const saveRef = useRef({\n    values: {},\n    hasUnsavedChanges: false\n  });\n  const onChangeMaxChats = useMutableCallback(_ref4 => {\n    let {\n      hasUnsavedChanges\n    } = _ref4,\n        value = _objectWithoutProperties(_ref4, _excluded2);\n\n    saveRef.current = value;\n\n    if (hasUnsavedChanges !== maxChatUnsaved) {\n      setMaxChatUnsaved(hasUnsavedChanges);\n    }\n  });\n  const {\n    useMaxChatsPerAgent = () => {}\n  } = eeForms;\n  const {\n    values,\n    handlers,\n    hasUnsavedChanges,\n    commit\n  } = useForm({\n    departments: initialDepartmentValue,\n    status: statusLivechat,\n    maxChats: 0\n  });\n  const {\n    reset: resetMaxChats,\n    commit: commitMaxChats\n  } = saveRef.current;\n  const {\n    handleDepartments,\n    handleStatus\n  } = handlers;\n  const {\n    departments,\n    status\n  } = values;\n  const MaxChats = useMaxChatsPerAgent();\n  const saveAgentInfo = useMethod('livechat:saveAgentInfo');\n  const saveAgentStatus = useMethod('livechat:changeLivechatStatus');\n  const dispatchToastMessage = useToastMessageDispatch();\n  const handleReset = useMutableCallback(() => {\n    reset();\n    resetMaxChats();\n  });\n  const handleSave = useMutableCallback(async () => {\n    try {\n      await saveAgentInfo(uid, saveRef.current.values, departments);\n      await saveAgentStatus({\n        status,\n        agentId: uid\n      });\n      dispatchToastMessage({\n        type: 'success',\n        message: t('saved')\n      });\n      agentsRoute.push({});\n      reset();\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n\n    commit();\n    commitMaxChats();\n  });\n  return /*#__PURE__*/React.createElement(VerticalBar.ScrollableContent, _extends({\n    is: \"form\"\n  }, props), /*#__PURE__*/React.createElement(Box, {\n    alignSelf: \"center\"\n  }, /*#__PURE__*/React.createElement(UserInfo.Avatar, {\n    margin: \"auto\",\n    size: 'x332',\n    title: username,\n    username: username\n  })), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Name')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    flexGrow: 1,\n    value: name,\n    disabled: true\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Username')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    flexGrow: 1,\n    value: username,\n    disabled: true,\n    addon: /*#__PURE__*/React.createElement(Icon, {\n      name: \"at\",\n      size: \"x20\"\n    })\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Email')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    flexGrow: 1,\n    value: email,\n    disabled: true,\n    addon: /*#__PURE__*/React.createElement(Icon, {\n      name: \"mail\",\n      size: \"x20\"\n    })\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Departments')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(MultiSelect, {\n    options: options,\n    value: departments,\n    placeholder: t('Select_an_option'),\n    onChange: handleDepartments,\n    flexGrow: 1\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Status')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Select, {\n    options: [['available', t('Available')], ['not-available', t('Not_Available')]],\n    value: status,\n    placeholder: t('Select_an_option'),\n    onChange: handleStatus,\n    flexGrow: 1\n  }))), MaxChats && /*#__PURE__*/React.createElement(MaxChats, {\n    data: user,\n    onChange: onChangeMaxChats\n  }), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    w: \"full\"\n  }, /*#__PURE__*/React.createElement(Margins, {\n    inlineEnd: \"x4\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    flexGrow: 1,\n    type: \"reset\",\n    disabled: !hasUnsavedChanges && !maxChatUnsaved,\n    onClick: handleReset\n  }, t('Reset')), /*#__PURE__*/React.createElement(Button, {\n    mie: \"none\",\n    flexGrow: 1,\n    disabled: !hasUnsavedChanges && !maxChatUnsaved,\n    onClick: handleSave\n  }, t('Save'))))));\n}\n\nmodule.exportDefault(AgentEdit);","map":{"version":3,"sources":["client/views/omnichannel/agents/AgentEdit.js"],"names":["_extends","module","link","default","v","_objectWithoutProperties","Field","TextInput","Button","Margins","Box","MultiSelect","Icon","Select","useMutableCallback","React","useMemo","useRef","useState","useSubscription","getUserEmailAddress","VerticalBar","useRoute","useMethod","useToastMessageDispatch","useTranslation","useForm","UserInfo","formsSubscription","AgentEdit","data","userDepartments","availableDepartments","uid","reset","props","t","agentsRoute","maxChatUnsaved","setMaxChatUnsaved","user","name","username","statusLivechat","email","options","departments","map","_id","initialDepartmentValue","departmentId","eeForms","saveRef","values","hasUnsavedChanges","onChangeMaxChats","value","current","useMaxChatsPerAgent","handlers","commit","status","maxChats","resetMaxChats","commitMaxChats","handleDepartments","handleStatus","MaxChats","saveAgentInfo","saveAgentStatus","dispatchToastMessage","handleReset","handleSave","agentId","type","message","push","error","exportDefault"],"mappings":"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","sourcesContent":["import { Field, TextInput, Button, Margins, Box, MultiSelect, Icon, Select } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { useMemo, useRef, useState } from 'react';\nimport { useSubscription } from 'use-subscription';\n\nimport { getUserEmailAddress } from '../../../../lib/getUserEmailAddress';\nimport VerticalBar from '../../../components/VerticalBar';\nimport { useRoute } from '../../../contexts/RouterContext';\nimport { useMethod } from '../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useForm } from '../../../hooks/useForm';\nimport UserInfo from '../../room/contextualBar/UserInfo';\nimport { formsSubscription } from '../additionalForms';\n\nfunction AgentEdit({ data, userDepartments, availableDepartments, uid, reset, ...props }) {\n\tconst t = useTranslation();\n\tconst agentsRoute = useRoute('omnichannel-agents');\n\tconst [maxChatUnsaved, setMaxChatUnsaved] = useState();\n\n\tconst { user } = data || { user: {} };\n\tconst { name, username, statusLivechat } = user;\n\n\tconst email = getUserEmailAddress(user);\n\tconst options = useMemo(\n\t\t() =>\n\t\t\tavailableDepartments && availableDepartments.departments\n\t\t\t\t? availableDepartments.departments.map(({ _id, name }) => [_id, name || _id])\n\t\t\t\t: [],\n\t\t[availableDepartments],\n\t);\n\tconst initialDepartmentValue = useMemo(\n\t\t() => (userDepartments && userDepartments.departments ? userDepartments.departments.map(({ departmentId }) => departmentId) : []),\n\t\t[userDepartments],\n\t);\n\tconst eeForms = useSubscription(formsSubscription);\n\n\tconst saveRef = useRef({ values: {}, hasUnsavedChanges: false });\n\n\tconst onChangeMaxChats = useMutableCallback(({ hasUnsavedChanges, ...value }) => {\n\t\tsaveRef.current = value;\n\n\t\tif (hasUnsavedChanges !== maxChatUnsaved) {\n\t\t\tsetMaxChatUnsaved(hasUnsavedChanges);\n\t\t}\n\t});\n\n\tconst { useMaxChatsPerAgent = () => {} } = eeForms;\n\n\tconst { values, handlers, hasUnsavedChanges, commit } = useForm({\n\t\tdepartments: initialDepartmentValue,\n\t\tstatus: statusLivechat,\n\t\tmaxChats: 0,\n\t});\n\tconst { reset: resetMaxChats, commit: commitMaxChats } = saveRef.current;\n\n\tconst { handleDepartments, handleStatus } = handlers;\n\tconst { departments, status } = values;\n\n\tconst MaxChats = useMaxChatsPerAgent();\n\n\tconst saveAgentInfo = useMethod('livechat:saveAgentInfo');\n\tconst saveAgentStatus = useMethod('livechat:changeLivechatStatus');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst handleReset = useMutableCallback(() => {\n\t\treset();\n\t\tresetMaxChats();\n\t});\n\n\tconst handleSave = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait saveAgentInfo(uid, saveRef.current.values, departments);\n\t\t\tawait saveAgentStatus({ status, agentId: uid });\n\t\t\tdispatchToastMessage({ type: 'success', message: t('saved') });\n\t\t\tagentsRoute.push({});\n\t\t\treset();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t\tcommit();\n\t\tcommitMaxChats();\n\t});\n\n\treturn (\n\t\t<VerticalBar.ScrollableContent is='form' {...props}>\n\t\t\t<Box alignSelf='center'>\n\t\t\t\t<UserInfo.Avatar margin='auto' size={'x332'} title={username} username={username} />\n\t\t\t</Box>\n\t\t\t<Field>\n\t\t\t\t<Field.Label>{t('Name')}</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<TextInput flexGrow={1} value={name} disabled />\n\t\t\t\t</Field.Row>\n\t\t\t</Field>\n\t\t\t<Field>\n\t\t\t\t<Field.Label>{t('Username')}</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<TextInput flexGrow={1} value={username} disabled addon={<Icon name='at' size='x20' />} />\n\t\t\t\t</Field.Row>\n\t\t\t</Field>\n\t\t\t<Field>\n\t\t\t\t<Field.Label>{t('Email')}</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<TextInput flexGrow={1} value={email} disabled addon={<Icon name='mail' size='x20' />} />\n\t\t\t\t</Field.Row>\n\t\t\t</Field>\n\t\t\t<Field>\n\t\t\t\t<Field.Label>{t('Departments')}</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<MultiSelect\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tvalue={departments}\n\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\tonChange={handleDepartments}\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t/>\n\t\t\t\t</Field.Row>\n\t\t\t</Field>\n\t\t\t<Field>\n\t\t\t\t<Field.Label>{t('Status')}</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<Select\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t['available', t('Available')],\n\t\t\t\t\t\t\t['not-available', t('Not_Available')],\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\tonChange={handleStatus}\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t/>\n\t\t\t\t</Field.Row>\n\t\t\t</Field>\n\n\t\t\t{MaxChats && <MaxChats data={user} onChange={onChangeMaxChats} />}\n\n\t\t\t<Field.Row>\n\t\t\t\t<Box display='flex' flexDirection='row' justifyContent='space-between' w='full'>\n\t\t\t\t\t<Margins inlineEnd='x4'>\n\t\t\t\t\t\t<Button flexGrow={1} type='reset' disabled={!hasUnsavedChanges && !maxChatUnsaved} onClick={handleReset}>\n\t\t\t\t\t\t\t{t('Reset')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button mie='none' flexGrow={1} disabled={!hasUnsavedChanges && !maxChatUnsaved} onClick={handleSave}>\n\t\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</Field.Row>\n\t\t</VerticalBar.ScrollableContent>\n\t);\n}\n\nexport default AgentEdit;\n"]},"sourceType":"module","hash":"83e2a75dc7333e64c60868573817dd0055ef9bf6"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/email-inbox.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/email-inbox.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/email-inbox.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/v1/email-inbox.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/email-inbox.js"}},"code":"let check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nlet findEmailInboxes, findOneEmailInbox, insertOneOrUpdateEmailInbox;\nmodule.link(\"../lib/emailInbox\", {\n  findEmailInboxes(v) {\n    findEmailInboxes = v;\n  },\n\n  findOneEmailInbox(v) {\n    findOneEmailInbox = v;\n  },\n\n  insertOneOrUpdateEmailInbox(v) {\n    insertOneOrUpdateEmailInbox = v;\n  }\n\n}, 2);\nlet hasPermission;\nmodule.link(\"../../../authorization/server/functions/hasPermission\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 3);\nlet EmailInbox;\nmodule.link(\"../../../models/server/raw\", {\n  EmailInbox(v) {\n    EmailInbox = v;\n  }\n\n}, 4);\nlet Users;\nmodule.link(\"../../../models/server/models/Users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 5);\nlet sendTestEmailToInbox;\nmodule.link(\"../../../../server/features/EmailInbox/EmailInbox_Outgoing\", {\n  sendTestEmailToInbox(v) {\n    sendTestEmailToInbox = v;\n  }\n\n}, 6);\nAPI.v1.addRoute('email-inbox.list', {\n  authRequired: true\n}, {\n  get() {\n    const {\n      offset,\n      count\n    } = this.getPaginationItems();\n    const {\n      sort,\n      query\n    } = this.parseJsonQuery();\n    const emailInboxes = Promise.await(findEmailInboxes({\n      userId: this.userId,\n      query,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    }));\n    return API.v1.success(emailInboxes);\n  }\n\n});\nAPI.v1.addRoute('email-inbox', {\n  authRequired: true\n}, {\n  post() {\n    if (!hasPermission(this.userId, 'manage-email-inbox')) {\n      throw new Error('error-not-allowed');\n    }\n\n    check(this.bodyParams, {\n      _id: Match.Maybe(String),\n      name: String,\n      email: String,\n      active: Boolean,\n      description: Match.Maybe(String),\n      senderInfo: Match.Maybe(String),\n      department: Match.Maybe(String),\n      smtp: Match.ObjectIncluding({\n        password: String,\n        port: Number,\n        secure: Boolean,\n        server: String,\n        username: String\n      }),\n      imap: Match.ObjectIncluding({\n        password: String,\n        port: Number,\n        secure: Boolean,\n        server: String,\n        username: String\n      })\n    });\n    const emailInboxParams = this.bodyParams;\n    const {\n      _id\n    } = emailInboxParams;\n    Promise.await(insertOneOrUpdateEmailInbox(this.userId, emailInboxParams));\n    return API.v1.success({\n      _id\n    });\n  }\n\n});\nAPI.v1.addRoute('email-inbox/:_id', {\n  authRequired: true\n}, {\n  get() {\n    check(this.urlParams, {\n      _id: String\n    });\n    const {\n      _id\n    } = this.urlParams;\n\n    if (!_id) {\n      throw new Error('error-invalid-param');\n    }\n\n    const emailInboxes = Promise.await(findOneEmailInbox({\n      userId: this.userId,\n      _id\n    }));\n    return API.v1.success(emailInboxes);\n  },\n\n  delete() {\n    if (!hasPermission(this.userId, 'manage-email-inbox')) {\n      throw new Error('error-not-allowed');\n    }\n\n    check(this.urlParams, {\n      _id: String\n    });\n    const {\n      _id\n    } = this.urlParams;\n\n    if (!_id) {\n      throw new Error('error-invalid-param');\n    }\n\n    const emailInboxes = Promise.await(EmailInbox.findOneById(_id));\n\n    if (!emailInboxes) {\n      return API.v1.notFound();\n    }\n\n    Promise.await(EmailInbox.removeById(_id));\n    return API.v1.success({\n      _id\n    });\n  }\n\n});\nAPI.v1.addRoute('email-inbox.search', {\n  authRequired: true\n}, {\n  get() {\n    if (!hasPermission(this.userId, 'manage-email-inbox')) {\n      throw new Error('error-not-allowed');\n    }\n\n    check(this.queryParams, {\n      email: String\n    });\n    const {\n      email\n    } = this.queryParams;\n    const emailInbox = Promise.await(EmailInbox.findOne({\n      email\n    }));\n    return API.v1.success({\n      emailInbox\n    });\n  }\n\n});\nAPI.v1.addRoute('email-inbox.send-test/:_id', {\n  authRequired: true\n}, {\n  post() {\n    if (!hasPermission(this.userId, 'manage-email-inbox')) {\n      throw new Error('error-not-allowed');\n    }\n\n    check(this.urlParams, {\n      _id: String\n    });\n    const {\n      _id\n    } = this.urlParams;\n\n    if (!_id) {\n      throw new Error('error-invalid-param');\n    }\n\n    const emailInbox = Promise.await(findOneEmailInbox({\n      userId: this.userId,\n      _id\n    }));\n\n    if (!emailInbox) {\n      return API.v1.notFound();\n    }\n\n    const user = Users.findOneById(this.userId);\n    Promise.await(sendTestEmailToInbox(emailInbox, user));\n    return API.v1.success({\n      _id\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/email-inbox.js"],"names":["check","Match","module","link","v","API","findEmailInboxes","findOneEmailInbox","insertOneOrUpdateEmailInbox","hasPermission","EmailInbox","Users","default","sendTestEmailToInbox","v1","addRoute","authRequired","get","offset","count","getPaginationItems","sort","query","parseJsonQuery","emailInboxes","Promise","await","userId","pagination","success","post","Error","bodyParams","_id","Maybe","String","name","email","active","Boolean","description","senderInfo","department","smtp","ObjectIncluding","password","port","Number","secure","server","username","imap","emailInboxParams","urlParams","delete","findOneById","notFound","removeById","queryParams","emailInbox","findOne","user"],"mappings":"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","sourcesContent":["import { check, Match } from 'meteor/check';\n\nimport { API } from '../api';\nimport { findEmailInboxes, findOneEmailInbox, insertOneOrUpdateEmailInbox } from '../lib/emailInbox';\nimport { hasPermission } from '../../../authorization/server/functions/hasPermission';\nimport { EmailInbox } from '../../../models/server/raw';\nimport Users from '../../../models/server/models/Users';\nimport { sendTestEmailToInbox } from '../../../../server/features/EmailInbox/EmailInbox_Outgoing';\n\nAPI.v1.addRoute(\n\t'email-inbox.list',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst { offset, count } = this.getPaginationItems();\n\t\t\tconst { sort, query } = this.parseJsonQuery();\n\t\t\tconst emailInboxes = Promise.await(findEmailInboxes({ userId: this.userId, query, pagination: { offset, count, sort } }));\n\n\t\t\treturn API.v1.success(emailInboxes);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tif (!hasPermission(this.userId, 'manage-email-inbox')) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\t_id: Match.Maybe(String),\n\t\t\t\tname: String,\n\t\t\t\temail: String,\n\t\t\t\tactive: Boolean,\n\t\t\t\tdescription: Match.Maybe(String),\n\t\t\t\tsenderInfo: Match.Maybe(String),\n\t\t\t\tdepartment: Match.Maybe(String),\n\t\t\t\tsmtp: Match.ObjectIncluding({\n\t\t\t\t\tpassword: String,\n\t\t\t\t\tport: Number,\n\t\t\t\t\tsecure: Boolean,\n\t\t\t\t\tserver: String,\n\t\t\t\t\tusername: String,\n\t\t\t\t}),\n\t\t\t\timap: Match.ObjectIncluding({\n\t\t\t\t\tpassword: String,\n\t\t\t\t\tport: Number,\n\t\t\t\t\tsecure: Boolean,\n\t\t\t\t\tserver: String,\n\t\t\t\t\tusername: String,\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tconst emailInboxParams = this.bodyParams;\n\n\t\t\tconst { _id } = emailInboxParams;\n\n\t\t\tPromise.await(insertOneOrUpdateEmailInbox(this.userId, emailInboxParams));\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox/:_id',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\t\t\tconst emailInboxes = Promise.await(findOneEmailInbox({ userId: this.userId, _id }));\n\n\t\t\treturn API.v1.success(emailInboxes);\n\t\t},\n\t\tdelete() {\n\t\t\tif (!hasPermission(this.userId, 'manage-email-inbox')) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\n\t\t\tconst emailInboxes = Promise.await(EmailInbox.findOneById(_id));\n\n\t\t\tif (!emailInboxes) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\t\t\tPromise.await(EmailInbox.removeById(_id));\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox.search',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tif (!hasPermission(this.userId, 'manage-email-inbox')) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\t\t\tcheck(this.queryParams, {\n\t\t\t\temail: String,\n\t\t\t});\n\n\t\t\tconst { email } = this.queryParams;\n\t\t\tconst emailInbox = Promise.await(EmailInbox.findOne({ email }));\n\n\t\t\treturn API.v1.success({ emailInbox });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'email-inbox.send-test/:_id',\n\t{ authRequired: true },\n\t{\n\t\tpost() {\n\t\t\tif (!hasPermission(this.userId, 'manage-email-inbox')) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\t\t\tcheck(this.urlParams, {\n\t\t\t\t_id: String,\n\t\t\t});\n\n\t\t\tconst { _id } = this.urlParams;\n\t\t\tif (!_id) {\n\t\t\t\tthrow new Error('error-invalid-param');\n\t\t\t}\n\t\t\tconst emailInbox = Promise.await(findOneEmailInbox({ userId: this.userId, _id }));\n\n\t\t\tif (!emailInbox) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst user = Users.findOneById(this.userId);\n\n\t\t\tPromise.await(sendTestEmailToInbox(emailInbox, user));\n\n\t\t\treturn API.v1.success({ _id });\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"79366b020fe977eb6aae373283227a9fa8ad0649"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/helpers/getUserFromParams.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/helpers/getUserFromParams.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/helpers/getUserFromParams.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/helpers/getUserFromParams.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/helpers/getUserFromParams.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../models\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nAPI.helperMethods.set('getUserFromParams', function _getUserFromParams() {\n  const doesntExist = {\n    _doesntExist: true\n  };\n  let user;\n  const params = this.requestParams();\n\n  if (params.userId && params.userId.trim()) {\n    user = Users.findOneById(params.userId) || doesntExist;\n  } else if (params.username && params.username.trim()) {\n    user = Users.findOneByUsernameIgnoringCase(params.username) || doesntExist;\n  } else if (params.user && params.user.trim()) {\n    user = Users.findOneByUsernameIgnoringCase(params.user) || doesntExist;\n  } else {\n    throw new Meteor.Error('error-user-param-not-provided', 'The required \"userId\" or \"username\" param was not provided');\n  }\n\n  if (user._doesntExist) {\n    throw new Meteor.Error('error-invalid-user', 'The required \"userId\" or \"username\" param provided does not match any users');\n  }\n\n  return user;\n});\nAPI.helperMethods.set('getUserListFromParams', function _getUserListFromParams() {\n  let users;\n  const params = this.requestParams(); // if params.userId is provided, include it as well\n\n  const soleUser = params.userId || params.username || params.user;\n  let userListParam = params.userIds || params.usernames || [];\n  userListParam.push(soleUser);\n  userListParam = userListParam.filter(Boolean); // deduplicate to avoid errors\n\n  userListParam = [...new Set(userListParam)];\n\n  if (!userListParam.length) {\n    throw new Meteor.Error('error-users-params-not-provided', 'Please provide \"userId\" or \"username\" or \"userIds\" or \"usernames\" as param');\n  }\n\n  if (params.userIds || params.userId) {\n    users = Users.findByIds(userListParam);\n  } else {\n    users = Users.findByUsernamesIgnoringCase(userListParam);\n  }\n\n  return users.fetch();\n});","map":{"version":3,"sources":["app/api/server/helpers/getUserFromParams.js"],"names":["Meteor","module","link","v","Users","API","helperMethods","set","_getUserFromParams","doesntExist","_doesntExist","user","params","requestParams","userId","trim","findOneById","username","findOneByUsernameIgnoringCase","Error","_getUserListFromParams","users","soleUser","userListParam","userIds","usernames","push","filter","Boolean","Set","length","findByIds","findByUsernamesIgnoringCase","fetch"],"mappings":"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","sourcesContent":["// Convenience method, almost need to turn it into a middleware of sorts\nimport { Meteor } from 'meteor/meteor';\n\nimport { Users } from '../../../models';\nimport { API } from '../api';\n\nAPI.helperMethods.set('getUserFromParams', function _getUserFromParams() {\n\tconst doesntExist = { _doesntExist: true };\n\tlet user;\n\tconst params = this.requestParams();\n\n\tif (params.userId && params.userId.trim()) {\n\t\tuser = Users.findOneById(params.userId) || doesntExist;\n\t} else if (params.username && params.username.trim()) {\n\t\tuser = Users.findOneByUsernameIgnoringCase(params.username) || doesntExist;\n\t} else if (params.user && params.user.trim()) {\n\t\tuser = Users.findOneByUsernameIgnoringCase(params.user) || doesntExist;\n\t} else {\n\t\tthrow new Meteor.Error('error-user-param-not-provided', 'The required \"userId\" or \"username\" param was not provided');\n\t}\n\n\tif (user._doesntExist) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'The required \"userId\" or \"username\" param provided does not match any users');\n\t}\n\n\treturn user;\n});\n\nAPI.helperMethods.set('getUserListFromParams', function _getUserListFromParams() {\n\tlet users;\n\tconst params = this.requestParams();\n\t// if params.userId is provided, include it as well\n\tconst soleUser = params.userId || params.username || params.user;\n\tlet userListParam = params.userIds || params.usernames || [];\n\tuserListParam.push(soleUser);\n\tuserListParam = userListParam.filter(Boolean);\n\n\t// deduplicate to avoid errors\n\tuserListParam = [...new Set(userListParam)];\n\n\tif (!userListParam.length) {\n\t\tthrow new Meteor.Error('error-users-params-not-provided', 'Please provide \"userId\" or \"username\" or \"userIds\" or \"usernames\" as param');\n\t}\n\n\tif (params.userIds || params.userId) {\n\t\tusers = Users.findByIds(userListParam);\n\t} else {\n\t\tusers = Users.findByUsernamesIgnoringCase(userListParam);\n\t}\n\n\treturn users.fetch();\n});\n"]},"sourceType":"module","hash":"a40b7eae43dd52bb155564600fb5fed669db2157"}

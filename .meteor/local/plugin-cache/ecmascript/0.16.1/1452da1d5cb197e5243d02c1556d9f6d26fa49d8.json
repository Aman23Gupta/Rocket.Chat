{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/startup/oAuthServicesUpdate.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/startup/oAuthServicesUpdate.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/startup/oAuthServicesUpdate.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/startup/oAuthServicesUpdate.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/startup/oAuthServicesUpdate.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ServiceConfiguration;\nmodule.link(\"meteor/service-configuration\", {\n  ServiceConfiguration(v) {\n    ServiceConfiguration = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 2);\nlet CustomOAuth;\nmodule.link(\"../../../custom-oauth\", {\n  CustomOAuth(v) {\n    CustomOAuth = v;\n  }\n\n}, 3);\nlet Logger;\nmodule.link(\"../../../logger\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\nlet addOAuthService;\nmodule.link(\"../functions/addOAuthService\", {\n  addOAuthService(v) {\n    addOAuthService = v;\n  }\n\n}, 6);\nconst logger = new Logger('rocketchat:lib');\n\nfunction _OAuthServicesUpdate() {\n  const services = settings.getByRegexp(/^(Accounts_OAuth_|Accounts_OAuth_Custom-)[a-z0-9_]+$/i);\n  services.filter(_ref => {\n    let [, value] = _ref;\n    return typeof value === 'boolean';\n  }).forEach(_ref2 => {\n    let [key, value] = _ref2;\n    logger.debug({\n      oauth_updated: key\n    });\n    let serviceName = key.replace('Accounts_OAuth_', '');\n\n    if (serviceName === 'Meteor') {\n      serviceName = 'meteor-developer';\n    }\n\n    if (/Accounts_OAuth_Custom-/.test(key)) {\n      serviceName = key.replace('Accounts_OAuth_Custom-', '');\n    }\n\n    if (value === true) {\n      const data = {\n        clientId: settings.get(\"\".concat(key, \"_id\")),\n        secret: settings.get(\"\".concat(key, \"_secret\"))\n      };\n\n      if (/Accounts_OAuth_Custom-/.test(key)) {\n        data.custom = true;\n        data.clientId = settings.get(\"\".concat(key, \"-id\"));\n        data.secret = settings.get(\"\".concat(key, \"-secret\"));\n        data.serverURL = settings.get(\"\".concat(key, \"-url\"));\n        data.tokenPath = settings.get(\"\".concat(key, \"-token_path\"));\n        data.identityPath = settings.get(\"\".concat(key, \"-identity_path\"));\n        data.authorizePath = settings.get(\"\".concat(key, \"-authorize_path\"));\n        data.scope = settings.get(\"\".concat(key, \"-scope\"));\n        data.accessTokenParam = settings.get(\"\".concat(key, \"-access_token_param\"));\n        data.buttonLabelText = settings.get(\"\".concat(key, \"-button_label_text\"));\n        data.buttonLabelColor = settings.get(\"\".concat(key, \"-button_label_color\"));\n        data.loginStyle = settings.get(\"\".concat(key, \"-login_style\"));\n        data.buttonColor = settings.get(\"\".concat(key, \"-button_color\"));\n        data.tokenSentVia = settings.get(\"\".concat(key, \"-token_sent_via\"));\n        data.identityTokenSentVia = settings.get(\"\".concat(key, \"-identity_token_sent_via\"));\n        data.keyField = settings.get(\"\".concat(key, \"-key_field\"));\n        data.usernameField = settings.get(\"\".concat(key, \"-username_field\"));\n        data.emailField = settings.get(\"\".concat(key, \"-email_field\"));\n        data.nameField = settings.get(\"\".concat(key, \"-name_field\"));\n        data.avatarField = settings.get(\"\".concat(key, \"-avatar_field\"));\n        data.rolesClaim = settings.get(\"\".concat(key, \"-roles_claim\"));\n        data.groupsClaim = settings.get(\"\".concat(key, \"-groups_claim\"));\n        data.channelsMap = settings.get(\"\".concat(key, \"-groups_channel_map\"));\n        data.channelsAdmin = settings.get(\"\".concat(key, \"-channels_admin\"));\n        data.mergeUsers = settings.get(\"\".concat(key, \"-merge_users\"));\n        data.mapChannels = settings.get(\"\".concat(key, \"-map_channels\"));\n        data.mergeRoles = settings.get(\"\".concat(key, \"-merge_roles\"));\n        data.rolesToSync = settings.get(\"\".concat(key, \"-roles_to_sync\"));\n        data.showButton = settings.get(\"\".concat(key, \"-show_button\"));\n        new CustomOAuth(serviceName.toLowerCase(), {\n          serverURL: data.serverURL,\n          tokenPath: data.tokenPath,\n          identityPath: data.identityPath,\n          authorizePath: data.authorizePath,\n          scope: data.scope,\n          loginStyle: data.loginStyle,\n          tokenSentVia: data.tokenSentVia,\n          identityTokenSentVia: data.identityTokenSentVia,\n          keyField: data.keyField,\n          usernameField: data.usernameField,\n          emailField: data.emailField,\n          nameField: data.nameField,\n          avatarField: data.avatarField,\n          rolesClaim: data.rolesClaim,\n          groupsClaim: data.groupsClaim,\n          mapChannels: data.mapChannels,\n          channelsMap: data.channelsMap,\n          channelsAdmin: data.channelsAdmin,\n          mergeUsers: data.mergeUsers,\n          mergeRoles: data.mergeRoles,\n          rolesToSync: data.rolesToSync,\n          accessTokenParam: data.accessTokenParam,\n          showButton: data.showButton\n        });\n      }\n\n      if (serviceName === 'Facebook') {\n        data.appId = data.clientId;\n        delete data.clientId;\n      }\n\n      if (serviceName === 'Twitter') {\n        data.consumerKey = data.clientId;\n        delete data.clientId;\n      }\n\n      if (serviceName === 'Linkedin') {\n        data.clientConfig = {\n          requestPermissions: ['r_liteprofile', 'r_emailaddress']\n        };\n      }\n\n      if (serviceName === 'Nextcloud') {\n        data.buttonLabelText = settings.get('Accounts_OAuth_Nextcloud_button_label_text');\n        data.buttonLabelColor = settings.get('Accounts_OAuth_Nextcloud_button_label_color');\n        data.buttonColor = settings.get('Accounts_OAuth_Nextcloud_button_color');\n      } // If there's no data other than the service name, then put the service name in the data object so the operation won't fail\n\n\n      const keys = Object.keys(data).filter(key => data[key] !== undefined);\n\n      if (!keys.length) {\n        data.service = serviceName.toLowerCase();\n      }\n\n      ServiceConfiguration.configurations.upsert({\n        service: serviceName.toLowerCase()\n      }, {\n        $set: data\n      });\n    } else {\n      ServiceConfiguration.configurations.remove({\n        service: serviceName.toLowerCase()\n      });\n    }\n  });\n}\n\nconst OAuthServicesUpdate = _.debounce(Meteor.bindEnvironment(_OAuthServicesUpdate), 2000);\n\nfunction OAuthServicesRemove(_id) {\n  const serviceName = _id.replace('Accounts_OAuth_Custom-', '');\n\n  return ServiceConfiguration.configurations.remove({\n    service: serviceName.toLowerCase()\n  });\n}\n\nsettings.watchByRegex(/^Accounts_OAuth_.+/, function () {\n  return OAuthServicesUpdate(); // eslint-disable-line new-cap\n});\nsettings.watchByRegex(/^Accounts_OAuth_Custom-[a-z0-9_]+/, function (key, value) {\n  if (!value) {\n    return OAuthServicesRemove(key); // eslint-disable-line new-cap\n  }\n});\n\nfunction customOAuthServicesInit() {\n  // Add settings for custom OAuth providers to the settings so they get\n  // automatically added when they are defined in ENV variables\n  Object.keys(process.env).forEach(key => {\n    if (/Accounts_OAuth_Custom_[a-zA-Z0-9_-]+$/.test(key)) {\n      // Most all shells actually prohibit the usage of - in environment variables\n      // So this will allow replacing - with _ and translate it back to the setting name\n      let name = key.replace('Accounts_OAuth_Custom_', '');\n\n      if (name.indexOf('_') > -1) {\n        name = name.replace(name.substr(name.indexOf('_')), '');\n      }\n\n      const serviceKey = \"Accounts_OAuth_Custom_\".concat(name);\n\n      if (key === serviceKey) {\n        const values = {\n          enabled: process.env[\"\".concat(serviceKey)] === 'true',\n          clientId: process.env[\"\".concat(serviceKey, \"_id\")],\n          clientSecret: process.env[\"\".concat(serviceKey, \"_secret\")],\n          serverURL: process.env[\"\".concat(serviceKey, \"_url\")],\n          tokenPath: process.env[\"\".concat(serviceKey, \"_token_path\")],\n          identityPath: process.env[\"\".concat(serviceKey, \"_identity_path\")],\n          authorizePath: process.env[\"\".concat(serviceKey, \"_authorize_path\")],\n          scope: process.env[\"\".concat(serviceKey, \"_scope\")],\n          accessTokenParam: process.env[\"\".concat(serviceKey, \"_access_token_param\")],\n          buttonLabelText: process.env[\"\".concat(serviceKey, \"_button_label_text\")],\n          buttonLabelColor: process.env[\"\".concat(serviceKey, \"_button_label_color\")],\n          loginStyle: process.env[\"\".concat(serviceKey, \"_login_style\")],\n          buttonColor: process.env[\"\".concat(serviceKey, \"_button_color\")],\n          tokenSentVia: process.env[\"\".concat(serviceKey, \"_token_sent_via\")],\n          identityTokenSentVia: process.env[\"\".concat(serviceKey, \"_identity_token_sent_via\")],\n          keyField: process.env[\"\".concat(serviceKey, \"_key_field\")],\n          usernameField: process.env[\"\".concat(serviceKey, \"_username_field\")],\n          nameField: process.env[\"\".concat(serviceKey, \"_name_field\")],\n          emailField: process.env[\"\".concat(serviceKey, \"_email_field\")],\n          rolesClaim: process.env[\"\".concat(serviceKey, \"_roles_claim\")],\n          groupsClaim: process.env[\"\".concat(serviceKey, \"_groups_claim\")],\n          channelsMap: process.env[\"\".concat(serviceKey, \"_groups_channel_map\")],\n          channelsAdmin: process.env[\"\".concat(serviceKey, \"_channels_admin\")],\n          mergeUsers: process.env[\"\".concat(serviceKey, \"_merge_users\")] === 'true',\n          mapChannels: process.env[\"\".concat(serviceKey, \"_map_channels\")],\n          mergeRoles: process.env[\"\".concat(serviceKey, \"_merge_roles\")] === 'true',\n          rolesToSync: process.env[\"\".concat(serviceKey, \"_roles_to_sync\")],\n          showButton: process.env[\"\".concat(serviceKey, \"_show_button\")] === 'true',\n          avatarField: process.env[\"\".concat(serviceKey, \"_avatar_field\")]\n        };\n        addOAuthService(name, values);\n      }\n    }\n  });\n}\n\ncustomOAuthServicesInit();","map":{"version":3,"sources":["app/lib/server/startup/oAuthServicesUpdate.js"],"names":["Meteor","module","link","v","ServiceConfiguration","_","default","CustomOAuth","Logger","settings","addOAuthService","logger","_OAuthServicesUpdate","services","getByRegexp","filter","value","forEach","key","debug","oauth_updated","serviceName","replace","test","data","clientId","get","secret","custom","serverURL","tokenPath","identityPath","authorizePath","scope","accessTokenParam","buttonLabelText","buttonLabelColor","loginStyle","buttonColor","tokenSentVia","identityTokenSentVia","keyField","usernameField","emailField","nameField","avatarField","rolesClaim","groupsClaim","channelsMap","channelsAdmin","mergeUsers","mapChannels","mergeRoles","rolesToSync","showButton","toLowerCase","appId","consumerKey","clientConfig","requestPermissions","keys","Object","undefined","length","service","configurations","upsert","$set","remove","OAuthServicesUpdate","debounce","bindEnvironment","OAuthServicesRemove","_id","watchByRegex","customOAuthServicesInit","process","env","name","indexOf","substr","serviceKey","values","enabled","clientSecret"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\nimport _ from 'underscore';\n\nimport { CustomOAuth } from '../../../custom-oauth';\nimport { Logger } from '../../../logger';\nimport { settings } from '../../../settings/server';\nimport { addOAuthService } from '../functions/addOAuthService';\n\nconst logger = new Logger('rocketchat:lib');\n\nfunction _OAuthServicesUpdate() {\n\tconst services = settings.getByRegexp(/^(Accounts_OAuth_|Accounts_OAuth_Custom-)[a-z0-9_]+$/i);\n\tservices\n\t\t.filter(([, value]) => typeof value === 'boolean')\n\t\t.forEach(([key, value]) => {\n\t\t\tlogger.debug({ oauth_updated: key });\n\t\t\tlet serviceName = key.replace('Accounts_OAuth_', '');\n\t\t\tif (serviceName === 'Meteor') {\n\t\t\t\tserviceName = 'meteor-developer';\n\t\t\t}\n\t\t\tif (/Accounts_OAuth_Custom-/.test(key)) {\n\t\t\t\tserviceName = key.replace('Accounts_OAuth_Custom-', '');\n\t\t\t}\n\n\t\t\tif (value === true) {\n\t\t\t\tconst data = {\n\t\t\t\t\tclientId: settings.get(`${key}_id`),\n\t\t\t\t\tsecret: settings.get(`${key}_secret`),\n\t\t\t\t};\n\n\t\t\t\tif (/Accounts_OAuth_Custom-/.test(key)) {\n\t\t\t\t\tdata.custom = true;\n\t\t\t\t\tdata.clientId = settings.get(`${key}-id`);\n\t\t\t\t\tdata.secret = settings.get(`${key}-secret`);\n\t\t\t\t\tdata.serverURL = settings.get(`${key}-url`);\n\t\t\t\t\tdata.tokenPath = settings.get(`${key}-token_path`);\n\t\t\t\t\tdata.identityPath = settings.get(`${key}-identity_path`);\n\t\t\t\t\tdata.authorizePath = settings.get(`${key}-authorize_path`);\n\t\t\t\t\tdata.scope = settings.get(`${key}-scope`);\n\t\t\t\t\tdata.accessTokenParam = settings.get(`${key}-access_token_param`);\n\t\t\t\t\tdata.buttonLabelText = settings.get(`${key}-button_label_text`);\n\t\t\t\t\tdata.buttonLabelColor = settings.get(`${key}-button_label_color`);\n\t\t\t\t\tdata.loginStyle = settings.get(`${key}-login_style`);\n\t\t\t\t\tdata.buttonColor = settings.get(`${key}-button_color`);\n\t\t\t\t\tdata.tokenSentVia = settings.get(`${key}-token_sent_via`);\n\t\t\t\t\tdata.identityTokenSentVia = settings.get(`${key}-identity_token_sent_via`);\n\t\t\t\t\tdata.keyField = settings.get(`${key}-key_field`);\n\t\t\t\t\tdata.usernameField = settings.get(`${key}-username_field`);\n\t\t\t\t\tdata.emailField = settings.get(`${key}-email_field`);\n\t\t\t\t\tdata.nameField = settings.get(`${key}-name_field`);\n\t\t\t\t\tdata.avatarField = settings.get(`${key}-avatar_field`);\n\t\t\t\t\tdata.rolesClaim = settings.get(`${key}-roles_claim`);\n\t\t\t\t\tdata.groupsClaim = settings.get(`${key}-groups_claim`);\n\t\t\t\t\tdata.channelsMap = settings.get(`${key}-groups_channel_map`);\n\t\t\t\t\tdata.channelsAdmin = settings.get(`${key}-channels_admin`);\n\t\t\t\t\tdata.mergeUsers = settings.get(`${key}-merge_users`);\n\t\t\t\t\tdata.mapChannels = settings.get(`${key}-map_channels`);\n\t\t\t\t\tdata.mergeRoles = settings.get(`${key}-merge_roles`);\n\t\t\t\t\tdata.rolesToSync = settings.get(`${key}-roles_to_sync`);\n\t\t\t\t\tdata.showButton = settings.get(`${key}-show_button`);\n\n\t\t\t\t\tnew CustomOAuth(serviceName.toLowerCase(), {\n\t\t\t\t\t\tserverURL: data.serverURL,\n\t\t\t\t\t\ttokenPath: data.tokenPath,\n\t\t\t\t\t\tidentityPath: data.identityPath,\n\t\t\t\t\t\tauthorizePath: data.authorizePath,\n\t\t\t\t\t\tscope: data.scope,\n\t\t\t\t\t\tloginStyle: data.loginStyle,\n\t\t\t\t\t\ttokenSentVia: data.tokenSentVia,\n\t\t\t\t\t\tidentityTokenSentVia: data.identityTokenSentVia,\n\t\t\t\t\t\tkeyField: data.keyField,\n\t\t\t\t\t\tusernameField: data.usernameField,\n\t\t\t\t\t\temailField: data.emailField,\n\t\t\t\t\t\tnameField: data.nameField,\n\t\t\t\t\t\tavatarField: data.avatarField,\n\t\t\t\t\t\trolesClaim: data.rolesClaim,\n\t\t\t\t\t\tgroupsClaim: data.groupsClaim,\n\t\t\t\t\t\tmapChannels: data.mapChannels,\n\t\t\t\t\t\tchannelsMap: data.channelsMap,\n\t\t\t\t\t\tchannelsAdmin: data.channelsAdmin,\n\t\t\t\t\t\tmergeUsers: data.mergeUsers,\n\t\t\t\t\t\tmergeRoles: data.mergeRoles,\n\t\t\t\t\t\trolesToSync: data.rolesToSync,\n\t\t\t\t\t\taccessTokenParam: data.accessTokenParam,\n\t\t\t\t\t\tshowButton: data.showButton,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (serviceName === 'Facebook') {\n\t\t\t\t\tdata.appId = data.clientId;\n\t\t\t\t\tdelete data.clientId;\n\t\t\t\t}\n\t\t\t\tif (serviceName === 'Twitter') {\n\t\t\t\t\tdata.consumerKey = data.clientId;\n\t\t\t\t\tdelete data.clientId;\n\t\t\t\t}\n\n\t\t\t\tif (serviceName === 'Linkedin') {\n\t\t\t\t\tdata.clientConfig = {\n\t\t\t\t\t\trequestPermissions: ['r_liteprofile', 'r_emailaddress'],\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (serviceName === 'Nextcloud') {\n\t\t\t\t\tdata.buttonLabelText = settings.get('Accounts_OAuth_Nextcloud_button_label_text');\n\t\t\t\t\tdata.buttonLabelColor = settings.get('Accounts_OAuth_Nextcloud_button_label_color');\n\t\t\t\t\tdata.buttonColor = settings.get('Accounts_OAuth_Nextcloud_button_color');\n\t\t\t\t}\n\n\t\t\t\t// If there's no data other than the service name, then put the service name in the data object so the operation won't fail\n\t\t\t\tconst keys = Object.keys(data).filter((key) => data[key] !== undefined);\n\t\t\t\tif (!keys.length) {\n\t\t\t\t\tdata.service = serviceName.toLowerCase();\n\t\t\t\t}\n\n\t\t\t\tServiceConfiguration.configurations.upsert(\n\t\t\t\t\t{\n\t\t\t\t\t\tservice: serviceName.toLowerCase(),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t$set: data,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tServiceConfiguration.configurations.remove({\n\t\t\t\t\tservice: serviceName.toLowerCase(),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n}\n\nconst OAuthServicesUpdate = _.debounce(Meteor.bindEnvironment(_OAuthServicesUpdate), 2000);\n\nfunction OAuthServicesRemove(_id) {\n\tconst serviceName = _id.replace('Accounts_OAuth_Custom-', '');\n\treturn ServiceConfiguration.configurations.remove({\n\t\tservice: serviceName.toLowerCase(),\n\t});\n}\n\nsettings.watchByRegex(/^Accounts_OAuth_.+/, function () {\n\treturn OAuthServicesUpdate(); // eslint-disable-line new-cap\n});\n\nsettings.watchByRegex(/^Accounts_OAuth_Custom-[a-z0-9_]+/, function (key, value) {\n\tif (!value) {\n\t\treturn OAuthServicesRemove(key); // eslint-disable-line new-cap\n\t}\n});\n\nfunction customOAuthServicesInit() {\n\t// Add settings for custom OAuth providers to the settings so they get\n\t// automatically added when they are defined in ENV variables\n\tObject.keys(process.env).forEach((key) => {\n\t\tif (/Accounts_OAuth_Custom_[a-zA-Z0-9_-]+$/.test(key)) {\n\t\t\t// Most all shells actually prohibit the usage of - in environment variables\n\t\t\t// So this will allow replacing - with _ and translate it back to the setting name\n\t\t\tlet name = key.replace('Accounts_OAuth_Custom_', '');\n\n\t\t\tif (name.indexOf('_') > -1) {\n\t\t\t\tname = name.replace(name.substr(name.indexOf('_')), '');\n\t\t\t}\n\n\t\t\tconst serviceKey = `Accounts_OAuth_Custom_${name}`;\n\n\t\t\tif (key === serviceKey) {\n\t\t\t\tconst values = {\n\t\t\t\t\tenabled: process.env[`${serviceKey}`] === 'true',\n\t\t\t\t\tclientId: process.env[`${serviceKey}_id`],\n\t\t\t\t\tclientSecret: process.env[`${serviceKey}_secret`],\n\t\t\t\t\tserverURL: process.env[`${serviceKey}_url`],\n\t\t\t\t\ttokenPath: process.env[`${serviceKey}_token_path`],\n\t\t\t\t\tidentityPath: process.env[`${serviceKey}_identity_path`],\n\t\t\t\t\tauthorizePath: process.env[`${serviceKey}_authorize_path`],\n\t\t\t\t\tscope: process.env[`${serviceKey}_scope`],\n\t\t\t\t\taccessTokenParam: process.env[`${serviceKey}_access_token_param`],\n\t\t\t\t\tbuttonLabelText: process.env[`${serviceKey}_button_label_text`],\n\t\t\t\t\tbuttonLabelColor: process.env[`${serviceKey}_button_label_color`],\n\t\t\t\t\tloginStyle: process.env[`${serviceKey}_login_style`],\n\t\t\t\t\tbuttonColor: process.env[`${serviceKey}_button_color`],\n\t\t\t\t\ttokenSentVia: process.env[`${serviceKey}_token_sent_via`],\n\t\t\t\t\tidentityTokenSentVia: process.env[`${serviceKey}_identity_token_sent_via`],\n\t\t\t\t\tkeyField: process.env[`${serviceKey}_key_field`],\n\t\t\t\t\tusernameField: process.env[`${serviceKey}_username_field`],\n\t\t\t\t\tnameField: process.env[`${serviceKey}_name_field`],\n\t\t\t\t\temailField: process.env[`${serviceKey}_email_field`],\n\t\t\t\t\trolesClaim: process.env[`${serviceKey}_roles_claim`],\n\t\t\t\t\tgroupsClaim: process.env[`${serviceKey}_groups_claim`],\n\t\t\t\t\tchannelsMap: process.env[`${serviceKey}_groups_channel_map`],\n\t\t\t\t\tchannelsAdmin: process.env[`${serviceKey}_channels_admin`],\n\t\t\t\t\tmergeUsers: process.env[`${serviceKey}_merge_users`] === 'true',\n\t\t\t\t\tmapChannels: process.env[`${serviceKey}_map_channels`],\n\t\t\t\t\tmergeRoles: process.env[`${serviceKey}_merge_roles`] === 'true',\n\t\t\t\t\trolesToSync: process.env[`${serviceKey}_roles_to_sync`],\n\t\t\t\t\tshowButton: process.env[`${serviceKey}_show_button`] === 'true',\n\t\t\t\t\tavatarField: process.env[`${serviceKey}_avatar_field`],\n\t\t\t\t};\n\n\t\t\t\taddOAuthService(name, values);\n\t\t\t}\n\t\t}\n\t});\n}\n\ncustomOAuthServicesInit();\n"]},"sourceType":"module","hash":"1452da1d5cb197e5243d02c1556d9f6d26fa49d8"}

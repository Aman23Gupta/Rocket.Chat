{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/room.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/normalizers/room.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/room.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/normalizers/room.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/normalizers/room.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet getNameAndDomain, isFullyQualified;\nmodule.link(\"../functions/helpers\", {\n  getNameAndDomain(v) {\n    getNameAndDomain = v;\n  },\n\n  isFullyQualified(v) {\n    isFullyQualified = v;\n  }\n\n}, 0);\nlet getFederationDomain;\nmodule.link(\"../lib/getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 1);\n\nconst denormalizeRoom = originalResource => {\n  const resource = _objectSpread({}, originalResource);\n\n  if (resource.t === 'd') {\n    resource.usernames = resource.usernames.map(u => {\n      const [username, domain] = getNameAndDomain(u);\n      return domain === getFederationDomain() ? username : u;\n    });\n  } else {\n    // Denormalize room name\n    const [roomName, roomDomain] = getNameAndDomain(resource.name);\n    resource.name = roomDomain === getFederationDomain() ? roomName : resource.name; // Denormalize room owner name\n\n    const [username, userDomain] = getNameAndDomain(resource.u.username);\n    resource.u.username = userDomain === getFederationDomain() ? username : resource.u.username; // Denormalize muted users\n\n    if (resource.muted) {\n      resource.muted = resource.muted.map(u => {\n        const [username, domain] = getNameAndDomain(u);\n        return domain === getFederationDomain() ? username : u;\n      });\n    } // Denormalize unmuted users\n\n\n    if (resource.unmuted) {\n      resource.unmuted = resource.unmuted.map(u => {\n        const [username, domain] = getNameAndDomain(u);\n        return domain === getFederationDomain() ? username : u;\n      });\n    }\n  }\n\n  return resource;\n};\n\nconst normalizeRoom = (originalResource, users) => {\n  const resource = _objectSpread({}, originalResource);\n\n  let domains = '';\n\n  if (resource.t === 'd') {\n    // Handle user names, adding the Federation domain to local users\n    resource.usernames = resource.usernames.map(u => !isFullyQualified(u) ? \"\".concat(u, \"@\").concat(getFederationDomain()) : u); // Get the domains of the usernames\n\n    domains = resource.usernames.map(u => getNameAndDomain(u)[1]);\n  } else {\n    // Ensure private\n    resource.t = 'p'; // Normalize room name\n\n    resource.name = !isFullyQualified(resource.name) ? \"\".concat(resource.name, \"@\").concat(getFederationDomain()) : resource.name; // Get the users domains\n\n    domains = users.map(u => u.federation.origin); // Normalize the username\n\n    resource.u.username = !isFullyQualified(resource.u.username) ? \"\".concat(resource.u.username, \"@\").concat(getFederationDomain()) : resource.u.username; // Normalize the muted users\n\n    if (resource.muted) {\n      resource.muted = resource.muted.map(u => !isFullyQualified(u) ? \"\".concat(u, \"@\").concat(getFederationDomain()) : u);\n    } // Normalize the unmuted users\n\n\n    if (resource.unmuted) {\n      resource.unmuted = resource.unmuted.map(u => !isFullyQualified(u) ? \"\".concat(u, \"@\").concat(getFederationDomain()) : u);\n    }\n  }\n\n  domains = [...new Set(domains)]; // Federation\n\n  resource.federation = resource.federation || {\n    origin: getFederationDomain(),\n    // The origin of this resource, where it was created\n    domains // The domains where this room exist (or will exist)\n\n  };\n  return resource;\n};\n\nmodule.exportDefault({\n  denormalizeRoom,\n  normalizeRoom\n});","map":{"version":3,"sources":["app/federation/server/normalizers/room.js"],"names":["_objectSpread","module","link","default","v","getNameAndDomain","isFullyQualified","getFederationDomain","denormalizeRoom","originalResource","resource","t","usernames","map","u","username","domain","roomName","roomDomain","name","userDomain","muted","unmuted","normalizeRoom","users","domains","federation","origin","Set","exportDefault"],"mappings":"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","sourcesContent":["import { getNameAndDomain, isFullyQualified } from '../functions/helpers';\nimport { getFederationDomain } from '../lib/getFederationDomain';\n\nconst denormalizeRoom = (originalResource) => {\n\tconst resource = { ...originalResource };\n\n\tif (resource.t === 'd') {\n\t\tresource.usernames = resource.usernames.map((u) => {\n\t\t\tconst [username, domain] = getNameAndDomain(u);\n\n\t\t\treturn domain === getFederationDomain() ? username : u;\n\t\t});\n\t} else {\n\t\t// Denormalize room name\n\t\tconst [roomName, roomDomain] = getNameAndDomain(resource.name);\n\n\t\tresource.name = roomDomain === getFederationDomain() ? roomName : resource.name;\n\n\t\t// Denormalize room owner name\n\t\tconst [username, userDomain] = getNameAndDomain(resource.u.username);\n\n\t\tresource.u.username = userDomain === getFederationDomain() ? username : resource.u.username;\n\n\t\t// Denormalize muted users\n\t\tif (resource.muted) {\n\t\t\tresource.muted = resource.muted.map((u) => {\n\t\t\t\tconst [username, domain] = getNameAndDomain(u);\n\n\t\t\t\treturn domain === getFederationDomain() ? username : u;\n\t\t\t});\n\t\t}\n\n\t\t// Denormalize unmuted users\n\t\tif (resource.unmuted) {\n\t\t\tresource.unmuted = resource.unmuted.map((u) => {\n\t\t\t\tconst [username, domain] = getNameAndDomain(u);\n\n\t\t\t\treturn domain === getFederationDomain() ? username : u;\n\t\t\t});\n\t\t}\n\t}\n\n\treturn resource;\n};\n\nconst normalizeRoom = (originalResource, users) => {\n\tconst resource = { ...originalResource };\n\n\tlet domains = '';\n\n\tif (resource.t === 'd') {\n\t\t// Handle user names, adding the Federation domain to local users\n\t\tresource.usernames = resource.usernames.map((u) => (!isFullyQualified(u) ? `${u}@${getFederationDomain()}` : u));\n\n\t\t// Get the domains of the usernames\n\t\tdomains = resource.usernames.map((u) => getNameAndDomain(u)[1]);\n\t} else {\n\t\t// Ensure private\n\t\tresource.t = 'p';\n\n\t\t// Normalize room name\n\t\tresource.name = !isFullyQualified(resource.name) ? `${resource.name}@${getFederationDomain()}` : resource.name;\n\n\t\t// Get the users domains\n\t\tdomains = users.map((u) => u.federation.origin);\n\n\t\t// Normalize the username\n\t\tresource.u.username = !isFullyQualified(resource.u.username) ? `${resource.u.username}@${getFederationDomain()}` : resource.u.username;\n\n\t\t// Normalize the muted users\n\t\tif (resource.muted) {\n\t\t\tresource.muted = resource.muted.map((u) => (!isFullyQualified(u) ? `${u}@${getFederationDomain()}` : u));\n\t\t}\n\n\t\t// Normalize the unmuted users\n\t\tif (resource.unmuted) {\n\t\t\tresource.unmuted = resource.unmuted.map((u) => (!isFullyQualified(u) ? `${u}@${getFederationDomain()}` : u));\n\t\t}\n\t}\n\n\tdomains = [...new Set(domains)];\n\n\t// Federation\n\tresource.federation = resource.federation || {\n\t\torigin: getFederationDomain(), // The origin of this resource, where it was created\n\t\tdomains, // The domains where this room exist (or will exist)\n\t};\n\n\treturn resource;\n};\n\nexport default {\n\tdenormalizeRoom,\n\tnormalizeRoom,\n};\n"]},"sourceType":"module","hash":"a3964409ac00f9447f72120f7a6c2e1a5137e3d3"}

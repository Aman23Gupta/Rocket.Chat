{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/user-status/server/methods/insertOrUpdateUserStatus.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/user-status/server/methods/insertOrUpdateUserStatus.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/user-status/server/methods/insertOrUpdateUserStatus.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/user-status/server/methods/insertOrUpdateUserStatus.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/user-status/server/methods/insertOrUpdateUserStatus.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 1);\nlet hasPermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 2);\nlet CustomUserStatus;\nmodule.link(\"../../../models/server/raw\", {\n  CustomUserStatus(v) {\n    CustomUserStatus = v;\n  }\n\n}, 3);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 4);\nMeteor.methods({\n  insertOrUpdateUserStatus(userStatusData) {\n    return Promise.asyncApply(() => {\n      if (!hasPermission(this.userId, 'manage-user-status')) {\n        throw new Meteor.Error('not_authorized');\n      }\n\n      if (!s.trim(userStatusData.name)) {\n        throw new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n          method: 'insertOrUpdateUserStatus',\n          field: 'Name'\n        });\n      } // allow all characters except >, <, &, \", '\n      // more practical than allowing specific sets of characters; also allows foreign languages\n\n\n      const nameValidation = /[><&\"']/;\n\n      if (nameValidation.test(userStatusData.name)) {\n        throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(userStatusData.name, \" is not a valid name\"), {\n          method: 'insertOrUpdateUserStatus',\n          input: userStatusData.name,\n          field: 'Name'\n        });\n      }\n\n      let matchingResults = [];\n\n      if (userStatusData._id) {\n        matchingResults = Promise.await(CustomUserStatus.findByNameExceptId(userStatusData.name, userStatusData._id).toArray());\n      } else {\n        matchingResults = Promise.await(CustomUserStatus.findByName(userStatusData.name).toArray());\n      }\n\n      if (matchingResults.length > 0) {\n        throw new Meteor.Error('Custom_User_Status_Error_Name_Already_In_Use', 'The custom user status name is already in use', {\n          method: 'insertOrUpdateUserStatus'\n        });\n      }\n\n      const validStatusTypes = ['online', 'away', 'busy', 'offline'];\n\n      if (userStatusData.statusType && validStatusTypes.indexOf(userStatusData.statusType) < 0) {\n        throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(userStatusData.statusType, \" is not a valid status type\"), {\n          method: 'insertOrUpdateUserStatus',\n          input: userStatusData.statusType,\n          field: 'StatusType'\n        });\n      }\n\n      if (!userStatusData._id) {\n        // insert user status\n        const createUserStatus = {\n          name: userStatusData.name,\n          statusType: userStatusData.statusType || null\n        };\n\n        const _id = Promise.await(Promise.await(CustomUserStatus.create(createUserStatus)).insertedId);\n\n        api.broadcast('user.updateCustomStatus', createUserStatus);\n        return _id;\n      } // update User status\n\n\n      if (userStatusData.name !== userStatusData.previousName) {\n        Promise.await(CustomUserStatus.setName(userStatusData._id, userStatusData.name));\n      }\n\n      if (userStatusData.statusType !== userStatusData.previousStatusType) {\n        Promise.await(CustomUserStatus.setStatusType(userStatusData._id, userStatusData.statusType));\n      }\n\n      api.broadcast('user.updateCustomStatus', userStatusData);\n      return true;\n    });\n  }\n\n});","map":{"version":3,"sources":["app/user-status/server/methods/insertOrUpdateUserStatus.js"],"names":["Meteor","module","link","v","s","default","hasPermission","CustomUserStatus","api","methods","insertOrUpdateUserStatus","userStatusData","userId","Error","trim","name","method","field","nameValidation","test","input","matchingResults","_id","findByNameExceptId","toArray","findByName","length","validStatusTypes","statusType","indexOf","createUserStatus","create","insertedId","broadcast","previousName","setName","previousStatusType","setStatusType"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport s from 'underscore.string';\n\nimport { hasPermission } from '../../../authorization';\nimport { CustomUserStatus } from '../../../models/server/raw';\nimport { api } from '../../../../server/sdk/api';\n\nMeteor.methods({\n\tasync insertOrUpdateUserStatus(userStatusData) {\n\t\tif (!hasPermission(this.userId, 'manage-user-status')) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\tif (!s.trim(userStatusData.name)) {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\t// allow all characters except >, <, &, \", '\n\t\t// more practical than allowing specific sets of characters; also allows foreign languages\n\t\tconst nameValidation = /[><&\"']/;\n\n\t\tif (nameValidation.test(userStatusData.name)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${userStatusData.name} is not a valid name`, {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tinput: userStatusData.name,\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\tlet matchingResults = [];\n\n\t\tif (userStatusData._id) {\n\t\t\tmatchingResults = await CustomUserStatus.findByNameExceptId(userStatusData.name, userStatusData._id).toArray();\n\t\t} else {\n\t\t\tmatchingResults = await CustomUserStatus.findByName(userStatusData.name).toArray();\n\t\t}\n\n\t\tif (matchingResults.length > 0) {\n\t\t\tthrow new Meteor.Error('Custom_User_Status_Error_Name_Already_In_Use', 'The custom user status name is already in use', {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t});\n\t\t}\n\n\t\tconst validStatusTypes = ['online', 'away', 'busy', 'offline'];\n\t\tif (userStatusData.statusType && validStatusTypes.indexOf(userStatusData.statusType) < 0) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${userStatusData.statusType} is not a valid status type`, {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tinput: userStatusData.statusType,\n\t\t\t\tfield: 'StatusType',\n\t\t\t});\n\t\t}\n\n\t\tif (!userStatusData._id) {\n\t\t\t// insert user status\n\t\t\tconst createUserStatus = {\n\t\t\t\tname: userStatusData.name,\n\t\t\t\tstatusType: userStatusData.statusType || null,\n\t\t\t};\n\n\t\t\tconst _id = await (await CustomUserStatus.create(createUserStatus)).insertedId;\n\n\t\t\tapi.broadcast('user.updateCustomStatus', createUserStatus);\n\n\t\t\treturn _id;\n\t\t}\n\n\t\t// update User status\n\t\tif (userStatusData.name !== userStatusData.previousName) {\n\t\t\tawait CustomUserStatus.setName(userStatusData._id, userStatusData.name);\n\t\t}\n\n\t\tif (userStatusData.statusType !== userStatusData.previousStatusType) {\n\t\t\tawait CustomUserStatus.setStatusType(userStatusData._id, userStatusData.statusType);\n\t\t}\n\n\t\tapi.broadcast('user.updateCustomStatus', userStatusData);\n\n\t\treturn true;\n\t},\n});\n"]},"sourceType":"module","hash":"7c49b51369e5cdb537e5a1766fcb52072a15cc40"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/meteor-developer-oauth/meteor_developer_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/meteor-developer-oauth/meteor_developer_server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/meteor-developer-oauth/meteor_developer_server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/meteor-developer-oauth/meteor_developer_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/meteor-developer-oauth/meteor_developer_server.js"}},"code":"OAuth.registerService(\"meteor-developer\", 2, null, query => {\n  const response = getTokens(query);\n  const {\n    accessToken\n  } = response;\n  const identity = getIdentity(accessToken);\n  const serviceData = {\n    accessToken: OAuth.sealSecret(accessToken),\n    expiresAt: +new Date() + 1000 * response.expiresIn\n  };\n  Object.assign(serviceData, identity); // only set the token in serviceData if it's there. this ensures\n  // that we don't lose old ones (since we only get this on the first\n  // log in attempt)\n\n  if (response.refreshToken) serviceData.refreshToken = OAuth.sealSecret(response.refreshToken);\n  return {\n    serviceData,\n    options: {\n      profile: {\n        name: serviceData.username\n      }\n    } // XXX use username for name until meteor accounts has a profile with a name\n\n  };\n}); // returns an object containing:\n// - accessToken\n// - expiresIn: lifetime of token in seconds\n// - refreshToken, if this is the first authorization request and we got a\n//   refresh token from the server\n\nconst getTokens = query => {\n  const config = ServiceConfiguration.configurations.findOne({\n    service: 'meteor-developer'\n  });\n  if (!config) throw new ServiceConfiguration.ConfigError();\n  let response;\n\n  try {\n    response = HTTP.post(MeteorDeveloperAccounts._server + \"/oauth2/token\", {\n      params: {\n        grant_type: \"authorization_code\",\n        code: query.code,\n        client_id: config.clientId,\n        client_secret: OAuth.openSecret(config.secret),\n        redirect_uri: OAuth._redirectUri('meteor-developer', config)\n      }\n    });\n  } catch (err) {\n    throw Object.assign(new Error(\"Failed to complete OAuth handshake with Meteor developer accounts. \" + err.message), {\n      response: err.response\n    });\n  }\n\n  if (!response.data || response.data.error) {\n    // if the http response was a json object with an error attribute\n    throw new Error(\"Failed to complete OAuth handshake with Meteor developer accounts. \" + (response.data ? response.data.error : \"No response data\"));\n  } else {\n    return {\n      accessToken: response.data.access_token,\n      refreshToken: response.data.refresh_token,\n      expiresIn: response.data.expires_in\n    };\n  }\n};\n\nconst getIdentity = accessToken => {\n  try {\n    return HTTP.get(\"\".concat(MeteorDeveloperAccounts._server, \"/api/v1/identity\"), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).data;\n  } catch (err) {\n    throw Object.assign(new Error(\"Failed to fetch identity from Meteor developer accounts. \" + err.message), {\n      response: err.response\n    });\n  }\n};\n\nMeteorDeveloperAccounts.retrieveCredential = (credentialToken, credentialSecret) => OAuth.retrieveCredential(credentialToken, credentialSecret);","map":{"version":3,"sources":["packages/meteor-developer-oauth/meteor_developer_server.js"],"names":["OAuth","registerService","query","response","getTokens","accessToken","identity","getIdentity","serviceData","sealSecret","expiresAt","Date","expiresIn","Object","assign","refreshToken","options","profile","name","username","config","ServiceConfiguration","configurations","findOne","service","ConfigError","HTTP","post","MeteorDeveloperAccounts","_server","params","grant_type","code","client_id","clientId","client_secret","openSecret","secret","redirect_uri","_redirectUri","err","Error","message","data","error","access_token","refresh_token","expires_in","get","headers","Authorization","retrieveCredential","credentialToken","credentialSecret"],"mappings":"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","sourcesContent":["OAuth.registerService(\"meteor-developer\", 2, null, query => {\n  const response = getTokens(query);\n  const { accessToken } = response;\n  const identity = getIdentity(accessToken);\n\n  const serviceData = {\n    accessToken: OAuth.sealSecret(accessToken),\n    expiresAt: (+new Date) + (1000 * response.expiresIn)\n  };\n\n  Object.assign(serviceData, identity);\n\n  // only set the token in serviceData if it's there. this ensures\n  // that we don't lose old ones (since we only get this on the first\n  // log in attempt)\n  if (response.refreshToken)\n    serviceData.refreshToken = OAuth.sealSecret(response.refreshToken);\n\n  return {\n    serviceData,\n    options: {profile: {name: serviceData.username}}\n    // XXX use username for name until meteor accounts has a profile with a name\n  };\n});\n\n// returns an object containing:\n// - accessToken\n// - expiresIn: lifetime of token in seconds\n// - refreshToken, if this is the first authorization request and we got a\n//   refresh token from the server\nconst getTokens = query => {\n  const config = ServiceConfiguration.configurations.findOne({\n    service: 'meteor-developer'\n  });\n  if (!config)\n    throw new ServiceConfiguration.ConfigError();\n\n  let response;\n  try {\n    response = HTTP.post(\n      MeteorDeveloperAccounts._server + \"/oauth2/token\", {\n        params: {\n          grant_type: \"authorization_code\",\n          code: query.code,\n          client_id: config.clientId,\n          client_secret: OAuth.openSecret(config.secret),\n          redirect_uri: OAuth._redirectUri('meteor-developer', config)\n        }\n      }\n    );\n  } catch (err) {\n    throw Object.assign(\n      new Error(\n        \"Failed to complete OAuth handshake with Meteor developer accounts. \"\n          + err.message\n      ),\n      {response: err.response}\n    );\n  }\n\n  if (! response.data || response.data.error) {\n    // if the http response was a json object with an error attribute\n    throw new Error(\n      \"Failed to complete OAuth handshake with Meteor developer accounts. \" +\n        (response.data ? response.data.error :\n         \"No response data\")\n    );\n  } else {\n    return {\n      accessToken: response.data.access_token,\n      refreshToken: response.data.refresh_token,\n      expiresIn: response.data.expires_in\n    };\n  }\n};\n\nconst getIdentity = accessToken => {\n  try {\n    return HTTP.get(\n      `${MeteorDeveloperAccounts._server}/api/v1/identity`,\n      {\n        headers: { Authorization: `Bearer ${accessToken}`}\n      }\n    ).data;\n  } catch (err) {\n    throw Object.assign(\n      new Error(\"Failed to fetch identity from Meteor developer accounts. \" +\n                err.message),\n      {response: err.response}\n    );\n  }\n};\n\nMeteorDeveloperAccounts.retrieveCredential = \n  (credentialToken, credentialSecret) => \n    OAuth.retrieveCredential(credentialToken, credentialSecret);\n"]},"sourceType":"module","hash":"88f81af6c7c4e95acbcff70aef880eef12df87f2"}

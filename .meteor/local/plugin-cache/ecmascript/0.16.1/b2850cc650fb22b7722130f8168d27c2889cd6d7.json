{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/cron.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/cron.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/cron.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/cron.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/cron.js"}},"code":"module.export({\n  appsUpdateMarketplaceInfo: () => appsUpdateMarketplaceInfo\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 1);\nlet SyncedCron;\nmodule.link(\"meteor/littledata:synced-cron\", {\n  SyncedCron(v) {\n    SyncedCron = v;\n  }\n\n}, 2);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 3);\nlet AppStatus;\nmodule.link(\"@rocket.chat/apps-engine/definition/AppStatus\", {\n  AppStatus(v) {\n    AppStatus = v;\n  }\n\n}, 4);\nlet Apps;\nmodule.link(\"./orchestrator\", {\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 5);\nlet getWorkspaceAccessToken;\nmodule.link(\"../../cloud/server\", {\n  getWorkspaceAccessToken(v) {\n    getWorkspaceAccessToken = v;\n  }\n\n}, 6);\nlet Users;\nmodule.link(\"../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 7);\nlet sendMessagesToAdmins;\nmodule.link(\"../../../server/lib/sendMessagesToAdmins\", {\n  sendMessagesToAdmins(v) {\n    sendMessagesToAdmins = v;\n  }\n\n}, 8);\nlet Settings;\nmodule.link(\"../../models/server/raw\", {\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 9);\nconst notifyAdminsAboutInvalidApps = Meteor.bindEnvironment(function _notifyAdminsAboutInvalidApps(apps) {\n  if (!apps) {\n    return;\n  }\n\n  const hasInvalidApps = !!apps.find(app => app.getLatestLicenseValidationResult().hasErrors);\n\n  if (!hasInvalidApps) {\n    return;\n  }\n\n  const id = 'someAppInInvalidState';\n  const title = 'Warning';\n  const text = 'There is one or more apps in an invalid state. Click here to review.';\n  const rocketCatMessage = 'There is one or more apps in an invalid state. Go to Administration > Apps to review.';\n  const link = '/admin/apps';\n  Promise.await(sendMessagesToAdmins({\n    msgs: _ref => {\n      let {\n        adminUser\n      } = _ref;\n      return {\n        msg: \"*\".concat(TAPi18n.__(title, adminUser.language), \"*\\n\").concat(TAPi18n.__(rocketCatMessage, adminUser.language))\n      };\n    },\n    banners: _ref2 => {\n      let {\n        adminUser\n      } = _ref2;\n      Users.removeBannerById(adminUser._id, {\n        id\n      });\n      return [{\n        id,\n        priority: 10,\n        title,\n        text,\n        modifiers: ['danger'],\n        link\n      }];\n    }\n  }));\n  return apps;\n});\nconst notifyAdminsAboutRenewedApps = Meteor.bindEnvironment(function _notifyAdminsAboutRenewedApps(apps) {\n  if (!apps) {\n    return;\n  }\n\n  const renewedApps = apps.filter(app => app.getStatus() === AppStatus.DISABLED && app.getPreviousStatus() === AppStatus.INVALID_LICENSE_DISABLED);\n\n  if (renewedApps.length === 0) {\n    return;\n  }\n\n  const rocketCatMessage = 'There is one or more disabled apps with valid licenses. Go to Administration > Apps to review.';\n  Promise.await(sendMessagesToAdmins({\n    msgs: _ref3 => {\n      let {\n        adminUser\n      } = _ref3;\n      return {\n        msg: \"\".concat(TAPi18n.__(rocketCatMessage, adminUser.language))\n      };\n    }\n  }));\n});\nconst appsUpdateMarketplaceInfo = Meteor.bindEnvironment(function _appsUpdateMarketplaceInfo() {\n  const token = Promise.await(getWorkspaceAccessToken());\n  const baseUrl = Apps.getMarketplaceUrl();\n  const workspaceIdSetting = Promise.await(Settings.getValueById('Cloud_Workspace_Id'));\n  const currentSeats = Users.getActiveLocalUserCount();\n  const fullUrl = \"\".concat(baseUrl, \"/v1/workspaces/\").concat(workspaceIdSetting, \"/apps?seats=\").concat(currentSeats);\n  const options = {\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  };\n  let data = [];\n\n  try {\n    const result = HTTP.get(fullUrl, options);\n\n    if (Array.isArray(result.data)) {\n      data = result.data;\n    }\n  } catch (err) {\n    Apps.debugLog(err);\n  }\n\n  Promise.await(Apps.updateAppsMarketplaceInfo(data).then(notifyAdminsAboutInvalidApps).then(notifyAdminsAboutRenewedApps));\n});\nSyncedCron.add({\n  name: 'Apps-Engine:check',\n  schedule: parser => parser.text('at 4:00 am'),\n\n  job() {\n    appsUpdateMarketplaceInfo();\n  }\n\n});","map":{"version":3,"sources":["app/apps/server/cron.js"],"names":["module","export","appsUpdateMarketplaceInfo","Meteor","link","v","HTTP","SyncedCron","TAPi18n","AppStatus","Apps","getWorkspaceAccessToken","Users","sendMessagesToAdmins","Settings","notifyAdminsAboutInvalidApps","bindEnvironment","_notifyAdminsAboutInvalidApps","apps","hasInvalidApps","find","app","getLatestLicenseValidationResult","hasErrors","id","title","text","rocketCatMessage","Promise","await","msgs","adminUser","msg","__","language","banners","removeBannerById","_id","priority","modifiers","notifyAdminsAboutRenewedApps","_notifyAdminsAboutRenewedApps","renewedApps","filter","getStatus","DISABLED","getPreviousStatus","INVALID_LICENSE_DISABLED","length","_appsUpdateMarketplaceInfo","token","baseUrl","getMarketplaceUrl","workspaceIdSetting","getValueById","currentSeats","getActiveLocalUserCount","fullUrl","options","headers","Authorization","data","result","get","Array","isArray","err","debugLog","updateAppsMarketplaceInfo","then","add","name","schedule","parser","job"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,yBAAyB,EAAC,MAAIA;AAA/B,CAAd;AAAyE,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAM,CAACE,CAAD,EAAG;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,IAAJ;AAASN,MAAM,CAACI,IAAP,CAAY,aAAZ,EAA0B;AAACE,EAAAA,IAAI,CAACD,CAAD,EAAG;AAACC,IAAAA,IAAI,GAACD,CAAL;AAAO;;AAAhB,CAA1B,EAA4C,CAA5C;AAA+C,IAAIE,UAAJ;AAAeP,MAAM,CAACI,IAAP,CAAY,+BAAZ,EAA4C;AAACG,EAAAA,UAAU,CAACF,CAAD,EAAG;AAACE,IAAAA,UAAU,GAACF,CAAX;AAAa;;AAA5B,CAA5C,EAA0E,CAA1E;AAA6E,IAAIG,OAAJ;AAAYR,MAAM,CAACI,IAAP,CAAY,4BAAZ,EAAyC;AAACI,EAAAA,OAAO,CAACH,CAAD,EAAG;AAACG,IAAAA,OAAO,GAACH,CAAR;AAAU;;AAAtB,CAAzC,EAAiE,CAAjE;AAAoE,IAAII,SAAJ;AAAcT,MAAM,CAACI,IAAP,CAAY,+CAAZ,EAA4D;AAACK,EAAAA,SAAS,CAACJ,CAAD,EAAG;AAACI,IAAAA,SAAS,GAACJ,CAAV;AAAY;;AAA1B,CAA5D,EAAwF,CAAxF;AAA2F,IAAIK,IAAJ;AAASV,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA6B;AAACM,EAAAA,IAAI,CAACL,CAAD,EAAG;AAACK,IAAAA,IAAI,GAACL,CAAL;AAAO;;AAAhB,CAA7B,EAA+C,CAA/C;AAAkD,IAAIM,uBAAJ;AAA4BX,MAAM,CAACI,IAAP,CAAY,oBAAZ,EAAiC;AAACO,EAAAA,uBAAuB,CAACN,CAAD,EAAG;AAACM,IAAAA,uBAAuB,GAACN,CAAxB;AAA0B;;AAAtD,CAAjC,EAAyF,CAAzF;AAA4F,IAAIO,KAAJ;AAAUZ,MAAM,CAACI,IAAP,CAAY,qBAAZ,EAAkC;AAACQ,EAAAA,KAAK,CAACP,CAAD,EAAG;AAACO,IAAAA,KAAK,GAACP,CAAN;AAAQ;;AAAlB,CAAlC,EAAsD,CAAtD;AAAyD,IAAIQ,oBAAJ;AAAyBb,MAAM,CAACI,IAAP,CAAY,0CAAZ,EAAuD;AAACS,EAAAA,oBAAoB,CAACR,CAAD,EAAG;AAACQ,IAAAA,oBAAoB,GAACR,CAArB;AAAuB;;AAAhD,CAAvD,EAAyG,CAAzG;AAA4G,IAAIS,QAAJ;AAAad,MAAM,CAACI,IAAP,CAAY,yBAAZ,EAAsC;AAACU,EAAAA,QAAQ,CAACT,CAAD,EAAG;AAACS,IAAAA,QAAQ,GAACT,CAAT;AAAW;;AAAxB,CAAtC,EAAgE,CAAhE;AAY91B,MAAMU,4BAA4B,GAAGZ,MAAM,CAACa,eAAP,CAAuB,SAASC,6BAAT,CAAuCC,IAAvC,EAA6C;AACxG,MAAI,CAACA,IAAL,EAAW;AACV;AACA;;AAED,QAAMC,cAAc,GAAG,CAAC,CAACD,IAAI,CAACE,IAAL,CAAWC,GAAD,IAASA,GAAG,CAACC,gCAAJ,GAAuCC,SAA1D,CAAzB;;AAEA,MAAI,CAACJ,cAAL,EAAqB;AACpB;AACA;;AAED,QAAMK,EAAE,GAAG,uBAAX;AACA,QAAMC,KAAK,GAAG,SAAd;AACA,QAAMC,IAAI,GAAG,sEAAb;AACA,QAAMC,gBAAgB,GAAG,uFAAzB;AACA,QAAMvB,IAAI,GAAG,aAAb;AAEAwB,EAAAA,OAAO,CAACC,KAAR,CACChB,oBAAoB,CAAC;AACpBiB,IAAAA,IAAI,EAAE;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAoB;AACzBC,QAAAA,GAAG,aAAMxB,OAAO,CAACyB,EAAR,CAAWR,KAAX,EAAkBM,SAAS,CAACG,QAA5B,CAAN,gBAAiD1B,OAAO,CAACyB,EAAR,CAAWN,gBAAX,EAA6BI,SAAS,CAACG,QAAvC,CAAjD;AADsB,OAApB;AAAA,KADc;AAIpBC,IAAAA,OAAO,EAAE,SAAmB;AAAA,UAAlB;AAAEJ,QAAAA;AAAF,OAAkB;AAC3BnB,MAAAA,KAAK,CAACwB,gBAAN,CAAuBL,SAAS,CAACM,GAAjC,EAAsC;AAAEb,QAAAA;AAAF,OAAtC;AAEA,aAAO,CACN;AACCA,QAAAA,EADD;AAECc,QAAAA,QAAQ,EAAE,EAFX;AAGCb,QAAAA,KAHD;AAICC,QAAAA,IAJD;AAKCa,QAAAA,SAAS,EAAE,CAAC,QAAD,CALZ;AAMCnC,QAAAA;AAND,OADM,CAAP;AAUA;AAjBmB,GAAD,CADrB;AAsBA,SAAOc,IAAP;AACA,CAxCoC,CAArC;AA0CA,MAAMsB,4BAA4B,GAAGrC,MAAM,CAACa,eAAP,CAAuB,SAASyB,6BAAT,CAAuCvB,IAAvC,EAA6C;AACxG,MAAI,CAACA,IAAL,EAAW;AACV;AACA;;AAED,QAAMwB,WAAW,GAAGxB,IAAI,CAACyB,MAAL,CAClBtB,GAAD,IAASA,GAAG,CAACuB,SAAJ,OAAoBnC,SAAS,CAACoC,QAA9B,IAA0CxB,GAAG,CAACyB,iBAAJ,OAA4BrC,SAAS,CAACsC,wBADtE,CAApB;;AAIA,MAAIL,WAAW,CAACM,MAAZ,KAAuB,CAA3B,EAA8B;AAC7B;AACA;;AAED,QAAMrB,gBAAgB,GAAG,gGAAzB;AAEAC,EAAAA,OAAO,CAACC,KAAR,CACChB,oBAAoB,CAAC;AACpBiB,IAAAA,IAAI,EAAE;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAoB;AAAEC,QAAAA,GAAG,YAAKxB,OAAO,CAACyB,EAAR,CAAWN,gBAAX,EAA6BI,SAAS,CAACG,QAAvC,CAAL;AAAL,OAApB;AAAA;AADc,GAAD,CADrB;AAKA,CApBoC,CAArC;AAsBO,MAAMhC,yBAAyB,GAAGC,MAAM,CAACa,eAAP,CAAuB,SAASiC,0BAAT,GAAsC;AACrG,QAAMC,KAAK,GAAGtB,OAAO,CAACC,KAAR,CAAclB,uBAAuB,EAArC,CAAd;AACA,QAAMwC,OAAO,GAAGzC,IAAI,CAAC0C,iBAAL,EAAhB;AACA,QAAMC,kBAAkB,GAAGzB,OAAO,CAACC,KAAR,CAAcf,QAAQ,CAACwC,YAAT,CAAsB,oBAAtB,CAAd,CAA3B;AAEA,QAAMC,YAAY,GAAG3C,KAAK,CAAC4C,uBAAN,EAArB;AAEA,QAAMC,OAAO,aAAMN,OAAN,4BAA+BE,kBAA/B,yBAAgEE,YAAhE,CAAb;AACA,QAAMG,OAAO,GAAG;AACfC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,mBAAYV,KAAZ;AADL;AADM,GAAhB;AAMA,MAAIW,IAAI,GAAG,EAAX;;AAEA,MAAI;AACH,UAAMC,MAAM,GAAGxD,IAAI,CAACyD,GAAL,CAASN,OAAT,EAAkBC,OAAlB,CAAf;;AAEA,QAAIM,KAAK,CAACC,OAAN,CAAcH,MAAM,CAACD,IAArB,CAAJ,EAAgC;AAC/BA,MAAAA,IAAI,GAAGC,MAAM,CAACD,IAAd;AACA;AACD,GAND,CAME,OAAOK,GAAP,EAAY;AACbxD,IAAAA,IAAI,CAACyD,QAAL,CAAcD,GAAd;AACA;;AAEDtC,EAAAA,OAAO,CAACC,KAAR,CAAcnB,IAAI,CAAC0D,yBAAL,CAA+BP,IAA/B,EAAqCQ,IAArC,CAA0CtD,4BAA1C,EAAwEsD,IAAxE,CAA6E7B,4BAA7E,CAAd;AACA,CA3BwC,CAAlC;AA6BPjC,UAAU,CAAC+D,GAAX,CAAe;AACdC,EAAAA,IAAI,EAAE,mBADQ;AAEdC,EAAAA,QAAQ,EAAGC,MAAD,IAAYA,MAAM,CAAC/C,IAAP,CAAY,YAAZ,CAFR;;AAGdgD,EAAAA,GAAG,GAAG;AACLxE,IAAAA,yBAAyB;AACzB;;AALa,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { SyncedCron } from 'meteor/littledata:synced-cron';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { AppStatus } from '@rocket.chat/apps-engine/definition/AppStatus';\n\nimport { Apps } from './orchestrator';\nimport { getWorkspaceAccessToken } from '../../cloud/server';\nimport { Users } from '../../models/server';\nimport { sendMessagesToAdmins } from '../../../server/lib/sendMessagesToAdmins';\nimport { Settings } from '../../models/server/raw';\n\nconst notifyAdminsAboutInvalidApps = Meteor.bindEnvironment(function _notifyAdminsAboutInvalidApps(apps) {\n\tif (!apps) {\n\t\treturn;\n\t}\n\n\tconst hasInvalidApps = !!apps.find((app) => app.getLatestLicenseValidationResult().hasErrors);\n\n\tif (!hasInvalidApps) {\n\t\treturn;\n\t}\n\n\tconst id = 'someAppInInvalidState';\n\tconst title = 'Warning';\n\tconst text = 'There is one or more apps in an invalid state. Click here to review.';\n\tconst rocketCatMessage = 'There is one or more apps in an invalid state. Go to Administration > Apps to review.';\n\tconst link = '/admin/apps';\n\n\tPromise.await(\n\t\tsendMessagesToAdmins({\n\t\t\tmsgs: ({ adminUser }) => ({\n\t\t\t\tmsg: `*${TAPi18n.__(title, adminUser.language)}*\\n${TAPi18n.__(rocketCatMessage, adminUser.language)}`,\n\t\t\t}),\n\t\t\tbanners: ({ adminUser }) => {\n\t\t\t\tUsers.removeBannerById(adminUser._id, { id });\n\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tpriority: 10,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tmodifiers: ['danger'],\n\t\t\t\t\t\tlink,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t},\n\t\t}),\n\t);\n\n\treturn apps;\n});\n\nconst notifyAdminsAboutRenewedApps = Meteor.bindEnvironment(function _notifyAdminsAboutRenewedApps(apps) {\n\tif (!apps) {\n\t\treturn;\n\t}\n\n\tconst renewedApps = apps.filter(\n\t\t(app) => app.getStatus() === AppStatus.DISABLED && app.getPreviousStatus() === AppStatus.INVALID_LICENSE_DISABLED,\n\t);\n\n\tif (renewedApps.length === 0) {\n\t\treturn;\n\t}\n\n\tconst rocketCatMessage = 'There is one or more disabled apps with valid licenses. Go to Administration > Apps to review.';\n\n\tPromise.await(\n\t\tsendMessagesToAdmins({\n\t\t\tmsgs: ({ adminUser }) => ({ msg: `${TAPi18n.__(rocketCatMessage, adminUser.language)}` }),\n\t\t}),\n\t);\n});\n\nexport const appsUpdateMarketplaceInfo = Meteor.bindEnvironment(function _appsUpdateMarketplaceInfo() {\n\tconst token = Promise.await(getWorkspaceAccessToken());\n\tconst baseUrl = Apps.getMarketplaceUrl();\n\tconst workspaceIdSetting = Promise.await(Settings.getValueById('Cloud_Workspace_Id'));\n\n\tconst currentSeats = Users.getActiveLocalUserCount();\n\n\tconst fullUrl = `${baseUrl}/v1/workspaces/${workspaceIdSetting}/apps?seats=${currentSeats}`;\n\tconst options = {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t};\n\n\tlet data = [];\n\n\ttry {\n\t\tconst result = HTTP.get(fullUrl, options);\n\n\t\tif (Array.isArray(result.data)) {\n\t\t\tdata = result.data;\n\t\t}\n\t} catch (err) {\n\t\tApps.debugLog(err);\n\t}\n\n\tPromise.await(Apps.updateAppsMarketplaceInfo(data).then(notifyAdminsAboutInvalidApps).then(notifyAdminsAboutRenewedApps));\n});\n\nSyncedCron.add({\n\tname: 'Apps-Engine:check',\n\tschedule: (parser) => parser.text('at 4:00 am'),\n\tjob() {\n\t\tappsUpdateMarketplaceInfo();\n\t},\n});\n"]},"sourceType":"module","hash":"b2850cc650fb22b7722130f8168d27c2889cd6d7"}

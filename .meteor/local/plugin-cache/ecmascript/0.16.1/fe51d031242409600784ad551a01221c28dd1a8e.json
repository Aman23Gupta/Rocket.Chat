{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/converters/uploads.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/converters/uploads.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/converters/uploads.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/apps/server/converters/uploads.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/converters/uploads.js"}},"code":"module.export({\n  AppUploadsConverter: () => AppUploadsConverter\n});\nlet transformMappedData;\nmodule.link(\"../../lib/misc/transformMappedData\", {\n  transformMappedData(v) {\n    transformMappedData = v;\n  }\n\n}, 0);\nlet Uploads;\nmodule.link(\"../../../models/server/raw\", {\n  Uploads(v) {\n    Uploads = v;\n  }\n\n}, 1);\n\nclass AppUploadsConverter {\n  constructor(orch) {\n    this.orch = orch;\n  }\n\n  convertById(id) {\n    const upload = Promise.await(Uploads.findOneById(id));\n    return this.convertToApp(upload);\n  }\n\n  convertToApp(upload) {\n    if (!upload) {\n      return undefined;\n    }\n\n    const map = {\n      id: '_id',\n      name: 'name',\n      size: 'size',\n      type: 'type',\n      store: 'store',\n      description: 'description',\n      complete: 'complete',\n      uploading: 'uploading',\n      extension: 'extension',\n      progress: 'progress',\n      etag: 'etag',\n      path: 'path',\n      token: 'token',\n      url: 'url',\n      updatedAt: '_updatedAt',\n      uploadedAt: 'uploadedAt',\n      room: upload => {\n        const result = this.orch.getConverters().get('rooms').convertById(upload.rid);\n        delete upload.rid;\n        return result;\n      },\n      user: upload => {\n        if (!upload.userId) {\n          return undefined;\n        }\n\n        const result = this.orch.getConverters().get('users').convertById(upload.userId);\n        delete upload.userId;\n        return result;\n      },\n      visitor: upload => {\n        if (!upload.visitorToken) {\n          return undefined;\n        }\n\n        const result = this.orch.getConverters().get('visitors').convertByToken(upload.visitorToken);\n        delete upload.visitorToken;\n        return result;\n      }\n    };\n    return transformMappedData(upload, map);\n  }\n\n  convertToRocketChat(upload) {\n    if (!upload) {\n      return undefined;\n    }\n\n    const {\n      id: userId\n    } = upload.user || {};\n    const {\n      token: visitorToken\n    } = upload.visitor || {};\n    const {\n      id: rid\n    } = upload.room;\n    const newUpload = {\n      _id: upload.id,\n      name: upload.name,\n      size: upload.size,\n      type: upload.type,\n      extension: upload.extension,\n      description: upload.description,\n      store: upload.store,\n      etag: upload.etag,\n      complete: upload.complete,\n      uploading: upload.uploading,\n      progress: upload.progress,\n      token: upload.token,\n      url: upload.url,\n      _updatedAt: upload.updatedAt,\n      uploadedAt: upload.uploadedAt,\n      rid,\n      userId,\n      visitorToken\n    };\n    return Object.assign(newUpload, upload._unmappedProperties_);\n  }\n\n}","map":{"version":3,"sources":["app/apps/server/converters/uploads.js"],"names":["module","export","AppUploadsConverter","transformMappedData","link","v","Uploads","constructor","orch","convertById","id","upload","Promise","await","findOneById","convertToApp","undefined","map","name","size","type","store","description","complete","uploading","extension","progress","etag","path","token","url","updatedAt","uploadedAt","room","result","getConverters","get","rid","user","userId","visitor","visitorToken","convertByToken","convertToRocketChat","newUpload","_id","_updatedAt","Object","assign","_unmappedProperties_"],"mappings":"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","sourcesContent":["import { transformMappedData } from '../../lib/misc/transformMappedData';\nimport { Uploads } from '../../../models/server/raw';\n\nexport class AppUploadsConverter {\n\tconstructor(orch) {\n\t\tthis.orch = orch;\n\t}\n\n\tconvertById(id) {\n\t\tconst upload = Promise.await(Uploads.findOneById(id));\n\n\t\treturn this.convertToApp(upload);\n\t}\n\n\tconvertToApp(upload) {\n\t\tif (!upload) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst map = {\n\t\t\tid: '_id',\n\t\t\tname: 'name',\n\t\t\tsize: 'size',\n\t\t\ttype: 'type',\n\t\t\tstore: 'store',\n\t\t\tdescription: 'description',\n\t\t\tcomplete: 'complete',\n\t\t\tuploading: 'uploading',\n\t\t\textension: 'extension',\n\t\t\tprogress: 'progress',\n\t\t\tetag: 'etag',\n\t\t\tpath: 'path',\n\t\t\ttoken: 'token',\n\t\t\turl: 'url',\n\t\t\tupdatedAt: '_updatedAt',\n\t\t\tuploadedAt: 'uploadedAt',\n\t\t\troom: (upload) => {\n\t\t\t\tconst result = this.orch.getConverters().get('rooms').convertById(upload.rid);\n\t\t\t\tdelete upload.rid;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tuser: (upload) => {\n\t\t\t\tif (!upload.userId) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst result = this.orch.getConverters().get('users').convertById(upload.userId);\n\t\t\t\tdelete upload.userId;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tvisitor: (upload) => {\n\t\t\t\tif (!upload.visitorToken) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst result = this.orch.getConverters().get('visitors').convertByToken(upload.visitorToken);\n\t\t\t\tdelete upload.visitorToken;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t};\n\n\t\treturn transformMappedData(upload, map);\n\t}\n\n\tconvertToRocketChat(upload) {\n\t\tif (!upload) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst { id: userId } = upload.user || {};\n\t\tconst { token: visitorToken } = upload.visitor || {};\n\t\tconst { id: rid } = upload.room;\n\n\t\tconst newUpload = {\n\t\t\t_id: upload.id,\n\t\t\tname: upload.name,\n\t\t\tsize: upload.size,\n\t\t\ttype: upload.type,\n\t\t\textension: upload.extension,\n\t\t\tdescription: upload.description,\n\t\t\tstore: upload.store,\n\t\t\tetag: upload.etag,\n\t\t\tcomplete: upload.complete,\n\t\t\tuploading: upload.uploading,\n\t\t\tprogress: upload.progress,\n\t\t\ttoken: upload.token,\n\t\t\turl: upload.url,\n\t\t\t_updatedAt: upload.updatedAt,\n\t\t\tuploadedAt: upload.uploadedAt,\n\t\t\trid,\n\t\t\tuserId,\n\t\t\tvisitorToken,\n\t\t};\n\n\t\treturn Object.assign(newUpload, upload._unmappedProperties_);\n\t}\n}\n"]},"sourceType":"module","hash":"fe51d031242409600784ad551a01221c28dd1a8e"}

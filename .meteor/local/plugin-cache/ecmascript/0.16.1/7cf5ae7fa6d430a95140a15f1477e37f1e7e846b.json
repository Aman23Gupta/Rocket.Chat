{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/message-snippet/server/methods/snippetMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/message-snippet/server/methods/snippetMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/message-snippet/server/methods/snippetMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/message-snippet/server/methods/snippetMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/message-snippet/server/methods/snippetMessage.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Subscriptions, Messages, Users, Rooms;\nmodule.link(\"../../../models\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\nlet isTheLastMessage;\nmodule.link(\"../../../lib\", {\n  isTheLastMessage(v) {\n    isTheLastMessage = v;\n  }\n\n}, 4);\nMeteor.methods({\n  snippetMessage(message, filename) {\n    if (Meteor.userId() == null) {\n      // noinspection JSUnresolvedFunction\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'snippetMessage'\n      });\n    }\n\n    const room = Rooms.findOne({\n      _id: message.rid\n    });\n\n    if (typeof room === 'undefined' || room === null) {\n      return false;\n    }\n\n    const subscription = Subscriptions.findOneByRoomIdAndUserId(message.rid, Meteor.userId(), {\n      fields: {\n        _id: 1\n      }\n    });\n\n    if (!subscription) {\n      return false;\n    }\n\n    const me = Users.findOneById(Meteor.userId()); // If we keep history of edits, insert a new message to store history information\n\n    if (settings.get('Message_KeepHistory')) {\n      Messages.cloneAndSaveAsHistoryById(message._id, me);\n    }\n\n    message.snippeted = true;\n    message.snippetedAt = Date.now;\n    message.snippetedBy = {\n      _id: Meteor.userId(),\n      username: me.username\n    };\n    message = callbacks.run('beforeSaveMessage', message); // Create the SnippetMessage\n\n    Messages.setSnippetedByIdAndUserId(message, filename, message.snippetedBy, message.snippeted, Date.now, filename);\n\n    if (isTheLastMessage(room, message)) {\n      Rooms.setLastMessageSnippeted(room._id, message, filename, message.snippetedBy, message.snippeted, Date.now, filename);\n    }\n\n    Messages.createWithTypeRoomIdMessageAndUser('message_snippeted', message.rid, '', me, {\n      snippetId: message._id,\n      snippetName: filename\n    });\n  }\n\n});","map":{"version":3,"sources":["app/message-snippet/server/methods/snippetMessage.js"],"names":["Meteor","module","link","v","Subscriptions","Messages","Users","Rooms","settings","callbacks","isTheLastMessage","methods","snippetMessage","message","filename","userId","Error","method","room","findOne","_id","rid","subscription","findOneByRoomIdAndUserId","fields","me","findOneById","get","cloneAndSaveAsHistoryById","snippeted","snippetedAt","Date","now","snippetedBy","username","run","setSnippetedByIdAndUserId","setLastMessageSnippeted","createWithTypeRoomIdMessageAndUser","snippetId","snippetName"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Subscriptions, Messages, Users, Rooms } from '../../../models';\nimport { settings } from '../../../settings';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { isTheLastMessage } from '../../../lib';\n\nMeteor.methods({\n\tsnippetMessage(message, filename) {\n\t\tif (Meteor.userId() == null) {\n\t\t\t// noinspection JSUnresolvedFunction\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'snippetMessage' });\n\t\t}\n\n\t\tconst room = Rooms.findOne({ _id: message.rid });\n\n\t\tif (typeof room === 'undefined' || room === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(message.rid, Meteor.userId(), {\n\t\t\tfields: { _id: 1 },\n\t\t});\n\t\tif (!subscription) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst me = Users.findOneById(Meteor.userId());\n\n\t\t// If we keep history of edits, insert a new message to store history information\n\t\tif (settings.get('Message_KeepHistory')) {\n\t\t\tMessages.cloneAndSaveAsHistoryById(message._id, me);\n\t\t}\n\n\t\tmessage.snippeted = true;\n\t\tmessage.snippetedAt = Date.now;\n\t\tmessage.snippetedBy = {\n\t\t\t_id: Meteor.userId(),\n\t\t\tusername: me.username,\n\t\t};\n\n\t\tmessage = callbacks.run('beforeSaveMessage', message);\n\n\t\t// Create the SnippetMessage\n\t\tMessages.setSnippetedByIdAndUserId(message, filename, message.snippetedBy, message.snippeted, Date.now, filename);\n\t\tif (isTheLastMessage(room, message)) {\n\t\t\tRooms.setLastMessageSnippeted(room._id, message, filename, message.snippetedBy, message.snippeted, Date.now, filename);\n\t\t}\n\n\t\tMessages.createWithTypeRoomIdMessageAndUser('message_snippeted', message.rid, '', me, {\n\t\t\tsnippetId: message._id,\n\t\t\tsnippetName: filename,\n\t\t});\n\t},\n});\n"]},"sourceType":"module","hash":"7cf5ae7fa6d430a95140a15f1477e37f1e7e846b"}

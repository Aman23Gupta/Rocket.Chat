{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v183.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v183.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v183.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v183.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v183.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 2);\nlet Rooms, Messages, Subscriptions, Users;\nmodule.link(\"../../../app/models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 3);\nlet Settings, Uploads;\nmodule.link(\"../../../app/models/server/raw\", {\n  Settings(v) {\n    Settings = v;\n  },\n\n  Uploads(v) {\n    Uploads = v;\n  }\n\n}, 4);\n\nconst unifyRooms = room => {\n  // verify if other DM already exists\n  const other = Rooms.findOne({\n    _id: {\n      $ne: room._id\n    },\n    t: 'd',\n    uids: room.uids\n  }); // we need to at least change the _id of the current room, so remove it\n\n  Rooms.remove({\n    _id: room._id\n  });\n  const newId = other && other._id || Random.id();\n\n  if (!other) {\n    // create the same room with different _id\n    Rooms.insert(_objectSpread(_objectSpread({}, room), {}, {\n      _id: newId\n    })); // update subscription to point to new room _id\n\n    Subscriptions.update({\n      rid: room._id\n    }, {\n      $set: {\n        rid: newId\n      }\n    }, {\n      multi: true\n    });\n    return newId;\n  } // the other room exists already, so just remove the subscription of the wrong room\n\n\n  Subscriptions.remove({\n    rid: room._id\n  });\n  return newId;\n};\n\nconst fixSelfDMs = () => {\n  Rooms.find({\n    t: 'd',\n    uids: {\n      $size: 1\n    }\n  }).forEach(room => {\n    if (!Array.isArray(room.uids) || room._id !== room.uids[0]) {\n      return;\n    }\n\n    const correctId = unifyRooms(room); // move things to correct room\n\n    Messages.update({\n      rid: room._id\n    }, {\n      $set: {\n        rid: correctId\n      }\n    }, {\n      multi: true\n    }); // Fix error of upload permission check using Meteor.userId()\n\n    Meteor.runAsUser(room.uids[0], () => Promise.asyncApply(() => {\n      Promise.await(Uploads.update({\n        rid: room._id\n      }, {\n        $set: {\n          rid: correctId\n        }\n      }, {\n        multi: true\n      }));\n    }));\n  });\n};\n\nconst fixDiscussions = () => {\n  Rooms.find({\n    t: 'd',\n    prid: {\n      $exists: true\n    }\n  }, {\n    fields: {\n      _id: 1\n    }\n  }).forEach(_ref => {\n    let {\n      _id\n    } = _ref;\n    const {\n      u\n    } = Messages.findOne({\n      drid: _id\n    }, {\n      fields: {\n        u: 1\n      }\n    }) || {};\n    Rooms.update({\n      _id\n    }, {\n      $set: {\n        t: 'p',\n        name: Random.id(),\n        u,\n        ro: false,\n        default: false,\n        sysMes: true\n      },\n      $unset: {\n        usernames: 1,\n        uids: 1\n      }\n    });\n  });\n};\n\nconst fixUserSearch = () => Promise.asyncApply(() => {\n  var _setting$value;\n\n  const setting = Promise.await(Settings.findOneById('Accounts_SearchFields', {\n    projection: {\n      value: 1\n    }\n  }));\n  const value = setting === null || setting === void 0 ? void 0 : (_setting$value = setting.value) === null || _setting$value === void 0 ? void 0 : _setting$value.trim();\n\n  if (value === '' || value === 'username, name') {\n    Promise.await(Settings.updateValueById('Accounts_SearchFields', 'username, name, bio'));\n  }\n\n  Users.tryDropIndex('name_text_username_text_bio_text');\n});\n\naddMigration({\n  version: 183,\n\n  up() {\n    fixDiscussions();\n    fixSelfDMs();\n    return fixUserSearch();\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v183.js"],"names":["_objectSpread","module","link","default","v","Meteor","Random","addMigration","Rooms","Messages","Subscriptions","Users","Settings","Uploads","unifyRooms","room","other","findOne","_id","$ne","t","uids","remove","newId","id","insert","update","rid","$set","multi","fixSelfDMs","find","$size","forEach","Array","isArray","correctId","runAsUser","fixDiscussions","prid","$exists","fields","u","drid","name","ro","sysMes","$unset","usernames","fixUserSearch","setting","findOneById","projection","value","trim","updateValueById","tryDropIndex","version","up"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { addMigration } from '../../lib/migrations';\nimport { Rooms, Messages, Subscriptions, Users } from '../../../app/models/server';\nimport { Settings, Uploads } from '../../../app/models/server/raw';\n\nconst unifyRooms = (room) => {\n\t// verify if other DM already exists\n\tconst other = Rooms.findOne({\n\t\t_id: { $ne: room._id },\n\t\tt: 'd',\n\t\tuids: room.uids,\n\t});\n\n\t// we need to at least change the _id of the current room, so remove it\n\tRooms.remove({ _id: room._id });\n\n\tconst newId = (other && other._id) || Random.id();\n\n\tif (!other) {\n\t\t// create the same room with different _id\n\t\tRooms.insert({\n\t\t\t...room,\n\t\t\t_id: newId,\n\t\t});\n\n\t\t// update subscription to point to new room _id\n\t\tSubscriptions.update(\n\t\t\t{ rid: room._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\trid: newId,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ multi: true },\n\t\t);\n\n\t\treturn newId;\n\t}\n\n\t// the other room exists already, so just remove the subscription of the wrong room\n\tSubscriptions.remove({ rid: room._id });\n\n\treturn newId;\n};\n\nconst fixSelfDMs = () => {\n\tRooms.find({\n\t\tt: 'd',\n\t\tuids: { $size: 1 },\n\t}).forEach((room) => {\n\t\tif (!Array.isArray(room.uids) || room._id !== room.uids[0]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst correctId = unifyRooms(room);\n\n\t\t// move things to correct room\n\t\tMessages.update(\n\t\t\t{ rid: room._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\trid: correctId,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ multi: true },\n\t\t);\n\n\t\t// Fix error of upload permission check using Meteor.userId()\n\t\tMeteor.runAsUser(room.uids[0], async () => {\n\t\t\tawait Uploads.update(\n\t\t\t\t{ rid: room._id },\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\trid: correctId,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{ multi: true },\n\t\t\t);\n\t\t});\n\t});\n};\n\nconst fixDiscussions = () => {\n\tRooms.find({ t: 'd', prid: { $exists: true } }, { fields: { _id: 1 } }).forEach(({ _id }) => {\n\t\tconst { u } = Messages.findOne({ drid: _id }, { fields: { u: 1 } }) || {};\n\n\t\tRooms.update(\n\t\t\t{ _id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tt: 'p',\n\t\t\t\t\tname: Random.id(),\n\t\t\t\t\tu,\n\t\t\t\t\tro: false,\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tsysMes: true,\n\t\t\t\t},\n\t\t\t\t$unset: {\n\t\t\t\t\tusernames: 1,\n\t\t\t\t\tuids: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t});\n};\n\nconst fixUserSearch = async () => {\n\tconst setting = await Settings.findOneById('Accounts_SearchFields', { projection: { value: 1 } });\n\tconst value = setting?.value?.trim();\n\tif (value === '' || value === 'username, name') {\n\t\tawait Settings.updateValueById('Accounts_SearchFields', 'username, name, bio');\n\t}\n\n\tUsers.tryDropIndex('name_text_username_text_bio_text');\n};\n\naddMigration({\n\tversion: 183,\n\tup() {\n\t\tfixDiscussions();\n\t\tfixSelfDMs();\n\t\treturn fixUserSearch();\n\t},\n});\n"]},"sourceType":"module","hash":"f6488e88b04f830caa66882dced0d8bcc6512305"}

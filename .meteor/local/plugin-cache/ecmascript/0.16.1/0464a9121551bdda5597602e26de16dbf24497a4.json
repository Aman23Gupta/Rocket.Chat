{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/lib/http.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/federation/server/lib/http.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/lib/http.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/federation/server/lib/http.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/federation/server/lib/http.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  federationRequest: () => federationRequest,\n  federationRequestToPeer: () => federationRequestToPeer\n});\nlet MeteorHTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    MeteorHTTP = v;\n  }\n\n}, 0);\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 1);\nlet httpLogger;\nmodule.link(\"./logger\", {\n  httpLogger(v) {\n    httpLogger = v;\n  }\n\n}, 2);\nlet getFederationDomain;\nmodule.link(\"./getFederationDomain\", {\n  getFederationDomain(v) {\n    getFederationDomain = v;\n  }\n\n}, 3);\nlet search;\nmodule.link(\"./dns\", {\n  search(v) {\n    search = v;\n  }\n\n}, 4);\nlet encrypt;\nmodule.link(\"./crypt\", {\n  encrypt(v) {\n    encrypt = v;\n  }\n\n}, 5);\n\nfunction federationRequest(method, url, body, headers) {\n  return Promise.asyncApply(() => {\n    let peerKey = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let data = null;\n\n    if ((method === 'POST' || method === 'PUT') && body) {\n      data = EJSON.toJSONValue(body);\n\n      if (peerKey) {\n        data = Promise.await(encrypt(data, peerKey));\n      }\n    }\n\n    httpLogger.debug(\"[\".concat(method, \"] \").concat(url));\n    return MeteorHTTP.call(method, url, {\n      data,\n      timeout: 2000,\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        'x-federation-domain': getFederationDomain()\n      })\n    });\n  });\n}\n\nfunction federationRequestToPeer(method, peerDomain, uri, body) {\n  return Promise.asyncApply(() => {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    const ignoreErrors = peerDomain === getFederationDomain() ? false : options.ignoreErrors;\n    const {\n      url: baseUrl,\n      publicKey\n    } = search(peerDomain);\n    let peerKey = null; // Only encrypt if it is not local\n\n    if (peerDomain !== getFederationDomain()) {\n      peerKey = publicKey;\n    }\n\n    let result;\n\n    try {\n      httpLogger.debug({\n        msg: 'federationRequestToPeer',\n        url: \"\".concat(baseUrl).concat(uri)\n      });\n      result = Promise.await(federationRequest(method, \"\".concat(baseUrl).concat(uri), body, options.headers || {}, peerKey));\n    } catch (err) {\n      httpLogger.error({\n        msg: \"\".concat(ignoreErrors ? '[IGNORED] ' : '', \"Error\"),\n        err\n      });\n\n      if (!ignoreErrors) {\n        throw err;\n      } else {\n        return {\n          success: false\n        };\n      }\n    }\n\n    return {\n      success: true,\n      data: result.data\n    };\n  });\n}","map":{"version":3,"sources":["app/federation/server/lib/http.js"],"names":["_objectSpread","module","link","default","v","export","federationRequest","federationRequestToPeer","MeteorHTTP","HTTP","EJSON","httpLogger","getFederationDomain","search","encrypt","method","url","body","headers","peerKey","data","toJSONValue","debug","call","timeout","peerDomain","uri","options","ignoreErrors","baseUrl","publicKey","result","msg","err","error","success"],"mappings":"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","sourcesContent":["import { HTTP as MeteorHTTP } from 'meteor/http';\nimport { EJSON } from 'meteor/ejson';\n\nimport { httpLogger } from './logger';\nimport { getFederationDomain } from './getFederationDomain';\nimport { search } from './dns';\nimport { encrypt } from './crypt';\n\nexport async function federationRequest(method, url, body, headers, peerKey = null) {\n\tlet data = null;\n\n\tif ((method === 'POST' || method === 'PUT') && body) {\n\t\tdata = EJSON.toJSONValue(body);\n\n\t\tif (peerKey) {\n\t\t\tdata = await encrypt(data, peerKey);\n\t\t}\n\t}\n\n\thttpLogger.debug(`[${method}] ${url}`);\n\n\treturn MeteorHTTP.call(method, url, {\n\t\tdata,\n\t\ttimeout: 2000,\n\t\theaders: { ...headers, 'x-federation-domain': getFederationDomain() },\n\t});\n}\n\nexport async function federationRequestToPeer(method, peerDomain, uri, body, options = {}) {\n\tconst ignoreErrors = peerDomain === getFederationDomain() ? false : options.ignoreErrors;\n\n\tconst { url: baseUrl, publicKey } = search(peerDomain);\n\n\tlet peerKey = null;\n\n\t// Only encrypt if it is not local\n\tif (peerDomain !== getFederationDomain()) {\n\t\tpeerKey = publicKey;\n\t}\n\n\tlet result;\n\n\ttry {\n\t\thttpLogger.debug({ msg: 'federationRequestToPeer', url: `${baseUrl}${uri}` });\n\n\t\tresult = await federationRequest(method, `${baseUrl}${uri}`, body, options.headers || {}, peerKey);\n\t} catch (err) {\n\t\thttpLogger.error({ msg: `${ignoreErrors ? '[IGNORED] ' : ''}Error`, err });\n\n\t\tif (!ignoreErrors) {\n\t\t\tthrow err;\n\t\t} else {\n\t\t\treturn { success: false };\n\t\t}\n\t}\n\n\treturn { success: true, data: result.data };\n}\n"]},"sourceType":"module","hash":"0464a9121551bdda5597602e26de16dbf24497a4"}

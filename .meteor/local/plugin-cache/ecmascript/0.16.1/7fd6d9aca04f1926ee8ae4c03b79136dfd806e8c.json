{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/Webdav/server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/ufs/Webdav/server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/Webdav/server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/file-upload/ufs/Webdav/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/ufs/Webdav/server.js"}},"code":"module.export({\n  WebdavStore: () => WebdavStore\n});\nlet stream;\nmodule.link(\"stream\", {\n  default(v) {\n    stream = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet UploadFS;\nmodule.link(\"meteor/jalik:ufs\", {\n  UploadFS(v) {\n    UploadFS = v;\n  }\n\n}, 2);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\nlet WebdavClientAdapter;\nmodule.link(\"../../../webdav/server/lib/webdavClientAdapter\", {\n  WebdavClientAdapter(v) {\n    WebdavClientAdapter = v;\n  }\n\n}, 4);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 5);\n\nclass WebdavStore extends UploadFS.Store {\n  constructor(options) {\n    super(options);\n    const {\n      server,\n      username,\n      password\n    } = options.connection.credentials;\n    const client = new WebdavClientAdapter(server, {\n      username,\n      password\n    });\n\n    options.getPath = function (file) {\n      if (options.uploadFolderPath[options.uploadFolderPath.length - 1] !== '/') {\n        options.uploadFolderPath += '/';\n      }\n\n      return options.uploadFolderPath + file._id;\n    };\n\n    client.stat(options.uploadFolderPath).catch(err => {\n      if (err.message.toLowerCase() === 'not found') {\n        client.createDirectory(options.uploadFolderPath);\n      } else if (err.message.toLowerCase() === 'unauthorized') {\n        console.warn('File upload is unauthorized to connect on Webdav, please verify your credentials');\n      }\n    });\n    /**\n     * Returns the file path\n     * @param file\n     * @return {string}\n     */\n\n    this.getPath = function (file) {\n      if (file.Webdav) {\n        return file.Webdav.path;\n      }\n    };\n    /**\n     * Creates the file in the col lection\n     * @param file\n     * @param callback\n     * @return {string}\n     */\n\n\n    this.create = function (file, callback) {\n      check(file, Object);\n\n      if (file._id == null) {\n        file._id = Random.id();\n      }\n\n      file.Webdav = {\n        path: options.getPath(file)\n      };\n      file.store = this.options.name;\n      return this.getCollection().insert(file, callback);\n    };\n    /**\n     * Removes the file\n     * @param fileId\n     * @param callback\n     */\n\n\n    this.delete = function (fileId, callback) {\n      const file = this.getCollection().findOne({\n        _id: fileId\n      });\n      client.deleteFile(this.getPath(file)).then(data => {\n        callback && callback(null, data);\n      }).catch(SystemLogger.error);\n    };\n    /**\n     * Returns the file read stream\n     * @param fileId\n     * @param file\n     * @param options\n     * @return {*}\n     */\n\n\n    this.getReadStream = function (fileId, file) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const range = {};\n\n      if (options.start != null) {\n        range.start = options.start;\n      }\n\n      if (options.end != null) {\n        range.end = options.end;\n      }\n\n      return client.createReadStream(this.getPath(file), options);\n    };\n    /**\n     * Returns the file write stream\n     * @param fileId\n     * @param file\n     * @return {*}\n     */\n\n\n    this.getWriteStream = function (fileId, file) {\n      const writeStream = new stream.PassThrough();\n      const webdavStream = client.createWriteStream(this.getPath(file)); // TODO remove timeout when UploadFS bug resolved\n\n      const newListenerCallback = (event, listener) => {\n        if (event === 'finish') {\n          process.nextTick(() => {\n            writeStream.removeListener(event, listener);\n            writeStream.removeListener('newListener', newListenerCallback);\n            writeStream.on(event, function () {\n              setTimeout(listener, 500);\n            });\n          });\n        }\n      };\n\n      writeStream.on('newListener', newListenerCallback);\n      writeStream.pipe(webdavStream);\n      return writeStream;\n    };\n  }\n\n}\n\n// Add store to UFS namespace\nUploadFS.store.Webdav = WebdavStore;","map":{"version":3,"sources":["app/file-upload/ufs/Webdav/server.js"],"names":["module","export","WebdavStore","stream","link","default","v","check","UploadFS","Random","WebdavClientAdapter","SystemLogger","Store","constructor","options","server","username","password","connection","credentials","client","getPath","file","uploadFolderPath","length","_id","stat","catch","err","message","toLowerCase","createDirectory","console","warn","Webdav","path","create","callback","Object","id","store","name","getCollection","insert","delete","fileId","findOne","deleteFile","then","data","error","getReadStream","range","start","end","createReadStream","getWriteStream","writeStream","PassThrough","webdavStream","createWriteStream","newListenerCallback","event","listener","process","nextTick","removeListener","on","setTimeout","pipe"],"mappings":"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","sourcesContent":["import stream from 'stream';\n\nimport { check } from 'meteor/check';\nimport { UploadFS } from 'meteor/jalik:ufs';\nimport { Random } from 'meteor/random';\n\nimport { WebdavClientAdapter } from '../../../webdav/server/lib/webdavClientAdapter';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n/**\n * WebDAV store\n * @param options\n * @constructor\n */\nexport class WebdavStore extends UploadFS.Store {\n\tconstructor(options) {\n\t\tsuper(options);\n\t\tconst { server, username, password } = options.connection.credentials;\n\t\tconst client = new WebdavClientAdapter(server, { username, password });\n\n\t\toptions.getPath = function (file) {\n\t\t\tif (options.uploadFolderPath[options.uploadFolderPath.length - 1] !== '/') {\n\t\t\t\toptions.uploadFolderPath += '/';\n\t\t\t}\n\t\t\treturn options.uploadFolderPath + file._id;\n\t\t};\n\n\t\tclient.stat(options.uploadFolderPath).catch((err) => {\n\t\t\tif (err.message.toLowerCase() === 'not found') {\n\t\t\t\tclient.createDirectory(options.uploadFolderPath);\n\t\t\t} else if (err.message.toLowerCase() === 'unauthorized') {\n\t\t\t\tconsole.warn('File upload is unauthorized to connect on Webdav, please verify your credentials');\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Returns the file path\n\t\t * @param file\n\t\t * @return {string}\n\t\t */\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.Webdav) {\n\t\t\t\treturn file.Webdav.path;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the col lection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = function (file, callback) {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.Webdav = {\n\t\t\t\tpath: options.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name;\n\t\t\treturn this.getCollection().insert(file, callback);\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = function (fileId, callback) {\n\t\t\tconst file = this.getCollection().findOne({ _id: fileId });\n\t\t\tclient\n\t\t\t\t.deleteFile(this.getPath(file))\n\t\t\t\t.then((data) => {\n\t\t\t\t\tcallback && callback(null, data);\n\t\t\t\t})\n\t\t\t\t.catch(SystemLogger.error);\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = function (fileId, file, options = {}) {\n\t\t\tconst range = {};\n\n\t\t\tif (options.start != null) {\n\t\t\t\trange.start = options.start;\n\t\t\t}\n\n\t\t\tif (options.end != null) {\n\t\t\t\trange.end = options.end;\n\t\t\t}\n\t\t\treturn client.createReadStream(this.getPath(file), options);\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = function (fileId, file) {\n\t\t\tconst writeStream = new stream.PassThrough();\n\t\t\tconst webdavStream = client.createWriteStream(this.getPath(file));\n\n\t\t\t// TODO remove timeout when UploadFS bug resolved\n\t\t\tconst newListenerCallback = (event, listener) => {\n\t\t\t\tif (event === 'finish') {\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\twriteStream.removeListener(event, listener);\n\t\t\t\t\t\twriteStream.removeListener('newListener', newListenerCallback);\n\t\t\t\t\t\twriteStream.on(event, function () {\n\t\t\t\t\t\t\tsetTimeout(listener, 500);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\twriteStream.on('newListener', newListenerCallback);\n\n\t\t\twriteStream.pipe(webdavStream);\n\t\t\treturn writeStream;\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.Webdav = WebdavStore;\n"]},"sourceType":"module","hash":"7fd6d9aca04f1926ee8ae4c03b79136dfd806e8c"}

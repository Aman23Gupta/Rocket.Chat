{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/blockstack/server/tokenHandler.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/blockstack/server/tokenHandler.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/blockstack/server/tokenHandler.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/blockstack/server/tokenHandler.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/blockstack/server/tokenHandler.js"}},"code":"module.export({\n  handleAccessToken: () => handleAccessToken\n});\nlet decodeToken;\nmodule.link(\"blockstack\", {\n  decodeToken(v) {\n    decodeToken = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 3);\nlet logger;\nmodule.link(\"./logger\", {\n  logger(v) {\n    logger = v;\n  }\n\n}, 4);\n\nconst handleAccessToken = loginRequest => {\n  logger.debug('Login request received', loginRequest);\n  check(loginRequest, Match.ObjectIncluding({\n    authResponse: String,\n    userData: Object\n  })); // Decode auth response for user attributes\n\n  const {\n    username,\n    profile\n  } = loginRequest.userData;\n  const decodedToken = decodeToken(loginRequest.authResponse).payload;\n  profile.username = username;\n  logger.debug('User data', loginRequest.userData);\n  logger.debug('Login decoded', decodedToken);\n  const {\n    iss,\n    iat,\n    exp\n  } = decodedToken;\n\n  if (!iss) {\n    return {\n      type: 'blockstack',\n      error: new Meteor.Error(Accounts.LoginCancelledError.numericError, 'Insufficient data in auth response token')\n    };\n  } // Collect basic auth provider details\n\n\n  const serviceData = {\n    id: iss,\n    did: iss.split(':').pop(),\n    issuedAt: new Date(iat * 1000),\n    expiresAt: new Date(exp * 1000)\n  }; // Add Avatar image source to use for auth service suggestions\n\n  if (Array.isArray(profile.image) && profile.image.length) {\n    serviceData.image = profile.image[0].contentUrl;\n  }\n\n  logger.debug('Login data', serviceData, profile);\n  return {\n    serviceData,\n    options: {\n      profile\n    }\n  };\n};","map":{"version":3,"sources":["app/blockstack/server/tokenHandler.js"],"names":["module","export","handleAccessToken","decodeToken","link","v","Meteor","Accounts","Match","check","logger","loginRequest","debug","ObjectIncluding","authResponse","String","userData","Object","username","profile","decodedToken","payload","iss","iat","exp","type","error","Error","LoginCancelledError","numericError","serviceData","id","did","split","pop","issuedAt","Date","expiresAt","Array","isArray","image","length","contentUrl","options"],"mappings":"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","sourcesContent":["import { decodeToken } from 'blockstack';\nimport { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\n\nimport { logger } from './logger';\n\n// Handler extracts data from JSON and tokenised reponse.\n// Reflects OAuth token service, with some slight modifications for Blockstack.\n//\n// Uses 'iss' (issuer) as unique key (decentralised ID) for user.\n// The 'did' final portion of the blockstack decentralised ID, is displayed as\n// your profile ID in the service. This isn't used yet, but could be useful\n// to link accounts if identity providers other than btc address are added.\nexport const handleAccessToken = (loginRequest) => {\n\tlogger.debug('Login request received', loginRequest);\n\n\tcheck(\n\t\tloginRequest,\n\t\tMatch.ObjectIncluding({\n\t\t\tauthResponse: String,\n\t\t\tuserData: Object,\n\t\t}),\n\t);\n\n\t// Decode auth response for user attributes\n\tconst { username, profile } = loginRequest.userData;\n\tconst decodedToken = decodeToken(loginRequest.authResponse).payload;\n\n\tprofile.username = username;\n\n\tlogger.debug('User data', loginRequest.userData);\n\tlogger.debug('Login decoded', decodedToken);\n\n\tconst { iss, iat, exp } = decodedToken;\n\n\tif (!iss) {\n\t\treturn {\n\t\t\ttype: 'blockstack',\n\t\t\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, 'Insufficient data in auth response token'),\n\t\t};\n\t}\n\n\t// Collect basic auth provider details\n\tconst serviceData = {\n\t\tid: iss,\n\t\tdid: iss.split(':').pop(),\n\t\tissuedAt: new Date(iat * 1000),\n\t\texpiresAt: new Date(exp * 1000),\n\t};\n\n\t// Add Avatar image source to use for auth service suggestions\n\tif (Array.isArray(profile.image) && profile.image.length) {\n\t\tserviceData.image = profile.image[0].contentUrl;\n\t}\n\n\tlogger.debug('Login data', serviceData, profile);\n\n\treturn {\n\t\tserviceData,\n\t\toptions: { profile },\n\t};\n};\n"]},"sourceType":"module","hash":"ef7ed5d500a65754592923e86085727efb3ac12a"}

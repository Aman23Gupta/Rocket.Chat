{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/videobridge/server/methods/bbb.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/videobridge/server/methods/bbb.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/videobridge/server/methods/bbb.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/videobridge/server/methods/bbb.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/videobridge/server/methods/bbb.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet xml2js;\nmodule.link(\"xml2js\", {\n  default(v) {\n    xml2js = v;\n  }\n\n}, 3);\nlet BigBlueButtonApi;\nmodule.link(\"../../../bigbluebutton/server\", {\n  default(v) {\n    BigBlueButtonApi = v;\n  }\n\n}, 4);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet Rooms, Users;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 7);\nlet saveStreamingOptions;\nmodule.link(\"../../../channel-settings/server\", {\n  saveStreamingOptions(v) {\n    saveStreamingOptions = v;\n  }\n\n}, 8);\nlet canAccessRoom;\nmodule.link(\"../../../authorization/server\", {\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  }\n\n}, 9);\nlet API;\nmodule.link(\"../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 10);\nconst parser = new xml2js.Parser({\n  explicitRoot: true\n});\nconst parseString = Meteor.wrapAsync(parser.parseString);\n\nconst getBBBAPI = () => {\n  const url = settings.get('bigbluebutton_server');\n  const secret = settings.get('bigbluebutton_sharedSecret');\n  const api = new BigBlueButtonApi(\"\".concat(url, \"/bigbluebutton/api\"), secret);\n  return {\n    api,\n    url\n  };\n};\n\nMeteor.methods({\n  bbbJoin(_ref) {\n    let {\n      rid\n    } = _ref;\n    check(rid, String);\n\n    if (!this.userId) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'bbbJoin'\n      });\n    }\n\n    if (!rid) {\n      throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n        method: 'bbbJoin'\n      });\n    }\n\n    const user = Users.findOneById(this.userId);\n\n    if (!user) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'bbbJoin'\n      });\n    }\n\n    const room = Rooms.findOneById(rid);\n\n    if (!room) {\n      throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n        method: 'bbbJoin'\n      });\n    }\n\n    if (!canAccessRoom(room, user)) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'bbbJoin'\n      });\n    }\n\n    if (!settings.get('bigbluebutton_Enabled')) {\n      throw new Meteor.Error('error-not-allowed', 'Not Allowed', {\n        method: 'bbbJoin'\n      });\n    }\n\n    const {\n      api\n    } = getBBBAPI();\n    const meetingID = settings.get('uniqueID') + rid;\n    const createUrl = api.urlFor('create', {\n      name: room.t === 'd' ? 'Direct' : room.name,\n      meetingID,\n      attendeePW: 'ap',\n      moderatorPW: 'mp',\n      welcome: '<br>Welcome to <b>%%CONFNAME%%</b>!',\n      meta_html5chat: false,\n      meta_html5navbar: false,\n      meta_html5autoswaplayout: true,\n      meta_html5autosharewebcam: false,\n      meta_html5hidepresentation: true\n    });\n    const createResult = HTTP.get(createUrl);\n    const doc = parseString(createResult.content);\n\n    if (doc.response.returncode[0]) {\n      const hookApi = api.urlFor('hooks/create', {\n        meetingID,\n        callbackURL: Meteor.absoluteUrl(\"api/v1/videoconference.bbb.update/\".concat(meetingID))\n      });\n      const hookResult = HTTP.get(hookApi);\n\n      if (hookResult.statusCode !== 200) {\n        // TODO improve error logging\n        SystemLogger.error(hookResult);\n        return;\n      }\n\n      saveStreamingOptions(rid, {\n        type: 'call'\n      });\n      return {\n        url: api.urlFor('join', {\n          password: 'mp',\n          // mp if moderator ap if attendee\n          meetingID,\n          fullName: user.username,\n          userID: user._id,\n          joinViaHtml5: true,\n          avatarURL: Meteor.absoluteUrl(\"avatar/\".concat(user.username)) // clientURL: `${ url }/html5client/join`,\n\n        })\n      };\n    }\n  },\n\n  bbbEnd(_ref2) {\n    let {\n      rid\n    } = _ref2;\n    check(rid, String);\n\n    if (!this.userId) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'bbbEnd'\n      });\n    }\n\n    if (!rid) {\n      throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n        method: 'bbbEnd'\n      });\n    }\n\n    if (!canAccessRoom({\n      _id: rid\n    }, {\n      _id: this.userId\n    })) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'bbbEnd'\n      });\n    }\n\n    if (!settings.get('bigbluebutton_Enabled')) {\n      throw new Meteor.Error('error-not-allowed', 'Not Allowed', {\n        method: 'bbbEnd'\n      });\n    }\n\n    const {\n      api\n    } = getBBBAPI();\n    const meetingID = settings.get('uniqueID') + rid;\n    const endApi = api.urlFor('end', {\n      meetingID,\n      password: 'mp' // mp if moderator ap if attendee\n\n    });\n    const endApiResult = HTTP.get(endApi);\n\n    if (endApiResult.statusCode !== 200) {\n      saveStreamingOptions(rid, {});\n      throw new Meteor.Error(endApiResult);\n    }\n\n    const doc = parseString(endApiResult.content);\n\n    if (['SUCCESS', 'FAILED'].includes(doc.response.returncode[0])) {\n      saveStreamingOptions(rid, {});\n    }\n  }\n\n});\nAPI.v1.addRoute('videoconference.bbb.update/:id', {\n  authRequired: false\n}, {\n  post() {\n    // TODO check checksum\n    const event = JSON.parse(this.bodyParams.event)[0];\n    const eventType = event.data.id;\n    const meetingID = event.data.attributes.meeting['external-meeting-id'];\n    const rid = meetingID.replace(settings.get('uniqueID'), '');\n    SystemLogger.debug(eventType, rid);\n\n    if (eventType === 'meeting-ended') {\n      saveStreamingOptions(rid, {});\n    } // if (eventType === 'user-left') {\n    // \tconst { api } = getBBBAPI();\n    // \tconst getMeetingInfoApi = api.urlFor('getMeetingInfo', {\n    // \t\tmeetingID\n    // \t});\n    // \tconst getMeetingInfoResult = HTTP.get(getMeetingInfoApi);\n    // \tif (getMeetingInfoResult.statusCode !== 200) {\n    // \t\t// TODO improve error logging\n    // \t\tSystemLogger.error({ getMeetingInfoResult });\n    // \t}\n    // \tconst doc = parseString(getMeetingInfoResult.content);\n    // \tif (doc.response.returncode[0]) {\n    // \t\tconst participantCount = parseInt(doc.response.participantCount[0]);\n    // \t\tSystemLogger.debug(participantCount);\n    // \t}\n    // }\n\n  }\n\n});","map":{"version":3,"sources":["app/videobridge/server/methods/bbb.js"],"names":["Meteor","module","link","v","HTTP","check","xml2js","default","BigBlueButtonApi","SystemLogger","settings","Rooms","Users","saveStreamingOptions","canAccessRoom","API","parser","Parser","explicitRoot","parseString","wrapAsync","getBBBAPI","url","get","secret","api","methods","bbbJoin","rid","String","userId","Error","method","user","findOneById","room","meetingID","createUrl","urlFor","name","t","attendeePW","moderatorPW","welcome","meta_html5chat","meta_html5navbar","meta_html5autoswaplayout","meta_html5autosharewebcam","meta_html5hidepresentation","createResult","doc","content","response","returncode","hookApi","callbackURL","absoluteUrl","hookResult","statusCode","error","type","password","fullName","username","userID","_id","joinViaHtml5","avatarURL","bbbEnd","endApi","endApiResult","includes","v1","addRoute","authRequired","post","event","JSON","parse","bodyParams","eventType","data","id","attributes","meeting","replace","debug"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,IAAJ;AAASH,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAACE,EAAAA,IAAI,CAACD,CAAD,EAAG;AAACC,IAAAA,IAAI,GAACD,CAAL;AAAO;;AAAhB,CAA1B,EAA4C,CAA5C;AAA+C,IAAIE,KAAJ;AAAUJ,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACG,EAAAA,KAAK,CAACF,CAAD,EAAG;AAACE,IAAAA,KAAK,GAACF,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIG,MAAJ;AAAWL,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACK,EAAAA,OAAO,CAACJ,CAAD,EAAG;AAACG,IAAAA,MAAM,GAACH,CAAP;AAAS;;AAArB,CAArB,EAA4C,CAA5C;AAA+C,IAAIK,gBAAJ;AAAqBP,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAACK,EAAAA,OAAO,CAACJ,CAAD,EAAG;AAACK,IAAAA,gBAAgB,GAACL,CAAjB;AAAmB;;AAA/B,CAA5C,EAA6E,CAA7E;AAAgF,IAAIM,YAAJ;AAAiBR,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACO,EAAAA,YAAY,CAACN,CAAD,EAAG;AAACM,IAAAA,YAAY,GAACN,CAAb;AAAe;;AAAhC,CAAnD,EAAqF,CAArF;AAAwF,IAAIO,QAAJ;AAAaT,MAAM,CAACC,IAAP,CAAY,0BAAZ,EAAuC;AAACQ,EAAAA,QAAQ,CAACP,CAAD,EAAG;AAACO,IAAAA,QAAQ,GAACP,CAAT;AAAW;;AAAxB,CAAvC,EAAiE,CAAjE;AAAoE,IAAIQ,KAAJ,EAAUC,KAAV;AAAgBX,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACS,EAAAA,KAAK,CAACR,CAAD,EAAG;AAACQ,IAAAA,KAAK,GAACR,CAAN;AAAQ,GAAlB;;AAAmBS,EAAAA,KAAK,CAACT,CAAD,EAAG;AAACS,IAAAA,KAAK,GAACT,CAAN;AAAQ;;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAIU,oBAAJ;AAAyBZ,MAAM,CAACC,IAAP,CAAY,kCAAZ,EAA+C;AAACW,EAAAA,oBAAoB,CAACV,CAAD,EAAG;AAACU,IAAAA,oBAAoB,GAACV,CAArB;AAAuB;;AAAhD,CAA/C,EAAiG,CAAjG;AAAoG,IAAIW,aAAJ;AAAkBb,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAACY,EAAAA,aAAa,CAACX,CAAD,EAAG;AAACW,IAAAA,aAAa,GAACX,CAAd;AAAgB;;AAAlC,CAA5C,EAAgF,CAAhF;AAAmF,IAAIY,GAAJ;AAAQd,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACa,EAAAA,GAAG,CAACZ,CAAD,EAAG;AAACY,IAAAA,GAAG,GAACZ,CAAJ;AAAM;;AAAd,CAAlC,EAAkD,EAAlD;AAar1B,MAAMa,MAAM,GAAG,IAAIV,MAAM,CAACW,MAAX,CAAkB;AAChCC,EAAAA,YAAY,EAAE;AADkB,CAAlB,CAAf;AAIA,MAAMC,WAAW,GAAGnB,MAAM,CAACoB,SAAP,CAAiBJ,MAAM,CAACG,WAAxB,CAApB;;AAEA,MAAME,SAAS,GAAG,MAAM;AACvB,QAAMC,GAAG,GAAGZ,QAAQ,CAACa,GAAT,CAAa,sBAAb,CAAZ;AACA,QAAMC,MAAM,GAAGd,QAAQ,CAACa,GAAT,CAAa,4BAAb,CAAf;AACA,QAAME,GAAG,GAAG,IAAIjB,gBAAJ,WAAwBc,GAAxB,yBAAiDE,MAAjD,CAAZ;AACA,SAAO;AAAEC,IAAAA,GAAF;AAAOH,IAAAA;AAAP,GAAP;AACA,CALD;;AAOAtB,MAAM,CAAC0B,OAAP,CAAe;AACdC,EAAAA,OAAO,OAAU;AAAA,QAAT;AAAEC,MAAAA;AAAF,KAAS;AAChBvB,IAAAA,KAAK,CAACuB,GAAD,EAAMC,MAAN,CAAL;;AAEA,QAAI,CAAC,KAAKC,MAAV,EAAkB;AACjB,YAAM,IAAI9B,MAAM,CAAC+B,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,QAAI,CAACJ,GAAL,EAAU;AACT,YAAM,IAAI5B,MAAM,CAAC+B,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,UAAMC,IAAI,GAAGrB,KAAK,CAACsB,WAAN,CAAkB,KAAKJ,MAAvB,CAAb;;AACA,QAAI,CAACG,IAAL,EAAW;AACV,YAAM,IAAIjC,MAAM,CAAC+B,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,UAAMG,IAAI,GAAGxB,KAAK,CAACuB,WAAN,CAAkBN,GAAlB,CAAb;;AACA,QAAI,CAACO,IAAL,EAAW;AACV,YAAM,IAAInC,MAAM,CAAC+B,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,QAAI,CAAClB,aAAa,CAACqB,IAAD,EAAOF,IAAP,CAAlB,EAAgC;AAC/B,YAAM,IAAIjC,MAAM,CAAC+B,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,QAAI,CAACtB,QAAQ,CAACa,GAAT,CAAa,uBAAb,CAAL,EAA4C;AAC3C,YAAM,IAAIvB,MAAM,CAAC+B,KAAX,CAAiB,mBAAjB,EAAsC,aAAtC,EAAqD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAArD,CAAN;AACA;;AAED,UAAM;AAAEP,MAAAA;AAAF,QAAUJ,SAAS,EAAzB;AACA,UAAMe,SAAS,GAAG1B,QAAQ,CAACa,GAAT,CAAa,UAAb,IAA2BK,GAA7C;AACA,UAAMS,SAAS,GAAGZ,GAAG,CAACa,MAAJ,CAAW,QAAX,EAAqB;AACtCC,MAAAA,IAAI,EAAEJ,IAAI,CAACK,CAAL,KAAW,GAAX,GAAiB,QAAjB,GAA4BL,IAAI,CAACI,IADD;AAEtCH,MAAAA,SAFsC;AAGtCK,MAAAA,UAAU,EAAE,IAH0B;AAItCC,MAAAA,WAAW,EAAE,IAJyB;AAKtCC,MAAAA,OAAO,EAAE,qCAL6B;AAMtCC,MAAAA,cAAc,EAAE,KANsB;AAOtCC,MAAAA,gBAAgB,EAAE,KAPoB;AAQtCC,MAAAA,wBAAwB,EAAE,IARY;AAStCC,MAAAA,yBAAyB,EAAE,KATW;AAUtCC,MAAAA,0BAA0B,EAAE;AAVU,KAArB,CAAlB;AAaA,UAAMC,YAAY,GAAG7C,IAAI,CAACmB,GAAL,CAASc,SAAT,CAArB;AACA,UAAMa,GAAG,GAAG/B,WAAW,CAAC8B,YAAY,CAACE,OAAd,CAAvB;;AAEA,QAAID,GAAG,CAACE,QAAJ,CAAaC,UAAb,CAAwB,CAAxB,CAAJ,EAAgC;AAC/B,YAAMC,OAAO,GAAG7B,GAAG,CAACa,MAAJ,CAAW,cAAX,EAA2B;AAC1CF,QAAAA,SAD0C;AAE1CmB,QAAAA,WAAW,EAAEvD,MAAM,CAACwD,WAAP,6CAAwDpB,SAAxD;AAF6B,OAA3B,CAAhB;AAKA,YAAMqB,UAAU,GAAGrD,IAAI,CAACmB,GAAL,CAAS+B,OAAT,CAAnB;;AAEA,UAAIG,UAAU,CAACC,UAAX,KAA0B,GAA9B,EAAmC;AAClC;AACAjD,QAAAA,YAAY,CAACkD,KAAb,CAAmBF,UAAnB;AACA;AACA;;AAED5C,MAAAA,oBAAoB,CAACe,GAAD,EAAM;AACzBgC,QAAAA,IAAI,EAAE;AADmB,OAAN,CAApB;AAIA,aAAO;AACNtC,QAAAA,GAAG,EAAEG,GAAG,CAACa,MAAJ,CAAW,MAAX,EAAmB;AACvBuB,UAAAA,QAAQ,EAAE,IADa;AACP;AAChBzB,UAAAA,SAFuB;AAGvB0B,UAAAA,QAAQ,EAAE7B,IAAI,CAAC8B,QAHQ;AAIvBC,UAAAA,MAAM,EAAE/B,IAAI,CAACgC,GAJU;AAKvBC,UAAAA,YAAY,EAAE,IALS;AAMvBC,UAAAA,SAAS,EAAEnE,MAAM,CAACwD,WAAP,kBAA6BvB,IAAI,CAAC8B,QAAlC,EANY,CAOvB;;AAPuB,SAAnB;AADC,OAAP;AAWA;AACD,GA9Ea;;AAgFdK,EAAAA,MAAM,QAAU;AAAA,QAAT;AAAExC,MAAAA;AAAF,KAAS;AACfvB,IAAAA,KAAK,CAACuB,GAAD,EAAMC,MAAN,CAAL;;AAEA,QAAI,CAAC,KAAKC,MAAV,EAAkB;AACjB,YAAM,IAAI9B,MAAM,CAAC+B,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,QAAI,CAACJ,GAAL,EAAU;AACT,YAAM,IAAI5B,MAAM,CAAC+B,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,QAAI,CAAClB,aAAa,CAAC;AAAEmD,MAAAA,GAAG,EAAErC;AAAP,KAAD,EAAe;AAAEqC,MAAAA,GAAG,EAAE,KAAKnC;AAAZ,KAAf,CAAlB,EAAwD;AACvD,YAAM,IAAI9B,MAAM,CAAC+B,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvD,CAAN;AACA;;AAED,QAAI,CAACtB,QAAQ,CAACa,GAAT,CAAa,uBAAb,CAAL,EAA4C;AAC3C,YAAM,IAAIvB,MAAM,CAAC+B,KAAX,CAAiB,mBAAjB,EAAsC,aAAtC,EAAqD;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAArD,CAAN;AACA;;AAED,UAAM;AAAEP,MAAAA;AAAF,QAAUJ,SAAS,EAAzB;AACA,UAAMe,SAAS,GAAG1B,QAAQ,CAACa,GAAT,CAAa,UAAb,IAA2BK,GAA7C;AACA,UAAMyC,MAAM,GAAG5C,GAAG,CAACa,MAAJ,CAAW,KAAX,EAAkB;AAChCF,MAAAA,SADgC;AAEhCyB,MAAAA,QAAQ,EAAE,IAFsB,CAEhB;;AAFgB,KAAlB,CAAf;AAKA,UAAMS,YAAY,GAAGlE,IAAI,CAACmB,GAAL,CAAS8C,MAAT,CAArB;;AAEA,QAAIC,YAAY,CAACZ,UAAb,KAA4B,GAAhC,EAAqC;AACpC7C,MAAAA,oBAAoB,CAACe,GAAD,EAAM,EAAN,CAApB;AACA,YAAM,IAAI5B,MAAM,CAAC+B,KAAX,CAAiBuC,YAAjB,CAAN;AACA;;AACD,UAAMpB,GAAG,GAAG/B,WAAW,CAACmD,YAAY,CAACnB,OAAd,CAAvB;;AAEA,QAAI,CAAC,SAAD,EAAY,QAAZ,EAAsBoB,QAAtB,CAA+BrB,GAAG,CAACE,QAAJ,CAAaC,UAAb,CAAwB,CAAxB,CAA/B,CAAJ,EAAgE;AAC/DxC,MAAAA,oBAAoB,CAACe,GAAD,EAAM,EAAN,CAApB;AACA;AACD;;AArHa,CAAf;AAwHAb,GAAG,CAACyD,EAAJ,CAAOC,QAAP,CACC,gCADD,EAEC;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAFD,EAGC;AACCC,EAAAA,IAAI,GAAG;AACN;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,UAAL,CAAgBH,KAA3B,EAAkC,CAAlC,CAAd;AACA,UAAMI,SAAS,GAAGJ,KAAK,CAACK,IAAN,CAAWC,EAA7B;AACA,UAAM9C,SAAS,GAAGwC,KAAK,CAACK,IAAN,CAAWE,UAAX,CAAsBC,OAAtB,CAA8B,qBAA9B,CAAlB;AACA,UAAMxD,GAAG,GAAGQ,SAAS,CAACiD,OAAV,CAAkB3E,QAAQ,CAACa,GAAT,CAAa,UAAb,CAAlB,EAA4C,EAA5C,CAAZ;AAEAd,IAAAA,YAAY,CAAC6E,KAAb,CAAmBN,SAAnB,EAA8BpD,GAA9B;;AAEA,QAAIoD,SAAS,KAAK,eAAlB,EAAmC;AAClCnE,MAAAA,oBAAoB,CAACe,GAAD,EAAM,EAAN,CAApB;AACA,KAXK,CAaN;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA;;AAnCF,CAHD","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { check } from 'meteor/check';\nimport xml2js from 'xml2js';\n\nimport BigBlueButtonApi from '../../../bigbluebutton/server';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { settings } from '../../../settings/server';\nimport { Rooms, Users } from '../../../models/server';\nimport { saveStreamingOptions } from '../../../channel-settings/server';\nimport { canAccessRoom } from '../../../authorization/server';\nimport { API } from '../../../api/server';\n\nconst parser = new xml2js.Parser({\n\texplicitRoot: true,\n});\n\nconst parseString = Meteor.wrapAsync(parser.parseString);\n\nconst getBBBAPI = () => {\n\tconst url = settings.get('bigbluebutton_server');\n\tconst secret = settings.get('bigbluebutton_sharedSecret');\n\tconst api = new BigBlueButtonApi(`${url}/bigbluebutton/api`, secret);\n\treturn { api, url };\n};\n\nMeteor.methods({\n\tbbbJoin({ rid }) {\n\t\tcheck(rid, String);\n\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'bbbJoin' });\n\t\t}\n\n\t\tif (!rid) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'bbbJoin' });\n\t\t}\n\n\t\tconst user = Users.findOneById(this.userId);\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'bbbJoin' });\n\t\t}\n\n\t\tconst room = Rooms.findOneById(rid);\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'bbbJoin' });\n\t\t}\n\n\t\tif (!canAccessRoom(room, user)) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'bbbJoin' });\n\t\t}\n\n\t\tif (!settings.get('bigbluebutton_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not Allowed', { method: 'bbbJoin' });\n\t\t}\n\n\t\tconst { api } = getBBBAPI();\n\t\tconst meetingID = settings.get('uniqueID') + rid;\n\t\tconst createUrl = api.urlFor('create', {\n\t\t\tname: room.t === 'd' ? 'Direct' : room.name,\n\t\t\tmeetingID,\n\t\t\tattendeePW: 'ap',\n\t\t\tmoderatorPW: 'mp',\n\t\t\twelcome: '<br>Welcome to <b>%%CONFNAME%%</b>!',\n\t\t\tmeta_html5chat: false,\n\t\t\tmeta_html5navbar: false,\n\t\t\tmeta_html5autoswaplayout: true,\n\t\t\tmeta_html5autosharewebcam: false,\n\t\t\tmeta_html5hidepresentation: true,\n\t\t});\n\n\t\tconst createResult = HTTP.get(createUrl);\n\t\tconst doc = parseString(createResult.content);\n\n\t\tif (doc.response.returncode[0]) {\n\t\t\tconst hookApi = api.urlFor('hooks/create', {\n\t\t\t\tmeetingID,\n\t\t\t\tcallbackURL: Meteor.absoluteUrl(`api/v1/videoconference.bbb.update/${meetingID}`),\n\t\t\t});\n\n\t\t\tconst hookResult = HTTP.get(hookApi);\n\n\t\t\tif (hookResult.statusCode !== 200) {\n\t\t\t\t// TODO improve error logging\n\t\t\t\tSystemLogger.error(hookResult);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsaveStreamingOptions(rid, {\n\t\t\t\ttype: 'call',\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\turl: api.urlFor('join', {\n\t\t\t\t\tpassword: 'mp', // mp if moderator ap if attendee\n\t\t\t\t\tmeetingID,\n\t\t\t\t\tfullName: user.username,\n\t\t\t\t\tuserID: user._id,\n\t\t\t\t\tjoinViaHtml5: true,\n\t\t\t\t\tavatarURL: Meteor.absoluteUrl(`avatar/${user.username}`),\n\t\t\t\t\t// clientURL: `${ url }/html5client/join`,\n\t\t\t\t}),\n\t\t\t};\n\t\t}\n\t},\n\n\tbbbEnd({ rid }) {\n\t\tcheck(rid, String);\n\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'bbbEnd' });\n\t\t}\n\n\t\tif (!rid) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'bbbEnd' });\n\t\t}\n\n\t\tif (!canAccessRoom({ _id: rid }, { _id: this.userId })) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'bbbEnd' });\n\t\t}\n\n\t\tif (!settings.get('bigbluebutton_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not Allowed', { method: 'bbbEnd' });\n\t\t}\n\n\t\tconst { api } = getBBBAPI();\n\t\tconst meetingID = settings.get('uniqueID') + rid;\n\t\tconst endApi = api.urlFor('end', {\n\t\t\tmeetingID,\n\t\t\tpassword: 'mp', // mp if moderator ap if attendee\n\t\t});\n\n\t\tconst endApiResult = HTTP.get(endApi);\n\n\t\tif (endApiResult.statusCode !== 200) {\n\t\t\tsaveStreamingOptions(rid, {});\n\t\t\tthrow new Meteor.Error(endApiResult);\n\t\t}\n\t\tconst doc = parseString(endApiResult.content);\n\n\t\tif (['SUCCESS', 'FAILED'].includes(doc.response.returncode[0])) {\n\t\t\tsaveStreamingOptions(rid, {});\n\t\t}\n\t},\n});\n\nAPI.v1.addRoute(\n\t'videoconference.bbb.update/:id',\n\t{ authRequired: false },\n\t{\n\t\tpost() {\n\t\t\t// TODO check checksum\n\t\t\tconst event = JSON.parse(this.bodyParams.event)[0];\n\t\t\tconst eventType = event.data.id;\n\t\t\tconst meetingID = event.data.attributes.meeting['external-meeting-id'];\n\t\t\tconst rid = meetingID.replace(settings.get('uniqueID'), '');\n\n\t\t\tSystemLogger.debug(eventType, rid);\n\n\t\t\tif (eventType === 'meeting-ended') {\n\t\t\t\tsaveStreamingOptions(rid, {});\n\t\t\t}\n\n\t\t\t// if (eventType === 'user-left') {\n\t\t\t// \tconst { api } = getBBBAPI();\n\n\t\t\t// \tconst getMeetingInfoApi = api.urlFor('getMeetingInfo', {\n\t\t\t// \t\tmeetingID\n\t\t\t// \t});\n\n\t\t\t// \tconst getMeetingInfoResult = HTTP.get(getMeetingInfoApi);\n\n\t\t\t// \tif (getMeetingInfoResult.statusCode !== 200) {\n\t\t\t// \t\t// TODO improve error logging\n\t\t\t// \t\tSystemLogger.error({ getMeetingInfoResult });\n\t\t\t// \t}\n\n\t\t\t// \tconst doc = parseString(getMeetingInfoResult.content);\n\n\t\t\t// \tif (doc.response.returncode[0]) {\n\t\t\t// \t\tconst participantCount = parseInt(doc.response.participantCount[0]);\n\t\t\t// \t\tSystemLogger.debug(participantCount);\n\t\t\t// \t}\n\t\t\t// }\n\t\t},\n\t},\n);\n"]},"sourceType":"module","hash":"722e26e881628da867172ccbc3132f1113cd13bf"}

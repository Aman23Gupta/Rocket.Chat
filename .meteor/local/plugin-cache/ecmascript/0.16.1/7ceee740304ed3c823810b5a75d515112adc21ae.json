{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/slackbridge/server/slackbridge_import.server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/slackbridge/server/slackbridge_import.server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/slackbridge/server/slackbridge_import.server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/slackbridge/server/slackbridge_import.server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/slackbridge/server/slackbridge_import.server.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 3);\nlet SlackBridge;\nmodule.link(\"./slackbridge\", {\n  SlackBridge(v) {\n    SlackBridge = v;\n  }\n\n}, 4);\nlet Rooms;\nmodule.link(\"../../models\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 5);\nlet msgStream;\nmodule.link(\"../../lib\", {\n  msgStream(v) {\n    msgStream = v;\n  }\n\n}, 6);\nlet slashCommands;\nmodule.link(\"../../utils\", {\n  slashCommands(v) {\n    slashCommands = v;\n  }\n\n}, 7);\n\nfunction SlackBridgeImport(command, params, item) {\n  if (command !== 'slackbridge-import' || !Match.test(params, String)) {\n    return;\n  }\n\n  const room = Rooms.findOneById(item.rid);\n  const channel = room.name;\n  const user = Meteor.users.findOne(Meteor.userId());\n  msgStream.emit(item.rid, {\n    _id: Random.id(),\n    rid: item.rid,\n    u: {\n      username: 'rocket.cat'\n    },\n    ts: new Date(),\n    msg: TAPi18n.__('SlackBridge_start', {\n      postProcess: 'sprintf',\n      sprintf: [user.username, channel]\n    }, user.language)\n  });\n\n  try {\n    SlackBridge.slackAdapters.forEach(slack => {\n      slack.importMessages(item.rid, error => {\n        if (error) {\n          msgStream.emit(item.rid, {\n            _id: Random.id(),\n            rid: item.rid,\n            u: {\n              username: 'rocket.cat'\n            },\n            ts: new Date(),\n            msg: TAPi18n.__('SlackBridge_error', {\n              postProcess: 'sprintf',\n              sprintf: [channel, error.message]\n            }, user.language)\n          });\n        } else {\n          msgStream.emit(item.rid, {\n            _id: Random.id(),\n            rid: item.rid,\n            u: {\n              username: 'rocket.cat'\n            },\n            ts: new Date(),\n            msg: TAPi18n.__('SlackBridge_finish', {\n              postProcess: 'sprintf',\n              sprintf: [channel]\n            }, user.language)\n          });\n        }\n      });\n    });\n  } catch (error) {\n    msgStream.emit(item.rid, {\n      _id: Random.id(),\n      rid: item.rid,\n      u: {\n        username: 'rocket.cat'\n      },\n      ts: new Date(),\n      msg: TAPi18n.__('SlackBridge_error', {\n        postProcess: 'sprintf',\n        sprintf: [channel, error.message]\n      }, user.language)\n    });\n    throw error;\n  }\n\n  return SlackBridgeImport;\n}\n\nslashCommands.add('slackbridge-import', SlackBridgeImport);","map":{"version":3,"sources":["app/slackbridge/server/slackbridge_import.server.js"],"names":["Meteor","module","link","v","Match","Random","TAPi18n","SlackBridge","Rooms","msgStream","slashCommands","SlackBridgeImport","command","params","item","test","String","room","findOneById","rid","channel","name","user","users","findOne","userId","emit","_id","id","u","username","ts","Date","msg","__","postProcess","sprintf","language","slackAdapters","forEach","slack","importMessages","error","message","add"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\nimport { Random } from 'meteor/random';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { SlackBridge } from './slackbridge';\nimport { Rooms } from '../../models';\nimport { msgStream } from '../../lib';\nimport { slashCommands } from '../../utils';\n\nfunction SlackBridgeImport(command, params, item) {\n\tif (command !== 'slackbridge-import' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\n\tconst room = Rooms.findOneById(item.rid);\n\tconst channel = room.name;\n\tconst user = Meteor.users.findOne(Meteor.userId());\n\n\tmsgStream.emit(item.rid, {\n\t\t_id: Random.id(),\n\t\trid: item.rid,\n\t\tu: { username: 'rocket.cat' },\n\t\tts: new Date(),\n\t\tmsg: TAPi18n.__(\n\t\t\t'SlackBridge_start',\n\t\t\t{\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [user.username, channel],\n\t\t\t},\n\t\t\tuser.language,\n\t\t),\n\t});\n\n\ttry {\n\t\tSlackBridge.slackAdapters.forEach((slack) => {\n\t\t\tslack.importMessages(item.rid, (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tmsgStream.emit(item.rid, {\n\t\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\t\trid: item.rid,\n\t\t\t\t\t\tu: { username: 'rocket.cat' },\n\t\t\t\t\t\tts: new Date(),\n\t\t\t\t\t\tmsg: TAPi18n.__(\n\t\t\t\t\t\t\t'SlackBridge_error',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\t\t\tsprintf: [channel, error.message],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuser.language,\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmsgStream.emit(item.rid, {\n\t\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\t\trid: item.rid,\n\t\t\t\t\t\tu: { username: 'rocket.cat' },\n\t\t\t\t\t\tts: new Date(),\n\t\t\t\t\t\tmsg: TAPi18n.__(\n\t\t\t\t\t\t\t'SlackBridge_finish',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuser.language,\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t} catch (error) {\n\t\tmsgStream.emit(item.rid, {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tu: { username: 'rocket.cat' },\n\t\t\tts: new Date(),\n\t\t\tmsg: TAPi18n.__(\n\t\t\t\t'SlackBridge_error',\n\t\t\t\t{\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel, error.message],\n\t\t\t\t},\n\t\t\t\tuser.language,\n\t\t\t),\n\t\t});\n\t\tthrow error;\n\t}\n\treturn SlackBridgeImport;\n}\n\nslashCommands.add('slackbridge-import', SlackBridgeImport);\n"]},"sourceType":"module","hash":"7ceee740304ed3c823810b5a75d515112adc21ae"}

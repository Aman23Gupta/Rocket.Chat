{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/LivechatRooms.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/models/server/models/LivechatRooms.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/LivechatRooms.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/models/server/models/LivechatRooms.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/models/server/models/LivechatRooms.js"}},"code":"let LivechatRooms;\nmodule.link(\"../../../../../app/models/server/models/LivechatRooms\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 0);\nlet queriesLogger;\nmodule.link(\"../../../livechat-enterprise/server/lib/logger\", {\n  queriesLogger(v) {\n    queriesLogger = v;\n  }\n\n}, 1);\nlet addQueryRestrictionsToRoomsModel;\nmodule.link(\"../../../livechat-enterprise/server/lib/query.helper\", {\n  addQueryRestrictionsToRoomsModel(v) {\n    addQueryRestrictionsToRoomsModel = v;\n  }\n\n}, 2);\nlet overwriteClassOnLicense;\nmodule.link(\"../../../license/server\", {\n  overwriteClassOnLicense(v) {\n    overwriteClassOnLicense = v;\n  }\n\n}, 3);\n\nconst applyRestrictions = method => function (originalFn, originalQuery) {\n  const query = addQueryRestrictionsToRoomsModel(originalQuery);\n  queriesLogger.debug({\n    msg: \"LivechatRooms.\".concat(method),\n    query\n  });\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return originalFn.call(this, query, ...args);\n};\n\noverwriteClassOnLicense('livechat-enterprise', LivechatRooms, {\n  find: applyRestrictions('find'),\n  update: applyRestrictions('update'),\n  remove: applyRestrictions('remove'),\n\n  updateDepartmentAncestorsById(originalFn, _id, departmentAncestors) {\n    const query = {\n      _id\n    };\n    const update = departmentAncestors ? {\n      $set: {\n        departmentAncestors\n      }\n    } : {\n      $unset: {\n        departmentAncestors: 1\n      }\n    };\n    return this.update(query, update);\n  }\n\n});\n\nLivechatRooms.prototype.setPredictedVisitorAbandonment = function (roomId, willBeAbandonedAt) {\n  const query = {\n    _id: roomId\n  };\n  const update = {\n    $set: {\n      'omnichannel.predictedVisitorAbandonmentAt': willBeAbandonedAt\n    }\n  };\n  return this.update(query, update);\n};\n\nLivechatRooms.prototype.findAbandonedOpenRooms = function (date) {\n  return this.find({\n    'omnichannel.predictedVisitorAbandonmentAt': {\n      $lte: date\n    },\n    'waitingResponse': {\n      $exists: false\n    },\n    'closedAt': {\n      $exists: false\n    },\n    'open': true\n  });\n};\n\nLivechatRooms.prototype.setOnHold = function (roomId) {\n  return this.update({\n    _id: roomId\n  }, {\n    $set: {\n      onHold: true\n    }\n  });\n};\n\nLivechatRooms.prototype.unsetOnHold = function (roomId) {\n  return this.update({\n    _id: roomId\n  }, {\n    $unset: {\n      onHold: 1\n    }\n  });\n};\n\nLivechatRooms.prototype.unsetPredictedVisitorAbandonment = function () {\n  return this.update({\n    'open': true,\n    't': 'l',\n    'omnichannel.predictedVisitorAbandonmentAt': {\n      $exists: true\n    }\n  }, {\n    $unset: {\n      'omnichannel.predictedVisitorAbandonmentAt': 1\n    }\n  }, {\n    multi: true\n  });\n};\n\nLivechatRooms.prototype.unsetPredictedVisitorAbandonmentByRoomId = function (roomId) {\n  return this.update({\n    _id: roomId\n  }, {\n    $unset: {\n      'omnichannel.predictedVisitorAbandonmentAt': 1\n    }\n  });\n};\n\nLivechatRooms.prototype.unsetAllOnHoldFieldsByRoomId = function (roomId) {\n  return this.update({\n    _id: roomId\n  }, {\n    $unset: {\n      'omnichannel.predictedVisitorAbandonmentAt': 1,\n      'onHold': 1\n    }\n  });\n};\n\nLivechatRooms.prototype.unsetPriorityById = function (priorityId) {\n  return this.update({\n    open: true,\n    t: 'l',\n    priorityId\n  }, {\n    $unset: {\n      priorityId: 1\n    }\n  }, {\n    multi: true\n  });\n};\n\nLivechatRooms.prototype.findOpenByPriorityId = function (priorityId, options) {\n  const query = {\n    t: 'l',\n    open: true,\n    priorityId\n  };\n  return this.find(query, options);\n};\n\nmodule.exportDefault(LivechatRooms);","map":{"version":3,"sources":["ee/app/models/server/models/LivechatRooms.js"],"names":["LivechatRooms","module","link","v","queriesLogger","addQueryRestrictionsToRoomsModel","overwriteClassOnLicense","applyRestrictions","method","originalFn","originalQuery","query","debug","msg","args","call","find","update","remove","updateDepartmentAncestorsById","_id","departmentAncestors","$set","$unset","prototype","setPredictedVisitorAbandonment","roomId","willBeAbandonedAt","findAbandonedOpenRooms","date","$lte","$exists","setOnHold","onHold","unsetOnHold","unsetPredictedVisitorAbandonment","multi","unsetPredictedVisitorAbandonmentByRoomId","unsetAllOnHoldFieldsByRoomId","unsetPriorityById","priorityId","open","t","findOpenByPriorityId","options","exportDefault"],"mappings":"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","sourcesContent":["import { LivechatRooms } from '../../../../../app/models/server/models/LivechatRooms';\nimport { queriesLogger } from '../../../livechat-enterprise/server/lib/logger';\nimport { addQueryRestrictionsToRoomsModel } from '../../../livechat-enterprise/server/lib/query.helper';\nimport { overwriteClassOnLicense } from '../../../license/server';\n\nconst applyRestrictions = (method) =>\n\tfunction (originalFn, originalQuery, ...args) {\n\t\tconst query = addQueryRestrictionsToRoomsModel(originalQuery);\n\t\tqueriesLogger.debug({ msg: `LivechatRooms.${method}`, query });\n\t\treturn originalFn.call(this, query, ...args);\n\t};\n\noverwriteClassOnLicense('livechat-enterprise', LivechatRooms, {\n\tfind: applyRestrictions('find'),\n\tupdate: applyRestrictions('update'),\n\tremove: applyRestrictions('remove'),\n\tupdateDepartmentAncestorsById(originalFn, _id, departmentAncestors) {\n\t\tconst query = {\n\t\t\t_id,\n\t\t};\n\t\tconst update = departmentAncestors ? { $set: { departmentAncestors } } : { $unset: { departmentAncestors: 1 } };\n\t\treturn this.update(query, update);\n\t},\n});\n\nLivechatRooms.prototype.setPredictedVisitorAbandonment = function (roomId, willBeAbandonedAt) {\n\tconst query = {\n\t\t_id: roomId,\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\t'omnichannel.predictedVisitorAbandonmentAt': willBeAbandonedAt,\n\t\t},\n\t};\n\n\treturn this.update(query, update);\n};\n\nLivechatRooms.prototype.findAbandonedOpenRooms = function (date) {\n\treturn this.find({\n\t\t'omnichannel.predictedVisitorAbandonmentAt': { $lte: date },\n\t\t'waitingResponse': { $exists: false },\n\t\t'closedAt': { $exists: false },\n\t\t'open': true,\n\t});\n};\n\nLivechatRooms.prototype.setOnHold = function (roomId) {\n\treturn this.update({ _id: roomId }, { $set: { onHold: true } });\n};\n\nLivechatRooms.prototype.unsetOnHold = function (roomId) {\n\treturn this.update({ _id: roomId }, { $unset: { onHold: 1 } });\n};\n\nLivechatRooms.prototype.unsetPredictedVisitorAbandonment = function () {\n\treturn this.update(\n\t\t{\n\t\t\t'open': true,\n\t\t\t't': 'l',\n\t\t\t'omnichannel.predictedVisitorAbandonmentAt': { $exists: true },\n\t\t},\n\t\t{\n\t\t\t$unset: { 'omnichannel.predictedVisitorAbandonmentAt': 1 },\n\t\t},\n\t\t{\n\t\t\tmulti: true,\n\t\t},\n\t);\n};\n\nLivechatRooms.prototype.unsetPredictedVisitorAbandonmentByRoomId = function (roomId) {\n\treturn this.update(\n\t\t{\n\t\t\t_id: roomId,\n\t\t},\n\t\t{\n\t\t\t$unset: { 'omnichannel.predictedVisitorAbandonmentAt': 1 },\n\t\t},\n\t);\n};\n\nLivechatRooms.prototype.unsetAllOnHoldFieldsByRoomId = function (roomId) {\n\treturn this.update(\n\t\t{\n\t\t\t_id: roomId,\n\t\t},\n\t\t{\n\t\t\t$unset: {\n\t\t\t\t'omnichannel.predictedVisitorAbandonmentAt': 1,\n\t\t\t\t'onHold': 1,\n\t\t\t},\n\t\t},\n\t);\n};\n\nLivechatRooms.prototype.unsetPriorityById = function (priorityId) {\n\treturn this.update(\n\t\t{\n\t\t\topen: true,\n\t\t\tt: 'l',\n\t\t\tpriorityId,\n\t\t},\n\t\t{\n\t\t\t$unset: { priorityId: 1 },\n\t\t},\n\t\t{\n\t\t\tmulti: true,\n\t\t},\n\t);\n};\n\nLivechatRooms.prototype.findOpenByPriorityId = function (priorityId, options) {\n\tconst query = {\n\t\tt: 'l',\n\t\topen: true,\n\t\tpriorityId,\n\t};\n\n\treturn this.find(query, options);\n};\n\nexport default LivechatRooms;\n"]},"sourceType":"module","hash":"4d8c10512aa8e687945bfbecc8bb1f1aef9306f1"}

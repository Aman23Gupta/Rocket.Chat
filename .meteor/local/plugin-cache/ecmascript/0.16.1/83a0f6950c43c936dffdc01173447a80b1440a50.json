{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/metrics/server/lib/collectMetrics.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/metrics/server/lib/collectMetrics.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/metrics/server/lib/collectMetrics.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/metrics/server/lib/collectMetrics.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/metrics/server/lib/collectMetrics.js"}},"code":"let http;\nmodule.link(\"http\", {\n  default(v) {\n    http = v;\n  }\n\n}, 0);\nlet client;\nmodule.link(\"prom-client\", {\n  default(v) {\n    client = v;\n  }\n\n}, 1);\nlet connect;\nmodule.link(\"connect\", {\n  default(v) {\n    connect = v;\n  }\n\n}, 2);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 3);\nlet gcStats;\nmodule.link(\"prometheus-gc-stats\", {\n  default(v) {\n    gcStats = v;\n  }\n\n}, 4);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 5);\nlet Facts;\nmodule.link(\"meteor/facts-base\", {\n  Facts(v) {\n    Facts = v;\n  }\n\n}, 6);\nlet Info, getOplogInfo;\nmodule.link(\"../../../utils/server\", {\n  Info(v) {\n    Info = v;\n  },\n\n  getOplogInfo(v) {\n    getOplogInfo = v;\n  }\n\n}, 7);\nlet getControl;\nmodule.link(\"../../../../server/lib/migrations\", {\n  getControl(v) {\n    getControl = v;\n  }\n\n}, 8);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 9);\nlet Statistics;\nmodule.link(\"../../../models/server/raw\", {\n  Statistics(v) {\n    Statistics = v;\n  }\n\n}, 10);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 11);\nlet metrics;\nmodule.link(\"./metrics\", {\n  metrics(v) {\n    metrics = v;\n  }\n\n}, 12);\nlet getAppsStatistics;\nmodule.link(\"../../../statistics/server/lib/getAppsStatistics\", {\n  getAppsStatistics(v) {\n    getAppsStatistics = v;\n  }\n\n}, 13);\n\nFacts.incrementServerFact = function (pkg, fact, increment) {\n  metrics.meteorFacts.inc({\n    pkg,\n    fact\n  }, increment);\n};\n\nconst setPrometheusData = () => Promise.asyncApply(() => {\n  var _getOplogInfo$mongo$_, _getOplogInfo$mongo$_2;\n\n  metrics.info.set({\n    version: Info.version,\n    unique_id: settings.get('uniqueID'),\n    site_url: settings.get('Site_Url')\n  }, 1);\n  const sessions = Array.from(Meteor.server.sessions.values());\n  const authenticatedSessions = sessions.filter(s => s.userId);\n  metrics.ddpSessions.set(Meteor.server.sessions.size);\n  metrics.ddpAuthenticatedSessions.set(authenticatedSessions.length);\n  metrics.ddpConnectedUsers.set(_.unique(authenticatedSessions.map(s => s.userId)).length); // Apps metrics\n\n  const {\n    totalInstalled,\n    totalActive,\n    totalFailed\n  } = getAppsStatistics();\n  metrics.totalAppsInstalled.set(totalInstalled || 0);\n  metrics.totalAppsEnabled.set(totalActive || 0);\n  metrics.totalAppsFailed.set(totalFailed || 0);\n  const oplogQueue = ((_getOplogInfo$mongo$_ = getOplogInfo().mongo._oplogHandle) === null || _getOplogInfo$mongo$_ === void 0 ? void 0 : (_getOplogInfo$mongo$_2 = _getOplogInfo$mongo$_._entryQueue) === null || _getOplogInfo$mongo$_2 === void 0 ? void 0 : _getOplogInfo$mongo$_2.length) || 0;\n  metrics.oplogQueue.set(oplogQueue);\n  const statistics = Promise.await(Statistics.findLast());\n\n  if (!statistics) {\n    return;\n  }\n\n  metrics.version.set({\n    version: statistics.version\n  }, 1);\n  metrics.migration.set(getControl().version);\n  metrics.instanceCount.set(statistics.instanceCount);\n  metrics.oplogEnabled.set({\n    enabled: statistics.oplogEnabled\n  }, 1); // User statistics\n\n  metrics.totalUsers.set(statistics.totalUsers);\n  metrics.activeUsers.set(statistics.activeUsers);\n  metrics.nonActiveUsers.set(statistics.nonActiveUsers);\n  metrics.onlineUsers.set(statistics.onlineUsers);\n  metrics.awayUsers.set(statistics.awayUsers);\n  metrics.offlineUsers.set(statistics.offlineUsers); // Room statistics\n\n  metrics.totalRooms.set(statistics.totalRooms);\n  metrics.totalChannels.set(statistics.totalChannels);\n  metrics.totalPrivateGroups.set(statistics.totalPrivateGroups);\n  metrics.totalDirect.set(statistics.totalDirect);\n  metrics.totalLivechat.set(statistics.totalLivechat); // Message statistics\n\n  metrics.totalMessages.set(statistics.totalMessages);\n  metrics.totalChannelMessages.set(statistics.totalChannelMessages);\n  metrics.totalPrivateGroupMessages.set(statistics.totalPrivateGroupMessages);\n  metrics.totalDirectMessages.set(statistics.totalDirectMessages);\n  metrics.totalLivechatMessages.set(statistics.totalLivechatMessages);\n  metrics.pushQueue.set(statistics.pushQueue || 0);\n});\n\nconst app = connect(); // const compression = require('compression');\n// app.use(compression());\n\napp.use('/metrics', (req, res) => {\n  res.setHeader('Content-Type', 'text/plain');\n  const data = client.register.metrics();\n  metrics.metricsRequests.inc();\n  metrics.metricsSize.set(data.length);\n  res.end(data);\n});\napp.use('/', (req, res) => {\n  const html = \"<html>\\n\\t\\t<head>\\n\\t\\t\\t<title>Rocket.Chat Prometheus Exporter</title>\\n\\t\\t</head>\\n\\t\\t<body>\\n\\t\\t\\t<h1>Rocket.Chat Prometheus Exporter</h1>\\n\\t\\t\\t<p><a href=\\\"/metrics\\\">Metrics</a></p>\\n\\t\\t</body>\\n\\t</html>\";\n  res.write(html);\n  res.end();\n});\nconst server = http.createServer(app);\nlet timer;\nlet resetTimer;\nlet defaultMetricsInitiated = false;\nlet gcStatsInitiated = false;\nconst was = {\n  enabled: false,\n  port: 9458,\n  resetInterval: 0,\n  collectGC: false\n};\n\nconst updatePrometheusConfig = () => Promise.asyncApply(() => {\n  const is = {\n    port: process.env.PROMETHEUS_PORT || settings.get('Prometheus_Port'),\n    enabled: settings.get('Prometheus_Enabled'),\n    resetInterval: settings.get('Prometheus_Reset_Interval'),\n    collectGC: settings.get('Prometheus_Garbage_Collector')\n  };\n\n  if (Object.values(is).some(s => s == null)) {\n    return;\n  }\n\n  if (Object.entries(is).every(_ref => {\n    let [k, v] = _ref;\n    return v === was[k];\n  })) {\n    return;\n  }\n\n  if (!is.enabled) {\n    if (was.enabled) {\n      SystemLogger.info('Disabling Prometheus');\n      server.close();\n      Meteor.clearInterval(timer);\n    }\n\n    Object.assign(was, is);\n    return;\n  }\n\n  SystemLogger.debug({\n    msg: 'Configuring Prometheus',\n    is\n  });\n\n  if (!was.enabled) {\n    server.listen({\n      port: is.port,\n      host: process.env.BIND_IP || '0.0.0.0'\n    });\n    timer = Meteor.setInterval(setPrometheusData, 5000);\n  }\n\n  Meteor.clearInterval(resetTimer);\n\n  if (is.resetInterval) {\n    resetTimer = Meteor.setInterval(() => {\n      client.register.getMetricsAsArray().forEach(metric => {\n        metric.hashMap = {};\n      });\n    }, is.resetInterval);\n  } // Prevent exceptions on calling those methods twice since\n  // it's not possible to stop them to be able to restart\n\n\n  try {\n    if (defaultMetricsInitiated === false) {\n      defaultMetricsInitiated = true;\n      client.collectDefaultMetrics();\n    }\n\n    if (is.collectGC && gcStatsInitiated === false) {\n      gcStatsInitiated = true;\n      gcStats()();\n    }\n  } catch (error) {\n    SystemLogger.error(error);\n  }\n\n  Object.assign(was, is);\n});\n\nMeteor.startup(() => Promise.asyncApply(() => {\n  settings.watchByRegex(/^Prometheus_.+/, updatePrometheusConfig);\n}));","map":{"version":3,"sources":["app/metrics/server/lib/collectMetrics.js"],"names":["http","module","link","default","v","client","connect","_","gcStats","Meteor","Facts","Info","getOplogInfo","getControl","settings","Statistics","SystemLogger","metrics","getAppsStatistics","incrementServerFact","pkg","fact","increment","meteorFacts","inc","setPrometheusData","info","set","version","unique_id","get","site_url","sessions","Array","from","server","values","authenticatedSessions","filter","s","userId","ddpSessions","size","ddpAuthenticatedSessions","length","ddpConnectedUsers","unique","map","totalInstalled","totalActive","totalFailed","totalAppsInstalled","totalAppsEnabled","totalAppsFailed","oplogQueue","mongo","_oplogHandle","_entryQueue","statistics","findLast","migration","instanceCount","oplogEnabled","enabled","totalUsers","activeUsers","nonActiveUsers","onlineUsers","awayUsers","offlineUsers","totalRooms","totalChannels","totalPrivateGroups","totalDirect","totalLivechat","totalMessages","totalChannelMessages","totalPrivateGroupMessages","totalDirectMessages","totalLivechatMessages","pushQueue","app","use","req","res","setHeader","data","register","metricsRequests","metricsSize","end","html","write","createServer","timer","resetTimer","defaultMetricsInitiated","gcStatsInitiated","was","port","resetInterval","collectGC","updatePrometheusConfig","is","process","env","PROMETHEUS_PORT","Object","some","entries","every","k","close","clearInterval","assign","debug","msg","listen","host","BIND_IP","setInterval","getMetricsAsArray","forEach","metric","hashMap","collectDefaultMetrics","error","startup","watchByRegex"],"mappings":"AAAA,IAAIA,IAAJ;AAASC,MAAM,CAACC,IAAP,CAAY,MAAZ,EAAmB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,IAAI,GAACI,CAAL;AAAO;;AAAnB,CAAnB,EAAwC,CAAxC;AAA2C,IAAIC,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;;AAArB,CAA1B,EAAiD,CAAjD;AAAoD,IAAIE,OAAJ;AAAYL,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAsB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACE,IAAAA,OAAO,GAACF,CAAR;AAAU;;AAAtB,CAAtB,EAA8C,CAA9C;;AAAiD,IAAIG,CAAJ;;AAAMN,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACG,IAAAA,CAAC,GAACH,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAA8C,IAAII,OAAJ;AAAYP,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACI,IAAAA,OAAO,GAACJ,CAAR;AAAU;;AAAtB,CAAlC,EAA0D,CAA1D;AAA6D,IAAIK,MAAJ;AAAWR,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACO,EAAAA,MAAM,CAACL,CAAD,EAAG;AAACK,IAAAA,MAAM,GAACL,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIM,KAAJ;AAAUT,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACQ,EAAAA,KAAK,CAACN,CAAD,EAAG;AAACM,IAAAA,KAAK,GAACN,CAAN;AAAQ;;AAAlB,CAAhC,EAAoD,CAApD;AAAuD,IAAIO,IAAJ,EAASC,YAAT;AAAsBX,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACS,EAAAA,IAAI,CAACP,CAAD,EAAG;AAACO,IAAAA,IAAI,GAACP,CAAL;AAAO,GAAhB;;AAAiBQ,EAAAA,YAAY,CAACR,CAAD,EAAG;AAACQ,IAAAA,YAAY,GAACR,CAAb;AAAe;;AAAhD,CAApC,EAAsF,CAAtF;AAAyF,IAAIS,UAAJ;AAAeZ,MAAM,CAACC,IAAP,CAAY,mCAAZ,EAAgD;AAACW,EAAAA,UAAU,CAACT,CAAD,EAAG;AAACS,IAAAA,UAAU,GAACT,CAAX;AAAa;;AAA5B,CAAhD,EAA8E,CAA9E;AAAiF,IAAIU,QAAJ;AAAab,MAAM,CAACC,IAAP,CAAY,0BAAZ,EAAuC;AAACY,EAAAA,QAAQ,CAACV,CAAD,EAAG;AAACU,IAAAA,QAAQ,GAACV,CAAT;AAAW;;AAAxB,CAAvC,EAAiE,CAAjE;AAAoE,IAAIW,UAAJ;AAAed,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACa,EAAAA,UAAU,CAACX,CAAD,EAAG;AAACW,IAAAA,UAAU,GAACX,CAAX;AAAa;;AAA5B,CAAzC,EAAuE,EAAvE;AAA2E,IAAIY,YAAJ;AAAiBf,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACc,EAAAA,YAAY,CAACZ,CAAD,EAAG;AAACY,IAAAA,YAAY,GAACZ,CAAb;AAAe;;AAAhC,CAAnD,EAAqF,EAArF;AAAyF,IAAIa,OAAJ;AAAYhB,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwB;AAACe,EAAAA,OAAO,CAACb,CAAD,EAAG;AAACa,IAAAA,OAAO,GAACb,CAAR;AAAU;;AAAtB,CAAxB,EAAgD,EAAhD;AAAoD,IAAIc,iBAAJ;AAAsBjB,MAAM,CAACC,IAAP,CAAY,kDAAZ,EAA+D;AAACgB,EAAAA,iBAAiB,CAACd,CAAD,EAAG;AAACc,IAAAA,iBAAiB,GAACd,CAAlB;AAAoB;;AAA1C,CAA/D,EAA2G,EAA3G;;AAiBx+BM,KAAK,CAACS,mBAAN,GAA4B,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,SAArB,EAAgC;AAC3DL,EAAAA,OAAO,CAACM,WAAR,CAAoBC,GAApB,CAAwB;AAAEJ,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAxB,EAAuCC,SAAvC;AACA,CAFD;;AAIA,MAAMG,iBAAiB,GAAG,+BAAY;AAAA;;AACrCR,EAAAA,OAAO,CAACS,IAAR,CAAaC,GAAb,CACC;AACCC,IAAAA,OAAO,EAAEjB,IAAI,CAACiB,OADf;AAECC,IAAAA,SAAS,EAAEf,QAAQ,CAACgB,GAAT,CAAa,UAAb,CAFZ;AAGCC,IAAAA,QAAQ,EAAEjB,QAAQ,CAACgB,GAAT,CAAa,UAAb;AAHX,GADD,EAMC,CAND;AASA,QAAME,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWzB,MAAM,CAAC0B,MAAP,CAAcH,QAAd,CAAuBI,MAAvB,EAAX,CAAjB;AACA,QAAMC,qBAAqB,GAAGL,QAAQ,CAACM,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACC,MAAzB,CAA9B;AACAvB,EAAAA,OAAO,CAACwB,WAAR,CAAoBd,GAApB,CAAwBlB,MAAM,CAAC0B,MAAP,CAAcH,QAAd,CAAuBU,IAA/C;AACAzB,EAAAA,OAAO,CAAC0B,wBAAR,CAAiChB,GAAjC,CAAqCU,qBAAqB,CAACO,MAA3D;AACA3B,EAAAA,OAAO,CAAC4B,iBAAR,CAA0BlB,GAA1B,CAA8BpB,CAAC,CAACuC,MAAF,CAAST,qBAAqB,CAACU,GAAtB,CAA2BR,CAAD,IAAOA,CAAC,CAACC,MAAnC,CAAT,EAAqDI,MAAnF,EAdqC,CAgBrC;;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAA+ChC,iBAAiB,EAAtE;AAEAD,EAAAA,OAAO,CAACkC,kBAAR,CAA2BxB,GAA3B,CAA+BqB,cAAc,IAAI,CAAjD;AACA/B,EAAAA,OAAO,CAACmC,gBAAR,CAAyBzB,GAAzB,CAA6BsB,WAAW,IAAI,CAA5C;AACAhC,EAAAA,OAAO,CAACoC,eAAR,CAAwB1B,GAAxB,CAA4BuB,WAAW,IAAI,CAA3C;AAEA,QAAMI,UAAU,GAAG,0BAAA1C,YAAY,GAAG2C,KAAf,CAAqBC,YAArB,0GAAmCC,WAAnC,kFAAgDb,MAAhD,KAA0D,CAA7E;AACA3B,EAAAA,OAAO,CAACqC,UAAR,CAAmB3B,GAAnB,CAAuB2B,UAAvB;AAEA,QAAMI,UAAU,iBAAS3C,UAAU,CAAC4C,QAAX,EAAT,CAAhB;;AACA,MAAI,CAACD,UAAL,EAAiB;AAChB;AACA;;AAEDzC,EAAAA,OAAO,CAACW,OAAR,CAAgBD,GAAhB,CAAoB;AAAEC,IAAAA,OAAO,EAAE8B,UAAU,CAAC9B;AAAtB,GAApB,EAAqD,CAArD;AACAX,EAAAA,OAAO,CAAC2C,SAAR,CAAkBjC,GAAlB,CAAsBd,UAAU,GAAGe,OAAnC;AACAX,EAAAA,OAAO,CAAC4C,aAAR,CAAsBlC,GAAtB,CAA0B+B,UAAU,CAACG,aAArC;AACA5C,EAAAA,OAAO,CAAC6C,YAAR,CAAqBnC,GAArB,CAAyB;AAAEoC,IAAAA,OAAO,EAAEL,UAAU,CAACI;AAAtB,GAAzB,EAA+D,CAA/D,EAlCqC,CAoCrC;;AACA7C,EAAAA,OAAO,CAAC+C,UAAR,CAAmBrC,GAAnB,CAAuB+B,UAAU,CAACM,UAAlC;AACA/C,EAAAA,OAAO,CAACgD,WAAR,CAAoBtC,GAApB,CAAwB+B,UAAU,CAACO,WAAnC;AACAhD,EAAAA,OAAO,CAACiD,cAAR,CAAuBvC,GAAvB,CAA2B+B,UAAU,CAACQ,cAAtC;AACAjD,EAAAA,OAAO,CAACkD,WAAR,CAAoBxC,GAApB,CAAwB+B,UAAU,CAACS,WAAnC;AACAlD,EAAAA,OAAO,CAACmD,SAAR,CAAkBzC,GAAlB,CAAsB+B,UAAU,CAACU,SAAjC;AACAnD,EAAAA,OAAO,CAACoD,YAAR,CAAqB1C,GAArB,CAAyB+B,UAAU,CAACW,YAApC,EA1CqC,CA4CrC;;AACApD,EAAAA,OAAO,CAACqD,UAAR,CAAmB3C,GAAnB,CAAuB+B,UAAU,CAACY,UAAlC;AACArD,EAAAA,OAAO,CAACsD,aAAR,CAAsB5C,GAAtB,CAA0B+B,UAAU,CAACa,aAArC;AACAtD,EAAAA,OAAO,CAACuD,kBAAR,CAA2B7C,GAA3B,CAA+B+B,UAAU,CAACc,kBAA1C;AACAvD,EAAAA,OAAO,CAACwD,WAAR,CAAoB9C,GAApB,CAAwB+B,UAAU,CAACe,WAAnC;AACAxD,EAAAA,OAAO,CAACyD,aAAR,CAAsB/C,GAAtB,CAA0B+B,UAAU,CAACgB,aAArC,EAjDqC,CAmDrC;;AACAzD,EAAAA,OAAO,CAAC0D,aAAR,CAAsBhD,GAAtB,CAA0B+B,UAAU,CAACiB,aAArC;AACA1D,EAAAA,OAAO,CAAC2D,oBAAR,CAA6BjD,GAA7B,CAAiC+B,UAAU,CAACkB,oBAA5C;AACA3D,EAAAA,OAAO,CAAC4D,yBAAR,CAAkClD,GAAlC,CAAsC+B,UAAU,CAACmB,yBAAjD;AACA5D,EAAAA,OAAO,CAAC6D,mBAAR,CAA4BnD,GAA5B,CAAgC+B,UAAU,CAACoB,mBAA3C;AACA7D,EAAAA,OAAO,CAAC8D,qBAAR,CAA8BpD,GAA9B,CAAkC+B,UAAU,CAACqB,qBAA7C;AAEA9D,EAAAA,OAAO,CAAC+D,SAAR,CAAkBrD,GAAlB,CAAsB+B,UAAU,CAACsB,SAAX,IAAwB,CAA9C;AACA,CA3DyB,CAA1B;;AA6DA,MAAMC,GAAG,GAAG3E,OAAO,EAAnB,C,CAEA;AACA;;AAEA2E,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjCA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,YAA9B;AACA,QAAMC,IAAI,GAAGjF,MAAM,CAACkF,QAAP,CAAgBtE,OAAhB,EAAb;AAEAA,EAAAA,OAAO,CAACuE,eAAR,CAAwBhE,GAAxB;AACAP,EAAAA,OAAO,CAACwE,WAAR,CAAoB9D,GAApB,CAAwB2D,IAAI,CAAC1C,MAA7B;AAEAwC,EAAAA,GAAG,CAACM,GAAJ,CAAQJ,IAAR;AACA,CARD;AAUAL,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1B,QAAMO,IAAI,6NAAV;AAUAP,EAAAA,GAAG,CAACQ,KAAJ,CAAUD,IAAV;AACAP,EAAAA,GAAG,CAACM,GAAJ;AACA,CAbD;AAeA,MAAMvD,MAAM,GAAGnC,IAAI,CAAC6F,YAAL,CAAkBZ,GAAlB,CAAf;AAEA,IAAIa,KAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,uBAAuB,GAAG,KAA9B;AACA,IAAIC,gBAAgB,GAAG,KAAvB;AACA,MAAMC,GAAG,GAAG;AACXnC,EAAAA,OAAO,EAAE,KADE;AAEXoC,EAAAA,IAAI,EAAE,IAFK;AAGXC,EAAAA,aAAa,EAAE,CAHJ;AAIXC,EAAAA,SAAS,EAAE;AAJA,CAAZ;;AAMA,MAAMC,sBAAsB,GAAG,+BAAY;AAC1C,QAAMC,EAAE,GAAG;AACVJ,IAAAA,IAAI,EAAEK,OAAO,CAACC,GAAR,CAAYC,eAAZ,IAA+B5F,QAAQ,CAACgB,GAAT,CAAa,iBAAb,CAD3B;AAEViC,IAAAA,OAAO,EAAEjD,QAAQ,CAACgB,GAAT,CAAa,oBAAb,CAFC;AAGVsE,IAAAA,aAAa,EAAEtF,QAAQ,CAACgB,GAAT,CAAa,2BAAb,CAHL;AAIVuE,IAAAA,SAAS,EAAEvF,QAAQ,CAACgB,GAAT,CAAa,8BAAb;AAJD,GAAX;;AAOA,MAAI6E,MAAM,CAACvE,MAAP,CAAcmE,EAAd,EAAkBK,IAAlB,CAAwBrE,CAAD,IAAOA,CAAC,IAAI,IAAnC,CAAJ,EAA8C;AAC7C;AACA;;AAED,MAAIoE,MAAM,CAACE,OAAP,CAAeN,EAAf,EAAmBO,KAAnB,CAAyB;AAAA,QAAC,CAACC,CAAD,EAAI3G,CAAJ,CAAD;AAAA,WAAYA,CAAC,KAAK8F,GAAG,CAACa,CAAD,CAArB;AAAA,GAAzB,CAAJ,EAAwD;AACvD;AACA;;AAED,MAAI,CAACR,EAAE,CAACxC,OAAR,EAAiB;AAChB,QAAImC,GAAG,CAACnC,OAAR,EAAiB;AAChB/C,MAAAA,YAAY,CAACU,IAAb,CAAkB,sBAAlB;AACAS,MAAAA,MAAM,CAAC6E,KAAP;AACAvG,MAAAA,MAAM,CAACwG,aAAP,CAAqBnB,KAArB;AACA;;AACDa,IAAAA,MAAM,CAACO,MAAP,CAAchB,GAAd,EAAmBK,EAAnB;AACA;AACA;;AAEDvF,EAAAA,YAAY,CAACmG,KAAb,CAAmB;AAAEC,IAAAA,GAAG,EAAE,wBAAP;AAAiCb,IAAAA;AAAjC,GAAnB;;AAEA,MAAI,CAACL,GAAG,CAACnC,OAAT,EAAkB;AACjB5B,IAAAA,MAAM,CAACkF,MAAP,CAAc;AACblB,MAAAA,IAAI,EAAEI,EAAE,CAACJ,IADI;AAEbmB,MAAAA,IAAI,EAAEd,OAAO,CAACC,GAAR,CAAYc,OAAZ,IAAuB;AAFhB,KAAd;AAKAzB,IAAAA,KAAK,GAAGrF,MAAM,CAAC+G,WAAP,CAAmB/F,iBAAnB,EAAsC,IAAtC,CAAR;AACA;;AAEDhB,EAAAA,MAAM,CAACwG,aAAP,CAAqBlB,UAArB;;AACA,MAAIQ,EAAE,CAACH,aAAP,EAAsB;AACrBL,IAAAA,UAAU,GAAGtF,MAAM,CAAC+G,WAAP,CAAmB,MAAM;AACrCnH,MAAAA,MAAM,CAACkF,QAAP,CAAgBkC,iBAAhB,GAAoCC,OAApC,CAA6CC,MAAD,IAAY;AACvDA,QAAAA,MAAM,CAACC,OAAP,GAAiB,EAAjB;AACA,OAFD;AAGA,KAJY,EAIVrB,EAAE,CAACH,aAJO,CAAb;AAKA,GA5CyC,CA8C1C;AACA;;;AACA,MAAI;AACH,QAAIJ,uBAAuB,KAAK,KAAhC,EAAuC;AACtCA,MAAAA,uBAAuB,GAAG,IAA1B;AACA3F,MAAAA,MAAM,CAACwH,qBAAP;AACA;;AACD,QAAItB,EAAE,CAACF,SAAH,IAAgBJ,gBAAgB,KAAK,KAAzC,EAAgD;AAC/CA,MAAAA,gBAAgB,GAAG,IAAnB;AACAzF,MAAAA,OAAO;AACP;AACD,GATD,CASE,OAAOsH,KAAP,EAAc;AACf9G,IAAAA,YAAY,CAAC8G,KAAb,CAAmBA,KAAnB;AACA;;AAEDnB,EAAAA,MAAM,CAACO,MAAP,CAAchB,GAAd,EAAmBK,EAAnB;AACA,CA9D8B,CAA/B;;AAgEA9F,MAAM,CAACsH,OAAP,CAAe,+BAAY;AAC1BjH,EAAAA,QAAQ,CAACkH,YAAT,CAAsB,gBAAtB,EAAwC1B,sBAAxC;AACA,CAFc,CAAf","sourcesContent":["import http from 'http';\n\nimport client from 'prom-client';\nimport connect from 'connect';\nimport _ from 'underscore';\nimport gcStats from 'prometheus-gc-stats';\nimport { Meteor } from 'meteor/meteor';\nimport { Facts } from 'meteor/facts-base';\n\nimport { Info, getOplogInfo } from '../../../utils/server';\nimport { getControl } from '../../../../server/lib/migrations';\nimport { settings } from '../../../settings/server';\nimport { Statistics } from '../../../models/server/raw';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { metrics } from './metrics';\nimport { getAppsStatistics } from '../../../statistics/server/lib/getAppsStatistics';\n\nFacts.incrementServerFact = function (pkg, fact, increment) {\n\tmetrics.meteorFacts.inc({ pkg, fact }, increment);\n};\n\nconst setPrometheusData = async () => {\n\tmetrics.info.set(\n\t\t{\n\t\t\tversion: Info.version,\n\t\t\tunique_id: settings.get('uniqueID'),\n\t\t\tsite_url: settings.get('Site_Url'),\n\t\t},\n\t\t1,\n\t);\n\n\tconst sessions = Array.from(Meteor.server.sessions.values());\n\tconst authenticatedSessions = sessions.filter((s) => s.userId);\n\tmetrics.ddpSessions.set(Meteor.server.sessions.size);\n\tmetrics.ddpAuthenticatedSessions.set(authenticatedSessions.length);\n\tmetrics.ddpConnectedUsers.set(_.unique(authenticatedSessions.map((s) => s.userId)).length);\n\n\t// Apps metrics\n\tconst { totalInstalled, totalActive, totalFailed } = getAppsStatistics();\n\n\tmetrics.totalAppsInstalled.set(totalInstalled || 0);\n\tmetrics.totalAppsEnabled.set(totalActive || 0);\n\tmetrics.totalAppsFailed.set(totalFailed || 0);\n\n\tconst oplogQueue = getOplogInfo().mongo._oplogHandle?._entryQueue?.length || 0;\n\tmetrics.oplogQueue.set(oplogQueue);\n\n\tconst statistics = await Statistics.findLast();\n\tif (!statistics) {\n\t\treturn;\n\t}\n\n\tmetrics.version.set({ version: statistics.version }, 1);\n\tmetrics.migration.set(getControl().version);\n\tmetrics.instanceCount.set(statistics.instanceCount);\n\tmetrics.oplogEnabled.set({ enabled: statistics.oplogEnabled }, 1);\n\n\t// User statistics\n\tmetrics.totalUsers.set(statistics.totalUsers);\n\tmetrics.activeUsers.set(statistics.activeUsers);\n\tmetrics.nonActiveUsers.set(statistics.nonActiveUsers);\n\tmetrics.onlineUsers.set(statistics.onlineUsers);\n\tmetrics.awayUsers.set(statistics.awayUsers);\n\tmetrics.offlineUsers.set(statistics.offlineUsers);\n\n\t// Room statistics\n\tmetrics.totalRooms.set(statistics.totalRooms);\n\tmetrics.totalChannels.set(statistics.totalChannels);\n\tmetrics.totalPrivateGroups.set(statistics.totalPrivateGroups);\n\tmetrics.totalDirect.set(statistics.totalDirect);\n\tmetrics.totalLivechat.set(statistics.totalLivechat);\n\n\t// Message statistics\n\tmetrics.totalMessages.set(statistics.totalMessages);\n\tmetrics.totalChannelMessages.set(statistics.totalChannelMessages);\n\tmetrics.totalPrivateGroupMessages.set(statistics.totalPrivateGroupMessages);\n\tmetrics.totalDirectMessages.set(statistics.totalDirectMessages);\n\tmetrics.totalLivechatMessages.set(statistics.totalLivechatMessages);\n\n\tmetrics.pushQueue.set(statistics.pushQueue || 0);\n};\n\nconst app = connect();\n\n// const compression = require('compression');\n// app.use(compression());\n\napp.use('/metrics', (req, res) => {\n\tres.setHeader('Content-Type', 'text/plain');\n\tconst data = client.register.metrics();\n\n\tmetrics.metricsRequests.inc();\n\tmetrics.metricsSize.set(data.length);\n\n\tres.end(data);\n});\n\napp.use('/', (req, res) => {\n\tconst html = `<html>\n\t\t<head>\n\t\t\t<title>Rocket.Chat Prometheus Exporter</title>\n\t\t</head>\n\t\t<body>\n\t\t\t<h1>Rocket.Chat Prometheus Exporter</h1>\n\t\t\t<p><a href=\"/metrics\">Metrics</a></p>\n\t\t</body>\n\t</html>`;\n\n\tres.write(html);\n\tres.end();\n});\n\nconst server = http.createServer(app);\n\nlet timer;\nlet resetTimer;\nlet defaultMetricsInitiated = false;\nlet gcStatsInitiated = false;\nconst was = {\n\tenabled: false,\n\tport: 9458,\n\tresetInterval: 0,\n\tcollectGC: false,\n};\nconst updatePrometheusConfig = async () => {\n\tconst is = {\n\t\tport: process.env.PROMETHEUS_PORT || settings.get('Prometheus_Port'),\n\t\tenabled: settings.get('Prometheus_Enabled'),\n\t\tresetInterval: settings.get('Prometheus_Reset_Interval'),\n\t\tcollectGC: settings.get('Prometheus_Garbage_Collector'),\n\t};\n\n\tif (Object.values(is).some((s) => s == null)) {\n\t\treturn;\n\t}\n\n\tif (Object.entries(is).every(([k, v]) => v === was[k])) {\n\t\treturn;\n\t}\n\n\tif (!is.enabled) {\n\t\tif (was.enabled) {\n\t\t\tSystemLogger.info('Disabling Prometheus');\n\t\t\tserver.close();\n\t\t\tMeteor.clearInterval(timer);\n\t\t}\n\t\tObject.assign(was, is);\n\t\treturn;\n\t}\n\n\tSystemLogger.debug({ msg: 'Configuring Prometheus', is });\n\n\tif (!was.enabled) {\n\t\tserver.listen({\n\t\t\tport: is.port,\n\t\t\thost: process.env.BIND_IP || '0.0.0.0',\n\t\t});\n\n\t\ttimer = Meteor.setInterval(setPrometheusData, 5000);\n\t}\n\n\tMeteor.clearInterval(resetTimer);\n\tif (is.resetInterval) {\n\t\tresetTimer = Meteor.setInterval(() => {\n\t\t\tclient.register.getMetricsAsArray().forEach((metric) => {\n\t\t\t\tmetric.hashMap = {};\n\t\t\t});\n\t\t}, is.resetInterval);\n\t}\n\n\t// Prevent exceptions on calling those methods twice since\n\t// it's not possible to stop them to be able to restart\n\ttry {\n\t\tif (defaultMetricsInitiated === false) {\n\t\t\tdefaultMetricsInitiated = true;\n\t\t\tclient.collectDefaultMetrics();\n\t\t}\n\t\tif (is.collectGC && gcStatsInitiated === false) {\n\t\t\tgcStatsInitiated = true;\n\t\t\tgcStats()();\n\t\t}\n\t} catch (error) {\n\t\tSystemLogger.error(error);\n\t}\n\n\tObject.assign(was, is);\n};\n\nMeteor.startup(async () => {\n\tsettings.watchByRegex(/^Prometheus_.+/, updatePrometheusConfig);\n});\n"]},"sourceType":"module","hash":"83a0f6950c43c936dffdc01173447a80b1440a50"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomName.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/channel-settings/server/functions/saveRoomName.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomName.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomName.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/channel-settings/server/functions/saveRoomName.js"}},"code":"module.export({\n  saveRoomName: () => saveRoomName\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Rooms, Messages, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 1);\nlet Integrations;\nmodule.link(\"../../../models/server/raw\", {\n  Integrations(v) {\n    Integrations = v;\n  }\n\n}, 2);\nlet roomTypes, getValidRoomName;\nmodule.link(\"../../../utils/server\", {\n  roomTypes(v) {\n    roomTypes = v;\n  },\n\n  getValidRoomName(v) {\n    getValidRoomName = v;\n  }\n\n}, 3);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 4);\nlet checkUsernameAvailability;\nmodule.link(\"../../../lib/server/functions\", {\n  checkUsernameAvailability(v) {\n    checkUsernameAvailability = v;\n  }\n\n}, 5);\n\nconst updateRoomName = (rid, displayName, isDiscussion) => {\n  if (isDiscussion) {\n    return Rooms.setFnameById(rid, displayName) && Subscriptions.updateFnameByRoomId(rid, displayName);\n  }\n\n  const slugifiedRoomName = getValidRoomName(displayName, rid); // Check if the username is available\n\n  if (!checkUsernameAvailability(slugifiedRoomName)) {\n    throw new Meteor.Error('error-duplicate-handle', \"A room, team or user with name '\".concat(slugifiedRoomName, \"' already exists\"), {\n      function: 'RocketChat.updateRoomName',\n      handle: slugifiedRoomName\n    });\n  }\n\n  return Rooms.setNameById(rid, slugifiedRoomName, displayName) && Subscriptions.updateNameAndAlertByRoomId(rid, slugifiedRoomName, displayName);\n};\n\nfunction saveRoomName(rid, displayName, user) {\n  return Promise.asyncApply(() => {\n    let sendMessage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    const room = Rooms.findOneById(rid);\n\n    if (roomTypes.getConfig(room.t).preventRenaming()) {\n      throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n        function: 'RocketChat.saveRoomdisplayName'\n      });\n    }\n\n    if (displayName === room.name) {\n      return;\n    }\n\n    const isDiscussion = Boolean(room && room.prid);\n    const update = updateRoomName(rid, displayName, isDiscussion);\n\n    if (!update) {\n      return;\n    }\n\n    Promise.await(Integrations.updateRoomName(room.name, displayName));\n\n    if (sendMessage) {\n      Messages.createRoomRenamedWithRoomIdRoomNameAndUser(rid, displayName, user);\n    }\n\n    callbacks.run('afterRoomNameChange', {\n      rid,\n      name: displayName,\n      oldName: room.name\n    });\n    return displayName;\n  });\n}","map":{"version":3,"sources":["app/channel-settings/server/functions/saveRoomName.js"],"names":["module","export","saveRoomName","Meteor","link","v","Rooms","Messages","Subscriptions","Integrations","roomTypes","getValidRoomName","callbacks","checkUsernameAvailability","updateRoomName","rid","displayName","isDiscussion","setFnameById","updateFnameByRoomId","slugifiedRoomName","Error","function","handle","setNameById","updateNameAndAlertByRoomId","user","sendMessage","room","findOneById","getConfig","t","preventRenaming","name","Boolean","prid","update","createRoomRenamedWithRoomIdRoomNameAndUser","run","oldName"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Rooms, Messages, Subscriptions } from '../../../models/server';\nimport { Integrations } from '../../../models/server/raw';\nimport { roomTypes, getValidRoomName } from '../../../utils/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { checkUsernameAvailability } from '../../../lib/server/functions';\n\nconst updateRoomName = (rid, displayName, isDiscussion) => {\n\tif (isDiscussion) {\n\t\treturn Rooms.setFnameById(rid, displayName) && Subscriptions.updateFnameByRoomId(rid, displayName);\n\t}\n\tconst slugifiedRoomName = getValidRoomName(displayName, rid);\n\n\t// Check if the username is available\n\tif (!checkUsernameAvailability(slugifiedRoomName)) {\n\t\tthrow new Meteor.Error('error-duplicate-handle', `A room, team or user with name '${slugifiedRoomName}' already exists`, {\n\t\t\tfunction: 'RocketChat.updateRoomName',\n\t\t\thandle: slugifiedRoomName,\n\t\t});\n\t}\n\n\treturn (\n\t\tRooms.setNameById(rid, slugifiedRoomName, displayName) && Subscriptions.updateNameAndAlertByRoomId(rid, slugifiedRoomName, displayName)\n\t);\n};\n\nexport async function saveRoomName(rid, displayName, user, sendMessage = true) {\n\tconst room = Rooms.findOneById(rid);\n\tif (roomTypes.getConfig(room.t).preventRenaming()) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tfunction: 'RocketChat.saveRoomdisplayName',\n\t\t});\n\t}\n\tif (displayName === room.name) {\n\t\treturn;\n\t}\n\tconst isDiscussion = Boolean(room && room.prid);\n\tconst update = updateRoomName(rid, displayName, isDiscussion);\n\tif (!update) {\n\t\treturn;\n\t}\n\n\tawait Integrations.updateRoomName(room.name, displayName);\n\tif (sendMessage) {\n\t\tMessages.createRoomRenamedWithRoomIdRoomNameAndUser(rid, displayName, user);\n\t}\n\tcallbacks.run('afterRoomNameChange', { rid, name: displayName, oldName: room.name });\n\treturn displayName;\n}\n"]},"sourceType":"module","hash":"3adb385b3192dde78cbd00a88407cdb1f6c3eb3c"}

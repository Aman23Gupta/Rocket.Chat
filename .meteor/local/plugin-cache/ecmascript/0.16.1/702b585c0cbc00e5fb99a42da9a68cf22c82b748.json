{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/visitors.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/lib/visitors.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/visitors.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/visitors.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/lib/visitors.js"}},"code":"module.export({\n  findVisitorInfo: () => findVisitorInfo,\n  findVisitedPages: () => findVisitedPages,\n  findChatHistory: () => findChatHistory,\n  searchChats: () => searchChats,\n  findVisitorsToAutocomplete: () => findVisitorsToAutocomplete,\n  findVisitorsByEmailOrPhoneOrNameOrUsername: () => findVisitorsByEmailOrPhoneOrNameOrUsername\n});\nlet hasPermissionAsync;\nmodule.link(\"../../../../authorization/server/functions/hasPermission\", {\n  hasPermissionAsync(v) {\n    hasPermissionAsync = v;\n  }\n\n}, 0);\nlet LivechatVisitors, Messages, LivechatRooms;\nmodule.link(\"../../../../models/server/raw\", {\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 1);\nlet canAccessRoomAsync;\nmodule.link(\"../../../../authorization/server/functions/canAccessRoom\", {\n  canAccessRoomAsync(v) {\n    canAccessRoomAsync = v;\n  }\n\n}, 2);\n\nfunction findVisitorInfo(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      visitorId\n    } = _ref;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const visitor = Promise.await(LivechatVisitors.findOneById(visitorId));\n\n    if (!visitor) {\n      throw new Error('visitor-not-found');\n    }\n\n    return {\n      visitor\n    };\n  });\n}\n\nfunction findVisitedPages(_ref2) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      roomId,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref2;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const room = Promise.await(LivechatRooms.findOneById(roomId));\n\n    if (!room) {\n      throw new Error('invalid-room');\n    }\n\n    const cursor = Messages.findByRoomIdAndType(room._id, 'livechat_navigation_history', {\n      sort: sort || {\n        ts: -1\n      },\n      skip: offset,\n      limit: count\n    });\n    const total = Promise.await(cursor.count());\n    const pages = Promise.await(cursor.toArray());\n    return {\n      pages,\n      count: pages.length,\n      offset,\n      total\n    };\n  });\n}\n\nfunction findChatHistory(_ref3) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      roomId,\n      visitorId,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref3;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const room = Promise.await(LivechatRooms.findOneById(roomId));\n\n    if (!room) {\n      throw new Error('invalid-room');\n    }\n\n    if (!Promise.await(canAccessRoomAsync(room, {\n      _id: userId\n    }))) {\n      throw new Error('error-not-allowed');\n    }\n\n    const cursor = LivechatRooms.findByVisitorId(visitorId, {\n      sort: sort || {\n        ts: -1\n      },\n      skip: offset,\n      limit: count\n    });\n    const total = Promise.await(cursor.count());\n    const history = Promise.await(cursor.toArray());\n    return {\n      history,\n      count: history.length,\n      offset,\n      total\n    };\n  });\n}\n\nfunction searchChats(_ref4) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      roomId,\n      visitorId,\n      searchText,\n      closedChatsOnly,\n      servedChatsOnly: served,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref4;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const room = Promise.await(LivechatRooms.findOneById(roomId));\n\n    if (!room) {\n      throw new Error('invalid-room');\n    }\n\n    if (!Promise.await(canAccessRoomAsync(room, {\n      _id: userId\n    }))) {\n      throw new Error('error-not-allowed');\n    }\n\n    const options = {\n      sort: sort || {\n        ts: -1\n      },\n      skip: offset,\n      limit: count\n    };\n    const [total] = Promise.await(LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n      visitorId,\n      open: !closedChatsOnly,\n      served,\n      searchText,\n      onlyCount: true\n    }).toArray());\n    const cursor = Promise.await(LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n      visitorId,\n      open: !closedChatsOnly,\n      served,\n      searchText,\n      options\n    }));\n    const history = Promise.await(cursor.toArray());\n    return {\n      history,\n      count: history.length,\n      offset,\n      total: total && total.count || 0\n    };\n  });\n}\n\nfunction findVisitorsToAutocomplete(_ref5) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      selector\n    } = _ref5;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      return {\n        items: []\n      };\n    }\n\n    const {\n      exceptions = [],\n      conditions = {}\n    } = selector;\n    const options = {\n      projection: {\n        _id: 1,\n        name: 1,\n        username: 1\n      },\n      limit: 10,\n      sort: {\n        name: 1\n      }\n    };\n    const items = Promise.await(LivechatVisitors.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditions, options).toArray());\n    return {\n      items\n    };\n  });\n}\n\nfunction findVisitorsByEmailOrPhoneOrNameOrUsername(_ref6) {\n  return Promise.asyncApply(() => {\n    let {\n      userId,\n      term,\n      pagination: {\n        offset,\n        count,\n        sort\n      }\n    } = _ref6;\n\n    if (!Promise.await(hasPermissionAsync(userId, 'view-l-room'))) {\n      throw new Error('error-not-authorized');\n    }\n\n    const cursor = LivechatVisitors.findVisitorsByEmailOrPhoneOrNameOrUsername(term, {\n      sort: sort || {\n        ts: -1\n      },\n      skip: offset,\n      limit: count,\n      fields: {\n        _id: 1,\n        username: 1,\n        name: 1,\n        phone: 1,\n        livechatData: 1,\n        visitorEmails: 1,\n        lastChat: 1\n      }\n    });\n    const total = Promise.await(cursor.count());\n    const visitors = Promise.await(cursor.toArray());\n    return {\n      visitors,\n      count: visitors.length,\n      offset,\n      total\n    };\n  });\n}","map":{"version":3,"sources":["app/livechat/server/api/lib/visitors.js"],"names":["module","export","findVisitorInfo","findVisitedPages","findChatHistory","searchChats","findVisitorsToAutocomplete","findVisitorsByEmailOrPhoneOrNameOrUsername","hasPermissionAsync","link","v","LivechatVisitors","Messages","LivechatRooms","canAccessRoomAsync","userId","visitorId","Error","visitor","findOneById","roomId","pagination","offset","count","sort","room","cursor","findByRoomIdAndType","_id","ts","skip","limit","total","pages","toArray","length","findByVisitorId","history","searchText","closedChatsOnly","servedChatsOnly","served","options","findRoomsByVisitorIdAndMessageWithCriteria","open","onlyCount","selector","items","exceptions","conditions","projection","name","username","findByNameRegexWithExceptionsAndConditions","term","fields","phone","livechatData","visitorEmails","lastChat","visitors"],"mappings":"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","sourcesContent":["import { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { LivechatVisitors, Messages, LivechatRooms } from '../../../../models/server/raw';\nimport { canAccessRoomAsync } from '../../../../authorization/server/functions/canAccessRoom';\n\nexport async function findVisitorInfo({ userId, visitorId }) {\n\tif (!(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tconst visitor = await LivechatVisitors.findOneById(visitorId);\n\tif (!visitor) {\n\t\tthrow new Error('visitor-not-found');\n\t}\n\n\treturn {\n\t\tvisitor,\n\t};\n}\n\nexport async function findVisitedPages({ userId, roomId, pagination: { offset, count, sort } }) {\n\tif (!(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\tconst cursor = Messages.findByRoomIdAndType(room._id, 'livechat_navigation_history', {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst pages = await cursor.toArray();\n\n\treturn {\n\t\tpages,\n\t\tcount: pages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findChatHistory({ userId, roomId, visitorId, pagination: { offset, count, sort } }) {\n\tif (!(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\tif (!(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst cursor = LivechatRooms.findByVisitorId(visitorId, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst history = await cursor.toArray();\n\n\treturn {\n\t\thistory,\n\t\tcount: history.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function searchChats({\n\tuserId,\n\troomId,\n\tvisitorId,\n\tsearchText,\n\tclosedChatsOnly,\n\tservedChatsOnly: served,\n\tpagination: { offset, count, sort },\n}) {\n\tif (!(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst room = await LivechatRooms.findOneById(roomId);\n\tif (!room) {\n\t\tthrow new Error('invalid-room');\n\t}\n\n\tif (!(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst options = {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst [total] = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n\t\tvisitorId,\n\t\topen: !closedChatsOnly,\n\t\tserved,\n\t\tsearchText,\n\t\tonlyCount: true,\n\t}).toArray();\n\tconst cursor = await LivechatRooms.findRoomsByVisitorIdAndMessageWithCriteria({\n\t\tvisitorId,\n\t\topen: !closedChatsOnly,\n\t\tserved,\n\t\tsearchText,\n\t\toptions,\n\t});\n\n\tconst history = await cursor.toArray();\n\n\treturn {\n\t\thistory,\n\t\tcount: history.length,\n\t\toffset,\n\t\ttotal: (total && total.count) || 0,\n\t};\n}\n\nexport async function findVisitorsToAutocomplete({ userId, selector }) {\n\tif (!(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\treturn { items: [] };\n\t}\n\tconst { exceptions = [], conditions = {} } = selector;\n\n\tconst options = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t\tusername: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst items = await LivechatVisitors.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditions, options).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findVisitorsByEmailOrPhoneOrNameOrUsername({ userId, term, pagination: { offset, count, sort } }) {\n\tif (!(await hasPermissionAsync(userId, 'view-l-room'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\tconst cursor = LivechatVisitors.findVisitorsByEmailOrPhoneOrNameOrUsername(term, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tfields: {\n\t\t\t_id: 1,\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tphone: 1,\n\t\t\tlivechatData: 1,\n\t\t\tvisitorEmails: 1,\n\t\t\tlastChat: 1,\n\t\t},\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst visitors = await cursor.toArray();\n\n\treturn {\n\t\tvisitors,\n\t\tcount: visitors.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"]},"sourceType":"module","hash":"702b585c0cbc00e5fb99a42da9a68cf22c82b748"}

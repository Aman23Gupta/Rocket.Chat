{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomType.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/channel-settings/server/functions/saveRoomType.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomType.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/channel-settings/server/functions/saveRoomType.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/channel-settings/server/functions/saveRoomType.js"}},"code":"module.export({\n  saveRoomType: () => saveRoomType\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 2);\nlet Rooms, Subscriptions, Messages;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet roomTypes, RoomSettingsEnum;\nmodule.link(\"../../../utils/server\", {\n  roomTypes(v) {\n    roomTypes = v;\n  },\n\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  }\n\n}, 5);\n\nconst saveRoomType = function (rid, roomType, user) {\n  let sendMessage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!Match.test(rid, String)) {\n    throw new Meteor.Error('invalid-room', 'Invalid room', {\n      function: 'RocketChat.saveRoomType'\n    });\n  }\n\n  if (roomType !== 'c' && roomType !== 'p') {\n    throw new Meteor.Error('error-invalid-room-type', 'error-invalid-room-type', {\n      function: 'RocketChat.saveRoomType',\n      type: roomType\n    });\n  }\n\n  const room = Rooms.findOneById(rid);\n\n  if (room == null) {\n    throw new Meteor.Error('error-invalid-room', 'error-invalid-room', {\n      function: 'RocketChat.saveRoomType',\n      _id: rid\n    });\n  }\n\n  if (!roomTypes.getConfig(room.t).allowRoomSettingChange(room, RoomSettingsEnum.TYPE)) {\n    throw new Meteor.Error('error-direct-room', \"Can't change type of direct rooms\", {\n      function: 'RocketChat.saveRoomType'\n    });\n  }\n\n  const result = Rooms.setTypeById(rid, roomType) && Subscriptions.updateTypeByRoomId(rid, roomType);\n\n  if (!result) {\n    return result;\n  }\n\n  if (sendMessage) {\n    let message;\n\n    if (roomType === 'c') {\n      message = TAPi18n.__('Channel', {\n        lng: user && user.language || settings.get('Language') || 'en'\n      });\n    } else {\n      message = TAPi18n.__('Private_Group', {\n        lng: user && user.language || settings.get('Language') || 'en'\n      });\n    }\n\n    Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_privacy', rid, message, user);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["app/channel-settings/server/functions/saveRoomType.js"],"names":["module","export","saveRoomType","Meteor","link","v","Match","TAPi18n","Rooms","Subscriptions","Messages","settings","roomTypes","RoomSettingsEnum","rid","roomType","user","sendMessage","test","String","Error","function","type","room","findOneById","_id","getConfig","t","allowRoomSettingChange","TYPE","result","setTypeById","updateTypeByRoomId","message","__","lng","language","get","createRoomSettingsChangedWithTypeRoomIdMessageAndUser"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { Rooms, Subscriptions, Messages } from '../../../models/server';\nimport { settings } from '../../../settings/server';\nimport { roomTypes, RoomSettingsEnum } from '../../../utils/server';\n\nexport const saveRoomType = function (rid, roomType, user, sendMessage = true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\tfunction: 'RocketChat.saveRoomType',\n\t\t});\n\t}\n\tif (roomType !== 'c' && roomType !== 'p') {\n\t\tthrow new Meteor.Error('error-invalid-room-type', 'error-invalid-room-type', {\n\t\t\tfunction: 'RocketChat.saveRoomType',\n\t\t\ttype: roomType,\n\t\t});\n\t}\n\tconst room = Rooms.findOneById(rid);\n\tif (room == null) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'error-invalid-room', {\n\t\t\tfunction: 'RocketChat.saveRoomType',\n\t\t\t_id: rid,\n\t\t});\n\t}\n\n\tif (!roomTypes.getConfig(room.t).allowRoomSettingChange(room, RoomSettingsEnum.TYPE)) {\n\t\tthrow new Meteor.Error('error-direct-room', \"Can't change type of direct rooms\", {\n\t\t\tfunction: 'RocketChat.saveRoomType',\n\t\t});\n\t}\n\n\tconst result = Rooms.setTypeById(rid, roomType) && Subscriptions.updateTypeByRoomId(rid, roomType);\n\tif (!result) {\n\t\treturn result;\n\t}\n\n\tif (sendMessage) {\n\t\tlet message;\n\t\tif (roomType === 'c') {\n\t\t\tmessage = TAPi18n.__('Channel', {\n\t\t\t\tlng: (user && user.language) || settings.get('Language') || 'en',\n\t\t\t});\n\t\t} else {\n\t\t\tmessage = TAPi18n.__('Private_Group', {\n\t\t\t\tlng: (user && user.language) || settings.get('Language') || 'en',\n\t\t\t});\n\t\t}\n\t\tMessages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_privacy', rid, message, user);\n\t}\n\treturn result;\n};\n"]},"sourceType":"module","hash":"8c201358524a2a5af776b194a64638972153b2dd"}

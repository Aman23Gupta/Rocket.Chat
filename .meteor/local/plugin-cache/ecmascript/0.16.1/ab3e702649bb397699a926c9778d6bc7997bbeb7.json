{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/markRoomResponded.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/markRoomResponded.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/markRoomResponded.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/hooks/markRoomResponded.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/markRoomResponded.js"}},"code":"let callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 0);\nlet LivechatRooms;\nmodule.link(\"../../../models\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 1);\ncallbacks.add('afterSaveMessage', function (message, room) {\n  // skips this callback if the message was edited\n  if (!message || message.editedAt) {\n    return message;\n  } // if the message has a token, it was sent by the visitor, so ignore it\n\n\n  if (message.token) {\n    return message;\n  }\n\n  if (room.responseBy) {\n    LivechatRooms.setAgentLastMessageTs(room._id);\n  } // check if room is yet awaiting for response\n\n\n  if (!(typeof room.t !== 'undefined' && room.t === 'l' && room.waitingResponse)) {\n    return message;\n  }\n\n  LivechatRooms.setResponseByRoomId(room._id, {\n    user: {\n      _id: message.u._id,\n      username: message.u.username\n    }\n  });\n  return message;\n}, callbacks.priority.LOW, 'markRoomResponded');","map":{"version":3,"sources":["app/livechat/server/hooks/markRoomResponded.js"],"names":["callbacks","module","link","v","LivechatRooms","add","message","room","editedAt","token","responseBy","setAgentLastMessageTs","_id","t","waitingResponse","setResponseByRoomId","user","u","username","priority","LOW"],"mappings":"AAAA,IAAIA,SAAJ;AAAcC,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACF,EAAAA,SAAS,CAACG,CAAD,EAAG;AAACH,IAAAA,SAAS,GAACG,CAAV;AAAY;;AAA1B,CAAxC,EAAoE,CAApE;AAAuE,IAAIC,aAAJ;AAAkBH,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACE,EAAAA,aAAa,CAACD,CAAD,EAAG;AAACC,IAAAA,aAAa,GAACD,CAAd;AAAgB;;AAAlC,CAA9B,EAAkE,CAAlE;AAGvGH,SAAS,CAACK,GAAV,CACC,kBADD,EAEC,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AACxB;AACA,MAAI,CAACD,OAAD,IAAYA,OAAO,CAACE,QAAxB,EAAkC;AACjC,WAAOF,OAAP;AACA,GAJuB,CAMxB;;;AACA,MAAIA,OAAO,CAACG,KAAZ,EAAmB;AAClB,WAAOH,OAAP;AACA;;AACD,MAAIC,IAAI,CAACG,UAAT,EAAqB;AACpBN,IAAAA,aAAa,CAACO,qBAAd,CAAoCJ,IAAI,CAACK,GAAzC;AACA,GAZuB,CAcxB;;;AACA,MAAI,EAAE,OAAOL,IAAI,CAACM,CAAZ,KAAkB,WAAlB,IAAiCN,IAAI,CAACM,CAAL,KAAW,GAA5C,IAAmDN,IAAI,CAACO,eAA1D,CAAJ,EAAgF;AAC/E,WAAOR,OAAP;AACA;;AAEDF,EAAAA,aAAa,CAACW,mBAAd,CAAkCR,IAAI,CAACK,GAAvC,EAA4C;AAC3CI,IAAAA,IAAI,EAAE;AACLJ,MAAAA,GAAG,EAAEN,OAAO,CAACW,CAAR,CAAUL,GADV;AAELM,MAAAA,QAAQ,EAAEZ,OAAO,CAACW,CAAR,CAAUC;AAFf;AADqC,GAA5C;AAOA,SAAOZ,OAAP;AACA,CA7BF,EA8BCN,SAAS,CAACmB,QAAV,CAAmBC,GA9BpB,EA+BC,mBA/BD","sourcesContent":["import { callbacks } from '../../../../lib/callbacks';\nimport { LivechatRooms } from '../../../models';\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tfunction (message, room) {\n\t\t// skips this callback if the message was edited\n\t\tif (!message || message.editedAt) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// if the message has a token, it was sent by the visitor, so ignore it\n\t\tif (message.token) {\n\t\t\treturn message;\n\t\t}\n\t\tif (room.responseBy) {\n\t\t\tLivechatRooms.setAgentLastMessageTs(room._id);\n\t\t}\n\n\t\t// check if room is yet awaiting for response\n\t\tif (!(typeof room.t !== 'undefined' && room.t === 'l' && room.waitingResponse)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tLivechatRooms.setResponseByRoomId(room._id, {\n\t\t\tuser: {\n\t\t\t\t_id: message.u._id,\n\t\t\t\tusername: message.u.username,\n\t\t\t},\n\t\t});\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'markRoomResponded',\n);\n"]},"sourceType":"module","hash":"ab3e702649bb397699a926c9778d6bc7997bbeb7"}

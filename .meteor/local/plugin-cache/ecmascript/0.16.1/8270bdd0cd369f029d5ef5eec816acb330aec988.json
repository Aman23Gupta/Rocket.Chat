{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/PasswordPolicyClass.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/lib/PasswordPolicyClass.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/PasswordPolicyClass.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/lib/PasswordPolicyClass.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/lib/PasswordPolicyClass.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\n\nclass PasswordPolicy {\n  constructor() {\n    let {\n      enabled = false,\n      minLength = -1,\n      maxLength = -1,\n      forbidRepeatingCharacters = false,\n      forbidRepeatingCharactersCount = 3,\n      // the regex is this number minus one\n      mustContainAtLeastOneLowercase = false,\n      // /[A-Z]{3,}/ could do this instead of at least one\n      mustContainAtLeastOneUppercase = false,\n      mustContainAtLeastOneNumber = false,\n      mustContainAtLeastOneSpecialCharacter = false,\n      throwError = true\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.regex = {\n      mustContainAtLeastOneLowercase: new RegExp('[a-z]'),\n      mustContainAtLeastOneUppercase: new RegExp('[A-Z]'),\n      mustContainAtLeastOneNumber: new RegExp('[0-9]'),\n      mustContainAtLeastOneSpecialCharacter: new RegExp('[^A-Za-z0-9 ]')\n    };\n    this.enabled = enabled;\n    this.minLength = minLength;\n    this.maxLength = maxLength;\n    this.forbidRepeatingCharacters = forbidRepeatingCharacters;\n    this.forbidRepeatingCharactersCount = forbidRepeatingCharactersCount;\n    this.mustContainAtLeastOneLowercase = mustContainAtLeastOneLowercase;\n    this.mustContainAtLeastOneUppercase = mustContainAtLeastOneUppercase;\n    this.mustContainAtLeastOneNumber = mustContainAtLeastOneNumber;\n    this.mustContainAtLeastOneSpecialCharacter = mustContainAtLeastOneSpecialCharacter;\n    this.throwError = throwError;\n  }\n\n  set forbidRepeatingCharactersCount(value) {\n    this._forbidRepeatingCharactersCount = value;\n    this.regex.forbiddingRepeatingCharacters = new RegExp(\"(.)\\\\1{\".concat(this.forbidRepeatingCharactersCount, \",}\"));\n  }\n\n  get forbidRepeatingCharactersCount() {\n    return this._forbidRepeatingCharactersCount;\n  }\n\n  error(error, message) {\n    if (this.throwError) {\n      throw new Meteor.Error(error, message);\n    }\n\n    return false;\n  }\n\n  validate(password) {\n    if (typeof password !== 'string' || !password.trim().length) {\n      return this.error('error-password-policy-not-met', \"The password provided does not meet the server's password policy.\");\n    }\n\n    if (!this.enabled) {\n      return true;\n    }\n\n    if (this.minLength >= 1 && password.length < this.minLength) {\n      return this.error('error-password-policy-not-met-minLength', 'The password does not meet the minimum length password policy.');\n    }\n\n    if (this.maxLength >= 1 && password.length > this.maxLength) {\n      return this.error('error-password-policy-not-met-maxLength', 'The password does not meet the maximum length password policy.');\n    }\n\n    if (this.forbidRepeatingCharacters && this.regex.forbiddingRepeatingCharacters.test(password)) {\n      return this.error('error-password-policy-not-met-repeatingCharacters', 'The password contains repeating characters which is against the password policy.');\n    }\n\n    if (this.mustContainAtLeastOneLowercase && !this.regex.mustContainAtLeastOneLowercase.test(password)) {\n      return this.error('error-password-policy-not-met-oneLowercase', 'The password does not contain at least one lowercase character which is against the password policy.');\n    }\n\n    if (this.mustContainAtLeastOneUppercase && !this.regex.mustContainAtLeastOneUppercase.test(password)) {\n      return this.error('error-password-policy-not-met-oneUppercase', 'The password does not contain at least one uppercase character which is against the password policy.');\n    }\n\n    if (this.mustContainAtLeastOneNumber && !this.regex.mustContainAtLeastOneNumber.test(password)) {\n      return this.error('error-password-policy-not-met-oneNumber', 'The password does not contain at least one numerical character which is against the password policy.');\n    }\n\n    if (this.mustContainAtLeastOneSpecialCharacter && !this.regex.mustContainAtLeastOneSpecialCharacter.test(password)) {\n      return this.error('error-password-policy-not-met-oneSpecial', 'The password does not contain at least one special character which is against the password policy.');\n    }\n\n    return true;\n  }\n\n  getPasswordPolicy() {\n    const data = {\n      enabled: false,\n      policy: []\n    };\n\n    if (this.enabled) {\n      data.enabled = true;\n\n      if (this.minLength >= 1) {\n        data.policy.push(['get-password-policy-minLength', {\n          minLength: this.minLength\n        }]);\n      }\n\n      if (this.maxLength >= 1) {\n        data.policy.push(['get-password-policy-maxLength', {\n          maxLength: this.maxLength\n        }]);\n      }\n\n      if (this.forbidRepeatingCharacters) {\n        data.policy.push(['get-password-policy-forbidRepeatingCharacters']);\n      }\n\n      if (this.forbidRepeatingCharactersCount) {\n        data.policy.push(['get-password-policy-forbidRepeatingCharactersCount', {\n          forbidRepeatingCharactersCount: this.forbidRepeatingCharactersCount\n        }]);\n      }\n\n      if (this.mustContainAtLeastOneLowercase) {\n        data.policy.push(['get-password-policy-mustContainAtLeastOneLowercase']);\n      }\n\n      if (this.mustContainAtLeastOneUppercase) {\n        data.policy.push(['get-password-policy-mustContainAtLeastOneUppercase']);\n      }\n\n      if (this.mustContainAtLeastOneNumber) {\n        data.policy.push(['get-password-policy-mustContainAtLeastOneNumber']);\n      }\n\n      if (this.mustContainAtLeastOneSpecialCharacter) {\n        data.policy.push(['get-password-policy-mustContainAtLeastOneSpecialCharacter']);\n      }\n    }\n\n    return data;\n  }\n\n  generatePassword() {\n    if (this.enabled) {\n      for (let i = 0; i < 10; i++) {\n        const password = this._generatePassword();\n\n        if (this.validate(password)) {\n          return password;\n        }\n      }\n    }\n\n    return Random.id();\n  }\n\n  _generatePassword() {\n    const length = Math.min(Math.max(this.minLength, 12), this.maxLength > 0 ? this.maxLength : Number.MAX_SAFE_INTEGER);\n    return new Array(length).fill().map(() => String.fromCharCode(Math.random() * 86 + 40)).join('');\n  }\n\n}\n\nmodule.exportDefault(PasswordPolicy);","map":{"version":3,"sources":["app/lib/server/lib/PasswordPolicyClass.js"],"names":["Meteor","module","link","v","Random","PasswordPolicy","constructor","enabled","minLength","maxLength","forbidRepeatingCharacters","forbidRepeatingCharactersCount","mustContainAtLeastOneLowercase","mustContainAtLeastOneUppercase","mustContainAtLeastOneNumber","mustContainAtLeastOneSpecialCharacter","throwError","regex","RegExp","value","_forbidRepeatingCharactersCount","forbiddingRepeatingCharacters","error","message","Error","validate","password","trim","length","test","getPasswordPolicy","data","policy","push","generatePassword","i","_generatePassword","id","Math","min","max","Number","MAX_SAFE_INTEGER","Array","fill","map","String","fromCharCode","random","join","exportDefault"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nclass PasswordPolicy {\n\tconstructor({\n\t\tenabled = false,\n\t\tminLength = -1,\n\t\tmaxLength = -1,\n\t\tforbidRepeatingCharacters = false,\n\t\tforbidRepeatingCharactersCount = 3, // the regex is this number minus one\n\t\tmustContainAtLeastOneLowercase = false, // /[A-Z]{3,}/ could do this instead of at least one\n\t\tmustContainAtLeastOneUppercase = false,\n\t\tmustContainAtLeastOneNumber = false,\n\t\tmustContainAtLeastOneSpecialCharacter = false,\n\t\tthrowError = true,\n\t} = {}) {\n\t\tthis.regex = {\n\t\t\tmustContainAtLeastOneLowercase: new RegExp('[a-z]'),\n\t\t\tmustContainAtLeastOneUppercase: new RegExp('[A-Z]'),\n\t\t\tmustContainAtLeastOneNumber: new RegExp('[0-9]'),\n\t\t\tmustContainAtLeastOneSpecialCharacter: new RegExp('[^A-Za-z0-9 ]'),\n\t\t};\n\n\t\tthis.enabled = enabled;\n\t\tthis.minLength = minLength;\n\t\tthis.maxLength = maxLength;\n\t\tthis.forbidRepeatingCharacters = forbidRepeatingCharacters;\n\t\tthis.forbidRepeatingCharactersCount = forbidRepeatingCharactersCount;\n\t\tthis.mustContainAtLeastOneLowercase = mustContainAtLeastOneLowercase;\n\t\tthis.mustContainAtLeastOneUppercase = mustContainAtLeastOneUppercase;\n\t\tthis.mustContainAtLeastOneNumber = mustContainAtLeastOneNumber;\n\t\tthis.mustContainAtLeastOneSpecialCharacter = mustContainAtLeastOneSpecialCharacter;\n\t\tthis.throwError = throwError;\n\t}\n\n\tset forbidRepeatingCharactersCount(value) {\n\t\tthis._forbidRepeatingCharactersCount = value;\n\t\tthis.regex.forbiddingRepeatingCharacters = new RegExp(`(.)\\\\1{${this.forbidRepeatingCharactersCount},}`);\n\t}\n\n\tget forbidRepeatingCharactersCount() {\n\t\treturn this._forbidRepeatingCharactersCount;\n\t}\n\n\terror(error, message) {\n\t\tif (this.throwError) {\n\t\t\tthrow new Meteor.Error(error, message);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvalidate(password) {\n\t\tif (typeof password !== 'string' || !password.trim().length) {\n\t\t\treturn this.error('error-password-policy-not-met', \"The password provided does not meet the server's password policy.\");\n\t\t}\n\n\t\tif (!this.enabled) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.minLength >= 1 && password.length < this.minLength) {\n\t\t\treturn this.error('error-password-policy-not-met-minLength', 'The password does not meet the minimum length password policy.');\n\t\t}\n\n\t\tif (this.maxLength >= 1 && password.length > this.maxLength) {\n\t\t\treturn this.error('error-password-policy-not-met-maxLength', 'The password does not meet the maximum length password policy.');\n\t\t}\n\n\t\tif (this.forbidRepeatingCharacters && this.regex.forbiddingRepeatingCharacters.test(password)) {\n\t\t\treturn this.error(\n\t\t\t\t'error-password-policy-not-met-repeatingCharacters',\n\t\t\t\t'The password contains repeating characters which is against the password policy.',\n\t\t\t);\n\t\t}\n\n\t\tif (this.mustContainAtLeastOneLowercase && !this.regex.mustContainAtLeastOneLowercase.test(password)) {\n\t\t\treturn this.error(\n\t\t\t\t'error-password-policy-not-met-oneLowercase',\n\t\t\t\t'The password does not contain at least one lowercase character which is against the password policy.',\n\t\t\t);\n\t\t}\n\n\t\tif (this.mustContainAtLeastOneUppercase && !this.regex.mustContainAtLeastOneUppercase.test(password)) {\n\t\t\treturn this.error(\n\t\t\t\t'error-password-policy-not-met-oneUppercase',\n\t\t\t\t'The password does not contain at least one uppercase character which is against the password policy.',\n\t\t\t);\n\t\t}\n\n\t\tif (this.mustContainAtLeastOneNumber && !this.regex.mustContainAtLeastOneNumber.test(password)) {\n\t\t\treturn this.error(\n\t\t\t\t'error-password-policy-not-met-oneNumber',\n\t\t\t\t'The password does not contain at least one numerical character which is against the password policy.',\n\t\t\t);\n\t\t}\n\n\t\tif (this.mustContainAtLeastOneSpecialCharacter && !this.regex.mustContainAtLeastOneSpecialCharacter.test(password)) {\n\t\t\treturn this.error(\n\t\t\t\t'error-password-policy-not-met-oneSpecial',\n\t\t\t\t'The password does not contain at least one special character which is against the password policy.',\n\t\t\t);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tgetPasswordPolicy() {\n\t\tconst data = {\n\t\t\tenabled: false,\n\t\t\tpolicy: [],\n\t\t};\n\t\tif (this.enabled) {\n\t\t\tdata.enabled = true;\n\t\t\tif (this.minLength >= 1) {\n\t\t\t\tdata.policy.push(['get-password-policy-minLength', { minLength: this.minLength }]);\n\t\t\t}\n\t\t\tif (this.maxLength >= 1) {\n\t\t\t\tdata.policy.push(['get-password-policy-maxLength', { maxLength: this.maxLength }]);\n\t\t\t}\n\t\t\tif (this.forbidRepeatingCharacters) {\n\t\t\t\tdata.policy.push(['get-password-policy-forbidRepeatingCharacters']);\n\t\t\t}\n\t\t\tif (this.forbidRepeatingCharactersCount) {\n\t\t\t\tdata.policy.push([\n\t\t\t\t\t'get-password-policy-forbidRepeatingCharactersCount',\n\t\t\t\t\t{ forbidRepeatingCharactersCount: this.forbidRepeatingCharactersCount },\n\t\t\t\t]);\n\t\t\t}\n\t\t\tif (this.mustContainAtLeastOneLowercase) {\n\t\t\t\tdata.policy.push(['get-password-policy-mustContainAtLeastOneLowercase']);\n\t\t\t}\n\t\t\tif (this.mustContainAtLeastOneUppercase) {\n\t\t\t\tdata.policy.push(['get-password-policy-mustContainAtLeastOneUppercase']);\n\t\t\t}\n\t\t\tif (this.mustContainAtLeastOneNumber) {\n\t\t\t\tdata.policy.push(['get-password-policy-mustContainAtLeastOneNumber']);\n\t\t\t}\n\t\t\tif (this.mustContainAtLeastOneSpecialCharacter) {\n\t\t\t\tdata.policy.push(['get-password-policy-mustContainAtLeastOneSpecialCharacter']);\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\n\tgeneratePassword() {\n\t\tif (this.enabled) {\n\t\t\tfor (let i = 0; i < 10; i++) {\n\t\t\t\tconst password = this._generatePassword();\n\t\t\t\tif (this.validate(password)) {\n\t\t\t\t\treturn password;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Random.id();\n\t}\n\n\t_generatePassword() {\n\t\tconst length = Math.min(Math.max(this.minLength, 12), this.maxLength > 0 ? this.maxLength : Number.MAX_SAFE_INTEGER);\n\t\treturn new Array(length)\n\t\t\t.fill()\n\t\t\t.map(() => String.fromCharCode(Math.random() * 86 + 40))\n\t\t\t.join('');\n\t}\n}\n\nexport default PasswordPolicy;\n"]},"sourceType":"module","hash":"8270bdd0cd369f029d5ef5eec816acb330aec988"}

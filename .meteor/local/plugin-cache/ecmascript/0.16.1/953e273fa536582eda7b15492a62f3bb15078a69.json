{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/push/server/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/push/server/methods.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/push/server/methods.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/push/server/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/push/server/methods.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\n\nlet _matchToken, appTokensCollection;\n\nmodule.link(\"./push\", {\n  _matchToken(v) {\n    _matchToken = v;\n  },\n\n  appTokensCollection(v) {\n    appTokensCollection = v;\n  }\n\n}, 3);\nlet logger;\nmodule.link(\"./logger\", {\n  logger(v) {\n    logger = v;\n  }\n\n}, 4);\nMeteor.methods({\n  'raix:push-update'(options) {\n    logger.debug('Got push token from app:', options);\n    check(options, {\n      id: Match.Optional(String),\n      token: _matchToken,\n      appName: String,\n      userId: Match.OneOf(String, null),\n      metadata: Match.Optional(Object)\n    }); // The if user id is set then user id should match on client and connection\n\n    if (options.userId && options.userId !== this.userId) {\n      throw new Meteor.Error(403, 'Forbidden access');\n    }\n\n    let doc; // lookup app by id if one was included\n\n    if (options.id) {\n      doc = appTokensCollection.findOne({\n        _id: options.id\n      });\n    } else if (options.userId) {\n      doc = appTokensCollection.findOne({\n        userId: options.userId\n      });\n    } // No doc was found - we check the database to see if\n    // we can find a match for the app via token and appName\n\n\n    if (!doc) {\n      doc = appTokensCollection.findOne({\n        $and: [{\n          token: options.token\n        }, // Match token\n        {\n          appName: options.appName\n        }, // Match appName\n        {\n          token: {\n            $exists: true\n          }\n        } // Make sure token exists\n        ]\n      });\n    } // if we could not find the id or token then create it\n\n\n    if (!doc) {\n      // Rig default doc\n      doc = {\n        token: options.token,\n        appName: options.appName,\n        userId: options.userId,\n        enabled: true,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      }; // XXX: We might want to check the id - Why isnt there a match for id\n      // in the Meteor check... Normal length 17 (could be larger), and\n      // numbers+letters are used in Random.id() with exception of 0 and 1\n\n      doc._id = options.id || Random.id(); // The user wanted us to use a specific id, we didn't find this while\n      // searching. The client could depend on the id eg. as reference so\n      // we respect this and try to create a document with the selected id;\n\n      appTokensCollection._collection.insert(doc);\n    } else {\n      // We found the app so update the updatedAt and set the token\n      appTokensCollection.update({\n        _id: doc._id\n      }, {\n        $set: {\n          updatedAt: new Date(),\n          token: options.token\n        }\n      });\n    }\n\n    if (doc.token) {\n      const removed = appTokensCollection.remove({\n        $and: [{\n          _id: {\n            $ne: doc._id\n          }\n        }, {\n          token: doc.token\n        }, // Match token\n        {\n          appName: doc.appName\n        }, // Match appName\n        {\n          token: {\n            $exists: true\n          }\n        } // Make sure token exists\n        ]\n      });\n\n      if (removed) {\n        logger.debug(\"Removed \".concat(removed, \" existing app items\"));\n      }\n    }\n\n    logger.debug('updated', doc); // Return the doc we want to use\n\n    return doc;\n  },\n\n  // Deprecated\n  'raix:push-setuser'(id) {\n    check(id, String);\n    logger.debug(\"Settings userId \\\"\".concat(this.userId, \"\\\" for app:\"), id);\n    const found = appTokensCollection.update({\n      _id: id\n    }, {\n      $set: {\n        userId: this.userId\n      }\n    });\n    return !!found;\n  }\n\n});","map":{"version":3,"sources":["app/push/server/methods.js"],"names":["Meteor","module","link","v","Match","check","Random","_matchToken","appTokensCollection","logger","methods","options","debug","id","Optional","String","token","appName","userId","OneOf","metadata","Object","Error","doc","findOne","_id","$and","$exists","enabled","createdAt","Date","updatedAt","_collection","insert","update","$set","removed","remove","$ne","found"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\nimport { Random } from 'meteor/random';\n\nimport { _matchToken, appTokensCollection } from './push';\nimport { logger } from './logger';\n\nMeteor.methods({\n\t'raix:push-update'(options) {\n\t\tlogger.debug('Got push token from app:', options);\n\n\t\tcheck(options, {\n\t\t\tid: Match.Optional(String),\n\t\t\ttoken: _matchToken,\n\t\t\tappName: String,\n\t\t\tuserId: Match.OneOf(String, null),\n\t\t\tmetadata: Match.Optional(Object),\n\t\t});\n\n\t\t// The if user id is set then user id should match on client and connection\n\t\tif (options.userId && options.userId !== this.userId) {\n\t\t\tthrow new Meteor.Error(403, 'Forbidden access');\n\t\t}\n\n\t\tlet doc;\n\n\t\t// lookup app by id if one was included\n\t\tif (options.id) {\n\t\t\tdoc = appTokensCollection.findOne({ _id: options.id });\n\t\t} else if (options.userId) {\n\t\t\tdoc = appTokensCollection.findOne({ userId: options.userId });\n\t\t}\n\n\t\t// No doc was found - we check the database to see if\n\t\t// we can find a match for the app via token and appName\n\t\tif (!doc) {\n\t\t\tdoc = appTokensCollection.findOne({\n\t\t\t\t$and: [\n\t\t\t\t\t{ token: options.token }, // Match token\n\t\t\t\t\t{ appName: options.appName }, // Match appName\n\t\t\t\t\t{ token: { $exists: true } }, // Make sure token exists\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\t// if we could not find the id or token then create it\n\t\tif (!doc) {\n\t\t\t// Rig default doc\n\t\t\tdoc = {\n\t\t\t\ttoken: options.token,\n\t\t\t\tappName: options.appName,\n\t\t\t\tuserId: options.userId,\n\t\t\t\tenabled: true,\n\t\t\t\tcreatedAt: new Date(),\n\t\t\t\tupdatedAt: new Date(),\n\t\t\t};\n\n\t\t\t// XXX: We might want to check the id - Why isnt there a match for id\n\t\t\t// in the Meteor check... Normal length 17 (could be larger), and\n\t\t\t// numbers+letters are used in Random.id() with exception of 0 and 1\n\t\t\tdoc._id = options.id || Random.id();\n\t\t\t// The user wanted us to use a specific id, we didn't find this while\n\t\t\t// searching. The client could depend on the id eg. as reference so\n\t\t\t// we respect this and try to create a document with the selected id;\n\t\t\tappTokensCollection._collection.insert(doc);\n\t\t} else {\n\t\t\t// We found the app so update the updatedAt and set the token\n\t\t\tappTokensCollection.update(\n\t\t\t\t{ _id: doc._id },\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tupdatedAt: new Date(),\n\t\t\t\t\t\ttoken: options.token,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tif (doc.token) {\n\t\t\tconst removed = appTokensCollection.remove({\n\t\t\t\t$and: [\n\t\t\t\t\t{ _id: { $ne: doc._id } },\n\t\t\t\t\t{ token: doc.token }, // Match token\n\t\t\t\t\t{ appName: doc.appName }, // Match appName\n\t\t\t\t\t{ token: { $exists: true } }, // Make sure token exists\n\t\t\t\t],\n\t\t\t});\n\n\t\t\tif (removed) {\n\t\t\t\tlogger.debug(`Removed ${removed} existing app items`);\n\t\t\t}\n\t\t}\n\n\t\tlogger.debug('updated', doc);\n\n\t\t// Return the doc we want to use\n\t\treturn doc;\n\t},\n\t// Deprecated\n\t'raix:push-setuser'(id) {\n\t\tcheck(id, String);\n\n\t\tlogger.debug(`Settings userId \"${this.userId}\" for app:`, id);\n\t\tconst found = appTokensCollection.update({ _id: id }, { $set: { userId: this.userId } });\n\n\t\treturn !!found;\n\t},\n});\n"]},"sourceType":"module","hash":"953e273fa536582eda7b15492a62f3bb15078a69"}

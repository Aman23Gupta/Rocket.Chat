{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/resumeOnHold.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/hooks/resumeOnHold.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/resumeOnHold.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/ee/app/livechat-enterprise/server/hooks/resumeOnHold.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/hooks/resumeOnHold.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet callbacks;\nmodule.link(\"../../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 1);\nlet LivechatRooms;\nmodule.link(\"../../../../../app/models/server\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  }\n\n}, 2);\n\nconst handleAfterSaveMessage = (message, _ref) => {\n  let {\n    _id: rid\n  } = _ref;\n\n  // skips this callback if the message was edited\n  if (message.editedAt) {\n    return message;\n  } // if the message has a type means it is a special message (like the closing comment), so skips\n\n\n  if (message.t) {\n    return message;\n  } // Need to read the room every time, the room object is not updated\n\n\n  const room = LivechatRooms.findOneById(rid, {\n    t: 1,\n    v: 1,\n    onHold: 1\n  });\n\n  if (!room) {\n    return message;\n  } // message valid only if it is a livechat room\n\n\n  if (!(typeof room.t !== 'undefined' && room.t === 'l' && room.v && room.v.token)) {\n    return message;\n  } // if a visitor sends a message in room which is On Hold\n\n\n  if (message.token && room.onHold) {\n    Meteor.call('livechat:resumeOnHold', rid, {\n      clientAction: false\n    });\n  }\n\n  return message;\n};\n\ncallbacks.add('afterSaveMessage', handleAfterSaveMessage, callbacks.priority.HIGH, 'livechat-resume-on-hold');","map":{"version":3,"sources":["ee/app/livechat-enterprise/server/hooks/resumeOnHold.js"],"names":["Meteor","module","link","v","callbacks","LivechatRooms","handleAfterSaveMessage","message","_id","rid","editedAt","t","room","findOneById","onHold","token","call","clientAction","add","priority","HIGH"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,SAAJ;AAAcH,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACE,EAAAA,SAAS,CAACD,CAAD,EAAG;AAACC,IAAAA,SAAS,GAACD,CAAV;AAAY;;AAA1B,CAA3C,EAAuE,CAAvE;AAA0E,IAAIE,aAAJ;AAAkBJ,MAAM,CAACC,IAAP,CAAY,kCAAZ,EAA+C;AAACG,EAAAA,aAAa,CAACF,CAAD,EAAG;AAACE,IAAAA,aAAa,GAACF,CAAd;AAAgB;;AAAlC,CAA/C,EAAmF,CAAnF;;AAK1K,MAAMG,sBAAsB,GAAG,CAACC,OAAD,WAA2B;AAAA,MAAjB;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAAiB;;AACzD;AACA,MAAIF,OAAO,CAACG,QAAZ,EAAsB;AACrB,WAAOH,OAAP;AACA,GAJwD,CAMzD;;;AACA,MAAIA,OAAO,CAACI,CAAZ,EAAe;AACd,WAAOJ,OAAP;AACA,GATwD,CAWzD;;;AACA,QAAMK,IAAI,GAAGP,aAAa,CAACQ,WAAd,CAA0BJ,GAA1B,EAA+B;AAAEE,IAAAA,CAAC,EAAE,CAAL;AAAQR,IAAAA,CAAC,EAAE,CAAX;AAAcW,IAAAA,MAAM,EAAE;AAAtB,GAA/B,CAAb;;AACA,MAAI,CAACF,IAAL,EAAW;AACV,WAAOL,OAAP;AACA,GAfwD,CAiBzD;;;AACA,MAAI,EAAE,OAAOK,IAAI,CAACD,CAAZ,KAAkB,WAAlB,IAAiCC,IAAI,CAACD,CAAL,KAAW,GAA5C,IAAmDC,IAAI,CAACT,CAAxD,IAA6DS,IAAI,CAACT,CAAL,CAAOY,KAAtE,CAAJ,EAAkF;AACjF,WAAOR,OAAP;AACA,GApBwD,CAsBzD;;;AACA,MAAIA,OAAO,CAACQ,KAAR,IAAiBH,IAAI,CAACE,MAA1B,EAAkC;AACjCd,IAAAA,MAAM,CAACgB,IAAP,CAAY,uBAAZ,EAAqCP,GAArC,EAA0C;AAAEQ,MAAAA,YAAY,EAAE;AAAhB,KAA1C;AACA;;AAED,SAAOV,OAAP;AACA,CA5BD;;AA8BAH,SAAS,CAACc,GAAV,CAAc,kBAAd,EAAkCZ,sBAAlC,EAA0DF,SAAS,CAACe,QAAV,CAAmBC,IAA7E,EAAmF,yBAAnF","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { LivechatRooms } from '../../../../../app/models/server';\n\nconst handleAfterSaveMessage = (message, { _id: rid }) => {\n\t// skips this callback if the message was edited\n\tif (message.editedAt) {\n\t\treturn message;\n\t}\n\n\t// if the message has a type means it is a special message (like the closing comment), so skips\n\tif (message.t) {\n\t\treturn message;\n\t}\n\n\t// Need to read the room every time, the room object is not updated\n\tconst room = LivechatRooms.findOneById(rid, { t: 1, v: 1, onHold: 1 });\n\tif (!room) {\n\t\treturn message;\n\t}\n\n\t// message valid only if it is a livechat room\n\tif (!(typeof room.t !== 'undefined' && room.t === 'l' && room.v && room.v.token)) {\n\t\treturn message;\n\t}\n\n\t// if a visitor sends a message in room which is On Hold\n\tif (message.token && room.onHold) {\n\t\tMeteor.call('livechat:resumeOnHold', rid, { clientAction: false });\n\t}\n\n\treturn message;\n};\n\ncallbacks.add('afterSaveMessage', handleAfterSaveMessage, callbacks.priority.HIGH, 'livechat-resume-on-hold');\n"]},"sourceType":"module","hash":"e083dc2a62945574910e3dd993884272c2ddf1de"}

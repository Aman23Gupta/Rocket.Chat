{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/saveUser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/saveUser.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/saveUser.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/saveUser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveUser.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  validateUserEditing: () => validateUserEditing,\n  saveUser: () => saveUser\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 2);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 3);\nlet Gravatar;\nmodule.link(\"meteor/jparker:gravatar\", {\n  Gravatar(v) {\n    Gravatar = v;\n  }\n\n}, 4);\nlet Mailer;\nmodule.link(\"../../../mailer\", {\n  \"*\"(v) {\n    Mailer = v;\n  }\n\n}, 5);\nlet getRoles, hasPermission;\nmodule.link(\"../../../authorization\", {\n  getRoles(v) {\n    getRoles = v;\n  },\n\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 6);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 7);\nlet passwordPolicy;\nmodule.link(\"../lib/passwordPolicy\", {\n  passwordPolicy(v) {\n    passwordPolicy = v;\n  }\n\n}, 8);\nlet validateEmailDomain;\nmodule.link(\"../lib\", {\n  validateEmailDomain(v) {\n    validateEmailDomain = v;\n  }\n\n}, 9);\nlet getNewUserRoles;\nmodule.link(\"../../../../server/services/user/lib/getNewUserRoles\", {\n  getNewUserRoles(v) {\n    getNewUserRoles = v;\n  }\n\n}, 10);\nlet saveUserIdentity;\nmodule.link(\"./saveUserIdentity\", {\n  saveUserIdentity(v) {\n    saveUserIdentity = v;\n  }\n\n}, 11);\nlet checkEmailAvailability, checkUsernameAvailability, setUserAvatar, setEmail, setStatusText;\nmodule.link(\".\", {\n  checkEmailAvailability(v) {\n    checkEmailAvailability = v;\n  },\n\n  checkUsernameAvailability(v) {\n    checkUsernameAvailability = v;\n  },\n\n  setUserAvatar(v) {\n    setUserAvatar = v;\n  },\n\n  setEmail(v) {\n    setEmail = v;\n  },\n\n  setStatusText(v) {\n    setStatusText = v;\n  }\n\n}, 12);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 13);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 14);\nlet html = '';\nlet passwordChangedHtml = '';\nMeteor.startup(() => {\n  Mailer.getTemplate('Accounts_UserAddedEmail_Email', template => {\n    html = template;\n  });\n  Mailer.getTemplate('Password_Changed_Email', template => {\n    passwordChangedHtml = template;\n  });\n});\n\nfunction _sendUserEmail(subject, html, userData) {\n  const email = {\n    to: userData.email,\n    from: settings.get('From_Email'),\n    subject,\n    html,\n    data: {\n      email: userData.email,\n      password: userData.password\n    }\n  };\n\n  if (typeof userData.name !== 'undefined') {\n    email.data.name = userData.name;\n  }\n\n  try {\n    Mailer.send(email);\n  } catch (error) {\n    throw new Meteor.Error('error-email-send-failed', \"Error trying to send email: \".concat(error.message), {\n      function: 'RocketChat.saveUser',\n      message: error.message\n    });\n  }\n}\n\nfunction validateUserData(userId, userData) {\n  const existingRoles = _.pluck(getRoles(), '_id');\n\n  if (userData._id && userId !== userData._id && !hasPermission(userId, 'edit-other-user-info')) {\n    throw new Meteor.Error('error-action-not-allowed', 'Editing user is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Editing_user'\n    });\n  }\n\n  if (!userData._id && !hasPermission(userId, 'create-user')) {\n    throw new Meteor.Error('error-action-not-allowed', 'Adding user is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Adding_user'\n    });\n  }\n\n  if (userData.roles && _.difference(userData.roles, existingRoles).length > 0) {\n    throw new Meteor.Error('error-action-not-allowed', 'The field Roles consist invalid role name', {\n      method: 'insertOrUpdateUser',\n      action: 'Assign_role'\n    });\n  }\n\n  if (userData.roles && _.indexOf(userData.roles, 'admin') >= 0 && !hasPermission(userId, 'assign-admin-role')) {\n    throw new Meteor.Error('error-action-not-allowed', 'Assigning admin is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Assign_admin'\n    });\n  }\n\n  if (settings.get('Accounts_RequireNameForSignUp') && !userData._id && !s.trim(userData.name)) {\n    throw new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n      method: 'insertOrUpdateUser',\n      field: 'Name'\n    });\n  }\n\n  if (!userData._id && !s.trim(userData.username)) {\n    throw new Meteor.Error('error-the-field-is-required', 'The field Username is required', {\n      method: 'insertOrUpdateUser',\n      field: 'Username'\n    });\n  }\n\n  if (userData.roles) {\n    callbacks.run('validateUserRoles', userData);\n  }\n\n  let nameValidation;\n\n  try {\n    nameValidation = new RegExp(\"^\".concat(settings.get('UTF8_User_Names_Validation'), \"$\"));\n  } catch (e) {\n    nameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n  }\n\n  if (userData.username && !nameValidation.test(userData.username)) {\n    throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(_.escape(userData.username), \" is not a valid username\"), {\n      method: 'insertOrUpdateUser',\n      input: userData.username,\n      field: 'Username'\n    });\n  }\n\n  if (!userData._id && !userData.password && !userData.setRandomPassword) {\n    throw new Meteor.Error('error-the-field-is-required', 'The field Password is required', {\n      method: 'insertOrUpdateUser',\n      field: 'Password'\n    });\n  }\n\n  if (!userData._id) {\n    if (!checkUsernameAvailability(userData.username)) {\n      throw new Meteor.Error('error-field-unavailable', \"\".concat(_.escape(userData.username), \" is already in use :(\"), {\n        method: 'insertOrUpdateUser',\n        field: userData.username\n      });\n    }\n\n    if (userData.email && !checkEmailAvailability(userData.email)) {\n      throw new Meteor.Error('error-field-unavailable', \"\".concat(_.escape(userData.email), \" is already in use :(\"), {\n        method: 'insertOrUpdateUser',\n        field: userData.email\n      });\n    }\n  }\n}\n/**\n * Validate permissions to edit user fields\n *\n * @param {string} userId\n * @param {{ _id: string, roles: string[], username: string, name: string, statusText: string, email: string, password: string}} userData\n */\n\n\nfunction validateUserEditing(userId, userData) {\n  const editingMyself = userData._id && userId === userData._id;\n  const canEditOtherUserInfo = hasPermission(userId, 'edit-other-user-info');\n  const canEditOtherUserPassword = hasPermission(userId, 'edit-other-user-password');\n  const user = Users.findOneById(userData._id);\n\n  const isEditingUserRoles = (previousRoles, newRoles) => typeof newRoles !== 'undefined' && !_.isEqual(_.sortBy(previousRoles), _.sortBy(newRoles));\n\n  const isEditingField = (previousValue, newValue) => typeof newValue !== 'undefined' && newValue !== previousValue;\n\n  if (isEditingUserRoles(user.roles, userData.roles) && !hasPermission(userId, 'assign-roles')) {\n    throw new Meteor.Error('error-action-not-allowed', 'Assign roles is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Assign_role'\n    });\n  }\n\n  if (!settings.get('Accounts_AllowUserProfileChange') && !canEditOtherUserInfo && !canEditOtherUserPassword) {\n    throw new Meteor.Error('error-action-not-allowed', 'Edit user profile is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Update_user'\n    });\n  }\n\n  if (isEditingField(user.username, userData.username) && !settings.get('Accounts_AllowUsernameChange') && (!canEditOtherUserInfo || editingMyself)) {\n    throw new Meteor.Error('error-action-not-allowed', 'Edit username is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Update_user'\n    });\n  }\n\n  if (isEditingField(user.statusText, userData.statusText) && !settings.get('Accounts_AllowUserStatusMessageChange') && (!canEditOtherUserInfo || editingMyself)) {\n    throw new Meteor.Error('error-action-not-allowed', 'Edit user status is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Update_user'\n    });\n  }\n\n  if (isEditingField(user.name, userData.name) && !settings.get('Accounts_AllowRealNameChange') && (!canEditOtherUserInfo || editingMyself)) {\n    throw new Meteor.Error('error-action-not-allowed', 'Edit user real name is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Update_user'\n    });\n  }\n\n  if (user.emails[0] && isEditingField(user.emails[0].address, userData.email) && !settings.get('Accounts_AllowEmailChange') && (!canEditOtherUserInfo || editingMyself)) {\n    throw new Meteor.Error('error-action-not-allowed', 'Edit user email is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Update_user'\n    });\n  }\n\n  if (userData.password && !settings.get('Accounts_AllowPasswordChange') && (!canEditOtherUserPassword || editingMyself)) {\n    throw new Meteor.Error('error-action-not-allowed', 'Edit user password is not allowed', {\n      method: 'insertOrUpdateUser',\n      action: 'Update_user'\n    });\n  }\n}\n\nconst handleBio = (updateUser, bio) => {\n  if (bio && bio.trim()) {\n    if (typeof bio !== 'string' || bio.length > 260) {\n      throw new Meteor.Error('error-invalid-field', 'bio', {\n        method: 'saveUserProfile'\n      });\n    }\n\n    updateUser.$set = updateUser.$set || {};\n    updateUser.$set.bio = bio;\n  } else {\n    updateUser.$unset = updateUser.$unset || {};\n    updateUser.$unset.bio = 1;\n  }\n};\n\nconst handleNickname = (updateUser, nickname) => {\n  if (nickname && nickname.trim()) {\n    if (typeof nickname !== 'string' || nickname.length > 120) {\n      throw new Meteor.Error('error-invalid-field', 'nickname', {\n        method: 'saveUserProfile'\n      });\n    }\n\n    updateUser.$set = updateUser.$set || {};\n    updateUser.$set.nickname = nickname;\n  } else {\n    updateUser.$unset = updateUser.$unset || {};\n    updateUser.$unset.nickname = 1;\n  }\n};\n\nconst saveNewUser = function (userData, sendPassword) {\n  validateEmailDomain(userData.email);\n  const roles = userData.roles || getNewUserRoles();\n  const isGuest = roles && roles.length === 1 && roles.includes('guest'); // insert user\n\n  const createUser = {\n    username: userData.username,\n    password: userData.password,\n    joinDefaultChannels: userData.joinDefaultChannels,\n    isGuest\n  };\n\n  if (userData.email) {\n    createUser.email = userData.email;\n  }\n\n  const _id = Accounts.createUser(createUser);\n\n  const updateUser = {\n    $set: _objectSpread(_objectSpread({\n      roles\n    }, typeof userData.name !== 'undefined' && {\n      name: userData.name\n    }), {}, {\n      settings: userData.settings || {}\n    })\n  };\n\n  if (typeof userData.requirePasswordChange !== 'undefined') {\n    updateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n  }\n\n  if (typeof userData.verified === 'boolean') {\n    updateUser.$set['emails.0.verified'] = userData.verified;\n  }\n\n  handleBio(updateUser, userData.bio);\n  handleNickname(updateUser, userData.nickname);\n  Meteor.users.update({\n    _id\n  }, updateUser);\n\n  if (userData.sendWelcomeEmail) {\n    _sendUserEmail(settings.get('Accounts_UserAddedEmail_Subject'), html, userData);\n  }\n\n  if (sendPassword) {\n    _sendUserEmail(settings.get('Password_Changed_Email_Subject'), passwordChangedHtml, userData);\n  }\n\n  userData._id = _id;\n\n  if (settings.get('Accounts_SetDefaultAvatar') === true && userData.email) {\n    const gravatarUrl = Gravatar.imageUrl(userData.email, {\n      default: '404',\n      size: 200,\n      secure: true\n    });\n\n    try {\n      setUserAvatar(userData, gravatarUrl, '', 'url');\n    } catch (e) {// Ignore this error for now, as it not being successful isn't bad\n    }\n  }\n\n  return _id;\n};\n\nconst saveUser = function (userId, userData) {\n  validateUserData(userId, userData);\n  let sendPassword = false;\n\n  if (userData.hasOwnProperty('setRandomPassword')) {\n    if (userData.setRandomPassword) {\n      userData.password = passwordPolicy.generatePassword();\n      userData.requirePasswordChange = true;\n      sendPassword = true;\n    }\n\n    delete userData.setRandomPassword;\n  }\n\n  if (!userData._id) {\n    return saveNewUser(userData, sendPassword);\n  }\n\n  validateUserEditing(userId, userData); // update user\n\n  if (userData.hasOwnProperty('username') || userData.hasOwnProperty('name')) {\n    if (!saveUserIdentity({\n      _id: userData._id,\n      username: userData.username,\n      name: userData.name\n    })) {\n      throw new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n        method: 'saveUser'\n      });\n    }\n  }\n\n  if (typeof userData.statusText === 'string') {\n    setStatusText(userData._id, userData.statusText);\n  }\n\n  if (userData.email) {\n    const shouldSendVerificationEmailToUser = userData.verified !== true;\n    setEmail(userData._id, userData.email, shouldSendVerificationEmailToUser);\n  }\n\n  if (userData.password && userData.password.trim() && hasPermission(userId, 'edit-other-user-password') && passwordPolicy.validate(userData.password)) {\n    Accounts.setPassword(userData._id, userData.password.trim());\n  } else {\n    sendPassword = false;\n  }\n\n  const updateUser = {\n    $set: {}\n  };\n  handleBio(updateUser, userData.bio);\n  handleNickname(updateUser, userData.nickname);\n\n  if (userData.roles) {\n    updateUser.$set.roles = userData.roles;\n  }\n\n  if (userData.settings) {\n    updateUser.$set.settings = {\n      preferences: userData.settings.preferences\n    };\n  }\n\n  if (userData.language) {\n    updateUser.$set.language = userData.language;\n  }\n\n  if (typeof userData.requirePasswordChange !== 'undefined') {\n    updateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n  }\n\n  if (typeof userData.verified === 'boolean') {\n    updateUser.$set['emails.0.verified'] = userData.verified;\n  }\n\n  Meteor.users.update({\n    _id: userData._id\n  }, updateUser);\n  callbacks.run('afterSaveUser', userData);\n\n  if (sendPassword) {\n    _sendUserEmail(settings.get('Password_Changed_Email_Subject'), passwordChangedHtml, userData);\n  }\n\n  return true;\n};","map":{"version":3,"sources":["app/lib/server/functions/saveUser.js"],"names":["_objectSpread","module","link","default","v","export","validateUserEditing","saveUser","Meteor","Accounts","_","s","Gravatar","Mailer","getRoles","hasPermission","settings","passwordPolicy","validateEmailDomain","getNewUserRoles","saveUserIdentity","checkEmailAvailability","checkUsernameAvailability","setUserAvatar","setEmail","setStatusText","Users","callbacks","html","passwordChangedHtml","startup","getTemplate","template","_sendUserEmail","subject","userData","email","to","from","get","data","password","name","send","error","Error","message","function","validateUserData","userId","existingRoles","pluck","_id","method","action","roles","difference","length","indexOf","trim","field","username","run","nameValidation","RegExp","e","test","escape","input","setRandomPassword","editingMyself","canEditOtherUserInfo","canEditOtherUserPassword","user","findOneById","isEditingUserRoles","previousRoles","newRoles","isEqual","sortBy","isEditingField","previousValue","newValue","statusText","emails","address","handleBio","updateUser","bio","$set","$unset","handleNickname","nickname","saveNewUser","sendPassword","isGuest","includes","createUser","joinDefaultChannels","requirePasswordChange","verified","users","update","sendWelcomeEmail","gravatarUrl","imageUrl","size","secure","hasOwnProperty","generatePassword","shouldSendVerificationEmailToUser","validate","setPassword","preferences","language"],"mappings":"AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,aAAa,GAACI,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;AAAlBH,MAAM,CAACI,MAAP,CAAc;AAACC,EAAAA,mBAAmB,EAAC,MAAIA,mBAAzB;AAA6CC,EAAAA,QAAQ,EAAC,MAAIA;AAA1D,CAAd;AAAmF,IAAIC,MAAJ;AAAWP,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACM,EAAAA,MAAM,CAACJ,CAAD,EAAG;AAACI,IAAAA,MAAM,GAACJ,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIK,QAAJ;AAAaR,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACO,EAAAA,QAAQ,CAACL,CAAD,EAAG;AAACK,IAAAA,QAAQ,GAACL,CAAT;AAAW;;AAAxB,CAAnC,EAA6D,CAA7D;;AAAgE,IAAIM,CAAJ;;AAAMT,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACM,IAAAA,CAAC,GAACN,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAA8C,IAAIO,CAAJ;AAAMV,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACO,IAAAA,CAAC,GAACP,CAAF;AAAI;;AAAhB,CAAhC,EAAkD,CAAlD;AAAqD,IAAIQ,QAAJ;AAAaX,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAsC;AAACU,EAAAA,QAAQ,CAACR,CAAD,EAAG;AAACQ,IAAAA,QAAQ,GAACR,CAAT;AAAW;;AAAxB,CAAtC,EAAgE,CAAhE;AAAmE,IAAIS,MAAJ;AAAWZ,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAAC,MAAIE,CAAJ,EAAM;AAACS,IAAAA,MAAM,GAACT,CAAP;AAAS;;AAAjB,CAA9B,EAAiD,CAAjD;AAAoD,IAAIU,QAAJ,EAAaC,aAAb;AAA2Bd,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACY,EAAAA,QAAQ,CAACV,CAAD,EAAG;AAACU,IAAAA,QAAQ,GAACV,CAAT;AAAW,GAAxB;;AAAyBW,EAAAA,aAAa,CAACX,CAAD,EAAG;AAACW,IAAAA,aAAa,GAACX,CAAd;AAAgB;;AAA1D,CAArC,EAAiG,CAAjG;AAAoG,IAAIY,QAAJ;AAAaf,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACc,EAAAA,QAAQ,CAACZ,CAAD,EAAG;AAACY,IAAAA,QAAQ,GAACZ,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIa,cAAJ;AAAmBhB,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACe,EAAAA,cAAc,CAACb,CAAD,EAAG;AAACa,IAAAA,cAAc,GAACb,CAAf;AAAiB;;AAApC,CAApC,EAA0E,CAA1E;AAA6E,IAAIc,mBAAJ;AAAwBjB,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACgB,EAAAA,mBAAmB,CAACd,CAAD,EAAG;AAACc,IAAAA,mBAAmB,GAACd,CAApB;AAAsB;;AAA9C,CAArB,EAAqE,CAArE;AAAwE,IAAIe,eAAJ;AAAoBlB,MAAM,CAACC,IAAP,CAAY,sDAAZ,EAAmE;AAACiB,EAAAA,eAAe,CAACf,CAAD,EAAG;AAACe,IAAAA,eAAe,GAACf,CAAhB;AAAkB;;AAAtC,CAAnE,EAA2G,EAA3G;AAA+G,IAAIgB,gBAAJ;AAAqBnB,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAiC;AAACkB,EAAAA,gBAAgB,CAAChB,CAAD,EAAG;AAACgB,IAAAA,gBAAgB,GAAChB,CAAjB;AAAmB;;AAAxC,CAAjC,EAA2E,EAA3E;AAA+E,IAAIiB,sBAAJ,EAA2BC,yBAA3B,EAAqDC,aAArD,EAAmEC,QAAnE,EAA4EC,aAA5E;AAA0FxB,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAgB;AAACmB,EAAAA,sBAAsB,CAACjB,CAAD,EAAG;AAACiB,IAAAA,sBAAsB,GAACjB,CAAvB;AAAyB,GAApD;;AAAqDkB,EAAAA,yBAAyB,CAAClB,CAAD,EAAG;AAACkB,IAAAA,yBAAyB,GAAClB,CAA1B;AAA4B,GAA9G;;AAA+GmB,EAAAA,aAAa,CAACnB,CAAD,EAAG;AAACmB,IAAAA,aAAa,GAACnB,CAAd;AAAgB,GAAhJ;;AAAiJoB,EAAAA,QAAQ,CAACpB,CAAD,EAAG;AAACoB,IAAAA,QAAQ,GAACpB,CAAT;AAAW,GAAxK;;AAAyKqB,EAAAA,aAAa,CAACrB,CAAD,EAAG;AAACqB,IAAAA,aAAa,GAACrB,CAAd;AAAgB;;AAA1M,CAAhB,EAA4N,EAA5N;AAAgO,IAAIsB,KAAJ;AAAUzB,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACwB,EAAAA,KAAK,CAACtB,CAAD,EAAG;AAACsB,IAAAA,KAAK,GAACtB,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,EAAzD;AAA6D,IAAIuB,SAAJ;AAAc1B,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACyB,EAAAA,SAAS,CAACvB,CAAD,EAAG;AAACuB,IAAAA,SAAS,GAACvB,CAAV;AAAY;;AAA1B,CAAxC,EAAoE,EAApE;AAiB79C,IAAIwB,IAAI,GAAG,EAAX;AACA,IAAIC,mBAAmB,GAAG,EAA1B;AACArB,MAAM,CAACsB,OAAP,CAAe,MAAM;AACpBjB,EAAAA,MAAM,CAACkB,WAAP,CAAmB,+BAAnB,EAAqDC,QAAD,IAAc;AACjEJ,IAAAA,IAAI,GAAGI,QAAP;AACA,GAFD;AAIAnB,EAAAA,MAAM,CAACkB,WAAP,CAAmB,wBAAnB,EAA8CC,QAAD,IAAc;AAC1DH,IAAAA,mBAAmB,GAAGG,QAAtB;AACA,GAFD;AAGA,CARD;;AAUA,SAASC,cAAT,CAAwBC,OAAxB,EAAiCN,IAAjC,EAAuCO,QAAvC,EAAiD;AAChD,QAAMC,KAAK,GAAG;AACbC,IAAAA,EAAE,EAAEF,QAAQ,CAACC,KADA;AAEbE,IAAAA,IAAI,EAAEtB,QAAQ,CAACuB,GAAT,CAAa,YAAb,CAFO;AAGbL,IAAAA,OAHa;AAIbN,IAAAA,IAJa;AAKbY,IAAAA,IAAI,EAAE;AACLJ,MAAAA,KAAK,EAAED,QAAQ,CAACC,KADX;AAELK,MAAAA,QAAQ,EAAEN,QAAQ,CAACM;AAFd;AALO,GAAd;;AAWA,MAAI,OAAON,QAAQ,CAACO,IAAhB,KAAyB,WAA7B,EAA0C;AACzCN,IAAAA,KAAK,CAACI,IAAN,CAAWE,IAAX,GAAkBP,QAAQ,CAACO,IAA3B;AACA;;AAED,MAAI;AACH7B,IAAAA,MAAM,CAAC8B,IAAP,CAAYP,KAAZ;AACA,GAFD,CAEE,OAAOQ,KAAP,EAAc;AACf,UAAM,IAAIpC,MAAM,CAACqC,KAAX,CAAiB,yBAAjB,wCAA2ED,KAAK,CAACE,OAAjF,GAA4F;AACjGC,MAAAA,QAAQ,EAAE,qBADuF;AAEjGD,MAAAA,OAAO,EAAEF,KAAK,CAACE;AAFkF,KAA5F,CAAN;AAIA;AACD;;AAED,SAASE,gBAAT,CAA0BC,MAA1B,EAAkCd,QAAlC,EAA4C;AAC3C,QAAMe,aAAa,GAAGxC,CAAC,CAACyC,KAAF,CAAQrC,QAAQ,EAAhB,EAAoB,KAApB,CAAtB;;AAEA,MAAIqB,QAAQ,CAACiB,GAAT,IAAgBH,MAAM,KAAKd,QAAQ,CAACiB,GAApC,IAA2C,CAACrC,aAAa,CAACkC,MAAD,EAAS,sBAAT,CAA7D,EAA+F;AAC9F,UAAM,IAAIzC,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,6BAA7C,EAA4E;AACjFQ,MAAAA,MAAM,EAAE,oBADyE;AAEjFC,MAAAA,MAAM,EAAE;AAFyE,KAA5E,CAAN;AAIA;;AAED,MAAI,CAACnB,QAAQ,CAACiB,GAAV,IAAiB,CAACrC,aAAa,CAACkC,MAAD,EAAS,aAAT,CAAnC,EAA4D;AAC3D,UAAM,IAAIzC,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,4BAA7C,EAA2E;AAChFQ,MAAAA,MAAM,EAAE,oBADwE;AAEhFC,MAAAA,MAAM,EAAE;AAFwE,KAA3E,CAAN;AAIA;;AAED,MAAInB,QAAQ,CAACoB,KAAT,IAAkB7C,CAAC,CAAC8C,UAAF,CAAarB,QAAQ,CAACoB,KAAtB,EAA6BL,aAA7B,EAA4CO,MAA5C,GAAqD,CAA3E,EAA8E;AAC7E,UAAM,IAAIjD,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,2CAA7C,EAA0F;AAC/FQ,MAAAA,MAAM,EAAE,oBADuF;AAE/FC,MAAAA,MAAM,EAAE;AAFuF,KAA1F,CAAN;AAIA;;AAED,MAAInB,QAAQ,CAACoB,KAAT,IAAkB7C,CAAC,CAACgD,OAAF,CAAUvB,QAAQ,CAACoB,KAAnB,EAA0B,OAA1B,KAAsC,CAAxD,IAA6D,CAACxC,aAAa,CAACkC,MAAD,EAAS,mBAAT,CAA/E,EAA8G;AAC7G,UAAM,IAAIzC,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,gCAA7C,EAA+E;AACpFQ,MAAAA,MAAM,EAAE,oBAD4E;AAEpFC,MAAAA,MAAM,EAAE;AAF4E,KAA/E,CAAN;AAIA;;AAED,MAAItC,QAAQ,CAACuB,GAAT,CAAa,+BAAb,KAAiD,CAACJ,QAAQ,CAACiB,GAA3D,IAAkE,CAACzC,CAAC,CAACgD,IAAF,CAAOxB,QAAQ,CAACO,IAAhB,CAAvE,EAA8F;AAC7F,UAAM,IAAIlC,MAAM,CAACqC,KAAX,CAAiB,6BAAjB,EAAgD,4BAAhD,EAA8E;AACnFQ,MAAAA,MAAM,EAAE,oBAD2E;AAEnFO,MAAAA,KAAK,EAAE;AAF4E,KAA9E,CAAN;AAIA;;AAED,MAAI,CAACzB,QAAQ,CAACiB,GAAV,IAAiB,CAACzC,CAAC,CAACgD,IAAF,CAAOxB,QAAQ,CAAC0B,QAAhB,CAAtB,EAAiD;AAChD,UAAM,IAAIrD,MAAM,CAACqC,KAAX,CAAiB,6BAAjB,EAAgD,gCAAhD,EAAkF;AACvFQ,MAAAA,MAAM,EAAE,oBAD+E;AAEvFO,MAAAA,KAAK,EAAE;AAFgF,KAAlF,CAAN;AAIA;;AAED,MAAIzB,QAAQ,CAACoB,KAAb,EAAoB;AACnB5B,IAAAA,SAAS,CAACmC,GAAV,CAAc,mBAAd,EAAmC3B,QAAnC;AACA;;AAED,MAAI4B,cAAJ;;AAEA,MAAI;AACHA,IAAAA,cAAc,GAAG,IAAIC,MAAJ,YAAehD,QAAQ,CAACuB,GAAT,CAAa,4BAAb,CAAf,OAAjB;AACA,GAFD,CAEE,OAAO0B,CAAP,EAAU;AACXF,IAAAA,cAAc,GAAG,IAAIC,MAAJ,CAAW,mBAAX,CAAjB;AACA;;AAED,MAAI7B,QAAQ,CAAC0B,QAAT,IAAqB,CAACE,cAAc,CAACG,IAAf,CAAoB/B,QAAQ,CAAC0B,QAA7B,CAA1B,EAAkE;AACjE,UAAM,IAAIrD,MAAM,CAACqC,KAAX,CAAiB,kCAAjB,YAAwDnC,CAAC,CAACyD,MAAF,CAAShC,QAAQ,CAAC0B,QAAlB,CAAxD,+BAA+G;AACpHR,MAAAA,MAAM,EAAE,oBAD4G;AAEpHe,MAAAA,KAAK,EAAEjC,QAAQ,CAAC0B,QAFoG;AAGpHD,MAAAA,KAAK,EAAE;AAH6G,KAA/G,CAAN;AAKA;;AAED,MAAI,CAACzB,QAAQ,CAACiB,GAAV,IAAiB,CAACjB,QAAQ,CAACM,QAA3B,IAAuC,CAACN,QAAQ,CAACkC,iBAArD,EAAwE;AACvE,UAAM,IAAI7D,MAAM,CAACqC,KAAX,CAAiB,6BAAjB,EAAgD,gCAAhD,EAAkF;AACvFQ,MAAAA,MAAM,EAAE,oBAD+E;AAEvFO,MAAAA,KAAK,EAAE;AAFgF,KAAlF,CAAN;AAIA;;AAED,MAAI,CAACzB,QAAQ,CAACiB,GAAd,EAAmB;AAClB,QAAI,CAAC9B,yBAAyB,CAACa,QAAQ,CAAC0B,QAAV,CAA9B,EAAmD;AAClD,YAAM,IAAIrD,MAAM,CAACqC,KAAX,CAAiB,yBAAjB,YAA+CnC,CAAC,CAACyD,MAAF,CAAShC,QAAQ,CAAC0B,QAAlB,CAA/C,4BAAmG;AACxGR,QAAAA,MAAM,EAAE,oBADgG;AAExGO,QAAAA,KAAK,EAAEzB,QAAQ,CAAC0B;AAFwF,OAAnG,CAAN;AAIA;;AAED,QAAI1B,QAAQ,CAACC,KAAT,IAAkB,CAACf,sBAAsB,CAACc,QAAQ,CAACC,KAAV,CAA7C,EAA+D;AAC9D,YAAM,IAAI5B,MAAM,CAACqC,KAAX,CAAiB,yBAAjB,YAA+CnC,CAAC,CAACyD,MAAF,CAAShC,QAAQ,CAACC,KAAlB,CAA/C,4BAAgG;AACrGiB,QAAAA,MAAM,EAAE,oBAD6F;AAErGO,QAAAA,KAAK,EAAEzB,QAAQ,CAACC;AAFqF,OAAhG,CAAN;AAIA;AACD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAAS9B,mBAAT,CAA6B2C,MAA7B,EAAqCd,QAArC,EAA+C;AACrD,QAAMmC,aAAa,GAAGnC,QAAQ,CAACiB,GAAT,IAAgBH,MAAM,KAAKd,QAAQ,CAACiB,GAA1D;AAEA,QAAMmB,oBAAoB,GAAGxD,aAAa,CAACkC,MAAD,EAAS,sBAAT,CAA1C;AACA,QAAMuB,wBAAwB,GAAGzD,aAAa,CAACkC,MAAD,EAAS,0BAAT,CAA9C;AACA,QAAMwB,IAAI,GAAG/C,KAAK,CAACgD,WAAN,CAAkBvC,QAAQ,CAACiB,GAA3B,CAAb;;AAEA,QAAMuB,kBAAkB,GAAG,CAACC,aAAD,EAAgBC,QAAhB,KAC1B,OAAOA,QAAP,KAAoB,WAApB,IAAmC,CAACnE,CAAC,CAACoE,OAAF,CAAUpE,CAAC,CAACqE,MAAF,CAASH,aAAT,CAAV,EAAmClE,CAAC,CAACqE,MAAF,CAASF,QAAT,CAAnC,CADrC;;AAEA,QAAMG,cAAc,GAAG,CAACC,aAAD,EAAgBC,QAAhB,KAA6B,OAAOA,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,KAAKD,aAApG;;AAEA,MAAIN,kBAAkB,CAACF,IAAI,CAAClB,KAAN,EAAapB,QAAQ,CAACoB,KAAtB,CAAlB,IAAkD,CAACxC,aAAa,CAACkC,MAAD,EAAS,cAAT,CAApE,EAA8F;AAC7F,UAAM,IAAIzC,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,6BAA7C,EAA4E;AACjFQ,MAAAA,MAAM,EAAE,oBADyE;AAEjFC,MAAAA,MAAM,EAAE;AAFyE,KAA5E,CAAN;AAIA;;AAED,MAAI,CAACtC,QAAQ,CAACuB,GAAT,CAAa,iCAAb,CAAD,IAAoD,CAACgC,oBAArD,IAA6E,CAACC,wBAAlF,EAA4G;AAC3G,UAAM,IAAIhE,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,kCAA7C,EAAiF;AACtFQ,MAAAA,MAAM,EAAE,oBAD8E;AAEtFC,MAAAA,MAAM,EAAE;AAF8E,KAAjF,CAAN;AAIA;;AAED,MACC0B,cAAc,CAACP,IAAI,CAACZ,QAAN,EAAgB1B,QAAQ,CAAC0B,QAAzB,CAAd,IACA,CAAC7C,QAAQ,CAACuB,GAAT,CAAa,8BAAb,CADD,KAEC,CAACgC,oBAAD,IAAyBD,aAF1B,CADD,EAIE;AACD,UAAM,IAAI9D,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,8BAA7C,EAA6E;AAClFQ,MAAAA,MAAM,EAAE,oBAD0E;AAElFC,MAAAA,MAAM,EAAE;AAF0E,KAA7E,CAAN;AAIA;;AAED,MACC0B,cAAc,CAACP,IAAI,CAACU,UAAN,EAAkBhD,QAAQ,CAACgD,UAA3B,CAAd,IACA,CAACnE,QAAQ,CAACuB,GAAT,CAAa,uCAAb,CADD,KAEC,CAACgC,oBAAD,IAAyBD,aAF1B,CADD,EAIE;AACD,UAAM,IAAI9D,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,iCAA7C,EAAgF;AACrFQ,MAAAA,MAAM,EAAE,oBAD6E;AAErFC,MAAAA,MAAM,EAAE;AAF6E,KAAhF,CAAN;AAIA;;AAED,MACC0B,cAAc,CAACP,IAAI,CAAC/B,IAAN,EAAYP,QAAQ,CAACO,IAArB,CAAd,IACA,CAAC1B,QAAQ,CAACuB,GAAT,CAAa,8BAAb,CADD,KAEC,CAACgC,oBAAD,IAAyBD,aAF1B,CADD,EAIE;AACD,UAAM,IAAI9D,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,oCAA7C,EAAmF;AACxFQ,MAAAA,MAAM,EAAE,oBADgF;AAExFC,MAAAA,MAAM,EAAE;AAFgF,KAAnF,CAAN;AAIA;;AAED,MACCmB,IAAI,CAACW,MAAL,CAAY,CAAZ,KACAJ,cAAc,CAACP,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAeC,OAAhB,EAAyBlD,QAAQ,CAACC,KAAlC,CADd,IAEA,CAACpB,QAAQ,CAACuB,GAAT,CAAa,2BAAb,CAFD,KAGC,CAACgC,oBAAD,IAAyBD,aAH1B,CADD,EAKE;AACD,UAAM,IAAI9D,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,gCAA7C,EAA+E;AACpFQ,MAAAA,MAAM,EAAE,oBAD4E;AAEpFC,MAAAA,MAAM,EAAE;AAF4E,KAA/E,CAAN;AAIA;;AAED,MAAInB,QAAQ,CAACM,QAAT,IAAqB,CAACzB,QAAQ,CAACuB,GAAT,CAAa,8BAAb,CAAtB,KAAuE,CAACiC,wBAAD,IAA6BF,aAApG,CAAJ,EAAwH;AACvH,UAAM,IAAI9D,MAAM,CAACqC,KAAX,CAAiB,0BAAjB,EAA6C,mCAA7C,EAAkF;AACvFQ,MAAAA,MAAM,EAAE,oBAD+E;AAEvFC,MAAAA,MAAM,EAAE;AAF+E,KAAlF,CAAN;AAIA;AACD;;AAED,MAAMgC,SAAS,GAAG,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACtC,MAAIA,GAAG,IAAIA,GAAG,CAAC7B,IAAJ,EAAX,EAAuB;AACtB,QAAI,OAAO6B,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAAC/B,MAAJ,GAAa,GAA5C,EAAiD;AAChD,YAAM,IAAIjD,MAAM,CAACqC,KAAX,CAAiB,qBAAjB,EAAwC,KAAxC,EAA+C;AACpDQ,QAAAA,MAAM,EAAE;AAD4C,OAA/C,CAAN;AAGA;;AACDkC,IAAAA,UAAU,CAACE,IAAX,GAAkBF,UAAU,CAACE,IAAX,IAAmB,EAArC;AACAF,IAAAA,UAAU,CAACE,IAAX,CAAgBD,GAAhB,GAAsBA,GAAtB;AACA,GARD,MAQO;AACND,IAAAA,UAAU,CAACG,MAAX,GAAoBH,UAAU,CAACG,MAAX,IAAqB,EAAzC;AACAH,IAAAA,UAAU,CAACG,MAAX,CAAkBF,GAAlB,GAAwB,CAAxB;AACA;AACD,CAbD;;AAeA,MAAMG,cAAc,GAAG,CAACJ,UAAD,EAAaK,QAAb,KAA0B;AAChD,MAAIA,QAAQ,IAAIA,QAAQ,CAACjC,IAAT,EAAhB,EAAiC;AAChC,QAAI,OAAOiC,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACnC,MAAT,GAAkB,GAAtD,EAA2D;AAC1D,YAAM,IAAIjD,MAAM,CAACqC,KAAX,CAAiB,qBAAjB,EAAwC,UAAxC,EAAoD;AACzDQ,QAAAA,MAAM,EAAE;AADiD,OAApD,CAAN;AAGA;;AACDkC,IAAAA,UAAU,CAACE,IAAX,GAAkBF,UAAU,CAACE,IAAX,IAAmB,EAArC;AACAF,IAAAA,UAAU,CAACE,IAAX,CAAgBG,QAAhB,GAA2BA,QAA3B;AACA,GARD,MAQO;AACNL,IAAAA,UAAU,CAACG,MAAX,GAAoBH,UAAU,CAACG,MAAX,IAAqB,EAAzC;AACAH,IAAAA,UAAU,CAACG,MAAX,CAAkBE,QAAlB,GAA6B,CAA7B;AACA;AACD,CAbD;;AAeA,MAAMC,WAAW,GAAG,UAAU1D,QAAV,EAAoB2D,YAApB,EAAkC;AACrD5E,EAAAA,mBAAmB,CAACiB,QAAQ,CAACC,KAAV,CAAnB;AAEA,QAAMmB,KAAK,GAAGpB,QAAQ,CAACoB,KAAT,IAAkBpC,eAAe,EAA/C;AACA,QAAM4E,OAAO,GAAGxC,KAAK,IAAIA,KAAK,CAACE,MAAN,KAAiB,CAA1B,IAA+BF,KAAK,CAACyC,QAAN,CAAe,OAAf,CAA/C,CAJqD,CAMrD;;AACA,QAAMC,UAAU,GAAG;AAClBpC,IAAAA,QAAQ,EAAE1B,QAAQ,CAAC0B,QADD;AAElBpB,IAAAA,QAAQ,EAAEN,QAAQ,CAACM,QAFD;AAGlByD,IAAAA,mBAAmB,EAAE/D,QAAQ,CAAC+D,mBAHZ;AAIlBH,IAAAA;AAJkB,GAAnB;;AAMA,MAAI5D,QAAQ,CAACC,KAAb,EAAoB;AACnB6D,IAAAA,UAAU,CAAC7D,KAAX,GAAmBD,QAAQ,CAACC,KAA5B;AACA;;AAED,QAAMgB,GAAG,GAAG3C,QAAQ,CAACwF,UAAT,CAAoBA,UAApB,CAAZ;;AAEA,QAAMV,UAAU,GAAG;AAClBE,IAAAA,IAAI;AACHlC,MAAAA;AADG,OAEC,OAAOpB,QAAQ,CAACO,IAAhB,KAAyB,WAAzB,IAAwC;AAAEA,MAAAA,IAAI,EAAEP,QAAQ,CAACO;AAAjB,KAFzC;AAGH1B,MAAAA,QAAQ,EAAEmB,QAAQ,CAACnB,QAAT,IAAqB;AAH5B;AADc,GAAnB;;AAQA,MAAI,OAAOmB,QAAQ,CAACgE,qBAAhB,KAA0C,WAA9C,EAA2D;AAC1DZ,IAAAA,UAAU,CAACE,IAAX,CAAgBU,qBAAhB,GAAwChE,QAAQ,CAACgE,qBAAjD;AACA;;AAED,MAAI,OAAOhE,QAAQ,CAACiE,QAAhB,KAA6B,SAAjC,EAA4C;AAC3Cb,IAAAA,UAAU,CAACE,IAAX,CAAgB,mBAAhB,IAAuCtD,QAAQ,CAACiE,QAAhD;AACA;;AAEDd,EAAAA,SAAS,CAACC,UAAD,EAAapD,QAAQ,CAACqD,GAAtB,CAAT;AACAG,EAAAA,cAAc,CAACJ,UAAD,EAAapD,QAAQ,CAACyD,QAAtB,CAAd;AAEApF,EAAAA,MAAM,CAAC6F,KAAP,CAAaC,MAAb,CAAoB;AAAElD,IAAAA;AAAF,GAApB,EAA6BmC,UAA7B;;AAEA,MAAIpD,QAAQ,CAACoE,gBAAb,EAA+B;AAC9BtE,IAAAA,cAAc,CAACjB,QAAQ,CAACuB,GAAT,CAAa,iCAAb,CAAD,EAAkDX,IAAlD,EAAwDO,QAAxD,CAAd;AACA;;AAED,MAAI2D,YAAJ,EAAkB;AACjB7D,IAAAA,cAAc,CAACjB,QAAQ,CAACuB,GAAT,CAAa,gCAAb,CAAD,EAAiDV,mBAAjD,EAAsEM,QAAtE,CAAd;AACA;;AAEDA,EAAAA,QAAQ,CAACiB,GAAT,GAAeA,GAAf;;AAEA,MAAIpC,QAAQ,CAACuB,GAAT,CAAa,2BAAb,MAA8C,IAA9C,IAAsDJ,QAAQ,CAACC,KAAnE,EAA0E;AACzE,UAAMoE,WAAW,GAAG5F,QAAQ,CAAC6F,QAAT,CAAkBtE,QAAQ,CAACC,KAA3B,EAAkC;AACrDjC,MAAAA,OAAO,EAAE,KAD4C;AAErDuG,MAAAA,IAAI,EAAE,GAF+C;AAGrDC,MAAAA,MAAM,EAAE;AAH6C,KAAlC,CAApB;;AAMA,QAAI;AACHpF,MAAAA,aAAa,CAACY,QAAD,EAAWqE,WAAX,EAAwB,EAAxB,EAA4B,KAA5B,CAAb;AACA,KAFD,CAEE,OAAOvC,CAAP,EAAU,CACX;AACA;AACD;;AAED,SAAOb,GAAP;AACA,CAjED;;AAmEO,MAAM7C,QAAQ,GAAG,UAAU0C,MAAV,EAAkBd,QAAlB,EAA4B;AACnDa,EAAAA,gBAAgB,CAACC,MAAD,EAASd,QAAT,CAAhB;AACA,MAAI2D,YAAY,GAAG,KAAnB;;AAEA,MAAI3D,QAAQ,CAACyE,cAAT,CAAwB,mBAAxB,CAAJ,EAAkD;AACjD,QAAIzE,QAAQ,CAACkC,iBAAb,EAAgC;AAC/BlC,MAAAA,QAAQ,CAACM,QAAT,GAAoBxB,cAAc,CAAC4F,gBAAf,EAApB;AACA1E,MAAAA,QAAQ,CAACgE,qBAAT,GAAiC,IAAjC;AACAL,MAAAA,YAAY,GAAG,IAAf;AACA;;AAED,WAAO3D,QAAQ,CAACkC,iBAAhB;AACA;;AAED,MAAI,CAAClC,QAAQ,CAACiB,GAAd,EAAmB;AAClB,WAAOyC,WAAW,CAAC1D,QAAD,EAAW2D,YAAX,CAAlB;AACA;;AAEDxF,EAAAA,mBAAmB,CAAC2C,MAAD,EAASd,QAAT,CAAnB,CAlBmD,CAoBnD;;AACA,MAAIA,QAAQ,CAACyE,cAAT,CAAwB,UAAxB,KAAuCzE,QAAQ,CAACyE,cAAT,CAAwB,MAAxB,CAA3C,EAA4E;AAC3E,QACC,CAACxF,gBAAgB,CAAC;AACjBgC,MAAAA,GAAG,EAAEjB,QAAQ,CAACiB,GADG;AAEjBS,MAAAA,QAAQ,EAAE1B,QAAQ,CAAC0B,QAFF;AAGjBnB,MAAAA,IAAI,EAAEP,QAAQ,CAACO;AAHE,KAAD,CADlB,EAME;AACD,YAAM,IAAIlC,MAAM,CAACqC,KAAX,CAAiB,+BAAjB,EAAkD,8BAAlD,EAAkF;AACvFQ,QAAAA,MAAM,EAAE;AAD+E,OAAlF,CAAN;AAGA;AACD;;AAED,MAAI,OAAOlB,QAAQ,CAACgD,UAAhB,KAA+B,QAAnC,EAA6C;AAC5C1D,IAAAA,aAAa,CAACU,QAAQ,CAACiB,GAAV,EAAejB,QAAQ,CAACgD,UAAxB,CAAb;AACA;;AAED,MAAIhD,QAAQ,CAACC,KAAb,EAAoB;AACnB,UAAM0E,iCAAiC,GAAG3E,QAAQ,CAACiE,QAAT,KAAsB,IAAhE;AACA5E,IAAAA,QAAQ,CAACW,QAAQ,CAACiB,GAAV,EAAejB,QAAQ,CAACC,KAAxB,EAA+B0E,iCAA/B,CAAR;AACA;;AAED,MACC3E,QAAQ,CAACM,QAAT,IACAN,QAAQ,CAACM,QAAT,CAAkBkB,IAAlB,EADA,IAEA5C,aAAa,CAACkC,MAAD,EAAS,0BAAT,CAFb,IAGAhC,cAAc,CAAC8F,QAAf,CAAwB5E,QAAQ,CAACM,QAAjC,CAJD,EAKE;AACDhC,IAAAA,QAAQ,CAACuG,WAAT,CAAqB7E,QAAQ,CAACiB,GAA9B,EAAmCjB,QAAQ,CAACM,QAAT,CAAkBkB,IAAlB,EAAnC;AACA,GAPD,MAOO;AACNmC,IAAAA,YAAY,GAAG,KAAf;AACA;;AAED,QAAMP,UAAU,GAAG;AAClBE,IAAAA,IAAI,EAAE;AADY,GAAnB;AAIAH,EAAAA,SAAS,CAACC,UAAD,EAAapD,QAAQ,CAACqD,GAAtB,CAAT;AACAG,EAAAA,cAAc,CAACJ,UAAD,EAAapD,QAAQ,CAACyD,QAAtB,CAAd;;AAEA,MAAIzD,QAAQ,CAACoB,KAAb,EAAoB;AACnBgC,IAAAA,UAAU,CAACE,IAAX,CAAgBlC,KAAhB,GAAwBpB,QAAQ,CAACoB,KAAjC;AACA;;AACD,MAAIpB,QAAQ,CAACnB,QAAb,EAAuB;AACtBuE,IAAAA,UAAU,CAACE,IAAX,CAAgBzE,QAAhB,GAA2B;AAAEiG,MAAAA,WAAW,EAAE9E,QAAQ,CAACnB,QAAT,CAAkBiG;AAAjC,KAA3B;AACA;;AAED,MAAI9E,QAAQ,CAAC+E,QAAb,EAAuB;AACtB3B,IAAAA,UAAU,CAACE,IAAX,CAAgByB,QAAhB,GAA2B/E,QAAQ,CAAC+E,QAApC;AACA;;AAED,MAAI,OAAO/E,QAAQ,CAACgE,qBAAhB,KAA0C,WAA9C,EAA2D;AAC1DZ,IAAAA,UAAU,CAACE,IAAX,CAAgBU,qBAAhB,GAAwChE,QAAQ,CAACgE,qBAAjD;AACA;;AAED,MAAI,OAAOhE,QAAQ,CAACiE,QAAhB,KAA6B,SAAjC,EAA4C;AAC3Cb,IAAAA,UAAU,CAACE,IAAX,CAAgB,mBAAhB,IAAuCtD,QAAQ,CAACiE,QAAhD;AACA;;AAED5F,EAAAA,MAAM,CAAC6F,KAAP,CAAaC,MAAb,CAAoB;AAAElD,IAAAA,GAAG,EAAEjB,QAAQ,CAACiB;AAAhB,GAApB,EAA2CmC,UAA3C;AAEA5D,EAAAA,SAAS,CAACmC,GAAV,CAAc,eAAd,EAA+B3B,QAA/B;;AAEA,MAAI2D,YAAJ,EAAkB;AACjB7D,IAAAA,cAAc,CAACjB,QAAQ,CAACuB,GAAT,CAAa,gCAAb,CAAD,EAAiDV,mBAAjD,EAAsEM,QAAtE,CAAd;AACA;;AAED,SAAO,IAAP;AACA,CA1FM","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport _ from 'underscore';\nimport s from 'underscore.string';\nimport { Gravatar } from 'meteor/jparker:gravatar';\n\nimport * as Mailer from '../../../mailer';\nimport { getRoles, hasPermission } from '../../../authorization';\nimport { settings } from '../../../settings';\nimport { passwordPolicy } from '../lib/passwordPolicy';\nimport { validateEmailDomain } from '../lib';\nimport { getNewUserRoles } from '../../../../server/services/user/lib/getNewUserRoles';\nimport { saveUserIdentity } from './saveUserIdentity';\nimport { checkEmailAvailability, checkUsernameAvailability, setUserAvatar, setEmail, setStatusText } from '.';\nimport { Users } from '../../../models/server';\nimport { callbacks } from '../../../../lib/callbacks';\n\nlet html = '';\nlet passwordChangedHtml = '';\nMeteor.startup(() => {\n\tMailer.getTemplate('Accounts_UserAddedEmail_Email', (template) => {\n\t\thtml = template;\n\t});\n\n\tMailer.getTemplate('Password_Changed_Email', (template) => {\n\t\tpasswordChangedHtml = template;\n\t});\n});\n\nfunction _sendUserEmail(subject, html, userData) {\n\tconst email = {\n\t\tto: userData.email,\n\t\tfrom: settings.get('From_Email'),\n\t\tsubject,\n\t\thtml,\n\t\tdata: {\n\t\t\temail: userData.email,\n\t\t\tpassword: userData.password,\n\t\t},\n\t};\n\n\tif (typeof userData.name !== 'undefined') {\n\t\temail.data.name = userData.name;\n\t}\n\n\ttry {\n\t\tMailer.send(email);\n\t} catch (error) {\n\t\tthrow new Meteor.Error('error-email-send-failed', `Error trying to send email: ${error.message}`, {\n\t\t\tfunction: 'RocketChat.saveUser',\n\t\t\tmessage: error.message,\n\t\t});\n\t}\n}\n\nfunction validateUserData(userId, userData) {\n\tconst existingRoles = _.pluck(getRoles(), '_id');\n\n\tif (userData._id && userId !== userData._id && !hasPermission(userId, 'edit-other-user-info')) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Editing_user',\n\t\t});\n\t}\n\n\tif (!userData._id && !hasPermission(userId, 'create-user')) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Adding user is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Adding_user',\n\t\t});\n\t}\n\n\tif (userData.roles && _.difference(userData.roles, existingRoles).length > 0) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'The field Roles consist invalid role name', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_role',\n\t\t});\n\t}\n\n\tif (userData.roles && _.indexOf(userData.roles, 'admin') >= 0 && !hasPermission(userId, 'assign-admin-role')) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Assigning admin is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_admin',\n\t\t});\n\t}\n\n\tif (settings.get('Accounts_RequireNameForSignUp') && !userData._id && !s.trim(userData.name)) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Name',\n\t\t});\n\t}\n\n\tif (!userData._id && !s.trim(userData.username)) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Username is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tif (userData.roles) {\n\t\tcallbacks.run('validateUserRoles', userData);\n\t}\n\n\tlet nameValidation;\n\n\ttry {\n\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t} catch (e) {\n\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t}\n\n\tif (userData.username && !nameValidation.test(userData.username)) {\n\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${_.escape(userData.username)} is not a valid username`, {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tinput: userData.username,\n\t\t\tfield: 'Username',\n\t\t});\n\t}\n\n\tif (!userData._id && !userData.password && !userData.setRandomPassword) {\n\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Password is required', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\tfield: 'Password',\n\t\t});\n\t}\n\n\tif (!userData._id) {\n\t\tif (!checkUsernameAvailability(userData.username)) {\n\t\t\tthrow new Meteor.Error('error-field-unavailable', `${_.escape(userData.username)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.username,\n\t\t\t});\n\t\t}\n\n\t\tif (userData.email && !checkEmailAvailability(userData.email)) {\n\t\t\tthrow new Meteor.Error('error-field-unavailable', `${_.escape(userData.email)} is already in use :(`, {\n\t\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\t\tfield: userData.email,\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Validate permissions to edit user fields\n *\n * @param {string} userId\n * @param {{ _id: string, roles: string[], username: string, name: string, statusText: string, email: string, password: string}} userData\n */\nexport function validateUserEditing(userId, userData) {\n\tconst editingMyself = userData._id && userId === userData._id;\n\n\tconst canEditOtherUserInfo = hasPermission(userId, 'edit-other-user-info');\n\tconst canEditOtherUserPassword = hasPermission(userId, 'edit-other-user-password');\n\tconst user = Users.findOneById(userData._id);\n\n\tconst isEditingUserRoles = (previousRoles, newRoles) =>\n\t\ttypeof newRoles !== 'undefined' && !_.isEqual(_.sortBy(previousRoles), _.sortBy(newRoles));\n\tconst isEditingField = (previousValue, newValue) => typeof newValue !== 'undefined' && newValue !== previousValue;\n\n\tif (isEditingUserRoles(user.roles, userData.roles) && !hasPermission(userId, 'assign-roles')) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Assign roles is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Assign_role',\n\t\t});\n\t}\n\n\tif (!settings.get('Accounts_AllowUserProfileChange') && !canEditOtherUserInfo && !canEditOtherUserPassword) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user profile is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.username, userData.username) &&\n\t\t!settings.get('Accounts_AllowUsernameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit username is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.statusText, userData.statusText) &&\n\t\t!settings.get('Accounts_AllowUserStatusMessageChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user status is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tisEditingField(user.name, userData.name) &&\n\t\t!settings.get('Accounts_AllowRealNameChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user real name is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (\n\t\tuser.emails[0] &&\n\t\tisEditingField(user.emails[0].address, userData.email) &&\n\t\t!settings.get('Accounts_AllowEmailChange') &&\n\t\t(!canEditOtherUserInfo || editingMyself)\n\t) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user email is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n\n\tif (userData.password && !settings.get('Accounts_AllowPasswordChange') && (!canEditOtherUserPassword || editingMyself)) {\n\t\tthrow new Meteor.Error('error-action-not-allowed', 'Edit user password is not allowed', {\n\t\t\tmethod: 'insertOrUpdateUser',\n\t\t\taction: 'Update_user',\n\t\t});\n\t}\n}\n\nconst handleBio = (updateUser, bio) => {\n\tif (bio && bio.trim()) {\n\t\tif (typeof bio !== 'string' || bio.length > 260) {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'bio', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tupdateUser.$set = updateUser.$set || {};\n\t\tupdateUser.$set.bio = bio;\n\t} else {\n\t\tupdateUser.$unset = updateUser.$unset || {};\n\t\tupdateUser.$unset.bio = 1;\n\t}\n};\n\nconst handleNickname = (updateUser, nickname) => {\n\tif (nickname && nickname.trim()) {\n\t\tif (typeof nickname !== 'string' || nickname.length > 120) {\n\t\t\tthrow new Meteor.Error('error-invalid-field', 'nickname', {\n\t\t\t\tmethod: 'saveUserProfile',\n\t\t\t});\n\t\t}\n\t\tupdateUser.$set = updateUser.$set || {};\n\t\tupdateUser.$set.nickname = nickname;\n\t} else {\n\t\tupdateUser.$unset = updateUser.$unset || {};\n\t\tupdateUser.$unset.nickname = 1;\n\t}\n};\n\nconst saveNewUser = function (userData, sendPassword) {\n\tvalidateEmailDomain(userData.email);\n\n\tconst roles = userData.roles || getNewUserRoles();\n\tconst isGuest = roles && roles.length === 1 && roles.includes('guest');\n\n\t// insert user\n\tconst createUser = {\n\t\tusername: userData.username,\n\t\tpassword: userData.password,\n\t\tjoinDefaultChannels: userData.joinDefaultChannels,\n\t\tisGuest,\n\t};\n\tif (userData.email) {\n\t\tcreateUser.email = userData.email;\n\t}\n\n\tconst _id = Accounts.createUser(createUser);\n\n\tconst updateUser = {\n\t\t$set: {\n\t\t\troles,\n\t\t\t...(typeof userData.name !== 'undefined' && { name: userData.name }),\n\t\t\tsettings: userData.settings || {},\n\t\t},\n\t};\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tMeteor.users.update({ _id }, updateUser);\n\n\tif (userData.sendWelcomeEmail) {\n\t\t_sendUserEmail(settings.get('Accounts_UserAddedEmail_Subject'), html, userData);\n\t}\n\n\tif (sendPassword) {\n\t\t_sendUserEmail(settings.get('Password_Changed_Email_Subject'), passwordChangedHtml, userData);\n\t}\n\n\tuserData._id = _id;\n\n\tif (settings.get('Accounts_SetDefaultAvatar') === true && userData.email) {\n\t\tconst gravatarUrl = Gravatar.imageUrl(userData.email, {\n\t\t\tdefault: '404',\n\t\t\tsize: 200,\n\t\t\tsecure: true,\n\t\t});\n\n\t\ttry {\n\t\t\tsetUserAvatar(userData, gravatarUrl, '', 'url');\n\t\t} catch (e) {\n\t\t\t// Ignore this error for now, as it not being successful isn't bad\n\t\t}\n\t}\n\n\treturn _id;\n};\n\nexport const saveUser = function (userId, userData) {\n\tvalidateUserData(userId, userData);\n\tlet sendPassword = false;\n\n\tif (userData.hasOwnProperty('setRandomPassword')) {\n\t\tif (userData.setRandomPassword) {\n\t\t\tuserData.password = passwordPolicy.generatePassword();\n\t\t\tuserData.requirePasswordChange = true;\n\t\t\tsendPassword = true;\n\t\t}\n\n\t\tdelete userData.setRandomPassword;\n\t}\n\n\tif (!userData._id) {\n\t\treturn saveNewUser(userData, sendPassword);\n\t}\n\n\tvalidateUserEditing(userId, userData);\n\n\t// update user\n\tif (userData.hasOwnProperty('username') || userData.hasOwnProperty('name')) {\n\t\tif (\n\t\t\t!saveUserIdentity({\n\t\t\t\t_id: userData._id,\n\t\t\t\tusername: userData.username,\n\t\t\t\tname: userData.name,\n\t\t\t})\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-could-not-save-identity', 'Could not save user identity', {\n\t\t\t\tmethod: 'saveUser',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (typeof userData.statusText === 'string') {\n\t\tsetStatusText(userData._id, userData.statusText);\n\t}\n\n\tif (userData.email) {\n\t\tconst shouldSendVerificationEmailToUser = userData.verified !== true;\n\t\tsetEmail(userData._id, userData.email, shouldSendVerificationEmailToUser);\n\t}\n\n\tif (\n\t\tuserData.password &&\n\t\tuserData.password.trim() &&\n\t\thasPermission(userId, 'edit-other-user-password') &&\n\t\tpasswordPolicy.validate(userData.password)\n\t) {\n\t\tAccounts.setPassword(userData._id, userData.password.trim());\n\t} else {\n\t\tsendPassword = false;\n\t}\n\n\tconst updateUser = {\n\t\t$set: {},\n\t};\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tif (userData.roles) {\n\t\tupdateUser.$set.roles = userData.roles;\n\t}\n\tif (userData.settings) {\n\t\tupdateUser.$set.settings = { preferences: userData.settings.preferences };\n\t}\n\n\tif (userData.language) {\n\t\tupdateUser.$set.language = userData.language;\n\t}\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\tMeteor.users.update({ _id: userData._id }, updateUser);\n\n\tcallbacks.run('afterSaveUser', userData);\n\n\tif (sendPassword) {\n\t\t_sendUserEmail(settings.get('Password_Changed_Email_Subject'), passwordChangedHtml, userData);\n\t}\n\n\treturn true;\n};\n"]},"sourceType":"module","hash":"61bae707c445588e9d3042c4a948de464d6790b1"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/registerUser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/registerUser.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/registerUser.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/methods/registerUser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/registerUser.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 3);\nlet DDPRateLimiter;\nmodule.link(\"meteor/ddp-rate-limiter\", {\n  DDPRateLimiter(v) {\n    DDPRateLimiter = v;\n  }\n\n}, 4);\nlet Users;\nmodule.link(\"../../app/models\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../app/settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet validateEmailDomain, passwordPolicy, RateLimiter;\nmodule.link(\"../../app/lib\", {\n  validateEmailDomain(v) {\n    validateEmailDomain = v;\n  },\n\n  passwordPolicy(v) {\n    passwordPolicy = v;\n  },\n\n  RateLimiter(v) {\n    RateLimiter = v;\n  }\n\n}, 7);\nlet validateInviteToken;\nmodule.link(\"../../app/invites/server/functions/validateInviteToken\", {\n  validateInviteToken(v) {\n    validateInviteToken = v;\n  }\n\n}, 8);\nMeteor.methods({\n  registerUser(formData) {\n    return Promise.asyncApply(() => {\n      const AllowAnonymousRead = settings.get('Accounts_AllowAnonymousRead');\n      const AllowAnonymousWrite = settings.get('Accounts_AllowAnonymousWrite');\n      const manuallyApproveNewUsers = settings.get('Accounts_ManuallyApproveNewUsers');\n\n      if (AllowAnonymousRead === true && AllowAnonymousWrite === true && formData.email == null) {\n        const userId = Accounts.insertUserDoc({}, {\n          globalRoles: ['anonymous'],\n          active: true\n        });\n\n        const stampedLoginToken = Accounts._generateStampedLoginToken();\n\n        Accounts._insertLoginToken(userId, stampedLoginToken);\n\n        return stampedLoginToken;\n      }\n\n      check(formData, Match.ObjectIncluding({\n        email: String,\n        pass: String,\n        name: String,\n        secretURL: Match.Optional(String),\n        reason: Match.Optional(String)\n      }));\n\n      if (settings.get('Accounts_RegistrationForm') === 'Disabled') {\n        throw new Meteor.Error('error-user-registration-disabled', 'User registration is disabled', {\n          method: 'registerUser'\n        });\n      }\n\n      if (settings.get('Accounts_RegistrationForm') === 'Secret URL' && (!formData.secretURL || formData.secretURL !== settings.get('Accounts_RegistrationForm_SecretURL'))) {\n        if (!formData.secretURL) {\n          throw new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n            method: 'registerUser'\n          });\n        }\n\n        try {\n          Promise.await(validateInviteToken(formData.secretURL));\n        } catch (e) {\n          throw new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n            method: 'registerUser'\n          });\n        }\n      }\n\n      passwordPolicy.validate(formData.pass);\n      validateEmailDomain(formData.email);\n      const userData = {\n        email: s.trim(formData.email.toLowerCase()),\n        password: formData.pass,\n        name: formData.name,\n        reason: formData.reason\n      };\n      let userId;\n\n      try {\n        // Check if user has already been imported and never logged in. If so, set password and let it through\n        const importedUser = Users.findOneByEmailAddress(formData.email);\n\n        if (importedUser && importedUser.importIds && importedUser.importIds.length && !importedUser.lastLogin) {\n          Accounts.setPassword(importedUser._id, userData.password);\n          userId = importedUser._id;\n        } else {\n          userId = Accounts.createUser(userData);\n        }\n      } catch (e) {\n        if (e instanceof Meteor.Error) {\n          throw e;\n        }\n\n        throw new Meteor.Error(e.message);\n      }\n\n      Users.setName(userId, s.trim(formData.name));\n      const reason = s.trim(formData.reason);\n\n      if (manuallyApproveNewUsers && reason) {\n        Users.setReason(userId, reason);\n      }\n\n      try {\n        Accounts.sendVerificationEmail(userId, userData.email);\n      } catch (error) {// throw new Meteor.Error 'error-email-send-failed', 'Error trying to send email: ' + error.message, { method: 'registerUser', message: error.message }\n      }\n\n      return userId;\n    });\n  }\n\n});\nlet registerUserRuleId = RateLimiter.limitMethod('registerUser', settings.get('Rate_Limiter_Limit_RegisterUser'), settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'), {\n  userId() {\n    return true;\n  }\n\n});\nsettings.watch('Rate_Limiter_Limit_RegisterUser', value => {\n  // remove old DDP rate limiter rule and create a new one with the updated setting value\n  DDPRateLimiter.removeRule(registerUserRuleId);\n  registerUserRuleId = RateLimiter.limitMethod('registerUser', value, settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'), {\n    userId() {\n      return true;\n    }\n\n  });\n});","map":{"version":3,"sources":["server/methods/registerUser.js"],"names":["Meteor","module","link","v","Match","check","Accounts","s","default","DDPRateLimiter","Users","settings","validateEmailDomain","passwordPolicy","RateLimiter","validateInviteToken","methods","registerUser","formData","AllowAnonymousRead","get","AllowAnonymousWrite","manuallyApproveNewUsers","email","userId","insertUserDoc","globalRoles","active","stampedLoginToken","_generateStampedLoginToken","_insertLoginToken","ObjectIncluding","String","pass","name","secretURL","Optional","reason","Error","method","e","validate","userData","trim","toLowerCase","password","importedUser","findOneByEmailAddress","importIds","length","lastLogin","setPassword","_id","createUser","message","setName","setReason","sendVerificationEmail","error","registerUserRuleId","limitMethod","watch","value","removeRule"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\nimport { Accounts } from 'meteor/accounts-base';\nimport s from 'underscore.string';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n\nimport { Users } from '../../app/models';\nimport { settings } from '../../app/settings';\nimport { validateEmailDomain, passwordPolicy, RateLimiter } from '../../app/lib';\nimport { validateInviteToken } from '../../app/invites/server/functions/validateInviteToken';\n\nMeteor.methods({\n\tasync registerUser(formData) {\n\t\tconst AllowAnonymousRead = settings.get('Accounts_AllowAnonymousRead');\n\t\tconst AllowAnonymousWrite = settings.get('Accounts_AllowAnonymousWrite');\n\t\tconst manuallyApproveNewUsers = settings.get('Accounts_ManuallyApproveNewUsers');\n\t\tif (AllowAnonymousRead === true && AllowAnonymousWrite === true && formData.email == null) {\n\t\t\tconst userId = Accounts.insertUserDoc(\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tglobalRoles: ['anonymous'],\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst stampedLoginToken = Accounts._generateStampedLoginToken();\n\n\t\t\tAccounts._insertLoginToken(userId, stampedLoginToken);\n\t\t\treturn stampedLoginToken;\n\t\t}\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\temail: String,\n\t\t\t\tpass: String,\n\t\t\t\tname: String,\n\t\t\t\tsecretURL: Match.Optional(String),\n\t\t\t\treason: Match.Optional(String),\n\t\t\t}),\n\t\t);\n\n\t\tif (settings.get('Accounts_RegistrationForm') === 'Disabled') {\n\t\t\tthrow new Meteor.Error('error-user-registration-disabled', 'User registration is disabled', {\n\t\t\t\tmethod: 'registerUser',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tsettings.get('Accounts_RegistrationForm') === 'Secret URL' &&\n\t\t\t(!formData.secretURL || formData.secretURL !== settings.get('Accounts_RegistrationForm_SecretURL'))\n\t\t) {\n\t\t\tif (!formData.secretURL) {\n\t\t\t\tthrow new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n\t\t\t\t\tmethod: 'registerUser',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait validateInviteToken(formData.secretURL);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n\t\t\t\t\tmethod: 'registerUser',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpasswordPolicy.validate(formData.pass);\n\n\t\tvalidateEmailDomain(formData.email);\n\n\t\tconst userData = {\n\t\t\temail: s.trim(formData.email.toLowerCase()),\n\t\t\tpassword: formData.pass,\n\t\t\tname: formData.name,\n\t\t\treason: formData.reason,\n\t\t};\n\n\t\tlet userId;\n\t\ttry {\n\t\t\t// Check if user has already been imported and never logged in. If so, set password and let it through\n\t\t\tconst importedUser = Users.findOneByEmailAddress(formData.email);\n\n\t\t\tif (importedUser && importedUser.importIds && importedUser.importIds.length && !importedUser.lastLogin) {\n\t\t\t\tAccounts.setPassword(importedUser._id, userData.password);\n\t\t\t\tuserId = importedUser._id;\n\t\t\t} else {\n\t\t\t\tuserId = Accounts.createUser(userData);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (e instanceof Meteor.Error) {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tthrow new Meteor.Error(e.message);\n\t\t}\n\n\t\tUsers.setName(userId, s.trim(formData.name));\n\n\t\tconst reason = s.trim(formData.reason);\n\t\tif (manuallyApproveNewUsers && reason) {\n\t\t\tUsers.setReason(userId, reason);\n\t\t}\n\n\t\ttry {\n\t\t\tAccounts.sendVerificationEmail(userId, userData.email);\n\t\t} catch (error) {\n\t\t\t// throw new Meteor.Error 'error-email-send-failed', 'Error trying to send email: ' + error.message, { method: 'registerUser', message: error.message }\n\t\t}\n\n\t\treturn userId;\n\t},\n});\n\nlet registerUserRuleId = RateLimiter.limitMethod(\n\t'registerUser',\n\tsettings.get('Rate_Limiter_Limit_RegisterUser'),\n\tsettings.get('API_Enable_Rate_Limiter_Limit_Time_Default'),\n\t{\n\t\tuserId() {\n\t\t\treturn true;\n\t\t},\n\t},\n);\n\nsettings.watch('Rate_Limiter_Limit_RegisterUser', (value) => {\n\t// remove old DDP rate limiter rule and create a new one with the updated setting value\n\tDDPRateLimiter.removeRule(registerUserRuleId);\n\tregisterUserRuleId = RateLimiter.limitMethod('registerUser', value, settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'), {\n\t\tuserId() {\n\t\t\treturn true;\n\t\t},\n\t});\n});\n"]},"sourceType":"module","hash":"befff18d666955bc3f3f87c9b05a8582da105692"}

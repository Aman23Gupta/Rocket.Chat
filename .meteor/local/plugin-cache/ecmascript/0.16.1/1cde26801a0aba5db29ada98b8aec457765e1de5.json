{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/lib/users.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/lib/users.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/lib/users.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/lib/users.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/lib/users.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  findUsersToAutocomplete: () => findUsersToAutocomplete,\n  getInclusiveFields: () => getInclusiveFields,\n  getNonEmptyFields: () => getNonEmptyFields,\n  getNonEmptyQuery: () => getNonEmptyQuery\n});\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../models/server/raw\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet hasPermissionAsync;\nmodule.link(\"../../../authorization/server/functions/hasPermission\", {\n  hasPermissionAsync(v) {\n    hasPermissionAsync = v;\n  }\n\n}, 2);\n\nfunction findUsersToAutocomplete(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      uid,\n      selector\n    } = _ref;\n\n    if (!Promise.await(hasPermissionAsync(uid, 'view-outside-room'))) {\n      return {\n        items: []\n      };\n    }\n\n    const exceptions = selector.exceptions || [];\n    const conditions = selector.conditions || {};\n    const options = {\n      projection: {\n        name: 1,\n        username: 1,\n        nickname: 1,\n        status: 1,\n        avatarETag: 1\n      },\n      sort: {\n        username: 1\n      },\n      limit: 10\n    };\n    const users = Promise.await(Users.findActiveByUsernameOrNameRegexWithExceptionsAndConditions(new RegExp(escapeRegExp(selector.term), 'i'), exceptions, conditions, options).toArray());\n    return {\n      items: users\n    };\n  });\n}\n\nfunction getInclusiveFields(query) {\n  const newQuery = {};\n\n  for (const [key, value] of Object.entries(query)) {\n    if (value === 1) {\n      newQuery[key] = value;\n    }\n  }\n\n  return newQuery;\n}\n\nfunction getNonEmptyFields(fields) {\n  const defaultFields = {\n    name: 1,\n    username: 1,\n    emails: 1,\n    roles: 1,\n    status: 1,\n    active: 1,\n    avatarETag: 1,\n    lastLogin: 1\n  };\n\n  if (!fields || Object.keys(fields).length === 0) {\n    return defaultFields;\n  }\n\n  return _objectSpread(_objectSpread({}, defaultFields), fields);\n}\n\nfunction getNonEmptyQuery(query) {\n  const defaultQuery = {\n    $or: [{\n      'emails.address': {\n        $regex: '',\n        $options: 'i'\n      }\n    }, {\n      username: {\n        $regex: '',\n        $options: 'i'\n      }\n    }, {\n      name: {\n        $regex: '',\n        $options: 'i'\n      }\n    }]\n  };\n\n  if (!query || Object.keys(query).length === 0) {\n    return defaultQuery;\n  }\n\n  return _objectSpread(_objectSpread({}, defaultQuery), query);\n}","map":{"version":3,"sources":["app/api/server/lib/users.js"],"names":["_objectSpread","module","link","default","v","export","findUsersToAutocomplete","getInclusiveFields","getNonEmptyFields","getNonEmptyQuery","escapeRegExp","Users","hasPermissionAsync","uid","selector","items","exceptions","conditions","options","projection","name","username","nickname","status","avatarETag","sort","limit","users","findActiveByUsernameOrNameRegexWithExceptionsAndConditions","RegExp","term","toArray","query","newQuery","key","value","Object","entries","fields","defaultFields","emails","roles","active","lastLogin","keys","length","defaultQuery","$or","$regex","$options"],"mappings":"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","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { Users } from '../../../models/server/raw';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nexport async function findUsersToAutocomplete({ uid, selector }) {\n\tif (!(await hasPermissionAsync(uid, 'view-outside-room'))) {\n\t\treturn { items: [] };\n\t}\n\tconst exceptions = selector.exceptions || [];\n\tconst conditions = selector.conditions || {};\n\tconst options = {\n\t\tprojection: {\n\t\t\tname: 1,\n\t\t\tusername: 1,\n\t\t\tnickname: 1,\n\t\t\tstatus: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tsort: {\n\t\t\tusername: 1,\n\t\t},\n\t\tlimit: 10,\n\t};\n\n\tconst users = await Users.findActiveByUsernameOrNameRegexWithExceptionsAndConditions(\n\t\tnew RegExp(escapeRegExp(selector.term), 'i'),\n\t\texceptions,\n\t\tconditions,\n\t\toptions,\n\t).toArray();\n\n\treturn {\n\t\titems: users,\n\t};\n}\n\n/**\n * Returns a new query object with the inclusive fields only\n * @param {Object} query search query for matching rows\n */\nexport function getInclusiveFields(query) {\n\tconst newQuery = {};\n\n\tfor (const [key, value] of Object.entries(query)) {\n\t\tif (value === 1) {\n\t\t\tnewQuery[key] = value;\n\t\t}\n\t}\n\n\treturn newQuery;\n}\n\n/**\n * get the default fields if **fields** are empty (`{}`) or `undefined`/`null`\n * @param {Object|null|undefined} fields the fields from parsed jsonQuery\n */\nexport function getNonEmptyFields(fields) {\n\tconst defaultFields = {\n\t\tname: 1,\n\t\tusername: 1,\n\t\temails: 1,\n\t\troles: 1,\n\t\tstatus: 1,\n\t\tactive: 1,\n\t\tavatarETag: 1,\n\t\tlastLogin: 1,\n\t};\n\n\tif (!fields || Object.keys(fields).length === 0) {\n\t\treturn defaultFields;\n\t}\n\n\treturn { ...defaultFields, ...fields };\n}\n\n/**\n * get the default query if **query** is empty (`{}`) or `undefined`/`null`\n * @param {Object|null|undefined} query the query from parsed jsonQuery\n */\nexport function getNonEmptyQuery(query) {\n\tconst defaultQuery = {\n\t\t$or: [\n\t\t\t{ 'emails.address': { $regex: '', $options: 'i' } },\n\t\t\t{ username: { $regex: '', $options: 'i' } },\n\t\t\t{ name: { $regex: '', $options: 'i' } },\n\t\t],\n\t};\n\n\tif (!query || Object.keys(query).length === 0) {\n\t\treturn defaultQuery;\n\t}\n\n\treturn { ...defaultQuery, ...query };\n}\n"]},"sourceType":"module","hash":"1cde26801a0aba5db29ada98b8aec457765e1de5"}

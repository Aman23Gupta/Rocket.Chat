{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/lib/LivechatRoomType.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/livechat/lib/LivechatRoomType.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/lib/LivechatRoomType.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/lib/LivechatRoomType.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/lib/LivechatRoomType.js"}},"code":"module.export({\n  default: () => LivechatRoomType\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 1);\nlet ChatRoom;\nmodule.link(\"../../models\", {\n  ChatRoom(v) {\n    ChatRoom = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet hasPermission;\nmodule.link(\"../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 4);\nlet openRoom;\nmodule.link(\"../../ui-utils\", {\n  openRoom(v) {\n    openRoom = v;\n  }\n\n}, 5);\nlet RoomMemberActions, RoomSettingsEnum, UiTextContext, RoomTypeRouteConfig, RoomTypeConfig;\nmodule.link(\"../../utils\", {\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  },\n\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  },\n\n  UiTextContext(v) {\n    UiTextContext = v;\n  },\n\n  RoomTypeRouteConfig(v) {\n    RoomTypeRouteConfig = v;\n  },\n\n  RoomTypeConfig(v) {\n    RoomTypeConfig = v;\n  }\n\n}, 6);\nlet getAvatarURL;\nmodule.link(\"../../utils/lib/getAvatarURL\", {\n  getAvatarURL(v) {\n    getAvatarURL = v;\n  }\n\n}, 7);\nlet LivechatInquiry;\n\nif (Meteor.isClient) {\n  ({\n    LivechatInquiry\n  } = require('../client/collections/LivechatInquiry'));\n}\n\nclass LivechatRoomRoute extends RoomTypeRouteConfig {\n  constructor() {\n    super({\n      name: 'live',\n      path: '/live/:id/:tab?/:context?'\n    });\n  }\n\n  action(params) {\n    openRoom('l', params.id);\n  }\n\n  link(sub) {\n    return {\n      id: sub.rid\n    };\n  }\n\n}\n\nclass LivechatRoomType extends RoomTypeConfig {\n  constructor() {\n    super({\n      identifier: 'l',\n      order: 5,\n      icon: 'omnichannel',\n      label: 'Omnichannel',\n      route: new LivechatRoomRoute()\n    });\n    this.notSubscribedTpl = 'livechatNotSubscribed';\n    this.readOnlyTpl = 'livechatReadOnly';\n  }\n\n  enableMembersListProfile() {\n    return true;\n  }\n\n  findRoom(identifier) {\n    return ChatRoom.findOne({\n      _id: identifier\n    });\n  }\n\n  roomName(roomData) {\n    return roomData.name || roomData.fname || roomData.label;\n  }\n\n  condition() {\n    return settings.get('Livechat_enabled') && hasPermission('view-l-room');\n  }\n\n  canSendMessage(rid) {\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields: {\n        open: 1\n      }\n    });\n    return room && room.open === true;\n  }\n\n  getUserStatus(rid) {\n    const room = Session.get(\"roomData\".concat(rid));\n\n    if (room) {\n      return room.v && room.v.status;\n    }\n\n    const inquiry = LivechatInquiry.findOne({\n      rid\n    });\n    return inquiry && inquiry.v && inquiry.v.status;\n  }\n\n  allowRoomSettingChange(room, setting) {\n    switch (setting) {\n      case RoomSettingsEnum.JOIN_CODE:\n        return false;\n\n      default:\n        return true;\n    }\n  }\n\n  allowMemberAction(room, action) {\n    return [RoomMemberActions.INVITE, RoomMemberActions.JOIN].includes(action);\n  }\n\n  getUiText(context) {\n    switch (context) {\n      case UiTextContext.HIDE_WARNING:\n        return 'Hide_Livechat_Warning';\n\n      case UiTextContext.LEAVE_WARNING:\n        return 'Hide_Livechat_Warning';\n\n      default:\n        return '';\n    }\n  }\n\n  readOnly(rid) {\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields: {\n        open: 1,\n        servedBy: 1\n      }\n    });\n\n    if (!room || !room.open) {\n      return true;\n    }\n\n    const inquiry = LivechatInquiry.findOne({\n      rid\n    }, {\n      fields: {\n        status: 1\n      }\n    });\n\n    if (inquiry && inquiry.status === 'queued') {\n      return true;\n    }\n\n    return !room.servedBy;\n  }\n\n  getAvatarPath(roomData) {\n    return getAvatarURL({\n      username: \"@\".concat(this.roomName(roomData))\n    });\n  }\n\n  openCustomProfileTab(instance, room, username) {\n    if (!room || !room.v || room.v.username !== username) {\n      return false;\n    }\n\n    instance.tabBar.openUserInfo();\n    return true;\n  }\n\n  showQuickActionButtons() {\n    return true;\n  }\n\n  isLivechatRoom() {\n    return true;\n  }\n\n}","map":{"version":3,"sources":["app/livechat/lib/LivechatRoomType.js"],"names":["module","export","default","LivechatRoomType","Meteor","link","v","Session","ChatRoom","settings","hasPermission","openRoom","RoomMemberActions","RoomSettingsEnum","UiTextContext","RoomTypeRouteConfig","RoomTypeConfig","getAvatarURL","LivechatInquiry","isClient","require","LivechatRoomRoute","constructor","name","path","action","params","id","sub","rid","identifier","order","icon","label","route","notSubscribedTpl","readOnlyTpl","enableMembersListProfile","findRoom","findOne","_id","roomName","roomData","fname","condition","get","canSendMessage","room","fields","open","getUserStatus","status","inquiry","allowRoomSettingChange","setting","JOIN_CODE","allowMemberAction","INVITE","JOIN","includes","getUiText","context","HIDE_WARNING","LEAVE_WARNING","readOnly","servedBy","getAvatarPath","username","openCustomProfileTab","instance","tabBar","openUserInfo","showQuickActionButtons","isLivechatRoom"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\n\nimport { ChatRoom } from '../../models';\nimport { settings } from '../../settings';\nimport { hasPermission } from '../../authorization';\nimport { openRoom } from '../../ui-utils';\nimport { RoomMemberActions, RoomSettingsEnum, UiTextContext, RoomTypeRouteConfig, RoomTypeConfig } from '../../utils';\nimport { getAvatarURL } from '../../utils/lib/getAvatarURL';\n\nlet LivechatInquiry;\nif (Meteor.isClient) {\n\t({ LivechatInquiry } = require('../client/collections/LivechatInquiry'));\n}\n\nclass LivechatRoomRoute extends RoomTypeRouteConfig {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'live',\n\t\t\tpath: '/live/:id/:tab?/:context?',\n\t\t});\n\t}\n\n\taction(params) {\n\t\topenRoom('l', params.id);\n\t}\n\n\tlink(sub) {\n\t\treturn {\n\t\t\tid: sub.rid,\n\t\t};\n\t}\n}\n\nexport default class LivechatRoomType extends RoomTypeConfig {\n\tconstructor() {\n\t\tsuper({\n\t\t\tidentifier: 'l',\n\t\t\torder: 5,\n\t\t\ticon: 'omnichannel',\n\t\t\tlabel: 'Omnichannel',\n\t\t\troute: new LivechatRoomRoute(),\n\t\t});\n\n\t\tthis.notSubscribedTpl = 'livechatNotSubscribed';\n\t\tthis.readOnlyTpl = 'livechatReadOnly';\n\t}\n\n\tenableMembersListProfile() {\n\t\treturn true;\n\t}\n\n\tfindRoom(identifier) {\n\t\treturn ChatRoom.findOne({ _id: identifier });\n\t}\n\n\troomName(roomData) {\n\t\treturn roomData.name || roomData.fname || roomData.label;\n\t}\n\n\tcondition() {\n\t\treturn settings.get('Livechat_enabled') && hasPermission('view-l-room');\n\t}\n\n\tcanSendMessage(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1 } });\n\t\treturn room && room.open === true;\n\t}\n\n\tgetUserStatus(rid) {\n\t\tconst room = Session.get(`roomData${rid}`);\n\t\tif (room) {\n\t\t\treturn room.v && room.v.status;\n\t\t}\n\t\tconst inquiry = LivechatInquiry.findOne({ rid });\n\t\treturn inquiry && inquiry.v && inquiry.v.status;\n\t}\n\n\tallowRoomSettingChange(room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\tallowMemberAction(room, action) {\n\t\treturn [RoomMemberActions.INVITE, RoomMemberActions.JOIN].includes(action);\n\t}\n\n\tgetUiText(context) {\n\t\tswitch (context) {\n\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\treadOnly(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1, servedBy: 1 } });\n\t\tif (!room || !room.open) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst inquiry = LivechatInquiry.findOne({ rid }, { fields: { status: 1 } });\n\t\tif (inquiry && inquiry.status === 'queued') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !room.servedBy;\n\t}\n\n\tgetAvatarPath(roomData) {\n\t\treturn getAvatarURL({ username: `@${this.roomName(roomData)}` });\n\t}\n\n\topenCustomProfileTab(instance, room, username) {\n\t\tif (!room || !room.v || room.v.username !== username) {\n\t\t\treturn false;\n\t\t}\n\n\t\tinstance.tabBar.openUserInfo();\n\t\treturn true;\n\t}\n\n\tshowQuickActionButtons() {\n\t\treturn true;\n\t}\n\n\tisLivechatRoom() {\n\t\treturn true;\n\t}\n}\n"]},"sourceType":"module","hash":"65481849591347c396f7abe5bea1f6b9619ca4f7"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/facebook.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/facebook.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/facebook.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/imports/server/rest/facebook.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/facebook.js"}},"code":"let crypto;\nmodule.link(\"crypto\", {\n  default(v) {\n    crypto = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../../../../api/server\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nlet LivechatRooms, LivechatVisitors;\nmodule.link(\"../../../../models\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet Livechat;\nmodule.link(\"../../../server/lib/Livechat\", {\n  Livechat(v) {\n    Livechat = v;\n  }\n\n}, 5);\n\n/**\n * @api {post} /livechat/facebook Send Facebook message\n * @apiName Facebook\n * @apiGroup Livechat\n *\n * @apiParam {String} mid Facebook message id\n * @apiParam {String} page Facebook pages id\n * @apiParam {String} token Facebook user's token\n * @apiParam {String} first_name Facebook user's first name\n * @apiParam {String} last_name Facebook user's last name\n * @apiParam {String} [text] Facebook message text\n * @apiParam {String} [attachments] Facebook message attachments\n */\nAPI.v1.addRoute('livechat/facebook', {\n  post() {\n    if (!this.bodyParams.text && !this.bodyParams.attachments) {\n      return {\n        success: false\n      };\n    }\n\n    if (!this.request.headers['x-hub-signature']) {\n      return {\n        success: false\n      };\n    }\n\n    if (!settings.get('Livechat_Facebook_Enabled')) {\n      return {\n        success: false,\n        error: 'Integration disabled'\n      };\n    } // validate if request come from omni\n\n\n    const signature = crypto.createHmac('sha1', settings.get('Livechat_Facebook_API_Secret')).update(JSON.stringify(this.request.body)).digest('hex');\n\n    if (this.request.headers['x-hub-signature'] !== \"sha1=\".concat(signature)) {\n      return {\n        success: false,\n        error: 'Invalid signature'\n      };\n    }\n\n    const sendMessage = {\n      message: {\n        _id: this.bodyParams.mid\n      },\n      roomInfo: {\n        facebook: {\n          page: this.bodyParams.page\n        }\n      }\n    };\n    let visitor = LivechatVisitors.getVisitorByToken(this.bodyParams.token);\n\n    if (visitor) {\n      const rooms = LivechatRooms.findOpenByVisitorToken(visitor.token).fetch();\n\n      if (rooms && rooms.length > 0) {\n        sendMessage.message.rid = rooms[0]._id;\n      } else {\n        sendMessage.message.rid = Random.id();\n      }\n\n      sendMessage.message.token = visitor.token;\n    } else {\n      sendMessage.message.rid = Random.id();\n      sendMessage.message.token = this.bodyParams.token;\n      const userId = Livechat.registerGuest({\n        token: sendMessage.message.token,\n        name: \"\".concat(this.bodyParams.first_name, \" \").concat(this.bodyParams.last_name)\n      });\n      visitor = LivechatVisitors.findOneById(userId);\n    }\n\n    sendMessage.message.msg = this.bodyParams.text;\n    sendMessage.guest = visitor;\n\n    try {\n      return {\n        sucess: true,\n        message: Livechat.sendMessage(sendMessage)\n      };\n    } catch (e) {\n      Livechat.logger.error('Error using Facebook ->', e);\n    }\n  }\n\n});","map":{"version":3,"sources":["app/livechat/imports/server/rest/facebook.js"],"names":["crypto","module","link","default","v","Random","API","LivechatRooms","LivechatVisitors","settings","Livechat","v1","addRoute","post","bodyParams","text","attachments","success","request","headers","get","error","signature","createHmac","update","JSON","stringify","body","digest","sendMessage","message","_id","mid","roomInfo","facebook","page","visitor","getVisitorByToken","token","rooms","findOpenByVisitorToken","fetch","length","rid","id","userId","registerGuest","name","first_name","last_name","findOneById","msg","guest","sucess","e","logger"],"mappings":"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","sourcesContent":["import crypto from 'crypto';\n\nimport { Random } from 'meteor/random';\n\nimport { API } from '../../../../api/server';\nimport { LivechatRooms, LivechatVisitors } from '../../../../models';\nimport { settings } from '../../../../settings';\nimport { Livechat } from '../../../server/lib/Livechat';\n\n/**\n * @api {post} /livechat/facebook Send Facebook message\n * @apiName Facebook\n * @apiGroup Livechat\n *\n * @apiParam {String} mid Facebook message id\n * @apiParam {String} page Facebook pages id\n * @apiParam {String} token Facebook user's token\n * @apiParam {String} first_name Facebook user's first name\n * @apiParam {String} last_name Facebook user's last name\n * @apiParam {String} [text] Facebook message text\n * @apiParam {String} [attachments] Facebook message attachments\n */\nAPI.v1.addRoute('livechat/facebook', {\n\tpost() {\n\t\tif (!this.bodyParams.text && !this.bodyParams.attachments) {\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t};\n\t\t}\n\n\t\tif (!this.request.headers['x-hub-signature']) {\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t};\n\t\t}\n\n\t\tif (!settings.get('Livechat_Facebook_Enabled')) {\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: 'Integration disabled',\n\t\t\t};\n\t\t}\n\n\t\t// validate if request come from omni\n\t\tconst signature = crypto\n\t\t\t.createHmac('sha1', settings.get('Livechat_Facebook_API_Secret'))\n\t\t\t.update(JSON.stringify(this.request.body))\n\t\t\t.digest('hex');\n\t\tif (this.request.headers['x-hub-signature'] !== `sha1=${signature}`) {\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: 'Invalid signature',\n\t\t\t};\n\t\t}\n\n\t\tconst sendMessage = {\n\t\t\tmessage: {\n\t\t\t\t_id: this.bodyParams.mid,\n\t\t\t},\n\t\t\troomInfo: {\n\t\t\t\tfacebook: {\n\t\t\t\t\tpage: this.bodyParams.page,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tlet visitor = LivechatVisitors.getVisitorByToken(this.bodyParams.token);\n\t\tif (visitor) {\n\t\t\tconst rooms = LivechatRooms.findOpenByVisitorToken(visitor.token).fetch();\n\t\t\tif (rooms && rooms.length > 0) {\n\t\t\t\tsendMessage.message.rid = rooms[0]._id;\n\t\t\t} else {\n\t\t\t\tsendMessage.message.rid = Random.id();\n\t\t\t}\n\t\t\tsendMessage.message.token = visitor.token;\n\t\t} else {\n\t\t\tsendMessage.message.rid = Random.id();\n\t\t\tsendMessage.message.token = this.bodyParams.token;\n\n\t\t\tconst userId = Livechat.registerGuest({\n\t\t\t\ttoken: sendMessage.message.token,\n\t\t\t\tname: `${this.bodyParams.first_name} ${this.bodyParams.last_name}`,\n\t\t\t});\n\n\t\t\tvisitor = LivechatVisitors.findOneById(userId);\n\t\t}\n\n\t\tsendMessage.message.msg = this.bodyParams.text;\n\t\tsendMessage.guest = visitor;\n\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tsucess: true,\n\t\t\t\tmessage: Livechat.sendMessage(sendMessage),\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tLivechat.logger.error('Error using Facebook ->', e);\n\t\t}\n\t},\n});\n"]},"sourceType":"module","hash":"ab5ffcb4703f35334aaf86dc0c44645bcbcc40b6"}

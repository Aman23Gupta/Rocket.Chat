{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/integrations/server/lib/validation.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/integrations/server/lib/validation.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/integrations/server/lib/validation.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/integrations/server/lib/validation.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/integrations/server/lib/validation.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Babel;\nmodule.link(\"meteor/babel-compiler\", {\n  Babel(v) {\n    Babel = v;\n  }\n\n}, 2);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 3);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 4);\nlet Rooms, Users, Subscriptions;\nmodule.link(\"../../../models\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 5);\nlet hasPermission, hasAllPermission;\nmodule.link(\"../../../authorization\", {\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  hasAllPermission(v) {\n    hasAllPermission = v;\n  }\n\n}, 6);\nlet integrations;\nmodule.link(\"../../lib/rocketchat\", {\n  integrations(v) {\n    integrations = v;\n  }\n\n}, 7);\nconst scopedChannels = ['all_public_channels', 'all_private_groups', 'all_direct_messages'];\nconst validChannelChars = ['@', '#'];\n\nfunction _verifyRequiredFields(integration) {\n  if (!integration.event || !Match.test(integration.event, String) || integration.event.trim() === '' || !integrations.outgoingEvents[integration.event]) {\n    throw new Meteor.Error('error-invalid-event-type', 'Invalid event type', {\n      function: 'validateOutgoing._verifyRequiredFields'\n    });\n  }\n\n  if (!integration.username || !Match.test(integration.username, String) || integration.username.trim() === '') {\n    throw new Meteor.Error('error-invalid-username', 'Invalid username', {\n      function: 'validateOutgoing._verifyRequiredFields'\n    });\n  }\n\n  if (integrations.outgoingEvents[integration.event].use.targetRoom && !integration.targetRoom) {\n    throw new Meteor.Error('error-invalid-targetRoom', 'Invalid Target Room', {\n      function: 'validateOutgoing._verifyRequiredFields'\n    });\n  }\n\n  if (!Match.test(integration.urls, [String])) {\n    throw new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n      function: 'validateOutgoing._verifyRequiredFields'\n    });\n  }\n\n  for (const [index, url] of integration.urls.entries()) {\n    if (url.trim() === '') {\n      delete integration.urls[index];\n    }\n  }\n\n  integration.urls = _.without(integration.urls, [undefined]);\n\n  if (integration.urls.length === 0) {\n    throw new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n      function: 'validateOutgoing._verifyRequiredFields'\n    });\n  }\n}\n\nfunction _verifyUserHasPermissionForChannels(integration, userId, channels) {\n  for (let channel of channels) {\n    if (scopedChannels.includes(channel)) {\n      if (channel === 'all_public_channels') {// No special permissions needed to add integration to public channels\n      } else if (!hasPermission(userId, 'manage-outgoing-integrations')) {\n        throw new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n          function: 'validateOutgoing._verifyUserHasPermissionForChannels'\n        });\n      }\n    } else {\n      let record;\n      const channelType = channel[0];\n      channel = channel.substr(1);\n\n      switch (channelType) {\n        case '#':\n          record = Rooms.findOne({\n            $or: [{\n              _id: channel\n            }, {\n              name: channel\n            }]\n          });\n          break;\n\n        case '@':\n          record = Users.findOne({\n            $or: [{\n              _id: channel\n            }, {\n              username: channel\n            }]\n          });\n          break;\n      }\n\n      if (!record) {\n        throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n          function: 'validateOutgoing._verifyUserHasPermissionForChannels'\n        });\n      }\n\n      if (!hasAllPermission(userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations']) && !Subscriptions.findOneByRoomIdAndUserId(record._id, userId, {\n        fields: {\n          _id: 1\n        }\n      })) {\n        throw new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n          function: 'validateOutgoing._verifyUserHasPermissionForChannels'\n        });\n      }\n    }\n  }\n}\n\nfunction _verifyRetryInformation(integration) {\n  if (!integration.retryFailedCalls) {\n    return;\n  } // Don't allow negative retry counts\n\n\n  integration.retryCount = integration.retryCount && parseInt(integration.retryCount) > 0 ? parseInt(integration.retryCount) : 4;\n  integration.retryDelay = !integration.retryDelay || !integration.retryDelay.trim() ? 'powers-of-ten' : integration.retryDelay.toLowerCase();\n}\n\nintegrations.validateOutgoing = function _validateOutgoing(integration, userId) {\n  if (integration.channel && Match.test(integration.channel, String) && integration.channel.trim() === '') {\n    delete integration.channel;\n  } // Moved to it's own function to statisfy the complexity rule\n\n\n  _verifyRequiredFields(integration);\n\n  let channels = [];\n\n  if (integrations.outgoingEvents[integration.event].use.channel) {\n    if (!Match.test(integration.channel, String)) {\n      throw new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n        function: 'validateOutgoing'\n      });\n    } else {\n      channels = _.map(integration.channel.split(','), channel => s.trim(channel));\n\n      for (const channel of channels) {\n        if (!validChannelChars.includes(channel[0]) && !scopedChannels.includes(channel.toLowerCase())) {\n          throw new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n            function: 'validateOutgoing'\n          });\n        }\n      }\n    }\n  } else if (!hasPermission(userId, 'manage-outgoing-integrations')) {\n    throw new Meteor.Error('error-invalid-permissions', 'Invalid permission for required Integration creation.', {\n      function: 'validateOutgoing'\n    });\n  }\n\n  if (integrations.outgoingEvents[integration.event].use.triggerWords && integration.triggerWords) {\n    if (!Match.test(integration.triggerWords, [String])) {\n      throw new Meteor.Error('error-invalid-triggerWords', 'Invalid triggerWords', {\n        function: 'validateOutgoing'\n      });\n    }\n\n    integration.triggerWords.forEach((word, index) => {\n      if (!word || word.trim() === '') {\n        delete integration.triggerWords[index];\n      }\n    });\n    integration.triggerWords = _.without(integration.triggerWords, [undefined]);\n  } else {\n    delete integration.triggerWords;\n  }\n\n  if (integration.scriptEnabled === true && integration.script && integration.script.trim() !== '') {\n    try {\n      const babelOptions = Object.assign(Babel.getDefaultOptions({\n        runtime: false\n      }), {\n        compact: true,\n        minified: true,\n        comments: false\n      });\n      integration.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n      integration.scriptError = undefined;\n    } catch (e) {\n      integration.scriptCompiled = undefined;\n      integration.scriptError = _.pick(e, 'name', 'message', 'stack');\n    }\n  }\n\n  if (typeof integration.runOnEdits !== 'undefined') {\n    // Verify this value is only true/false\n    integration.runOnEdits = integration.runOnEdits === true;\n  }\n\n  _verifyUserHasPermissionForChannels(integration, userId, channels);\n\n  _verifyRetryInformation(integration);\n\n  const user = Users.findOne({\n    username: integration.username\n  });\n\n  if (!user) {\n    throw new Meteor.Error('error-invalid-user', 'Invalid user (did you delete the `rocket.cat` user?)', {\n      function: 'validateOutgoing'\n    });\n  }\n\n  integration.type = 'webhook-outgoing';\n  integration.userId = user._id;\n  integration.channel = channels;\n  return integration;\n};","map":{"version":3,"sources":["app/integrations/server/lib/validation.js"],"names":["Meteor","module","link","v","Match","Babel","_","default","s","Rooms","Users","Subscriptions","hasPermission","hasAllPermission","integrations","scopedChannels","validChannelChars","_verifyRequiredFields","integration","event","test","String","trim","outgoingEvents","Error","function","username","use","targetRoom","urls","index","url","entries","without","undefined","length","_verifyUserHasPermissionForChannels","userId","channels","channel","includes","record","channelType","substr","findOne","$or","_id","name","findOneByRoomIdAndUserId","fields","_verifyRetryInformation","retryFailedCalls","retryCount","parseInt","retryDelay","toLowerCase","validateOutgoing","_validateOutgoing","map","split","triggerWords","forEach","word","scriptEnabled","script","babelOptions","Object","assign","getDefaultOptions","runtime","compact","minified","comments","scriptCompiled","compile","code","scriptError","e","pick","runOnEdits","user","type"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,KAAJ;AAAUH,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACE,EAAAA,KAAK,CAACD,CAAD,EAAG;AAACC,IAAAA,KAAK,GAACD,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIE,KAAJ;AAAUJ,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACG,EAAAA,KAAK,CAACF,CAAD,EAAG;AAACE,IAAAA,KAAK,GAACF,CAAN;AAAQ;;AAAlB,CAApC,EAAwD,CAAxD;;AAA2D,IAAIG,CAAJ;;AAAML,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACK,EAAAA,OAAO,CAACJ,CAAD,EAAG;AAACG,IAAAA,CAAC,GAACH,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAA8C,IAAIK,CAAJ;AAAMP,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACK,EAAAA,OAAO,CAACJ,CAAD,EAAG;AAACK,IAAAA,CAAC,GAACL,CAAF;AAAI;;AAAhB,CAAhC,EAAkD,CAAlD;AAAqD,IAAIM,KAAJ,EAAUC,KAAV,EAAgBC,aAAhB;AAA8BV,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACO,EAAAA,KAAK,CAACN,CAAD,EAAG;AAACM,IAAAA,KAAK,GAACN,CAAN;AAAQ,GAAlB;;AAAmBO,EAAAA,KAAK,CAACP,CAAD,EAAG;AAACO,IAAAA,KAAK,GAACP,CAAN;AAAQ,GAApC;;AAAqCQ,EAAAA,aAAa,CAACR,CAAD,EAAG;AAACQ,IAAAA,aAAa,GAACR,CAAd;AAAgB;;AAAtE,CAA9B,EAAsG,CAAtG;AAAyG,IAAIS,aAAJ,EAAkBC,gBAAlB;AAAmCZ,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACU,EAAAA,aAAa,CAACT,CAAD,EAAG;AAACS,IAAAA,aAAa,GAACT,CAAd;AAAgB,GAAlC;;AAAmCU,EAAAA,gBAAgB,CAACV,CAAD,EAAG;AAACU,IAAAA,gBAAgB,GAACV,CAAjB;AAAmB;;AAA1E,CAArC,EAAiH,CAAjH;AAAoH,IAAIW,YAAJ;AAAiBb,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACY,EAAAA,YAAY,CAACX,CAAD,EAAG;AAACW,IAAAA,YAAY,GAACX,CAAb;AAAe;;AAAhC,CAAnC,EAAqE,CAArE;AAU/lB,MAAMY,cAAc,GAAG,CAAC,qBAAD,EAAwB,oBAAxB,EAA8C,qBAA9C,CAAvB;AACA,MAAMC,iBAAiB,GAAG,CAAC,GAAD,EAAM,GAAN,CAA1B;;AAEA,SAASC,qBAAT,CAA+BC,WAA/B,EAA4C;AAC3C,MACC,CAACA,WAAW,CAACC,KAAb,IACA,CAACf,KAAK,CAACgB,IAAN,CAAWF,WAAW,CAACC,KAAvB,EAA8BE,MAA9B,CADD,IAEAH,WAAW,CAACC,KAAZ,CAAkBG,IAAlB,OAA6B,EAF7B,IAGA,CAACR,YAAY,CAACS,cAAb,CAA4BL,WAAW,CAACC,KAAxC,CAJF,EAKE;AACD,UAAM,IAAInB,MAAM,CAACwB,KAAX,CAAiB,0BAAjB,EAA6C,oBAA7C,EAAmE;AACxEC,MAAAA,QAAQ,EAAE;AAD8D,KAAnE,CAAN;AAGA;;AAED,MAAI,CAACP,WAAW,CAACQ,QAAb,IAAyB,CAACtB,KAAK,CAACgB,IAAN,CAAWF,WAAW,CAACQ,QAAvB,EAAiCL,MAAjC,CAA1B,IAAsEH,WAAW,CAACQ,QAAZ,CAAqBJ,IAArB,OAAgC,EAA1G,EAA8G;AAC7G,UAAM,IAAItB,MAAM,CAACwB,KAAX,CAAiB,wBAAjB,EAA2C,kBAA3C,EAA+D;AACpEC,MAAAA,QAAQ,EAAE;AAD0D,KAA/D,CAAN;AAGA;;AAED,MAAIX,YAAY,CAACS,cAAb,CAA4BL,WAAW,CAACC,KAAxC,EAA+CQ,GAA/C,CAAmDC,UAAnD,IAAiE,CAACV,WAAW,CAACU,UAAlF,EAA8F;AAC7F,UAAM,IAAI5B,MAAM,CAACwB,KAAX,CAAiB,0BAAjB,EAA6C,qBAA7C,EAAoE;AACzEC,MAAAA,QAAQ,EAAE;AAD+D,KAApE,CAAN;AAGA;;AAED,MAAI,CAACrB,KAAK,CAACgB,IAAN,CAAWF,WAAW,CAACW,IAAvB,EAA6B,CAACR,MAAD,CAA7B,CAAL,EAA6C;AAC5C,UAAM,IAAIrB,MAAM,CAACwB,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAC5DC,MAAAA,QAAQ,EAAE;AADkD,KAAvD,CAAN;AAGA;;AAED,OAAK,MAAM,CAACK,KAAD,EAAQC,GAAR,CAAX,IAA2Bb,WAAW,CAACW,IAAZ,CAAiBG,OAAjB,EAA3B,EAAuD;AACtD,QAAID,GAAG,CAACT,IAAJ,OAAe,EAAnB,EAAuB;AACtB,aAAOJ,WAAW,CAACW,IAAZ,CAAiBC,KAAjB,CAAP;AACA;AACD;;AAEDZ,EAAAA,WAAW,CAACW,IAAZ,GAAmBvB,CAAC,CAAC2B,OAAF,CAAUf,WAAW,CAACW,IAAtB,EAA4B,CAACK,SAAD,CAA5B,CAAnB;;AAEA,MAAIhB,WAAW,CAACW,IAAZ,CAAiBM,MAAjB,KAA4B,CAAhC,EAAmC;AAClC,UAAM,IAAInC,MAAM,CAACwB,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAC5DC,MAAAA,QAAQ,EAAE;AADkD,KAAvD,CAAN;AAGA;AACD;;AAED,SAASW,mCAAT,CAA6ClB,WAA7C,EAA0DmB,MAA1D,EAAkEC,QAAlE,EAA4E;AAC3E,OAAK,IAAIC,OAAT,IAAoBD,QAApB,EAA8B;AAC7B,QAAIvB,cAAc,CAACyB,QAAf,CAAwBD,OAAxB,CAAJ,EAAsC;AACrC,UAAIA,OAAO,KAAK,qBAAhB,EAAuC,CACtC;AACA,OAFD,MAEO,IAAI,CAAC3B,aAAa,CAACyB,MAAD,EAAS,8BAAT,CAAlB,EAA4D;AAClE,cAAM,IAAIrC,MAAM,CAACwB,KAAX,CAAiB,uBAAjB,EAA0C,iBAA1C,EAA6D;AAClEC,UAAAA,QAAQ,EAAE;AADwD,SAA7D,CAAN;AAGA;AACD,KARD,MAQO;AACN,UAAIgB,MAAJ;AACA,YAAMC,WAAW,GAAGH,OAAO,CAAC,CAAD,CAA3B;AACAA,MAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAe,CAAf,CAAV;;AAEA,cAAQD,WAAR;AACC,aAAK,GAAL;AACCD,UAAAA,MAAM,GAAGhC,KAAK,CAACmC,OAAN,CAAc;AACtBC,YAAAA,GAAG,EAAE,CAAC;AAAEC,cAAAA,GAAG,EAAEP;AAAP,aAAD,EAAmB;AAAEQ,cAAAA,IAAI,EAAER;AAAR,aAAnB;AADiB,WAAd,CAAT;AAGA;;AACD,aAAK,GAAL;AACCE,UAAAA,MAAM,GAAG/B,KAAK,CAACkC,OAAN,CAAc;AACtBC,YAAAA,GAAG,EAAE,CAAC;AAAEC,cAAAA,GAAG,EAAEP;AAAP,aAAD,EAAmB;AAAEb,cAAAA,QAAQ,EAAEa;AAAZ,aAAnB;AADiB,WAAd,CAAT;AAGA;AAVF;;AAaA,UAAI,CAACE,MAAL,EAAa;AACZ,cAAM,IAAIzC,MAAM,CAACwB,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAC5DC,UAAAA,QAAQ,EAAE;AADkD,SAAvD,CAAN;AAGA;;AAED,UACC,CAACZ,gBAAgB,CAACwB,MAAD,EAAS,CAAC,8BAAD,EAAiC,kCAAjC,CAAT,CAAjB,IACA,CAAC1B,aAAa,CAACqC,wBAAd,CAAuCP,MAAM,CAACK,GAA9C,EAAmDT,MAAnD,EAA2D;AAAEY,QAAAA,MAAM,EAAE;AAAEH,UAAAA,GAAG,EAAE;AAAP;AAAV,OAA3D,CAFF,EAGE;AACD,cAAM,IAAI9C,MAAM,CAACwB,KAAX,CAAiB,uBAAjB,EAA0C,iBAA1C,EAA6D;AAClEC,UAAAA,QAAQ,EAAE;AADwD,SAA7D,CAAN;AAGA;AACD;AACD;AACD;;AAED,SAASyB,uBAAT,CAAiChC,WAAjC,EAA8C;AAC7C,MAAI,CAACA,WAAW,CAACiC,gBAAjB,EAAmC;AAClC;AACA,GAH4C,CAK7C;;;AACAjC,EAAAA,WAAW,CAACkC,UAAZ,GAAyBlC,WAAW,CAACkC,UAAZ,IAA0BC,QAAQ,CAACnC,WAAW,CAACkC,UAAb,CAAR,GAAmC,CAA7D,GAAiEC,QAAQ,CAACnC,WAAW,CAACkC,UAAb,CAAzE,GAAoG,CAA7H;AACAlC,EAAAA,WAAW,CAACoC,UAAZ,GACC,CAACpC,WAAW,CAACoC,UAAb,IAA2B,CAACpC,WAAW,CAACoC,UAAZ,CAAuBhC,IAAvB,EAA5B,GAA4D,eAA5D,GAA8EJ,WAAW,CAACoC,UAAZ,CAAuBC,WAAvB,EAD/E;AAEA;;AAEDzC,YAAY,CAAC0C,gBAAb,GAAgC,SAASC,iBAAT,CAA2BvC,WAA3B,EAAwCmB,MAAxC,EAAgD;AAC/E,MAAInB,WAAW,CAACqB,OAAZ,IAAuBnC,KAAK,CAACgB,IAAN,CAAWF,WAAW,CAACqB,OAAvB,EAAgClB,MAAhC,CAAvB,IAAkEH,WAAW,CAACqB,OAAZ,CAAoBjB,IAApB,OAA+B,EAArG,EAAyG;AACxG,WAAOJ,WAAW,CAACqB,OAAnB;AACA,GAH8E,CAK/E;;;AACAtB,EAAAA,qBAAqB,CAACC,WAAD,CAArB;;AAEA,MAAIoB,QAAQ,GAAG,EAAf;;AACA,MAAIxB,YAAY,CAACS,cAAb,CAA4BL,WAAW,CAACC,KAAxC,EAA+CQ,GAA/C,CAAmDY,OAAvD,EAAgE;AAC/D,QAAI,CAACnC,KAAK,CAACgB,IAAN,CAAWF,WAAW,CAACqB,OAAvB,EAAgClB,MAAhC,CAAL,EAA8C;AAC7C,YAAM,IAAIrB,MAAM,CAACwB,KAAX,CAAiB,uBAAjB,EAA0C,iBAA1C,EAA6D;AAClEC,QAAAA,QAAQ,EAAE;AADwD,OAA7D,CAAN;AAGA,KAJD,MAIO;AACNa,MAAAA,QAAQ,GAAGhC,CAAC,CAACoD,GAAF,CAAMxC,WAAW,CAACqB,OAAZ,CAAoBoB,KAApB,CAA0B,GAA1B,CAAN,EAAuCpB,OAAD,IAAa/B,CAAC,CAACc,IAAF,CAAOiB,OAAP,CAAnD,CAAX;;AAEA,WAAK,MAAMA,OAAX,IAAsBD,QAAtB,EAAgC;AAC/B,YAAI,CAACtB,iBAAiB,CAACwB,QAAlB,CAA2BD,OAAO,CAAC,CAAD,CAAlC,CAAD,IAA2C,CAACxB,cAAc,CAACyB,QAAf,CAAwBD,OAAO,CAACgB,WAAR,EAAxB,CAAhD,EAAgG;AAC/F,gBAAM,IAAIvD,MAAM,CAACwB,KAAX,CAAiB,wCAAjB,EAA2D,oCAA3D,EAAiG;AACtGC,YAAAA,QAAQ,EAAE;AAD4F,WAAjG,CAAN;AAGA;AACD;AACD;AACD,GAhBD,MAgBO,IAAI,CAACb,aAAa,CAACyB,MAAD,EAAS,8BAAT,CAAlB,EAA4D;AAClE,UAAM,IAAIrC,MAAM,CAACwB,KAAX,CAAiB,2BAAjB,EAA8C,uDAA9C,EAAuG;AAC5GC,MAAAA,QAAQ,EAAE;AADkG,KAAvG,CAAN;AAGA;;AAED,MAAIX,YAAY,CAACS,cAAb,CAA4BL,WAAW,CAACC,KAAxC,EAA+CQ,GAA/C,CAAmDiC,YAAnD,IAAmE1C,WAAW,CAAC0C,YAAnF,EAAiG;AAChG,QAAI,CAACxD,KAAK,CAACgB,IAAN,CAAWF,WAAW,CAAC0C,YAAvB,EAAqC,CAACvC,MAAD,CAArC,CAAL,EAAqD;AACpD,YAAM,IAAIrB,MAAM,CAACwB,KAAX,CAAiB,4BAAjB,EAA+C,sBAA/C,EAAuE;AAC5EC,QAAAA,QAAQ,EAAE;AADkE,OAAvE,CAAN;AAGA;;AAEDP,IAAAA,WAAW,CAAC0C,YAAZ,CAAyBC,OAAzB,CAAiC,CAACC,IAAD,EAAOhC,KAAP,KAAiB;AACjD,UAAI,CAACgC,IAAD,IAASA,IAAI,CAACxC,IAAL,OAAgB,EAA7B,EAAiC;AAChC,eAAOJ,WAAW,CAAC0C,YAAZ,CAAyB9B,KAAzB,CAAP;AACA;AACD,KAJD;AAMAZ,IAAAA,WAAW,CAAC0C,YAAZ,GAA2BtD,CAAC,CAAC2B,OAAF,CAAUf,WAAW,CAAC0C,YAAtB,EAAoC,CAAC1B,SAAD,CAApC,CAA3B;AACA,GAdD,MAcO;AACN,WAAOhB,WAAW,CAAC0C,YAAnB;AACA;;AAED,MAAI1C,WAAW,CAAC6C,aAAZ,KAA8B,IAA9B,IAAsC7C,WAAW,CAAC8C,MAAlD,IAA4D9C,WAAW,CAAC8C,MAAZ,CAAmB1C,IAAnB,OAA8B,EAA9F,EAAkG;AACjG,QAAI;AACH,YAAM2C,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc9D,KAAK,CAAC+D,iBAAN,CAAwB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAxB,CAAd,EAA2D;AAC/EC,QAAAA,OAAO,EAAE,IADsE;AAE/EC,QAAAA,QAAQ,EAAE,IAFqE;AAG/EC,QAAAA,QAAQ,EAAE;AAHqE,OAA3D,CAArB;AAMAtD,MAAAA,WAAW,CAACuD,cAAZ,GAA6BpE,KAAK,CAACqE,OAAN,CAAcxD,WAAW,CAAC8C,MAA1B,EAAkCC,YAAlC,EAAgDU,IAA7E;AACAzD,MAAAA,WAAW,CAAC0D,WAAZ,GAA0B1C,SAA1B;AACA,KATD,CASE,OAAO2C,CAAP,EAAU;AACX3D,MAAAA,WAAW,CAACuD,cAAZ,GAA6BvC,SAA7B;AACAhB,MAAAA,WAAW,CAAC0D,WAAZ,GAA0BtE,CAAC,CAACwE,IAAF,CAAOD,CAAP,EAAU,MAAV,EAAkB,SAAlB,EAA6B,OAA7B,CAA1B;AACA;AACD;;AAED,MAAI,OAAO3D,WAAW,CAAC6D,UAAnB,KAAkC,WAAtC,EAAmD;AAClD;AACA7D,IAAAA,WAAW,CAAC6D,UAAZ,GAAyB7D,WAAW,CAAC6D,UAAZ,KAA2B,IAApD;AACA;;AAED3C,EAAAA,mCAAmC,CAAClB,WAAD,EAAcmB,MAAd,EAAsBC,QAAtB,CAAnC;;AACAY,EAAAA,uBAAuB,CAAChC,WAAD,CAAvB;;AAEA,QAAM8D,IAAI,GAAGtE,KAAK,CAACkC,OAAN,CAAc;AAAElB,IAAAA,QAAQ,EAAER,WAAW,CAACQ;AAAxB,GAAd,CAAb;;AAEA,MAAI,CAACsD,IAAL,EAAW;AACV,UAAM,IAAIhF,MAAM,CAACwB,KAAX,CAAiB,oBAAjB,EAAuC,sDAAvC,EAA+F;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA/F,CAAN;AACA;;AAEDP,EAAAA,WAAW,CAAC+D,IAAZ,GAAmB,kBAAnB;AACA/D,EAAAA,WAAW,CAACmB,MAAZ,GAAqB2C,IAAI,CAAClC,GAA1B;AACA5B,EAAAA,WAAW,CAACqB,OAAZ,GAAsBD,QAAtB;AAEA,SAAOpB,WAAP;AACA,CApFD","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\nimport { Babel } from 'meteor/babel-compiler';\nimport _ from 'underscore';\nimport s from 'underscore.string';\n\nimport { Rooms, Users, Subscriptions } from '../../../models';\nimport { hasPermission, hasAllPermission } from '../../../authorization';\nimport { integrations } from '../../lib/rocketchat';\n\nconst scopedChannels = ['all_public_channels', 'all_private_groups', 'all_direct_messages'];\nconst validChannelChars = ['@', '#'];\n\nfunction _verifyRequiredFields(integration) {\n\tif (\n\t\t!integration.event ||\n\t\t!Match.test(integration.event, String) ||\n\t\tintegration.event.trim() === '' ||\n\t\t!integrations.outgoingEvents[integration.event]\n\t) {\n\t\tthrow new Meteor.Error('error-invalid-event-type', 'Invalid event type', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (!integration.username || !Match.test(integration.username, String) || integration.username.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (integrations.outgoingEvents[integration.event].use.targetRoom && !integration.targetRoom) {\n\t\tthrow new Meteor.Error('error-invalid-targetRoom', 'Invalid Target Room', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (!Match.test(integration.urls, [String])) {\n\t\tthrow new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tfor (const [index, url] of integration.urls.entries()) {\n\t\tif (url.trim() === '') {\n\t\t\tdelete integration.urls[index];\n\t\t}\n\t}\n\n\tintegration.urls = _.without(integration.urls, [undefined]);\n\n\tif (integration.urls.length === 0) {\n\t\tthrow new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n}\n\nfunction _verifyUserHasPermissionForChannels(integration, userId, channels) {\n\tfor (let channel of channels) {\n\t\tif (scopedChannels.includes(channel)) {\n\t\t\tif (channel === 'all_public_channels') {\n\t\t\t\t// No special permissions needed to add integration to public channels\n\t\t\t} else if (!hasPermission(userId, 'manage-outgoing-integrations')) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tlet record;\n\t\t\tconst channelType = channel[0];\n\t\t\tchannel = channel.substr(1);\n\n\t\t\tswitch (channelType) {\n\t\t\t\tcase '#':\n\t\t\t\t\trecord = Rooms.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '@':\n\t\t\t\t\trecord = Users.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!hasAllPermission(userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations']) &&\n\t\t\t\t!Subscriptions.findOneByRoomIdAndUserId(record._id, userId, { fields: { _id: 1 } })\n\t\t\t) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _verifyRetryInformation(integration) {\n\tif (!integration.retryFailedCalls) {\n\t\treturn;\n\t}\n\n\t// Don't allow negative retry counts\n\tintegration.retryCount = integration.retryCount && parseInt(integration.retryCount) > 0 ? parseInt(integration.retryCount) : 4;\n\tintegration.retryDelay =\n\t\t!integration.retryDelay || !integration.retryDelay.trim() ? 'powers-of-ten' : integration.retryDelay.toLowerCase();\n}\n\nintegrations.validateOutgoing = function _validateOutgoing(integration, userId) {\n\tif (integration.channel && Match.test(integration.channel, String) && integration.channel.trim() === '') {\n\t\tdelete integration.channel;\n\t}\n\n\t// Moved to it's own function to statisfy the complexity rule\n\t_verifyRequiredFields(integration);\n\n\tlet channels = [];\n\tif (integrations.outgoingEvents[integration.event].use.channel) {\n\t\tif (!Match.test(integration.channel, String)) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t});\n\t\t} else {\n\t\t\tchannels = _.map(integration.channel.split(','), (channel) => s.trim(channel));\n\n\t\t\tfor (const channel of channels) {\n\t\t\t\tif (!validChannelChars.includes(channel[0]) && !scopedChannels.includes(channel.toLowerCase())) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (!hasPermission(userId, 'manage-outgoing-integrations')) {\n\t\tthrow new Meteor.Error('error-invalid-permissions', 'Invalid permission for required Integration creation.', {\n\t\t\tfunction: 'validateOutgoing',\n\t\t});\n\t}\n\n\tif (integrations.outgoingEvents[integration.event].use.triggerWords && integration.triggerWords) {\n\t\tif (!Match.test(integration.triggerWords, [String])) {\n\t\t\tthrow new Meteor.Error('error-invalid-triggerWords', 'Invalid triggerWords', {\n\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t});\n\t\t}\n\n\t\tintegration.triggerWords.forEach((word, index) => {\n\t\t\tif (!word || word.trim() === '') {\n\t\t\t\tdelete integration.triggerWords[index];\n\t\t\t}\n\t\t});\n\n\t\tintegration.triggerWords = _.without(integration.triggerWords, [undefined]);\n\t} else {\n\t\tdelete integration.triggerWords;\n\t}\n\n\tif (integration.scriptEnabled === true && integration.script && integration.script.trim() !== '') {\n\t\ttry {\n\t\t\tconst babelOptions = Object.assign(Babel.getDefaultOptions({ runtime: false }), {\n\t\t\t\tcompact: true,\n\t\t\t\tminified: true,\n\t\t\t\tcomments: false,\n\t\t\t});\n\n\t\t\tintegration.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\tintegration.scriptError = undefined;\n\t\t} catch (e) {\n\t\t\tintegration.scriptCompiled = undefined;\n\t\t\tintegration.scriptError = _.pick(e, 'name', 'message', 'stack');\n\t\t}\n\t}\n\n\tif (typeof integration.runOnEdits !== 'undefined') {\n\t\t// Verify this value is only true/false\n\t\tintegration.runOnEdits = integration.runOnEdits === true;\n\t}\n\n\t_verifyUserHasPermissionForChannels(integration, userId, channels);\n\t_verifyRetryInformation(integration);\n\n\tconst user = Users.findOne({ username: integration.username });\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user (did you delete the `rocket.cat` user?)', { function: 'validateOutgoing' });\n\t}\n\n\tintegration.type = 'webhook-outgoing';\n\tintegration.userId = user._id;\n\tintegration.channel = channels;\n\n\treturn integration;\n};\n"]},"sourceType":"module","hash":"7c918a0acc89dd445714daaf9b74b6f0b01cb0d3"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/facts-base/facts_base_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/facts-base/facts_base_server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/facts-base/facts_base_server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/facts-base/facts_base_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/facts-base/facts_base_server.js"}},"code":"module.export({\n  Facts: () => Facts,\n  FACTS_COLLECTION: () => FACTS_COLLECTION,\n  FACTS_PUBLICATION: () => FACTS_PUBLICATION\n});\nlet Facts, FACTS_COLLECTION, FACTS_PUBLICATION;\nmodule.link(\"./facts_base_common\", {\n  Facts(v) {\n    Facts = v;\n  },\n\n  FACTS_COLLECTION(v) {\n    FACTS_COLLECTION = v;\n  },\n\n  FACTS_PUBLICATION(v) {\n    FACTS_PUBLICATION = v;\n  }\n\n}, 0);\nconst hasOwn = Object.prototype.hasOwnProperty; // This file is only used server-side, so no need to check Meteor.isServer.\n// By default, we publish facts to no user if autopublish is off, and to all\n// users if autopublish is on.\n\nlet userIdFilter = function (userId) {\n  return !!Package.autopublish;\n}; // XXX make this take effect at runtime too?\n\n\nFacts.setUserIdFilter = function (filter) {\n  userIdFilter = filter;\n}; // XXX Use a minimongo collection instead and hook up an observeChanges\n// directly to a publish.\n\n\nconst factsByPackage = {};\nlet activeSubscriptions = []; // Make factsByPackage data available to the server environment\n\nFacts._factsByPackage = factsByPackage;\n\nFacts.incrementServerFact = function (pkg, fact, increment) {\n  if (!hasOwn.call(factsByPackage, pkg)) {\n    factsByPackage[pkg] = {};\n    factsByPackage[pkg][fact] = increment;\n    activeSubscriptions.forEach(function (sub) {\n      sub.added(FACTS_COLLECTION, pkg, factsByPackage[pkg]);\n    });\n    return;\n  }\n\n  const packageFacts = factsByPackage[pkg];\n\n  if (!hasOwn.call(packageFacts, fact)) {\n    factsByPackage[pkg][fact] = 0;\n  }\n\n  factsByPackage[pkg][fact] += increment;\n  const changedField = {};\n  changedField[fact] = factsByPackage[pkg][fact];\n  activeSubscriptions.forEach(function (sub) {\n    sub.changed(FACTS_COLLECTION, pkg, changedField);\n  });\n}; // Deferred, because we have an unordered dependency on livedata.\n// XXX is this safe? could somebody try to connect before Meteor.publish is\n// called?\n\n\nMeteor.defer(function () {\n  // XXX Also publish facts-by-package.\n  Meteor.publish(FACTS_PUBLICATION, function () {\n    const sub = this;\n\n    if (!userIdFilter(this.userId)) {\n      sub.ready();\n      return;\n    }\n\n    activeSubscriptions.push(sub);\n    Object.keys(factsByPackage).forEach(function (pkg) {\n      sub.added(FACTS_COLLECTION, pkg, factsByPackage[pkg]);\n    });\n    sub.onStop(function () {\n      activeSubscriptions = activeSubscriptions.filter(activeSub => activeSub !== sub);\n    });\n    sub.ready();\n  }, {\n    is_auto: true\n  });\n});","map":{"version":3,"sources":["packages/facts-base/facts_base_server.js"],"names":["module","export","Facts","FACTS_COLLECTION","FACTS_PUBLICATION","link","v","hasOwn","Object","prototype","hasOwnProperty","userIdFilter","userId","Package","autopublish","setUserIdFilter","filter","factsByPackage","activeSubscriptions","_factsByPackage","incrementServerFact","pkg","fact","increment","call","forEach","sub","added","packageFacts","changedField","changed","Meteor","defer","publish","ready","push","keys","onStop","activeSub","is_auto"],"mappings":"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","sourcesContent":["import { Facts, FACTS_COLLECTION, FACTS_PUBLICATION } from './facts_base_common';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// This file is only used server-side, so no need to check Meteor.isServer.\n\n// By default, we publish facts to no user if autopublish is off, and to all\n// users if autopublish is on.\nlet userIdFilter = function (userId) {\n  return !!Package.autopublish;\n};\n\n// XXX make this take effect at runtime too?\nFacts.setUserIdFilter = function (filter) {\n  userIdFilter = filter;\n};\n\n// XXX Use a minimongo collection instead and hook up an observeChanges\n// directly to a publish.\nconst factsByPackage = {};\nlet activeSubscriptions = [];\n\n// Make factsByPackage data available to the server environment\nFacts._factsByPackage = factsByPackage;\n\nFacts.incrementServerFact = function (pkg, fact, increment) {\n  if (!hasOwn.call(factsByPackage, pkg)) {\n    factsByPackage[pkg] = {};\n    factsByPackage[pkg][fact] = increment;\n    activeSubscriptions.forEach(function (sub) {\n      sub.added(FACTS_COLLECTION, pkg, factsByPackage[pkg]);\n    });\n    return;\n  }\n\n  const packageFacts = factsByPackage[pkg];\n  if (!hasOwn.call(packageFacts, fact)) {\n    factsByPackage[pkg][fact] = 0;\n  }\n  factsByPackage[pkg][fact] += increment;\n  const changedField = {};\n  changedField[fact] = factsByPackage[pkg][fact];\n  activeSubscriptions.forEach(function (sub) {\n    sub.changed(FACTS_COLLECTION, pkg, changedField);\n  });\n};\n\n// Deferred, because we have an unordered dependency on livedata.\n// XXX is this safe? could somebody try to connect before Meteor.publish is\n// called?\nMeteor.defer(function () {\n  // XXX Also publish facts-by-package.\n  Meteor.publish(FACTS_PUBLICATION, function () {\n    const sub = this;\n    if (!userIdFilter(this.userId)) {\n      sub.ready();\n      return;\n    }\n\n    activeSubscriptions.push(sub);\n    Object.keys(factsByPackage).forEach(function (pkg) {\n      sub.added(FACTS_COLLECTION, pkg, factsByPackage[pkg]);\n    });\n    sub.onStop(function () {\n      activeSubscriptions =\n        activeSubscriptions.filter(activeSub => activeSub !== sub);\n    });\n    sub.ready();\n  }, {is_auto: true});\n});\n\nexport {\n  Facts,\n  FACTS_COLLECTION,\n  FACTS_PUBLICATION,\n};\n"]},"sourceType":"module","hash":"444fc4338ccc4422e0c632ca556b15e1b9d9b58b"}

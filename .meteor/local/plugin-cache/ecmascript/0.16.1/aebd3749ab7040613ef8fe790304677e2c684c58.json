{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/initialData.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/initialData.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/initialData.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/initialData.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/initialData.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet RocketChatFile;\nmodule.link(\"../../app/file\", {\n  RocketChatFile(v) {\n    RocketChatFile = v;\n  }\n\n}, 2);\nlet FileUpload;\nmodule.link(\"../../app/file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 3);\nlet addUserRoles, getUsersInRole;\nmodule.link(\"../../app/authorization/server\", {\n  addUserRoles(v) {\n    addUserRoles = v;\n  },\n\n  getUsersInRole(v) {\n    getUsersInRole = v;\n  }\n\n}, 4);\nlet Users, Rooms;\nmodule.link(\"../../app/models/server\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet checkUsernameAvailability, addUserToDefaultChannels;\nmodule.link(\"../../app/lib/server\", {\n  checkUsernameAvailability(v) {\n    checkUsernameAvailability = v;\n  },\n\n  addUserToDefaultChannels(v) {\n    addUserToDefaultChannels = v;\n  }\n\n}, 7);\nlet Settings;\nmodule.link(\"../../app/models/server/raw\", {\n  Settings(v) {\n    Settings = v;\n  }\n\n}, 8);\nlet validateEmail;\nmodule.link(\"../../lib/emailValidator\", {\n  validateEmail(v) {\n    validateEmail = v;\n  }\n\n}, 9);\nMeteor.startup(function () {\n  return Promise.asyncApply(() => {\n    if (settings.get('Show_Setup_Wizard') === 'pending' && !Rooms.findOneById('GENERAL')) {\n      Rooms.createWithIdTypeAndName('GENERAL', 'c', 'general', {\n        default: true\n      });\n    }\n\n    if (!Users.findOneById('rocket.cat')) {\n      Users.create({\n        _id: 'rocket.cat',\n        name: 'Rocket.Cat',\n        username: 'rocket.cat',\n        status: 'online',\n        statusDefault: 'online',\n        utcOffset: 0,\n        active: true,\n        type: 'bot'\n      });\n      addUserRoles('rocket.cat', 'bot');\n      const buffer = Buffer.from(Assets.getBinary('avatars/rocketcat.png'));\n      const rs = RocketChatFile.bufferToStream(buffer, 'utf8');\n      const fileStore = FileUpload.getStore('Avatars');\n      fileStore.deleteByName('rocket.cat');\n      const file = {\n        userId: 'rocket.cat',\n        type: 'image/png',\n        size: buffer.length\n      };\n      Meteor.runAsUser('rocket.cat', () => {\n        fileStore.insert(file, rs, () => Users.setAvatarData('rocket.cat', 'local', null));\n      });\n    }\n\n    if (process.env.ADMIN_PASS) {\n      if (Promise.await(Promise.await(getUsersInRole('admin')).count()) === 0) {\n        console.log('Inserting admin user:'.green);\n        const adminUser = {\n          name: 'Administrator',\n          username: 'admin',\n          status: 'offline',\n          statusDefault: 'online',\n          utcOffset: 0,\n          active: true\n        };\n\n        if (process.env.ADMIN_NAME) {\n          adminUser.name = process.env.ADMIN_NAME;\n        }\n\n        console.log(\"Name: \".concat(adminUser.name).green);\n\n        if (process.env.ADMIN_EMAIL) {\n          if (validateEmail(process.env.ADMIN_EMAIL)) {\n            if (!Users.findOneByEmailAddress(process.env.ADMIN_EMAIL)) {\n              adminUser.emails = [{\n                address: process.env.ADMIN_EMAIL,\n                verified: process.env.ADMIN_EMAIL_VERIFIED === 'true'\n              }];\n              console.log(\"Email: \".concat(process.env.ADMIN_EMAIL).green);\n            } else {\n              console.log('Email provided already exists; Ignoring environment variables ADMIN_EMAIL'.red);\n            }\n          } else {\n            console.log('Email provided is invalid; Ignoring environment variables ADMIN_EMAIL'.red);\n          }\n        }\n\n        if (process.env.ADMIN_USERNAME) {\n          let nameValidation;\n\n          try {\n            nameValidation = new RegExp(\"^\".concat(settings.get('UTF8_User_Names_Validation'), \"$\"));\n          } catch (error) {\n            nameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n          }\n\n          if (nameValidation.test(process.env.ADMIN_USERNAME)) {\n            if (checkUsernameAvailability(process.env.ADMIN_USERNAME)) {\n              adminUser.username = process.env.ADMIN_USERNAME;\n            } else {\n              console.log('Username provided already exists; Ignoring environment variables ADMIN_USERNAME'.red);\n            }\n          } else {\n            console.log('Username provided is invalid; Ignoring environment variables ADMIN_USERNAME'.red);\n          }\n        }\n\n        console.log(\"Username: \".concat(adminUser.username).green);\n        adminUser.type = 'user';\n        const id = Users.create(adminUser);\n        Accounts.setPassword(id, process.env.ADMIN_PASS);\n        addUserRoles(id, 'admin');\n      } else {\n        console.log('Users with admin role already exist; Ignoring environment variables ADMIN_PASS'.red);\n      }\n    }\n\n    if (typeof process.env.INITIAL_USER === 'string' && process.env.INITIAL_USER.length > 0) {\n      try {\n        const initialUser = JSON.parse(process.env.INITIAL_USER);\n\n        if (!initialUser._id) {\n          console.log('No _id provided; Ignoring environment variable INITIAL_USER'.red);\n        } else if (!Users.findOneById(initialUser._id)) {\n          console.log('Inserting initial user:'.green);\n          console.log(JSON.stringify(initialUser, null, 2).green);\n          Users.create(initialUser);\n        }\n      } catch (e) {\n        console.log('Error processing environment variable INITIAL_USER'.red, e);\n      }\n    }\n\n    if (Promise.await(Promise.await(getUsersInRole('admin')).count()) === 0) {\n      const oldestUser = Users.getOldest({\n        _id: 1,\n        username: 1,\n        name: 1\n      });\n\n      if (oldestUser) {\n        addUserRoles(oldestUser._id, ['admin']);\n        console.log(\"No admins are found. Set \".concat(oldestUser.username || oldestUser.name, \" as admin for being the oldest user\"));\n      }\n    }\n\n    if (Promise.await(Promise.await(getUsersInRole('admin')).count()) !== 0) {\n      if (settings.get('Show_Setup_Wizard') === 'pending') {\n        console.log('Setting Setup Wizard to \"in_progress\" because, at least, one admin was found');\n        Settings.updateValueById('Show_Setup_Wizard', 'in_progress');\n      }\n    }\n\n    Users.removeById('rocketchat.internal.admin.test');\n\n    if (process.env.TEST_MODE === 'true') {\n      console.log('Inserting admin test user:'.green);\n      const adminUser = {\n        _id: 'rocketchat.internal.admin.test',\n        name: 'RocketChat Internal Admin Test',\n        username: 'rocketchat.internal.admin.test',\n        emails: [{\n          address: 'rocketchat.internal.admin.test@rocket.chat',\n          verified: false\n        }],\n        status: 'offline',\n        statusDefault: 'online',\n        utcOffset: 0,\n        active: true,\n        type: 'user'\n      };\n      console.log(\"Name: \".concat(adminUser.name).green);\n      console.log(\"Email: \".concat(adminUser.emails[0].address).green);\n      console.log(\"Username: \".concat(adminUser.username).green);\n      console.log(\"Password: \".concat(adminUser._id).green);\n\n      if (Users.findOneByEmailAddress(adminUser.emails[0].address)) {\n        throw new Meteor.Error(\"Email \".concat(adminUser.emails[0].address, \" already exists\"), \"Rocket.Chat can't run in test mode\");\n      }\n\n      if (!checkUsernameAvailability(adminUser.username)) {\n        throw new Meteor.Error(\"Username \".concat(adminUser.username, \" already exists\"), \"Rocket.Chat can't run in test mode\");\n      }\n\n      Users.create(adminUser);\n      Accounts.setPassword(adminUser._id, adminUser._id);\n      addUserRoles(adminUser._id, ['admin']);\n\n      if (settings.get('Show_Setup_Wizard') === 'pending') {\n        Settings.updateValueById('Show_Setup_Wizard', 'in_progress');\n      }\n\n      return addUserToDefaultChannels(adminUser, true);\n    }\n  });\n});","map":{"version":3,"sources":["server/startup/initialData.js"],"names":["Meteor","module","link","v","Accounts","RocketChatFile","FileUpload","addUserRoles","getUsersInRole","Users","Rooms","settings","checkUsernameAvailability","addUserToDefaultChannels","Settings","validateEmail","startup","get","findOneById","createWithIdTypeAndName","default","create","_id","name","username","status","statusDefault","utcOffset","active","type","buffer","Buffer","from","Assets","getBinary","rs","bufferToStream","fileStore","getStore","deleteByName","file","userId","size","length","runAsUser","insert","setAvatarData","process","env","ADMIN_PASS","count","console","log","green","adminUser","ADMIN_NAME","ADMIN_EMAIL","findOneByEmailAddress","emails","address","verified","ADMIN_EMAIL_VERIFIED","red","ADMIN_USERNAME","nameValidation","RegExp","error","test","id","setPassword","INITIAL_USER","initialUser","JSON","parse","stringify","e","oldestUser","getOldest","updateValueById","removeById","TEST_MODE","Error"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,QAAJ;AAAaH,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACE,EAAAA,QAAQ,CAACD,CAAD,EAAG;AAACC,IAAAA,QAAQ,GAACD,CAAT;AAAW;;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,cAAJ;AAAmBJ,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACG,EAAAA,cAAc,CAACF,CAAD,EAAG;AAACE,IAAAA,cAAc,GAACF,CAAf;AAAiB;;AAApC,CAA7B,EAAmE,CAAnE;AAAsE,IAAIG,UAAJ;AAAeL,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACI,EAAAA,UAAU,CAACH,CAAD,EAAG;AAACG,IAAAA,UAAU,GAACH,CAAX;AAAa;;AAA5B,CAA3C,EAAyE,CAAzE;AAA4E,IAAII,YAAJ,EAAiBC,cAAjB;AAAgCP,MAAM,CAACC,IAAP,CAAY,gCAAZ,EAA6C;AAACK,EAAAA,YAAY,CAACJ,CAAD,EAAG;AAACI,IAAAA,YAAY,GAACJ,CAAb;AAAe,GAAhC;;AAAiCK,EAAAA,cAAc,CAACL,CAAD,EAAG;AAACK,IAAAA,cAAc,GAACL,CAAf;AAAiB;;AAApE,CAA7C,EAAmH,CAAnH;AAAsH,IAAIM,KAAJ,EAAUC,KAAV;AAAgBT,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAsC;AAACO,EAAAA,KAAK,CAACN,CAAD,EAAG;AAACM,IAAAA,KAAK,GAACN,CAAN;AAAQ,GAAlB;;AAAmBO,EAAAA,KAAK,CAACP,CAAD,EAAG;AAACO,IAAAA,KAAK,GAACP,CAAN;AAAQ;;AAApC,CAAtC,EAA4E,CAA5E;AAA+E,IAAIQ,QAAJ;AAAaV,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACS,EAAAA,QAAQ,CAACR,CAAD,EAAG;AAACQ,IAAAA,QAAQ,GAACR,CAAT;AAAW;;AAAxB,CAAxC,EAAkE,CAAlE;AAAqE,IAAIS,yBAAJ,EAA8BC,wBAA9B;AAAuDZ,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACU,EAAAA,yBAAyB,CAACT,CAAD,EAAG;AAACS,IAAAA,yBAAyB,GAACT,CAA1B;AAA4B,GAA1D;;AAA2DU,EAAAA,wBAAwB,CAACV,CAAD,EAAG;AAACU,IAAAA,wBAAwB,GAACV,CAAzB;AAA2B;;AAAlH,CAAnC,EAAuJ,CAAvJ;AAA0J,IAAIW,QAAJ;AAAab,MAAM,CAACC,IAAP,CAAY,6BAAZ,EAA0C;AAACY,EAAAA,QAAQ,CAACX,CAAD,EAAG;AAACW,IAAAA,QAAQ,GAACX,CAAT;AAAW;;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAIY,aAAJ;AAAkBd,MAAM,CAACC,IAAP,CAAY,0BAAZ,EAAuC;AAACa,EAAAA,aAAa,CAACZ,CAAD,EAAG;AAACY,IAAAA,aAAa,GAACZ,CAAd;AAAgB;;AAAlC,CAAvC,EAA2E,CAA3E;AAY/7BH,MAAM,CAACgB,OAAP,CAAe;AAAA,kCAAkB;AAChC,QAAIL,QAAQ,CAACM,GAAT,CAAa,mBAAb,MAAsC,SAAtC,IAAmD,CAACP,KAAK,CAACQ,WAAN,CAAkB,SAAlB,CAAxD,EAAsF;AACrFR,MAAAA,KAAK,CAACS,uBAAN,CAA8B,SAA9B,EAAyC,GAAzC,EAA8C,SAA9C,EAAyD;AACxDC,QAAAA,OAAO,EAAE;AAD+C,OAAzD;AAGA;;AAED,QAAI,CAACX,KAAK,CAACS,WAAN,CAAkB,YAAlB,CAAL,EAAsC;AACrCT,MAAAA,KAAK,CAACY,MAAN,CAAa;AACZC,QAAAA,GAAG,EAAE,YADO;AAEZC,QAAAA,IAAI,EAAE,YAFM;AAGZC,QAAAA,QAAQ,EAAE,YAHE;AAIZC,QAAAA,MAAM,EAAE,QAJI;AAKZC,QAAAA,aAAa,EAAE,QALH;AAMZC,QAAAA,SAAS,EAAE,CANC;AAOZC,QAAAA,MAAM,EAAE,IAPI;AAQZC,QAAAA,IAAI,EAAE;AARM,OAAb;AAWAtB,MAAAA,YAAY,CAAC,YAAD,EAAe,KAAf,CAAZ;AAEA,YAAMuB,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYC,MAAM,CAACC,SAAP,CAAiB,uBAAjB,CAAZ,CAAf;AAEA,YAAMC,EAAE,GAAG9B,cAAc,CAAC+B,cAAf,CAA8BN,MAA9B,EAAsC,MAAtC,CAAX;AACA,YAAMO,SAAS,GAAG/B,UAAU,CAACgC,QAAX,CAAoB,SAApB,CAAlB;AACAD,MAAAA,SAAS,CAACE,YAAV,CAAuB,YAAvB;AAEA,YAAMC,IAAI,GAAG;AACZC,QAAAA,MAAM,EAAE,YADI;AAEZZ,QAAAA,IAAI,EAAE,WAFM;AAGZa,QAAAA,IAAI,EAAEZ,MAAM,CAACa;AAHD,OAAb;AAMA3C,MAAAA,MAAM,CAAC4C,SAAP,CAAiB,YAAjB,EAA+B,MAAM;AACpCP,QAAAA,SAAS,CAACQ,MAAV,CAAiBL,IAAjB,EAAuBL,EAAvB,EAA2B,MAAM1B,KAAK,CAACqC,aAAN,CAAoB,YAApB,EAAkC,OAAlC,EAA2C,IAA3C,CAAjC;AACA,OAFD;AAGA;;AAED,QAAIC,OAAO,CAACC,GAAR,CAAYC,UAAhB,EAA4B;AAC3B,UAAI,cAAO,cAAOzC,cAAc,CAAC,OAAD,CAArB,EAAgC0C,KAAhC,EAAP,MAAoD,CAAxD,EAA2D;AAC1DC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBC,KAApC;AACA,cAAMC,SAAS,GAAG;AACjB/B,UAAAA,IAAI,EAAE,eADW;AAEjBC,UAAAA,QAAQ,EAAE,OAFO;AAGjBC,UAAAA,MAAM,EAAE,SAHS;AAIjBC,UAAAA,aAAa,EAAE,QAJE;AAKjBC,UAAAA,SAAS,EAAE,CALM;AAMjBC,UAAAA,MAAM,EAAE;AANS,SAAlB;;AASA,YAAImB,OAAO,CAACC,GAAR,CAAYO,UAAhB,EAA4B;AAC3BD,UAAAA,SAAS,CAAC/B,IAAV,GAAiBwB,OAAO,CAACC,GAAR,CAAYO,UAA7B;AACA;;AAEDJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAASE,SAAS,CAAC/B,IAAnB,EAA0B8B,KAAtC;;AAEA,YAAIN,OAAO,CAACC,GAAR,CAAYQ,WAAhB,EAA6B;AAC5B,cAAIzC,aAAa,CAACgC,OAAO,CAACC,GAAR,CAAYQ,WAAb,CAAjB,EAA4C;AAC3C,gBAAI,CAAC/C,KAAK,CAACgD,qBAAN,CAA4BV,OAAO,CAACC,GAAR,CAAYQ,WAAxC,CAAL,EAA2D;AAC1DF,cAAAA,SAAS,CAACI,MAAV,GAAmB,CAClB;AACCC,gBAAAA,OAAO,EAAEZ,OAAO,CAACC,GAAR,CAAYQ,WADtB;AAECI,gBAAAA,QAAQ,EAAEb,OAAO,CAACC,GAAR,CAAYa,oBAAZ,KAAqC;AAFhD,eADkB,CAAnB;AAOAV,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAUL,OAAO,CAACC,GAAR,CAAYQ,WAAtB,EAAoCH,KAAhD;AACA,aATD,MASO;AACNF,cAAAA,OAAO,CAACC,GAAR,CAAY,4EAA4EU,GAAxF;AACA;AACD,WAbD,MAaO;AACNX,YAAAA,OAAO,CAACC,GAAR,CAAY,wEAAwEU,GAApF;AACA;AACD;;AAED,YAAIf,OAAO,CAACC,GAAR,CAAYe,cAAhB,EAAgC;AAC/B,cAAIC,cAAJ;;AAEA,cAAI;AACHA,YAAAA,cAAc,GAAG,IAAIC,MAAJ,YAAetD,QAAQ,CAACM,GAAT,CAAa,4BAAb,CAAf,OAAjB;AACA,WAFD,CAEE,OAAOiD,KAAP,EAAc;AACfF,YAAAA,cAAc,GAAG,IAAIC,MAAJ,CAAW,mBAAX,CAAjB;AACA;;AAED,cAAID,cAAc,CAACG,IAAf,CAAoBpB,OAAO,CAACC,GAAR,CAAYe,cAAhC,CAAJ,EAAqD;AACpD,gBAAInD,yBAAyB,CAACmC,OAAO,CAACC,GAAR,CAAYe,cAAb,CAA7B,EAA2D;AAC1DT,cAAAA,SAAS,CAAC9B,QAAV,GAAqBuB,OAAO,CAACC,GAAR,CAAYe,cAAjC;AACA,aAFD,MAEO;AACNZ,cAAAA,OAAO,CAACC,GAAR,CAAY,kFAAkFU,GAA9F;AACA;AACD,WAND,MAMO;AACNX,YAAAA,OAAO,CAACC,GAAR,CAAY,8EAA8EU,GAA1F;AACA;AACD;;AAEDX,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAaE,SAAS,CAAC9B,QAAvB,EAAkC6B,KAA9C;AAEAC,QAAAA,SAAS,CAACzB,IAAV,GAAiB,MAAjB;AAEA,cAAMuC,EAAE,GAAG3D,KAAK,CAACY,MAAN,CAAaiC,SAAb,CAAX;AAEAlD,QAAAA,QAAQ,CAACiE,WAAT,CAAqBD,EAArB,EAAyBrB,OAAO,CAACC,GAAR,CAAYC,UAArC;AAEA1C,QAAAA,YAAY,CAAC6D,EAAD,EAAK,OAAL,CAAZ;AACA,OAjED,MAiEO;AACNjB,QAAAA,OAAO,CAACC,GAAR,CAAY,iFAAiFU,GAA7F;AACA;AACD;;AAED,QAAI,OAAOf,OAAO,CAACC,GAAR,CAAYsB,YAAnB,KAAoC,QAApC,IAAgDvB,OAAO,CAACC,GAAR,CAAYsB,YAAZ,CAAyB3B,MAAzB,GAAkC,CAAtF,EAAyF;AACxF,UAAI;AACH,cAAM4B,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAW1B,OAAO,CAACC,GAAR,CAAYsB,YAAvB,CAApB;;AAEA,YAAI,CAACC,WAAW,CAACjD,GAAjB,EAAsB;AACrB6B,UAAAA,OAAO,CAACC,GAAR,CAAY,8DAA8DU,GAA1E;AACA,SAFD,MAEO,IAAI,CAACrD,KAAK,CAACS,WAAN,CAAkBqD,WAAW,CAACjD,GAA9B,CAAL,EAAyC;AAC/C6B,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BC,KAAtC;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAI,CAACE,SAAL,CAAeH,WAAf,EAA4B,IAA5B,EAAkC,CAAlC,EAAqClB,KAAjD;AACA5C,UAAAA,KAAK,CAACY,MAAN,CAAakD,WAAb;AACA;AACD,OAVD,CAUE,OAAOI,CAAP,EAAU;AACXxB,QAAAA,OAAO,CAACC,GAAR,CAAY,qDAAqDU,GAAjE,EAAsEa,CAAtE;AACA;AACD;;AAED,QAAI,cAAO,cAAOnE,cAAc,CAAC,OAAD,CAArB,EAAgC0C,KAAhC,EAAP,MAAoD,CAAxD,EAA2D;AAC1D,YAAM0B,UAAU,GAAGnE,KAAK,CAACoE,SAAN,CAAgB;AAAEvD,QAAAA,GAAG,EAAE,CAAP;AAAUE,QAAAA,QAAQ,EAAE,CAApB;AAAuBD,QAAAA,IAAI,EAAE;AAA7B,OAAhB,CAAnB;;AAEA,UAAIqD,UAAJ,EAAgB;AACfrE,QAAAA,YAAY,CAACqE,UAAU,CAACtD,GAAZ,EAAiB,CAAC,OAAD,CAAjB,CAAZ;AACA6B,QAAAA,OAAO,CAACC,GAAR,oCAAwCwB,UAAU,CAACpD,QAAX,IAAuBoD,UAAU,CAACrD,IAA1E;AACA;AACD;;AAED,QAAI,cAAO,cAAOf,cAAc,CAAC,OAAD,CAArB,EAAgC0C,KAAhC,EAAP,MAAoD,CAAxD,EAA2D;AAC1D,UAAIvC,QAAQ,CAACM,GAAT,CAAa,mBAAb,MAAsC,SAA1C,EAAqD;AACpDkC,QAAAA,OAAO,CAACC,GAAR,CAAY,8EAAZ;AACAtC,QAAAA,QAAQ,CAACgE,eAAT,CAAyB,mBAAzB,EAA8C,aAA9C;AACA;AACD;;AAEDrE,IAAAA,KAAK,CAACsE,UAAN,CAAiB,gCAAjB;;AAEA,QAAIhC,OAAO,CAACC,GAAR,CAAYgC,SAAZ,KAA0B,MAA9B,EAAsC;AACrC7B,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BC,KAAzC;AAEA,YAAMC,SAAS,GAAG;AACjBhC,QAAAA,GAAG,EAAE,gCADY;AAEjBC,QAAAA,IAAI,EAAE,gCAFW;AAGjBC,QAAAA,QAAQ,EAAE,gCAHO;AAIjBkC,QAAAA,MAAM,EAAE,CACP;AACCC,UAAAA,OAAO,EAAE,4CADV;AAECC,UAAAA,QAAQ,EAAE;AAFX,SADO,CAJS;AAUjBnC,QAAAA,MAAM,EAAE,SAVS;AAWjBC,QAAAA,aAAa,EAAE,QAXE;AAYjBC,QAAAA,SAAS,EAAE,CAZM;AAajBC,QAAAA,MAAM,EAAE,IAbS;AAcjBC,QAAAA,IAAI,EAAE;AAdW,OAAlB;AAiBAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAASE,SAAS,CAAC/B,IAAnB,EAA0B8B,KAAtC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAUE,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoBC,OAA9B,EAAwCN,KAApD;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAaE,SAAS,CAAC9B,QAAvB,EAAkC6B,KAA9C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAaE,SAAS,CAAChC,GAAvB,EAA6B+B,KAAzC;;AAEA,UAAI5C,KAAK,CAACgD,qBAAN,CAA4BH,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoBC,OAAhD,CAAJ,EAA8D;AAC7D,cAAM,IAAI3D,MAAM,CAACiF,KAAX,iBAA0B3B,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoBC,OAA9C,sBAAwE,oCAAxE,CAAN;AACA;;AAED,UAAI,CAAC/C,yBAAyB,CAAC0C,SAAS,CAAC9B,QAAX,CAA9B,EAAoD;AACnD,cAAM,IAAIxB,MAAM,CAACiF,KAAX,oBAA6B3B,SAAS,CAAC9B,QAAvC,sBAAkE,oCAAlE,CAAN;AACA;;AAEDf,MAAAA,KAAK,CAACY,MAAN,CAAaiC,SAAb;AAEAlD,MAAAA,QAAQ,CAACiE,WAAT,CAAqBf,SAAS,CAAChC,GAA/B,EAAoCgC,SAAS,CAAChC,GAA9C;AAEAf,MAAAA,YAAY,CAAC+C,SAAS,CAAChC,GAAX,EAAgB,CAAC,OAAD,CAAhB,CAAZ;;AAEA,UAAIX,QAAQ,CAACM,GAAT,CAAa,mBAAb,MAAsC,SAA1C,EAAqD;AACpDH,QAAAA,QAAQ,CAACgE,eAAT,CAAyB,mBAAzB,EAA8C,aAA9C;AACA;;AAED,aAAOjE,wBAAwB,CAACyC,SAAD,EAAY,IAAZ,CAA/B;AACA;AACD,GA5Lc;AAAA,CAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { RocketChatFile } from '../../app/file';\nimport { FileUpload } from '../../app/file-upload/server';\nimport { addUserRoles, getUsersInRole } from '../../app/authorization/server';\nimport { Users, Rooms } from '../../app/models/server';\nimport { settings } from '../../app/settings/server';\nimport { checkUsernameAvailability, addUserToDefaultChannels } from '../../app/lib/server';\nimport { Settings } from '../../app/models/server/raw';\nimport { validateEmail } from '../../lib/emailValidator';\n\nMeteor.startup(async function () {\n\tif (settings.get('Show_Setup_Wizard') === 'pending' && !Rooms.findOneById('GENERAL')) {\n\t\tRooms.createWithIdTypeAndName('GENERAL', 'c', 'general', {\n\t\t\tdefault: true,\n\t\t});\n\t}\n\n\tif (!Users.findOneById('rocket.cat')) {\n\t\tUsers.create({\n\t\t\t_id: 'rocket.cat',\n\t\t\tname: 'Rocket.Cat',\n\t\t\tusername: 'rocket.cat',\n\t\t\tstatus: 'online',\n\t\t\tstatusDefault: 'online',\n\t\t\tutcOffset: 0,\n\t\t\tactive: true,\n\t\t\ttype: 'bot',\n\t\t});\n\n\t\taddUserRoles('rocket.cat', 'bot');\n\n\t\tconst buffer = Buffer.from(Assets.getBinary('avatars/rocketcat.png'));\n\n\t\tconst rs = RocketChatFile.bufferToStream(buffer, 'utf8');\n\t\tconst fileStore = FileUpload.getStore('Avatars');\n\t\tfileStore.deleteByName('rocket.cat');\n\n\t\tconst file = {\n\t\t\tuserId: 'rocket.cat',\n\t\t\ttype: 'image/png',\n\t\t\tsize: buffer.length,\n\t\t};\n\n\t\tMeteor.runAsUser('rocket.cat', () => {\n\t\t\tfileStore.insert(file, rs, () => Users.setAvatarData('rocket.cat', 'local', null));\n\t\t});\n\t}\n\n\tif (process.env.ADMIN_PASS) {\n\t\tif ((await (await getUsersInRole('admin')).count()) === 0) {\n\t\t\tconsole.log('Inserting admin user:'.green);\n\t\t\tconst adminUser = {\n\t\t\t\tname: 'Administrator',\n\t\t\t\tusername: 'admin',\n\t\t\t\tstatus: 'offline',\n\t\t\t\tstatusDefault: 'online',\n\t\t\t\tutcOffset: 0,\n\t\t\t\tactive: true,\n\t\t\t};\n\n\t\t\tif (process.env.ADMIN_NAME) {\n\t\t\t\tadminUser.name = process.env.ADMIN_NAME;\n\t\t\t}\n\n\t\t\tconsole.log(`Name: ${adminUser.name}`.green);\n\n\t\t\tif (process.env.ADMIN_EMAIL) {\n\t\t\t\tif (validateEmail(process.env.ADMIN_EMAIL)) {\n\t\t\t\t\tif (!Users.findOneByEmailAddress(process.env.ADMIN_EMAIL)) {\n\t\t\t\t\t\tadminUser.emails = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddress: process.env.ADMIN_EMAIL,\n\t\t\t\t\t\t\t\tverified: process.env.ADMIN_EMAIL_VERIFIED === 'true',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tconsole.log(`Email: ${process.env.ADMIN_EMAIL}`.green);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('Email provided already exists; Ignoring environment variables ADMIN_EMAIL'.red);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Email provided is invalid; Ignoring environment variables ADMIN_EMAIL'.red);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (process.env.ADMIN_USERNAME) {\n\t\t\t\tlet nameValidation;\n\n\t\t\t\ttry {\n\t\t\t\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t\t\t\t}\n\n\t\t\t\tif (nameValidation.test(process.env.ADMIN_USERNAME)) {\n\t\t\t\t\tif (checkUsernameAvailability(process.env.ADMIN_USERNAME)) {\n\t\t\t\t\t\tadminUser.username = process.env.ADMIN_USERNAME;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('Username provided already exists; Ignoring environment variables ADMIN_USERNAME'.red);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Username provided is invalid; Ignoring environment variables ADMIN_USERNAME'.red);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.log(`Username: ${adminUser.username}`.green);\n\n\t\t\tadminUser.type = 'user';\n\n\t\t\tconst id = Users.create(adminUser);\n\n\t\t\tAccounts.setPassword(id, process.env.ADMIN_PASS);\n\n\t\t\taddUserRoles(id, 'admin');\n\t\t} else {\n\t\t\tconsole.log('Users with admin role already exist; Ignoring environment variables ADMIN_PASS'.red);\n\t\t}\n\t}\n\n\tif (typeof process.env.INITIAL_USER === 'string' && process.env.INITIAL_USER.length > 0) {\n\t\ttry {\n\t\t\tconst initialUser = JSON.parse(process.env.INITIAL_USER);\n\n\t\t\tif (!initialUser._id) {\n\t\t\t\tconsole.log('No _id provided; Ignoring environment variable INITIAL_USER'.red);\n\t\t\t} else if (!Users.findOneById(initialUser._id)) {\n\t\t\t\tconsole.log('Inserting initial user:'.green);\n\t\t\t\tconsole.log(JSON.stringify(initialUser, null, 2).green);\n\t\t\t\tUsers.create(initialUser);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log('Error processing environment variable INITIAL_USER'.red, e);\n\t\t}\n\t}\n\n\tif ((await (await getUsersInRole('admin')).count()) === 0) {\n\t\tconst oldestUser = Users.getOldest({ _id: 1, username: 1, name: 1 });\n\n\t\tif (oldestUser) {\n\t\t\taddUserRoles(oldestUser._id, ['admin']);\n\t\t\tconsole.log(`No admins are found. Set ${oldestUser.username || oldestUser.name} as admin for being the oldest user`);\n\t\t}\n\t}\n\n\tif ((await (await getUsersInRole('admin')).count()) !== 0) {\n\t\tif (settings.get('Show_Setup_Wizard') === 'pending') {\n\t\t\tconsole.log('Setting Setup Wizard to \"in_progress\" because, at least, one admin was found');\n\t\t\tSettings.updateValueById('Show_Setup_Wizard', 'in_progress');\n\t\t}\n\t}\n\n\tUsers.removeById('rocketchat.internal.admin.test');\n\n\tif (process.env.TEST_MODE === 'true') {\n\t\tconsole.log('Inserting admin test user:'.green);\n\n\t\tconst adminUser = {\n\t\t\t_id: 'rocketchat.internal.admin.test',\n\t\t\tname: 'RocketChat Internal Admin Test',\n\t\t\tusername: 'rocketchat.internal.admin.test',\n\t\t\temails: [\n\t\t\t\t{\n\t\t\t\t\taddress: 'rocketchat.internal.admin.test@rocket.chat',\n\t\t\t\t\tverified: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tstatus: 'offline',\n\t\t\tstatusDefault: 'online',\n\t\t\tutcOffset: 0,\n\t\t\tactive: true,\n\t\t\ttype: 'user',\n\t\t};\n\n\t\tconsole.log(`Name: ${adminUser.name}`.green);\n\t\tconsole.log(`Email: ${adminUser.emails[0].address}`.green);\n\t\tconsole.log(`Username: ${adminUser.username}`.green);\n\t\tconsole.log(`Password: ${adminUser._id}`.green);\n\n\t\tif (Users.findOneByEmailAddress(adminUser.emails[0].address)) {\n\t\t\tthrow new Meteor.Error(`Email ${adminUser.emails[0].address} already exists`, \"Rocket.Chat can't run in test mode\");\n\t\t}\n\n\t\tif (!checkUsernameAvailability(adminUser.username)) {\n\t\t\tthrow new Meteor.Error(`Username ${adminUser.username} already exists`, \"Rocket.Chat can't run in test mode\");\n\t\t}\n\n\t\tUsers.create(adminUser);\n\n\t\tAccounts.setPassword(adminUser._id, adminUser._id);\n\n\t\taddUserRoles(adminUser._id, ['admin']);\n\n\t\tif (settings.get('Show_Setup_Wizard') === 'pending') {\n\t\t\tSettings.updateValueById('Show_Setup_Wizard', 'in_progress');\n\t\t}\n\n\t\treturn addUserToDefaultChannels(adminUser, true);\n\t}\n});\n"]},"sourceType":"module","hash":"aebd3749ab7040613ef8fe790304677e2c684c58"}

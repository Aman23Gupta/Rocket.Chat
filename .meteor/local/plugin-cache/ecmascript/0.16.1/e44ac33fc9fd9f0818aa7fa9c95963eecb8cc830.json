{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/rooms.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/lib/rooms.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/rooms.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/api/lib/rooms.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/lib/rooms.js"}},"code":"module.export({\n  findRooms: () => findRooms\n});\nlet LivechatRooms, LivechatDepartment;\nmodule.link(\"../../../../models/server/raw\", {\n  LivechatRooms(v) {\n    LivechatRooms = v;\n  },\n\n  LivechatDepartment(v) {\n    LivechatDepartment = v;\n  }\n\n}, 0);\n\nfunction findRooms(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      agents,\n      roomName,\n      departmentId,\n      open,\n      createdAt,\n      closedAt,\n      tags,\n      customFields,\n      onhold,\n      options: {\n        offset,\n        count,\n        fields,\n        sort\n      }\n    } = _ref;\n    const cursor = LivechatRooms.findRoomsWithCriteria({\n      agents,\n      roomName,\n      departmentId,\n      open,\n      createdAt,\n      closedAt,\n      tags,\n      customFields,\n      onhold: ['t', 'true', '1'].includes(onhold),\n      options: {\n        sort: sort || {\n          ts: -1\n        },\n        offset,\n        count,\n        fields\n      }\n    });\n    const total = Promise.await(cursor.count());\n    const rooms = Promise.await(cursor.toArray());\n    const departmentsIds = [...new Set(rooms.map(room => room.departmentId).filter(Boolean))];\n\n    if (departmentsIds.length) {\n      const departments = Promise.await(LivechatDepartment.findInIds(departmentsIds, {\n        fields: {\n          name: 1\n        }\n      }).toArray());\n      rooms.forEach(room => {\n        if (!room.departmentId) {\n          return;\n        }\n\n        const department = departments.find(dept => dept._id === room.departmentId);\n\n        if (department) {\n          room.department = department;\n        }\n      });\n    }\n\n    return {\n      rooms,\n      count: rooms.length,\n      offset,\n      total\n    };\n  });\n}","map":{"version":3,"sources":["app/livechat/server/api/lib/rooms.js"],"names":["module","export","findRooms","LivechatRooms","LivechatDepartment","link","v","agents","roomName","departmentId","open","createdAt","closedAt","tags","customFields","onhold","options","offset","count","fields","sort","cursor","findRoomsWithCriteria","includes","ts","total","rooms","toArray","departmentsIds","Set","map","room","filter","Boolean","length","departments","findInIds","name","forEach","department","find","dept","_id"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,SAAS,EAAC,MAAIA;AAAf,CAAd;AAAyC,IAAIC,aAAJ,EAAkBC,kBAAlB;AAAqCJ,MAAM,CAACK,IAAP,CAAY,+BAAZ,EAA4C;AAACF,EAAAA,aAAa,CAACG,CAAD,EAAG;AAACH,IAAAA,aAAa,GAACG,CAAd;AAAgB,GAAlC;;AAAmCF,EAAAA,kBAAkB,CAACE,CAAD,EAAG;AAACF,IAAAA,kBAAkB,GAACE,CAAnB;AAAqB;;AAA9E,CAA5C,EAA4H,CAA5H;;AAEvE,SAAeJ,SAAf;AAAA,kCAWJ;AAAA,QAX6B;AAC/BK,MAAAA,MAD+B;AAE/BC,MAAAA,QAF+B;AAG/BC,MAAAA,YAH+B;AAI/BC,MAAAA,IAJ+B;AAK/BC,MAAAA,SAL+B;AAM/BC,MAAAA,QAN+B;AAO/BC,MAAAA,IAP+B;AAQ/BC,MAAAA,YAR+B;AAS/BC,MAAAA,MAT+B;AAU/BC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,KAAV;AAAiBC,QAAAA,MAAjB;AAAyBC,QAAAA;AAAzB;AAVsB,KAW7B;AACF,UAAMC,MAAM,GAAGlB,aAAa,CAACmB,qBAAd,CAAoC;AAClDf,MAAAA,MADkD;AAElDC,MAAAA,QAFkD;AAGlDC,MAAAA,YAHkD;AAIlDC,MAAAA,IAJkD;AAKlDC,MAAAA,SALkD;AAMlDC,MAAAA,QANkD;AAOlDC,MAAAA,IAPkD;AAQlDC,MAAAA,YARkD;AASlDC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,MAAN,EAAc,GAAd,EAAmBQ,QAAnB,CAA4BR,MAA5B,CAT0C;AAUlDC,MAAAA,OAAO,EAAE;AACRI,QAAAA,IAAI,EAAEA,IAAI,IAAI;AAAEI,UAAAA,EAAE,EAAE,CAAC;AAAP,SADN;AAERP,QAAAA,MAFQ;AAGRC,QAAAA,KAHQ;AAIRC,QAAAA;AAJQ;AAVyC,KAApC,CAAf;AAkBA,UAAMM,KAAK,iBAASJ,MAAM,CAACH,KAAP,EAAT,CAAX;AAEA,UAAMQ,KAAK,iBAASL,MAAM,CAACM,OAAP,EAAT,CAAX;AAEA,UAAMC,cAAc,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACtB,YAAzB,EAAuCuB,MAAvC,CAA8CC,OAA9C,CAAR,CAAJ,CAAvB;;AACA,QAAIL,cAAc,CAACM,MAAnB,EAA2B;AAC1B,YAAMC,WAAW,iBAAS/B,kBAAkB,CAACgC,SAAnB,CAA6BR,cAA7B,EAA6C;AACtET,QAAAA,MAAM,EAAE;AAAEkB,UAAAA,IAAI,EAAE;AAAR;AAD8D,OAA7C,EAEvBV,OAFuB,EAAT,CAAjB;AAIAD,MAAAA,KAAK,CAACY,OAAN,CAAeP,IAAD,IAAU;AACvB,YAAI,CAACA,IAAI,CAACtB,YAAV,EAAwB;AACvB;AACA;;AACD,cAAM8B,UAAU,GAAGJ,WAAW,CAACK,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaX,IAAI,CAACtB,YAA7C,CAAnB;;AACA,YAAI8B,UAAJ,EAAgB;AACfR,UAAAA,IAAI,CAACQ,UAAL,GAAkBA,UAAlB;AACA;AACD,OARD;AASA;;AACD,WAAO;AACNb,MAAAA,KADM;AAENR,MAAAA,KAAK,EAAEQ,KAAK,CAACQ,MAFP;AAGNjB,MAAAA,MAHM;AAINQ,MAAAA;AAJM,KAAP;AAMA,GAxDM;AAAA","sourcesContent":["import { LivechatRooms, LivechatDepartment } from '../../../../models/server/raw';\n\nexport async function findRooms({\n\tagents,\n\troomName,\n\tdepartmentId,\n\topen,\n\tcreatedAt,\n\tclosedAt,\n\ttags,\n\tcustomFields,\n\tonhold,\n\toptions: { offset, count, fields, sort },\n}) {\n\tconst cursor = LivechatRooms.findRoomsWithCriteria({\n\t\tagents,\n\t\troomName,\n\t\tdepartmentId,\n\t\topen,\n\t\tcreatedAt,\n\t\tclosedAt,\n\t\ttags,\n\t\tcustomFields,\n\t\tonhold: ['t', 'true', '1'].includes(onhold),\n\t\toptions: {\n\t\t\tsort: sort || { ts: -1 },\n\t\t\toffset,\n\t\t\tcount,\n\t\t\tfields,\n\t\t},\n\t});\n\n\tconst total = await cursor.count();\n\n\tconst rooms = await cursor.toArray();\n\n\tconst departmentsIds = [...new Set(rooms.map((room) => room.departmentId).filter(Boolean))];\n\tif (departmentsIds.length) {\n\t\tconst departments = await LivechatDepartment.findInIds(departmentsIds, {\n\t\t\tfields: { name: 1 },\n\t\t}).toArray();\n\n\t\trooms.forEach((room) => {\n\t\t\tif (!room.departmentId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst department = departments.find((dept) => dept._id === room.departmentId);\n\t\t\tif (department) {\n\t\t\t\troom.department = department;\n\t\t\t}\n\t\t});\n\t}\n\treturn {\n\t\trooms,\n\t\tcount: rooms.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"]},"sourceType":"module","hash":"e44ac33fc9fd9f0818aa7fa9c95963eecb8cc830"}

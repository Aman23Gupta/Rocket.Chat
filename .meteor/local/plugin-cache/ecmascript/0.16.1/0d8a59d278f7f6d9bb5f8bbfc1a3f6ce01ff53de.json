{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/sendMessageBySMS.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/sendMessageBySMS.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/sendMessageBySMS.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/livechat/server/sendMessageBySMS.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/sendMessageBySMS.js"}},"code":"let callbacks;\nmodule.link(\"../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 1);\nlet SMS;\nmodule.link(\"../../sms\", {\n  SMS(v) {\n    SMS = v;\n  }\n\n}, 2);\nlet LivechatVisitors;\nmodule.link(\"../../models\", {\n  LivechatVisitors(v) {\n    LivechatVisitors = v;\n  }\n\n}, 3);\nlet normalizeMessageFileUpload;\nmodule.link(\"../../utils/server/functions/normalizeMessageFileUpload\", {\n  normalizeMessageFileUpload(v) {\n    normalizeMessageFileUpload = v;\n  }\n\n}, 4);\ncallbacks.add('afterSaveMessage', function (message, room) {\n  // skips this callback if the message was edited\n  if (message.editedAt) {\n    return message;\n  }\n\n  if (!SMS.enabled) {\n    return message;\n  } // only send the sms by SMS if it is a livechat room with SMS set to true\n\n\n  if (!(typeof room.t !== 'undefined' && room.t === 'l' && room.sms && room.v && room.v.token)) {\n    return message;\n  } // if the message has a token, it was sent from the visitor, so ignore it\n\n\n  if (message.token) {\n    return message;\n  } // if the message has a type means it is a special message (like the closing comment), so skips\n\n\n  if (message.t) {\n    return message;\n  }\n\n  let extraData;\n\n  if (message.file) {\n    message = Promise.await(normalizeMessageFileUpload(message));\n    const {\n      fileUpload,\n      rid,\n      u: {\n        _id: userId\n      } = {}\n    } = message;\n    extraData = Object.assign({}, {\n      rid,\n      userId,\n      fileUpload\n    });\n  }\n\n  if (message.location) {\n    const {\n      location\n    } = message;\n    extraData = Object.assign({}, extraData, {\n      location\n    });\n  }\n\n  const SMSService = SMS.getService(settings.get('SMS_Service'));\n\n  if (!SMSService) {\n    return message;\n  }\n\n  const visitor = LivechatVisitors.getVisitorByToken(room.v.token);\n\n  if (!visitor || !visitor.phone || visitor.phone.length === 0) {\n    return message;\n  }\n\n  SMSService.send(room.sms.from, visitor.phone[0].phoneNumber, message.msg, extraData);\n  return message;\n}, callbacks.priority.LOW, 'sendMessageBySms');","map":{"version":3,"sources":["app/livechat/server/sendMessageBySMS.js"],"names":["callbacks","module","link","v","settings","SMS","LivechatVisitors","normalizeMessageFileUpload","add","message","room","editedAt","enabled","t","sms","token","extraData","file","Promise","await","fileUpload","rid","u","_id","userId","Object","assign","location","SMSService","getService","get","visitor","getVisitorByToken","phone","length","send","from","phoneNumber","msg","priority","LOW"],"mappings":"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","sourcesContent":["import { callbacks } from '../../../lib/callbacks';\nimport { settings } from '../../settings';\nimport { SMS } from '../../sms';\nimport { LivechatVisitors } from '../../models';\nimport { normalizeMessageFileUpload } from '../../utils/server/functions/normalizeMessageFileUpload';\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tfunction (message, room) {\n\t\t// skips this callback if the message was edited\n\t\tif (message.editedAt) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!SMS.enabled) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// only send the sms by SMS if it is a livechat room with SMS set to true\n\t\tif (!(typeof room.t !== 'undefined' && room.t === 'l' && room.sms && room.v && room.v.token)) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// if the message has a token, it was sent from the visitor, so ignore it\n\t\tif (message.token) {\n\t\t\treturn message;\n\t\t}\n\n\t\t// if the message has a type means it is a special message (like the closing comment), so skips\n\t\tif (message.t) {\n\t\t\treturn message;\n\t\t}\n\n\t\tlet extraData;\n\t\tif (message.file) {\n\t\t\tmessage = Promise.await(normalizeMessageFileUpload(message));\n\t\t\tconst { fileUpload, rid, u: { _id: userId } = {} } = message;\n\t\t\textraData = Object.assign({}, { rid, userId, fileUpload });\n\t\t}\n\n\t\tif (message.location) {\n\t\t\tconst { location } = message;\n\t\t\textraData = Object.assign({}, extraData, { location });\n\t\t}\n\n\t\tconst SMSService = SMS.getService(settings.get('SMS_Service'));\n\n\t\tif (!SMSService) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst visitor = LivechatVisitors.getVisitorByToken(room.v.token);\n\n\t\tif (!visitor || !visitor.phone || visitor.phone.length === 0) {\n\t\t\treturn message;\n\t\t}\n\n\t\tSMSService.send(room.sms.from, visitor.phone[0].phoneNumber, message.msg, extraData);\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'sendMessageBySms',\n);\n"]},"sourceType":"module","hash":"0d8a59d278f7f6d9bb5f8bbfc1a3f6ce01ff53de"}

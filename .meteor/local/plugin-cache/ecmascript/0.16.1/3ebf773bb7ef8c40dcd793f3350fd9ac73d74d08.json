{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v227.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/startup/migrations/v227.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v227.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/server/startup/migrations/v227.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v227.js"}},"code":"let addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 0);\nlet CannedResponse;\nmodule.link(\"../../../ee/app/models/server\", {\n  CannedResponse(v) {\n    CannedResponse = v;\n  }\n\n}, 1);\n\nfunction migrateCannedResponses() {\n  CannedResponse.tryDropIndex({\n    shortcut: 1\n  });\n  const responses1 = Promise.await(CannedResponse.model.rawCollection().aggregate([{\n    $match: {\n      shortcut: {\n        $exists: true\n      }\n    }\n  }, {\n    $group: {\n      _id: {\n        shortcut: '$shortcut'\n      },\n      uniqueIds: {\n        $addToSet: '$_id'\n      },\n      count: {\n        $sum: 1\n      }\n    }\n  }, {\n    $match: {\n      count: {\n        $gte: 2\n      }\n    }\n  }]).toArray());\n  const operations = [];\n\n  for (const response of responses1) {\n    const {\n      _id: {\n        shortcut: key\n      },\n      uniqueIds: ids\n    } = response;\n    let currentIndex = 0;\n\n    for (const id of ids) {\n      if (!currentIndex) {\n        currentIndex += 1;\n        continue;\n      }\n\n      operations.push({\n        updateOne: {\n          filter: {\n            _id: id\n          },\n          update: {\n            $set: {\n              shortcut: \"\".concat(key, \"-\").concat(currentIndex)\n            }\n          }\n        }\n      });\n      currentIndex += 1;\n    }\n  }\n\n  if (operations.length) {\n    Promise.await(CannedResponse.model.rawCollection().bulkWrite(operations, {\n      ordered: false\n    }));\n  }\n\n  CannedResponse.tryEnsureIndex({\n    shortcut: 1\n  }, {\n    unique: true\n  });\n}\n\naddMigration({\n  version: 227,\n\n  up() {\n    migrateCannedResponses();\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v227.js"],"names":["addMigration","module","link","v","CannedResponse","migrateCannedResponses","tryDropIndex","shortcut","responses1","Promise","await","model","rawCollection","aggregate","$match","$exists","$group","_id","uniqueIds","$addToSet","count","$sum","$gte","toArray","operations","response","key","ids","currentIndex","id","push","updateOne","filter","update","$set","length","bulkWrite","ordered","tryEnsureIndex","unique","version","up"],"mappings":"AAAA,IAAIA,YAAJ;AAAiBC,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACF,EAAAA,YAAY,CAACG,CAAD,EAAG;AAACH,IAAAA,YAAY,GAACG,CAAb;AAAe;;AAAhC,CAAnC,EAAqE,CAArE;AAAwE,IAAIC,cAAJ;AAAmBH,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAACE,EAAAA,cAAc,CAACD,CAAD,EAAG;AAACC,IAAAA,cAAc,GAACD,CAAf;AAAiB;;AAApC,CAA5C,EAAkF,CAAlF;;AAG5G,SAASE,sBAAT,GAAkC;AACjCD,EAAAA,cAAc,CAACE,YAAf,CAA4B;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAA5B;AAEA,QAAMC,UAAU,GAAGC,OAAO,CAACC,KAAR,CAClBN,cAAc,CAACO,KAAf,CACEC,aADF,GAEEC,SAFF,CAEY,CACV;AAAEC,IAAAA,MAAM,EAAE;AAAEP,MAAAA,QAAQ,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX;AAAZ;AAAV,GADU,EAEV;AACCC,IAAAA,MAAM,EAAE;AACPC,MAAAA,GAAG,EAAE;AAAEV,QAAAA,QAAQ,EAAE;AAAZ,OADE;AAEPW,MAAAA,SAAS,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFJ;AAGPC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAHA;AADT,GAFU,EASV;AAAEP,IAAAA,MAAM,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAEE,QAAAA,IAAI,EAAE;AAAR;AAAT;AAAV,GATU,CAFZ,EAaEC,OAbF,EADkB,CAAnB;AAiBA,QAAMC,UAAU,GAAG,EAAnB;;AAEA,OAAK,MAAMC,QAAX,IAAuBjB,UAAvB,EAAmC;AAClC,UAAM;AACLS,MAAAA,GAAG,EAAE;AAAEV,QAAAA,QAAQ,EAAEmB;AAAZ,OADA;AAELR,MAAAA,SAAS,EAAES;AAFN,QAGFF,QAHJ;AAIA,QAAIG,YAAY,GAAG,CAAnB;;AAEA,SAAK,MAAMC,EAAX,IAAiBF,GAAjB,EAAsB;AACrB,UAAI,CAACC,YAAL,EAAmB;AAClBA,QAAAA,YAAY,IAAI,CAAhB;AACA;AACA;;AAEDJ,MAAAA,UAAU,CAACM,IAAX,CAAgB;AACfC,QAAAA,SAAS,EAAE;AACVC,UAAAA,MAAM,EAAE;AAAEf,YAAAA,GAAG,EAAEY;AAAP,WADE;AAEVI,UAAAA,MAAM,EAAE;AACPC,YAAAA,IAAI,EAAE;AACL3B,cAAAA,QAAQ,YAAKmB,GAAL,cAAYE,YAAZ;AADH;AADC;AAFE;AADI,OAAhB;AAUAA,MAAAA,YAAY,IAAI,CAAhB;AACA;AACD;;AAED,MAAIJ,UAAU,CAACW,MAAf,EAAuB;AACtB1B,IAAAA,OAAO,CAACC,KAAR,CAAcN,cAAc,CAACO,KAAf,CAAqBC,aAArB,GAAqCwB,SAArC,CAA+CZ,UAA/C,EAA2D;AAAEa,MAAAA,OAAO,EAAE;AAAX,KAA3D,CAAd;AACA;;AAEDjC,EAAAA,cAAc,CAACkC,cAAf,CAA8B;AAAE/B,IAAAA,QAAQ,EAAE;AAAZ,GAA9B,EAA+C;AAAEgC,IAAAA,MAAM,EAAE;AAAV,GAA/C;AACA;;AAEDvC,YAAY,CAAC;AACZwC,EAAAA,OAAO,EAAE,GADG;;AAEZC,EAAAA,EAAE,GAAG;AACJpC,IAAAA,sBAAsB;AACtB;;AAJW,CAAD,CAAZ","sourcesContent":["import { addMigration } from '../../lib/migrations';\nimport { CannedResponse } from '../../../ee/app/models/server';\n\nfunction migrateCannedResponses() {\n\tCannedResponse.tryDropIndex({ shortcut: 1 });\n\n\tconst responses1 = Promise.await(\n\t\tCannedResponse.model\n\t\t\t.rawCollection()\n\t\t\t.aggregate([\n\t\t\t\t{ $match: { shortcut: { $exists: true } } },\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: { shortcut: '$shortcut' },\n\t\t\t\t\t\tuniqueIds: { $addToSet: '$_id' },\n\t\t\t\t\t\tcount: { $sum: 1 },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{ $match: { count: { $gte: 2 } } },\n\t\t\t])\n\t\t\t.toArray(),\n\t);\n\n\tconst operations = [];\n\n\tfor (const response of responses1) {\n\t\tconst {\n\t\t\t_id: { shortcut: key },\n\t\t\tuniqueIds: ids,\n\t\t} = response;\n\t\tlet currentIndex = 0;\n\n\t\tfor (const id of ids) {\n\t\t\tif (!currentIndex) {\n\t\t\t\tcurrentIndex += 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\toperations.push({\n\t\t\t\tupdateOne: {\n\t\t\t\t\tfilter: { _id: id },\n\t\t\t\t\tupdate: {\n\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\tshortcut: `${key}-${currentIndex}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\tcurrentIndex += 1;\n\t\t}\n\t}\n\n\tif (operations.length) {\n\t\tPromise.await(CannedResponse.model.rawCollection().bulkWrite(operations, { ordered: false }));\n\t}\n\n\tCannedResponse.tryEnsureIndex({ shortcut: 1 }, { unique: true });\n}\n\naddMigration({\n\tversion: 227,\n\tup() {\n\t\tmigrateCannedResponses();\n\t},\n});\n"]},"sourceType":"module","hash":"3ebf773bb7ef8c40dcd793f3350fd9ac73d74d08"}

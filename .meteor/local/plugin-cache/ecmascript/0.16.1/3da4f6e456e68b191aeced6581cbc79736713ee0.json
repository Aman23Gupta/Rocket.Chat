{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/api.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/api.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/api.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/api/server/api.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/api.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  defaultRateLimiterOptions: () => defaultRateLimiterOptions,\n  API: () => API,\n  APIClass: () => APIClass\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet DDPCommon;\nmodule.link(\"meteor/ddp-common\", {\n  DDPCommon(v) {\n    DDPCommon = v;\n  }\n\n}, 2);\nlet DDP;\nmodule.link(\"meteor/ddp\", {\n  DDP(v) {\n    DDP = v;\n  }\n\n}, 3);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 4);\nlet Restivus;\nmodule.link(\"meteor/rocketchat:restivus\", {\n  Restivus(v) {\n    Restivus = v;\n  }\n\n}, 5);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 6);\nlet RateLimiter;\nmodule.link(\"meteor/rate-limit\", {\n  RateLimiter(v) {\n    RateLimiter = v;\n  }\n\n}, 7);\nlet Logger;\nmodule.link(\"../../../server/lib/logger/Logger\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 8);\nlet getRestPayload;\nmodule.link(\"../../../server/lib/logger/logPayloads\", {\n  getRestPayload(v) {\n    getRestPayload = v;\n  }\n\n}, 9);\nlet settings;\nmodule.link(\"../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 10);\nlet metrics;\nmodule.link(\"../../metrics/server\", {\n  metrics(v) {\n    metrics = v;\n  }\n\n}, 11);\nlet hasPermission, hasAllPermission;\nmodule.link(\"../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  hasAllPermission(v) {\n    hasAllPermission = v;\n  }\n\n}, 12);\nlet getDefaultUserFields;\nmodule.link(\"../../utils/server/functions/getDefaultUserFields\", {\n  getDefaultUserFields(v) {\n    getDefaultUserFields = v;\n  }\n\n}, 13);\nlet checkCodeForUser;\nmodule.link(\"../../2fa/server/code\", {\n  checkCodeForUser(v) {\n    checkCodeForUser = v;\n  }\n\n}, 14);\nconst logger = new Logger('API');\nconst rateLimiterDictionary = {};\nconst defaultRateLimiterOptions = {\n  numRequestsAllowed: settings.get('API_Enable_Rate_Limiter_Limit_Calls_Default'),\n  intervalTimeInMS: settings.get('API_Enable_Rate_Limiter_Limit_Time_Default')\n};\nlet prometheusAPIUserAgent = false;\nlet API = {};\n\nconst getRequestIP = req => {\n  var _req$connection, _req$connection2;\n\n  const socket = req.socket || ((_req$connection = req.connection) === null || _req$connection === void 0 ? void 0 : _req$connection.socket);\n  const remoteAddress = req.headers['x-real-ip'] || (socket === null || socket === void 0 ? void 0 : socket.remoteAddress) || ((_req$connection2 = req.connection) === null || _req$connection2 === void 0 ? void 0 : _req$connection2.remoteAddress) || null;\n  let forwardedFor = req.headers['x-forwarded-for'];\n\n  if (!socket) {\n    return remoteAddress || forwardedFor || null;\n  }\n\n  const httpForwardedCount = parseInt(process.env.HTTP_FORWARDED_COUNT) || 0;\n\n  if (httpForwardedCount <= 0) {\n    return remoteAddress;\n  }\n\n  if (!_.isString(forwardedFor)) {\n    return remoteAddress;\n  }\n\n  forwardedFor = forwardedFor.trim().split(/\\s*,\\s*/);\n\n  if (httpForwardedCount > forwardedFor.length) {\n    return remoteAddress;\n  }\n\n  return forwardedFor[forwardedFor.length - httpForwardedCount];\n};\n\nclass APIClass extends Restivus {\n  constructor(properties) {\n    super(properties);\n    this.apiPath = properties.apiPath;\n    this.authMethods = [];\n    this.fieldSeparator = '.';\n    this.defaultFieldsToExclude = {\n      joinCode: 0,\n      members: 0,\n      importIds: 0,\n      e2e: 0\n    };\n    this.defaultLimitedUserFieldsToExclude = {\n      avatarOrigin: 0,\n      emails: 0,\n      phone: 0,\n      statusConnection: 0,\n      createdAt: 0,\n      lastLogin: 0,\n      services: 0,\n      requirePasswordChange: 0,\n      requirePasswordChangeReason: 0,\n      roles: 0,\n      statusDefault: 0,\n      _updatedAt: 0,\n      settings: 0\n    };\n    this.limitedUserFieldsToExclude = this.defaultLimitedUserFieldsToExclude;\n    this.limitedUserFieldsToExcludeIfIsPrivilegedUser = {\n      services: 0\n    };\n  }\n\n  setLimitedCustomFields(customFields) {\n    const nonPublicFieds = customFields.reduce((acc, customField) => {\n      acc[\"customFields.\".concat(customField)] = 0;\n      return acc;\n    }, {});\n    this.limitedUserFieldsToExclude = _objectSpread(_objectSpread({}, this.defaultLimitedUserFieldsToExclude), nonPublicFieds);\n  }\n\n  hasHelperMethods() {\n    return API.helperMethods.size !== 0;\n  }\n\n  getHelperMethods() {\n    return API.helperMethods;\n  }\n\n  getHelperMethod(name) {\n    return API.helperMethods.get(name);\n  }\n\n  addAuthMethod(method) {\n    this.authMethods.push(method);\n  }\n\n  shouldAddRateLimitToRoute(options) {\n    const {\n      version\n    } = this._config;\n    const {\n      rateLimiterOptions\n    } = options;\n    return (typeof rateLimiterOptions === 'object' || rateLimiterOptions === undefined) && Boolean(version) && !process.env.TEST_MODE && Boolean(defaultRateLimiterOptions.numRequestsAllowed && defaultRateLimiterOptions.intervalTimeInMS);\n  }\n\n  success() {\n    let result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (_.isObject(result)) {\n      result.success = true;\n    }\n\n    result = {\n      statusCode: 200,\n      body: result\n    };\n    return result;\n  }\n\n  failure(result, errorType, stack, error) {\n    if (_.isObject(result)) {\n      result.success = false;\n    } else {\n      result = {\n        success: false,\n        error: result,\n        stack\n      };\n\n      if (errorType) {\n        result.errorType = errorType;\n      }\n\n      if (error && error.details) {\n        try {\n          result.details = JSON.parse(error.details);\n        } catch (e) {\n          result.details = error.details;\n        }\n      }\n    }\n\n    result = {\n      statusCode: 400,\n      body: result\n    };\n    return result;\n  }\n\n  notFound(msg) {\n    return {\n      statusCode: 404,\n      body: {\n        success: false,\n        error: msg || 'Resource not found'\n      }\n    };\n  }\n\n  internalError(msg) {\n    return {\n      statusCode: 500,\n      body: {\n        success: false,\n        error: msg || 'Internal error occured'\n      }\n    };\n  }\n\n  unauthorized(msg) {\n    return {\n      statusCode: 403,\n      body: {\n        success: false,\n        error: msg || 'unauthorized'\n      }\n    };\n  }\n\n  tooManyRequests(msg) {\n    return {\n      statusCode: 429,\n      body: {\n        success: false,\n        error: msg || 'Too many requests'\n      }\n    };\n  }\n\n  getRateLimiter(route) {\n    return rateLimiterDictionary[route];\n  }\n\n  shouldVerifyRateLimit(route, userId) {\n    return rateLimiterDictionary.hasOwnProperty(route) && settings.get('API_Enable_Rate_Limiter') === true && (process.env.NODE_ENV !== 'development' || settings.get('API_Enable_Rate_Limiter_Dev') === true) && !(userId && hasPermission(userId, 'api-bypass-rate-limit'));\n  }\n\n  enforceRateLimit(objectForRateLimitMatch, request, response, userId) {\n    if (!this.shouldVerifyRateLimit(objectForRateLimitMatch.route, userId)) {\n      return;\n    }\n\n    rateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.increment(objectForRateLimitMatch);\n    const attemptResult = rateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.check(objectForRateLimitMatch);\n    const timeToResetAttempsInSeconds = Math.ceil(attemptResult.timeToReset / 1000);\n    response.setHeader('X-RateLimit-Limit', rateLimiterDictionary[objectForRateLimitMatch.route].options.numRequestsAllowed);\n    response.setHeader('X-RateLimit-Remaining', attemptResult.numInvocationsLeft);\n    response.setHeader('X-RateLimit-Reset', new Date().getTime() + attemptResult.timeToReset);\n\n    if (!attemptResult.allowed) {\n      throw new Meteor.Error('error-too-many-requests', \"Error, too many requests. Please slow down. You must wait \".concat(timeToResetAttempsInSeconds, \" seconds before trying this endpoint again.\"), {\n        timeToReset: attemptResult.timeToReset,\n        seconds: timeToResetAttempsInSeconds\n      });\n    }\n  }\n\n  reloadRoutesToRefreshRateLimiter() {\n    const {\n      version\n    } = this._config;\n\n    this._routes.forEach(route => {\n      if (this.shouldAddRateLimitToRoute(route.options)) {\n        this.addRateLimiterRuleForRoutes({\n          routes: [route.path],\n          rateLimiterOptions: route.options.rateLimiterOptions || defaultRateLimiterOptions,\n          endpoints: Object.keys(route.endpoints).filter(endpoint => endpoint !== 'options'),\n          apiVersion: version\n        });\n      }\n    });\n  }\n\n  addRateLimiterRuleForRoutes(_ref) {\n    let {\n      routes,\n      rateLimiterOptions,\n      endpoints,\n      apiVersion\n    } = _ref;\n\n    if (!rateLimiterOptions.numRequestsAllowed) {\n      throw new Meteor.Error('You must set \"numRequestsAllowed\" property in rateLimiter for REST API endpoint');\n    }\n\n    if (!rateLimiterOptions.intervalTimeInMS) {\n      throw new Meteor.Error('You must set \"intervalTimeInMS\" property in rateLimiter for REST API endpoint');\n    }\n\n    const addRateLimitRuleToEveryRoute = routes => {\n      routes.forEach(route => {\n        rateLimiterDictionary[route] = {\n          rateLimiter: new RateLimiter(),\n          options: rateLimiterOptions\n        };\n        const rateLimitRule = {\n          IPAddr: input => input,\n          route\n        };\n        rateLimiterDictionary[route].rateLimiter.addRule(rateLimitRule, rateLimiterOptions.numRequestsAllowed, rateLimiterOptions.intervalTimeInMS);\n      });\n    };\n\n    routes.map(route => this.namedRoutes(route, endpoints, apiVersion)).map(addRateLimitRuleToEveryRoute);\n  }\n\n  processTwoFactor(_ref2) {\n    let {\n      userId,\n      request,\n      invocation,\n      options,\n      connection\n    } = _ref2;\n\n    if (!options.twoFactorRequired) {\n      return;\n    }\n\n    const code = request.headers['x-2fa-code'];\n    const method = request.headers['x-2fa-method'];\n    checkCodeForUser({\n      user: userId,\n      code,\n      method,\n      options: options.twoFactorOptions,\n      connection\n    });\n    invocation.twoFactorChecked = true;\n  }\n\n  getFullRouteName(route, method) {\n    let apiVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let prefix = \"/\".concat(this.apiPath || '');\n\n    if (apiVersion) {\n      prefix += \"\".concat(apiVersion, \"/\");\n    }\n\n    return \"\".concat(prefix).concat(route).concat(method);\n  }\n\n  namedRoutes(route, endpoints, apiVersion) {\n    const routeActions = Array.isArray(endpoints) ? endpoints : Object.keys(endpoints);\n    return routeActions.map(action => this.getFullRouteName(route, action, apiVersion));\n  }\n\n  addRoute(routes, options, endpoints) {\n    // Note: required if the developer didn't provide options\n    if (typeof endpoints === 'undefined') {\n      endpoints = options;\n      options = {};\n    }\n\n    let shouldVerifyPermissions;\n\n    if (!_.isArray(options.permissionsRequired)) {\n      options.permissionsRequired = undefined;\n      shouldVerifyPermissions = false;\n    } else {\n      shouldVerifyPermissions = !!options.permissionsRequired.length;\n    } // Allow for more than one route using the same option and endpoints\n\n\n    if (!_.isArray(routes)) {\n      routes = [routes];\n    }\n\n    const {\n      version\n    } = this._config;\n\n    if (this.shouldAddRateLimitToRoute(options)) {\n      this.addRateLimiterRuleForRoutes({\n        routes,\n        rateLimiterOptions: options.rateLimiterOptions || defaultRateLimiterOptions,\n        endpoints,\n        apiVersion: version\n      });\n    }\n\n    routes.forEach(route => {\n      // Note: This is required due to Restivus calling `addRoute` in the constructor of itself\n      Object.keys(endpoints).forEach(method => {\n        const _options = _objectSpread({}, options);\n\n        if (typeof endpoints[method] === 'function') {\n          endpoints[method] = {\n            action: endpoints[method]\n          };\n        } else {\n          const extraOptions = _objectSpread({}, endpoints[method]);\n\n          delete extraOptions.action;\n          Object.assign(_options, extraOptions);\n        } // Add a try/catch for each endpoint\n\n\n        const originalAction = endpoints[method].action;\n        const api = this;\n\n        endpoints[method].action = function _internalRouteActionHandler() {\n          const rocketchatRestApiEnd = metrics.rocketchatRestApi.startTimer(_objectSpread(_objectSpread({\n            method,\n            version\n          }, prometheusAPIUserAgent && {\n            user_agent: this.request.headers['user-agent']\n          }), {}, {\n            entrypoint: route.startsWith('method.call') ? decodeURIComponent(this.request._parsedUrl.pathname.slice(8)) : route\n          }));\n          this.requestIp = getRequestIP(this.request);\n          const startTime = Date.now();\n          const log = logger.logger.child(_objectSpread({\n            method: this.request.method,\n            url: this.request.url,\n            userId: this.request.headers['x-user-id'],\n            userAgent: this.request.headers['user-agent'],\n            length: this.request.headers['content-length'],\n            host: this.request.headers.host,\n            referer: this.request.headers.referer,\n            remoteIP: this.requestIp\n          }, getRestPayload(this.request.body)));\n          const objectForRateLimitMatch = {\n            IPAddr: this.requestIp,\n            route: \"\".concat(this.request.route).concat(this.request.method.toLowerCase())\n          };\n          let result;\n          const connection = {\n            id: Random.id(),\n\n            close() {},\n\n            token: this.token,\n            httpHeaders: this.request.headers,\n            clientAddress: this.requestIp\n          };\n\n          try {\n            api.enforceRateLimit(objectForRateLimitMatch, this.request, this.response, this.userId);\n\n            if (shouldVerifyPermissions && (!this.userId || !hasAllPermission(this.userId, _options.permissionsRequired))) {\n              throw new Meteor.Error('error-unauthorized', 'User does not have the permissions required for this action', {\n                permissions: _options.permissionsRequired\n              });\n            }\n\n            const invocation = new DDPCommon.MethodInvocation({\n              connection,\n              isSimulation: false,\n              userId: this.userId\n            });\n            Accounts._accountData[connection.id] = {\n              connection\n            };\n\n            Accounts._setAccountData(connection.id, 'loginToken', this.token);\n\n            api.processTwoFactor({\n              userId: this.userId,\n              request: this.request,\n              invocation,\n              options: _options,\n              connection\n            });\n            result = DDP._CurrentInvocation.withValue(invocation, () => Promise.await(originalAction.apply(this))) || API.v1.success();\n            log.http({\n              status: result.statusCode,\n              responseTime: Date.now() - startTime\n            });\n          } catch (e) {\n            const apiMethod = {\n              'error-too-many-requests': 'tooManyRequests',\n              'error-unauthorized': 'unauthorized'\n            }[e.error] || 'failure';\n            result = API.v1[apiMethod](typeof e === 'string' ? e : e.message, e.error, process.env.TEST_MODE ? e.stack : undefined, e);\n            log.http({\n              err: e,\n              status: result.statusCode,\n              responseTime: Date.now() - startTime\n            });\n          } finally {\n            delete Accounts._accountData[connection.id];\n          }\n\n          rocketchatRestApiEnd({\n            status: result.statusCode\n          });\n          return result;\n        };\n\n        if (this.hasHelperMethods()) {\n          for (const [name, helperMethod] of this.getHelperMethods()) {\n            endpoints[method][name] = helperMethod;\n          }\n        } // Allow the endpoints to make usage of the logger which respects the user's settings\n\n\n        endpoints[method].logger = logger;\n      });\n      super.addRoute(route, options, endpoints);\n    });\n  }\n\n  updateRateLimiterDictionaryForRoute(route, numRequestsAllowed, intervalTimeInMS) {\n    if (rateLimiterDictionary[route]) {\n      rateLimiterDictionary[route].options.numRequestsAllowed = numRequestsAllowed !== null && numRequestsAllowed !== void 0 ? numRequestsAllowed : rateLimiterDictionary[route].options.numRequestsAllowed;\n      rateLimiterDictionary[route].options.intervalTimeInMS = intervalTimeInMS !== null && intervalTimeInMS !== void 0 ? intervalTimeInMS : rateLimiterDictionary[route].options.intervalTimeInMS;\n      API.v1.reloadRoutesToRefreshRateLimiter();\n    }\n  }\n\n  _initAuth() {\n    const loginCompatibility = (bodyParams, request) => {\n      // Grab the username or email that the user is logging in with\n      const {\n        user,\n        username,\n        email,\n        password,\n        code: bodyCode\n      } = bodyParams;\n      let usernameToLDAPLogin = '';\n\n      if (password == null) {\n        return bodyParams;\n      }\n\n      if (_.without(Object.keys(bodyParams), 'user', 'username', 'email', 'password', 'code').length > 0) {\n        return bodyParams;\n      }\n\n      const code = bodyCode || request.headers['x-2fa-code'];\n      const auth = {\n        password\n      };\n\n      if (typeof user === 'string') {\n        auth.user = user.includes('@') ? {\n          email: user\n        } : {\n          username: user\n        };\n        usernameToLDAPLogin = user;\n      } else if (username) {\n        auth.user = {\n          username\n        };\n        usernameToLDAPLogin = username;\n      } else if (email) {\n        auth.user = {\n          email\n        };\n        usernameToLDAPLogin = email;\n      }\n\n      if (auth.user == null) {\n        return bodyParams;\n      }\n\n      if (auth.password.hashed) {\n        auth.password = {\n          digest: auth.password,\n          algorithm: 'sha-256'\n        };\n      }\n\n      const objectToLDAPLogin = {\n        ldap: true,\n        username: usernameToLDAPLogin,\n        ldapPass: auth.password,\n        ldapOptions: {}\n      };\n\n      if (settings.get('LDAP_Enable') && !code) {\n        return objectToLDAPLogin;\n      }\n\n      if (code) {\n        return {\n          totp: {\n            code,\n            login: settings.get('LDAP_Enable') ? objectToLDAPLogin : auth\n          }\n        };\n      }\n\n      return auth;\n    };\n\n    const self = this;\n    this.addRoute('login', {\n      authRequired: false\n    }, {\n      post() {\n        const args = loginCompatibility(this.bodyParams, this.request);\n        const getUserInfo = self.getHelperMethod('getUserInfo');\n        const invocation = new DDPCommon.MethodInvocation({\n          connection: {\n            close() {},\n\n            httpHeaders: this.request.headers,\n            clientAddress: getRequestIP(this.request)\n          }\n        });\n        let auth;\n\n        try {\n          auth = DDP._CurrentInvocation.withValue(invocation, () => Meteor.call('login', args));\n        } catch (error) {\n          let e = error;\n\n          if (error.reason === 'User not found') {\n            e = {\n              error: 'Unauthorized',\n              reason: 'Unauthorized'\n            };\n          }\n\n          return {\n            statusCode: 401,\n            body: {\n              status: 'error',\n              error: e.error,\n              details: e.details,\n              message: e.reason || e.message\n            }\n          };\n        }\n\n        this.user = Meteor.users.findOne({\n          _id: auth.id\n        }, {\n          fields: getDefaultUserFields()\n        });\n        this.userId = this.user._id;\n        const response = {\n          status: 'success',\n          data: {\n            userId: this.userId,\n            authToken: auth.token,\n            me: getUserInfo(this.user)\n          }\n        };\n\n        const extraData = self._config.onLoggedIn && self._config.onLoggedIn.call(this);\n\n        if (extraData != null) {\n          _.extend(response.data, {\n            extra: extraData\n          });\n        }\n\n        return response;\n      }\n\n    });\n\n    const logout = function () {\n      // Remove the given auth token from the user's account\n      const authToken = this.request.headers['x-auth-token'];\n\n      const hashedToken = Accounts._hashLoginToken(authToken);\n\n      const tokenLocation = self._config.auth.token;\n      const index = tokenLocation.lastIndexOf('.');\n      const tokenPath = tokenLocation.substring(0, index);\n      const tokenFieldName = tokenLocation.substring(index + 1);\n      const tokenToRemove = {};\n      tokenToRemove[tokenFieldName] = hashedToken;\n      const tokenRemovalQuery = {};\n      tokenRemovalQuery[tokenPath] = tokenToRemove;\n      Meteor.users.update(this.user._id, {\n        $pull: tokenRemovalQuery\n      });\n      const response = {\n        status: 'success',\n        data: {\n          message: \"You've been logged out!\"\n        }\n      }; // Call the logout hook with the authenticated user attached\n\n      const extraData = self._config.onLoggedOut && self._config.onLoggedOut.call(this);\n\n      if (extraData != null) {\n        _.extend(response.data, {\n          extra: extraData\n        });\n      }\n\n      return response;\n    };\n    /*\n    \tAdd a logout endpoint to the API\n    \tAfter the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n    \tadding hook).\n    */\n\n\n    return this.addRoute('logout', {\n      authRequired: true\n    }, {\n      get() {\n        console.warn('Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.');\n        console.warn('    See https://github.com/kahmali/meteor-restivus/issues/100');\n        return logout.call(this);\n      },\n\n      post: logout\n    });\n  }\n\n}\n\nconst getUserAuth = function _getUserAuth() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const invalidResults = [undefined, null, false];\n  return {\n    token: 'services.resume.loginTokens.hashedToken',\n\n    user() {\n      if (this.bodyParams && this.bodyParams.payload) {\n        this.bodyParams = JSON.parse(this.bodyParams.payload);\n      }\n\n      for (let i = 0; i < API.v1.authMethods.length; i++) {\n        const method = API.v1.authMethods[i];\n\n        if (typeof method === 'function') {\n          const result = method.apply(this, args);\n\n          if (!invalidResults.includes(result)) {\n            return result;\n          }\n        }\n      }\n\n      let token;\n\n      if (this.request.headers['x-auth-token']) {\n        token = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n      }\n\n      this.token = token;\n      return {\n        userId: this.request.headers['x-user-id'],\n        token\n      };\n    }\n\n  };\n};\n\nmodule.runSetters(API = {\n  helperMethods: new Map(),\n  getUserAuth,\n  ApiClass: APIClass\n}, [\"API\"]);\n\nconst defaultOptionsEndpoint = function _defaultOptionsEndpoint() {\n  // check if a pre-flight request\n  if (!this.request.headers['access-control-request-method'] && !this.request.headers.origin) {\n    this.done();\n    return;\n  }\n\n  if (!settings.get('API_Enable_CORS')) {\n    this.response.writeHead(405);\n    this.response.write('CORS not enabled. Go to \"Admin > General > REST Api\" to enable it.');\n    this.done();\n    return;\n  }\n\n  const CORSOriginSetting = String(settings.get('API_CORS_Origin'));\n  const defaultHeaders = {\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, HEAD, PATCH',\n    'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, X-User-Id, X-Auth-Token, x-visitor-token, Authorization'\n  };\n\n  if (CORSOriginSetting === '*') {\n    this.response.writeHead(200, _objectSpread({\n      'Access-Control-Allow-Origin': '*'\n    }, defaultHeaders));\n    this.done();\n    return;\n  }\n\n  const origins = CORSOriginSetting.trim().split(',').map(origin => String(origin).trim().toLocaleLowerCase()); // if invalid origin reply without required CORS headers\n\n  if (!origins.includes(this.request.headers.origin)) {\n    this.done();\n    return;\n  }\n\n  this.response.writeHead(200, _objectSpread({\n    'Access-Control-Allow-Origin': this.request.headers.origin,\n    'Vary': 'Origin'\n  }, defaultHeaders));\n  this.done();\n};\n\nconst createApi = function _createApi(_api) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  _api = _api || new APIClass(Object.assign({\n    apiPath: 'api/',\n    useDefaultAuth: true,\n    prettyJson: process.env.NODE_ENV === 'development',\n    defaultOptionsEndpoint,\n    auth: getUserAuth()\n  }, options));\n  return _api;\n};\n\nconst createApis = function _createApis() {\n  API.v1 = createApi(API.v1, {\n    version: 'v1'\n  });\n  API.default = createApi(API.default);\n}; // also create the API immediately\n\n\ncreateApis(); // register the API to be re-created once the CORS-setting changes.\n\nsettings.watchMultiple(['API_Enable_CORS', 'API_CORS_Origin'], () => {\n  createApis();\n});\nsettings.watch('Accounts_CustomFields', value => {\n  if (!value) {\n    return API.v1.setLimitedCustomFields([]);\n  }\n\n  try {\n    const customFields = JSON.parse(value);\n    const nonPublicCustomFields = Object.keys(customFields).filter(customFieldKey => customFields[customFieldKey].public !== true);\n    API.v1.setLimitedCustomFields(nonPublicCustomFields);\n  } catch (error) {\n    console.warn('Invalid Custom Fields', error);\n  }\n});\nsettings.watch('API_Enable_Rate_Limiter_Limit_Time_Default', value => {\n  defaultRateLimiterOptions.intervalTimeInMS = value;\n  API.v1.reloadRoutesToRefreshRateLimiter();\n});\nsettings.watch('API_Enable_Rate_Limiter_Limit_Calls_Default', value => {\n  defaultRateLimiterOptions.numRequestsAllowed = value;\n  API.v1.reloadRoutesToRefreshRateLimiter();\n});\nsettings.watch('Prometheus_API_User_Agent', value => {\n  prometheusAPIUserAgent = value;\n});","map":{"version":3,"sources":["app/api/server/api.js"],"names":["_objectSpread","module","link","default","v","export","defaultRateLimiterOptions","API","APIClass","Meteor","Random","DDPCommon","DDP","Accounts","Restivus","_","RateLimiter","Logger","getRestPayload","settings","metrics","hasPermission","hasAllPermission","getDefaultUserFields","checkCodeForUser","logger","rateLimiterDictionary","numRequestsAllowed","get","intervalTimeInMS","prometheusAPIUserAgent","getRequestIP","req","socket","connection","remoteAddress","headers","forwardedFor","httpForwardedCount","parseInt","process","env","HTTP_FORWARDED_COUNT","isString","trim","split","length","constructor","properties","apiPath","authMethods","fieldSeparator","defaultFieldsToExclude","joinCode","members","importIds","e2e","defaultLimitedUserFieldsToExclude","avatarOrigin","emails","phone","statusConnection","createdAt","lastLogin","services","requirePasswordChange","requirePasswordChangeReason","roles","statusDefault","_updatedAt","limitedUserFieldsToExclude","limitedUserFieldsToExcludeIfIsPrivilegedUser","setLimitedCustomFields","customFields","nonPublicFieds","reduce","acc","customField","hasHelperMethods","helperMethods","size","getHelperMethods","getHelperMethod","name","addAuthMethod","method","push","shouldAddRateLimitToRoute","options","version","_config","rateLimiterOptions","undefined","Boolean","TEST_MODE","success","result","isObject","statusCode","body","failure","errorType","stack","error","details","JSON","parse","e","notFound","msg","internalError","unauthorized","tooManyRequests","getRateLimiter","route","shouldVerifyRateLimit","userId","hasOwnProperty","NODE_ENV","enforceRateLimit","objectForRateLimitMatch","request","response","rateLimiter","increment","attemptResult","check","timeToResetAttempsInSeconds","Math","ceil","timeToReset","setHeader","numInvocationsLeft","Date","getTime","allowed","Error","seconds","reloadRoutesToRefreshRateLimiter","_routes","forEach","addRateLimiterRuleForRoutes","routes","path","endpoints","Object","keys","filter","endpoint","apiVersion","addRateLimitRuleToEveryRoute","rateLimitRule","IPAddr","input","addRule","map","namedRoutes","processTwoFactor","invocation","twoFactorRequired","code","user","twoFactorOptions","twoFactorChecked","getFullRouteName","prefix","routeActions","Array","isArray","action","addRoute","shouldVerifyPermissions","permissionsRequired","_options","extraOptions","assign","originalAction","api","_internalRouteActionHandler","rocketchatRestApiEnd","rocketchatRestApi","startTimer","user_agent","entrypoint","startsWith","decodeURIComponent","_parsedUrl","pathname","slice","requestIp","startTime","now","log","child","url","userAgent","host","referer","remoteIP","toLowerCase","id","close","token","httpHeaders","clientAddress","permissions","MethodInvocation","isSimulation","_accountData","_setAccountData","_CurrentInvocation","withValue","Promise","await","apply","v1","http","status","responseTime","apiMethod","message","err","helperMethod","updateRateLimiterDictionaryForRoute","_initAuth","loginCompatibility","bodyParams","username","email","password","bodyCode","usernameToLDAPLogin","without","auth","includes","hashed","digest","algorithm","objectToLDAPLogin","ldap","ldapPass","ldapOptions","totp","login","self","authRequired","post","args","getUserInfo","call","reason","users","findOne","_id","fields","data","authToken","me","extraData","onLoggedIn","extend","extra","logout","hashedToken","_hashLoginToken","tokenLocation","index","lastIndexOf","tokenPath","substring","tokenFieldName","tokenToRemove","tokenRemovalQuery","update","$pull","onLoggedOut","console","warn","getUserAuth","_getUserAuth","invalidResults","payload","i","Map","ApiClass","defaultOptionsEndpoint","_defaultOptionsEndpoint","origin","done","writeHead","write","CORSOriginSetting","String","defaultHeaders","origins","toLocaleLowerCase","createApi","_createApi","_api","useDefaultAuth","prettyJson","createApis","_createApis","watchMultiple","watch","value","nonPublicCustomFields","customFieldKey","public"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { DDPCommon } from 'meteor/ddp-common';\nimport { DDP } from 'meteor/ddp';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Restivus } from 'meteor/rocketchat:restivus';\nimport _ from 'underscore';\nimport { RateLimiter } from 'meteor/rate-limit';\n\nimport { Logger } from '../../../server/lib/logger/Logger';\nimport { getRestPayload } from '../../../server/lib/logger/logPayloads';\nimport { settings } from '../../settings/server';\nimport { metrics } from '../../metrics/server';\nimport { hasPermission, hasAllPermission } from '../../authorization/server';\nimport { getDefaultUserFields } from '../../utils/server/functions/getDefaultUserFields';\nimport { checkCodeForUser } from '../../2fa/server/code';\n\nconst logger = new Logger('API');\n\nconst rateLimiterDictionary = {};\nexport const defaultRateLimiterOptions = {\n\tnumRequestsAllowed: settings.get('API_Enable_Rate_Limiter_Limit_Calls_Default'),\n\tintervalTimeInMS: settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'),\n};\nlet prometheusAPIUserAgent = false;\n\nexport let API = {};\n\nconst getRequestIP = (req) => {\n\tconst socket = req.socket || req.connection?.socket;\n\tconst remoteAddress = req.headers['x-real-ip'] || socket?.remoteAddress || req.connection?.remoteAddress || null;\n\tlet forwardedFor = req.headers['x-forwarded-for'];\n\n\tif (!socket) {\n\t\treturn remoteAddress || forwardedFor || null;\n\t}\n\n\tconst httpForwardedCount = parseInt(process.env.HTTP_FORWARDED_COUNT) || 0;\n\tif (httpForwardedCount <= 0) {\n\t\treturn remoteAddress;\n\t}\n\n\tif (!_.isString(forwardedFor)) {\n\t\treturn remoteAddress;\n\t}\n\n\tforwardedFor = forwardedFor.trim().split(/\\s*,\\s*/);\n\tif (httpForwardedCount > forwardedFor.length) {\n\t\treturn remoteAddress;\n\t}\n\n\treturn forwardedFor[forwardedFor.length - httpForwardedCount];\n};\n\nexport class APIClass extends Restivus {\n\tconstructor(properties) {\n\t\tsuper(properties);\n\t\tthis.apiPath = properties.apiPath;\n\t\tthis.authMethods = [];\n\t\tthis.fieldSeparator = '.';\n\t\tthis.defaultFieldsToExclude = {\n\t\t\tjoinCode: 0,\n\t\t\tmembers: 0,\n\t\t\timportIds: 0,\n\t\t\te2e: 0,\n\t\t};\n\t\tthis.defaultLimitedUserFieldsToExclude = {\n\t\t\tavatarOrigin: 0,\n\t\t\temails: 0,\n\t\t\tphone: 0,\n\t\t\tstatusConnection: 0,\n\t\t\tcreatedAt: 0,\n\t\t\tlastLogin: 0,\n\t\t\tservices: 0,\n\t\t\trequirePasswordChange: 0,\n\t\t\trequirePasswordChangeReason: 0,\n\t\t\troles: 0,\n\t\t\tstatusDefault: 0,\n\t\t\t_updatedAt: 0,\n\t\t\tsettings: 0,\n\t\t};\n\t\tthis.limitedUserFieldsToExclude = this.defaultLimitedUserFieldsToExclude;\n\t\tthis.limitedUserFieldsToExcludeIfIsPrivilegedUser = {\n\t\t\tservices: 0,\n\t\t};\n\t}\n\n\tsetLimitedCustomFields(customFields) {\n\t\tconst nonPublicFieds = customFields.reduce((acc, customField) => {\n\t\t\tacc[`customFields.${customField}`] = 0;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tthis.limitedUserFieldsToExclude = {\n\t\t\t...this.defaultLimitedUserFieldsToExclude,\n\t\t\t...nonPublicFieds,\n\t\t};\n\t}\n\n\thasHelperMethods() {\n\t\treturn API.helperMethods.size !== 0;\n\t}\n\n\tgetHelperMethods() {\n\t\treturn API.helperMethods;\n\t}\n\n\tgetHelperMethod(name) {\n\t\treturn API.helperMethods.get(name);\n\t}\n\n\taddAuthMethod(method) {\n\t\tthis.authMethods.push(method);\n\t}\n\n\tshouldAddRateLimitToRoute(options) {\n\t\tconst { version } = this._config;\n\t\tconst { rateLimiterOptions } = options;\n\t\treturn (\n\t\t\t(typeof rateLimiterOptions === 'object' || rateLimiterOptions === undefined) &&\n\t\t\tBoolean(version) &&\n\t\t\t!process.env.TEST_MODE &&\n\t\t\tBoolean(defaultRateLimiterOptions.numRequestsAllowed && defaultRateLimiterOptions.intervalTimeInMS)\n\t\t);\n\t}\n\n\tsuccess(result = {}) {\n\t\tif (_.isObject(result)) {\n\t\t\tresult.success = true;\n\t\t}\n\n\t\tresult = {\n\t\t\tstatusCode: 200,\n\t\t\tbody: result,\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tfailure(result, errorType, stack, error) {\n\t\tif (_.isObject(result)) {\n\t\t\tresult.success = false;\n\t\t} else {\n\t\t\tresult = {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: result,\n\t\t\t\tstack,\n\t\t\t};\n\n\t\t\tif (errorType) {\n\t\t\t\tresult.errorType = errorType;\n\t\t\t}\n\n\t\t\tif (error && error.details) {\n\t\t\t\ttry {\n\t\t\t\t\tresult.details = JSON.parse(error.details);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tresult.details = error.details;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tresult = {\n\t\t\tstatusCode: 400,\n\t\t\tbody: result,\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tnotFound(msg) {\n\t\treturn {\n\t\t\tstatusCode: 404,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Resource not found',\n\t\t\t},\n\t\t};\n\t}\n\n\tinternalError(msg) {\n\t\treturn {\n\t\t\tstatusCode: 500,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Internal error occured',\n\t\t\t},\n\t\t};\n\t}\n\n\tunauthorized(msg) {\n\t\treturn {\n\t\t\tstatusCode: 403,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'unauthorized',\n\t\t\t},\n\t\t};\n\t}\n\n\ttooManyRequests(msg) {\n\t\treturn {\n\t\t\tstatusCode: 429,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Too many requests',\n\t\t\t},\n\t\t};\n\t}\n\n\tgetRateLimiter(route) {\n\t\treturn rateLimiterDictionary[route];\n\t}\n\n\tshouldVerifyRateLimit(route, userId) {\n\t\treturn (\n\t\t\trateLimiterDictionary.hasOwnProperty(route) &&\n\t\t\tsettings.get('API_Enable_Rate_Limiter') === true &&\n\t\t\t(process.env.NODE_ENV !== 'development' || settings.get('API_Enable_Rate_Limiter_Dev') === true) &&\n\t\t\t!(userId && hasPermission(userId, 'api-bypass-rate-limit'))\n\t\t);\n\t}\n\n\tenforceRateLimit(objectForRateLimitMatch, request, response, userId) {\n\t\tif (!this.shouldVerifyRateLimit(objectForRateLimitMatch.route, userId)) {\n\t\t\treturn;\n\t\t}\n\n\t\trateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.increment(objectForRateLimitMatch);\n\t\tconst attemptResult = rateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.check(objectForRateLimitMatch);\n\t\tconst timeToResetAttempsInSeconds = Math.ceil(attemptResult.timeToReset / 1000);\n\t\tresponse.setHeader('X-RateLimit-Limit', rateLimiterDictionary[objectForRateLimitMatch.route].options.numRequestsAllowed);\n\t\tresponse.setHeader('X-RateLimit-Remaining', attemptResult.numInvocationsLeft);\n\t\tresponse.setHeader('X-RateLimit-Reset', new Date().getTime() + attemptResult.timeToReset);\n\n\t\tif (!attemptResult.allowed) {\n\t\t\tthrow new Meteor.Error(\n\t\t\t\t'error-too-many-requests',\n\t\t\t\t`Error, too many requests. Please slow down. You must wait ${timeToResetAttempsInSeconds} seconds before trying this endpoint again.`,\n\t\t\t\t{\n\t\t\t\t\ttimeToReset: attemptResult.timeToReset,\n\t\t\t\t\tseconds: timeToResetAttempsInSeconds,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\treloadRoutesToRefreshRateLimiter() {\n\t\tconst { version } = this._config;\n\t\tthis._routes.forEach((route) => {\n\t\t\tif (this.shouldAddRateLimitToRoute(route.options)) {\n\t\t\t\tthis.addRateLimiterRuleForRoutes({\n\t\t\t\t\troutes: [route.path],\n\t\t\t\t\trateLimiterOptions: route.options.rateLimiterOptions || defaultRateLimiterOptions,\n\t\t\t\t\tendpoints: Object.keys(route.endpoints).filter((endpoint) => endpoint !== 'options'),\n\t\t\t\t\tapiVersion: version,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\taddRateLimiterRuleForRoutes({ routes, rateLimiterOptions, endpoints, apiVersion }) {\n\t\tif (!rateLimiterOptions.numRequestsAllowed) {\n\t\t\tthrow new Meteor.Error('You must set \"numRequestsAllowed\" property in rateLimiter for REST API endpoint');\n\t\t}\n\t\tif (!rateLimiterOptions.intervalTimeInMS) {\n\t\t\tthrow new Meteor.Error('You must set \"intervalTimeInMS\" property in rateLimiter for REST API endpoint');\n\t\t}\n\t\tconst addRateLimitRuleToEveryRoute = (routes) => {\n\t\t\troutes.forEach((route) => {\n\t\t\t\trateLimiterDictionary[route] = {\n\t\t\t\t\trateLimiter: new RateLimiter(),\n\t\t\t\t\toptions: rateLimiterOptions,\n\t\t\t\t};\n\t\t\t\tconst rateLimitRule = {\n\t\t\t\t\tIPAddr: (input) => input,\n\t\t\t\t\troute,\n\t\t\t\t};\n\t\t\t\trateLimiterDictionary[route].rateLimiter.addRule(\n\t\t\t\t\trateLimitRule,\n\t\t\t\t\trateLimiterOptions.numRequestsAllowed,\n\t\t\t\t\trateLimiterOptions.intervalTimeInMS,\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\t\troutes.map((route) => this.namedRoutes(route, endpoints, apiVersion)).map(addRateLimitRuleToEveryRoute);\n\t}\n\n\tprocessTwoFactor({ userId, request, invocation, options, connection }) {\n\t\tif (!options.twoFactorRequired) {\n\t\t\treturn;\n\t\t}\n\t\tconst code = request.headers['x-2fa-code'];\n\t\tconst method = request.headers['x-2fa-method'];\n\n\t\tcheckCodeForUser({ user: userId, code, method, options: options.twoFactorOptions, connection });\n\n\t\tinvocation.twoFactorChecked = true;\n\t}\n\n\tgetFullRouteName(route, method, apiVersion = null) {\n\t\tlet prefix = `/${this.apiPath || ''}`;\n\t\tif (apiVersion) {\n\t\t\tprefix += `${apiVersion}/`;\n\t\t}\n\t\treturn `${prefix}${route}${method}`;\n\t}\n\n\tnamedRoutes(route, endpoints, apiVersion) {\n\t\tconst routeActions = Array.isArray(endpoints) ? endpoints : Object.keys(endpoints);\n\n\t\treturn routeActions.map((action) => this.getFullRouteName(route, action, apiVersion));\n\t}\n\n\taddRoute(routes, options, endpoints) {\n\t\t// Note: required if the developer didn't provide options\n\t\tif (typeof endpoints === 'undefined') {\n\t\t\tendpoints = options;\n\t\t\toptions = {};\n\t\t}\n\n\t\tlet shouldVerifyPermissions;\n\n\t\tif (!_.isArray(options.permissionsRequired)) {\n\t\t\toptions.permissionsRequired = undefined;\n\t\t\tshouldVerifyPermissions = false;\n\t\t} else {\n\t\t\tshouldVerifyPermissions = !!options.permissionsRequired.length;\n\t\t}\n\n\t\t// Allow for more than one route using the same option and endpoints\n\t\tif (!_.isArray(routes)) {\n\t\t\troutes = [routes];\n\t\t}\n\t\tconst { version } = this._config;\n\t\tif (this.shouldAddRateLimitToRoute(options)) {\n\t\t\tthis.addRateLimiterRuleForRoutes({\n\t\t\t\troutes,\n\t\t\t\trateLimiterOptions: options.rateLimiterOptions || defaultRateLimiterOptions,\n\t\t\t\tendpoints,\n\t\t\t\tapiVersion: version,\n\t\t\t});\n\t\t}\n\t\troutes.forEach((route) => {\n\t\t\t// Note: This is required due to Restivus calling `addRoute` in the constructor of itself\n\t\t\tObject.keys(endpoints).forEach((method) => {\n\t\t\t\tconst _options = { ...options };\n\n\t\t\t\tif (typeof endpoints[method] === 'function') {\n\t\t\t\t\tendpoints[method] = { action: endpoints[method] };\n\t\t\t\t} else {\n\t\t\t\t\tconst extraOptions = { ...endpoints[method] };\n\t\t\t\t\tdelete extraOptions.action;\n\t\t\t\t\tObject.assign(_options, extraOptions);\n\t\t\t\t}\n\t\t\t\t// Add a try/catch for each endpoint\n\t\t\t\tconst originalAction = endpoints[method].action;\n\t\t\t\tconst api = this;\n\t\t\t\tendpoints[method].action = function _internalRouteActionHandler() {\n\t\t\t\t\tconst rocketchatRestApiEnd = metrics.rocketchatRestApi.startTimer({\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\tversion,\n\t\t\t\t\t\t...(prometheusAPIUserAgent && { user_agent: this.request.headers['user-agent'] }),\n\t\t\t\t\t\tentrypoint: route.startsWith('method.call') ? decodeURIComponent(this.request._parsedUrl.pathname.slice(8)) : route,\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.requestIp = getRequestIP(this.request);\n\n\t\t\t\t\tconst startTime = Date.now();\n\n\t\t\t\t\tconst log = logger.logger.child({\n\t\t\t\t\t\tmethod: this.request.method,\n\t\t\t\t\t\turl: this.request.url,\n\t\t\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\t\t\tuserAgent: this.request.headers['user-agent'],\n\t\t\t\t\t\tlength: this.request.headers['content-length'],\n\t\t\t\t\t\thost: this.request.headers.host,\n\t\t\t\t\t\treferer: this.request.headers.referer,\n\t\t\t\t\t\tremoteIP: this.requestIp,\n\t\t\t\t\t\t...getRestPayload(this.request.body),\n\t\t\t\t\t});\n\n\t\t\t\t\tconst objectForRateLimitMatch = {\n\t\t\t\t\t\tIPAddr: this.requestIp,\n\t\t\t\t\t\troute: `${this.request.route}${this.request.method.toLowerCase()}`,\n\t\t\t\t\t};\n\n\t\t\t\t\tlet result;\n\n\t\t\t\t\tconst connection = {\n\t\t\t\t\t\tid: Random.id(),\n\t\t\t\t\t\tclose() {},\n\t\t\t\t\t\ttoken: this.token,\n\t\t\t\t\t\thttpHeaders: this.request.headers,\n\t\t\t\t\t\tclientAddress: this.requestIp,\n\t\t\t\t\t};\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tapi.enforceRateLimit(objectForRateLimitMatch, this.request, this.response, this.userId);\n\n\t\t\t\t\t\tif (shouldVerifyPermissions && (!this.userId || !hasAllPermission(this.userId, _options.permissionsRequired))) {\n\t\t\t\t\t\t\tthrow new Meteor.Error('error-unauthorized', 'User does not have the permissions required for this action', {\n\t\t\t\t\t\t\t\tpermissions: _options.permissionsRequired,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst invocation = new DDPCommon.MethodInvocation({\n\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t\tisSimulation: false,\n\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tAccounts._accountData[connection.id] = {\n\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tAccounts._setAccountData(connection.id, 'loginToken', this.token);\n\n\t\t\t\t\t\tapi.processTwoFactor({\n\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\t\tinvocation,\n\t\t\t\t\t\t\toptions: _options,\n\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresult = DDP._CurrentInvocation.withValue(invocation, () => Promise.await(originalAction.apply(this))) || API.v1.success();\n\n\t\t\t\t\t\tlog.http({\n\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t\tresponseTime: Date.now() - startTime,\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconst apiMethod =\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'error-too-many-requests': 'tooManyRequests',\n\t\t\t\t\t\t\t\t'error-unauthorized': 'unauthorized',\n\t\t\t\t\t\t\t}[e.error] || 'failure';\n\n\t\t\t\t\t\tresult = API.v1[apiMethod](typeof e === 'string' ? e : e.message, e.error, process.env.TEST_MODE ? e.stack : undefined, e);\n\n\t\t\t\t\t\tlog.http({\n\t\t\t\t\t\t\terr: e,\n\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t\tresponseTime: Date.now() - startTime,\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tdelete Accounts._accountData[connection.id];\n\t\t\t\t\t}\n\n\t\t\t\t\trocketchatRestApiEnd({\n\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tif (this.hasHelperMethods()) {\n\t\t\t\t\tfor (const [name, helperMethod] of this.getHelperMethods()) {\n\t\t\t\t\t\tendpoints[method][name] = helperMethod;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Allow the endpoints to make usage of the logger which respects the user's settings\n\t\t\t\tendpoints[method].logger = logger;\n\t\t\t});\n\n\t\t\tsuper.addRoute(route, options, endpoints);\n\t\t});\n\t}\n\n\tupdateRateLimiterDictionaryForRoute(route, numRequestsAllowed, intervalTimeInMS) {\n\t\tif (rateLimiterDictionary[route]) {\n\t\t\trateLimiterDictionary[route].options.numRequestsAllowed =\n\t\t\t\tnumRequestsAllowed ?? rateLimiterDictionary[route].options.numRequestsAllowed;\n\t\t\trateLimiterDictionary[route].options.intervalTimeInMS = intervalTimeInMS ?? rateLimiterDictionary[route].options.intervalTimeInMS;\n\t\t\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n\t\t}\n\t}\n\n\t_initAuth() {\n\t\tconst loginCompatibility = (bodyParams, request) => {\n\t\t\t// Grab the username or email that the user is logging in with\n\t\t\tconst { user, username, email, password, code: bodyCode } = bodyParams;\n\t\t\tlet usernameToLDAPLogin = '';\n\n\t\t\tif (password == null) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tif (_.without(Object.keys(bodyParams), 'user', 'username', 'email', 'password', 'code').length > 0) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tconst code = bodyCode || request.headers['x-2fa-code'];\n\n\t\t\tconst auth = {\n\t\t\t\tpassword,\n\t\t\t};\n\n\t\t\tif (typeof user === 'string') {\n\t\t\t\tauth.user = user.includes('@') ? { email: user } : { username: user };\n\t\t\t\tusernameToLDAPLogin = user;\n\t\t\t} else if (username) {\n\t\t\t\tauth.user = { username };\n\t\t\t\tusernameToLDAPLogin = username;\n\t\t\t} else if (email) {\n\t\t\t\tauth.user = { email };\n\t\t\t\tusernameToLDAPLogin = email;\n\t\t\t}\n\n\t\t\tif (auth.user == null) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tif (auth.password.hashed) {\n\t\t\t\tauth.password = {\n\t\t\t\t\tdigest: auth.password,\n\t\t\t\t\talgorithm: 'sha-256',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst objectToLDAPLogin = {\n\t\t\t\tldap: true,\n\t\t\t\tusername: usernameToLDAPLogin,\n\t\t\t\tldapPass: auth.password,\n\t\t\t\tldapOptions: {},\n\t\t\t};\n\t\t\tif (settings.get('LDAP_Enable') && !code) {\n\t\t\t\treturn objectToLDAPLogin;\n\t\t\t}\n\n\t\t\tif (code) {\n\t\t\t\treturn {\n\t\t\t\t\ttotp: {\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tlogin: settings.get('LDAP_Enable') ? objectToLDAPLogin : auth,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn auth;\n\t\t};\n\n\t\tconst self = this;\n\n\t\tthis.addRoute(\n\t\t\t'login',\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tpost() {\n\t\t\t\t\tconst args = loginCompatibility(this.bodyParams, this.request);\n\t\t\t\t\tconst getUserInfo = self.getHelperMethod('getUserInfo');\n\n\t\t\t\t\tconst invocation = new DDPCommon.MethodInvocation({\n\t\t\t\t\t\tconnection: {\n\t\t\t\t\t\t\tclose() {},\n\t\t\t\t\t\t\thttpHeaders: this.request.headers,\n\t\t\t\t\t\t\tclientAddress: getRequestIP(this.request),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tlet auth;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tauth = DDP._CurrentInvocation.withValue(invocation, () => Meteor.call('login', args));\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlet e = error;\n\t\t\t\t\t\tif (error.reason === 'User not found') {\n\t\t\t\t\t\t\te = {\n\t\t\t\t\t\t\t\terror: 'Unauthorized',\n\t\t\t\t\t\t\t\treason: 'Unauthorized',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatusCode: 401,\n\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\t\terror: e.error,\n\t\t\t\t\t\t\t\tdetails: e.details,\n\t\t\t\t\t\t\t\tmessage: e.reason || e.message,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.user = Meteor.users.findOne(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_id: auth.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfields: getDefaultUserFields(),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.userId = this.user._id;\n\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tstatus: 'success',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\tauthToken: auth.token,\n\t\t\t\t\t\t\tme: getUserInfo(this.user),\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tconst extraData = self._config.onLoggedIn && self._config.onLoggedIn.call(this);\n\n\t\t\t\t\tif (extraData != null) {\n\t\t\t\t\t\t_.extend(response.data, {\n\t\t\t\t\t\t\textra: extraData,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst logout = function () {\n\t\t\t// Remove the given auth token from the user's account\n\t\t\tconst authToken = this.request.headers['x-auth-token'];\n\t\t\tconst hashedToken = Accounts._hashLoginToken(authToken);\n\t\t\tconst tokenLocation = self._config.auth.token;\n\t\t\tconst index = tokenLocation.lastIndexOf('.');\n\t\t\tconst tokenPath = tokenLocation.substring(0, index);\n\t\t\tconst tokenFieldName = tokenLocation.substring(index + 1);\n\t\t\tconst tokenToRemove = {};\n\t\t\ttokenToRemove[tokenFieldName] = hashedToken;\n\t\t\tconst tokenRemovalQuery = {};\n\t\t\ttokenRemovalQuery[tokenPath] = tokenToRemove;\n\n\t\t\tMeteor.users.update(this.user._id, {\n\t\t\t\t$pull: tokenRemovalQuery,\n\t\t\t});\n\n\t\t\tconst response = {\n\t\t\t\tstatus: 'success',\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: \"You've been logged out!\",\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// Call the logout hook with the authenticated user attached\n\t\t\tconst extraData = self._config.onLoggedOut && self._config.onLoggedOut.call(this);\n\t\t\tif (extraData != null) {\n\t\t\t\t_.extend(response.data, {\n\t\t\t\t\textra: extraData,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response;\n\t\t};\n\n\t\t/*\n\t\t\tAdd a logout endpoint to the API\n\t\t\tAfter the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n\t\t\tadding hook).\n\t\t*/\n\t\treturn this.addRoute(\n\t\t\t'logout',\n\t\t\t{\n\t\t\t\tauthRequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tget() {\n\t\t\t\t\tconsole.warn('Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.');\n\t\t\t\t\tconsole.warn('    See https://github.com/kahmali/meteor-restivus/issues/100');\n\t\t\t\t\treturn logout.call(this);\n\t\t\t\t},\n\t\t\t\tpost: logout,\n\t\t\t},\n\t\t);\n\t}\n}\n\nconst getUserAuth = function _getUserAuth(...args) {\n\tconst invalidResults = [undefined, null, false];\n\treturn {\n\t\ttoken: 'services.resume.loginTokens.hashedToken',\n\t\tuser() {\n\t\t\tif (this.bodyParams && this.bodyParams.payload) {\n\t\t\t\tthis.bodyParams = JSON.parse(this.bodyParams.payload);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < API.v1.authMethods.length; i++) {\n\t\t\t\tconst method = API.v1.authMethods[i];\n\n\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\tconst result = method.apply(this, args);\n\t\t\t\t\tif (!invalidResults.includes(result)) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet token;\n\t\t\tif (this.request.headers['x-auth-token']) {\n\t\t\t\ttoken = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n\t\t\t}\n\n\t\t\tthis.token = token;\n\n\t\t\treturn {\n\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\ttoken,\n\t\t\t};\n\t\t},\n\t};\n};\n\nAPI = {\n\thelperMethods: new Map(),\n\tgetUserAuth,\n\tApiClass: APIClass,\n};\n\nconst defaultOptionsEndpoint = function _defaultOptionsEndpoint() {\n\t// check if a pre-flight request\n\tif (!this.request.headers['access-control-request-method'] && !this.request.headers.origin) {\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tif (!settings.get('API_Enable_CORS')) {\n\t\tthis.response.writeHead(405);\n\t\tthis.response.write('CORS not enabled. Go to \"Admin > General > REST Api\" to enable it.');\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tconst CORSOriginSetting = String(settings.get('API_CORS_Origin'));\n\n\tconst defaultHeaders = {\n\t\t'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, HEAD, PATCH',\n\t\t'Access-Control-Allow-Headers':\n\t\t\t'Origin, X-Requested-With, Content-Type, Accept, X-User-Id, X-Auth-Token, x-visitor-token, Authorization',\n\t};\n\n\tif (CORSOriginSetting === '*') {\n\t\tthis.response.writeHead(200, {\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t...defaultHeaders,\n\t\t});\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tconst origins = CORSOriginSetting.trim()\n\t\t.split(',')\n\t\t.map((origin) => String(origin).trim().toLocaleLowerCase());\n\n\t// if invalid origin reply without required CORS headers\n\tif (!origins.includes(this.request.headers.origin)) {\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tthis.response.writeHead(200, {\n\t\t'Access-Control-Allow-Origin': this.request.headers.origin,\n\t\t'Vary': 'Origin',\n\t\t...defaultHeaders,\n\t});\n\tthis.done();\n};\n\nconst createApi = function _createApi(_api, options = {}) {\n\t_api =\n\t\t_api ||\n\t\tnew APIClass(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tapiPath: 'api/',\n\t\t\t\t\tuseDefaultAuth: true,\n\t\t\t\t\tprettyJson: process.env.NODE_ENV === 'development',\n\t\t\t\t\tdefaultOptionsEndpoint,\n\t\t\t\t\tauth: getUserAuth(),\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t),\n\t\t);\n\n\treturn _api;\n};\n\nconst createApis = function _createApis() {\n\tAPI.v1 = createApi(API.v1, {\n\t\tversion: 'v1',\n\t});\n\n\tAPI.default = createApi(API.default);\n};\n\n// also create the API immediately\ncreateApis();\n\n// register the API to be re-created once the CORS-setting changes.\nsettings.watchMultiple(['API_Enable_CORS', 'API_CORS_Origin'], () => {\n\tcreateApis();\n});\n\nsettings.watch('Accounts_CustomFields', (value) => {\n\tif (!value) {\n\t\treturn API.v1.setLimitedCustomFields([]);\n\t}\n\ttry {\n\t\tconst customFields = JSON.parse(value);\n\t\tconst nonPublicCustomFields = Object.keys(customFields).filter((customFieldKey) => customFields[customFieldKey].public !== true);\n\t\tAPI.v1.setLimitedCustomFields(nonPublicCustomFields);\n\t} catch (error) {\n\t\tconsole.warn('Invalid Custom Fields', error);\n\t}\n});\n\nsettings.watch('API_Enable_Rate_Limiter_Limit_Time_Default', (value) => {\n\tdefaultRateLimiterOptions.intervalTimeInMS = value;\n\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n});\n\nsettings.watch('API_Enable_Rate_Limiter_Limit_Calls_Default', (value) => {\n\tdefaultRateLimiterOptions.numRequestsAllowed = value;\n\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n});\n\nsettings.watch('Prometheus_API_User_Agent', (value) => {\n\tprometheusAPIUserAgent = value;\n});\n"]},"sourceType":"module","hash":"3da4f6e456e68b191aeced6581cbc79736713ee0"}

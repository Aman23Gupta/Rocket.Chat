{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/_BaseDb.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/models/server/models/_BaseDb.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/_BaseDb.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/models/server/models/_BaseDb.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/models/_BaseDb.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  trash: () => trash,\n  BaseDbWatch: () => BaseDbWatch,\n  BaseDb: () => BaseDb\n});\nlet EventEmitter;\nmodule.link(\"events\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 2);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 3);\nlet setUpdatedAt;\nmodule.link(\"../lib/setUpdatedAt\", {\n  setUpdatedAt(v) {\n    setUpdatedAt = v;\n  }\n\n}, 4);\nlet metrics;\nmodule.link(\"../../../metrics/server/lib/metrics\", {\n  metrics(v) {\n    metrics = v;\n  }\n\n}, 5);\nlet getOplogHandle;\nmodule.link(\"./_oplogHandle\", {\n  getOplogHandle(v) {\n    getOplogHandle = v;\n  }\n\n}, 6);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 7);\nconst baseName = 'rocketchat_';\nconst trash = new Mongo.Collection(\"\".concat(baseName, \"_trash\"));\n\ntry {\n  trash._ensureIndex({\n    __collection__: 1\n  });\n\n  trash._ensureIndex({\n    _deletedAt: 1\n  }, {\n    expireAfterSeconds: 60 * 60 * 24 * 30\n  });\n\n  trash._ensureIndex({\n    rid: 1,\n    __collection__: 1,\n    _deletedAt: 1\n  });\n} catch (e) {\n  SystemLogger.error(e);\n}\n\nconst actions = {\n  i: 'insert',\n  u: 'update',\n  d: 'remove'\n};\n\nclass BaseDbWatch extends EventEmitter {\n  constructor(collectionName) {\n    super();\n    this.collectionName = collectionName;\n\n    if (!process.env.DISABLE_DB_WATCH) {\n      this.initDbWatch();\n    }\n  }\n\n  initDbWatch() {\n    const _oplogHandle = Promise.await(getOplogHandle()); // When someone start listening for changes we start oplog if available\n\n\n    const handleListener = (event\n    /* , listener*/\n    ) => Promise.asyncApply(() => {\n      if (event !== 'change') {\n        return;\n      }\n\n      this.removeListener('newListener', handleListener);\n      const query = {\n        collection: this.collectionName\n      };\n\n      if (!_oplogHandle) {\n        throw new Error(\"Error: Unable to find Mongodb Oplog. You must run the server with oplog enabled. Try the following:\\n\\n\\t\\t\\t\\t1. Start your mongodb in a replicaset mode: mongod --smallfiles --oplogSize 128 --replSet rs0\\n\\n\\t\\t\\t\\t2. Start the replicaset via mongodb shell: mongo mongo/meteor --eval \\\"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\\\"\\n\\n\\t\\t\\t\\t3. Start your instance with OPLOG configuration: export MONGO_OPLOG_URL=mongodb://localhost:27017/local MONGO_URL=mongodb://localhost:27017/meteor node main.js\\n\\t\\t\\t\\t\");\n      }\n\n      _oplogHandle.onOplogEntry(query, this.processOplogRecord.bind(this)); // Meteor will handle if we have a value https://github.com/meteor/meteor/blob/5dcd0b2eb9c8bf881ffbee98bc4cb7631772c4da/packages/mongo/oplog_tailing.js#L5\n\n\n      if (process.env.METEOR_OPLOG_TOO_FAR_BEHIND == null) {\n        _oplogHandle._defineTooFarBehind(Number.MAX_SAFE_INTEGER);\n      }\n    });\n\n    if (_oplogHandle) {\n      this.on('newListener', handleListener);\n    }\n  }\n\n  processOplogRecord(_ref) {\n    let {\n      id,\n      op\n    } = _ref;\n    const action = actions[op.op];\n    metrics.oplog.inc({\n      collection: this.collectionName,\n      op: action\n    });\n\n    if (action === 'insert') {\n      this.emit('change', {\n        action,\n        clientAction: 'inserted',\n        id: op.o._id,\n        data: op.o,\n        oplog: true\n      });\n      return;\n    }\n\n    if (action === 'update') {\n      if (!op.o.$set && !op.o.$unset) {\n        this.emit('change', {\n          action,\n          clientAction: 'updated',\n          id,\n          data: op.o,\n          oplog: true\n        });\n        return;\n      }\n\n      const diff = {};\n\n      if (op.o.$set) {\n        for (const key in op.o.$set) {\n          if (op.o.$set.hasOwnProperty(key)) {\n            diff[key] = op.o.$set[key];\n          }\n        }\n      }\n\n      const unset = {};\n\n      if (op.o.$unset) {\n        for (const key in op.o.$unset) {\n          if (op.o.$unset.hasOwnProperty(key)) {\n            diff[key] = undefined;\n            unset[key] = 1;\n          }\n        }\n      }\n\n      this.emit('change', {\n        action,\n        clientAction: 'updated',\n        id,\n        diff,\n        unset,\n        oplog: true\n      });\n      return;\n    }\n\n    if (action === 'remove') {\n      this.emit('change', {\n        action,\n        clientAction: 'removed',\n        id,\n        oplog: true\n      });\n    }\n  }\n\n}\n\nclass BaseDb extends BaseDbWatch {\n  constructor(model, baseModel) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const collectionName = Match.test(model, String) ? baseName + model : model._name;\n    super(collectionName);\n    this.collectionName = collectionName;\n\n    if (Match.test(model, String)) {\n      this.name = model;\n      this.collectionName = this.baseName + this.name;\n      this.model = new Mongo.Collection(this.collectionName);\n    } else {\n      this.name = model._name;\n      this.collectionName = this.name;\n      this.model = model;\n    }\n\n    this.baseModel = baseModel;\n    this.preventSetUpdatedAt = !!options.preventSetUpdatedAt;\n    this.wrapModel();\n    this.tryEnsureIndex({\n      _updatedAt: 1\n    }, options._updatedAtIndexOptions);\n  }\n\n  get baseName() {\n    return baseName;\n  }\n\n  setUpdatedAt() {\n    let record = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.preventSetUpdatedAt) {\n      return record;\n    } // TODO: Check if this can be deleted, Rodrigo does not rememebr WHY he added it. So he removed it to fix issue #5541\n    // setUpdatedAt(record = {}, checkQuery = false, query) {\n    // if (checkQuery === true) {\n    // \tif (!query || Object.keys(query).length === 0) {\n    // \t\tthrow new Meteor.Error('Models._Base: Empty query');\n    // \t}\n    // }\n\n\n    setUpdatedAt(record);\n    return record;\n  }\n\n  wrapModel() {\n    this.originals = {\n      insert: this.model.insert.bind(this.model),\n      update: this.model.update.bind(this.model),\n      remove: this.model.remove.bind(this.model)\n    };\n    const self = this;\n\n    this.model.insert = function () {\n      return self.insert(...arguments);\n    };\n\n    this.model.update = function () {\n      return self.update(...arguments);\n    };\n\n    this.model.remove = function () {\n      return self.remove(...arguments);\n    };\n  }\n\n  _ensureDefaultFields(options) {\n    if (!this.baseModel.defaultFields) {\n      return options;\n    }\n\n    if (!options) {\n      return {\n        fields: this.baseModel.defaultFields\n      };\n    }\n\n    if (options.fields != null && Object.keys(options.fields).length > 0) {\n      return options;\n    }\n\n    return _objectSpread(_objectSpread({}, options), {}, {\n      fields: this.baseModel.defaultFields\n    });\n  }\n\n  _doNotMixInclusionAndExclusionFields(options) {\n    const optionsDef = this._ensureDefaultFields(options);\n\n    if (!(optionsDef !== null && optionsDef !== void 0 && optionsDef.fields)) {\n      return optionsDef;\n    }\n\n    const keys = Object.keys(optionsDef.fields);\n    const removeKeys = keys.filter(key => optionsDef.fields[key] === 0);\n\n    if (keys.length > removeKeys.length) {\n      removeKeys.forEach(key => delete optionsDef.fields[key]);\n    }\n\n    return optionsDef;\n  }\n\n  find() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    const optionsDef = this._doNotMixInclusionAndExclusionFields(options);\n\n    return this.model.find(query, optionsDef);\n  }\n\n  findById(_id, options) {\n    return this.find({\n      _id\n    }, options);\n  }\n\n  findOne() {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    const optionsDef = this._doNotMixInclusionAndExclusionFields(options);\n\n    return this.model.findOne(query, optionsDef);\n  }\n\n  findOneById(_id, options) {\n    return this.findOne({\n      _id\n    }, options);\n  }\n\n  findOneByIds(ids, options) {\n    return this.findOne({\n      _id: {\n        $in: ids\n      }\n    }, options);\n  }\n\n  updateHasPositionalOperator(update) {\n    return Object.keys(update).some(key => key.includes('.$') || Match.test(update[key], Object) && this.updateHasPositionalOperator(update[key]));\n  }\n\n  insert(record) {\n    this.setUpdatedAt(record);\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    const result = this.originals.insert(record, ...args);\n    record._id = result;\n    return result;\n  }\n\n  update(query, update) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.setUpdatedAt(update, true, query);\n    return this.originals.update(query, update, options);\n  }\n\n  upsert(query, update) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    options.upsert = true;\n    options._returnObject = true;\n    return this.update(query, update, options);\n  }\n\n  remove(query) {\n    const records = this.model.find(query).fetch();\n    const ids = [];\n\n    for (const record of records) {\n      ids.push(record._id);\n      record._deletedAt = new Date();\n      record.__collection__ = this.name;\n      trash.upsert({\n        _id: record._id\n      }, _.omit(record, '_id'));\n    }\n\n    query = {\n      _id: {\n        $in: ids\n      }\n    };\n    return this.originals.remove(query);\n  }\n\n  insertOrUpsert() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (args[0] && args[0]._id) {\n      const {\n        _id\n      } = args[0];\n      delete args[0]._id;\n      args.unshift({\n        _id\n      });\n      this.upsert(...args);\n      return _id;\n    }\n\n    return this.insert(...args);\n  }\n\n  allow() {\n    return this.model.allow(...arguments);\n  }\n\n  deny() {\n    return this.model.deny(...arguments);\n  }\n\n  ensureIndex() {\n    return this.model._ensureIndex(...arguments);\n  }\n\n  dropIndex() {\n    return this.model._dropIndex(...arguments);\n  }\n\n  tryEnsureIndex() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    try {\n      return this.ensureIndex(...args);\n    } catch (e) {\n      console.error('Error creating index:', this.name, '->', ...args, e);\n    }\n  }\n\n  tryDropIndex() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    try {\n      return this.dropIndex(...args);\n    } catch (e) {\n      console.error('Error dropping index:', this.name, '->', ...args, e);\n    }\n  }\n\n  trashFind(query, options) {\n    query.__collection__ = this.name;\n    return trash.find(query, options);\n  }\n\n  trashFindOneById(_id, options) {\n    const query = {\n      _id,\n      __collection__: this.name\n    };\n    return trash.findOne(query, options);\n  }\n\n  trashFindDeletedAfter(deletedAt) {\n    let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let options = arguments.length > 2 ? arguments[2] : undefined;\n    query.__collection__ = this.name;\n    query._deletedAt = {\n      $gt: deletedAt\n    };\n    return trash.find(query, options);\n  }\n\n}","map":{"version":3,"sources":["app/models/server/models/_BaseDb.js"],"names":["_objectSpread","module","link","default","v","export","trash","BaseDbWatch","BaseDb","EventEmitter","Match","Mongo","_","setUpdatedAt","metrics","getOplogHandle","SystemLogger","baseName","Collection","_ensureIndex","__collection__","_deletedAt","expireAfterSeconds","rid","e","error","actions","i","u","d","constructor","collectionName","process","env","DISABLE_DB_WATCH","initDbWatch","_oplogHandle","Promise","await","handleListener","event","removeListener","query","collection","Error","onOplogEntry","processOplogRecord","bind","METEOR_OPLOG_TOO_FAR_BEHIND","_defineTooFarBehind","Number","MAX_SAFE_INTEGER","on","id","op","action","oplog","inc","emit","clientAction","o","_id","data","$set","$unset","diff","key","hasOwnProperty","unset","undefined","model","baseModel","options","test","String","_name","name","preventSetUpdatedAt","wrapModel","tryEnsureIndex","_updatedAt","_updatedAtIndexOptions","record","originals","insert","update","remove","self","_ensureDefaultFields","defaultFields","fields","Object","keys","length","_doNotMixInclusionAndExclusionFields","optionsDef","removeKeys","filter","forEach","find","findById","findOne","findOneById","findOneByIds","ids","$in","updateHasPositionalOperator","some","includes","args","result","upsert","_returnObject","records","fetch","push","Date","omit","insertOrUpsert","unshift","allow","deny","ensureIndex","dropIndex","_dropIndex","console","tryDropIndex","trashFind","trashFindOneById","trashFindDeletedAfter","deletedAt","$gt"],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\n\nimport { Match } from 'meteor/check';\nimport { Mongo } from 'meteor/mongo';\nimport _ from 'underscore';\n\nimport { setUpdatedAt } from '../lib/setUpdatedAt';\nimport { metrics } from '../../../metrics/server/lib/metrics';\nimport { getOplogHandle } from './_oplogHandle';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\n\nconst baseName = 'rocketchat_';\n\nexport const trash = new Mongo.Collection(`${baseName}_trash`);\ntry {\n\ttrash._ensureIndex({ __collection__: 1 });\n\ttrash._ensureIndex({ _deletedAt: 1 }, { expireAfterSeconds: 60 * 60 * 24 * 30 });\n\n\ttrash._ensureIndex({ rid: 1, __collection__: 1, _deletedAt: 1 });\n} catch (e) {\n\tSystemLogger.error(e);\n}\n\nconst actions = {\n\ti: 'insert',\n\tu: 'update',\n\td: 'remove',\n};\n\nexport class BaseDbWatch extends EventEmitter {\n\tconstructor(collectionName) {\n\t\tsuper();\n\t\tthis.collectionName = collectionName;\n\n\t\tif (!process.env.DISABLE_DB_WATCH) {\n\t\t\tthis.initDbWatch();\n\t\t}\n\t}\n\n\tinitDbWatch() {\n\t\tconst _oplogHandle = Promise.await(getOplogHandle());\n\n\t\t// When someone start listening for changes we start oplog if available\n\t\tconst handleListener = async (event /* , listener*/) => {\n\t\t\tif (event !== 'change') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.removeListener('newListener', handleListener);\n\n\t\t\tconst query = {\n\t\t\t\tcollection: this.collectionName,\n\t\t\t};\n\n\t\t\tif (!_oplogHandle) {\n\t\t\t\tthrow new Error(`Error: Unable to find Mongodb Oplog. You must run the server with oplog enabled. Try the following:\\n\n\t\t\t\t1. Start your mongodb in a replicaset mode: mongod --smallfiles --oplogSize 128 --replSet rs0\\n\n\t\t\t\t2. Start the replicaset via mongodb shell: mongo mongo/meteor --eval \"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\"\\n\n\t\t\t\t3. Start your instance with OPLOG configuration: export MONGO_OPLOG_URL=mongodb://localhost:27017/local MONGO_URL=mongodb://localhost:27017/meteor node main.js\n\t\t\t\t`);\n\t\t\t}\n\n\t\t\t_oplogHandle.onOplogEntry(query, this.processOplogRecord.bind(this));\n\t\t\t// Meteor will handle if we have a value https://github.com/meteor/meteor/blob/5dcd0b2eb9c8bf881ffbee98bc4cb7631772c4da/packages/mongo/oplog_tailing.js#L5\n\t\t\tif (process.env.METEOR_OPLOG_TOO_FAR_BEHIND == null) {\n\t\t\t\t_oplogHandle._defineTooFarBehind(Number.MAX_SAFE_INTEGER);\n\t\t\t}\n\t\t};\n\n\t\tif (_oplogHandle) {\n\t\t\tthis.on('newListener', handleListener);\n\t\t}\n\t}\n\n\tprocessOplogRecord({ id, op }) {\n\t\tconst action = actions[op.op];\n\t\tmetrics.oplog.inc({\n\t\t\tcollection: this.collectionName,\n\t\t\top: action,\n\t\t});\n\n\t\tif (action === 'insert') {\n\t\t\tthis.emit('change', {\n\t\t\t\taction,\n\t\t\t\tclientAction: 'inserted',\n\t\t\t\tid: op.o._id,\n\t\t\t\tdata: op.o,\n\t\t\t\toplog: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (action === 'update') {\n\t\t\tif (!op.o.$set && !op.o.$unset) {\n\t\t\t\tthis.emit('change', {\n\t\t\t\t\taction,\n\t\t\t\t\tclientAction: 'updated',\n\t\t\t\t\tid,\n\t\t\t\t\tdata: op.o,\n\t\t\t\t\toplog: true,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst diff = {};\n\t\t\tif (op.o.$set) {\n\t\t\t\tfor (const key in op.o.$set) {\n\t\t\t\t\tif (op.o.$set.hasOwnProperty(key)) {\n\t\t\t\t\t\tdiff[key] = op.o.$set[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst unset = {};\n\t\t\tif (op.o.$unset) {\n\t\t\t\tfor (const key in op.o.$unset) {\n\t\t\t\t\tif (op.o.$unset.hasOwnProperty(key)) {\n\t\t\t\t\t\tdiff[key] = undefined;\n\t\t\t\t\t\tunset[key] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.emit('change', {\n\t\t\t\taction,\n\t\t\t\tclientAction: 'updated',\n\t\t\t\tid,\n\t\t\t\tdiff,\n\t\t\t\tunset,\n\t\t\t\toplog: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (action === 'remove') {\n\t\t\tthis.emit('change', {\n\t\t\t\taction,\n\t\t\t\tclientAction: 'removed',\n\t\t\t\tid,\n\t\t\t\toplog: true,\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class BaseDb extends BaseDbWatch {\n\tconstructor(model, baseModel, options = {}) {\n\t\tconst collectionName = Match.test(model, String) ? baseName + model : model._name;\n\n\t\tsuper(collectionName);\n\n\t\tthis.collectionName = collectionName;\n\n\t\tif (Match.test(model, String)) {\n\t\t\tthis.name = model;\n\t\t\tthis.collectionName = this.baseName + this.name;\n\t\t\tthis.model = new Mongo.Collection(this.collectionName);\n\t\t} else {\n\t\t\tthis.name = model._name;\n\t\t\tthis.collectionName = this.name;\n\t\t\tthis.model = model;\n\t\t}\n\n\t\tthis.baseModel = baseModel;\n\n\t\tthis.preventSetUpdatedAt = !!options.preventSetUpdatedAt;\n\n\t\tthis.wrapModel();\n\n\t\tthis.tryEnsureIndex({ _updatedAt: 1 }, options._updatedAtIndexOptions);\n\t}\n\n\tget baseName() {\n\t\treturn baseName;\n\t}\n\n\tsetUpdatedAt(record = {}) {\n\t\tif (this.preventSetUpdatedAt) {\n\t\t\treturn record;\n\t\t}\n\t\t// TODO: Check if this can be deleted, Rodrigo does not rememebr WHY he added it. So he removed it to fix issue #5541\n\t\t// setUpdatedAt(record = {}, checkQuery = false, query) {\n\t\t// if (checkQuery === true) {\n\t\t// \tif (!query || Object.keys(query).length === 0) {\n\t\t// \t\tthrow new Meteor.Error('Models._Base: Empty query');\n\t\t// \t}\n\t\t// }\n\n\t\tsetUpdatedAt(record);\n\n\t\treturn record;\n\t}\n\n\twrapModel() {\n\t\tthis.originals = {\n\t\t\tinsert: this.model.insert.bind(this.model),\n\t\t\tupdate: this.model.update.bind(this.model),\n\t\t\tremove: this.model.remove.bind(this.model),\n\t\t};\n\t\tconst self = this;\n\n\t\tthis.model.insert = function (...args) {\n\t\t\treturn self.insert(...args);\n\t\t};\n\n\t\tthis.model.update = function (...args) {\n\t\t\treturn self.update(...args);\n\t\t};\n\n\t\tthis.model.remove = function (...args) {\n\t\t\treturn self.remove(...args);\n\t\t};\n\t}\n\n\t_ensureDefaultFields(options) {\n\t\tif (!this.baseModel.defaultFields) {\n\t\t\treturn options;\n\t\t}\n\n\t\tif (!options) {\n\t\t\treturn { fields: this.baseModel.defaultFields };\n\t\t}\n\n\t\tif (options.fields != null && Object.keys(options.fields).length > 0) {\n\t\t\treturn options;\n\t\t}\n\n\t\treturn {\n\t\t\t...options,\n\t\t\tfields: this.baseModel.defaultFields,\n\t\t};\n\t}\n\n\t_doNotMixInclusionAndExclusionFields(options) {\n\t\tconst optionsDef = this._ensureDefaultFields(options);\n\t\tif (!optionsDef?.fields) {\n\t\t\treturn optionsDef;\n\t\t}\n\n\t\tconst keys = Object.keys(optionsDef.fields);\n\t\tconst removeKeys = keys.filter((key) => optionsDef.fields[key] === 0);\n\t\tif (keys.length > removeKeys.length) {\n\t\t\tremoveKeys.forEach((key) => delete optionsDef.fields[key]);\n\t\t}\n\n\t\treturn optionsDef;\n\t}\n\n\tfind(query = {}, options = {}) {\n\t\tconst optionsDef = this._doNotMixInclusionAndExclusionFields(options);\n\t\treturn this.model.find(query, optionsDef);\n\t}\n\n\tfindById(_id, options) {\n\t\treturn this.find({ _id }, options);\n\t}\n\n\tfindOne(query = {}, options = {}) {\n\t\tconst optionsDef = this._doNotMixInclusionAndExclusionFields(options);\n\t\treturn this.model.findOne(query, optionsDef);\n\t}\n\n\tfindOneById(_id, options) {\n\t\treturn this.findOne({ _id }, options);\n\t}\n\n\tfindOneByIds(ids, options) {\n\t\treturn this.findOne({ _id: { $in: ids } }, options);\n\t}\n\n\tupdateHasPositionalOperator(update) {\n\t\treturn Object.keys(update).some(\n\t\t\t(key) => key.includes('.$') || (Match.test(update[key], Object) && this.updateHasPositionalOperator(update[key])),\n\t\t);\n\t}\n\n\tinsert(record, ...args) {\n\t\tthis.setUpdatedAt(record);\n\n\t\tconst result = this.originals.insert(record, ...args);\n\n\t\trecord._id = result;\n\n\t\treturn result;\n\t}\n\n\tupdate(query, update, options = {}) {\n\t\tthis.setUpdatedAt(update, true, query);\n\n\t\treturn this.originals.update(query, update, options);\n\t}\n\n\tupsert(query, update, options = {}) {\n\t\toptions.upsert = true;\n\t\toptions._returnObject = true;\n\t\treturn this.update(query, update, options);\n\t}\n\n\tremove(query) {\n\t\tconst records = this.model.find(query).fetch();\n\n\t\tconst ids = [];\n\t\tfor (const record of records) {\n\t\t\tids.push(record._id);\n\n\t\t\trecord._deletedAt = new Date();\n\t\t\trecord.__collection__ = this.name;\n\n\t\t\ttrash.upsert({ _id: record._id }, _.omit(record, '_id'));\n\t\t}\n\n\t\tquery = { _id: { $in: ids } };\n\n\t\treturn this.originals.remove(query);\n\t}\n\n\tinsertOrUpsert(...args) {\n\t\tif (args[0] && args[0]._id) {\n\t\t\tconst { _id } = args[0];\n\t\t\tdelete args[0]._id;\n\t\t\targs.unshift({\n\t\t\t\t_id,\n\t\t\t});\n\n\t\t\tthis.upsert(...args);\n\t\t\treturn _id;\n\t\t}\n\t\treturn this.insert(...args);\n\t}\n\n\tallow(...args) {\n\t\treturn this.model.allow(...args);\n\t}\n\n\tdeny(...args) {\n\t\treturn this.model.deny(...args);\n\t}\n\n\tensureIndex(...args) {\n\t\treturn this.model._ensureIndex(...args);\n\t}\n\n\tdropIndex(...args) {\n\t\treturn this.model._dropIndex(...args);\n\t}\n\n\ttryEnsureIndex(...args) {\n\t\ttry {\n\t\t\treturn this.ensureIndex(...args);\n\t\t} catch (e) {\n\t\t\tconsole.error('Error creating index:', this.name, '->', ...args, e);\n\t\t}\n\t}\n\n\ttryDropIndex(...args) {\n\t\ttry {\n\t\t\treturn this.dropIndex(...args);\n\t\t} catch (e) {\n\t\t\tconsole.error('Error dropping index:', this.name, '->', ...args, e);\n\t\t}\n\t}\n\n\ttrashFind(query, options) {\n\t\tquery.__collection__ = this.name;\n\n\t\treturn trash.find(query, options);\n\t}\n\n\ttrashFindOneById(_id, options) {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\t__collection__: this.name,\n\t\t};\n\n\t\treturn trash.findOne(query, options);\n\t}\n\n\ttrashFindDeletedAfter(deletedAt, query = {}, options) {\n\t\tquery.__collection__ = this.name;\n\t\tquery._deletedAt = {\n\t\t\t$gt: deletedAt,\n\t\t};\n\n\t\treturn trash.find(query, options);\n\t}\n}\n"]},"sourceType":"module","hash":"65e72592a08bcce6ad2245dc038102e2d490b2aa"}

{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/notifications/email.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/notifications/email.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/notifications/email.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/notifications/email.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/notifications/email.js"}},"code":"module.export({\n  getEmailData: () => getEmailData,\n  sendEmailFromData: () => sendEmailFromData,\n  sendEmail: () => sendEmail,\n  shouldNotifyEmail: () => shouldNotifyEmail\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 2);\nlet escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n\n}, 3);\nlet Mailer;\nmodule.link(\"../../../../mailer\", {\n  \"*\"(v) {\n    Mailer = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\nlet roomTypes;\nmodule.link(\"../../../../utils\", {\n  roomTypes(v) {\n    roomTypes = v;\n  }\n\n}, 6);\nlet metrics;\nmodule.link(\"../../../../metrics\", {\n  metrics(v) {\n    metrics = v;\n  }\n\n}, 7);\nlet callbacks;\nmodule.link(\"../../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 8);\nlet getURL;\nmodule.link(\"../../../../utils/server\", {\n  getURL(v) {\n    getURL = v;\n  }\n\n}, 9);\nlet advice = '';\nlet goToMessage = '';\nMeteor.startup(() => {\n  settings.watch('email_style', function () {\n    goToMessage = Mailer.inlinecss('<p><a class=\\'btn\\' href=\"[room_path]\">{Offline_Link_Message}</a></p>');\n  });\n  Mailer.getTemplate('Email_Footer_Direct_Reply', value => {\n    advice = value;\n  });\n});\n\nfunction getEmailContent(_ref) {\n  let {\n    message,\n    user,\n    room\n  } = _ref;\n  const lng = user && user.language || settings.get('Language') || 'en';\n  const roomName = escapeHTML(\"#\".concat(roomTypes.getRoomName(room.t, room)));\n  const userName = escapeHTML(settings.get('UI_Use_Real_Name') ? message.u.name || message.u.username : message.u.username);\n  const roomType = roomTypes.getConfig(room.t);\n\n  const header = TAPi18n.__(!roomType.isGroupChat(room) ? 'User_sent_a_message_to_you' : 'User_sent_a_message_on_channel', {\n    username: userName,\n    channel: roomName,\n    lng\n  });\n\n  if (message.msg !== '') {\n    if (!settings.get('Email_notification_show_message')) {\n      return header;\n    }\n\n    let messageContent = escapeHTML(message.msg);\n\n    if (message.t === 'e2e') {\n      messageContent = TAPi18n.__('Encrypted_message', {\n        lng\n      });\n    }\n\n    message = callbacks.run('renderMessage', message);\n\n    if (message.tokens && message.tokens.length > 0) {\n      message.tokens.forEach(token => {\n        token.text = token.text.replace(/([^\\$])(\\$[^\\$])/gm, '$1$$$2');\n        messageContent = messageContent.replace(token.token, token.text);\n      });\n    }\n\n    return \"\".concat(header, \":<br/><br/>\").concat(messageContent.replace(/\\n/gm, '<br/>'));\n  }\n\n  if (message.file) {\n    const fileHeader = TAPi18n.__(!roomType.isGroupChat(room) ? 'User_uploaded_a_file_to_you' : 'User_uploaded_a_file_on_channel', {\n      username: userName,\n      channel: roomName,\n      lng\n    });\n\n    if (!settings.get('Email_notification_show_message')) {\n      return fileHeader;\n    }\n\n    let content = \"\".concat(escapeHTML(message.file.name));\n\n    if (message.attachments && message.attachments.length === 1 && message.attachments[0].description !== '') {\n      content += \"<br/><br/>\".concat(escapeHTML(message.attachments[0].description));\n    }\n\n    return \"\".concat(fileHeader, \":<br/><br/>\").concat(content);\n  }\n\n  if (!settings.get('Email_notification_show_message')) {\n    return header;\n  }\n\n  if (Array.isArray(message.attachments) && message.attachments.length > 0) {\n    const [attachment] = message.attachments;\n    let content = '';\n\n    if (attachment.title) {\n      content += \"\".concat(escapeHTML(attachment.title), \"<br/>\");\n    }\n\n    if (attachment.text) {\n      content += \"\".concat(escapeHTML(attachment.text), \"<br/>\");\n    }\n\n    return \"\".concat(header, \":<br/><br/>\").concat(content);\n  }\n\n  return header;\n}\n\nconst getButtonUrl = (room, subscription, message) => {\n  const path = \"\".concat(s.ltrim(roomTypes.getRelativePath(room.t, subscription), '/'), \"?msg=\").concat(message._id);\n  return getURL(path, {\n    full: true,\n    cloud: settings.get('Offline_Message_Use_DeepLink'),\n    cloud_route: 'room',\n    cloud_params: {\n      rid: room._id,\n      mid: message._id\n    }\n  });\n};\n\nfunction generateNameEmail(name, email) {\n  return \"\".concat(String(name).replace(/@/g, '%40').replace(/[<>,]/g, ''), \" <\").concat(email, \">\");\n}\n\nfunction getEmailData(_ref2) {\n  var _sender$emails;\n\n  let {\n    message,\n    receiver,\n    sender,\n    subscription,\n    room,\n    emailAddress,\n    hasMentionToUser\n  } = _ref2;\n  const username = settings.get('UI_Use_Real_Name') ? message.u.name || message.u.username : message.u.username;\n  let subjectKey = 'Offline_Mention_All_Email';\n\n  if (!roomTypes.getConfig(room.t).isGroupChat(room)) {\n    subjectKey = 'Offline_DM_Email';\n  } else if (hasMentionToUser) {\n    subjectKey = 'Offline_Mention_Email';\n  }\n\n  const emailSubject = Mailer.replace(settings.get(subjectKey), {\n    user: username,\n    room: roomTypes.getRoomName(room.t, room)\n  });\n  const content = getEmailContent({\n    message,\n    user: receiver,\n    room\n  });\n  const room_path = getButtonUrl(room, subscription, message);\n  const receiverName = settings.get('UI_Use_Real_Name') ? receiver.name || receiver.username : receiver.username;\n  const email = {\n    from: generateNameEmail(username, settings.get('From_Email')),\n    to: generateNameEmail(receiverName, emailAddress),\n    subject: emailSubject,\n    html: content + goToMessage + (settings.get('Direct_Reply_Enable') ? advice : ''),\n    data: {\n      room_path\n    },\n    headers: {}\n  };\n\n  if (((_sender$emails = sender.emails) === null || _sender$emails === void 0 ? void 0 : _sender$emails.length) > 0 && settings.get('Add_Sender_To_ReplyTo')) {\n    const [senderEmail] = sender.emails;\n    email.headers['Reply-To'] = generateNameEmail(username, senderEmail.address);\n  } // If direct reply enabled, email content with headers\n\n\n  if (settings.get('Direct_Reply_Enable')) {\n    const replyto = settings.get('Direct_Reply_ReplyTo') || settings.get('Direct_Reply_Username'); // Reply-To header with format \"username+messageId@domain\"\n\n    email.headers['Reply-To'] = \"\".concat(replyto.split('@')[0].split(settings.get('Direct_Reply_Separator'))[0]).concat(settings.get('Direct_Reply_Separator')).concat(message._id, \"@\").concat(replyto.split('@')[1]);\n  }\n\n  metrics.notificationsSent.inc({\n    notification_type: 'email'\n  });\n  return email;\n}\n\nfunction sendEmailFromData(data) {\n  metrics.notificationsSent.inc({\n    notification_type: 'email'\n  });\n  return Mailer.send(data);\n}\n\nfunction sendEmail(_ref3) {\n  let {\n    message,\n    user,\n    subscription,\n    room,\n    emailAddress,\n    hasMentionToUser\n  } = _ref3;\n  return sendEmailFromData(getEmailData({\n    message,\n    user,\n    subscription,\n    room,\n    emailAddress,\n    hasMentionToUser\n  }));\n}\n\nfunction shouldNotifyEmail(_ref4) {\n  let {\n    disableAllMessageNotifications,\n    statusConnection,\n    emailNotifications,\n    isHighlighted,\n    hasMentionToUser,\n    hasMentionToAll,\n    hasReplyToThread,\n    roomType,\n    isThread\n  } = _ref4;\n\n  // email notifications are disabled globally\n  if (!settings.get('Accounts_AllowEmailNotifications')) {\n    return false;\n  } // user/room preference to nothing\n\n\n  if (emailNotifications === 'nothing') {\n    return false;\n  } // user connected (don't need to send him an email)\n\n\n  if (statusConnection === 'online') {\n    return false;\n  } // no user or room preference\n\n\n  if (emailNotifications == null) {\n    if (disableAllMessageNotifications && !isHighlighted && !hasMentionToUser && !hasReplyToThread) {\n      return false;\n    } // default server preference is disabled\n\n\n    if (settings.get('Accounts_Default_User_Preferences_emailNotificationMode') === 'nothing') {\n      return false;\n    }\n  }\n\n  return (roomType === 'd' || isHighlighted || emailNotifications === 'all' || hasMentionToUser || !disableAllMessageNotifications && hasMentionToAll) && (!isThread || hasReplyToThread);\n}","map":{"version":3,"sources":["app/lib/server/functions/notifications/email.js"],"names":["module","export","getEmailData","sendEmailFromData","sendEmail","shouldNotifyEmail","Meteor","link","v","TAPi18n","s","default","escapeHTML","Mailer","settings","roomTypes","metrics","callbacks","getURL","advice","goToMessage","startup","watch","inlinecss","getTemplate","value","getEmailContent","message","user","room","lng","language","get","roomName","getRoomName","t","userName","u","name","username","roomType","getConfig","header","__","isGroupChat","channel","msg","messageContent","run","tokens","length","forEach","token","text","replace","file","fileHeader","content","attachments","description","Array","isArray","attachment","title","getButtonUrl","subscription","path","ltrim","getRelativePath","_id","full","cloud","cloud_route","cloud_params","rid","mid","generateNameEmail","email","String","receiver","sender","emailAddress","hasMentionToUser","subjectKey","emailSubject","room_path","receiverName","from","to","subject","html","data","headers","emails","senderEmail","address","replyto","split","notificationsSent","inc","notification_type","send","disableAllMessageNotifications","statusConnection","emailNotifications","isHighlighted","hasMentionToAll","hasReplyToThread","isThread"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,YAAY,EAAC,MAAIA,YAAlB;AAA+BC,EAAAA,iBAAiB,EAAC,MAAIA,iBAArD;AAAuEC,EAAAA,SAAS,EAAC,MAAIA,SAArF;AAA+FC,EAAAA,iBAAiB,EAAC,MAAIA;AAArH,CAAd;AAAuJ,IAAIC,MAAJ;AAAWN,MAAM,CAACO,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAM,CAACE,CAAD,EAAG;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,OAAJ;AAAYT,MAAM,CAACO,IAAP,CAAY,4BAAZ,EAAyC;AAACE,EAAAA,OAAO,CAACD,CAAD,EAAG;AAACC,IAAAA,OAAO,GAACD,CAAR;AAAU;;AAAtB,CAAzC,EAAiE,CAAjE;AAAoE,IAAIE,CAAJ;AAAMV,MAAM,CAACO,IAAP,CAAY,mBAAZ,EAAgC;AAACI,EAAAA,OAAO,CAACH,CAAD,EAAG;AAACE,IAAAA,CAAC,GAACF,CAAF;AAAI;;AAAhB,CAAhC,EAAkD,CAAlD;AAAqD,IAAII,UAAJ;AAAeZ,MAAM,CAACO,IAAP,CAAY,6BAAZ,EAA0C;AAACK,EAAAA,UAAU,CAACJ,CAAD,EAAG;AAACI,IAAAA,UAAU,GAACJ,CAAX;AAAa;;AAA5B,CAA1C,EAAwE,CAAxE;AAA2E,IAAIK,MAAJ;AAAWb,MAAM,CAACO,IAAP,CAAY,oBAAZ,EAAiC;AAAC,MAAIC,CAAJ,EAAM;AAACK,IAAAA,MAAM,GAACL,CAAP;AAAS;;AAAjB,CAAjC,EAAoD,CAApD;AAAuD,IAAIM,QAAJ;AAAad,MAAM,CAACO,IAAP,CAAY,6BAAZ,EAA0C;AAACO,EAAAA,QAAQ,CAACN,CAAD,EAAG;AAACM,IAAAA,QAAQ,GAACN,CAAT;AAAW;;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAIO,SAAJ;AAAcf,MAAM,CAACO,IAAP,CAAY,mBAAZ,EAAgC;AAACQ,EAAAA,SAAS,CAACP,CAAD,EAAG;AAACO,IAAAA,SAAS,GAACP,CAAV;AAAY;;AAA1B,CAAhC,EAA4D,CAA5D;AAA+D,IAAIQ,OAAJ;AAAYhB,MAAM,CAACO,IAAP,CAAY,qBAAZ,EAAkC;AAACS,EAAAA,OAAO,CAACR,CAAD,EAAG;AAACQ,IAAAA,OAAO,GAACR,CAAR;AAAU;;AAAtB,CAAlC,EAA0D,CAA1D;AAA6D,IAAIS,SAAJ;AAAcjB,MAAM,CAACO,IAAP,CAAY,8BAAZ,EAA2C;AAACU,EAAAA,SAAS,CAACT,CAAD,EAAG;AAACS,IAAAA,SAAS,GAACT,CAAV;AAAY;;AAA1B,CAA3C,EAAuE,CAAvE;AAA0E,IAAIU,MAAJ;AAAWlB,MAAM,CAACO,IAAP,CAAY,0BAAZ,EAAuC;AAACW,EAAAA,MAAM,CAACV,CAAD,EAAG;AAACU,IAAAA,MAAM,GAACV,CAAP;AAAS;;AAApB,CAAvC,EAA6D,CAA7D;AAY30B,IAAIW,MAAM,GAAG,EAAb;AACA,IAAIC,WAAW,GAAG,EAAlB;AACAd,MAAM,CAACe,OAAP,CAAe,MAAM;AACpBP,EAAAA,QAAQ,CAACQ,KAAT,CAAe,aAAf,EAA8B,YAAY;AACzCF,IAAAA,WAAW,GAAGP,MAAM,CAACU,SAAP,CAAiB,uEAAjB,CAAd;AACA,GAFD;AAGAV,EAAAA,MAAM,CAACW,WAAP,CAAmB,2BAAnB,EAAiDC,KAAD,IAAW;AAC1DN,IAAAA,MAAM,GAAGM,KAAT;AACA,GAFD;AAGA,CAPD;;AASA,SAASC,eAAT,OAAkD;AAAA,MAAzB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAyB;AACjD,QAAMC,GAAG,GAAIF,IAAI,IAAIA,IAAI,CAACG,QAAd,IAA2BjB,QAAQ,CAACkB,GAAT,CAAa,UAAb,CAA3B,IAAuD,IAAnE;AAEA,QAAMC,QAAQ,GAAGrB,UAAU,YAAKG,SAAS,CAACmB,WAAV,CAAsBL,IAAI,CAACM,CAA3B,EAA8BN,IAA9B,CAAL,EAA3B;AACA,QAAMO,QAAQ,GAAGxB,UAAU,CAACE,QAAQ,CAACkB,GAAT,CAAa,kBAAb,IAAmCL,OAAO,CAACU,CAAR,CAAUC,IAAV,IAAkBX,OAAO,CAACU,CAAR,CAAUE,QAA/D,GAA0EZ,OAAO,CAACU,CAAR,CAAUE,QAArF,CAA3B;AAEA,QAAMC,QAAQ,GAAGzB,SAAS,CAAC0B,SAAV,CAAoBZ,IAAI,CAACM,CAAzB,CAAjB;;AAEA,QAAMO,MAAM,GAAGjC,OAAO,CAACkC,EAAR,CAAW,CAACH,QAAQ,CAACI,WAAT,CAAqBf,IAArB,CAAD,GAA8B,4BAA9B,GAA6D,gCAAxE,EAA0G;AACxHU,IAAAA,QAAQ,EAAEH,QAD8G;AAExHS,IAAAA,OAAO,EAAEZ,QAF+G;AAGxHH,IAAAA;AAHwH,GAA1G,CAAf;;AAMA,MAAIH,OAAO,CAACmB,GAAR,KAAgB,EAApB,EAAwB;AACvB,QAAI,CAAChC,QAAQ,CAACkB,GAAT,CAAa,iCAAb,CAAL,EAAsD;AACrD,aAAOU,MAAP;AACA;;AAED,QAAIK,cAAc,GAAGnC,UAAU,CAACe,OAAO,CAACmB,GAAT,CAA/B;;AAEA,QAAInB,OAAO,CAACQ,CAAR,KAAc,KAAlB,EAAyB;AACxBY,MAAAA,cAAc,GAAGtC,OAAO,CAACkC,EAAR,CAAW,mBAAX,EAAgC;AAAEb,QAAAA;AAAF,OAAhC,CAAjB;AACA;;AAEDH,IAAAA,OAAO,GAAGV,SAAS,CAAC+B,GAAV,CAAc,eAAd,EAA+BrB,OAA/B,CAAV;;AACA,QAAIA,OAAO,CAACsB,MAAR,IAAkBtB,OAAO,CAACsB,MAAR,CAAeC,MAAf,GAAwB,CAA9C,EAAiD;AAChDvB,MAAAA,OAAO,CAACsB,MAAR,CAAeE,OAAf,CAAwBC,KAAD,IAAW;AACjCA,QAAAA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmB,oBAAnB,EAAyC,QAAzC,CAAb;AACAP,QAAAA,cAAc,GAAGA,cAAc,CAACO,OAAf,CAAuBF,KAAK,CAACA,KAA7B,EAAoCA,KAAK,CAACC,IAA1C,CAAjB;AACA,OAHD;AAIA;;AACD,qBAAUX,MAAV,wBAA8BK,cAAc,CAACO,OAAf,CAAuB,MAAvB,EAA+B,OAA/B,CAA9B;AACA;;AAED,MAAI3B,OAAO,CAAC4B,IAAZ,EAAkB;AACjB,UAAMC,UAAU,GAAG/C,OAAO,CAACkC,EAAR,CAAW,CAACH,QAAQ,CAACI,WAAT,CAAqBf,IAArB,CAAD,GAA8B,6BAA9B,GAA8D,iCAAzE,EAA4G;AAC9HU,MAAAA,QAAQ,EAAEH,QADoH;AAE9HS,MAAAA,OAAO,EAAEZ,QAFqH;AAG9HH,MAAAA;AAH8H,KAA5G,CAAnB;;AAMA,QAAI,CAAChB,QAAQ,CAACkB,GAAT,CAAa,iCAAb,CAAL,EAAsD;AACrD,aAAOwB,UAAP;AACA;;AAED,QAAIC,OAAO,aAAM7C,UAAU,CAACe,OAAO,CAAC4B,IAAR,CAAajB,IAAd,CAAhB,CAAX;;AAEA,QAAIX,OAAO,CAAC+B,WAAR,IAAuB/B,OAAO,CAAC+B,WAAR,CAAoBR,MAApB,KAA+B,CAAtD,IAA2DvB,OAAO,CAAC+B,WAAR,CAAoB,CAApB,EAAuBC,WAAvB,KAAuC,EAAtG,EAA0G;AACzGF,MAAAA,OAAO,wBAAiB7C,UAAU,CAACe,OAAO,CAAC+B,WAAR,CAAoB,CAApB,EAAuBC,WAAxB,CAA3B,CAAP;AACA;;AAED,qBAAUH,UAAV,wBAAkCC,OAAlC;AACA;;AAED,MAAI,CAAC3C,QAAQ,CAACkB,GAAT,CAAa,iCAAb,CAAL,EAAsD;AACrD,WAAOU,MAAP;AACA;;AAED,MAAIkB,KAAK,CAACC,OAAN,CAAclC,OAAO,CAAC+B,WAAtB,KAAsC/B,OAAO,CAAC+B,WAAR,CAAoBR,MAApB,GAA6B,CAAvE,EAA0E;AACzE,UAAM,CAACY,UAAD,IAAenC,OAAO,CAAC+B,WAA7B;AAEA,QAAID,OAAO,GAAG,EAAd;;AAEA,QAAIK,UAAU,CAACC,KAAf,EAAsB;AACrBN,MAAAA,OAAO,cAAO7C,UAAU,CAACkD,UAAU,CAACC,KAAZ,CAAjB,UAAP;AACA;;AACD,QAAID,UAAU,CAACT,IAAf,EAAqB;AACpBI,MAAAA,OAAO,cAAO7C,UAAU,CAACkD,UAAU,CAACT,IAAZ,CAAjB,UAAP;AACA;;AAED,qBAAUX,MAAV,wBAA8Be,OAA9B;AACA;;AAED,SAAOf,MAAP;AACA;;AAED,MAAMsB,YAAY,GAAG,CAACnC,IAAD,EAAOoC,YAAP,EAAqBtC,OAArB,KAAiC;AACrD,QAAMuC,IAAI,aAAMxD,CAAC,CAACyD,KAAF,CAAQpD,SAAS,CAACqD,eAAV,CAA0BvC,IAAI,CAACM,CAA/B,EAAkC8B,YAAlC,CAAR,EAAyD,GAAzD,CAAN,kBAA2EtC,OAAO,CAAC0C,GAAnF,CAAV;AACA,SAAOnD,MAAM,CAACgD,IAAD,EAAO;AACnBI,IAAAA,IAAI,EAAE,IADa;AAEnBC,IAAAA,KAAK,EAAEzD,QAAQ,CAACkB,GAAT,CAAa,8BAAb,CAFY;AAGnBwC,IAAAA,WAAW,EAAE,MAHM;AAInBC,IAAAA,YAAY,EAAE;AACbC,MAAAA,GAAG,EAAE7C,IAAI,CAACwC,GADG;AAEbM,MAAAA,GAAG,EAAEhD,OAAO,CAAC0C;AAFA;AAJK,GAAP,CAAb;AASA,CAXD;;AAaA,SAASO,iBAAT,CAA2BtC,IAA3B,EAAiCuC,KAAjC,EAAwC;AACvC,mBAAUC,MAAM,CAACxC,IAAD,CAAN,CAAagB,OAAb,CAAqB,IAArB,EAA2B,KAA3B,EAAkCA,OAAlC,CAA0C,QAA1C,EAAoD,EAApD,CAAV,eAAsEuB,KAAtE;AACA;;AAEM,SAAS3E,YAAT,QAAyG;AAAA;;AAAA,MAAnF;AAAEyB,IAAAA,OAAF;AAAWoD,IAAAA,QAAX;AAAqBC,IAAAA,MAArB;AAA6Bf,IAAAA,YAA7B;AAA2CpC,IAAAA,IAA3C;AAAiDoD,IAAAA,YAAjD;AAA+DC,IAAAA;AAA/D,GAAmF;AAC/G,QAAM3C,QAAQ,GAAGzB,QAAQ,CAACkB,GAAT,CAAa,kBAAb,IAAmCL,OAAO,CAACU,CAAR,CAAUC,IAAV,IAAkBX,OAAO,CAACU,CAAR,CAAUE,QAA/D,GAA0EZ,OAAO,CAACU,CAAR,CAAUE,QAArG;AACA,MAAI4C,UAAU,GAAG,2BAAjB;;AAEA,MAAI,CAACpE,SAAS,CAAC0B,SAAV,CAAoBZ,IAAI,CAACM,CAAzB,EAA4BS,WAA5B,CAAwCf,IAAxC,CAAL,EAAoD;AACnDsD,IAAAA,UAAU,GAAG,kBAAb;AACA,GAFD,MAEO,IAAID,gBAAJ,EAAsB;AAC5BC,IAAAA,UAAU,GAAG,uBAAb;AACA;;AAED,QAAMC,YAAY,GAAGvE,MAAM,CAACyC,OAAP,CAAexC,QAAQ,CAACkB,GAAT,CAAamD,UAAb,CAAf,EAAyC;AAC7DvD,IAAAA,IAAI,EAAEW,QADuD;AAE7DV,IAAAA,IAAI,EAAEd,SAAS,CAACmB,WAAV,CAAsBL,IAAI,CAACM,CAA3B,EAA8BN,IAA9B;AAFuD,GAAzC,CAArB;AAIA,QAAM4B,OAAO,GAAG/B,eAAe,CAAC;AAC/BC,IAAAA,OAD+B;AAE/BC,IAAAA,IAAI,EAAEmD,QAFyB;AAG/BlD,IAAAA;AAH+B,GAAD,CAA/B;AAMA,QAAMwD,SAAS,GAAGrB,YAAY,CAACnC,IAAD,EAAOoC,YAAP,EAAqBtC,OAArB,CAA9B;AAEA,QAAM2D,YAAY,GAAGxE,QAAQ,CAACkB,GAAT,CAAa,kBAAb,IAAmC+C,QAAQ,CAACzC,IAAT,IAAiByC,QAAQ,CAACxC,QAA7D,GAAwEwC,QAAQ,CAACxC,QAAtG;AAEA,QAAMsC,KAAK,GAAG;AACbU,IAAAA,IAAI,EAAEX,iBAAiB,CAACrC,QAAD,EAAWzB,QAAQ,CAACkB,GAAT,CAAa,YAAb,CAAX,CADV;AAEbwD,IAAAA,EAAE,EAAEZ,iBAAiB,CAACU,YAAD,EAAeL,YAAf,CAFR;AAGbQ,IAAAA,OAAO,EAAEL,YAHI;AAIbM,IAAAA,IAAI,EAAEjC,OAAO,GAAGrC,WAAV,IAAyBN,QAAQ,CAACkB,GAAT,CAAa,qBAAb,IAAsCb,MAAtC,GAA+C,EAAxE,CAJO;AAKbwE,IAAAA,IAAI,EAAE;AACLN,MAAAA;AADK,KALO;AAQbO,IAAAA,OAAO,EAAE;AARI,GAAd;;AAWA,MAAI,mBAAAZ,MAAM,CAACa,MAAP,kEAAe3C,MAAf,IAAwB,CAAxB,IAA6BpC,QAAQ,CAACkB,GAAT,CAAa,uBAAb,CAAjC,EAAwE;AACvE,UAAM,CAAC8D,WAAD,IAAgBd,MAAM,CAACa,MAA7B;AACAhB,IAAAA,KAAK,CAACe,OAAN,CAAc,UAAd,IAA4BhB,iBAAiB,CAACrC,QAAD,EAAWuD,WAAW,CAACC,OAAvB,CAA7C;AACA,GAtC8G,CAwC/G;;;AACA,MAAIjF,QAAQ,CAACkB,GAAT,CAAa,qBAAb,CAAJ,EAAyC;AACxC,UAAMgE,OAAO,GAAGlF,QAAQ,CAACkB,GAAT,CAAa,sBAAb,KAAwClB,QAAQ,CAACkB,GAAT,CAAa,uBAAb,CAAxD,CADwC,CAGxC;;AACA6C,IAAAA,KAAK,CAACe,OAAN,CAAc,UAAd,cAA+BI,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4BnF,QAAQ,CAACkB,GAAT,CAAa,wBAAb,CAA5B,EAAoE,CAApE,CAA/B,SAAwGlB,QAAQ,CAACkB,GAAT,CACvG,wBADuG,CAAxG,SAEIL,OAAO,CAAC0C,GAFZ,cAEmB2B,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAFnB;AAGA;;AAEDjF,EAAAA,OAAO,CAACkF,iBAAR,CAA0BC,GAA1B,CAA8B;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAA9B;AACA,SAAOvB,KAAP;AACA;;AAEM,SAAS1E,iBAAT,CAA2BwF,IAA3B,EAAiC;AACvC3E,EAAAA,OAAO,CAACkF,iBAAR,CAA0BC,GAA1B,CAA8B;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAA9B;AACA,SAAOvF,MAAM,CAACwF,IAAP,CAAYV,IAAZ,CAAP;AACA;;AAEM,SAASvF,SAAT,QAA0F;AAAA,MAAvE;AAAEuB,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBqC,IAAAA,YAAjB;AAA+BpC,IAAAA,IAA/B;AAAqCoD,IAAAA,YAArC;AAAmDC,IAAAA;AAAnD,GAAuE;AAChG,SAAO/E,iBAAiB,CAACD,YAAY,CAAC;AAAEyB,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBqC,IAAAA,YAAjB;AAA+BpC,IAAAA,IAA/B;AAAqCoD,IAAAA,YAArC;AAAmDC,IAAAA;AAAnD,GAAD,CAAb,CAAxB;AACA;;AAEM,SAAS7E,iBAAT,QAUJ;AAAA,MAV+B;AACjCiG,IAAAA,8BADiC;AAEjCC,IAAAA,gBAFiC;AAGjCC,IAAAA,kBAHiC;AAIjCC,IAAAA,aAJiC;AAKjCvB,IAAAA,gBALiC;AAMjCwB,IAAAA,eANiC;AAOjCC,IAAAA,gBAPiC;AAQjCnE,IAAAA,QARiC;AASjCoE,IAAAA;AATiC,GAU/B;;AACF;AACA,MAAI,CAAC9F,QAAQ,CAACkB,GAAT,CAAa,kCAAb,CAAL,EAAuD;AACtD,WAAO,KAAP;AACA,GAJC,CAMF;;;AACA,MAAIwE,kBAAkB,KAAK,SAA3B,EAAsC;AACrC,WAAO,KAAP;AACA,GATC,CAWF;;;AACA,MAAID,gBAAgB,KAAK,QAAzB,EAAmC;AAClC,WAAO,KAAP;AACA,GAdC,CAgBF;;;AACA,MAAIC,kBAAkB,IAAI,IAA1B,EAAgC;AAC/B,QAAIF,8BAA8B,IAAI,CAACG,aAAnC,IAAoD,CAACvB,gBAArD,IAAyE,CAACyB,gBAA9E,EAAgG;AAC/F,aAAO,KAAP;AACA,KAH8B,CAK/B;;;AACA,QAAI7F,QAAQ,CAACkB,GAAT,CAAa,yDAAb,MAA4E,SAAhF,EAA2F;AAC1F,aAAO,KAAP;AACA;AACD;;AAED,SACC,CAACQ,QAAQ,KAAK,GAAb,IACAiE,aADA,IAEAD,kBAAkB,KAAK,KAFvB,IAGAtB,gBAHA,IAIC,CAACoB,8BAAD,IAAmCI,eAJrC,MAKC,CAACE,QAAD,IAAaD,gBALd,CADD;AAQA","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport s from 'underscore.string';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport * as Mailer from '../../../../mailer';\nimport { settings } from '../../../../settings/server';\nimport { roomTypes } from '../../../../utils';\nimport { metrics } from '../../../../metrics';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { getURL } from '../../../../utils/server';\n\nlet advice = '';\nlet goToMessage = '';\nMeteor.startup(() => {\n\tsettings.watch('email_style', function () {\n\t\tgoToMessage = Mailer.inlinecss('<p><a class=\\'btn\\' href=\"[room_path]\">{Offline_Link_Message}</a></p>');\n\t});\n\tMailer.getTemplate('Email_Footer_Direct_Reply', (value) => {\n\t\tadvice = value;\n\t});\n});\n\nfunction getEmailContent({ message, user, room }) {\n\tconst lng = (user && user.language) || settings.get('Language') || 'en';\n\n\tconst roomName = escapeHTML(`#${roomTypes.getRoomName(room.t, room)}`);\n\tconst userName = escapeHTML(settings.get('UI_Use_Real_Name') ? message.u.name || message.u.username : message.u.username);\n\n\tconst roomType = roomTypes.getConfig(room.t);\n\n\tconst header = TAPi18n.__(!roomType.isGroupChat(room) ? 'User_sent_a_message_to_you' : 'User_sent_a_message_on_channel', {\n\t\tusername: userName,\n\t\tchannel: roomName,\n\t\tlng,\n\t});\n\n\tif (message.msg !== '') {\n\t\tif (!settings.get('Email_notification_show_message')) {\n\t\t\treturn header;\n\t\t}\n\n\t\tlet messageContent = escapeHTML(message.msg);\n\n\t\tif (message.t === 'e2e') {\n\t\t\tmessageContent = TAPi18n.__('Encrypted_message', { lng });\n\t\t}\n\n\t\tmessage = callbacks.run('renderMessage', message);\n\t\tif (message.tokens && message.tokens.length > 0) {\n\t\t\tmessage.tokens.forEach((token) => {\n\t\t\t\ttoken.text = token.text.replace(/([^\\$])(\\$[^\\$])/gm, '$1$$$2');\n\t\t\t\tmessageContent = messageContent.replace(token.token, token.text);\n\t\t\t});\n\t\t}\n\t\treturn `${header}:<br/><br/>${messageContent.replace(/\\n/gm, '<br/>')}`;\n\t}\n\n\tif (message.file) {\n\t\tconst fileHeader = TAPi18n.__(!roomType.isGroupChat(room) ? 'User_uploaded_a_file_to_you' : 'User_uploaded_a_file_on_channel', {\n\t\t\tusername: userName,\n\t\t\tchannel: roomName,\n\t\t\tlng,\n\t\t});\n\n\t\tif (!settings.get('Email_notification_show_message')) {\n\t\t\treturn fileHeader;\n\t\t}\n\n\t\tlet content = `${escapeHTML(message.file.name)}`;\n\n\t\tif (message.attachments && message.attachments.length === 1 && message.attachments[0].description !== '') {\n\t\t\tcontent += `<br/><br/>${escapeHTML(message.attachments[0].description)}`;\n\t\t}\n\n\t\treturn `${fileHeader}:<br/><br/>${content}`;\n\t}\n\n\tif (!settings.get('Email_notification_show_message')) {\n\t\treturn header;\n\t}\n\n\tif (Array.isArray(message.attachments) && message.attachments.length > 0) {\n\t\tconst [attachment] = message.attachments;\n\n\t\tlet content = '';\n\n\t\tif (attachment.title) {\n\t\t\tcontent += `${escapeHTML(attachment.title)}<br/>`;\n\t\t}\n\t\tif (attachment.text) {\n\t\t\tcontent += `${escapeHTML(attachment.text)}<br/>`;\n\t\t}\n\n\t\treturn `${header}:<br/><br/>${content}`;\n\t}\n\n\treturn header;\n}\n\nconst getButtonUrl = (room, subscription, message) => {\n\tconst path = `${s.ltrim(roomTypes.getRelativePath(room.t, subscription), '/')}?msg=${message._id}`;\n\treturn getURL(path, {\n\t\tfull: true,\n\t\tcloud: settings.get('Offline_Message_Use_DeepLink'),\n\t\tcloud_route: 'room',\n\t\tcloud_params: {\n\t\t\trid: room._id,\n\t\t\tmid: message._id,\n\t\t},\n\t});\n};\n\nfunction generateNameEmail(name, email) {\n\treturn `${String(name).replace(/@/g, '%40').replace(/[<>,]/g, '')} <${email}>`;\n}\n\nexport function getEmailData({ message, receiver, sender, subscription, room, emailAddress, hasMentionToUser }) {\n\tconst username = settings.get('UI_Use_Real_Name') ? message.u.name || message.u.username : message.u.username;\n\tlet subjectKey = 'Offline_Mention_All_Email';\n\n\tif (!roomTypes.getConfig(room.t).isGroupChat(room)) {\n\t\tsubjectKey = 'Offline_DM_Email';\n\t} else if (hasMentionToUser) {\n\t\tsubjectKey = 'Offline_Mention_Email';\n\t}\n\n\tconst emailSubject = Mailer.replace(settings.get(subjectKey), {\n\t\tuser: username,\n\t\troom: roomTypes.getRoomName(room.t, room),\n\t});\n\tconst content = getEmailContent({\n\t\tmessage,\n\t\tuser: receiver,\n\t\troom,\n\t});\n\n\tconst room_path = getButtonUrl(room, subscription, message);\n\n\tconst receiverName = settings.get('UI_Use_Real_Name') ? receiver.name || receiver.username : receiver.username;\n\n\tconst email = {\n\t\tfrom: generateNameEmail(username, settings.get('From_Email')),\n\t\tto: generateNameEmail(receiverName, emailAddress),\n\t\tsubject: emailSubject,\n\t\thtml: content + goToMessage + (settings.get('Direct_Reply_Enable') ? advice : ''),\n\t\tdata: {\n\t\t\troom_path,\n\t\t},\n\t\theaders: {},\n\t};\n\n\tif (sender.emails?.length > 0 && settings.get('Add_Sender_To_ReplyTo')) {\n\t\tconst [senderEmail] = sender.emails;\n\t\temail.headers['Reply-To'] = generateNameEmail(username, senderEmail.address);\n\t}\n\n\t// If direct reply enabled, email content with headers\n\tif (settings.get('Direct_Reply_Enable')) {\n\t\tconst replyto = settings.get('Direct_Reply_ReplyTo') || settings.get('Direct_Reply_Username');\n\n\t\t// Reply-To header with format \"username+messageId@domain\"\n\t\temail.headers['Reply-To'] = `${replyto.split('@')[0].split(settings.get('Direct_Reply_Separator'))[0]}${settings.get(\n\t\t\t'Direct_Reply_Separator',\n\t\t)}${message._id}@${replyto.split('@')[1]}`;\n\t}\n\n\tmetrics.notificationsSent.inc({ notification_type: 'email' });\n\treturn email;\n}\n\nexport function sendEmailFromData(data) {\n\tmetrics.notificationsSent.inc({ notification_type: 'email' });\n\treturn Mailer.send(data);\n}\n\nexport function sendEmail({ message, user, subscription, room, emailAddress, hasMentionToUser }) {\n\treturn sendEmailFromData(getEmailData({ message, user, subscription, room, emailAddress, hasMentionToUser }));\n}\n\nexport function shouldNotifyEmail({\n\tdisableAllMessageNotifications,\n\tstatusConnection,\n\temailNotifications,\n\tisHighlighted,\n\thasMentionToUser,\n\thasMentionToAll,\n\thasReplyToThread,\n\troomType,\n\tisThread,\n}) {\n\t// email notifications are disabled globally\n\tif (!settings.get('Accounts_AllowEmailNotifications')) {\n\t\treturn false;\n\t}\n\n\t// user/room preference to nothing\n\tif (emailNotifications === 'nothing') {\n\t\treturn false;\n\t}\n\n\t// user connected (don't need to send him an email)\n\tif (statusConnection === 'online') {\n\t\treturn false;\n\t}\n\n\t// no user or room preference\n\tif (emailNotifications == null) {\n\t\tif (disableAllMessageNotifications && !isHighlighted && !hasMentionToUser && !hasReplyToThread) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// default server preference is disabled\n\t\tif (settings.get('Accounts_Default_User_Preferences_emailNotificationMode') === 'nothing') {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn (\n\t\t(roomType === 'd' ||\n\t\t\tisHighlighted ||\n\t\t\temailNotifications === 'all' ||\n\t\t\thasMentionToUser ||\n\t\t\t(!disableAllMessageNotifications && hasMentionToAll)) &&\n\t\t(!isThread || hasReplyToThread)\n\t);\n}\n"]},"sourceType":"module","hash":"5576c5967fb20cf1bfbba3c0618fd7f2c82a37cf"}

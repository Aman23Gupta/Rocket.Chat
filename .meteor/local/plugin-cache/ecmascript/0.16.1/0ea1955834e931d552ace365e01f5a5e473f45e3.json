{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/oembed/server/jumpToMessage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/oembed/server/jumpToMessage.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/oembed/server/jumpToMessage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/oembed/server/jumpToMessage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/oembed/server/jumpToMessage.js"}},"code":"let URL;\nmodule.link(\"url\", {\n  default(v) {\n    URL = v;\n  }\n\n}, 0);\nlet QueryString;\nmodule.link(\"querystring\", {\n  default(v) {\n    QueryString = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 3);\nlet Messages, Rooms, Users;\nmodule.link(\"../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\nlet callbacks;\nmodule.link(\"../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 6);\nlet getUserAvatarURL;\nmodule.link(\"../../utils/lib/getUserAvatarURL\", {\n  getUserAvatarURL(v) {\n    getUserAvatarURL = v;\n  }\n\n}, 7);\nlet canAccessRoom;\nmodule.link(\"../../authorization/server/functions/canAccessRoom\", {\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  }\n\n}, 8);\n\nconst recursiveRemove = function (message) {\n  let deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  if (message) {\n    if ('attachments' in message && message.attachments !== null && deep < settings.get('Message_QuoteChainLimit')) {\n      message.attachments.map(msg => recursiveRemove(msg, deep + 1));\n    } else {\n      delete message.attachments;\n    }\n  }\n\n  return message;\n};\n\ncallbacks.add('beforeSaveMessage', msg => {\n  // if no message is present, or the message doesn't have any URL, skip\n  if (!msg || !msg.urls || !msg.urls.length) {\n    return msg;\n  }\n\n  const currentUser = Users.findOneById(msg.u._id);\n  msg.urls.forEach(item => {\n    var _room$v;\n\n    // if the URL is not internal, skip\n    if (!item.url.includes(Meteor.absoluteUrl())) {\n      return;\n    }\n\n    const urlObj = URL.parse(item.url); // if the URL doesn't have query params (doesn't reference message) skip\n\n    if (!urlObj.query) {\n      return;\n    }\n\n    const {\n      msg: msgId\n    } = QueryString.parse(urlObj.query);\n\n    if (!_.isString(msgId)) {\n      return;\n    }\n\n    const jumpToMessage = recursiveRemove(Messages.findOneById(msgId));\n\n    if (!jumpToMessage) {\n      return;\n    } // validates if user can see the message\n    // user has to belong to the room the message was first wrote in\n\n\n    const room = Rooms.findOneById(jumpToMessage.rid);\n    const isLiveChatRoomVisitor = !!msg.token && !!((_room$v = room.v) !== null && _room$v !== void 0 && _room$v.token) && msg.token === room.v.token;\n    const canAccessRoomForUser = isLiveChatRoomVisitor || canAccessRoom(room, currentUser);\n\n    if (!canAccessRoomForUser) {\n      return;\n    }\n\n    msg.attachments = msg.attachments || [];\n    const index = msg.attachments.findIndex(a => a.message_link === item.url);\n\n    if (index > -1) {\n      msg.attachments.splice(index, 1);\n    }\n\n    msg.attachments.push({\n      text: jumpToMessage.msg,\n      translations: jumpToMessage.translations,\n      author_name: jumpToMessage.alias || jumpToMessage.u.username,\n      author_icon: getUserAvatarURL(jumpToMessage.u.username),\n      message_link: item.url,\n      attachments: jumpToMessage.attachments || [],\n      ts: jumpToMessage.ts\n    });\n    item.ignoreParse = true;\n  });\n  return msg;\n}, callbacks.priority.LOW, 'jumpToMessage');","map":{"version":3,"sources":["app/oembed/server/jumpToMessage.js"],"names":["URL","module","link","default","v","QueryString","Meteor","_","Messages","Rooms","Users","settings","callbacks","getUserAvatarURL","canAccessRoom","recursiveRemove","message","deep","attachments","get","map","msg","add","urls","length","currentUser","findOneById","u","_id","forEach","item","url","includes","absoluteUrl","urlObj","parse","query","msgId","isString","jumpToMessage","room","rid","isLiveChatRoomVisitor","token","canAccessRoomForUser","index","findIndex","a","message_link","splice","push","text","translations","author_name","alias","username","author_icon","ts","ignoreParse","priority","LOW"],"mappings":"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","sourcesContent":["import URL from 'url';\nimport QueryString from 'querystring';\n\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { Messages, Rooms, Users } from '../../models/server';\nimport { settings } from '../../settings/server';\nimport { callbacks } from '../../../lib/callbacks';\nimport { getUserAvatarURL } from '../../utils/lib/getUserAvatarURL';\nimport { canAccessRoom } from '../../authorization/server/functions/canAccessRoom';\n\nconst recursiveRemove = (message, deep = 1) => {\n\tif (message) {\n\t\tif ('attachments' in message && message.attachments !== null && deep < settings.get('Message_QuoteChainLimit')) {\n\t\t\tmessage.attachments.map((msg) => recursiveRemove(msg, deep + 1));\n\t\t} else {\n\t\t\tdelete message.attachments;\n\t\t}\n\t}\n\treturn message;\n};\n\ncallbacks.add(\n\t'beforeSaveMessage',\n\t(msg) => {\n\t\t// if no message is present, or the message doesn't have any URL, skip\n\t\tif (!msg || !msg.urls || !msg.urls.length) {\n\t\t\treturn msg;\n\t\t}\n\n\t\tconst currentUser = Users.findOneById(msg.u._id);\n\n\t\tmsg.urls.forEach((item) => {\n\t\t\t// if the URL is not internal, skip\n\t\t\tif (!item.url.includes(Meteor.absoluteUrl())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst urlObj = URL.parse(item.url);\n\n\t\t\t// if the URL doesn't have query params (doesn't reference message) skip\n\t\t\tif (!urlObj.query) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { msg: msgId } = QueryString.parse(urlObj.query);\n\n\t\t\tif (!_.isString(msgId)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst jumpToMessage = recursiveRemove(Messages.findOneById(msgId));\n\t\t\tif (!jumpToMessage) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// validates if user can see the message\n\t\t\t// user has to belong to the room the message was first wrote in\n\t\t\tconst room = Rooms.findOneById(jumpToMessage.rid);\n\t\t\tconst isLiveChatRoomVisitor = !!msg.token && !!room.v?.token && msg.token === room.v.token;\n\t\t\tconst canAccessRoomForUser = isLiveChatRoomVisitor || canAccessRoom(room, currentUser);\n\t\t\tif (!canAccessRoomForUser) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmsg.attachments = msg.attachments || [];\n\t\t\tconst index = msg.attachments.findIndex((a) => a.message_link === item.url);\n\t\t\tif (index > -1) {\n\t\t\t\tmsg.attachments.splice(index, 1);\n\t\t\t}\n\n\t\t\tmsg.attachments.push({\n\t\t\t\ttext: jumpToMessage.msg,\n\t\t\t\ttranslations: jumpToMessage.translations,\n\t\t\t\tauthor_name: jumpToMessage.alias || jumpToMessage.u.username,\n\t\t\t\tauthor_icon: getUserAvatarURL(jumpToMessage.u.username),\n\t\t\t\tmessage_link: item.url,\n\t\t\t\tattachments: jumpToMessage.attachments || [],\n\t\t\t\tts: jumpToMessage.ts,\n\t\t\t});\n\t\t\titem.ignoreParse = true;\n\t\t});\n\n\t\treturn msg;\n\t},\n\tcallbacks.priority.LOW,\n\t'jumpToMessage',\n);\n"]},"sourceType":"module","hash":"0ea1955834e931d552ace365e01f5a5e473f45e3"}

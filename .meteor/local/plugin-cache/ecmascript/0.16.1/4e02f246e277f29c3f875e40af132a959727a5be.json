{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/oembed/server/server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/oembed/server/server.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/oembed/server/server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/oembed/server/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/oembed/server/server.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _asyncIterator;\n\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default(v) {\n    _asyncIterator = v;\n  }\n\n}, 1);\nmodule.export({\n  OEmbed: () => OEmbed\n});\nlet URL;\nmodule.link(\"url\", {\n  default(v) {\n    URL = v;\n  }\n\n}, 0);\nlet querystring;\nmodule.link(\"querystring\", {\n  default(v) {\n    querystring = v;\n  }\n\n}, 1);\nlet fetch;\nmodule.link(\"meteor/fetch\", {\n  fetch(v) {\n    fetch = v;\n  }\n\n}, 2);\nlet camelCase;\nmodule.link(\"change-case\", {\n  camelCase(v) {\n    camelCase = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 4);\nlet iconv;\nmodule.link(\"iconv-lite\", {\n  default(v) {\n    iconv = v;\n  }\n\n}, 5);\nlet ipRangeCheck;\nmodule.link(\"ip-range-check\", {\n  default(v) {\n    ipRangeCheck = v;\n  }\n\n}, 6);\nlet he;\nmodule.link(\"he\", {\n  default(v) {\n    he = v;\n  }\n\n}, 7);\nlet jschardet;\nmodule.link(\"jschardet\", {\n  default(v) {\n    jschardet = v;\n  }\n\n}, 8);\nlet Messages;\nmodule.link(\"../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 9);\nlet OEmbedCache;\nmodule.link(\"../../models/server/raw\", {\n  OEmbedCache(v) {\n    OEmbedCache = v;\n  }\n\n}, 10);\nlet callbacks;\nmodule.link(\"../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 11);\nlet settings;\nmodule.link(\"../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 12);\nlet isURL;\nmodule.link(\"../../utils/lib/isURL\", {\n  isURL(v) {\n    isURL = v;\n  }\n\n}, 13);\nlet SystemLogger;\nmodule.link(\"../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 14);\nlet Info;\nmodule.link(\"../../utils/server\", {\n  Info(v) {\n    Info = v;\n  }\n\n}, 15);\nlet getUnsafeAgent;\nmodule.link(\"../../../server/lib/getUnsafeAgent\", {\n  getUnsafeAgent(v) {\n    getUnsafeAgent = v;\n  }\n\n}, 16);\nconst OEmbed = {}; //  Detect encoding\n//  Priority:\n//  Detected == HTTP Header > Detected == HTML meta > HTTP Header > HTML meta > Detected > Default (utf-8)\n//  See also: https://www.w3.org/International/questions/qa-html-encoding-declarations.en#quickanswer\n\nconst getCharset = function (contentType, body) {\n  let detectedCharset;\n  let httpHeaderCharset;\n  let htmlMetaCharset;\n  let result;\n  contentType = contentType || '';\n  const binary = body.toString('binary');\n  const detected = jschardet.detect(binary);\n\n  if (detected.confidence > 0.8) {\n    detectedCharset = detected.encoding.toLowerCase();\n  }\n\n  const m1 = contentType.match(/charset=([\\w\\-]+)/i);\n\n  if (m1) {\n    httpHeaderCharset = m1[1].toLowerCase();\n  }\n\n  const m2 = binary.match(/<meta\\b[^>]*charset=[\"']?([\\w\\-]+)/i);\n\n  if (m2) {\n    htmlMetaCharset = m2[1].toLowerCase();\n  }\n\n  if (detectedCharset) {\n    if (detectedCharset === httpHeaderCharset) {\n      result = httpHeaderCharset;\n    } else if (detectedCharset === htmlMetaCharset) {\n      result = htmlMetaCharset;\n    }\n  }\n\n  if (!result) {\n    result = httpHeaderCharset || htmlMetaCharset || detectedCharset;\n  }\n\n  return result || 'utf-8';\n};\n\nconst toUtf8 = function (contentType, body) {\n  return iconv.decode(body, getCharset(contentType, body));\n};\n\nconst getUrlContent = function (urlObj) {\n  return Promise.asyncApply(() => {\n    let redirectCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n    if (_.isString(urlObj)) {\n      urlObj = URL.parse(urlObj);\n    }\n\n    const portsProtocol = {\n      80: 'http:',\n      8080: 'http:',\n      443: 'https:'\n    };\n\n    const parsedUrl = _.pick(urlObj, ['host', 'hash', 'pathname', 'protocol', 'port', 'query', 'search', 'hostname']);\n\n    const ignoredHosts = settings.get('API_EmbedIgnoredHosts').replace(/\\s/g, '').split(',') || [];\n\n    if (ignoredHosts.includes(parsedUrl.hostname) || ipRangeCheck(parsedUrl.hostname, ignoredHosts)) {\n      throw new Error('invalid host');\n    }\n\n    const safePorts = settings.get('API_EmbedSafePorts').replace(/\\s/g, '').split(',') || [];\n\n    if (safePorts.length > 0 && parsedUrl.port && !safePorts.includes(parsedUrl.port)) {\n      throw new Error('invalid/unsafe port');\n    }\n\n    if (safePorts.length > 0 && !parsedUrl.port && !safePorts.some(port => portsProtocol[port] === parsedUrl.protocol)) {\n      throw new Error('invalid/unsafe port');\n    }\n\n    const data = callbacks.run('oembed:beforeGetUrlContent', {\n      urlObj,\n      parsedUrl\n    });\n\n    if (data.attachments != null) {\n      return data;\n    }\n\n    const url = URL.format(data.urlObj);\n    const chunks = [];\n    const response = Promise.await(fetch(url, _objectSpread({\n      compress: true,\n      follow: redirectCount,\n      headers: {\n        'User-Agent': \"\".concat(settings.get('API_Embed_UserAgent'), \" Rocket.Chat/\").concat(Info.version),\n        'Accept-Language': settings.get('Language') || 'en'\n      },\n      size: 250000\n    }, settings.get('Allow_Invalid_SelfSigned_Certs') && {\n      agent: getUnsafeAgent(parsedUrl.protocol)\n    })));\n    var _iteratorAbruptCompletion = false;\n    var _didIteratorError = false;\n\n    var _iteratorError;\n\n    try {\n      for (var _iterator = _asyncIterator(response.body), _step; _iteratorAbruptCompletion = !(_step = Promise.await(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n        const chunk = _step.value;\n        chunks.push(chunk);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (_iteratorAbruptCompletion && _iterator.return != null) {\n          Promise.await(_iterator.return());\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    const buffer = Buffer.concat(chunks);\n    return {\n      headers: Object.fromEntries(response.headers),\n      body: toUtf8(response.headers.get('content-type'), buffer),\n      parsedUrl,\n      statusCode: response.status\n    };\n  });\n};\n\nOEmbed.getUrlMeta = function (url, withFragment) {\n  const urlObj = URL.parse(url);\n\n  if (withFragment != null) {\n    const queryStringObj = querystring.parse(urlObj.query);\n    queryStringObj._escaped_fragment_ = '';\n    urlObj.query = querystring.stringify(queryStringObj);\n    let path = urlObj.pathname;\n\n    if (urlObj.query != null) {\n      path += \"?\".concat(urlObj.query);\n      urlObj.search = \"?\".concat(urlObj.query);\n    }\n\n    urlObj.path = path;\n  }\n\n  const content = Promise.await(getUrlContent(urlObj, 5));\n\n  if (!content) {\n    return;\n  }\n\n  if (content.attachments != null) {\n    return content;\n  }\n\n  let metas = undefined;\n\n  if (content && content.body) {\n    metas = {};\n\n    const escapeMeta = (name, value) => {\n      metas[name] = metas[name] || he.unescape(value);\n      return metas[name];\n    };\n\n    content.body.replace(/<title[^>]*>([^<]*)<\\/title>/gim, function (meta, title) {\n      return escapeMeta('pageTitle', title);\n    });\n    content.body.replace(/<meta[^>]*(?:name|property)=[']([^']*)['][^>]*\\scontent=[']([^']*)['][^>]*>/gim, function (meta, name, value) {\n      return escapeMeta(camelCase(name), value);\n    });\n    content.body.replace(/<meta[^>]*(?:name|property)=[\"]([^\"]*)[\"][^>]*\\scontent=[\"]([^\"]*)[\"][^>]*>/gim, function (meta, name, value) {\n      return escapeMeta(camelCase(name), value);\n    });\n    content.body.replace(/<meta[^>]*\\scontent=[']([^']*)['][^>]*(?:name|property)=[']([^']*)['][^>]*>/gim, function (meta, value, name) {\n      return escapeMeta(camelCase(name), value);\n    });\n    content.body.replace(/<meta[^>]*\\scontent=[\"]([^\"]*)[\"][^>]*(?:name|property)=[\"]([^\"]*)[\"][^>]*>/gim, function (meta, value, name) {\n      return escapeMeta(camelCase(name), value);\n    });\n\n    if (metas.fragment === '!' && withFragment == null) {\n      return OEmbed.getUrlMeta(url, true);\n    }\n\n    delete metas.oembedHtml;\n  }\n\n  let headers = undefined;\n\n  if (content !== null && content !== void 0 && content.headers) {\n    headers = {};\n    const headerObj = content.headers;\n    Object.keys(headerObj).forEach(header => {\n      headers[camelCase(header)] = headerObj[header];\n    });\n  }\n\n  if (content && content.statusCode !== 200) {\n    return;\n  }\n\n  return callbacks.run('oembed:afterParseContent', {\n    url,\n    meta: metas,\n    headers,\n    parsedUrl: content.parsedUrl,\n    content\n  });\n};\n\nOEmbed.getUrlMetaWithCache = function (url, withFragment) {\n  return Promise.asyncApply(() => {\n    const cache = Promise.await(OEmbedCache.findOneById(url));\n\n    if (cache != null) {\n      return cache.data;\n    }\n\n    const data = OEmbed.getUrlMeta(url, withFragment);\n\n    if (data != null) {\n      try {\n        Promise.await(OEmbedCache.createWithIdAndData(url, data));\n      } catch (_error) {\n        SystemLogger.error('OEmbed duplicated record', url);\n      }\n\n      return data;\n    }\n  });\n};\n\nconst getRelevantHeaders = function (headersObj) {\n  const headers = {};\n  Object.keys(headersObj).forEach(key => {\n    const value = headersObj[key];\n    const lowerCaseKey = key.toLowerCase();\n\n    if ((lowerCaseKey === 'contenttype' || lowerCaseKey === 'contentlength') && value && value.trim() !== '') {\n      headers[key] = value;\n    }\n  });\n\n  if (Object.keys(headers).length > 0) {\n    return headers;\n  }\n};\n\nconst getRelevantMetaTags = function (metaObj) {\n  const tags = {};\n  Object.keys(metaObj).forEach(key => {\n    const value = metaObj[key];\n\n    if (/^(og|fb|twitter|oembed|msapplication).+|description|title|pageTitle$/.test(key.toLowerCase()) && value && value.trim() !== '') {\n      tags[key] = value;\n    }\n  });\n\n  if (Object.keys(tags).length > 0) {\n    return tags;\n  }\n};\n\nconst insertMaxWidthInOembedHtml = oembedHtml => oembedHtml === null || oembedHtml === void 0 ? void 0 : oembedHtml.replace('iframe', 'iframe style=\"max-width: 100%;width:400px;height:225px\"');\n\nOEmbed.rocketUrlParser = function (message) {\n  return Promise.asyncApply(() => {\n    if (Array.isArray(message.urls)) {\n      const attachments = [];\n      let changed = false;\n      var _iteratorAbruptCompletion2 = false;\n      var _didIteratorError2 = false;\n\n      var _iteratorError2;\n\n      try {\n        for (var _iterator2 = _asyncIterator(message.urls), _step2; _iteratorAbruptCompletion2 = !(_step2 = Promise.await(_iterator2.next())).done; _iteratorAbruptCompletion2 = false) {\n          const item = _step2.value;\n\n          if (item.ignoreParse === true) {\n            return;\n          }\n\n          if (!isURL(item.url)) {\n            return;\n          }\n\n          const data = Promise.await(OEmbed.getUrlMetaWithCache(item.url));\n\n          if (data != null) {\n            if (data.attachments) {\n              attachments.push(...data.attachments);\n              return;\n            }\n\n            if (data.meta != null) {\n              item.meta = getRelevantMetaTags(data.meta);\n\n              if (item.meta && item.meta.oembedHtml) {\n                item.meta.oembedHtml = insertMaxWidthInOembedHtml(item.meta.oembedHtml);\n              }\n            }\n\n            if (data.headers != null) {\n              item.headers = getRelevantHeaders(data.headers);\n            }\n\n            item.parsedUrl = data.parsedUrl;\n            changed = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n            Promise.await(_iterator2.return());\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (attachments.length) {\n        Messages.setMessageAttachments(message._id, attachments);\n      }\n\n      if (changed === true) {\n        Messages.setUrlsById(message._id, message.urls);\n      }\n    }\n\n    return message;\n  });\n};\n\nsettings.watch('API_Embed', function (value) {\n  if (value) {\n    return callbacks.add('afterSaveMessage', message => Promise.await(OEmbed.rocketUrlParser(message)), callbacks.priority.LOW, 'API_Embed');\n  }\n\n  return callbacks.remove('afterSaveMessage', 'API_Embed');\n});","map":{"version":3,"sources":["app/oembed/server/server.js"],"names":["_objectSpread","module","link","default","v","_asyncIterator","export","OEmbed","URL","querystring","fetch","camelCase","_","iconv","ipRangeCheck","he","jschardet","Messages","OEmbedCache","callbacks","settings","isURL","SystemLogger","Info","getUnsafeAgent","getCharset","contentType","body","detectedCharset","httpHeaderCharset","htmlMetaCharset","result","binary","toString","detected","detect","confidence","encoding","toLowerCase","m1","match","m2","toUtf8","decode","getUrlContent","urlObj","redirectCount","isString","parse","portsProtocol","parsedUrl","pick","ignoredHosts","get","replace","split","includes","hostname","Error","safePorts","length","port","some","protocol","data","run","attachments","url","format","chunks","response","compress","follow","headers","version","size","agent","chunk","push","buffer","Buffer","concat","Object","fromEntries","statusCode","status","getUrlMeta","withFragment","queryStringObj","query","_escaped_fragment_","stringify","path","pathname","search","content","Promise","await","metas","undefined","escapeMeta","name","value","unescape","meta","title","fragment","oembedHtml","headerObj","keys","forEach","header","getUrlMetaWithCache","cache","findOneById","createWithIdAndData","_error","error","getRelevantHeaders","headersObj","key","lowerCaseKey","trim","getRelevantMetaTags","metaObj","tags","test","insertMaxWidthInOembedHtml","rocketUrlParser","message","Array","isArray","urls","changed","item","ignoreParse","setMessageAttachments","_id","setUrlsById","watch","add","priority","LOW","remove"],"mappings":"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","sourcesContent":["import URL from 'url';\nimport querystring from 'querystring';\n\nimport { fetch } from 'meteor/fetch';\nimport { camelCase } from 'change-case';\nimport _ from 'underscore';\nimport iconv from 'iconv-lite';\nimport ipRangeCheck from 'ip-range-check';\nimport he from 'he';\nimport jschardet from 'jschardet';\n\nimport { Messages } from '../../models/server';\nimport { OEmbedCache } from '../../models/server/raw';\nimport { callbacks } from '../../../lib/callbacks';\nimport { settings } from '../../settings/server';\nimport { isURL } from '../../utils/lib/isURL';\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { Info } from '../../utils/server';\nimport { getUnsafeAgent } from '../../../server/lib/getUnsafeAgent';\n\nconst OEmbed = {};\n\n//  Detect encoding\n//  Priority:\n//  Detected == HTTP Header > Detected == HTML meta > HTTP Header > HTML meta > Detected > Default (utf-8)\n//  See also: https://www.w3.org/International/questions/qa-html-encoding-declarations.en#quickanswer\nconst getCharset = function (contentType, body) {\n\tlet detectedCharset;\n\tlet httpHeaderCharset;\n\tlet htmlMetaCharset;\n\tlet result;\n\n\tcontentType = contentType || '';\n\n\tconst binary = body.toString('binary');\n\tconst detected = jschardet.detect(binary);\n\tif (detected.confidence > 0.8) {\n\t\tdetectedCharset = detected.encoding.toLowerCase();\n\t}\n\tconst m1 = contentType.match(/charset=([\\w\\-]+)/i);\n\tif (m1) {\n\t\thttpHeaderCharset = m1[1].toLowerCase();\n\t}\n\tconst m2 = binary.match(/<meta\\b[^>]*charset=[\"']?([\\w\\-]+)/i);\n\tif (m2) {\n\t\thtmlMetaCharset = m2[1].toLowerCase();\n\t}\n\tif (detectedCharset) {\n\t\tif (detectedCharset === httpHeaderCharset) {\n\t\t\tresult = httpHeaderCharset;\n\t\t} else if (detectedCharset === htmlMetaCharset) {\n\t\t\tresult = htmlMetaCharset;\n\t\t}\n\t}\n\tif (!result) {\n\t\tresult = httpHeaderCharset || htmlMetaCharset || detectedCharset;\n\t}\n\treturn result || 'utf-8';\n};\n\nconst toUtf8 = function (contentType, body) {\n\treturn iconv.decode(body, getCharset(contentType, body));\n};\n\nconst getUrlContent = async function (urlObj, redirectCount = 5) {\n\tif (_.isString(urlObj)) {\n\t\turlObj = URL.parse(urlObj);\n\t}\n\n\tconst portsProtocol = {\n\t\t80: 'http:',\n\t\t8080: 'http:',\n\t\t443: 'https:',\n\t};\n\n\tconst parsedUrl = _.pick(urlObj, ['host', 'hash', 'pathname', 'protocol', 'port', 'query', 'search', 'hostname']);\n\tconst ignoredHosts = settings.get('API_EmbedIgnoredHosts').replace(/\\s/g, '').split(',') || [];\n\tif (ignoredHosts.includes(parsedUrl.hostname) || ipRangeCheck(parsedUrl.hostname, ignoredHosts)) {\n\t\tthrow new Error('invalid host');\n\t}\n\n\tconst safePorts = settings.get('API_EmbedSafePorts').replace(/\\s/g, '').split(',') || [];\n\n\tif (safePorts.length > 0 && parsedUrl.port && !safePorts.includes(parsedUrl.port)) {\n\t\tthrow new Error('invalid/unsafe port');\n\t}\n\n\tif (safePorts.length > 0 && !parsedUrl.port && !safePorts.some((port) => portsProtocol[port] === parsedUrl.protocol)) {\n\t\tthrow new Error('invalid/unsafe port');\n\t}\n\n\tconst data = callbacks.run('oembed:beforeGetUrlContent', {\n\t\turlObj,\n\t\tparsedUrl,\n\t});\n\tif (data.attachments != null) {\n\t\treturn data;\n\t}\n\n\tconst url = URL.format(data.urlObj);\n\n\tconst chunks = [];\n\n\tconst response = await fetch(url, {\n\t\tcompress: true,\n\t\tfollow: redirectCount,\n\t\theaders: {\n\t\t\t'User-Agent': `${settings.get('API_Embed_UserAgent')} Rocket.Chat/${Info.version}`,\n\t\t\t'Accept-Language': settings.get('Language') || 'en',\n\t\t},\n\t\tsize: 250000, // max size of the response body\n\t\t...(settings.get('Allow_Invalid_SelfSigned_Certs') && {\n\t\t\tagent: getUnsafeAgent(parsedUrl.protocol),\n\t\t}),\n\t});\n\n\tfor await (const chunk of response.body) {\n\t\tchunks.push(chunk);\n\t}\n\n\tconst buffer = Buffer.concat(chunks);\n\treturn {\n\t\theaders: Object.fromEntries(response.headers),\n\t\tbody: toUtf8(response.headers.get('content-type'), buffer),\n\t\tparsedUrl,\n\t\tstatusCode: response.status,\n\t};\n};\n\nOEmbed.getUrlMeta = function (url, withFragment) {\n\tconst urlObj = URL.parse(url);\n\tif (withFragment != null) {\n\t\tconst queryStringObj = querystring.parse(urlObj.query);\n\t\tqueryStringObj._escaped_fragment_ = '';\n\t\turlObj.query = querystring.stringify(queryStringObj);\n\t\tlet path = urlObj.pathname;\n\t\tif (urlObj.query != null) {\n\t\t\tpath += `?${urlObj.query}`;\n\t\t\turlObj.search = `?${urlObj.query}`;\n\t\t}\n\t\turlObj.path = path;\n\t}\n\tconst content = Promise.await(getUrlContent(urlObj, 5));\n\n\tif (!content) {\n\t\treturn;\n\t}\n\n\tif (content.attachments != null) {\n\t\treturn content;\n\t}\n\n\tlet metas = undefined;\n\tif (content && content.body) {\n\t\tmetas = {};\n\t\tconst escapeMeta = (name, value) => {\n\t\t\tmetas[name] = metas[name] || he.unescape(value);\n\t\t\treturn metas[name];\n\t\t};\n\t\tcontent.body.replace(/<title[^>]*>([^<]*)<\\/title>/gim, function (meta, title) {\n\t\t\treturn escapeMeta('pageTitle', title);\n\t\t});\n\t\tcontent.body.replace(/<meta[^>]*(?:name|property)=[']([^']*)['][^>]*\\scontent=[']([^']*)['][^>]*>/gim, function (meta, name, value) {\n\t\t\treturn escapeMeta(camelCase(name), value);\n\t\t});\n\t\tcontent.body.replace(/<meta[^>]*(?:name|property)=[\"]([^\"]*)[\"][^>]*\\scontent=[\"]([^\"]*)[\"][^>]*>/gim, function (meta, name, value) {\n\t\t\treturn escapeMeta(camelCase(name), value);\n\t\t});\n\t\tcontent.body.replace(/<meta[^>]*\\scontent=[']([^']*)['][^>]*(?:name|property)=[']([^']*)['][^>]*>/gim, function (meta, value, name) {\n\t\t\treturn escapeMeta(camelCase(name), value);\n\t\t});\n\t\tcontent.body.replace(/<meta[^>]*\\scontent=[\"]([^\"]*)[\"][^>]*(?:name|property)=[\"]([^\"]*)[\"][^>]*>/gim, function (meta, value, name) {\n\t\t\treturn escapeMeta(camelCase(name), value);\n\t\t});\n\t\tif (metas.fragment === '!' && withFragment == null) {\n\t\t\treturn OEmbed.getUrlMeta(url, true);\n\t\t}\n\t\tdelete metas.oembedHtml;\n\t}\n\tlet headers = undefined;\n\n\tif (content?.headers) {\n\t\theaders = {};\n\t\tconst headerObj = content.headers;\n\t\tObject.keys(headerObj).forEach((header) => {\n\t\t\theaders[camelCase(header)] = headerObj[header];\n\t\t});\n\t}\n\tif (content && content.statusCode !== 200) {\n\t\treturn;\n\t}\n\treturn callbacks.run('oembed:afterParseContent', {\n\t\turl,\n\t\tmeta: metas,\n\t\theaders,\n\t\tparsedUrl: content.parsedUrl,\n\t\tcontent,\n\t});\n};\n\nOEmbed.getUrlMetaWithCache = async function (url, withFragment) {\n\tconst cache = await OEmbedCache.findOneById(url);\n\n\tif (cache != null) {\n\t\treturn cache.data;\n\t}\n\tconst data = OEmbed.getUrlMeta(url, withFragment);\n\tif (data != null) {\n\t\ttry {\n\t\t\tawait OEmbedCache.createWithIdAndData(url, data);\n\t\t} catch (_error) {\n\t\t\tSystemLogger.error('OEmbed duplicated record', url);\n\t\t}\n\t\treturn data;\n\t}\n};\n\nconst getRelevantHeaders = function (headersObj) {\n\tconst headers = {};\n\tObject.keys(headersObj).forEach((key) => {\n\t\tconst value = headersObj[key];\n\t\tconst lowerCaseKey = key.toLowerCase();\n\t\tif ((lowerCaseKey === 'contenttype' || lowerCaseKey === 'contentlength') && value && value.trim() !== '') {\n\t\t\theaders[key] = value;\n\t\t}\n\t});\n\n\tif (Object.keys(headers).length > 0) {\n\t\treturn headers;\n\t}\n};\n\nconst getRelevantMetaTags = function (metaObj) {\n\tconst tags = {};\n\tObject.keys(metaObj).forEach((key) => {\n\t\tconst value = metaObj[key];\n\t\tif (/^(og|fb|twitter|oembed|msapplication).+|description|title|pageTitle$/.test(key.toLowerCase()) && value && value.trim() !== '') {\n\t\t\ttags[key] = value;\n\t\t}\n\t});\n\n\tif (Object.keys(tags).length > 0) {\n\t\treturn tags;\n\t}\n};\n\nconst insertMaxWidthInOembedHtml = (oembedHtml) => oembedHtml?.replace('iframe', 'iframe style=\"max-width: 100%;width:400px;height:225px\"');\n\nOEmbed.rocketUrlParser = async function (message) {\n\tif (Array.isArray(message.urls)) {\n\t\tconst attachments = [];\n\t\tlet changed = false;\n\t\tfor await (const item of message.urls) {\n\t\t\tif (item.ignoreParse === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isURL(item.url)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst data = await OEmbed.getUrlMetaWithCache(item.url);\n\t\t\tif (data != null) {\n\t\t\t\tif (data.attachments) {\n\t\t\t\t\tattachments.push(...data.attachments);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (data.meta != null) {\n\t\t\t\t\titem.meta = getRelevantMetaTags(data.meta);\n\t\t\t\t\tif (item.meta && item.meta.oembedHtml) {\n\t\t\t\t\t\titem.meta.oembedHtml = insertMaxWidthInOembedHtml(item.meta.oembedHtml);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (data.headers != null) {\n\t\t\t\t\titem.headers = getRelevantHeaders(data.headers);\n\t\t\t\t}\n\t\t\t\titem.parsedUrl = data.parsedUrl;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\tif (attachments.length) {\n\t\t\tMessages.setMessageAttachments(message._id, attachments);\n\t\t}\n\t\tif (changed === true) {\n\t\t\tMessages.setUrlsById(message._id, message.urls);\n\t\t}\n\t}\n\treturn message;\n};\n\nsettings.watch('API_Embed', function (value) {\n\tif (value) {\n\t\treturn callbacks.add(\n\t\t\t'afterSaveMessage',\n\t\t\t(message) => Promise.await(OEmbed.rocketUrlParser(message)),\n\t\t\tcallbacks.priority.LOW,\n\t\t\t'API_Embed',\n\t\t);\n\t}\n\treturn callbacks.remove('afterSaveMessage', 'API_Embed');\n});\n\nexport { OEmbed };\n"]},"sourceType":"module","hash":"4e02f246e277f29c3f875e40af132a959727a5be"}

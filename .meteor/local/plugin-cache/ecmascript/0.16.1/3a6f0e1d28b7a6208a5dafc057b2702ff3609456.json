{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/saveUserIdentity.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/saveUserIdentity.js","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/saveUserIdentity.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/app/lib/server/functions/saveUserIdentity.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveUserIdentity.js"}},"code":"module.export({\n  saveUserIdentity: () => saveUserIdentity\n});\n\nlet _setUsername;\n\nmodule.link(\"./setUsername\", {\n  _setUsername(v) {\n    _setUsername = v;\n  }\n\n}, 0);\n\nlet _setRealName;\n\nmodule.link(\"./setRealName\", {\n  _setRealName(v) {\n    _setRealName = v;\n  }\n\n}, 1);\nlet Messages, Rooms, Subscriptions, LivechatDepartmentAgents, Users;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  LivechatDepartmentAgents(v) {\n    LivechatDepartmentAgents = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet FileUpload;\nmodule.link(\"../../../file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 3);\nlet updateGroupDMsName;\nmodule.link(\"./updateGroupDMsName\", {\n  updateGroupDMsName(v) {\n    updateGroupDMsName = v;\n  }\n\n}, 4);\nlet validateName;\nmodule.link(\"./validateName\", {\n  validateName(v) {\n    validateName = v;\n  }\n\n}, 5);\n\nfunction saveUserIdentity(_ref) {\n  let {\n    _id,\n    name: rawName,\n    username: rawUsername\n  } = _ref;\n\n  if (!_id) {\n    return false;\n  }\n\n  const name = String(rawName).trim();\n  const username = String(rawUsername).trim();\n  const user = Users.findOneById(_id);\n  const previousUsername = user.username;\n  const previousName = user.name;\n  const nameChanged = previousName !== name;\n  const usernameChanged = previousUsername !== username;\n\n  if (typeof rawUsername !== 'undefined' && usernameChanged) {\n    if (!validateName(username)) {\n      return false;\n    }\n\n    if (!_setUsername(_id, username, user)) {\n      return false;\n    }\n\n    user.username = username;\n  }\n\n  if (typeof rawName !== 'undefined' && nameChanged) {\n    if (!_setRealName(_id, name, user)) {\n      return false;\n    }\n  } // if coming from old username, update all references\n\n\n  if (previousUsername) {\n    if (usernameChanged && typeof rawUsername !== 'undefined') {\n      Messages.updateAllUsernamesByUserId(user._id, username);\n      Messages.updateUsernameOfEditByUserId(user._id, username);\n      Messages.findByMention(previousUsername).forEach(function (msg) {\n        const updatedMsg = msg.msg.replace(new RegExp(\"@\".concat(previousUsername), 'ig'), \"@\".concat(username));\n        return Messages.updateUsernameAndMessageOfMentionByIdAndOldUsername(msg._id, previousUsername, username, updatedMsg);\n      });\n      Rooms.replaceUsername(previousUsername, username);\n      Rooms.replaceMutedUsername(previousUsername, username);\n      Rooms.replaceUsernameOfUserByUserId(user._id, username);\n      Subscriptions.setUserUsernameByUserId(user._id, username);\n      LivechatDepartmentAgents.replaceUsernameOfAgentByUserId(user._id, username);\n      const fileStore = FileUpload.getStore('Avatars');\n      const file = fileStore.model.findOneByName(previousUsername);\n\n      if (file) {\n        fileStore.model.updateFileNameById(file._id, username);\n      }\n    } // update other references if either the name or username has changed\n\n\n    if (usernameChanged || nameChanged) {\n      // update name and fname of 1-on-1 direct messages\n      Subscriptions.updateDirectNameAndFnameByName(previousUsername, rawUsername && username, rawName && name); // update name and fname of group direct messages\n\n      updateGroupDMsName(user);\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["app/lib/server/functions/saveUserIdentity.js"],"names":["module","export","saveUserIdentity","_setUsername","link","v","_setRealName","Messages","Rooms","Subscriptions","LivechatDepartmentAgents","Users","FileUpload","updateGroupDMsName","validateName","_id","name","rawName","username","rawUsername","String","trim","user","findOneById","previousUsername","previousName","nameChanged","usernameChanged","updateAllUsernamesByUserId","updateUsernameOfEditByUserId","findByMention","forEach","msg","updatedMsg","replace","RegExp","updateUsernameAndMessageOfMentionByIdAndOldUsername","replaceUsername","replaceMutedUsername","replaceUsernameOfUserByUserId","setUserUsernameByUserId","replaceUsernameOfAgentByUserId","fileStore","getStore","file","model","findOneByName","updateFileNameById","updateDirectNameAndFnameByName"],"mappings":"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","sourcesContent":["import { _setUsername } from './setUsername';\nimport { _setRealName } from './setRealName';\nimport { Messages, Rooms, Subscriptions, LivechatDepartmentAgents, Users } from '../../../models/server';\nimport { FileUpload } from '../../../file-upload/server';\nimport { updateGroupDMsName } from './updateGroupDMsName';\nimport { validateName } from './validateName';\n\n/**\n *\n * @param {object} changes changes to the user\n */\nexport function saveUserIdentity({ _id, name: rawName, username: rawUsername }) {\n\tif (!_id) {\n\t\treturn false;\n\t}\n\n\tconst name = String(rawName).trim();\n\tconst username = String(rawUsername).trim();\n\n\tconst user = Users.findOneById(_id);\n\n\tconst previousUsername = user.username;\n\tconst previousName = user.name;\n\tconst nameChanged = previousName !== name;\n\tconst usernameChanged = previousUsername !== username;\n\n\tif (typeof rawUsername !== 'undefined' && usernameChanged) {\n\t\tif (!validateName(username)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!_setUsername(_id, username, user)) {\n\t\t\treturn false;\n\t\t}\n\t\tuser.username = username;\n\t}\n\n\tif (typeof rawName !== 'undefined' && nameChanged) {\n\t\tif (!_setRealName(_id, name, user)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// if coming from old username, update all references\n\tif (previousUsername) {\n\t\tif (usernameChanged && typeof rawUsername !== 'undefined') {\n\t\t\tMessages.updateAllUsernamesByUserId(user._id, username);\n\t\t\tMessages.updateUsernameOfEditByUserId(user._id, username);\n\t\t\tMessages.findByMention(previousUsername).forEach(function (msg) {\n\t\t\t\tconst updatedMsg = msg.msg.replace(new RegExp(`@${previousUsername}`, 'ig'), `@${username}`);\n\t\t\t\treturn Messages.updateUsernameAndMessageOfMentionByIdAndOldUsername(msg._id, previousUsername, username, updatedMsg);\n\t\t\t});\n\t\t\tRooms.replaceUsername(previousUsername, username);\n\t\t\tRooms.replaceMutedUsername(previousUsername, username);\n\t\t\tRooms.replaceUsernameOfUserByUserId(user._id, username);\n\t\t\tSubscriptions.setUserUsernameByUserId(user._id, username);\n\n\t\t\tLivechatDepartmentAgents.replaceUsernameOfAgentByUserId(user._id, username);\n\n\t\t\tconst fileStore = FileUpload.getStore('Avatars');\n\t\t\tconst file = fileStore.model.findOneByName(previousUsername);\n\t\t\tif (file) {\n\t\t\t\tfileStore.model.updateFileNameById(file._id, username);\n\t\t\t}\n\t\t}\n\n\t\t// update other references if either the name or username has changed\n\t\tif (usernameChanged || nameChanged) {\n\t\t\t// update name and fname of 1-on-1 direct messages\n\t\t\tSubscriptions.updateDirectNameAndFnameByName(previousUsername, rawUsername && username, rawName && name);\n\n\t\t\t// update name and fname of group direct messages\n\t\t\tupdateGroupDMsName(user);\n\t\t}\n\t}\n\n\treturn true;\n}\n"]},"sourceType":"module","hash":"3a6f0e1d28b7a6208a5dafc057b2702ff3609456"}

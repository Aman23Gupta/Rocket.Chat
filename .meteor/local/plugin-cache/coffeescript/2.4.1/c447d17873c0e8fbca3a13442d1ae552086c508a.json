{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:oauth2-server/model.coffee","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/rocketchat:oauth2-server/model.coffee","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:oauth2-server/model.coffee","passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:oauth2-server/model.coffee","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/rocketchat:oauth2-server/model.coffee"}},"code":"var AccessTokens, AuthCodes, Clients, Model, RefreshTokens, debug;\nAccessTokens = void 0;\nRefreshTokens = void 0;\nClients = void 0;\nAuthCodes = void 0;\ndebug = void 0;\n\nthis.Model = Model = function () {\n  class Model {\n    constructor(config = {}) {\n      if (config.accessTokensCollectionName == null) {\n        config.accessTokensCollectionName = 'oauth_access_tokens';\n      }\n\n      if (config.refreshTokensCollectionName == null) {\n        config.refreshTokensCollectionName = 'oauth_refresh_tokens';\n      }\n\n      if (config.clientsCollectionName == null) {\n        config.clientsCollectionName = 'oauth_clients';\n      }\n\n      if (config.authCodesCollectionName == null) {\n        config.authCodesCollectionName = 'oauth_auth_codes';\n      }\n\n      this.debug = debug = config.debug;\n      this.AccessTokens = AccessTokens = config.accessTokensCollection || new Meteor.Collection(config.accessTokensCollectionName);\n      this.RefreshTokens = RefreshTokens = config.refreshTokensCollection || new Meteor.Collection(config.refreshTokensCollectionName);\n      this.Clients = Clients = config.clientsCollection || new Meteor.Collection(config.clientsCollectionName);\n      this.AuthCodes = AuthCodes = config.authCodesCollection || new Meteor.Collection(config.authCodesCollectionName);\n    }\n\n    grantTypeAllowed(clientId, grantType, callback) {\n      if (debug === true) {\n        console.log('[OAuth2Server]', 'in grantTypeAllowed (clientId:', clientId, ', grantType:', grantType + ')');\n      }\n\n      return callback(false, grantType === 'authorization_code' || grantType === 'refresh_token');\n    }\n\n  }\n\n  ;\n  Model.prototype.getAccessToken = Meteor.bindEnvironment(function (bearerToken, callback) {\n    var e, token;\n\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in getAccessToken (bearerToken:', bearerToken, ')');\n    }\n\n    try {\n      token = AccessTokens.findOne({\n        accessToken: bearerToken\n      });\n      return callback(null, token);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n  Model.prototype.getClient = Meteor.bindEnvironment(function (clientId, clientSecret, callback) {\n    var client, e;\n\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in getClient (clientId:', clientId, ', clientSecret:', clientSecret, ')');\n    }\n\n    try {\n      if (clientSecret == null) {\n        client = Clients.findOne({\n          active: true,\n          clientId: clientId\n        });\n      } else {\n        client = Clients.findOne({\n          active: true,\n          clientId: clientId,\n          clientSecret: clientSecret\n        });\n      }\n\n      return callback(null, client);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n  Model.prototype.saveAccessToken = Meteor.bindEnvironment(function (token, clientId, expires, user, callback) {\n    var e, tokenId;\n\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in saveAccessToken (token:', token, ', clientId:', clientId, ', user:', user, ', expires:', expires, ')');\n    }\n\n    try {\n      tokenId = AccessTokens.insert({\n        accessToken: token,\n        clientId: clientId,\n        userId: user.id,\n        expires: expires\n      });\n      return callback(null, tokenId);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n  Model.prototype.getAuthCode = Meteor.bindEnvironment(function (authCode, callback) {\n    var code, e;\n\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in getAuthCode (authCode: ' + authCode + ')');\n    }\n\n    try {\n      code = AuthCodes.findOne({\n        authCode: authCode\n      });\n      return callback(null, code);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n  Model.prototype.saveAuthCode = Meteor.bindEnvironment(function (code, clientId, expires, user, callback) {\n    var codeId, e;\n\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in saveAuthCode (code:', code, ', clientId:', clientId, ', expires:', expires, ', user:', user, ')');\n    }\n\n    try {\n      codeId = AuthCodes.upsert({\n        authCode: code\n      }, {\n        authCode: code,\n        clientId: clientId,\n        userId: user.id,\n        expires: expires\n      });\n      return callback(null, codeId);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n  Model.prototype.saveRefreshToken = Meteor.bindEnvironment(function (token, clientId, expires, user, callback) {\n    var e, tokenId;\n\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in saveRefreshToken (token:', token, ', clientId:', clientId, ', user:', user, ', expires:', expires, ')');\n    }\n\n    try {\n      return tokenId = RefreshTokens.insert({\n        refreshToken: token,\n        clientId: clientId,\n        userId: user.id,\n        expires: expires\n      }, callback(null, tokenId));\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n  Model.prototype.getRefreshToken = Meteor.bindEnvironment(function (refreshToken, callback) {\n    var e, token;\n\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in getRefreshToken (refreshToken: ' + refreshToken + ')');\n    }\n\n    try {\n      token = RefreshTokens.findOne({\n        refreshToken: refreshToken\n      });\n      return callback(null, token);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n  return Model;\n}.call(this);","map":{"version":3,"sources":["packages/rocketchat:oauth2-server/model.coffee"],"names":["AccessTokens","AuthCodes","Clients","Model","RefreshTokens","debug","constructor","config","accessTokensCollectionName","refreshTokensCollectionName","clientsCollectionName","authCodesCollectionName","accessTokensCollection","Meteor","Collection","refreshTokensCollection","clientsCollection","authCodesCollection","grantTypeAllowed","clientId","grantType","callback","console","log","prototype","getAccessToken","bindEnvironment","bearerToken","e","token","findOne","accessToken","error","getClient","clientSecret","client","active","saveAccessToken","expires","user","tokenId","insert","userId","id","getAuthCode","authCode","code","saveAuthCode","codeId","upsert","saveRefreshToken","refreshToken","getRefreshToken","call"],"mappings":"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","sourcesContent":["var AccessTokens, AuthCodes, Clients, Model, RefreshTokens, debug;\n\nAccessTokens = void 0;\n\nRefreshTokens = void 0;\n\nClients = void 0;\n\nAuthCodes = void 0;\n\ndebug = void 0;\n\nthis.Model = Model = (function() {\n  class Model {\n    constructor(config = {}) {\n      if (config.accessTokensCollectionName == null) {\n        config.accessTokensCollectionName = 'oauth_access_tokens';\n      }\n      if (config.refreshTokensCollectionName == null) {\n        config.refreshTokensCollectionName = 'oauth_refresh_tokens';\n      }\n      if (config.clientsCollectionName == null) {\n        config.clientsCollectionName = 'oauth_clients';\n      }\n      if (config.authCodesCollectionName == null) {\n        config.authCodesCollectionName = 'oauth_auth_codes';\n      }\n      this.debug = debug = config.debug;\n      this.AccessTokens = AccessTokens = config.accessTokensCollection || new Meteor.Collection(config.accessTokensCollectionName);\n      this.RefreshTokens = RefreshTokens = config.refreshTokensCollection || new Meteor.Collection(config.refreshTokensCollectionName);\n      this.Clients = Clients = config.clientsCollection || new Meteor.Collection(config.clientsCollectionName);\n      this.AuthCodes = AuthCodes = config.authCodesCollection || new Meteor.Collection(config.authCodesCollectionName);\n    }\n\n    grantTypeAllowed(clientId, grantType, callback) {\n      if (debug === true) {\n        console.log('[OAuth2Server]', 'in grantTypeAllowed (clientId:', clientId, ', grantType:', grantType + ')');\n      }\n      return callback(false, grantType === 'authorization_code' || grantType === 'refresh_token');\n    }\n\n  };\n\n  Model.prototype.getAccessToken = Meteor.bindEnvironment(function(bearerToken, callback) {\n    var e, token;\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in getAccessToken (bearerToken:', bearerToken, ')');\n    }\n    try {\n      token = AccessTokens.findOne({\n        accessToken: bearerToken\n      });\n      return callback(null, token);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n\n  Model.prototype.getClient = Meteor.bindEnvironment(function(clientId, clientSecret, callback) {\n    var client, e;\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in getClient (clientId:', clientId, ', clientSecret:', clientSecret, ')');\n    }\n    try {\n      if (clientSecret == null) {\n        client = Clients.findOne({\n          active: true,\n          clientId: clientId\n        });\n      } else {\n        client = Clients.findOne({\n          active: true,\n          clientId: clientId,\n          clientSecret: clientSecret\n        });\n      }\n      return callback(null, client);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n\n  Model.prototype.saveAccessToken = Meteor.bindEnvironment(function(token, clientId, expires, user, callback) {\n    var e, tokenId;\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in saveAccessToken (token:', token, ', clientId:', clientId, ', user:', user, ', expires:', expires, ')');\n    }\n    try {\n      tokenId = AccessTokens.insert({\n        accessToken: token,\n        clientId: clientId,\n        userId: user.id,\n        expires: expires\n      });\n      return callback(null, tokenId);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n\n  Model.prototype.getAuthCode = Meteor.bindEnvironment(function(authCode, callback) {\n    var code, e;\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in getAuthCode (authCode: ' + authCode + ')');\n    }\n    try {\n      code = AuthCodes.findOne({\n        authCode: authCode\n      });\n      return callback(null, code);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n\n  Model.prototype.saveAuthCode = Meteor.bindEnvironment(function(code, clientId, expires, user, callback) {\n    var codeId, e;\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in saveAuthCode (code:', code, ', clientId:', clientId, ', expires:', expires, ', user:', user, ')');\n    }\n    try {\n      codeId = AuthCodes.upsert({\n        authCode: code\n      }, {\n        authCode: code,\n        clientId: clientId,\n        userId: user.id,\n        expires: expires\n      });\n      return callback(null, codeId);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n\n  Model.prototype.saveRefreshToken = Meteor.bindEnvironment(function(token, clientId, expires, user, callback) {\n    var e, tokenId;\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in saveRefreshToken (token:', token, ', clientId:', clientId, ', user:', user, ', expires:', expires, ')');\n    }\n    try {\n      return tokenId = RefreshTokens.insert({\n        refreshToken: token,\n        clientId: clientId,\n        userId: user.id,\n        expires: expires\n      }, callback(null, tokenId));\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n\n  Model.prototype.getRefreshToken = Meteor.bindEnvironment(function(refreshToken, callback) {\n    var e, token;\n    if (debug === true) {\n      console.log('[OAuth2Server]', 'in getRefreshToken (refreshToken: ' + refreshToken + ')');\n    }\n    try {\n      token = RefreshTokens.findOne({\n        refreshToken: refreshToken\n      });\n      return callback(null, token);\n    } catch (error) {\n      e = error;\n      return callback(e);\n    }\n  });\n\n  return Model;\n\n}).call(this);\n"]},"sourceType":"script","hash":"c447d17873c0e8fbca3a13442d1ae552086c508a"}

{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:oauth2-server/oauth.coffee","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/rocketchat:oauth2-server/oauth.coffee","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:oauth2-server/oauth.coffee","passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:oauth2-server/oauth.coffee","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/rocketchat:oauth2-server/oauth.coffee"}},"code":"var express, oauthserver;\noauthserver = Npm.require('oauth2-server');\nexpress = Npm.require('express'); // WebApp.rawConnectHandlers.use app\n// JsonRoutes.Middleware.use app\n\nOAuth2Server = class OAuth2Server {\n  constructor(config = {}) {\n    this.config = config;\n    this.app = express();\n    this.routes = express();\n    this.model = new Model(this.config);\n    this.oauth = oauthserver({\n      model: this.model,\n      grants: ['authorization_code', 'refresh_token'],\n      debug: this.config.debug\n    });\n    this.publishAuhorizedClients();\n    this.initRoutes();\n    return this;\n  }\n\n  publishAuhorizedClients() {\n    return Meteor.publish('authorizedOAuth', function () {\n      if (this.userId == null) {\n        return this.ready();\n      }\n\n      return Meteor.users.find({\n        _id: this.userId\n      }, {\n        fields: {\n          'oauth.authorizedClients': 1\n        }\n      });\n      return typeof user !== \"undefined\" && user !== null;\n    });\n  }\n\n  initRoutes() {\n    var debugMiddleware, self, transformRequestsNotUsingFormUrlencodedType;\n    self = this;\n\n    debugMiddleware = function (req, res, next) {\n      if (self.config.debug === true) {\n        console.log('[OAuth2Server]', req.method, req.url);\n      }\n\n      return next();\n    }; // Transforms requests which are POST and aren't \"x-www-form-urlencoded\" content type\n    // and they pass the required information as query strings\n\n\n    transformRequestsNotUsingFormUrlencodedType = function (req, res, next) {\n      if (!req.is('application/x-www-form-urlencoded') && req.method === 'POST') {\n        if (self.config.debug === true) {\n          console.log('[OAuth2Server]', 'Transforming a request to form-urlencoded with the query going to the body.');\n        }\n\n        req.headers['content-type'] = 'application/x-www-form-urlencoded';\n        req.body = Object.assign({}, req.body, req.query);\n      }\n\n      return next();\n    };\n\n    this.app.all('/oauth/token', debugMiddleware, transformRequestsNotUsingFormUrlencodedType, this.oauth.grant());\n    this.app.get('/oauth/authorize', debugMiddleware, Meteor.bindEnvironment(function (req, res, next) {\n      var client;\n      client = self.model.Clients.findOne({\n        active: true,\n        clientId: req.query.client_id\n      });\n\n      if (client == null) {\n        return res.redirect('/oauth/error/404');\n      }\n\n      if (![].concat(client.redirectUri).includes(req.query.redirect_uri)) {\n        return res.redirect('/oauth/error/invalid_redirect_uri');\n      }\n\n      return next();\n    }));\n    this.app.post('/oauth/authorize', debugMiddleware, Meteor.bindEnvironment(function (req, res, next) {\n      var user;\n\n      if (req.body.token == null) {\n        return res.sendStatus(401).send('No token');\n      }\n\n      user = Meteor.users.findOne({\n        'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken(req.body.token)\n      });\n\n      if (user == null) {\n        return res.sendStatus(401).send('Invalid token');\n      }\n\n      req.user = {\n        id: user._id\n      };\n      return next();\n    }));\n    this.app.post('/oauth/authorize', debugMiddleware, this.oauth.authCodeGrant(function (req, next) {\n      if (req.body.allow === 'yes') {\n        Meteor.users.update(req.user.id, {\n          $addToSet: {\n            'oauth.authorizedClients': this.clientId\n          }\n        });\n      }\n\n      return next(null, req.body.allow === 'yes', req.user);\n    }));\n    this.app.use(this.routes);\n    return this.app.all('/oauth/*', this.oauth.errorHandler());\n  }\n\n};","map":{"version":3,"sources":["packages/rocketchat:oauth2-server/oauth.coffee"],"names":["express","oauthserver","Npm","require","OAuth2Server","constructor","config","app","routes","model","Model","oauth","grants","debug","publishAuhorizedClients","initRoutes","Meteor","publish","userId","ready","users","find","_id","fields","user","debugMiddleware","self","transformRequestsNotUsingFormUrlencodedType","req","res","next","console","log","method","url","is","headers","body","Object","assign","query","all","grant","get","bindEnvironment","client","Clients","findOne","active","clientId","client_id","redirect","concat","redirectUri","includes","redirect_uri","post","token","sendStatus","send","Accounts","_hashLoginToken","id","authCodeGrant","allow","update","$addToSet","use","errorHandler"],"mappings":"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","sourcesContent":["var express, oauthserver;              \n\noauthserver = Npm.require('oauth2-server');\n\nexpress = Npm.require('express');\n\n// WebApp.rawConnectHandlers.use app\n// JsonRoutes.Middleware.use app\nOAuth2Server = class OAuth2Server {\n  constructor(config = {}) {\n    this.config = config;\n    this.app = express();\n    this.routes = express();\n    this.model = new Model(this.config);\n    this.oauth = oauthserver({\n      model: this.model,\n      grants: ['authorization_code', 'refresh_token'],\n      debug: this.config.debug\n    });\n    this.publishAuhorizedClients();\n    this.initRoutes();\n    return this;\n  }\n\n  publishAuhorizedClients() {\n    return Meteor.publish('authorizedOAuth', function() {\n      if (this.userId == null) {\n        return this.ready();\n      }\n      return Meteor.users.find({\n        _id: this.userId\n      }, {\n        fields: {\n          'oauth.authorizedClients': 1\n        }\n      });\n      return typeof user !== \"undefined\" && user !== null;\n    });\n  }\n\n  initRoutes() {\n    var debugMiddleware, self, transformRequestsNotUsingFormUrlencodedType;\n    self = this;\n    debugMiddleware = function(req, res, next) {\n      if (self.config.debug === true) {\n        console.log('[OAuth2Server]', req.method, req.url);\n      }\n      return next();\n    };\n    // Transforms requests which are POST and aren't \"x-www-form-urlencoded\" content type\n    // and they pass the required information as query strings\n    transformRequestsNotUsingFormUrlencodedType = function(req, res, next) {\n      if (!req.is('application/x-www-form-urlencoded') && req.method === 'POST') {\n        if (self.config.debug === true) {\n          console.log('[OAuth2Server]', 'Transforming a request to form-urlencoded with the query going to the body.');\n        }\n        req.headers['content-type'] = 'application/x-www-form-urlencoded';\n        req.body = Object.assign({}, req.body, req.query);\n      }\n      return next();\n    };\n    this.app.all('/oauth/token', debugMiddleware, transformRequestsNotUsingFormUrlencodedType, this.oauth.grant());\n    this.app.get('/oauth/authorize', debugMiddleware, Meteor.bindEnvironment(function(req, res, next) {\n      var client;\n      client = self.model.Clients.findOne({\n        active: true,\n        clientId: req.query.client_id\n      });\n      if (client == null) {\n        return res.redirect('/oauth/error/404');\n      }\n      if (![].concat(client.redirectUri).includes(req.query.redirect_uri)) {\n        return res.redirect('/oauth/error/invalid_redirect_uri');\n      }\n      return next();\n    }));\n    this.app.post('/oauth/authorize', debugMiddleware, Meteor.bindEnvironment(function(req, res, next) {\n      var user;\n      if (req.body.token == null) {\n        return res.sendStatus(401).send('No token');\n      }\n      user = Meteor.users.findOne({\n        'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken(req.body.token)\n      });\n      if (user == null) {\n        return res.sendStatus(401).send('Invalid token');\n      }\n      req.user = {\n        id: user._id\n      };\n      return next();\n    }));\n    this.app.post('/oauth/authorize', debugMiddleware, this.oauth.authCodeGrant(function(req, next) {\n      if (req.body.allow === 'yes') {\n        Meteor.users.update(req.user.id, {\n          $addToSet: {\n            'oauth.authorizedClients': this.clientId\n          }\n        });\n      }\n      return next(null, req.body.allow === 'yes', req.user);\n    }));\n    this.app.use(this.routes);\n    return this.app.all('/oauth/*', this.oauth.errorHandler());\n  }\n\n};\n"]},"sourceType":"script","hash":"5a91636d80857b193a551974acdd8d5640d8b565"}

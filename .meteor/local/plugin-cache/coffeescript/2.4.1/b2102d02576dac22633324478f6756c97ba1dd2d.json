{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:restivus/lib/route.coffee","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/rocketchat:restivus/lib/route.coffee","filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:restivus/lib/route.coffee","passPerPreset":false,"envName":"development","cwd":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","root":"/Users/amangupta/Documents/Open-Source/Rocket.Chat","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/amangupta/Documents/Open-Source/Rocket.Chat/packages/rocketchat:restivus/lib/route.coffee","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/rocketchat:restivus/lib/route.coffee"}},"code":"share.Route = function () {\n  class Route {\n    constructor(api, path, options, endpoints1) {\n      this.api = api;\n      this.path = path;\n      this.options = options;\n      this.endpoints = endpoints1; // Check if options were provided\n\n      if (!this.endpoints) {\n        this.endpoints = this.options;\n        this.options = {};\n      }\n    }\n    /*\n      Convert all endpoints on the given route into our expected endpoint object if it is a bare\n      function\n       @param {Route} route The route the endpoints belong to\n    */\n\n\n    _resolveEndpoints() {\n      _.each(this.endpoints, function (endpoint, method, endpoints) {\n        if (_.isFunction(endpoint)) {\n          return endpoints[method] = {\n            action: endpoint\n          };\n        }\n      });\n    }\n    /*\n    Configure the authentication and role requirement on all endpoints (except OPTIONS, which must\n    be configured directly on the endpoint)\n     Authentication can be required on an entire route or individual endpoints. If required on an\n    entire route, that serves as the default. If required in any individual endpoints, that will\n    override the default.\n     After the endpoint is configured, all authentication and role requirements of an endpoint can be\n    accessed at <code>endpoint.authRequired</code> and <code>endpoint.roleRequired</code>,\n    respectively.\n     @param {Route} route The route the endpoints belong to\n    @param {Endpoint} endpoint The endpoint to configure\n    */\n\n\n    _configureEndpoints() {\n      _.each(this.endpoints, function (endpoint, method) {\n        var ref, ref1;\n\n        if (method !== 'options') {\n          // Configure acceptable roles\n          if (!((ref = this.options) != null ? ref.roleRequired : void 0)) {\n            this.options.roleRequired = [];\n          }\n\n          if (!endpoint.roleRequired) {\n            endpoint.roleRequired = [];\n          }\n\n          endpoint.roleRequired = _.union(endpoint.roleRequired, this.options.roleRequired); // Make it easier to check if no roles are required\n\n          if (_.isEmpty(endpoint.roleRequired)) {\n            endpoint.roleRequired = false;\n          } // Configure auth requirement\n\n\n          if (endpoint.authRequired === void 0) {\n            if (((ref1 = this.options) != null ? ref1.authRequired : void 0) || endpoint.roleRequired) {\n              endpoint.authRequired = true;\n            } else {\n              endpoint.authRequired = false;\n            }\n          }\n        }\n      }, this);\n    }\n    /*\n    Authenticate an endpoint if required, and return the result of calling it\n     @returns The endpoint response or a 401 if authentication fails\n    */\n\n\n    _callEndpoint(endpointContext, endpoint) {\n      var auth; // Call the endpoint if authentication doesn't fail\n\n      auth = this._authAccepted(endpointContext, endpoint);\n\n      if (auth.success) {\n        if (this._roleAccepted(endpointContext, endpoint)) {\n          return endpoint.action.call(endpointContext);\n        } else {\n          return {\n            statusCode: 403,\n            body: {\n              status: 'error',\n              message: 'You do not have permission to do this.' // Auth failed\n\n            }\n          };\n        }\n      } else {\n        if (auth.data) {\n          return auth.data;\n        } else {\n          return {\n            statusCode: 401,\n            body: {\n              status: 'error',\n              message: 'You must be logged in to do this.'\n            }\n          };\n        }\n      }\n    }\n    /*\n      Authenticate the given endpoint if required\n       Once it's globally configured in the API, authentication can be required on an entire route or\n      individual endpoints. If required on an entire endpoint, that serves as the default. If required\n      in any individual endpoints, that will override the default.\n       @returns An object of the following format:\n     {\n      success: Boolean\n      data: String or Object\n    }\n     where `success` is `true` if all required authentication checks pass and the optional `data`\n    will contain the auth data when successful and an optional error response when auth fails.\n    */\n\n\n    _authAccepted(endpointContext, endpoint) {\n      if (endpoint.authRequired) {\n        return this._authenticate(endpointContext);\n      } else {\n        return {\n          success: true\n        };\n      }\n    }\n    /*\n    Verify the request is being made by an actively logged in user\n     If verified, attach the authenticated user to the context.\n     @returns An object of the following format:\n       {\n        success: Boolean\n        data: String or Object\n      }\n     where `success` is `true` if all required authentication checks pass and the optional `data`\n    will contain the auth data when successful and an optional error response when auth fails.\n    */\n\n\n    _authenticate(endpointContext) {\n      var auth, userSelector; // Get auth info\n\n      auth = this.api._config.auth.user.call(endpointContext);\n\n      if (!auth) {\n        return {\n          success: false\n        };\n      } // Get the user from the database\n\n\n      if (auth.userId && auth.token && !auth.user) {\n        userSelector = {};\n        userSelector._id = auth.userId;\n        userSelector[this.api._config.auth.token] = auth.token;\n        auth.user = Meteor.users.findOne(userSelector);\n      }\n\n      if (auth.error) {\n        return {\n          success: false,\n          data: auth.error\n        };\n      } // Attach the user and their ID to the context if the authentication was successful\n\n\n      if (auth.user) {\n        endpointContext.user = auth.user;\n        endpointContext.userId = auth.user._id;\n        return {\n          success: true,\n          data: auth\n        };\n      } else {\n        return {\n          success: false\n        };\n      }\n    }\n    /*\n    Authenticate the user role if required\n     Must be called after _authAccepted().\n     @returns True if the authenticated user belongs to <i>any</i> of the acceptable roles on the\n           endpoint\n    */\n\n\n    _roleAccepted(endpointContext, endpoint) {\n      if (endpoint.roleRequired) {\n        if (_.isEmpty(_.intersection(endpoint.roleRequired, endpointContext.user.roles))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /*\n    Respond to an HTTP request\n    */\n\n\n    _respond(response, body, statusCode = 200, headers = {}) {\n      var defaultHeaders, delayInMilliseconds, minimumDelayInMilliseconds, randomMultiplierBetweenOneAndTwo, sendResponse; // Override any default headers that have been provided (keys are normalized to be case insensitive)\n      // TODO: Consider only lowercasing the header keys we need normalized, like Content-Type\n\n      defaultHeaders = this._lowerCaseKeys(this.api._config.defaultHeaders);\n      headers = this._lowerCaseKeys(headers);\n      headers = _.extend(defaultHeaders, headers); // Prepare JSON body for response when Content-Type indicates JSON type\n\n      if (headers['content-type'].match(/json|javascript/) !== null) {\n        if (this.api._config.prettyJson) {\n          body = JSON.stringify(body, void 0, 2);\n        } else {\n          body = JSON.stringify(body);\n        }\n      } // Send response\n\n\n      sendResponse = function () {\n        response.writeHead(statusCode, headers);\n        response.write(body);\n        return response.end();\n      };\n\n      if (statusCode === 401 || statusCode === 403) {\n        // Hackers can measure the response time to determine things like whether the 401 response was \n        // caused by bad user id vs bad password.\n        // In doing so, they can first scan for valid user ids regardless of valid passwords.\n        // Delay by a random amount to reduce the ability for a hacker to determine the response time.\n        // See https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks#Finding_Other_Countermeasures\n        // See https://en.wikipedia.org/wiki/Timing_attack\n        minimumDelayInMilliseconds = 500;\n        randomMultiplierBetweenOneAndTwo = 1 + Math.random();\n        delayInMilliseconds = minimumDelayInMilliseconds * randomMultiplierBetweenOneAndTwo;\n        return Meteor.setTimeout(sendResponse, delayInMilliseconds);\n      } else {\n        return sendResponse();\n      }\n    }\n    /*\n      Return the object with all of the keys converted to lowercase\n    */\n\n\n    _lowerCaseKeys(object) {\n      return _.chain(object).pairs().map(function (attr) {\n        return [attr[0].toLowerCase(), attr[1]];\n      }).object().value();\n    }\n\n  }\n\n  ;\n\n  Route.prototype.addToApi = function () {\n    var availableMethods;\n    availableMethods = ['get', 'post', 'put', 'patch', 'delete', 'options'];\n    return function () {\n      var allowedMethods, fullPath, rejectedMethods, self;\n      self = this; // Throw an error if a route has already been added at this path\n      // TODO: Check for collisions with paths that follow same pattern with different parameter names\n\n      if (_.contains(this.api._config.paths, this.path)) {\n        throw new Error(`Cannot add a route at an existing path: ${this.path}`);\n      } // Override the default OPTIONS endpoint with our own\n\n\n      this.endpoints = _.extend({\n        options: this.api._config.defaultOptionsEndpoint\n      }, this.endpoints); // Configure each endpoint on this route\n\n      this._resolveEndpoints();\n\n      this._configureEndpoints(); // Add to our list of existing paths\n\n\n      this.api._config.paths.push(this.path);\n\n      allowedMethods = _.filter(availableMethods, function (method) {\n        return _.contains(_.keys(self.endpoints), method);\n      });\n      rejectedMethods = _.reject(availableMethods, function (method) {\n        return _.contains(_.keys(self.endpoints), method);\n      }); // Setup endpoints on route\n\n      fullPath = this.api._config.apiPath + this.path;\n\n      _.each(allowedMethods, function (method) {\n        var endpoint;\n        endpoint = self.endpoints[method];\n        return JsonRoutes.add(method, fullPath, function (req, res) {\n          var doneFunc, endpointContext, error, responseData, responseInitiated; // Add function to endpoint context for indicating a response has been initiated manually\n\n          responseInitiated = false;\n\n          doneFunc = function () {\n            return responseInitiated = true;\n          };\n\n          endpointContext = {\n            urlParams: req.params,\n            queryParams: req.query,\n            bodyParams: req.body,\n            request: req,\n            response: res,\n            done: doneFunc\n          }; // Add endpoint config options to context\n\n          _.extend(endpointContext, endpoint); // Run the requested endpoint\n\n\n          responseData = null;\n\n          try {\n            responseData = self._callEndpoint(endpointContext, endpoint);\n          } catch (error1) {\n            error = error1; // Do exactly what Iron Router would have done, to avoid changing the API\n\n            ironRouterSendErrorToResponse(error, req, res);\n            return;\n          }\n\n          if (responseInitiated) {\n            // Ensure the response is properly completed\n            res.end();\n            return;\n          } else {\n            if (res.headersSent) {\n              throw new Error(`Must call this.done() after handling endpoint response manually: ${method} ${fullPath}`);\n            } else if (responseData === null || responseData === void 0) {\n              throw new Error(`Cannot return null or undefined from an endpoint: ${method} ${fullPath}`);\n            }\n          } // Generate and return the http response, handling the different endpoint response types\n\n\n          if (responseData.body && (responseData.statusCode || responseData.headers)) {\n            return self._respond(res, responseData.body, responseData.statusCode, responseData.headers);\n          } else {\n            return self._respond(res, responseData);\n          }\n        });\n      });\n\n      return _.each(rejectedMethods, function (method) {\n        return JsonRoutes.add(method, fullPath, function (req, res) {\n          var headers, responseData;\n          responseData = {\n            status: 'error',\n            message: 'API endpoint does not exist'\n          };\n          headers = {\n            'Allow': allowedMethods.join(', ').toUpperCase()\n          };\n          return self._respond(res, responseData, 405, headers);\n        });\n      });\n    };\n  }();\n\n  return Route;\n}.call(this);","map":{"version":3,"sources":["packages/rocketchat:restivus/lib/route.coffee"],"names":["share","Route","constructor","api","path","options","endpoints1","endpoints","_resolveEndpoints","_","each","endpoint","method","isFunction","action","_configureEndpoints","ref","ref1","roleRequired","union","isEmpty","authRequired","_callEndpoint","endpointContext","auth","_authAccepted","success","_roleAccepted","call","statusCode","body","status","message","data","_authenticate","userSelector","_config","user","userId","token","_id","Meteor","users","findOne","error","intersection","roles","_respond","response","headers","defaultHeaders","delayInMilliseconds","minimumDelayInMilliseconds","randomMultiplierBetweenOneAndTwo","sendResponse","_lowerCaseKeys","extend","match","prettyJson","JSON","stringify","writeHead","write","end","Math","random","setTimeout","object","chain","pairs","map","attr","toLowerCase","value","prototype","addToApi","availableMethods","allowedMethods","fullPath","rejectedMethods","self","contains","paths","Error","defaultOptionsEndpoint","push","filter","keys","reject","apiPath","JsonRoutes","add","req","res","doneFunc","responseData","responseInitiated","urlParams","params","queryParams","query","bodyParams","request","done","error1","ironRouterSendErrorToResponse","headersSent","join","toUpperCase"],"mappings":"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","sourcesContent":["share.Route = (function() {\n  class Route {\n    constructor(api, path, options, endpoints1) {\n      this.api = api;\n      this.path = path;\n      this.options = options;\n      this.endpoints = endpoints1;\n      // Check if options were provided\n      if (!this.endpoints) {\n        this.endpoints = this.options;\n        this.options = {};\n      }\n    }\n\n    /*\n      Convert all endpoints on the given route into our expected endpoint object if it is a bare\n      function\n\n      @param {Route} route The route the endpoints belong to\n    */\n    _resolveEndpoints() {\n      _.each(this.endpoints, function(endpoint, method, endpoints) {\n        if (_.isFunction(endpoint)) {\n          return endpoints[method] = {\n            action: endpoint\n          };\n        }\n      });\n    }\n\n    /*\n    Configure the authentication and role requirement on all endpoints (except OPTIONS, which must\n    be configured directly on the endpoint)\n\n    Authentication can be required on an entire route or individual endpoints. If required on an\n    entire route, that serves as the default. If required in any individual endpoints, that will\n    override the default.\n\n    After the endpoint is configured, all authentication and role requirements of an endpoint can be\n    accessed at <code>endpoint.authRequired</code> and <code>endpoint.roleRequired</code>,\n    respectively.\n\n    @param {Route} route The route the endpoints belong to\n    @param {Endpoint} endpoint The endpoint to configure\n    */\n    _configureEndpoints() {\n      _.each(this.endpoints, function(endpoint, method) {\n        var ref, ref1;\n        if (method !== 'options') {\n          // Configure acceptable roles\n          if (!((ref = this.options) != null ? ref.roleRequired : void 0)) {\n            this.options.roleRequired = [];\n          }\n          if (!endpoint.roleRequired) {\n            endpoint.roleRequired = [];\n          }\n          endpoint.roleRequired = _.union(endpoint.roleRequired, this.options.roleRequired);\n          // Make it easier to check if no roles are required\n          if (_.isEmpty(endpoint.roleRequired)) {\n            endpoint.roleRequired = false;\n          }\n          // Configure auth requirement\n          if (endpoint.authRequired === void 0) {\n            if (((ref1 = this.options) != null ? ref1.authRequired : void 0) || endpoint.roleRequired) {\n              endpoint.authRequired = true;\n            } else {\n              endpoint.authRequired = false;\n            }\n          }\n        }\n      }, this);\n    }\n\n    /*\n    Authenticate an endpoint if required, and return the result of calling it\n\n    @returns The endpoint response or a 401 if authentication fails\n    */\n    _callEndpoint(endpointContext, endpoint) {\n      var auth;\n      // Call the endpoint if authentication doesn't fail\n      auth = this._authAccepted(endpointContext, endpoint);\n      if (auth.success) {\n        if (this._roleAccepted(endpointContext, endpoint)) {\n          return endpoint.action.call(endpointContext);\n        } else {\n          return {\n            statusCode: 403,\n            body: {\n              status: 'error',\n              message: 'You do not have permission to do this.' // Auth failed\n            }\n          };\n        }\n      } else {\n        if (auth.data) {\n          return auth.data;\n        } else {\n          return {\n            statusCode: 401,\n            body: {\n              status: 'error',\n              message: 'You must be logged in to do this.'\n            }\n          };\n        }\n      }\n    }\n\n    /*\n      Authenticate the given endpoint if required\n\n      Once it's globally configured in the API, authentication can be required on an entire route or\n      individual endpoints. If required on an entire endpoint, that serves as the default. If required\n      in any individual endpoints, that will override the default.\n\n      @returns An object of the following format:\n\n    {\n      success: Boolean\n      data: String or Object\n    }\n\n    where `success` is `true` if all required authentication checks pass and the optional `data`\n    will contain the auth data when successful and an optional error response when auth fails.\n    */\n    _authAccepted(endpointContext, endpoint) {\n      if (endpoint.authRequired) {\n        return this._authenticate(endpointContext);\n      } else {\n        return {\n          success: true\n        };\n      }\n    }\n\n    /*\n    Verify the request is being made by an actively logged in user\n\n    If verified, attach the authenticated user to the context.\n\n    @returns An object of the following format:\n\n      {\n        success: Boolean\n        data: String or Object\n      }\n\n    where `success` is `true` if all required authentication checks pass and the optional `data`\n    will contain the auth data when successful and an optional error response when auth fails.\n    */\n    _authenticate(endpointContext) {\n      var auth, userSelector;\n      // Get auth info\n      auth = this.api._config.auth.user.call(endpointContext);\n      if (!auth) {\n        return {\n          success: false\n        };\n      }\n      // Get the user from the database\n      if (auth.userId && auth.token && !auth.user) {\n        userSelector = {};\n        userSelector._id = auth.userId;\n        userSelector[this.api._config.auth.token] = auth.token;\n        auth.user = Meteor.users.findOne(userSelector);\n      }\n      if (auth.error) {\n        return {\n          success: false,\n          data: auth.error\n        };\n      }\n      // Attach the user and their ID to the context if the authentication was successful\n      if (auth.user) {\n        endpointContext.user = auth.user;\n        endpointContext.userId = auth.user._id;\n        return {\n          success: true,\n          data: auth\n        };\n      } else {\n        return {\n          success: false\n        };\n      }\n    }\n\n    /*\n    Authenticate the user role if required\n\n    Must be called after _authAccepted().\n\n    @returns True if the authenticated user belongs to <i>any</i> of the acceptable roles on the\n           endpoint\n    */\n    _roleAccepted(endpointContext, endpoint) {\n      if (endpoint.roleRequired) {\n        if (_.isEmpty(_.intersection(endpoint.roleRequired, endpointContext.user.roles))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /*\n    Respond to an HTTP request\n    */\n    _respond(response, body, statusCode = 200, headers = {}) {\n      var defaultHeaders, delayInMilliseconds, minimumDelayInMilliseconds, randomMultiplierBetweenOneAndTwo, sendResponse;\n      // Override any default headers that have been provided (keys are normalized to be case insensitive)\n      // TODO: Consider only lowercasing the header keys we need normalized, like Content-Type\n      defaultHeaders = this._lowerCaseKeys(this.api._config.defaultHeaders);\n      headers = this._lowerCaseKeys(headers);\n      headers = _.extend(defaultHeaders, headers);\n      // Prepare JSON body for response when Content-Type indicates JSON type\n      if (headers['content-type'].match(/json|javascript/) !== null) {\n        if (this.api._config.prettyJson) {\n          body = JSON.stringify(body, void 0, 2);\n        } else {\n          body = JSON.stringify(body);\n        }\n      }\n      // Send response\n      sendResponse = function() {\n        response.writeHead(statusCode, headers);\n        response.write(body);\n        return response.end();\n      };\n      if (statusCode === 401 || statusCode === 403) {\n        // Hackers can measure the response time to determine things like whether the 401 response was \n        // caused by bad user id vs bad password.\n        // In doing so, they can first scan for valid user ids regardless of valid passwords.\n        // Delay by a random amount to reduce the ability for a hacker to determine the response time.\n        // See https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks#Finding_Other_Countermeasures\n        // See https://en.wikipedia.org/wiki/Timing_attack\n        minimumDelayInMilliseconds = 500;\n        randomMultiplierBetweenOneAndTwo = 1 + Math.random();\n        delayInMilliseconds = minimumDelayInMilliseconds * randomMultiplierBetweenOneAndTwo;\n        return Meteor.setTimeout(sendResponse, delayInMilliseconds);\n      } else {\n        return sendResponse();\n      }\n    }\n\n    /*\n      Return the object with all of the keys converted to lowercase\n    */\n    _lowerCaseKeys(object) {\n      return _.chain(object).pairs().map(function(attr) {\n        return [attr[0].toLowerCase(), attr[1]];\n      }).object().value();\n    }\n\n  };\n\n  Route.prototype.addToApi = (function() {\n    var availableMethods;\n    availableMethods = ['get', 'post', 'put', 'patch', 'delete', 'options'];\n    return function() {\n      var allowedMethods, fullPath, rejectedMethods, self;\n      self = this;\n      // Throw an error if a route has already been added at this path\n      // TODO: Check for collisions with paths that follow same pattern with different parameter names\n      if (_.contains(this.api._config.paths, this.path)) {\n        throw new Error(`Cannot add a route at an existing path: ${this.path}`);\n      }\n      // Override the default OPTIONS endpoint with our own\n      this.endpoints = _.extend({\n        options: this.api._config.defaultOptionsEndpoint\n      }, this.endpoints);\n      // Configure each endpoint on this route\n      this._resolveEndpoints();\n      this._configureEndpoints();\n      // Add to our list of existing paths\n      this.api._config.paths.push(this.path);\n      allowedMethods = _.filter(availableMethods, function(method) {\n        return _.contains(_.keys(self.endpoints), method);\n      });\n      rejectedMethods = _.reject(availableMethods, function(method) {\n        return _.contains(_.keys(self.endpoints), method);\n      });\n      // Setup endpoints on route\n      fullPath = this.api._config.apiPath + this.path;\n      _.each(allowedMethods, function(method) {\n        var endpoint;\n        endpoint = self.endpoints[method];\n        return JsonRoutes.add(method, fullPath, function(req, res) {\n          var doneFunc, endpointContext, error, responseData, responseInitiated;\n          // Add function to endpoint context for indicating a response has been initiated manually\n          responseInitiated = false;\n          doneFunc = function() {\n            return responseInitiated = true;\n          };\n          endpointContext = {\n            urlParams: req.params,\n            queryParams: req.query,\n            bodyParams: req.body,\n            request: req,\n            response: res,\n            done: doneFunc\n          };\n          // Add endpoint config options to context\n          _.extend(endpointContext, endpoint);\n          // Run the requested endpoint\n          responseData = null;\n          try {\n            responseData = self._callEndpoint(endpointContext, endpoint);\n          } catch (error1) {\n            error = error1;\n            // Do exactly what Iron Router would have done, to avoid changing the API\n            ironRouterSendErrorToResponse(error, req, res);\n            return;\n          }\n          if (responseInitiated) {\n            // Ensure the response is properly completed\n            res.end();\n            return;\n          } else {\n            if (res.headersSent) {\n              throw new Error(`Must call this.done() after handling endpoint response manually: ${method} ${fullPath}`);\n            } else if (responseData === null || responseData === void 0) {\n              throw new Error(`Cannot return null or undefined from an endpoint: ${method} ${fullPath}`);\n            }\n          }\n          // Generate and return the http response, handling the different endpoint response types\n          if (responseData.body && (responseData.statusCode || responseData.headers)) {\n            return self._respond(res, responseData.body, responseData.statusCode, responseData.headers);\n          } else {\n            return self._respond(res, responseData);\n          }\n        });\n      });\n      return _.each(rejectedMethods, function(method) {\n        return JsonRoutes.add(method, fullPath, function(req, res) {\n          var headers, responseData;\n          responseData = {\n            status: 'error',\n            message: 'API endpoint does not exist'\n          };\n          headers = {\n            'Allow': allowedMethods.join(', ').toUpperCase()\n          };\n          return self._respond(res, responseData, 405, headers);\n        });\n      });\n    };\n  })();\n\n  return Route;\n\n}).call(this);\n"]},"sourceType":"script","hash":"b2102d02576dac22633324478f6756c97ba1dd2d"}

{"version":3,"sources":["meteor://ðŸ’»app/app/livechat/client/lib/stream/queueManager.js"],"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","export","initializeLivechatInquiryStream","Meteor","APIClient","LivechatInquiry","inquiryDataStream","callWithErrorHandling","getUserPreference","CustomSounds","departments","Set","newInquirySound","userId","audioVolume","newRoomNotification","play","volume","Number","toPrecision","events","added","inquiry","type","has","department","insert","alert","_updatedAt","Date","changed","status","remove","_id","saveResult","upsert","insertedId","removed","updateCollection","getInquiriesFromAPI","v1","get","inquiries","removeListenerOfDepartment","departmentId","removeListener","delete","appendListenerToDepartment","add","on","addListenerForeachDepartment","cleanupFunctions","map","forEach","cleanup","updateInquiries","getAgentsDepartments","removeGlobalListener","addGlobalListener","subscribe","config","autoAssignAgent","agentDepartments","length","cleanUp","clear"],"mappings":"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","file":"dynamic/app/livechat/client/lib/stream/queueManager.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { APIClient } from '../../../../utils/client';\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\nimport { inquiryDataStream } from './inquiry';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport { getUserPreference } from '../../../../utils';\nimport { CustomSounds } from '../../../../custom-sounds/client/lib/CustomSounds';\n\nconst departments = new Set();\n\nconst newInquirySound = () => {\n\tconst userId = Meteor.userId();\n\tconst audioVolume = getUserPreference(userId, 'notificationsSoundVolume');\n\tconst newRoomNotification = getUserPreference(userId, 'newRoomNotification');\n\n\tif (newRoomNotification !== 'none') {\n\t\tCustomSounds.play(newRoomNotification, {\n\t\t\tvolume: Number((audioVolume / 100).toPrecision(2)),\n\t\t});\n\t}\n};\n\nconst events = {\n\tadded: (inquiry) => {\n\t\tdelete inquiry.type;\n\t\tdepartments.has(inquiry.department) && LivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tnewInquirySound();\n\t},\n\tchanged: (inquiry) => {\n\t\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\n\t\t\treturn LivechatInquiry.remove(inquiry._id);\n\t\t}\n\t\tdelete inquiry.type;\n\t\tconst saveResult = LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tif (saveResult?.insertedId) {\n\t\t\tnewInquirySound();\n\t\t}\n\t},\n\tremoved: (inquiry) => LivechatInquiry.remove(inquiry._id),\n};\n\nconst updateCollection = (inquiry) => {\n\tevents[inquiry.type](inquiry);\n};\n\nconst getInquiriesFromAPI = async () => {\n\tconst { inquiries } = await APIClient.v1.get('livechat/inquiries.queued?sort={\"ts\": 1}');\n\treturn inquiries;\n};\n\nconst removeListenerOfDepartment = (departmentId) => {\n\tinquiryDataStream.removeListener(`department/${departmentId}`, updateCollection);\n\tdepartments.delete(departmentId);\n};\n\nconst appendListenerToDepartment = (departmentId) => {\n\tdepartments.add(departmentId);\n\tinquiryDataStream.on(`department/${departmentId}`, updateCollection);\n\treturn () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = async (departments = []) => {\n\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\n\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\n};\n\nconst updateInquiries = async (inquiries = []) =>\n\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\n\nconst getAgentsDepartments = async (userId) => {\n\tconst { departments } = await APIClient.v1.get(`livechat/agents/${userId}/departments?enabledDepartmentsOnly=true`);\n\treturn departments;\n};\n\nconst removeGlobalListener = () => inquiryDataStream.removeListener('public', updateCollection);\n\nconst addGlobalListener = () => {\n\tinquiryDataStream.on('public', updateCollection);\n\treturn removeGlobalListener;\n};\n\nconst subscribe = async (userId) => {\n\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\n\tif (config && config.autoAssignAgent) {\n\t\treturn;\n\t}\n\n\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\n\n\tconst cleanUp = agentDepartments.length ? await addListenerForeachDepartment(agentDepartments) : addGlobalListener();\n\n\tupdateInquiries(await getInquiriesFromAPI());\n\n\treturn () => {\n\t\tLivechatInquiry.remove({});\n\t\tremoveGlobalListener();\n\t\tcleanUp && cleanUp();\n\t\tdepartments.clear();\n\t};\n};\n\nexport const initializeLivechatInquiryStream = (() => {\n\tlet cleanUp;\n\n\treturn async (...args) => {\n\t\tcleanUp && cleanUp();\n\t\tcleanUp = await subscribe(...args);\n\t};\n})();\n"]}
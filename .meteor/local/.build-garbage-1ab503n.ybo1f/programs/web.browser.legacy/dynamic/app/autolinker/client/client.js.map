{"version":3,"sources":["meteor://ðŸ’»app/app/autolinker/client/client.js"],"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","export","createAutolinkerMessageRenderer","Meteor","Random","Autolinker","escapeRegExp","phone","config","message","html","trim","msgParts","regexTokens","tokens","length","RegExp","map","token","split","msgPart","test","muttableConfig","stripTrailingSlash","replaceFn","match","id","tag","buildTag","matchedText","indexOf","absoluteUrl","setAttr","push","text","toAnchorString","autolinkerMsg","join"],"mappings":";;;;;;;;;;AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,SAAO,EAAC,UAASC,CAAT,EAAW;AAACJ,iBAAa,GAACI,CAAd;AAAgB;AAArC,CAAnD,EAA0F,CAA1F;;AAA6F,IAAIC,wBAAJ;;AAA6BJ,MAAM,CAACC,IAAP,CAAY,gDAAZ,EAA6D;AAACC,SAAO,EAAC,UAASC,CAAT,EAAW;AAACC,4BAAwB,GAACD,CAAzB;AAA2B;AAAhD,CAA7D,EAA+G,CAA/G;AAA5IH,MAAM,CAACK,MAAP,CAAc;AAACC,iCAA+B,EAAC,YAAU;AAAC,WAAOA,+BAAP;AAAuC;AAAnF,CAAd;AAAoG,IAAIC,MAAJ;AAAWP,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACM,QAAM,EAAC,UAASJ,CAAT,EAAW;AAACI,UAAM,GAACJ,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAIK,MAAJ;AAAWR,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACO,QAAM,EAAC,UAASL,CAAT,EAAW;AAACK,UAAM,GAACL,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAIM,UAAJ;AAAeT,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAAC,aAAQ,UAASE,CAAT,EAAW;AAACM,cAAU,GAACN,CAAX;AAAa;AAAlC,CAAzB,EAA6D,CAA7D;AAAgE,IAAIO,YAAJ;AAAiBV,MAAM,CAACC,IAAP,CAAY,6BAAZ,EAA0C;AAACS,cAAY,EAAC,UAASP,CAAT,EAAW;AAACO,gBAAY,GAACP,CAAb;AAAe;AAAzC,CAA1C,EAAqF,CAArF;;AAK/U,IAAMG,+BAA+B,GAC3C;AAAA,MAAGK,KAAH,QAAGA,KAAH;AAAA,MAAaC,MAAb;;AAAA,SACA,UAACC,OAAD,EAAa;AAAA;;AACZ,QAAI,mBAACA,OAAO,CAACC,IAAT,0CAAC,cAAcC,IAAd,EAAD,CAAJ,EAA2B;AAC1B,aAAOF,OAAP;AACA;;AAED,QAAIG,QAAJ;AACA,QAAIC,WAAJ;;AACA,QAAIJ,OAAO,CAACK,MAAR,IAAkBL,OAAO,CAACK,MAAR,CAAeC,MAArC,EAA6C;AAC5CF,iBAAW,GAAG,IAAIG,MAAJ,OAAe,CAACP,OAAO,CAACK,MAAR,IAAkB,EAAnB,EAAuBG,GAAvB,CAA2B;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,eAAeZ,YAAY,CAACY,KAAD,CAA3B;AAAA,OAA3B,CAAf,QAAkF,GAAlF,CAAd;AACAN,cAAQ,GAAGH,OAAO,CAACC,IAAR,CAAaS,KAAb,CAAmBN,WAAnB,CAAX;AACA,KAHD,MAGO;AACND,cAAQ,GAAG,CAACH,OAAO,CAACC,IAAT,CAAX;AACA;;AAEDD,WAAO,CAACC,IAAR,GAAeE,QAAQ,CACrBK,GADa,CACT,UAACG,OAAD,EAAa;AACjB,UAAIP,WAAW,IAAIA,WAAW,CAACQ,IAAZ,CAAiBD,OAAjB,CAAnB,EAA8C;AAC7C,eAAOA,OAAP;AACA;;AAED,UAAME,cAAc,mCAChBd,MADgB;AAEnBD,aAAK,EAAE,KAFY;AAGnBgB,0BAAkB,EAAE,KAHD;AAInBC,iBAAS,EAAE,UAACC,KAAD,EAAW;AAAA;;AACrB,cAAMP,KAAK,WAASd,MAAM,CAACsB,EAAP,EAAT,QAAX;AACA,cAAMC,GAAG,GAAGF,KAAK,CAACG,QAAN,EAAZ;;AAEA,cAAI,CAACH,KAAK,CAACI,WAAN,CAAkBC,OAAlB,CAA0B3B,MAAM,CAAC4B,WAAP,EAA1B,CAAL,EAAsD;AACrDJ,eAAG,CAACK,OAAJ,CAAY,QAAZ,EAAsB,EAAtB;AACA;;AAEDvB,iBAAO,CAACK,MAAR,sBAAiBL,OAAO,CAACK,MAAzB,6DAAmC,EAAnC;AACAL,iBAAO,CAACK,MAAR,CAAemB,IAAf,CAAoB;AACnBf,iBAAK,EAALA,KADmB;AAEnBgB,gBAAI,EAAEP,GAAG,CAACQ,cAAJ;AAFa,WAApB;AAIA,iBAAOjB,KAAP;AACA;AAlBkB,QAApB;;AAqBA,UAAMkB,aAAa,GAAG/B,UAAU,CAACR,IAAX,CAAgBuB,OAAhB,EAAyBE,cAAzB,CAAtB;AAEAA,oBAAc,CAACf,KAAf,GAAuBA,KAAvB;AAEA,aAAOA,KAAK,GAAGF,UAAU,CAACR,IAAX,CAAgBuC,aAAhB,EAA+Bd,cAA/B,CAAH,GAAoDc,aAAhE;AACA,KAhCa,EAiCbC,IAjCa,CAiCR,EAjCQ,CAAf;AAmCA,WAAO5B,OAAP;AACA,GAnDD;AAAA,CADM,C","file":"dynamic/app/autolinker/client/client.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport Autolinker from 'autolinker';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nexport const createAutolinkerMessageRenderer =\n\t({ phone, ...config }) =>\n\t(message) => {\n\t\tif (!message.html?.trim()) {\n\t\t\treturn message;\n\t\t}\n\n\t\tlet msgParts;\n\t\tlet regexTokens;\n\t\tif (message.tokens && message.tokens.length) {\n\t\t\tregexTokens = new RegExp(`(${(message.tokens || []).map(({ token }) => escapeRegExp(token))})`, 'g');\n\t\t\tmsgParts = message.html.split(regexTokens);\n\t\t} else {\n\t\t\tmsgParts = [message.html];\n\t\t}\n\n\t\tmessage.html = msgParts\n\t\t\t.map((msgPart) => {\n\t\t\t\tif (regexTokens && regexTokens.test(msgPart)) {\n\t\t\t\t\treturn msgPart;\n\t\t\t\t}\n\n\t\t\t\tconst muttableConfig = {\n\t\t\t\t\t...config,\n\t\t\t\t\tphone: false,\n\t\t\t\t\tstripTrailingSlash: false,\n\t\t\t\t\treplaceFn: (match) => {\n\t\t\t\t\t\tconst token = `=!=${Random.id()}=!=`;\n\t\t\t\t\t\tconst tag = match.buildTag();\n\n\t\t\t\t\t\tif (~match.matchedText.indexOf(Meteor.absoluteUrl())) {\n\t\t\t\t\t\t\ttag.setAttr('target', '');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmessage.tokens = message.tokens ?? [];\n\t\t\t\t\t\tmessage.tokens.push({\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\ttext: tag.toAnchorString(),\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn token;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst autolinkerMsg = Autolinker.link(msgPart, muttableConfig);\n\n\t\t\t\tmuttableConfig.phone = phone;\n\n\t\t\t\treturn phone ? Autolinker.link(autolinkerMsg, muttableConfig) : autolinkerMsg;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn message;\n\t};\n"]}
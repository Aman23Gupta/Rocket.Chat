{"version":3,"sources":["meteor://ðŸ’»app/definition/ITeam.ts"],"names":[],"mappings":";;;;;;;;AAKA,MAAM,CAAN,OAAY;AAAA,WAGX;AAAA;AAAA;AAHW,CAAZ;AAAA,IAAY,SAAZ;;AAAA,WAAY,SAAZ,EAAqB;AACpB;AACA;AACA,CAHD,EAAY,SAAS,sBAAT,SAAS,qBAArB,E","file":"dynamic/definition/ITeam.ts","sourcesContent":["import { SortOptionObject, FilterQuery, SchemaMember } from 'mongodb';\n\nimport { IRocketChatRecord } from './IRocketChatRecord';\nimport { IUser } from './IUser';\n\nexport enum TEAM_TYPE {\n\tPUBLIC = 0,\n\tPRIVATE = 1,\n}\n\nexport type SortType = -1 | 1;\n\nexport interface ITeam extends IRocketChatRecord {\n\tname: string;\n\ttype: TEAM_TYPE;\n\troomId: string;\n\tcreatedBy: Pick<IUser, '_id' | 'username'>;\n\tcreatedAt: Date;\n}\n\nexport interface ITeamMember extends IRocketChatRecord {\n\tteamId: string;\n\tuserId: string;\n\troles?: Array<string>;\n\tcreatedBy: Pick<IUser, '_id' | 'username'>;\n\tcreatedAt: Date;\n}\n\n// TODO move this definition to a more broader file\nexport interface IPaginationOptions {\n\toffset: number;\n\tcount: number;\n}\n\n// TODO move this definition to a more broader file\nexport interface IQueryOptions<T> {\n\tsort?: SortOptionObject<T>;\n\tquery?: FilterQuery<T>;\n\tfields?: SchemaMember<T, number | boolean>;\n}\n\n// TODO move this definition to a more broader file\nexport interface IRecordsWithTotal<T> {\n\trecords: Array<T>;\n\ttotal: number;\n}\n\nexport interface ITeamStatData {\n\tteamId: string;\n\tmainRoom: string;\n\ttotalRooms: number;\n\ttotalMessages: number;\n\ttotalPublicRooms: number;\n\ttotalPrivateRooms: number;\n\ttotalDefaultRooms: number;\n\ttotalMembers: number;\n}\nexport interface ITeamStats {\n\ttotalTeams: number;\n\tteamStats: Array<ITeamStatData>;\n}\n"]}
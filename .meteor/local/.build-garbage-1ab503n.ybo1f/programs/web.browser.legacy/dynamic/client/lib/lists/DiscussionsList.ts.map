{"version":3,"sources":["meteor://ðŸ’»app/client/lib/lists/DiscussionsList.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAAS,MAAc,KAAd,CAAoB,oCAApB,EAAkD;AAAA;AAAA;AAAA;AAAA,CAAlD,EAAkD,CAAlD;;AAAkD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3D,OAAO,MAAP,CAAS;AAAA,iBAAoB;AAAA;AAA8B;AAAlD,CAAT;AAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAY3D,IAAM,yBAAyB,GAAG,UAAC,OAAD,EAAoB,GAApB;AAAA,SACjC,OAAO,CAAC,GAAR,KAAgB,GAAhB,IAAuB,UAAU,OADA;AAAA,CAAlC;;AAGA,IAAM,wBAAwB,GAAG,UAAC,iBAAD,EAAuC,KAAvC;AAAA,SAAkE,KAAK,CAAC,IAAN,CAAW,iBAAiB,CAAC,GAA7B,CAAlE;AAAA,CAAjC;;IAEa,e;;;AACZ,2BAA2B,QAA3B,EAA2D;AAAA;;AAC1D;AAD0D,UAAhC,QAAgC;AAAhC;AAAgC;AAE1D;;;;SAMM,a;AAAA,2BAAc,OAAd,EAA6C;AACnD,WAAK,QAAL,GAAgB,OAAhB;AACA,WAAK,KAAL;AACA;;;;;SAES,M;AAAA,oBAAO,OAAP,EAAwB;AACjC,UAAQ,GAAR,GAAgB,KAAK,QAArB,CAAQ,GAAR;;AAEA,UAAI,CAAC,yBAAyB,CAAC,OAAD,EAAU,GAAV,CAA9B,EAA8C;AAC7C,eAAO,KAAP;AACA;;AAED,UAAI,KAAK,QAAL,CAAc,IAAlB,EAAwB;AACvB,YAAM,KAAK,GAAG,IAAI,MAAJ,CAAW,YAAY,CAAC,KAAK,QAAL,CAAc,IAAf,CAAvB,EAA6C,GAA7C,CAAd;;AACA,YAAI,CAAC,wBAAwB,CAAC,OAAD,EAAU,KAAV,CAA7B,EAA+C;AAC9C,iBAAO,KAAP;AACA;AACD;;AAED,aAAO,IAAP;AACA;;;;;SAES,O;AAAA,qBAAQ,CAAR,EAAqB,CAArB,EAAgC;AAAA;;AACzC,aAAO,WAAC,CAAC,CAAC,GAAH,2CAAU,CAAC,CAAC,EAAZ,EAAgB,OAAhB,KAA4B,WAAC,CAAC,CAAC,GAAH,2CAAU,CAAC,CAAC,EAAZ,EAAgB,OAAhB,EAAnC;AACA;;;;;;;SA5BD,YAAkB;AACjB,aAAO,KAAK,QAAZ;AACA;;;;EAPmC,W","file":"dynamic/client/lib/lists/DiscussionsList.ts","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport type { IMessage } from '../../../definition/IMessage';\nimport { MessageList } from './MessageList';\n\ntype DiscussionMessage = Omit<IMessage, 'drid'> & Required<Pick<IMessage, 'drid'>>;\n\nexport type DiscussionsListOptions = {\n\trid: IMessage['rid'];\n\ttext?: string;\n};\n\nconst isDiscussionMessageInRoom = (message: IMessage, rid: IMessage['rid']): message is DiscussionMessage =>\n\tmessage.rid === rid && 'drid' in message;\n\nconst isDiscussionTextMatching = (discussionMessage: DiscussionMessage, regex: RegExp): boolean => regex.test(discussionMessage.msg);\n\nexport class DiscussionsList extends MessageList {\n\tpublic constructor(private _options: DiscussionsListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): DiscussionsListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: DiscussionsListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IMessage): boolean {\n\t\tconst { rid } = this._options;\n\n\t\tif (!isDiscussionMessageInRoom(message, rid)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._options.text) {\n\t\t\tconst regex = new RegExp(escapeRegExp(this._options.text), 'i');\n\t\t\tif (!isDiscussionTextMatching(message, regex)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected compare(a: IMessage, b: IMessage): number {\n\t\treturn (b.tlm ?? b.ts).getTime() - (a.tlm ?? a.ts).getTime();\n\t}\n}\n"]}
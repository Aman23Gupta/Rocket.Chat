{"version":3,"sources":["meteor://ðŸ’»app/client/lib/minimongo/query.ts"],"names":[],"mappings":"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","file":"dynamic/client/lib/minimongo/query.ts","sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { compareBSONValues, getBSONType } from './bson';\nimport { equals, flatSome, isObject, some } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport { BSONType, FieldExpression, Query } from './types';\n\nconst isArrayOfFields = <T>(values: unknown[]): values is T[] =>\n\tvalues.every((value) => ['number', 'string', 'symbol'].includes(typeof value));\n\nconst $in = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tlet index: Record<T, T> | null = null;\n\tif (isArrayOfFields<T>(operand)) {\n\t\tindex = {} as Record<T, T>;\n\t\tfor (const operandElement of operand) {\n\t\t\tindex[operandElement] = operandElement;\n\t\t}\n\t}\n\n\treturn (value: T): boolean =>\n\t\tsome(value, (x) => {\n\t\t\tif (typeof x === 'string' && index !== null) {\n\t\t\t\treturn !!index[x];\n\t\t\t}\n\n\t\t\treturn operand.some((operandElement) => equals(operandElement, x));\n\t\t});\n};\n\nconst $nin = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tconst isIn = $in(operand, undefined);\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !isIn(value);\n\t};\n};\n\nconst $all =\n\t<T>(operand: T[], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn operand.every((operandElement) => value.some((valueElement) => equals(operandElement, valueElement)));\n\t};\n\nconst $lt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) < 0);\n\nconst $lte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) <= 0);\n\nconst $gt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) > 0);\n\nconst $gte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) >= 0);\n\nconst $ne =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\t!some(value, (x) => equals(x, operand));\n\nconst $exists =\n\t<T>(operand: boolean, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\toperand === (value !== undefined);\n\nconst $mod =\n\t<T>([divisor, remainder]: [number, number], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => Number(x) % divisor === remainder);\n\nconst $size =\n\t<T>(operand: number, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tArray.isArray(value) && operand === value.length;\n\nconst $type =\n\t<T>(operand: BSONType, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => getBSONType(x) === operand);\n\t};\n\nconst $regex = <T>(operand: string | RegExp, options: string): ((value: T) => boolean) => {\n\tlet regex: RegExp;\n\n\tif (options !== undefined) {\n\t\tconst regexSource = operand instanceof RegExp ? operand.source : operand;\n\t\tregex = new RegExp(regexSource, options);\n\t} else if (!(operand instanceof RegExp)) {\n\t\tregex = new RegExp(operand);\n\t}\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n};\n\nconst $elemMatch = <T>(operand: Query<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileDocumentSelector(operand);\n\n\treturn (value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn value.some((x) => matcher(x));\n\t};\n};\n\nconst $not = <T>(operand: FieldExpression<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileValueSelector(operand);\n\treturn (value: T): boolean => !matcher(value);\n};\n\nconst dummyOperator =\n\t<T>(_operand: unknown, _options: undefined): ((value: T) => boolean) =>\n\t(_value: T): boolean =>\n\t\ttrue;\n\nconst $options = dummyOperator;\nconst $near = dummyOperator;\nconst $geoIntersects = dummyOperator;\n\nconst valueOperators = {\n\t$in,\n\t$nin,\n\t$all,\n\t$lt,\n\t$lte,\n\t$gt,\n\t$gte,\n\t$ne,\n\t$exists,\n\t$mod,\n\t$size,\n\t$type,\n\t$regex,\n\t$elemMatch,\n\t$not,\n\t$options,\n\t$near,\n\t$geoIntersects,\n} as const;\n\nconst $and = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => f(doc));\n};\n\nconst $or = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.some((f) => f(doc));\n};\n\nconst $nor = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => !f(doc));\n};\n\nconst $where = <T>(selectorValue: string | Function): ((doc: T) => boolean) => {\n\tconst fn = selectorValue instanceof Function ? selectorValue : Function(`return ${selectorValue}`);\n\treturn (doc: T): boolean => !!fn.call(doc);\n};\n\nconst logicalOperators = {\n\t$and,\n\t$or,\n\t$nor,\n\t$where,\n} as const;\n\nconst isValueOperator = (operator: string): operator is keyof typeof valueOperators => operator in valueOperators;\n\nconst isLogicalOperator = (operator: string): operator is keyof typeof logicalOperators => operator in logicalOperators;\n\nconst hasValueOperators = <T>(valueSelector: FieldExpression<T>): boolean =>\n\tObject.keys(valueSelector).every((key) => key.slice(0, 1) === '$');\n\nconst compileUndefinedOrNullSelector =\n\t<T>(): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === undefined || x === null);\n\nconst compilePrimitiveSelector =\n\t<T>(primitive: T) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === primitive);\n\nconst compileRegexSelector =\n\t<T>(regex: RegExp) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n\nconst compileArraySelector =\n\t<T>(expected: T) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn some(value, (x) => equals(expected, x));\n\t};\n\nconst compileValueOperatorsSelector = <T>(expression: FieldExpression<T>): ((value: T) => boolean) => {\n\tconst operatorFunctions: ((value: T) => boolean)[] = [];\n\tfor (const operator of Object.keys(expression) as (keyof FieldExpression<T>)[]) {\n\t\tif (!isValueOperator(operator)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst operand = expression[operator];\n\t\tconst operation = valueOperators[operator] as unknown as (operand: unknown, options: unknown) => (value: T) => boolean;\n\t\toperatorFunctions.push(operation(operand, expression.$options));\n\t}\n\treturn (value: T): boolean => operatorFunctions.every((f) => f(value));\n};\n\nconst compileValueSelector = <T>(valueSelector: FieldExpression<T>[keyof FieldExpression<T>]): ((value: T) => boolean) => {\n\tif (valueSelector === undefined || valueSelector === null) {\n\t\treturn compileUndefinedOrNullSelector();\n\t}\n\n\tif (!isObject(valueSelector)) {\n\t\treturn compilePrimitiveSelector(valueSelector as T);\n\t}\n\n\tif (valueSelector instanceof RegExp) {\n\t\treturn compileRegexSelector(valueSelector);\n\t}\n\n\tif (Array.isArray(valueSelector)) {\n\t\treturn compileArraySelector(valueSelector as unknown as T);\n\t}\n\n\tif (hasValueOperators<T>(valueSelector)) {\n\t\treturn compileValueOperatorsSelector(valueSelector);\n\t}\n\n\treturn (value: T): boolean => flatSome(value, (x) => equals(valueSelector, x as unknown as object));\n};\n\nexport const compileDocumentSelector = <T>(docSelector: Query<T> | FieldExpression<T>['$where'][]): ((doc: T) => boolean) => {\n\tconst perKeySelectors = Object.entries(docSelector).map(([key, subSelector]) => {\n\t\tif (subSelector === undefined) {\n\t\t\treturn (): boolean => true;\n\t\t}\n\n\t\tif (isLogicalOperator(key)) {\n\t\t\tswitch (key) {\n\t\t\t\tcase '$and':\n\t\t\t\t\treturn $and(subSelector);\n\n\t\t\t\tcase '$or':\n\t\t\t\t\treturn $or(subSelector);\n\n\t\t\t\tcase '$nor':\n\t\t\t\t\treturn $nor(subSelector);\n\n\t\t\t\tcase '$where':\n\t\t\t\t\treturn $where(subSelector);\n\t\t\t}\n\t\t}\n\n\t\tconst lookUpByIndex = createLookupFunction(key);\n\t\tconst valueSelectorFunc = compileValueSelector(subSelector);\n\t\treturn (doc: T): boolean => {\n\t\t\tconst branchValues = lookUpByIndex(doc);\n\t\t\treturn branchValues.some(valueSelectorFunc);\n\t\t};\n\t});\n\n\treturn (doc: T): boolean => perKeySelectors.every((f) => f(doc));\n};\n"]}
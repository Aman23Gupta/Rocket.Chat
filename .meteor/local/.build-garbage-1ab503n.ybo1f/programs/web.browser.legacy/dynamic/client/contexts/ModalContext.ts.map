{"version":3,"sources":["meteor://ðŸ’»app/client/contexts/ModalContext.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,cAAe,cAAuB;AAAA,WAAM,YAAN;AAAc,GAApD;AAAoD;AAAA;AAAA,GAApD;AAAoD;AAAA;AAAA;AAApD,CAAT;AAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQtD,IAAM,YAAY,gBAAG,aAAa,CACxC,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB;AACpB,UAAQ,EAAE;AAAA,WAAM,SAAN;AAAA;AADU,CAArB,CADwC,CAAlC;;AAMA,IAAM,QAAQ,GAAG;AAAA,SAAyB,UAAU,CAAC,YAAD,CAAnC;AAAA,CAAjB;;AAEA,IAAM,WAAW,GAAG;AAAA,SAAqC,UAAU,CAAC,YAAD,CAAV,CAAyB,QAA9D;AAAA,CAApB,C","file":"dynamic/client/contexts/ModalContext.ts","sourcesContent":["import { createContext, useContext, ReactNode } from 'react';\n\nimport { modal } from '../../app/ui-utils/client';\n\ntype ModalContextValue = typeof modal & {\n\tsetModal: (modal: ReactNode) => void;\n};\n\nexport const ModalContext = createContext<ModalContextValue>(\n\tObject.assign(modal, {\n\t\tsetModal: () => undefined,\n\t}),\n);\n\nexport const useModal = (): ModalContextValue => useContext(ModalContext);\n\nexport const useSetModal = (): ((modal?: ReactNode) => void) => useContext(ModalContext).setModal;\n"]}
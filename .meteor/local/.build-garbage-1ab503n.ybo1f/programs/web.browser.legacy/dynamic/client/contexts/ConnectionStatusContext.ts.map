{"version":3,"sources":["meteor://ðŸ’»app/client/contexts/ConnectionStatusContext.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,yBAA2B,cAAa;AAAC;AAAA,GAAzC;AAAyC;AAAA;AAAA;AAAzC,CAAT;AAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU3C,IAAM,uBAAuB,gBAAG,aAAa,CAA+B;AAClF,WAAS,EAAE,IADuE;AAElF,QAAM,EAAE,WAF0E;AAGlF,WAAS,EAAE;AAAA,WAAM,SAAN;AAAA;AAHuE,CAA/B,CAA7C;;AAMA,IAAM,mBAAmB,GAAG;AAAA,SAAoC,UAAU,CAAC,uBAAD,CAA9C;AAAA,CAA5B,C","file":"dynamic/client/contexts/ConnectionStatusContext.ts","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport type ConnectionStatusContextValue = {\n\tconnected: boolean;\n\tretryCount?: number;\n\tretryTime?: number;\n\tstatus: 'connected' | 'connecting' | 'failed' | 'waiting' | 'offline';\n\treconnect: () => void;\n};\n\nexport const ConnectionStatusContext = createContext<ConnectionStatusContextValue>({\n\tconnected: true,\n\tstatus: 'connected',\n\treconnect: () => undefined,\n});\n\nexport const useConnectionStatus = (): ConnectionStatusContextValue => useContext(ConnectionStatusContext);\n"]}
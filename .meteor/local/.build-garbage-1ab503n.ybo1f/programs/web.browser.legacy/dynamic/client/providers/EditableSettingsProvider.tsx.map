{"version":3,"sources":["meteor://ðŸ’»app/client/providers/EditableSettingsProvider.tsx"],"names":[],"mappings":"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","file":"dynamic/client/providers/EditableSettingsProvider.tsx","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport { FilterQuery } from 'mongodb';\nimport React, { useEffect, useMemo, FunctionComponent, useRef, MutableRefObject } from 'react';\n\nimport { SettingId, GroupId, ISetting, TabId } from '../../definition/ISetting';\nimport { EditableSettingsContext, IEditableSetting, EditableSettingsContextValue } from '../contexts/EditableSettingsContext';\nimport { useSettings, SettingsContextQuery } from '../contexts/SettingsContext';\nimport { createReactiveSubscriptionFactory } from './createReactiveSubscriptionFactory';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\treadonly query: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider: FunctionComponent<EditableSettingsProviderProps> = ({ children, query = defaultQuery }) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<IEditableSetting>>(null) as MutableRefObject<Mongo.Collection<IEditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<IEditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterQuery<ISetting> | FilterQuery<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<IEditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): IEditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<IEditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n"]}
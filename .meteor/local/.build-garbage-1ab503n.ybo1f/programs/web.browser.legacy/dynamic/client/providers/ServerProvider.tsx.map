{"version":3,"sources":["meteor://ðŸ’»app/client/providers/ServerProvider.tsx"],"names":[],"mappings":"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","file":"dynamic/client/providers/ServerProvider.tsx","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React, { FC } from 'react';\n\nimport { Info as info, APIClient } from '../../app/utils/client';\nimport { Serialized } from '../../definition/Serialized';\nimport { Method, PathFor, MatchPathPattern, OperationParams, OperationResult } from '../../definition/rest';\nimport { ServerContext, ServerMethodName, ServerMethodParameters, ServerMethodReturn } from '../contexts/ServerContext';\n\nconst absoluteUrl = (path: string): string => Meteor.absoluteUrl(path);\n\nconst callMethod = <MethodName extends ServerMethodName>(\n\tmethodName: MethodName,\n\t...args: ServerMethodParameters<MethodName>\n): Promise<ServerMethodReturn<MethodName>> =>\n\tnew Promise((resolve, reject) => {\n\t\tMeteor.call(methodName, ...args, (error: Error, result: ServerMethodReturn<MethodName>) => {\n\t\t\tif (error) {\n\t\t\t\treject(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(result);\n\t\t});\n\t});\n\nconst callEndpoint = <TMethod extends Method, TPath extends PathFor<TMethod>>(\n\tmethod: TMethod,\n\tpath: TPath,\n\tparams: Serialized<OperationParams<TMethod, MatchPathPattern<TPath>>>,\n): Promise<Serialized<OperationResult<TMethod, MatchPathPattern<TPath>>>> => {\n\tconst api = path[0] === '/' ? APIClient : APIClient.v1;\n\tconst endpointPath = path[0] === '/' ? path.slice(1) : path;\n\n\tswitch (method) {\n\t\tcase 'GET':\n\t\t\treturn api.get(endpointPath, params);\n\n\t\tcase 'POST':\n\t\t\treturn api.post(endpointPath, {}, params);\n\n\t\tcase 'DELETE':\n\t\t\treturn api.delete(endpointPath, params);\n\n\t\tdefault:\n\t\t\tthrow new Error('Invalid HTTP method');\n\t}\n};\n\nconst uploadToEndpoint = (endpoint: string, params: any, formData: any): Promise<void> => {\n\tif (endpoint[0] === '/') {\n\t\treturn APIClient.upload(endpoint.slice(1), params, formData).promise;\n\t}\n\n\treturn APIClient.v1.upload(endpoint, params, formData).promise;\n};\n\nconst getStream = (streamName: string, options: {} = {}): (<T>(eventName: string, callback: (data: T) => void) => () => void) => {\n\tconst streamer = Meteor.StreamerCentral.instances[streamName]\n\t\t? Meteor.StreamerCentral.instances[streamName]\n\t\t: new Meteor.Streamer(streamName, options);\n\n\treturn (eventName, callback): (() => void) => {\n\t\tstreamer.on(eventName, callback);\n\t\treturn (): void => {\n\t\t\tstreamer.removeListener(eventName, callback);\n\t\t};\n\t};\n};\n\nconst contextValue = {\n\tinfo,\n\tabsoluteUrl,\n\tcallMethod,\n\tcallEndpoint,\n\tuploadToEndpoint,\n\tgetStream,\n};\n\nconst ServerProvider: FC = ({ children }) => <ServerContext.Provider children={children} value={contextValue} />;\n\nexport default ServerProvider;\n"]}
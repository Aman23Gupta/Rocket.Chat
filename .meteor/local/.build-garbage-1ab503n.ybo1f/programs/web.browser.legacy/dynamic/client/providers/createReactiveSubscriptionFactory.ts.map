{"version":3,"sources":["meteor://ðŸ’»app/client/providers/createReactiveSubscriptionFactory.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,mCAAgC;AAAA;AAAA;AAAhC,CAAT;AAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOlC,IAAM,iCAAiC,GAC7C,UAAI,uBAAJ;AAAA,SACA,YAAoC;AAAA,sCAAhC,IAAgC;AAAhC,UAAgC;AAAA;;AACnC,QAAM,mBAAmB,GAAG;AAAA,aAAS,uBAAuB,MAAvB,SAA2B,IAA3B,CAAT;AAAA,KAA5B;;AAEA,QAAM,SAAS,GAAG,IAAI,GAAJ,EAAlB;AAEA,QAAI,YAAY,GAAG,mBAAmB,EAAtC;AAEA,QAAI,WAAJ;AACA,QAAM,OAAO,GAAG,UAAU,CAAC,YAAK;AAC/B,iBAAW,GAAG,OAAO,CAAC,OAAR,CAAgB,YAAK;AAClC,oBAAY,GAAG,mBAAmB,EAAlC;AACA,iBAAS,CAAC,OAAV,CAAkB,UAAC,QAAD,EAAa;AAC9B,kBAAQ;AACR,SAFD;AAGA,OALa,CAAd;AAMA,KAPyB,EAOvB,CAPuB,CAA1B;AASA,WAAO;AACN,qBAAe,EAAE;AAAA,eAAS,YAAT;AAAA,OADX;AAEN,eAAS,EAAE,UAAC,QAAD,EAA0B;AACpC,iBAAS,CAAC,GAAV,CAAc,QAAd;AAEA,eAAO,YAAW;AACjB,sBAAY,CAAC,OAAD,CAAZ;AAEA,mBAAS,CAAC,MAAV,CAAiB,QAAjB;;AAEA,cAAI,SAAS,CAAC,IAAV,KAAmB,CAAvB,EAA0B;AAAA;;AACzB,uCAAW,UAAX,oDAAa,IAAb;AACA;AACD,SARD;AASA;AAdK,KAAP;AAgBA,GAlCD;AAAA,CADM,C","file":"dynamic/client/providers/createReactiveSubscriptionFactory.ts","sourcesContent":["import { Tracker } from 'meteor/tracker';\nimport { Subscription, Unsubscribe } from 'use-subscription';\n\ninterface ISubscriptionFactory<T> {\n\t(...args: any[]): Subscription<T>;\n}\n\nexport const createReactiveSubscriptionFactory =\n\t<T>(computeCurrentValueWith: (...args: any[]) => T): ISubscriptionFactory<T> =>\n\t(...args: any[]): Subscription<T> => {\n\t\tconst computeCurrentValue = (): T => computeCurrentValueWith(...args);\n\n\t\tconst callbacks = new Set<Unsubscribe>();\n\n\t\tlet currentValue = computeCurrentValue();\n\n\t\tlet computation: Tracker.Computation | undefined;\n\t\tconst timeout = setTimeout(() => {\n\t\t\tcomputation = Tracker.autorun(() => {\n\t\t\t\tcurrentValue = computeCurrentValue();\n\t\t\t\tcallbacks.forEach((callback) => {\n\t\t\t\t\tcallback();\n\t\t\t\t});\n\t\t\t});\n\t\t}, 0);\n\n\t\treturn {\n\t\t\tgetCurrentValue: (): T => currentValue,\n\t\t\tsubscribe: (callback): Unsubscribe => {\n\t\t\t\tcallbacks.add(callback);\n\n\t\t\t\treturn (): void => {\n\t\t\t\t\tclearTimeout(timeout);\n\n\t\t\t\t\tcallbacks.delete(callback);\n\n\t\t\t\t\tif (callbacks.size === 0) {\n\t\t\t\t\t\tcomputation?.stop();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t};\n"]}
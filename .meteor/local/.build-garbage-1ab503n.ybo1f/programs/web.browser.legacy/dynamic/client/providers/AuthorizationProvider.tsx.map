{"version":3,"sources":["meteor://ðŸ’»app/client/providers/AuthorizationProvider.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAS,MAAQ,KAAR,CAAc,eAAd,EAA8B;AAAA;AAAA;AAAA;AAAA,CAA9B,EAA8B,CAA9B;AAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASvC,IAAM,YAAY,GAAG;AACpB,iBAAe,EAAE,iCAAiC,CAAC,UAAC,UAAD,EAAa,KAAb;AAAA,WAAuB,aAAa,CAAC,UAAD,EAAa,KAAb,CAApC;AAAA,GAAD,CAD9B;AAEpB,2BAAyB,EAAE,iCAAiC,CAAC,UAAC,WAAD,EAAc,KAAd;AAAA,WAAwB,uBAAuB,CAAC,WAAD,EAAc,KAAd,CAA/C;AAAA,GAAD,CAFxC;AAGpB,qBAAmB,EAAE,iCAAiC,CAAC,UAAC,WAAD,EAAc,KAAd;AAAA,WAAwB,gBAAgB,CAAC,WAAD,EAAc,KAAd,CAAxC;AAAA,GAAD,CAHlC;AAIpB,WAAS,EAAE,iCAAiC,CAAC,UAAC,IAAD;AAAA,WAAU,OAAO,CAAC,MAAM,CAAC,MAAP,EAAD,EAAkB,IAAlB,CAAjB;AAAA,GAAD,CAJxB;AAKpB,WAAS,EAAE,IAAI,SAAJ;AALS,CAArB;;AAQA,IAAM,qBAAqB,GAAO,gBAAiB;AAAA,MAAd,QAAc,QAAd,QAAc;AAClD,MAAM,KAAK,GAAG,gBAAgB,CAC7B,WAAW,CACV;AAAA,WACC,KAAK,CAAC,IAAN,GACE,KADF,GAEE,MAFF,CAES,UAAC,GAAD,EAAM,GAAN,EAAa;AACpB,SAAG,CAAC,GAAG,CAAC,GAAL,CAAH,GAAe,GAAf;AACA,aAAO,GAAP;AACA,KALF,EAKI,EALJ,CADD;AAAA,GADU,EAQV,EARU,CADkB,CAA9B;AAaA,WAAS,CAAC,YAAK;AACd,gBAAY,CAAC,SAAb,CAAuB,KAAvB,GAA+B,KAA/B;AACA,gBAAY,CAAC,SAAb,CAAuB,IAAvB,CAA4B,QAA5B,EAAsC,KAAtC;AACA,GAHQ,EAGN,CAAC,KAAD,CAHM,CAAT;AAKA,sBAAO,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,YAAQ,EAAE,QAAzC;AAAmD,SAAK,EAAE;AAA1D,IAAP;AACA,CApBD;;AAjBA,OAAO,aAAP,CAuCe,qBAvCf,E","file":"dynamic/client/providers/AuthorizationProvider.tsx","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React, { FC, useCallback, useEffect } from 'react';\n\nimport { hasPermission, hasAtLeastOnePermission, hasAllPermission, hasRole } from '../../app/authorization/client';\nimport { Roles } from '../../app/models/client/models/Roles';\nimport { AuthorizationContext, RoleStore } from '../contexts/AuthorizationContext';\nimport { useReactiveValue } from '../hooks/useReactiveValue';\nimport { createReactiveSubscriptionFactory } from './createReactiveSubscriptionFactory';\n\nconst contextValue = {\n\tqueryPermission: createReactiveSubscriptionFactory((permission, scope) => hasPermission(permission, scope)),\n\tqueryAtLeastOnePermission: createReactiveSubscriptionFactory((permissions, scope) => hasAtLeastOnePermission(permissions, scope)),\n\tqueryAllPermissions: createReactiveSubscriptionFactory((permissions, scope) => hasAllPermission(permissions, scope)),\n\tqueryRole: createReactiveSubscriptionFactory((role) => hasRole(Meteor.userId(), role)),\n\troleStore: new RoleStore(),\n};\n\nconst AuthorizationProvider: FC = ({ children }) => {\n\tconst roles = useReactiveValue(\n\t\tuseCallback(\n\t\t\t() =>\n\t\t\t\tRoles.find()\n\t\t\t\t\t.fetch()\n\t\t\t\t\t.reduce((ret, obj) => {\n\t\t\t\t\t\tret[obj._id] = obj;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}, {}),\n\t\t\t[],\n\t\t),\n\t);\n\n\tuseEffect(() => {\n\t\tcontextValue.roleStore.roles = roles;\n\t\tcontextValue.roleStore.emit('change', roles);\n\t}, [roles]);\n\n\treturn <AuthorizationContext.Provider children={children} value={contextValue} />;\n};\n\nexport default AuthorizationProvider;\n"]}
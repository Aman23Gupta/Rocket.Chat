{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/actions/Search.tsx"],"names":[],"mappings":";;;;;;;;AAAA;;AAAS,MAAS,KAAT,CAAe,gCAAf,EAAuC;AAAA;AAAA;AAAA;AAAA,CAAvC,EAAuC,CAAvC;;AAAuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAS,MAAS,KAAT,CAAe,uBAAf,EAAuC;AAAA;AAAA;AAAA;AAAA,CAAvC,EAAuC,CAAvC;AAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAShD,IAAM,MAAM,GAAG,UAAC,KAAD,EAAqC;AACnD,kBAAoC,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAO,UAAP;AAAA,MAAmB,aAAnB;;AAEA,MAAM,GAAG,GAAG,MAAM,CAAc,IAAd,CAAlB;AACA,MAAM,iBAAiB,GAAG,kBAAkB,CAAC,YAAK;AACjD,iBAAa,CAAC,KAAD,CAAb;AACA,GAF2C,CAA5C;AAIA,iBAAe,CAAC,CAAC,GAAD,CAAD,EAAQ,iBAAR,CAAf;AAEA,MAAM,UAAU,GAAG,kBAAkB,CAAC,YAAK;AAC1C,iBAAa,CAAC,IAAD,CAAb;AACA,GAFoC,CAArC;AAIA,WAAS,CAAC,YAAK;AACd,QAAM,WAAW,GAAG,QAAQ,CAAC,MAAD,EAAS;AACpC,gBAAU,UAAC,KAAD,EAAU;AACnB,aAAK,CAAC,cAAN;AACA,kBAAU;AACV,OAJmC;AAKpC,gBAAU,UAAC,KAAD,EAAU;AACnB,aAAK,CAAC,cAAN;AACA,kBAAU;AACV;AARmC,KAAT,CAA5B;AAWA,WAAO,YAAW;AACjB,iBAAW;AACX,KAFD;AAGA,GAfQ,EAeN,CAAC,UAAD,CAfM,CAAT;AAiBA,sBACC,uDACC,oBAAC,OAAD,CAAS,MAAT,CAAgB,MAAhB;AAAuB,QAAI,EAAC,WAA5B;AAAwC,WAAO,EAAE;AAAjD,KAAiE,KAAjE,EADD,EAEE,UAAU,iBAAI,oBAAC,UAAD;AAAY,OAAG,EAAE,GAAjB;AAAsB,WAAO,EAAE;AAA/B,IAFhB,CADD;AAMA,CArCD;;AATA,OAAO,aAAP,CAgDe,MAhDf,E","file":"dynamic/client/sidebar/header/actions/Search.tsx","sourcesContent":["import { Sidebar } from '@rocket.chat/fuselage';\nimport { useMutableCallback, useOutsideClick } from '@rocket.chat/fuselage-hooks';\nimport React, { useState, useEffect, useRef, ReactElement, ComponentProps } from 'react';\nimport tinykeys from 'tinykeys';\n\nimport SearchList from '../../search/SearchList';\n\ntype SearchProps = Omit<ComponentProps<typeof Sidebar.TopBar.Action>, 'icon'>;\n\nconst Search = (props: SearchProps): ReactElement => {\n\tconst [searchOpen, setSearchOpen] = useState(false);\n\n\tconst ref = useRef<HTMLElement>(null);\n\tconst handleCloseSearch = useMutableCallback(() => {\n\t\tsetSearchOpen(false);\n\t});\n\n\tuseOutsideClick([ref], handleCloseSearch);\n\n\tconst openSearch = useMutableCallback(() => {\n\t\tsetSearchOpen(true);\n\t});\n\n\tuseEffect(() => {\n\t\tconst unsubscribe = tinykeys(window, {\n\t\t\t'$mod+K': (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\topenSearch();\n\t\t\t},\n\t\t\t'$mod+P': (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\topenSearch();\n\t\t\t},\n\t\t});\n\n\t\treturn (): void => {\n\t\t\tunsubscribe();\n\t\t};\n\t}, [openSearch]);\n\n\treturn (\n\t\t<>\n\t\t\t<Sidebar.TopBar.Action icon='magnifier' onClick={openSearch} {...props} />\n\t\t\t{searchOpen && <SearchList ref={ref} onClose={handleCloseSearch} />}\n\t\t</>\n\t);\n};\n\nexport default Search;\n"]}
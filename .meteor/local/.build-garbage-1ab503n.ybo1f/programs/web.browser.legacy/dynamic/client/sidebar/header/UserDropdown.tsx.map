{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/UserDropdown.tsx"],"names":[],"mappings":"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","file":"dynamic/client/sidebar/header/UserDropdown.tsx","sourcesContent":["import { Box, Margins, Option } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport React, { ReactElement } from 'react';\n\nimport { AccountBox, SideNav } from '../../../app/ui-utils/client';\nimport { userStatus } from '../../../app/user-status/client';\nimport { IUser } from '../../../definition/IUser';\nimport { UserStatus as UserStatusEnum } from '../../../definition/UserStatus';\nimport { ValueOf } from '../../../definition/utils';\nimport { callbacks } from '../../../lib/callbacks';\nimport MarkdownText from '../../components/MarkdownText';\nimport { UserStatus } from '../../components/UserStatus';\nimport UserAvatar from '../../components/avatar/UserAvatar';\nimport { useAtLeastOnePermission } from '../../contexts/AuthorizationContext';\nimport { useLayout } from '../../contexts/LayoutContext';\nimport { useRoute } from '../../contexts/RouterContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { useLogout } from '../../contexts/UserContext';\nimport { useReactiveValue } from '../../hooks/useReactiveValue';\nimport { useUserDisplayName } from '../../hooks/useUserDisplayName';\nimport { imperativeModal } from '../../lib/imperativeModal';\nimport EditStatusModal from './EditStatusModal';\n\nconst ADMIN_PERMISSIONS = [\n\t'view-logs',\n\t'manage-emoji',\n\t'manage-sounds',\n\t'view-statistics',\n\t'manage-oauth-apps',\n\t'view-privileged-setting',\n\t'manage-selected-settings',\n\t'view-room-administration',\n\t'view-user-administration',\n\t'access-setting-permissions',\n\t'manage-outgoing-integrations',\n\t'manage-incoming-integrations',\n\t'manage-own-outgoing-integrations',\n\t'manage-own-incoming-integrations',\n\t'view-engagement-dashboard',\n];\n\nconst isDefaultStatus = (id: string): boolean => (Object.values(UserStatusEnum) as string[]).includes(id);\n\nconst isDefaultStatusName = (_name: string, id: string): _name is UserStatusEnum => isDefaultStatus(id);\n\nconst setStatus = (status: typeof userStatus.list['']): void => {\n\tAccountBox.setStatus(status.statusType, !isDefaultStatus(status.id) ? status.name : '');\n\tcallbacks.run('userStatusManuallySet', status);\n};\n\nconst getItems = (): ReturnType<typeof AccountBox.getItems> => AccountBox.getItems();\n\nconst translateStatusName = (t: ReturnType<typeof useTranslation>, status: typeof userStatus.list['']): string => {\n\tif (isDefaultStatusName(status.name, status.id)) {\n\t\treturn t(status.name);\n\t}\n\n\treturn status.name;\n};\n\ntype UserDropdownProps = {\n\tuser: Pick<IUser, 'username' | 'name' | 'avatarETag' | 'status' | 'statusText'>;\n\tonClose: () => void;\n};\n\nconst UserDropdown = ({ user, onClose }: UserDropdownProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst accountRoute = useRoute('account');\n\tconst adminRoute = useRoute('admin');\n\tconst logout = useLogout();\n\tconst { sidebar, isMobile } = useLayout();\n\n\tconst { username, avatarETag, status, statusText } = user;\n\n\tconst displayName = useUserDisplayName(user);\n\n\tconst filterInvisibleStatus = !useSetting('Accounts_AllowInvisibleStatusOption')\n\t\t? (status: ValueOf<typeof userStatus['list']>): boolean => status.name !== 'invisible'\n\t\t: (): boolean => true;\n\n\tconst showAdmin = useAtLeastOnePermission(ADMIN_PERMISSIONS);\n\n\tconst handleCustomStatus = useMutableCallback((e) => {\n\t\te.preventDefault();\n\t\timperativeModal.open({\n\t\t\tcomponent: EditStatusModal,\n\t\t\tprops: { userStatus: status, userStatusText: statusText, onClose: imperativeModal.close },\n\t\t});\n\t\tonClose();\n\t});\n\n\tconst handleMyAccount = useMutableCallback(() => {\n\t\taccountRoute.push({});\n\t\tonClose();\n\t});\n\n\tconst handleAdmin = useMutableCallback(() => {\n\t\tadminRoute.push({ group: 'info' });\n\t\tsidebar.toggle();\n\t\tonClose();\n\t});\n\n\tconst handleLogout = useMutableCallback(() => {\n\t\tlogout();\n\t\tonClose();\n\t});\n\n\tconst accountBoxItems = useReactiveValue(getItems);\n\n\treturn (\n\t\t<Box display='flex' flexDirection='column' w={!isMobile ? '244px' : undefined}>\n\t\t\t<Box display='flex' flexDirection='row'>\n\t\t\t\t<Box mie='x4' mis='x16'>\n\t\t\t\t\t<UserAvatar size='x36' username={username || ''} etag={avatarETag} />\n\t\t\t\t</Box>\n\t\t\t\t<Box\n\t\t\t\t\tmie='x8'\n\t\t\t\t\tmis='x4'\n\t\t\t\t\tdisplay='flex'\n\t\t\t\t\toverflow='hidden'\n\t\t\t\t\tflexDirection='column'\n\t\t\t\t\tfontScale='p2'\n\t\t\t\t\tmb='neg-x4'\n\t\t\t\t\tflexGrow={1}\n\t\t\t\t\tflexShrink={1}\n\t\t\t\t>\n\t\t\t\t\t<Box withTruncatedText w='full' display='flex' alignItems='center' flexDirection='row'>\n\t\t\t\t\t\t<Margins inline='x4'>\n\t\t\t\t\t\t\t<UserStatus status={status} />\n\t\t\t\t\t\t\t<Box is='span' withTruncatedText display='inline-block'>\n\t\t\t\t\t\t\t\t{displayName}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Margins>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box color='hint'>\n\t\t\t\t\t\t<MarkdownText\n\t\t\t\t\t\t\twithTruncatedText\n\t\t\t\t\t\t\tparseEmoji={true}\n\t\t\t\t\t\t\tcontent={statusText || t(status || 'offline')}\n\t\t\t\t\t\t\tvariant='inlineWithoutBreaks'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Option.Divider />\n\t\t\t<Box pi='x16' fontScale='c1' textTransform='uppercase'>\n\t\t\t\t{t('Status')}\n\t\t\t</Box>\n\t\t\t{Object.values(userStatus.list)\n\t\t\t\t.filter(filterInvisibleStatus)\n\t\t\t\t.map((status, i) => {\n\t\t\t\t\tconst name = status.localizeName ? translateStatusName(t, status) : status.name;\n\t\t\t\t\tconst modifier = status.statusType || user.status;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Option\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\tsetStatus(status);\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option.Column>\n\t\t\t\t\t\t\t\t<UserStatus status={modifier} />\n\t\t\t\t\t\t\t</Option.Column>\n\t\t\t\t\t\t\t<Option.Content>\n\t\t\t\t\t\t\t\t<MarkdownText content={name} parseEmoji={true} variant='inline' />\n\t\t\t\t\t\t\t</Option.Content>\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t<Option icon='emoji' label={`${t('Custom_Status')}...`} onClick={handleCustomStatus}></Option>\n\n\t\t\t{(accountBoxItems.length || showAdmin) && (\n\t\t\t\t<>\n\t\t\t\t\t<Option.Divider />\n\t\t\t\t\t{showAdmin && <Option icon={'customize'} label={t('Administration')} onClick={handleAdmin}></Option>}\n\t\t\t\t\t{accountBoxItems.map((item, i) => {\n\t\t\t\t\t\tconst action = (): void => {\n\t\t\t\t\t\t\tif (item.href) {\n\t\t\t\t\t\t\t\tFlowRouter.go(item.href);\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (item.sideNav) {\n\t\t\t\t\t\t\t\tSideNav.setFlex(item.sideNav);\n\t\t\t\t\t\t\t\tSideNav.openFlex();\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn <Option icon={item.icon} label={t(item.name)} onClick={item.href || item.sideNav ? action : undefined} key={i}></Option>;\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t<Option.Divider />\n\t\t\t<Option icon='user' label={t('My_Account')} onClick={handleMyAccount}></Option>\n\t\t\t<Option icon='sign-out' label={t('Logout')} onClick={handleLogout}></Option>\n\t\t</Box>\n\t);\n};\n\nexport default UserDropdown;\n"]}
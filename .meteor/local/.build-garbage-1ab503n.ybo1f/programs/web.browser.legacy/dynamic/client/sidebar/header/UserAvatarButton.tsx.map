{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/UserAvatarButton.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAAoB,YAAwB,mDAAxB,EAAyB;AAAA;AAAA;AAAA;AAAA,CAAzB,EAAyB,CAAzB;AAApB;AAAO,MAAO,KAAP,CAAa,wBAAb,EAAsC;AAAA;AAAA;AAAA;AAAA,CAAtC,EAAsC,CAAtC;AAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAY7C,IAAM,gBAAgB;AAAG,WAAS,gBAAT,GAAyB;AACjD,QAAM,IAAI,GAAG,OAAO,EAApB;;AACA,eAKI,IAAI,IAAI;AACX,SAAG,EAAE,EADM;AAEX,cAAQ,EAAE,WAFC;AAGX,YAAM,EAAE,QAHG;AAIX,gBAAU,EAAE;AAJD,KALZ;AAAA,2BACC,MADD;AAAA,QACC,MADD,4BACU,CAAC,IAAD,GAAQ,QAAR,GAAmB,SAD7B;AAAA,QAEC,QAFD,QAEC,QAFD;AAAA,QAGC,UAHD,QAGC,UAHD;AAAA,QAIC,UAJD,QAIC,UAJD,CAFiD,CAcjD;;;AAEA,QAAM,SAAS,GAAG,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,MAAM,GAAG,MAAM,CAAC,IAAD,CAArB;;AACA,gCAA8B,qBAAqB,CAAC;AAAE,eAAS,EAAT,SAAF;AAAa,YAAM,EAAN;AAAb,KAAD,CAAnD;AAAA,QAAQ,SAAR,yBAAQ,SAAR;AAAA,QAAmB,MAAnB,yBAAmB,MAAnB;;AAEA,wBACC,uDACC,oBAAC,GAAD;AACC,cAAQ,EAAC,UADV;AAEC,SAAG,EAAE,SAFN;AAGC,aAAO,EAAE;AAAA,eAAY,MAAM,EAAlB;AAAA,OAHV;AAIC,eAAS,EAAE,GAAF,gHAJV;AAOC,iBAAQ;AAPT,oBASC,oBAAC,UAAD;AAAY,UAAI,EAAC,KAAjB;AAAuB,cAAQ,EAAE,QAAjC;AAA2C,UAAI,EAAE;AAAjD,MATD,eAUC,oBAAC,GAAD;AACC,eAAS,EAAE,GAAF,uIADV;AAKC,oBAAc,EAAC,QALhB;AAMC,gBAAU,EAAC,QANZ;AAOC,aAAO,EAAC,MAPT;AAQC,cAAQ,EAAC,QARV;AASC,UAAI,EAAE,EATP;AAUC,iBAAW,EAAC,IAVb;AAWC,cAAQ,EAAC,UAXV;AAYC,QAAE,EAAC,aAZJ;AAaC,iBAAW,EAAC,aAbb;AAcC,kBAAY,EAAC,MAdd;AAeC,SAAG,EAAC,QAfL;AAgBC,SAAG,EAAC;AAhBL,oBAkBC,oBAAC,UAAD;AAAY,WAAK,MAAjB;AAAkB,YAAM,EAAE,MAA1B;AAAkC,gBAAU,EAAE;AAA9C,MAlBD,CAVD,CADD,EAgCE,IAAI,IACJ,SADA,iBAEA,YAAY,eACX,oBAAC,QAAD;AAAU,eAAS,EAAE,SAArB;AAAgC,SAAG,EAAE;AAArC,oBACC,oBAAC,YAAD;AAAc,UAAI,EAAE,IAApB;AAA0B,aAAO,EAAE;AAAA,eAAY,MAAM,CAAC,KAAD,CAAlB;AAAA;AAAnC,MADD,CADW,EAIX,QAAQ,CAAC,IAJE,CAlCd,CADD;AA2CA;;AA/DqB,SAAY,gBAAZ;AAAA,GAAtB;;AAZA,OAAO,aAAP,eA6Ee,IAAI,CAAC,gBAAD,CA7EnB,E","file":"dynamic/client/sidebar/header/UserAvatarButton.tsx","sourcesContent":["import { css } from '@rocket.chat/css-in-js';\nimport { Box, Dropdown } from '@rocket.chat/fuselage';\nimport React, { memo, useRef, ReactElement } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { IUser } from '../../../definition/IUser';\nimport { UserStatus } from '../../components/UserStatus';\nimport UserAvatar from '../../components/avatar/UserAvatar';\nimport { useUser } from '../../contexts/UserContext';\nimport UserDropdown from './UserDropdown';\nimport { useDropdownVisibility } from './hooks/useDropdownVisibility';\n\nconst UserAvatarButton = function UserAvatarButton(): ReactElement {\n\tconst user = useUser() as Required<IUser> | undefined;\n\tconst {\n\t\tstatus = !user ? 'online' : 'offline',\n\t\tusername,\n\t\tavatarETag,\n\t\tstatusText,\n\t} = user || {\n\t\t_id: '',\n\t\tusername: 'Anonymous',\n\t\tstatus: 'online',\n\t\tstatusText: '',\n\t};\n\n\t// const allowAnonymousRead = useSetting('Accounts_AllowAnonymousRead');\n\n\tconst reference = useRef(null);\n\tconst target = useRef(null);\n\tconst { isVisible, toggle } = useDropdownVisibility({ reference, target });\n\n\treturn (\n\t\t<>\n\t\t\t<Box\n\t\t\t\tposition='relative'\n\t\t\t\tref={reference}\n\t\t\t\tonClick={(): void => toggle()}\n\t\t\t\tclassName={css`\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t`}\n\t\t\t\tdata-qa='sidebar-avatar-button'\n\t\t\t>\n\t\t\t\t<UserAvatar size='x24' username={username} etag={avatarETag} />\n\t\t\t\t<Box\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tbottom: 0;\n\t\t\t\t\t\tright: 0;\n\t\t\t\t\t`}\n\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\talignItems='center'\n\t\t\t\t\tdisplay='flex'\n\t\t\t\t\toverflow='hidden'\n\t\t\t\t\tsize={12}\n\t\t\t\t\tborderWidth='x2'\n\t\t\t\t\tposition='absolute'\n\t\t\t\t\tbg='neutral-200'\n\t\t\t\t\tborderColor='neutral-200'\n\t\t\t\t\tborderRadius='full'\n\t\t\t\t\tmie='neg-x2'\n\t\t\t\t\tmbe='neg-x2'\n\t\t\t\t>\n\t\t\t\t\t<UserStatus small status={status} statusText={statusText} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t{user &&\n\t\t\t\tisVisible &&\n\t\t\t\tcreatePortal(\n\t\t\t\t\t<Dropdown reference={reference} ref={target}>\n\t\t\t\t\t\t<UserDropdown user={user} onClose={(): void => toggle(false)} />\n\t\t\t\t\t</Dropdown>,\n\t\t\t\t\tdocument.body,\n\t\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default memo(UserAvatarButton);\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/EditStatusModal.tsx"],"names":[],"mappings":"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","file":"dynamic/client/sidebar/header/EditStatusModal.tsx","sourcesContent":["import { Field, TextInput, FieldGroup, Modal, Icon, ButtonGroup, Button } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { ReactElement, useState, ChangeEvent, useCallback } from 'react';\n\nimport { IUser } from '../../../definition/IUser';\nimport { USER_STATUS_TEXT_MAX_LENGTH } from '../../components/UserStatus';\nimport UserStatusMenu from '../../components/UserStatusMenu';\nimport { useMethod } from '../../contexts/ServerContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\n\ntype EditStatusModalProps = {\n\tonClose: () => void;\n\tuserStatus: IUser['status'];\n\tuserStatusText: IUser['statusText'];\n};\n\nconst EditStatusModal = ({ onClose, userStatus, userStatusText }: EditStatusModalProps): ReactElement => {\n\tconst allowUserStatusMessageChange = useSetting('Accounts_AllowUserStatusMessageChange');\n\tconst setUserStatus = useMethod('setUserStatus');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst t = useTranslation();\n\tconst [statusText, setStatusText] = useState(userStatusText);\n\tconst [statusType, setStatusType] = useState(userStatus);\n\tconst [statusTextError, setStatusTextError] = useState<string | undefined>();\n\n\tconst handleStatusText = useMutableCallback((e: ChangeEvent<HTMLInputElement>): void => {\n\t\tsetStatusText(e.currentTarget.value);\n\n\t\tif (statusText && statusText.length > USER_STATUS_TEXT_MAX_LENGTH) {\n\t\t\treturn setStatusTextError(t('Max_length_is', USER_STATUS_TEXT_MAX_LENGTH));\n\t\t}\n\n\t\treturn setStatusTextError(undefined);\n\t});\n\n\tconst handleStatusType = (type: IUser['status']): void => setStatusType(type);\n\n\tconst handleSaveStatus = useCallback(async () => {\n\t\ttry {\n\t\t\tawait setUserStatus(statusType, statusText);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('StatusMessage_Changed_Successfully') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\n\t\tonClose();\n\t}, [dispatchToastMessage, statusType, statusText, setUserStatus, onClose, t]);\n\n\treturn (\n\t\t<Modal>\n\t\t\t<Modal.Header>\n\t\t\t\t<Icon size={24} name='info' />\n\t\t\t\t<Modal.Title>{t('Edit_Status')}</Modal.Title>\n\t\t\t\t<Modal.Close onClick={onClose} />\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Content fontScale='p2'>\n\t\t\t\t<FieldGroup>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Label>{t('StatusMessage')}</Field.Label>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\terror={statusTextError}\n\t\t\t\t\t\t\t\tdisabled={!allowUserStatusMessageChange}\n\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\tvalue={statusText}\n\t\t\t\t\t\t\t\tonChange={handleStatusText}\n\t\t\t\t\t\t\t\tplaceholder={t('StatusMessage_Placeholder')}\n\t\t\t\t\t\t\t\taddon={<UserStatusMenu margin='neg-x2' onChange={handleStatusType} initialStatus={statusType} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t{!allowUserStatusMessageChange && <Field.Hint>{t('StatusMessage_Change_Disabled')}</Field.Hint>}\n\t\t\t\t\t\t<Field.Error>{statusTextError}</Field.Error>\n\t\t\t\t\t</Field>\n\t\t\t\t</FieldGroup>\n\t\t\t</Modal.Content>\n\t\t\t<Modal.Footer>\n\t\t\t\t<ButtonGroup align='end' flexGrow={1} maxWidth='full'>\n\t\t\t\t\t<Button ghost onClick={onClose}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button primary onClick={handleSaveStatus} disabled={!!statusTextError}>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\nexport default EditStatusModal;\n"]}
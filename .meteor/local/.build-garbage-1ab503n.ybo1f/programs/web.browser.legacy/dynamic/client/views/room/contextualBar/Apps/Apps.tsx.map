{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Apps/Apps.tsx"],"names":[],"mappings":";;;;;;;;AACA,iBAAS,MAAT,EAAsB,GAAtB,EAAsB,MAAtB;AAAiC,MAAE,CAAM,IAAR,CAAU,uBAAV,EAAgB;AAAA,aAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA;AAAxB,CAAhB,EAAwC,CAAxC;AAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBzE,IAAM,IAAI,GAAG;AAAA,MAAG,IAAH,QAAG,IAAH;AAAA,MAAS,QAAT,QAAS,QAAT;AAAA,MAAmB,OAAnB,QAAmB,OAAnB;AAAA,MAA4B,QAA5B,QAA4B,QAA5B;AAAA,MAAsC,OAAtC,QAAsC,OAAtC;AAAA,sBACZ,uDACC,oBAAC,WAAD,CAAa,MAAb,qBACC,oBAAC,MAAD;AAAQ,OAAG,EAAE,MAAM,gBAAc,OAAO,CAAC,EAAtB;AAAnB,IADD,eAEC,oBAAC,WAAD,CAAa,IAAb,QAAmB,WAAW,CAAC,IAAZ,CAAiB,IAAI,CAAC,KAAtB,CAAnB,CAFD,EAGE,OAAO,iBAAI,oBAAC,WAAD,CAAa,KAAb;AAAmB,WAAO,EAAE;AAA5B,IAHb,CADD,eAMC,oBAAC,WAAD,CAAa,iBAAb,qBACC,oBAAC,GAAD;AAAK,MAAE,EAAC,MAAR;AAAe,UAAM,EAAC,MAAtB;AAA6B,UAAM,EAAC,GAApC;AAAwC,YAAQ,EAAE;AAAlD,kBACC,oBAAC,cAAD;AAAgB,UAAM,EAAE,UAAxB;AAAoC,UAAM,EAAE,IAAI,CAAC;AAAjD,IADD,CADD,CAND,eAWC,oBAAC,WAAD,CAAa,MAAb,qBACC,oBAAC,WAAD;AAAa,SAAK,EAAC;AAAnB,KACE,IAAI,CAAC,KAAL,iBAAc,oBAAC,MAAD;AAAQ,WAAO,EAAE;AAAjB,KAA4B,WAAW,CAAC,IAAZ,CAAiB,IAAI,CAAC,KAAL,CAAW,IAA5B,CAA5B,CADhB,EAEE,IAAI,CAAC,MAAL,iBACA,oBAAC,MAAD;AAAQ,WAAO,MAAf;AAAgB,WAAO,EAAE;AAAzB,KACE,WAAW,CAAC,IAAZ,CAAiB,IAAI,CAAC,MAAL,CAAY,IAA7B,CADF,CAHF,CADD,CAXD,CADY;AAAA,CAAb;;AAhBA,OAAO,aAAP,CAyCe,IAzCf,E","file":"dynamic/client/views/room/contextualBar/Apps/Apps.tsx","sourcesContent":["import { IUIKitSurface } from '@rocket.chat/apps-engine/definition/uikit';\nimport { ButtonGroup, Button, Box, Avatar } from '@rocket.chat/fuselage';\nimport { UiKitComponent, UiKitModal } from '@rocket.chat/fuselage-ui-kit';\nimport React from 'react';\n\nimport { getURL } from '../../../../../app/utils/lib/getURL';\nimport VerticalBar from '../../../../components/VerticalBar';\nimport { modalParser } from '../../../blocks/ModalBlock';\n\ntype AppsProps = {\n\tview: IUIKitSurface;\n\tonSubmit: (e: any) => void;\n\tonCancel: (e: any) => Promise<void>;\n\tonClose: (e: any) => Promise<void>;\n\tappInfo: { name: string; id: string };\n};\n\nconst Apps = ({ view, onSubmit, onClose, onCancel, appInfo }: AppsProps): JSX.Element => (\n\t<>\n\t\t<VerticalBar.Header>\n\t\t\t<Avatar url={getURL(`/api/apps/${appInfo.id}/icon`)} />\n\t\t\t<VerticalBar.Text>{modalParser.text(view.title)}</VerticalBar.Text>\n\t\t\t{onClose && <VerticalBar.Close onClick={onClose} />}\n\t\t</VerticalBar.Header>\n\t\t<VerticalBar.ScrollableContent>\n\t\t\t<Box is='form' method='post' action='#' onSubmit={onSubmit}>\n\t\t\t\t<UiKitComponent render={UiKitModal} blocks={view.blocks} />\n\t\t\t</Box>\n\t\t</VerticalBar.ScrollableContent>\n\t\t<VerticalBar.Footer>\n\t\t\t<ButtonGroup align='end'>\n\t\t\t\t{view.close && <Button onClick={onCancel}>{modalParser.text(view.close.text)}</Button>}\n\t\t\t\t{view.submit && (\n\t\t\t\t\t<Button primary onClick={onSubmit}>\n\t\t\t\t\t\t{modalParser.text(view.submit.text)}\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</ButtonGroup>\n\t\t</VerticalBar.Footer>\n\t</>\n);\n\nexport default Apps;\n"]}
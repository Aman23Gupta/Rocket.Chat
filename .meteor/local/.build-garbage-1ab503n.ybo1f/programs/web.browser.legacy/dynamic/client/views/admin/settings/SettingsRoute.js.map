{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/SettingsRoute.js"],"names":["module","export","SettingsRoute","React","link","v","NotAuthorizedPage","useRouteParameter","useIsPrivilegedSettingsContext","EditableSettingsProvider","GroupSelector","hasPermission","groupId","exportDefault"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,eAAa,EAAC,YAAU;AAAC,WAAOA,aAAP;AAAqB;AAA/C,CAAd;AAAgE,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACF,SAAK,GAACE,CAAN;AAAQ;AAA7B,CAApB,EAAmD,CAAnD;AAAsD,IAAIC,iBAAJ;AAAsBN,MAAM,CAACI,IAAP,CAAY,uCAAZ,EAAoD;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,qBAAiB,GAACD,CAAlB;AAAoB;AAAzC,CAApD,EAA+F,CAA/F;AAAkG,IAAIE,iBAAJ;AAAsBP,MAAM,CAACI,IAAP,CAAY,iCAAZ,EAA8C;AAACG,mBAAiB,EAAC,UAASF,CAAT,EAAW;AAACE,qBAAiB,GAACF,CAAlB;AAAoB;AAAnD,CAA9C,EAAmG,CAAnG;AAAsG,IAAIG,8BAAJ;AAAmCR,MAAM,CAACI,IAAP,CAAY,mCAAZ,EAAgD;AAACI,gCAA8B,EAAC,UAASH,CAAT,EAAW;AAACG,kCAA8B,GAACH,CAA/B;AAAiC;AAA7E,CAAhD,EAA+H,CAA/H;AAAkI,IAAII,wBAAJ;AAA6BT,MAAM,CAACI,IAAP,CAAY,6CAAZ,EAA0D;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACI,4BAAwB,GAACJ,CAAzB;AAA2B;AAAhD,CAA1D,EAA4G,CAA5G;AAA+G,IAAIK,aAAJ;AAAkBV,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA8B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACK,iBAAa,GAACL,CAAd;AAAgB;AAArC,CAA9B,EAAqE,CAArE;;AAQhrB,SAASH,aAAT,GAAyB;AAC/B,MAAMS,aAAa,GAAGH,8BAA8B,EAApD;AAEA,MAAMI,OAAO,GAAGL,iBAAiB,CAAC,OAAD,CAAjC;;AAEA,MAAI,CAACI,aAAL,EAAoB;AACnB,wBAAO,oBAAC,iBAAD,OAAP;AACA;;AAED,sBACC,oBAAC,wBAAD,qBACC,oBAAC,aAAD;AAAe,WAAO,EAAEC;AAAxB,IADD,CADD;AAKA;;AAtBDZ,MAAM,CAACa,aAAP,CAwBeX,aAxBf,E","file":"dynamic/client/views/admin/settings/SettingsRoute.js","sourcesContent":["import React from 'react';\n\nimport NotAuthorizedPage from '../../../components/NotAuthorizedPage';\nimport { useRouteParameter } from '../../../contexts/RouterContext';\nimport { useIsPrivilegedSettingsContext } from '../../../contexts/SettingsContext';\nimport EditableSettingsProvider from '../../../providers/EditableSettingsProvider';\nimport GroupSelector from './GroupSelector';\n\nexport function SettingsRoute() {\n\tconst hasPermission = useIsPrivilegedSettingsContext();\n\n\tconst groupId = useRouteParameter('group');\n\n\tif (!hasPermission) {\n\t\treturn <NotAuthorizedPage />;\n\t}\n\n\treturn (\n\t\t<EditableSettingsProvider>\n\t\t\t<GroupSelector groupId={groupId} />\n\t\t</EditableSettingsProvider>\n\t);\n}\n\nexport default SettingsRoute;\n"]}
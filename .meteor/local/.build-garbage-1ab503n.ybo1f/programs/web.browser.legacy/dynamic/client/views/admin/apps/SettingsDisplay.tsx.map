{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/apps/SettingsDisplay.tsx"],"names":[],"mappings":";;;;;;;;AACA;;AAAc,MAAS,KAAT,CAAe,sCAAf,EAAuC;AAAA;AAAA;AAAA;AAAA,CAAvC,EAAuC,CAAvC;AAAd,SAAO,OAAP;AAAc,MAAO,CAAE,IAAT,CAAS,uBAAT,EAAsC;AAAC;AAAA;AAAA,GAAD;AAAC;AAAA;AAAA;AAAD,CAAtC,EAAuC,CAAvC;AAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAerD,IAAM,eAAe,GAA6B,gBAAoD;AAAA,MAAjD,QAAiD,QAAjD,QAAiD;AAAA,MAAvC,oBAAuC,QAAvC,oBAAuC;AAAA,MAAjB,WAAiB,QAAjB,WAAiB;AACrG,MAAM,CAAC,GAAG,cAAc,EAAxB;AAEA,MAAM,mBAAmB,GAAG,IAAI,CAAC,SAAL,CAAe,QAAf,CAA5B;AAEA,MAAM,eAAe,GAAG,OAAO,CAAC,YAAK;AACpC,QAAM,QAAQ,GAAqC,IAAI,CAAC,KAAL,CAAW,mBAAX,CAAnD;AACA,WAAO,MAAM,CAAC,MAAP,CAAc,QAAd,EAAwB,MAAxB,CAA+B,UAAC,GAAD;AAAA;;AAAA,UAAQ,EAAR,SAAQ,EAAR;AAAA,UAAY,KAAZ,SAAY,KAAZ;AAAA,UAAmB,YAAnB,SAAmB,YAAnB;AAAA,6CAA4C,GAA5C,4CAAkD,EAAlD,IAAuD,KAAvD,aAAuD,KAAvD,cAAuD,KAAvD,GAAgE,YAAhE;AAAA,KAA/B,EAAgH,EAAhH,CAAP;AACA,GAH8B,EAG5B,CAAC,mBAAD,CAH4B,CAA/B;;AAKA,iBAAgD,OAAO,CAAC,eAAD,CAAvD;AAAA,MAAQ,MAAR,YAAQ,MAAR;AAAA,MAAgB,QAAhB,YAAgB,QAAhB;AAAA,MAA0B,iBAA1B,YAA0B,iBAA1B;;AACA,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAL,CAAe,MAAf,CAA1B;AAEA,WAAS,CAAC,YAAK;AACd,QAAM,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,iBAAX,CAAf;AACA,wBAAoB,CAAC,iBAAD,CAApB;AACA,eAAW,CAAC,OAAZ,GAAsB,MAAtB;AACA,GAJQ,EAIN,CAAC,iBAAD,EAAoB,iBAApB,EAAuC,oBAAvC,EAA6D,WAA7D,CAJM,CAAT;AAMA,sBACC,uDACC,oBAAC,OAAD,OADD,eAEC,oBAAC,GAAD;AAAK,WAAO,EAAC,MAAb;AAAoB,iBAAa,EAAC;AAAlC,kBACC,oBAAC,GAAD;AAAK,aAAS,EAAC,IAAf;AAAoB,MAAE,EAAC;AAAvB,KACE,CAAC,CAAC,UAAD,CADH,CADD,eAIC,oBAAC,oBAAD;AAAsB,YAAQ,EAAE,QAAhC;AAA0C,UAAM,EAAE,MAAlD;AAA0D,YAAQ,EAAE;AAApE,IAJD,CAFD,CADD;AAWA,CA9BD;;AAfA,OAAO,aAAP,CA+Ce,eA/Cf,E","file":"dynamic/client/views/admin/apps/SettingsDisplay.tsx","sourcesContent":["import { ISetting } from '@rocket.chat/apps-engine/definition/settings';\nimport { Box, Divider } from '@rocket.chat/fuselage';\nimport React, { FC, useMemo, useEffect, MutableRefObject } from 'react';\n\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useForm } from '../../../hooks/useForm';\nimport AppSettingsAssembler from './AppSettingsAssembler';\n\ntype SettingsDisplayProps = {\n\tsettings: {\n\t\t[id: string]: ISetting;\n\t};\n\tsetHasUnsavedChanges: (hasUnsavedChanges: boolean) => void;\n\tsettingsRef: MutableRefObject<Record<string, ISetting['value']>>;\n};\n\nconst SettingsDisplay: FC<SettingsDisplayProps> = ({ settings, setHasUnsavedChanges, settingsRef }) => {\n\tconst t = useTranslation();\n\n\tconst stringifiedSettings = JSON.stringify(settings);\n\n\tconst reducedSettings = useMemo(() => {\n\t\tconst settings: SettingsDisplayProps['settings'] = JSON.parse(stringifiedSettings);\n\t\treturn Object.values(settings).reduce((ret, { id, value, packageValue }) => ({ ...ret, [id]: value ?? packageValue }), {});\n\t}, [stringifiedSettings]);\n\n\tconst { values, handlers, hasUnsavedChanges } = useForm(reducedSettings);\n\tconst stringifiedValues = JSON.stringify(values);\n\n\tuseEffect(() => {\n\t\tconst values = JSON.parse(stringifiedValues);\n\t\tsetHasUnsavedChanges(hasUnsavedChanges);\n\t\tsettingsRef.current = values;\n\t}, [hasUnsavedChanges, stringifiedValues, setHasUnsavedChanges, settingsRef]);\n\n\treturn (\n\t\t<>\n\t\t\t<Divider />\n\t\t\t<Box display='flex' flexDirection='column'>\n\t\t\t\t<Box fontScale='h4' mb='x12'>\n\t\t\t\t\t{t('Settings')}\n\t\t\t\t</Box>\n\t\t\t\t<AppSettingsAssembler settings={settings} values={values} handlers={handlers} />\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default SettingsDisplay;\n"]}
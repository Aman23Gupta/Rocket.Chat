{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Header/Omnichannel/QuickActions/QuickActions.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAc,MAAa,KAAb,CAAmB,uBAAnB,EAA2C;AAAA;AAAA;AAAA;AAAA,CAA3C,EAA2C,CAA3C;AAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAazD,IAAM,YAAY,GAA0B,gBAAwB;AAAA,MAArB,IAAqB,QAArB,IAAqB;AAAA,MAAf,SAAe,QAAf,SAAe;AACnE,MAAM,CAAC,GAAG,cAAc,EAAxB;;AACA,yBAA0C,eAAe,CAAC,IAAD,CAAzD;AAAA,MAAQ,cAAR,oBAAQ,cAAR;AAAA,MAAwB,aAAxB,oBAAwB,aAAxB;;AAEA,sBACC,oBAAC,WAAD;AAAa,MAAE,EAAC,IAAhB;AAAqB,UAAM;AAA3B,KACE,cAAc,CAAC,GAAf,CAAmB,iBAAqD,KAArD,EAA8D;AAAA,QAA3D,EAA2D,SAA3D,EAA2D;AAAA,QAAvD,KAAuD,SAAvD,KAAuD;AAAA,QAAhD,IAAgD,SAAhD,IAAgD;AAAA,QAA1C,KAA0C,SAA1C,KAA0C;AAAA,6BAAnC,MAAmC;AAAA,QAAnC,MAAmC,6BAA1B,aAA0B;AACjF,QAAM,KAAK,GAAG;AACb,QAAE,EAAF,EADa;AAEb,UAAI,EAAJ,IAFa;AAGb,WAAK,EAAL,KAHa;AAIb,eAAS,CAAC,CAAC,KAAD,CAJG;AAKb,eAAS,EAAT,SALa;AAMb,WAAK,EAAL,KANa;AAOb,iBAAW,KAPE;AAQb,4BAAsB,KART;AASb,YAAM,EAAN,MATa;AAUb,aAAO;AAVM,KAAd;AAaA,wBAAO,oBAAC,MAAD,CAAQ,aAAR,EAA0B,KAA1B,CAAP;AACA,GAfA,CADF,CADD;AAoBA,CAxBD;;AAbA,OAAO,aAAP,eAuCe,IAAI,CAAC,YAAD,CAvCnB,E","file":"dynamic/client/views/room/Header/Omnichannel/QuickActions/QuickActions.tsx","sourcesContent":["import { Box, ButtonGroup } from '@rocket.chat/fuselage';\nimport React, { memo, FC, ComponentProps } from 'react';\n\nimport { IOmnichannelRoom } from '../../../../../../definition/IRoom';\nimport Header from '../../../../../components/Header';\nimport { useTranslation } from '../../../../../contexts/TranslationContext';\nimport { useQuickActions } from './hooks/useQuickActions';\n\ntype QuickActionsProps = {\n\troom: IOmnichannelRoom;\n\tclassName?: ComponentProps<typeof Box>['className'];\n};\n\nconst QuickActions: FC<QuickActionsProps> = ({ room, className }) => {\n\tconst t = useTranslation();\n\tconst { visibleActions, actionDefault } = useQuickActions(room);\n\n\treturn (\n\t\t<ButtonGroup mi='x4' medium>\n\t\t\t{visibleActions.map(({ id, color, icon, title, action = actionDefault }, index) => {\n\t\t\t\tconst props = {\n\t\t\t\t\tid,\n\t\t\t\t\ticon,\n\t\t\t\t\tcolor,\n\t\t\t\t\t'title': t(title),\n\t\t\t\t\tclassName,\n\t\t\t\t\tindex,\n\t\t\t\t\t'primary': false,\n\t\t\t\t\t'data-quick-actions': index,\n\t\t\t\t\taction,\n\t\t\t\t\t'key': id,\n\t\t\t\t};\n\n\t\t\t\treturn <Header.ToolBoxAction {...props} />;\n\t\t\t})}\n\t\t</ButtonGroup>\n\t);\n};\n\nexport default memo(QuickActions);\n"]}
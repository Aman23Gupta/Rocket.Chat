{"version":3,"sources":["meteor://ðŸ’»app/client/views/setupWizard/hooks/useRouteLock.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAAS,OAAiB,IAAjB,CAAmB,sCAAnB,EAAuD;AAAA;AAAA;AAAA;AAAA,CAAvD,EAAuD,CAAvD;AAAT,OAAO,MAAP,CAAS;AAAA,cAAiB,EAAE,YAAM;AAAA;AAAA;AAAzB,CAAT;AAAkC,IAA8B,iBAA9B;AAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQzD,IAAM,YAAY,GAAG,YAAc;AACzC,kBAA4B,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAO,MAAP;AAAA,MAAe,SAAf;;AACA,MAAM,gBAAgB,GAAG,UAAU,CAAC,mBAAD,CAAnC;AACA,MAAM,MAAM,GAAG,SAAS,EAAxB;AACA,MAAM,IAAI,GAAG,iBAAiB,CAAC,OAAO,EAAR,EAAY,GAAZ,CAA9B;AACA,MAAM,YAAY,GAAG,OAAO,CAAC,OAAD,CAA5B;AACA,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAD,CAA1B;AAEA,WAAS,CAAC,YAAK;AACd,QAAI,CAAC,gBAAL,EAAuB;AACtB;AACA;;AAED,QAAI,MAAM,IAAI,EAAC,IAAD,aAAC,IAAD,eAAC,IAAI,CAAE,MAAP,CAAd,EAA6B;AAC5B;AACA;;AAED,QAAM,UAAU,GAAG,gBAAgB,KAAK,WAAxC;AACA,QAAM,6BAA6B,GAAG,MAAM,IAAI,CAAC,IAAX,IAAmB,gBAAgB,KAAK,SAA9E;AACA,QAAM,2BAA2B,GAAG,CAAC,CAAC,IAAF,IAAU,CAAC,YAA/C;AAEA,QAAM,YAAY,GAAG,UAAU,IAAI,6BAAd,IAA+C,2BAApE;;AAEA,QAAI,YAAJ,EAAkB;AACjB,eAAS,CAAC,OAAV;AACA;AACA;;AAED,aAAS,CAAC,KAAD,CAAT;AACA,GArBQ,EAqBN,CAAC,SAAD,EAAY,gBAAZ,EAA8B,MAA9B,EAAsC,IAAtC,EAA4C,YAA5C,EAA0D,MAA1D,CArBM,CAAT;AAuBA,SAAO,MAAP;AACA,CAhCM,C","file":"dynamic/client/views/setupWizard/hooks/useRouteLock.ts","sourcesContent":["import { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { useEffect, useState } from 'react';\n\nimport { useRole } from '../../../contexts/AuthorizationContext';\nimport { useRoute } from '../../../contexts/RouterContext';\nimport { useSetting } from '../../../contexts/SettingsContext';\nimport { useUserId, useUser } from '../../../contexts/UserContext';\n\nexport const useRouteLock = (): boolean => {\n\tconst [locked, setLocked] = useState(true);\n\tconst setupWizardState = useSetting('Show_Setup_Wizard');\n\tconst userId = useUserId();\n\tconst user = useDebouncedValue(useUser(), 100);\n\tconst hasAdminRole = useRole('admin');\n\tconst homeRoute = useRoute('home');\n\n\tuseEffect(() => {\n\t\tif (!setupWizardState) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (userId && !user?.status) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isComplete = setupWizardState === 'completed';\n\t\tconst noUserLoggedInAndIsNotPending = locked && !user && setupWizardState !== 'pending';\n\t\tconst userIsLoggedInButIsNotAdmin = !!user && !hasAdminRole;\n\n\t\tconst mustRedirect = isComplete || noUserLoggedInAndIsNotPending || userIsLoggedInButIsNotAdmin;\n\n\t\tif (mustRedirect) {\n\t\t\thomeRoute.replace();\n\t\t\treturn;\n\t\t}\n\n\t\tsetLocked(false);\n\t}, [homeRoute, setupWizardState, userId, user, hasAdminRole, locked]);\n\n\treturn locked;\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/teams/CreateTeamModal/UsersInput.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/teams/CreateTeamModal/UsersInput.tsx","sourcesContent":["import { AutoComplete, Box, Option, Options, Chip, AutoCompleteProps } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport React, { FC, memo, useCallback, useMemo, useState } from 'react';\n\nimport UserAvatar from '../../../components/avatar/UserAvatar';\nimport { useEndpointData } from '../../../hooks/useEndpointData';\n\ntype UsersInputProps = {\n\tvalue: unknown[];\n\tonChange: (value: unknown, action: 'remove' | undefined) => void;\n};\n\ntype AutocompleteData = [AutoCompleteProps['options'], { [key: string]: string | undefined }];\n\nconst useUsersAutoComplete = (term: string): AutocompleteData => {\n\tconst params = useMemo(\n\t\t() => ({\n\t\t\tselector: JSON.stringify({ term }),\n\t\t}),\n\t\t[term],\n\t);\n\tconst { value: data } = useEndpointData('users.autocomplete', params);\n\n\treturn useMemo<AutocompleteData>(() => {\n\t\tif (!data) {\n\t\t\treturn [[], {}];\n\t\t}\n\n\t\tconst options =\n\t\t\tdata.items.map((user) => ({\n\t\t\t\tlabel: user.name ?? '',\n\t\t\t\tvalue: user._id ?? '',\n\t\t\t})) || [];\n\n\t\tconst labelData = Object.fromEntries(data.items.map((user) => [user._id, user.username]) || []);\n\n\t\treturn [options, labelData];\n\t}, [data]);\n};\n\nconst UsersInput: FC<UsersInputProps> = ({ onChange, ...props }) => {\n\tconst [filter, setFilter] = useState('');\n\tconst [options, labelData] = useUsersAutoComplete(useDebouncedValue(filter, 1000));\n\n\tconst onClickSelected = useCallback(\n\t\t(e) => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tonChange(e.currentTarget.value, 'remove');\n\t\t},\n\t\t[onChange],\n\t);\n\n\tconst renderSelected = useCallback<FC<{ value?: string[] }>>(\n\t\t({ value: selected }) => (\n\t\t\t<>\n\t\t\t\t{selected?.map((value) => (\n\t\t\t\t\t<Chip key={value} {...props} height='x20' value={value} onClick={onClickSelected} mie='x4'>\n\t\t\t\t\t\t<UserAvatar size='x20' username={labelData[value] as string} />\n\t\t\t\t\t\t<Box is='span' margin='none' mis='x4'>\n\t\t\t\t\t\t\t{labelData[value]}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Chip>\n\t\t\t\t))}\n\t\t\t</>\n\t\t),\n\t\t[onClickSelected, props, labelData],\n\t);\n\n\tconst renderItem = useCallback<FC<{ value: string }>>(\n\t\t({ value, ...props }) => (\n\t\t\t<Option key={value} {...props} avatar={<UserAvatar size={Options.AvatarSize} username={labelData[value] as string} />} />\n\t\t),\n\t\t[labelData],\n\t);\n\n\treturn (\n\t\t<AutoComplete\n\t\t\t{...props}\n\t\t\tfilter={filter}\n\t\t\toptions={options}\n\t\t\trenderSelected={renderSelected}\n\t\t\trenderItem={renderItem}\n\t\t\tsetFilter={setFilter}\n\t\t\tonChange={onChange}\n\t\t/>\n\t);\n};\n\nexport default memo(UsersInput);\n"]}
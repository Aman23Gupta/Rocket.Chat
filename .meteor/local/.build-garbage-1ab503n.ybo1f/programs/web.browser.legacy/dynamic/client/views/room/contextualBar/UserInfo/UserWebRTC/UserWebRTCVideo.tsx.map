{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCVideo.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAAoB,YAAwB,mDAAxB,EAAyB;AAAA;AAAA;AAAA;AAAA,CAAzB,EAAyB,CAAzB;AAApB;AAAO,MAAO,KAAP,CAAa,wBAAb,EAAsC;AAAA;AAAA;AAAA;AAAA,CAAtC,EAAsC,CAAtC;AAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa7C,IAAM,eAAe,GAAG,gBAAqF;AAAA,MAAlF,GAAkF,QAAlF,GAAkF;AAAA,MAA7E,KAA6E,QAA7E,KAA6E;AAAA,MAAtE,OAAsE,QAAtE,OAAsE;AAAA,MAA7D,MAA6D,QAA7D,MAA6D;AAAA,MAArD,WAAqD,QAArD,WAAqD;AAC5G,MAAM,WAAW,GAAG,MAAM,CAAmB,IAAnB,CAA1B;AAEA,MAAM,cAAc,GAAG,GAAH,8HAApB;AAKA,WAAS,CAAC,YAAK;AACd,QAAI,CAAC,WAAW,CAAC,OAAjB,EAA0B;AACzB;AACA;;AAED,QAAI,KAAJ,EAAW;AACV,iBAAW,CAAC,OAAZ,CAAoB,KAApB,GAA4B,IAA5B;AACA,iBAAW,CAAC,OAAZ,CAAoB,MAApB,GAA6B,CAA7B;AACA;;AAED,QAAI,GAAJ,EAAS;AACR,iBAAW,CAAC,OAAZ,CAAoB,SAApB,GAAgC,GAAhC;AACA;AACD,GAbQ,EAaN,CAAC,GAAD,EAAM,KAAN,CAbM,CAAT;AAeA,sBACC,oBAAC,GAAD;AACC,SAAK,EAAC,MADP;AAEC,aAAS,EAAE,WAAW,GAAG,OAAH,GAAa,MAFpC;AAGC,MAAE,EAAC,OAHJ;AAIC,OAAG,EAAE,WAJN;AAKC,YAAQ,MALT;AAMC,SAAK,EAAE,KANR;AAOC,aAAS,EAAE,OAAO,IAAI,CAAC,MAAZ,GAAqB,cAArB,GAAsC;AAPlD,IADD;AAWA,CAlCD;;AAbA,OAAO,aAAP,CAiDe,eAjDf,E","file":"dynamic/client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCVideo.tsx","sourcesContent":["import { css } from '@rocket.chat/css-in-js';\nimport { Box } from '@rocket.chat/fuselage';\nimport React, { ReactElement, useEffect, useRef } from 'react';\n\ntype UserWebRTCVideoProps = {\n\turl?: MediaStream | void;\n\tscreen?: boolean;\n\tmuted?: boolean;\n\townUser?: boolean;\n\tisMainVideo?: boolean;\n\tvideoEnabled: boolean;\n};\n\nconst UserWebRTCVideo = ({ url, muted, ownUser, screen, isMainVideo }: UserWebRTCVideoProps): ReactElement => {\n\tconst videoStream = useRef<HTMLVideoElement>(null);\n\n\tconst videoFlipStyle = css`\n\t\ttransform: scaleX(-1);\n\t\tfilter: FlipH;\n\t`;\n\n\tuseEffect(() => {\n\t\tif (!videoStream.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (muted) {\n\t\t\tvideoStream.current.muted = true;\n\t\t\tvideoStream.current.volume = 0;\n\t\t}\n\n\t\tif (url) {\n\t\t\tvideoStream.current.srcObject = url;\n\t\t}\n\t}, [url, muted]);\n\n\treturn (\n\t\t<Box\n\t\t\twidth='full'\n\t\t\tminHeight={isMainVideo ? '300px' : 'auto'}\n\t\t\tis='video'\n\t\t\tref={videoStream}\n\t\t\tautoPlay\n\t\t\tmuted={muted}\n\t\t\tclassName={ownUser && !screen ? videoFlipStyle : ''}\n\t\t/>\n\t);\n};\n\nexport default UserWebRTCVideo;\n"]}
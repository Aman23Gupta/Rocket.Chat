{"version":3,"sources":["meteor://ðŸ’»app/client/views/root/MainLayout/AuthenticationCheck.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAO,MAAkC,KAAlC,CAAwC,OAAxC,EAAgD;AAAA;AAAA;AAAA;AAAA,CAAhD,EAAgD,CAAhD;AAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQvD,IAAM,mBAAmB,GAAG,gBAAwD;AAAA,MAArD,QAAqD,QAArD,QAAqD;AACnF,MAAM,GAAG,GAAG,SAAS,EAArB;AACA,MAAM,kBAAkB,GAAG,UAAU,CAAC,6BAAD,CAArC;AACA,MAAM,UAAU,GAAG,UAAU,CAAC,YAAD,CAA7B;AAEA,MAAM,SAAS,GAAG,CAAC,GAAD,KAAS,kBAAkB,KAAK,IAAvB,IAA+B,UAAU,KAAK,IAAvD,CAAlB;;AAEA,MAAI,SAAJ,EAAe;AACd,wBAAO,oBAAC,SAAD,OAAP;AACA;;AAED,sBAAO,oBAAC,aAAD,QAAgB,QAAhB,CAAP;AACA,CAZD;;AARA,OAAO,aAAP,CAsBe,mBAtBf,E","file":"dynamic/client/views/root/MainLayout/AuthenticationCheck.tsx","sourcesContent":["import React, { ReactElement, ReactNode } from 'react';\n\nimport { useSession } from '../../../contexts/SessionContext';\nimport { useSetting } from '../../../contexts/SettingsContext';\nimport { useUserId } from '../../../contexts/UserContext';\nimport LoginPage from './LoginPage';\nimport UsernameCheck from './UsernameCheck';\n\nconst AuthenticationCheck = ({ children }: { children: ReactNode }): ReactElement => {\n\tconst uid = useUserId();\n\tconst allowAnonymousRead = useSetting('Accounts_AllowAnonymousRead');\n\tconst forceLogin = useSession('forceLogin');\n\n\tconst showLogin = !uid && (allowAnonymousRead !== true || forceLogin === true);\n\n\tif (showLogin) {\n\t\treturn <LoginPage />;\n\t}\n\n\treturn <UsernameCheck>{children}</UsernameCheck>;\n};\n\nexport default AuthenticationCheck;\n"]}
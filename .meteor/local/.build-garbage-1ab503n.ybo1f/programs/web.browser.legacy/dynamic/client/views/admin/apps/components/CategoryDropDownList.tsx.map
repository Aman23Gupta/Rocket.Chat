{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/apps/components/CategoryDropDownList.tsx"],"names":[],"mappings":";;;;;;;;AAAA,SAAO,QAAP,EAAc,MAAd,EAAwB,IAAxB;AAAwB,MAAQ,CAAI,IAAZ,CAAc,uBAAd,EAAoB;AAAA,KAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA;AAAxB,CAApB,EAA4C,CAA5C;AAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKpE,IAAM,oBAAoB;AAAkC,WAAS,oBAAT,OAAoD;AAAA,QAApB,MAAoB,QAApB,MAAoB;AAAA,QAAZ,UAAY,QAAZ,UAAY;AAC/G,wBACC,oBAAC,IAAD;AAAM,cAAQ,EAAC,MAAf;AAAsB,QAAE,EAAC,KAAzB;AAA+B,QAAE,EAAE,CAAnC;AAAsC,eAAS,EAAC,GAAhD;AAAoD,OAAC,EAAC,MAAtD;AAA6D,QAAE,EAAC,aAAhE;AAA8E,kBAAY,EAAC;AAA3F,OACE,MAAM,CAAC,GAAP,CAAW,UAAC,KAAD,EAAQ,KAAR;AAAA,0BACX,oBAAC,QAAD;AAAU,WAAG,EAAE;AAAf,SACE,KAAK,CAAC,KAAN,iBACA,oBAAC,GAAD;AAAK,UAAE,EAAC,KAAR;AAAc,WAAG,EAAC,IAAlB;AAAuB,WAAG,EAAC,IAA3B;AAAgC,iBAAS,EAAC,OAA1C;AAAkD,qBAAa,EAAC,WAAhE;AAA4E,aAAK,EAAC;AAAlF,SACE,KAAK,CAAC,KADR,CAFF,EAME,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAgB,UAAC,IAAD;AAAA,4BAChB,oBAAC,MAAD;AAAQ,aAAG,EAAE,IAAI,CAAC,EAAlB;AAA6B,eAAK,EAAE,IAAI,CAAC,KAAzC;AAA0D,iBAAO,EAAE;AAAA,mBAAY,UAAU,CAAC,IAAD,CAAtB;AAAA;AAAnE,wBACC,oBAAC,QAAD;AAAU,iBAAO,EAAE,IAAI,CAAC,OAAxB;AAAiC,kBAAQ,EAAE;AAAA,mBAAY,UAAU,CAAC,IAAD,CAAtB;AAAA;AAA3C,UADD,CADgB;AAAA,OAAhB,CANF,CADW;AAAA,KAAX,CADF,CADD;AAkBA;;AAnByB,SAA2C,oBAA3C;AAAA,GAA1B;;AALA,OAAO,aAAP,CA0Be,oBA1Bf,E","file":"dynamic/client/views/admin/apps/components/CategoryDropDownList.tsx","sourcesContent":["import { Box, CheckBox, Option, Tile } from '@rocket.chat/fuselage';\nimport React, { FC, Fragment } from 'react';\n\nimport { CategoryDropDownListProps } from '../definitions/CategoryDropdownDefinitions';\n\nconst CategoryDropDownList: FC<CategoryDropDownListProps> = function CategoryDropDownList({ groups, onSelected }) {\n\treturn (\n\t\t<Tile overflow='auto' pb='x12' pi={0} elevation='2' w='full' bg='alternative' borderRadius='x2'>\n\t\t\t{groups.map((group, index) => (\n\t\t\t\t<Fragment key={index}>\n\t\t\t\t\t{group.label && (\n\t\t\t\t\t\t<Box pi='x16' pbs='x8' pbe='x4' fontScale='micro' textTransform='uppercase' color='default'>\n\t\t\t\t\t\t\t{group.label}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t\t{group.items.map((item) => (\n\t\t\t\t\t\t<Option key={item.id} {...({ label: item.label } as any)} onClick={(): void => onSelected(item)}>\n\t\t\t\t\t\t\t<CheckBox checked={item.checked} onChange={(): void => onSelected(item)} />\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t))}\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t</Tile>\n\t);\n};\n\nexport default CategoryDropDownList;\n"]}
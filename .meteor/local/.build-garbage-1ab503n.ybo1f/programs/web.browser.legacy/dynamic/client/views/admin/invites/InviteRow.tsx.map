{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/invites/InviteRow.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/admin/invites/InviteRow.tsx","sourcesContent":["import { Button, Icon, Box } from '@rocket.chat/fuselage';\nimport { useMediaQuery } from '@rocket.chat/fuselage-hooks';\nimport React, { ReactElement, MouseEvent } from 'react';\n\nimport { IInvite } from '../../../../definition/IInvite';\nimport { GenericTableCell, GenericTableRow } from '../../../components/GenericTable';\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useFormatDateAndTime } from '../../../hooks/useFormatDateAndTime';\nimport { useTimeFromNow } from '../../../hooks/useTimeFromNow';\n\nconst isExpired = (expires: IInvite['expires']): boolean => {\n\tif (expires && expires.getTime() < new Date().getTime()) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\ntype InviteRowProps = Omit<IInvite, 'createdAt' | 'expires' | '_updatedAt'> & {\n\tonRemove: (removeInvite: () => void) => void;\n\t_updatedAt: string;\n\tcreatedAt: string;\n\texpires: string | null;\n};\n\nconst InviteRow = ({ _id, createdAt, expires, uses, maxUses, onRemove }: InviteRowProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst formatDateAndTime = useFormatDateAndTime();\n\tconst removeInvite = useEndpoint('DELETE', `removeInvite/${_id}`);\n\n\tconst getTimeFromNow = useTimeFromNow(false);\n\n\tconst daysToExpire = (expires: IInvite['expires']): string => {\n\t\tif (expires) {\n\t\t\tif (isExpired(expires)) {\n\t\t\t\treturn t('Expired');\n\t\t\t}\n\n\t\t\treturn getTimeFromNow(expires);\n\t\t}\n\n\t\treturn t('Never');\n\t};\n\n\tconst maxUsesLeft = (maxUses: IInvite['maxUses'], uses: IInvite['uses']): number | string => {\n\t\tif (maxUses > 0) {\n\t\t\tif (uses >= maxUses) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn maxUses - uses;\n\t\t}\n\n\t\treturn t('Unlimited');\n\t};\n\n\tconst handleRemoveButtonClick = async (event: MouseEvent<HTMLElement>): Promise<void> => {\n\t\tevent.stopPropagation();\n\t\tonRemove(removeInvite);\n\t};\n\n\tconst notSmall = useMediaQuery('(min-width: 768px)');\n\n\treturn (\n\t\t<GenericTableRow>\n\t\t\t<GenericTableCell>\n\t\t\t\t<Box color='hint' fontScale='p2'>\n\t\t\t\t\t{_id}\n\t\t\t\t</Box>\n\t\t\t</GenericTableCell>\n\t\t\t{notSmall && (\n\t\t\t\t<>\n\t\t\t\t\t<GenericTableCell>{formatDateAndTime(new Date(createdAt))}</GenericTableCell>\n\t\t\t\t\t<GenericTableCell>{daysToExpire(expires ? new Date(expires) : null)}</GenericTableCell>\n\t\t\t\t\t<GenericTableCell>{uses}</GenericTableCell>\n\t\t\t\t\t<GenericTableCell>{maxUsesLeft(maxUses, uses)}</GenericTableCell>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<GenericTableCell>\n\t\t\t\t<Button ghost danger small square onClick={handleRemoveButtonClick}>\n\t\t\t\t\t<Icon name='cross' size='x20' />\n\t\t\t\t</Button>\n\t\t\t</GenericTableCell>\n\t\t</GenericTableRow>\n\t);\n};\n\nexport default InviteRow;\n"]}
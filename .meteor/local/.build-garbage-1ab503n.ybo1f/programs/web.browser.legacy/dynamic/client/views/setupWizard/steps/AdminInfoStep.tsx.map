{"version":3,"sources":["meteor://ðŸ’»app/client/views/setupWizard/steps/AdminInfoStep.tsx"],"names":[],"mappings":";;;;;;;;AAAA;;AAAwB,MAAM,KAAN,CAAM,4BAAN,EAAmC;AAAA;AAAA;AAAA;AAAA,CAAnC,EAAmC,CAAnC;;AAAmC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3D;AAAS,MAAe,KAAf,CAAqB,4BAArB,EAAkD;AAAA;AAAA;AAAA;AAAA,CAAlD,EAAkD,CAAlD;AAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO3D,IAAM,aAAa,GAAG,YAAmB;AACxC,MAAM,CAAC,GAAG,cAAc,EAAxB;AACA,MAAM,2BAA2B,GAAG,UAAU,CAAC,4BAAD,CAA9C;AACA,MAAM,cAAc,GAAG,IAAI,MAAJ,OAAe,2BAAf,OAAvB;;AAEA,8BAMI,qBAAqB,EANzB;AAAA,MACoB,SADpB,yBACC,eADD,CACoB,SADpB;AAAA,MAEC,kBAFD,yBAEC,kBAFD;AAAA,MAGC,YAHD,yBAGC,YAHD;AAAA,MAIC,WAJD,yBAIC,WAJD;AAAA,MAKC,aALD,yBAKC,aALD,CALwC,CAaxC;;;AACA,MAAM,gBAAgB,GAAG,UAAC,QAAD,EAAuC;AAC/D,QAAI,CAAC,cAAc,CAAC,IAAf,CAAoB,QAApB,CAAL,EAAoC;AACnC,aAAO,CAAC,CAAC,kBAAD,CAAR;AACA;;AAED,WAAO,IAAP;AACA,GAND;;AAQA,MAAM,YAAY;AAAqD,qBAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtE,kCAAkB,CAAC,UAAC,SAAD;AAAA,yDAAqB,SAArB;AAAgC,6BAAS,EAAE;AAA3C;AAAA,iBAAD,CAAlB;AACA,4BAAY;;AAF0D;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAArD;AAAA,KAAlB;;AAKA,sBACC,oBAAC,aAAD;AACC,oBAAgB,EAAE,UAAC,QAAD;AAAA,aAAuB,QAAQ,CAAC,MAAT,GAAkB,CAAzC;AAAA,KADnB;AAEC,qBAAiB,EAAE,EAFpB;AAGC,oBAAgB,EAAE,gBAHnB;AAIC,iBAAa,EAAE,aAJhB;AAKC,eAAW,EAAE,WALd;AAMC,iBAAa,EAAE,SANhB;AAOC,aAAS,EAAE,CAPZ;AAQC,YAAQ,EAAE;AARX,IADD;AAYA,CAvCD;;AAPA,OAAO,aAAP,CAgDe,aAhDf,E","file":"dynamic/client/views/setupWizard/steps/AdminInfoStep.tsx","sourcesContent":["import { AdminInfoPage } from '@rocket.chat/onboarding-ui';\nimport React, { ReactElement, ComponentProps } from 'react';\n\nimport { useSetting } from '../../../contexts/SettingsContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useSetupWizardContext } from '../contexts/SetupWizardContext';\n\nconst AdminInfoStep = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst regexpForUsernameValidation = useSetting('UTF8_User_Names_Validation');\n\tconst usernameRegExp = new RegExp(`^${regexpForUsernameValidation}$`);\n\n\tconst {\n\t\tsetupWizardData: { adminData },\n\t\tsetSetupWizardData,\n\t\tgoToNextStep,\n\t\tcurrentStep,\n\t\tvalidateEmail,\n\t} = useSetupWizardContext();\n\n\t// TODO: check if username exists\n\tconst validateUsername = (username: string): boolean | string => {\n\t\tif (!usernameRegExp.test(username)) {\n\t\t\treturn t('Invalid_username');\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst handleSubmit: ComponentProps<typeof AdminInfoPage>['onSubmit'] = async (data) => {\n\t\tsetSetupWizardData((prevState) => ({ ...prevState, adminData: data }));\n\t\tgoToNextStep();\n\t};\n\n\treturn (\n\t\t<AdminInfoPage\n\t\t\tvalidatePassword={(password): boolean => password.length > 0}\n\t\t\tpasswordRulesHint={''}\n\t\t\tvalidateUsername={validateUsername}\n\t\t\tvalidateEmail={validateEmail}\n\t\t\tcurrentStep={currentStep}\n\t\t\tinitialValues={adminData}\n\t\t\tstepCount={4}\n\t\t\tonSubmit={handleSubmit}\n\t\t/>\n\t);\n};\n\nexport default AdminInfoStep;\n"]}
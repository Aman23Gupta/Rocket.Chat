{"version":3,"sources":["meteor://ðŸ’»app/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts"],"names":[],"mappings":"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","file":"dynamic/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nimport { IRoom } from '../../../../../../definition/IRoom';\nimport { useEndpoint } from '../../../../../contexts/ServerContext';\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../../../lib/lists/RecordList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\n\ntype TeamsChannelListOptions = {\n\tteamId: string;\n\ttype: 'all' | 'autoJoin';\n\ttext: string;\n};\n\nexport const useTeamsChannelList = (\n\toptions: TeamsChannelListOptions,\n): {\n\tteamsChannelList: RecordList<IRoom>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst apiEndPoint = useEndpoint('GET', 'teams.listRooms');\n\tconst [teamsChannelList, setTeamsChannelList] = useState(() => new RecordList<IRoom>());\n\tconst reload = useCallback(() => setTeamsChannelList(new RecordList<IRoom>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { rooms, total } = await apiEndPoint({\n\t\t\t\tteamId: options.teamId,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tfilter: options.text,\n\t\t\t\ttype: options.type,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: rooms.map(({ _updatedAt, lastMessage, lm, ts, jitsiTimeout, webRtcCallStartTime, ...room }) => ({\n\t\t\t\t\tjitsiTimeout: new Date(jitsiTimeout),\n\t\t\t\t\t...(lm && { lm: new Date(lm) }),\n\t\t\t\t\t...(ts && { ts: new Date(ts) }),\n\t\t\t\t\t_updatedAt: new Date(_updatedAt),\n\t\t\t\t\t...(lastMessage && { lastMessage: mapMessageFromApi(lastMessage) }),\n\t\t\t\t\t...(webRtcCallStartTime && { webRtcCallStartTime: new Date(webRtcCallStartTime) }),\n\t\t\t\t\t...room,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[apiEndPoint, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tteamsChannelList,\n\t\tfetchData,\n\t\tuseMemo(() => {\n\t\t\tconst filesListSize = getConfig('teamsChannelListSize');\n\t\t\treturn filesListSize ? parseInt(filesListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tteamsChannelList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/lib/Toolbox/ToolboxContext.tsx"],"names":[],"mappings":";;;;;;;;AACA,OAAO,MAAP,CAAS;AAAA,gBAAkC,cAAY;AAAA,WAAM,cAAN;AAAc,GAA5D;AAA4D;AAAA;AAAA;AAA5D,CAAT;AAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB9D,IAAM,cAAc,gBAAG,aAAa,CAAsB;AAChE,SAAO,EAAP,OADgE;AAEhE,QAAM,EAAN,MAFgE;AAGhE,MAAI,EAAE;AAAA,WAAM,IAAN;AAAA,GAH0D;AAIhE,cAAY,EAAE;AAAA,WAAM,IAAN;AAAA,GAJkD;AAKhE,OAAK,EAAE;AAAA,WAAM,IAAN;AAAA;AALyD,CAAtB,CAApC;;AAQA,IAAM,iBAAiB,GAAG;AAAA,SAA2B,UAAU,CAAC,cAAD,CAArC;AAAA,CAA1B,C","file":"dynamic/client/views/room/lib/Toolbox/ToolboxContext.tsx","sourcesContent":["import { EventHandlerOf } from '@rocket.chat/emitter';\nimport { createContext, MouseEventHandler, useContext } from 'react';\n\nimport { actions, listen, ToolboxActionConfig, ToolboxAction, Events } from '.';\nimport './defaultActions';\n\nexport type ToolboxEventHandler = (handler: EventHandlerOf<Events, 'change'>) => Function;\n\nexport type ToolboxContextValue = {\n\tactions: Map<ToolboxActionConfig['id'], ToolboxAction>;\n\tlisten: ToolboxEventHandler;\n\ttabBar?: any;\n\tcontext?: any;\n\topen: Function;\n\topenUserInfo: Function;\n\tclose: MouseEventHandler<HTMLOrSVGElement>;\n\tactiveTabBar?: ToolboxActionConfig;\n};\n\nexport const ToolboxContext = createContext<ToolboxContextValue>({\n\tactions,\n\tlisten,\n\topen: () => null,\n\topenUserInfo: () => null,\n\tclose: () => null,\n});\n\nexport const useToolboxContext = (): ToolboxContextValue => useContext(ToolboxContext);\n"]}
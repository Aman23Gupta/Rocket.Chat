{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/apps/AppsRoute.tsx"],"names":[],"mappings":";;;;;;;;AAAA;;AAAwB,MAAE,KAAF,CAAW,4BAAX,EAA+B;AAAA;AAAA;AAAA;AAAA,CAA/B,EAA+B,CAA/B;;AAA+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvD,WAAO,QAAP,EAAgB,SAAhB;AAA0B,MAAS,KAAT,CAAe,OAAf,EAAqB;AAAO,aAAC;AAAA;AAAA,GAAR;AAAQ;AAAA;AAAA,GAAR;AAAQ;AAAA;AAAA;AAAR,CAArB,EAA6B,CAA7B;AAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAavD,IAAM,SAAS,GAAO,YAAK;AAC1B,kBAAgC,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAO,SAAP;AAAA,MAAkB,UAAlB;;AACA,MAAM,yBAAyB,GAAG,aAAa,CAAC,aAAD,CAA/C;AACA,MAAM,mBAAmB,GAAG,SAAS,CAAC,iBAAD,CAArC;AACA,MAAM,iBAAiB,GAAG,QAAQ,CAAC,qBAAD,CAAlC;AAEA,WAAS,CAAC,YAAK;AACd,QAAI,OAAO,GAAG,IAAd;;AAEA,QAAM,UAAU;AAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACb,yBADa;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mDAKN,mBAAmB,EALb;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMjB,mCAAiB,CAAC,IAAlB;AANiB;;AAAA;AAAA,sBAUb,OAVa;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAclB,4BAAU,CAAC,KAAD,CAAV;;AAdkB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAH;AAAA,OAAhB;;AAiBA,cAAU;AAEV,WAAO,YAAW;AACjB,aAAO,GAAG,KAAV;AACA,KAFD;AAGA,GAzBQ,EAyBN,CAAC,yBAAD,EAA4B,mBAA5B,EAAiD,iBAAjD,CAzBM,CAAT;AA2BA,MAAM,OAAO,GAAG,iBAAiB,CAAC,SAAD,CAAjC;AAEA,MAAM,aAAa,GAAG,CAAC,OAAvB;AAEA,MAAM,EAAE,GAAG,iBAAiB,CAAC,IAAD,CAA5B;;AAEA,MAAI,CAAC,yBAAL,EAAgC;AAC/B,wBAAO,oBAAC,iBAAD,OAAP;AACA;;AAED,MAAI,SAAJ,EAAe;AACd,wBAAO,oBAAC,YAAD,OAAP;AACA;;AAED,sBACC,oBAAC,YAAD,QACG,CAAC,CAAC,OAAD,IAAY,OAAO,KAAK,WAAzB,kBAAyC,oBAAC,QAAD;AAAU,iBAAa,EAAE;AAAzB,IAA1C,IACC,EAAE,IAAI,OAAO,KAAK,SAAlB,iBAA+B,oBAAC,cAAD;AAAgB,MAAE,EAAE;AAApB,IADhC,IAEC,OAAO,KAAK,MAAZ,iBAAsB,oBAAC,WAAD;AAAa,MAAE,EAAE;AAAjB,IAFvB,IAGC,OAAO,KAAK,SAAZ,iBAAyB,oBAAC,cAAD,OAJ5B,CADD;AAQA,CAvDD;;AAbA,OAAO,aAAP,CAsEe,SAtEf,E","file":"dynamic/client/views/admin/apps/AppsRoute.tsx","sourcesContent":["import React, { useState, useEffect, FC } from 'react';\n\nimport NotAuthorizedPage from '../../../components/NotAuthorizedPage';\nimport PageSkeleton from '../../../components/PageSkeleton';\nimport { usePermission } from '../../../contexts/AuthorizationContext';\nimport { useRouteParameter, useRoute } from '../../../contexts/RouterContext';\nimport { useMethod } from '../../../contexts/ServerContext';\nimport AppDetailsPage from './AppDetailsPage';\nimport AppInstallPage from './AppInstallPage';\nimport AppLogsPage from './AppLogsPage';\nimport AppsPage from './AppsPage';\nimport AppsProvider from './AppsProvider';\n\nconst AppsRoute: FC = () => {\n\tconst [isLoading, setLoading] = useState(true);\n\tconst canViewAppsAndMarketplace = usePermission('manage-apps');\n\tconst isAppsEngineEnabled = useMethod('apps/is-enabled');\n\tconst appsWhatIsItRoute = useRoute('admin-apps-disabled');\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\n\t\tconst initialize = async (): Promise<void> => {\n\t\t\tif (!canViewAppsAndMarketplace) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!(await isAppsEngineEnabled())) {\n\t\t\t\tappsWhatIsItRoute.push();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!mounted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetLoading(false);\n\t\t};\n\n\t\tinitialize();\n\n\t\treturn (): void => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [canViewAppsAndMarketplace, isAppsEngineEnabled, appsWhatIsItRoute]);\n\n\tconst context = useRouteParameter('context');\n\n\tconst isMarketplace = !context;\n\n\tconst id = useRouteParameter('id');\n\n\tif (!canViewAppsAndMarketplace) {\n\t\treturn <NotAuthorizedPage />;\n\t}\n\n\tif (isLoading) {\n\t\treturn <PageSkeleton />;\n\t}\n\n\treturn (\n\t\t<AppsProvider>\n\t\t\t{((!context || context === 'installed') && <AppsPage isMarketplace={isMarketplace} />) ||\n\t\t\t\t(id && context === 'details' && <AppDetailsPage id={id} />) ||\n\t\t\t\t(context === 'logs' && <AppLogsPage id={id} />) ||\n\t\t\t\t(context === 'install' && <AppInstallPage />)}\n\t\t</AppsProvider>\n\t);\n};\n\nexport default AppsRoute;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport React, { useCallback, useState, useEffect } from 'react';\n\nimport { RoomManager } from '../../../../../../../app/ui-utils/client';\nimport { IOmnichannelRoom } from '../../../../../../../definition/IRoom';\nimport PlaceChatOnHoldModal from '../../../../../../../ee/app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal';\nimport CloseChatModal from '../../../../../../components/Omnichannel/modals/CloseChatModal';\nimport CloseChatModalData from '../../../../../../components/Omnichannel/modals/CloseChatModalData';\nimport ForwardChatModal from '../../../../../../components/Omnichannel/modals/ForwardChatModal';\nimport ReturnChatQueueModal from '../../../../../../components/Omnichannel/modals/ReturnChatQueueModal';\nimport TranscriptModal from '../../../../../../components/Omnichannel/modals/TranscriptModal';\nimport { usePermission, useRole } from '../../../../../../contexts/AuthorizationContext';\nimport { useSetModal } from '../../../../../../contexts/ModalContext';\nimport { useOmnichannelRouteConfig } from '../../../../../../contexts/OmnichannelContext';\nimport { useEndpoint, useMethod } from '../../../../../../contexts/ServerContext';\nimport { useSetting } from '../../../../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../../../contexts/TranslationContext';\nimport { useUserId } from '../../../../../../contexts/UserContext';\nimport { handleError } from '../../../../../../lib/utils/handleError';\nimport { QuickActionsActionConfig, QuickActionsEnum } from '../../../../lib/QuickActions';\nimport { useQuickActionsContext } from '../../../../lib/QuickActions/QuickActionsContext';\n\nexport const useQuickActions = (\n\troom: IOmnichannelRoom,\n): {\n\tvisibleActions: QuickActionsActionConfig[];\n\tactionDefault: (e: unknown) => void;\n\tgetAction: (id: string) => void;\n} => {\n\tconst setModal = useSetModal();\n\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst context = useQuickActionsContext();\n\tconst actions = (Array.from(context.actions.values()) as QuickActionsActionConfig[]).sort((a, b) => (a.order || 0) - (b.order || 0));\n\n\tconst [onHoldModalActive, setOnHoldModalActive] = useState(false);\n\n\tconst visitorRoomId = room.v._id;\n\tconst rid = room._id;\n\tconst uid = useUserId();\n\tconst roomLastMessage = room.lastMessage;\n\n\tconst getVisitorInfo = useEndpoint('GET', 'livechat/visitors.info');\n\n\tconst getVisitorEmail = useMutableCallback(async () => {\n\t\tif (!visitorRoomId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tvisitor: { visitorEmails },\n\t\t} = await getVisitorInfo({ visitorId: visitorRoomId });\n\n\t\tif (visitorEmails?.length && visitorEmails[0].address) {\n\t\t\treturn visitorEmails[0].address;\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (onHoldModalActive && roomLastMessage?.token) {\n\t\t\tsetModal(null);\n\t\t}\n\t}, [roomLastMessage, onHoldModalActive, setModal]);\n\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tconst closeOnHoldModal = useCallback(() => {\n\t\tcloseModal();\n\t\tsetOnHoldModalActive(false);\n\t}, [closeModal]);\n\n\tconst methodReturn = useMethod('livechat:returnAsInquiry');\n\n\tconst handleMoveChat = useCallback(async () => {\n\t\ttry {\n\t\t\tawait methodReturn(rid);\n\t\t\tcloseModal();\n\t\t\tSession.set('openedRoom', null);\n\t\t\tFlowRouter.go('/home');\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [closeModal, methodReturn, rid]);\n\n\tconst requestTranscript = useMethod('livechat:requestTranscript');\n\n\tconst handleRequestTranscript = useCallback(\n\t\tasync (email: string, subject: string) => {\n\t\t\ttry {\n\t\t\t\tawait requestTranscript(rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t\tRoomManager.close(`l${rid}`);\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: t('Livechat_transcript_has_been_requested'),\n\t\t\t\t});\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, requestTranscript, rid, t],\n\t);\n\n\tconst sendTranscript = useMethod('livechat:sendTranscript');\n\n\tconst handleSendTranscript = useCallback(\n\t\tasync (email: string, subject: string, token: string) => {\n\t\t\ttry {\n\t\t\t\tawait sendTranscript(token, rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, rid, sendTranscript],\n\t);\n\n\tconst discardTranscript = useMethod('livechat:discardTranscript');\n\n\tconst handleDiscardTranscript = useCallback(async () => {\n\t\ttry {\n\t\t\tawait discardTranscript(rid);\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Livechat_transcript_request_has_been_canceled'),\n\t\t\t});\n\t\t\tcloseModal();\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [closeModal, discardTranscript, dispatchToastMessage, rid, t]);\n\n\tconst forwardChat = useMethod('livechat:transfer');\n\n\tconst handleForwardChat = useCallback(\n\t\tasync (departmentId?: string, userId?: string, comment?: string) => {\n\t\t\tif (departmentId && userId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst transferData: {\n\t\t\t\troomId: string;\n\t\t\t\tclientAction: boolean;\n\t\t\t\tcomment?: string;\n\t\t\t\tdepartmentId?: string;\n\t\t\t\tuserId?: string;\n\t\t\t} = {\n\t\t\t\troomId: rid,\n\t\t\t\tcomment,\n\t\t\t\tclientAction: true,\n\t\t\t};\n\n\t\t\tif (departmentId) {\n\t\t\t\ttransferData.departmentId = departmentId;\n\t\t\t}\n\t\t\tif (userId) {\n\t\t\t\ttransferData.userId = userId;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst result = await forwardChat(transferData);\n\t\t\t\tif (!result) {\n\t\t\t\t\tthrow new Error(departmentId ? t('error-no-agents-online-in-department') : t('error-forwarding-chat'));\n\t\t\t\t}\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Transferred') });\n\t\t\t\tFlowRouter.go('/');\n\t\t\t\tcloseModal();\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, forwardChat, rid, t],\n\t);\n\n\tconst closeChat = useMethod('livechat:closeRoom');\n\n\tconst handleClose = useCallback(\n\t\tasync (comment: string, tags: string[]) => {\n\t\t\ttry {\n\t\t\t\tawait closeChat(rid, comment, { clientAction: true, tags });\n\t\t\t\tcloseModal();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_closed_successfully') });\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeChat, closeModal, dispatchToastMessage, rid, t],\n\t);\n\n\tconst onHoldChat = useEndpoint('POST', 'livechat/room.onHold');\n\n\tconst handleOnHoldChat = useCallback(async () => {\n\t\ttry {\n\t\t\tawait onHoldChat({ roomId: rid });\n\t\t\tcloseModal();\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_On_Hold_Successfully') });\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [onHoldChat, rid, closeModal, dispatchToastMessage, t]);\n\n\tconst openModal = useMutableCallback(async (id: string) => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\tsetModal(<ReturnChatQueueModal onMoveChat={handleMoveChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\tconst visitorEmail = await getVisitorEmail();\n\n\t\t\t\tif (!visitorEmail) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Customer_without_registered_email') });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsetModal(\n\t\t\t\t\t<TranscriptModal\n\t\t\t\t\t\troom={room}\n\t\t\t\t\t\temail={visitorEmail}\n\t\t\t\t\t\tonRequest={handleRequestTranscript}\n\t\t\t\t\t\tonSend={handleSendTranscript}\n\t\t\t\t\t\tonDiscard={handleDiscardTranscript}\n\t\t\t\t\t\tonCancel={closeModal}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\tsetModal(<ForwardChatModal room={room} onForward={handleForwardChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\tsetModal(\n\t\t\t\t\troom.departmentId ? (\n\t\t\t\t\t\t<CloseChatModalData departmentId={room.departmentId} onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CloseChatModal onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\tsetModal(<PlaceChatOnHoldModal onOnHoldChat={handleOnHoldChat} onCancel={closeOnHoldModal} />);\n\t\t\t\tsetOnHoldModalActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst omnichannelRouteConfig = useOmnichannelRouteConfig();\n\n\tconst manualOnHoldAllowed = useSetting('Livechat_allow_manual_on_hold');\n\n\tconst hasManagerRole = useRole('livechat-manager');\n\n\tconst roomOpen = room?.open && (room.u?._id === uid || hasManagerRole) && room?.lastMessage?.t !== 'livechat-close';\n\tconst canMoveQueue = !!omnichannelRouteConfig?.returnQueue && room?.u !== undefined;\n\tconst canForwardGuest = usePermission('transfer-livechat-guest');\n\tconst canSendTranscript = usePermission('send-omnichannel-chat-transcript');\n\tconst canCloseRoom = usePermission('close-livechat-room');\n\tconst canCloseOthersRoom = usePermission('close-others-livechat-room');\n\tconst canPlaceChatOnHold = Boolean(!room.onHold && room.u && !(room as any).lastMessage?.token && manualOnHoldAllowed);\n\n\tconst hasPermissionButtons = (id: string): boolean => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\treturn !!roomOpen && canMoveQueue;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\treturn !!roomOpen && canForwardGuest;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\treturn canSendTranscript;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\treturn !!roomOpen && (canCloseRoom || canCloseOthersRoom);\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\treturn !!roomOpen && canPlaceChatOnHold;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst visibleActions = actions.filter(({ id }) => hasPermissionButtons(id));\n\n\tconst actionDefault = useMutableCallback((e) => {\n\t\tconst index = e.currentTarget.getAttribute('data-quick-actions');\n\t\tconst { id } = visibleActions[index];\n\t\topenModal(id);\n\t});\n\n\tconst getAction = useMutableCallback((id) => {\n\t\topenModal(id);\n\t});\n\n\treturn { visibleActions, actionDefault, getAction };\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/root/MainLayout/UsernameCheck.tsx"],"names":[],"mappings":";;;;;;;;AAAA,WAAO,WAAP;AAAyC,MAAW,CAAE,IAAb,CAAa,OAAb,EAA0B;AAAC;AAAA;AAAA,GAAD;AAAC;AAAA;AAAA;AAAD,CAA1B,EAA2B,CAA3B;AAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYpE,IAAM,aAAa,GAAG,gBAAwD;AAAA,MAArD,QAAqD,QAArD,QAAqD;AAC7E,sBAAoB;AACpB,iBAAe;AAEf,MAAM,GAAG,GAAG,SAAS,EAArB;AACA,MAAM,kBAAkB,GAAG,UAAU,CAAC,6BAAD,CAArC;AAEA,MAAM,WAAW,GAAG,gBAAgB,CACnC,WAAW,CAAC,YAAK;AAAA;;AAChB,QAAI,CAAC,GAAL,EAAU;AACT,aAAO,kBAAP;AACA;;AAED,QAAM,IAAI,GAAG,GAAG,GAAI,KAAK,CAAC,WAAN,CAAkB,GAAlB,EAAuB;AAAE,YAAM,EAAE;AAAE,gBAAQ,EAAE;AAAZ;AAAV,KAAvB,CAAJ,GAA2E,IAA3F;AACA,6BAAO,IAAP,aAAO,IAAP,uBAAO,IAAI,CAAE,QAAb,2DAAyB,KAAzB;AACA,GAPU,EAOR,CAAC,GAAD,EAAM,kBAAN,CAPQ,CADwB,CAApC;;AAWA,MAAI,CAAC,WAAL,EAAkB;AACjB,wBAAO,oBAAC,aAAD;AAAe,cAAQ,EAAC;AAAxB,MAAP;AACA;;AAED,sBAAO,oBAAC,mBAAD,QAAsB,QAAtB,CAAP;AACA,CAvBD;;AAZA,OAAO,aAAP,CAqCe,aArCf,E","file":"dynamic/client/views/root/MainLayout/UsernameCheck.tsx","sourcesContent":["import React, { ReactElement, ReactNode, useCallback } from 'react';\n\nimport { Users } from '../../../../app/models/client';\nimport { IUser } from '../../../../definition/IUser';\nimport { useSetting } from '../../../contexts/SettingsContext';\nimport { useUserId } from '../../../contexts/UserContext';\nimport { useReactiveValue } from '../../../hooks/useReactiveValue';\nimport BlazeTemplate from '../BlazeTemplate';\nimport PasswordChangeCheck from './PasswordChangeCheck';\nimport { useCustomScript } from './useCustomScript';\nimport { useViewportScrolling } from './useViewportScrolling';\n\nconst UsernameCheck = ({ children }: { children: ReactNode }): ReactElement => {\n\tuseViewportScrolling();\n\tuseCustomScript();\n\n\tconst uid = useUserId();\n\tconst allowAnonymousRead = useSetting('Accounts_AllowAnonymousRead');\n\n\tconst hasUsername = useReactiveValue(\n\t\tuseCallback(() => {\n\t\t\tif (!uid) {\n\t\t\t\treturn allowAnonymousRead;\n\t\t\t}\n\n\t\t\tconst user = uid ? (Users.findOneById(uid, { fields: { username: 1 } }) as IUser | null) : null;\n\t\t\treturn user?.username ?? false;\n\t\t}, [uid, allowAnonymousRead]),\n\t);\n\n\tif (!hasUsername) {\n\t\treturn <BlazeTemplate template='username' />;\n\t}\n\n\treturn <PasswordChangeCheck>{children}</PasswordChangeCheck>;\n};\n\nexport default UsernameCheck;\n"]}
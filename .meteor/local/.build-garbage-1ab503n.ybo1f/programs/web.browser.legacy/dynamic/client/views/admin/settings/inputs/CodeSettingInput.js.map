{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/inputs/CodeSettingInput.js"],"names":["_slicedToArray","module","link","default","v","Box","Button","Field","Flex","useToggle","React","useTranslation","ResetSettingButton","CodeMirror","CodeSettingInput","_id","label","value","code","placeholder","readonly","autocomplete","disabled","hasResetButton","onChangeValue","onResetButtonClick","t","fullScreen","toggleFullScreen","handleChange","filter","Boolean","join","undefined","exportDefault"],"mappings":"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","file":"dynamic/client/views/admin/settings/inputs/CodeSettingInput.js","sourcesContent":["import { Box, Button, Field, Flex } from '@rocket.chat/fuselage';\nimport { useToggle } from '@rocket.chat/fuselage-hooks';\nimport React from 'react';\n\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport ResetSettingButton from '../ResetSettingButton';\nimport CodeMirror from './CodeMirror';\n\nfunction CodeSettingInput({\n\t_id,\n\tlabel,\n\tvalue = '',\n\tcode,\n\tplaceholder,\n\treadonly,\n\tautocomplete,\n\tdisabled,\n\thasResetButton,\n\tonChangeValue,\n\tonResetButtonClick,\n}) {\n\tconst t = useTranslation();\n\n\tconst [fullScreen, toggleFullScreen] = useToggle(false);\n\n\tconst handleChange = (value) => {\n\t\tonChangeValue(value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Flex.Container>\n\t\t\t\t<Box>\n\t\t\t\t\t<Field.Label htmlFor={_id} title={_id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Field.Label>\n\t\t\t\t\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\n\t\t\t\t</Box>\n\t\t\t</Flex.Container>\n\t\t\t<div className={['code-mirror-box', fullScreen && 'code-mirror-box-fullscreen content-background-color'].filter(Boolean).join(' ')}>\n\t\t\t\t<div className='title'>{label}</div>\n\t\t\t\t<CodeMirror\n\t\t\t\t\tdata-qa-setting-id={_id}\n\t\t\t\t\tid={_id}\n\t\t\t\t\tmode={code}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\treadOnly={readonly}\n\t\t\t\t\tautoComplete={autocomplete === false ? 'off' : undefined}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<div className='buttons'>\n\t\t\t\t\t<Button primary onClick={() => toggleFullScreen()}>\n\t\t\t\t\t\t{fullScreen ? t('Exit_Full_Screen') : t('Full_Screen')}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default CodeSettingInput;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/hooks/useDepartmentsByUnitsList.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAAsB,MAAQ,KAAR,CAAU,4BAAV,EAAwB;AAAA;AAAA;AAAA;AAAA,CAAxB,EAAwB,CAAxB;;AAAwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9C,OAAO,MAAP,CAAS;AAAA,2BAA6B,cAAQ;AAAA;AAAA;AAArC,CAAT;AAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAavC,IAAM,yBAAyB,GAAG,UACxC,OADwC,EAOrC;AACH,kBAAkC,QAAQ,CAAC;AAAA,WAAM,IAAI,UAAJ,EAAN;AAAA,GAAD,CAA1C;AAAA;AAAA,MAAO,SAAP;AAAA,MAAkB,YAAlB;;AACA,MAAM,MAAM,GAAG,WAAW,CAAC;AAAA,WAAM,YAAY,CAAC,IAAI,UAAJ,EAAD,CAAlB;AAAA,GAAD,EAAkE,EAAlE,CAA1B;AACA,MAAM,QAAQ,gDAA6C,OAAO,CAAC,MAAR,IAAkB,MAA/D,CAAd;AAEA,MAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,QAAR,CAAlC;AAEA,uBAAqB,CAAC,YAAK;AAC1B,WAAO,IAAI,MAAM,EAAjB;AACA,GAFoB,EAElB,CAAC,OAAD,EAAU,MAAV,CAFkB,CAArB;AAIA,MAAM,SAAS,GAAG,WAAW;AAC5B,qBAAO,KAAP,EAAc,GAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACsC,cAAc,CAAC;AACnD,sBAAI,EAAE,OAAO,CAAC,MADqC;AAEnD,wBAAM,EAAE,KAF2C;AAGnD,uBAAK,EAAE,GAAG,GAAG;AAHsC,iBAAD,CADpD;;AAAA;AAAA;AACS,2BADT,yBACS,WADT;AACsB,qBADtB,yBACsB,KADtB;AAAA,iDAOQ;AACN,uBAAK,EAAE,WAAW,CAAC,GAAZ,CAAgB,UAAC,UAAD,EAAoB;AAC1C,8BAAU,CAAC,UAAX,GAAwB,IAAI,IAAJ,CAAS,UAAU,CAAC,UAApB,CAAxB;AACA,8BAAU,CAAC,KAAX,GAAmB,UAAU,CAAC,IAA9B;AACA,8BAAU,CAAC,KAAX,GAAmB;AAAE,2BAAK,EAAE,UAAU,CAAC,GAApB;AAAyB,2BAAK,EAAE,UAAU,CAAC;AAA3C,qBAAnB;AACA,2BAAO,UAAP;AACA,mBALM,CADD;AAON,2BAAS,EAAE;AAPL,iBAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAD4B;AAAA,OAkB5B,CAAC,cAAD,EAAiB,OAAO,CAAC,MAAzB,CAlB4B,CAA7B;;AAqBA,8BAA4C,uBAAuB,CAAC,SAAD,EAAY,SAAZ,EAAuB,EAAvB,CAAnE;AAAA,MAAQ,aAAR,yBAAQ,aAAR;AAAA,MAAuB,gBAAvB,yBAAuB,gBAAvB;;AAEA,SAAO;AACN,UAAM,EAAN,MADM;AAEN,aAAS,EAAT,SAFM;AAGN,iBAAa,EAAb,aAHM;AAIN,oBAAgB,EAAhB;AAJM,GAAP;AAMA,CA/CM,C","file":"dynamic/client/views/hooks/useDepartmentsByUnitsList.ts","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { ILivechatDepartmentRecord } from '../../../definition/ILivechatDepartmentRecord';\nimport { useEndpoint } from '../../contexts/ServerContext';\nimport { useScrollableRecordList } from '../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../lib/lists/RecordList';\n\ntype DepartmentsListOptions = {\n\tunitId: string;\n\tfilter: string;\n};\n\nexport const useDepartmentsByUnitsList = (\n\toptions: DepartmentsListOptions,\n): {\n\titemsList: RecordList<ILivechatDepartmentRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatDepartmentRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatDepartmentRecord>()), []);\n\tconst endpoint = `livechat/departments.available-by-unit/${options.unitId || 'none'}` as const;\n\n\tconst getDepartments = useEndpoint('GET', endpoint);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { departments, total } = await getDepartments({\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: departments.map((department: any) => {\n\t\t\t\t\tdepartment._updatedAt = new Date(department._updatedAt);\n\t\t\t\t\tdepartment.label = department.name;\n\t\t\t\t\tdepartment.value = { value: department._id, label: department.name };\n\t\t\t\t\treturn department;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getDepartments, options.filter],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
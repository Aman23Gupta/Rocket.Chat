{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Announcement/Announcement.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAS,MAAoB,KAApB,CAA0B,6BAA1B,EAAwD;AAAA;AAAA;AAAA;AAAA,CAAxD,EAAwD,CAAxD;AAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAajE,IAAM,YAAY,GAA2B,gBAA0C;AAAA,MAAvC,YAAuC,QAAvC,YAAuC;AAAA,MAAzB,mBAAyB,QAAzB,mBAAyB;AACtF,MAAM,QAAQ,GAAG,WAAW,EAA5B;AACA,MAAM,UAAU,GAAG,kBAAkB,CAAC;AAAA,WAAM,QAAQ,CAAC,IAAD,CAAd;AAAA,GAAD,CAArC;;AACA,MAAM,WAAW,GAAG,UAAC,CAAD,EAA2C;AAAA;;AAC9D,QAAK,CAAC,CAAC,MAAF,CAA+B,IAApC,EAA0C;AACzC;AACA;;AAED,QAAI,kBAAM,UAAN,kEAAQ,YAAR,gFAAwB,QAAxB,QAAuC,EAA3C,EAA+C;AAC9C;AACA;;AAED,uBAAmB,GAAG,mBAAmB,EAAtB,GAA2B,QAAQ,eAAC,oBAAC,iBAAD;AAAmB,aAAO,EAAE;AAA5B,OAAyC,YAAzC,CAAD,CAAtD;AACA,GAVD;;AAYA,SAAO,YAAY,gBAClB,oBAAC,qBAAD;AAAuB,eAAW,EAAE,UAAC,CAAD;AAAA,aAA4C,WAAW,CAAC,CAAD,CAAvD;AAAA;AAApC,kBACC,oBAAC,YAAD;AAAc,WAAO,EAAC,qBAAtB;AAA4C,WAAO,EAAE,YAArD;AAAmE,qBAAiB;AAApF,IADD,CADkB,GAIf,IAJJ;AAKA,CApBD;;AAbA,OAAO,aAAP,CAmCe,YAnCf,E","file":"dynamic/client/views/room/Announcement/Announcement.tsx","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { FC, MouseEvent } from 'react';\n\nimport MarkdownText from '../../../components/MarkdownText';\nimport { useSetModal } from '../../../contexts/ModalContext';\nimport AnnouncementComponent from './AnnouncementComponent';\nimport AnnouncementModal from './AnnouncementModal';\n\ntype AnnouncementParams = {\n\tannouncement: string;\n\tannouncementDetails: () => void;\n};\n\nconst Announcement: FC<AnnouncementParams> = ({ announcement, announcementDetails }) => {\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal(null));\n\tconst handleClick = (e: MouseEvent<HTMLAnchorElement>): void => {\n\t\tif ((e.target as HTMLAnchorElement).href) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (window?.getSelection()?.toString() !== '') {\n\t\t\treturn;\n\t\t}\n\n\t\tannouncementDetails ? announcementDetails() : setModal(<AnnouncementModal onClose={closeModal}>{announcement}</AnnouncementModal>);\n\t};\n\n\treturn announcement ? (\n\t\t<AnnouncementComponent onClickOpen={(e: MouseEvent<HTMLAnchorElement>): void => handleClick(e)}>\n\t\t\t<MarkdownText variant='inlineWithoutBreaks' content={announcement} withTruncatedText />\n\t\t</AnnouncementComponent>\n\t) : null;\n};\n\nexport default Announcement;\n"]}
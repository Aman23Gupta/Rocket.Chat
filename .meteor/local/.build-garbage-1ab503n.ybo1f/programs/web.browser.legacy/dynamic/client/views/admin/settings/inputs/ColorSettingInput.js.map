{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/inputs/ColorSettingInput.js"],"names":["Box","Field","Flex","InputBox","Margins","TextInput","Select","module","link","v","React","useCallback","useTranslation","ResetSettingButton","ColorSettingInput","_id","label","value","editor","allowedTypes","placeholder","readonly","autocomplete","disabled","hasResetButton","onChangeValue","onChangeEditor","onResetButtonClick","t","handleChange","event","currentTarget","handleEditorTypeChange","undefined","map","type","replace","exportDefault"],"mappings":"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","file":"dynamic/client/views/admin/settings/inputs/ColorSettingInput.js","sourcesContent":["import { Box, Field, Flex, InputBox, Margins, TextInput, Select } from '@rocket.chat/fuselage';\nimport React, { useCallback } from 'react';\n\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport ResetSettingButton from '../ResetSettingButton';\n\nfunction ColorSettingInput({\n\t_id,\n\tlabel,\n\tvalue,\n\teditor,\n\tallowedTypes = [],\n\tplaceholder,\n\treadonly,\n\tautocomplete,\n\tdisabled,\n\thasResetButton,\n\tonChangeValue,\n\tonChangeEditor,\n\tonResetButtonClick,\n}) {\n\tconst t = useTranslation();\n\n\tconst handleChange = useCallback(\n\t\t(event) => {\n\t\t\tonChangeValue && onChangeValue(event.currentTarget.value);\n\t\t},\n\t\t[onChangeValue],\n\t);\n\n\tconst handleEditorTypeChange = useCallback(\n\t\t(value) => {\n\t\t\tonChangeEditor && onChangeEditor(value);\n\t\t},\n\t\t[onChangeEditor],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Flex.Container>\n\t\t\t\t<Box>\n\t\t\t\t\t<Field.Label htmlFor={_id} title={_id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Field.Label>\n\t\t\t\t\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\n\t\t\t\t</Box>\n\t\t\t</Flex.Container>\n\t\t\t<Margins inline='x4'>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<Margins inline='x4'>\n\t\t\t\t\t\t<Flex.Item grow={2}>\n\t\t\t\t\t\t\t{editor === 'color' && (\n\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\tdata-qa-setting-id={_id}\n\t\t\t\t\t\t\t\t\ttype='color'\n\t\t\t\t\t\t\t\t\tid={_id}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t\treadOnly={readonly}\n\t\t\t\t\t\t\t\t\tautoComplete={autocomplete === false ? 'off' : undefined}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{editor === 'expression' && (\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\tdata-qa-setting-id={_id}\n\t\t\t\t\t\t\t\t\tid={_id}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t\treadOnly={readonly}\n\t\t\t\t\t\t\t\t\tautoComplete={autocomplete === false ? 'off' : undefined}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Flex.Item>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tdata-qa-setting-id={`${_id}_editor`}\n\t\t\t\t\t\t\ttype='color'\n\t\t\t\t\t\t\tid={`${_id}_editor`}\n\t\t\t\t\t\t\tvalue={editor}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\treadOnly={readonly}\n\t\t\t\t\t\t\tautoComplete={autocomplete === false ? 'off' : undefined}\n\t\t\t\t\t\t\tonChange={handleEditorTypeChange}\n\t\t\t\t\t\t\toptions={allowedTypes.map((type) => [type, t(type)])}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Margins>\n\t\t\t\t</Field.Row>\n\t\t\t</Margins>\n\t\t\t<Field.Hint>Variable name: {_id.replace(/theme-color-/, '@')}</Field.Hint>\n\t\t</>\n\t);\n}\n\nexport default ColorSettingInput;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/currentChats/CurrentChatsPage.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAAY,MAAuB,CAAI,IAA3B,CAAsE,gCAAtE,EAAoF;AAAA;AAAA;AAAA;AAAA,CAApF,EAAoF,CAApF;;AAAoF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhG,WAAO,IAAP;AAAc,MAAyB,CAA2C,IAApE,CAAoE,OAApE,EAAiF;AAAC;AAAA;AAAA,GAAD;AAAC;AAAA;AAAA;AAAD,CAAjF,EAAkF,CAAlF;AAAkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BhG,IAAM,gBAAgB,GAQjB;AAAA,MAAG,IAAH,QAAG,IAAH;AAAA,MAAS,MAAT,QAAS,MAAT;AAAA,MAAiB,SAAjB,QAAiB,SAAjB;AAAA,MAA4B,MAA5B,QAA4B,MAA5B;AAAA,MAAoC,KAApC,QAAoC,KAApC;AAAA,MAA2C,SAA3C,QAA2C,SAA3C;AAAA,MAAsD,MAAtD,QAAsD,MAAtD;AAAA,sBACJ,oBAAC,IAAD,qBACC,oBAAC,IAAD,CAAM,MAAN;AAAa,SAAK,EAAE;AAApB,IADD,eAEC,oBAAC,IAAD,CAAM,OAAN,qBACC,oBAAC,YAAD;AACC,UAAM,EAAE,MADT;AAEC,aAAS,EAAE,SAFZ;AAGC,WAAO,EAAE,IAAF,aAAE,IAAF,uBAAE,IAAI,CAAE,KAHhB;AAIC,SAAK,EAAE,IAAF,aAAE,IAAF,uBAAE,IAAI,CAAE,KAJd;AAKC,UAAM,EAAE,MALT;AAMC,aAAS,EAAE,SANZ;AAOC,UAAM,EAAE,MAPT;AAQC,gBAAY,EAAE;AAAA,UAAG,QAAH,SAAG,QAAH;AAAA,UAAgB,KAAhB;;AAAA,0BAAsC,oBAAC,YAAD;AAAc,iBAAS,EAAE;AAAzB,SAAuC,KAAvC,EAAtC;AAAA;AARf,IADD,CAFD,CADI;AAAA,CARL;;AA7BA,OAAO,aAAP,eAuDe,IAAI,CAAC,gBAAD,CAvDnB,E","file":"dynamic/client/views/omnichannel/currentChats/CurrentChatsPage.tsx","sourcesContent":["import React, { Dispatch, FC, Key, memo, ReactElement, ReactNode, SetStateAction } from 'react';\n\nimport { IOmnichannelRoom } from '../../../../definition/IRoom';\nimport { Serialized } from '../../../../definition/Serialized';\nimport GenericTable from '../../../components/GenericTable';\nimport Page from '../../../components/Page';\nimport FilterByText from './FilterByText';\n\ntype CurrentChatsPageData = {\n\trooms: Serialized<IOmnichannelRoom>[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n};\n\ntype CurrentChatsPageDataParams = {\n\tguest: string;\n\tfname: string;\n\tservedBy: string;\n\tstatus: string;\n\tdepartment: string;\n\tfrom: string;\n\tto: string;\n\tcustomFields: any;\n\tcurrent: number;\n\titemsPerPage: number;\n\ttags: string[];\n};\n\nconst CurrentChatsPage: FC<{\n\tdata?: CurrentChatsPageData;\n\theader: ReactNode;\n\tsetParams: Dispatch<SetStateAction<CurrentChatsPageDataParams>>;\n\tparams: CurrentChatsPageDataParams;\n\ttitle: string;\n\trenderRow: (props: { _id?: Key }) => ReactElement;\n\treload: () => void;\n}> = ({ data, header, setParams, params, title, renderRow, reload }) => (\n\t<Page>\n\t\t<Page.Header title={title} />\n\t\t<Page.Content>\n\t\t\t<GenericTable\n\t\t\t\theader={header}\n\t\t\t\trenderRow={renderRow}\n\t\t\t\tresults={data?.rooms}\n\t\t\t\ttotal={data?.total}\n\t\t\t\tparams={params}\n\t\t\t\tsetParams={setParams}\n\t\t\t\treload={reload}\n\t\t\t\trenderFilter={({ onChange, ...props }: any): any => <FilterByText setFilter={onChange} {...props} />}\n\t\t\t/>\n\t\t</Page.Content>\n\t</Page>\n);\n\nexport default memo(CurrentChatsPage);\n"]}
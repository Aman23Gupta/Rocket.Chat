{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/analytics/AgentOverview.js"],"names":["_regeneratorRuntime","module","link","default","v","_slicedToArray","_objectSpread","Table","React","useMemo","useEffect","useState","useMethod","useTranslation","style","width","AgentOverview","type","dateRange","departmentId","t","start","end","params","chartOptions","name","daterange","from","to","head","data","displayData","setDisplayData","loadData","fetchData","value","map","i","exportDefault"],"mappings":"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","file":"dynamic/client/views/omnichannel/analytics/AgentOverview.js","sourcesContent":["import { Table } from '@rocket.chat/fuselage';\nimport React, { useMemo, useEffect, useState } from 'react';\n\nimport { useMethod } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\n\nconst style = { width: '100%' };\n\nconst AgentOverview = ({ type, dateRange, departmentId }) => {\n\tconst t = useTranslation();\n\tconst { start, end } = dateRange;\n\n\tconst params = useMemo(\n\t\t() => ({\n\t\t\tchartOptions: { name: type },\n\t\t\tdaterange: { from: start, to: end },\n\t\t\t...(departmentId && { departmentId }),\n\t\t}),\n\t\t[departmentId, end, start, type],\n\t);\n\n\tconst [displayData, setDisplayData] = useState({ head: [], data: [] });\n\n\tconst loadData = useMethod('livechat:getAgentOverviewData');\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tif (!start || !end) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst value = await loadData(params);\n\t\t\tsetDisplayData(value);\n\t\t}\n\t\tfetchData();\n\t}, [start, end, loadData, params]);\n\n\treturn (\n\t\t<Table style={style} fixed>\n\t\t\t<Table.Head>\n\t\t\t\t<Table.Row>\n\t\t\t\t\t{displayData.head?.map(({ name }, i) => (\n\t\t\t\t\t\t<Table.Cell key={i}>{t(name)}</Table.Cell>\n\t\t\t\t\t))}\n\t\t\t\t</Table.Row>\n\t\t\t</Table.Head>\n\t\t\t<Table.Body>\n\t\t\t\t{displayData.data?.map(({ name, value }, i) => (\n\t\t\t\t\t<Table.Row key={i}>\n\t\t\t\t\t\t<Table.Cell>{name}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>{value}</Table.Cell>\n\t\t\t\t\t</Table.Row>\n\t\t\t\t))}\n\t\t\t</Table.Body>\n\t\t</Table>\n\t);\n};\n\nexport default AgentOverview;\n"]}
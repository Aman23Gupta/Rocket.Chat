{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Threads/useThreadsList.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAAsB,MAAO,CAAE,IAAT,CAAS,4BAAT,EAAuB;AAAA;AAAA;AAAA;AAAA,CAAvB,EAAuB,CAAvB;AAAtB,OAAO,MAAP,CAAS;AAAA,gBAAoB,cAAQ;AAAA,WAAQ,cAAR;AAAQ;AAApC,CAAT;AAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAStC,IAAM,cAAc,GAAG,UAC7B,OAD6B,EAE7B,GAF6B,EAO1B;AACH,MAAM,WAAW,GAAG,OAAO,CAAC;AAAA,WAAM,IAAI,WAAJ,CAAgB,OAAhB,CAAN;AAAA,GAAD,EAAiC,CAAC,OAAD,CAAjC,CAA3B;AAEA,MAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,qBAAR,CAAlC;AAEA,MAAM,aAAa,GAAG,WAAW;AAChC,qBAAO,KAAP,EAAc,GAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACkC,cAAc,CAAC;AAC/C,qBAAG,EAAE,OAAO,CAAC,GADkC;AAE/C,sBAAI,EAAE,OAAO,CAAC,IAFiC;AAG/C,sBAAI,EAAE,OAAO,CAAC,IAHiC;AAI/C,wBAAM,EAAE,KAJuC;AAK/C,uBAAK,EAAE;AALwC,iBAAD,CADhD;;AAAA;AAAA;AACS,uBADT,yBACS,OADT;AACkB,qBADlB,yBACkB,KADlB;AAAA,iDASQ;AACN,uBAAK,EAAE,OADD;AAEN,2BAAS,EAAE;AAFL,iBATR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AADgC;AAAA,OAehC,CAAC,cAAD,EAAiB,OAAO,CAAC,GAAzB,EAA8B,OAAO,CAAC,IAAtC,EAA4C,OAAO,CAAC,IAApD,CAfgC,CAAjC;;AAkBA,8BAA4C,wBAAwB,CACnE,WADmE,EAEnE,aAFmE,EAGnE,OAAO,CAAC,YAAK;AACZ,QAAM,eAAe,GAAG,SAAS,CAAC,iBAAD,CAAjC;AACA,WAAO,eAAe,GAAG,QAAQ,CAAC,eAAD,EAAkB,EAAlB,CAAX,GAAmC,SAAzD;AACA,GAHM,EAGJ,EAHI,CAH4D,CAApE;AAAA,MAAQ,aAAR,yBAAQ,aAAR;AAAA,MAAuB,gBAAvB,yBAAuB,gBAAvB;;AAQA,gCAA8B,CAAC,WAAD,EAAc,GAAd,EAAmB,OAAO,CAAC,GAA3B,CAA9B;AAEA,SAAO;AACN,eAAW,EAAX,WADM;AAEN,iBAAa,EAAb,aAFM;AAGN,oBAAgB,EAAhB;AAHM,GAAP;AAKA,CA7CM,C","file":"dynamic/client/views/room/contextualBar/Threads/useThreadsList.ts","sourcesContent":["import { useCallback, useMemo } from 'react';\n\nimport { IUser } from '../../../../../definition/IUser';\nimport { useEndpoint } from '../../../../contexts/ServerContext';\nimport { useScrollableMessageList } from '../../../../hooks/lists/useScrollableMessageList';\nimport { useStreamUpdatesForMessageList } from '../../../../hooks/lists/useStreamUpdatesForMessageList';\nimport { ThreadsList, ThreadsListOptions } from '../../../../lib/lists/ThreadsList';\nimport { getConfig } from '../../../../lib/utils/getConfig';\n\nexport const useThreadsList = (\n\toptions: ThreadsListOptions,\n\tuid: IUser['_id'],\n): {\n\tthreadsList: ThreadsList;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst threadsList = useMemo(() => new ThreadsList(options), [options]);\n\n\tconst getThreadsList = useEndpoint('GET', 'chat.getThreadsList');\n\n\tconst fetchMessages = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { threads, total } = await getThreadsList({\n\t\t\t\trid: options.rid,\n\t\t\t\ttype: options.type,\n\t\t\t\ttext: options.text,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: threads,\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getThreadsList, options.rid, options.text, options.type],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableMessageList(\n\t\tthreadsList,\n\t\tfetchMessages,\n\t\tuseMemo(() => {\n\t\t\tconst threadsListSize = getConfig('threadsListSize');\n\t\t\treturn threadsListSize ? parseInt(threadsListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\tuseStreamUpdatesForMessageList(threadsList, uid, options.rid);\n\n\treturn {\n\t\tthreadsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
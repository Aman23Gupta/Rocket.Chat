{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Discussions/useDiscussionsList.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAAsB,MAAO,CAAE,IAAT,CAAS,4BAAT,EAAuB;AAAA;AAAA;AAAA;AAAA,CAAvB,EAAuB,CAAvB;AAAtB,OAAO,MAAP,CAAS;AAAA,oBAAsB,cAAa;AAAC;AAAA;AAApC,CAAT;AAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAStC,IAAM,kBAAkB,GAAG,UACjC,OADiC,EAEjC,GAFiC,EAO9B;AACH,MAAM,eAAe,GAAG,OAAO,CAAC;AAAA,WAAM,IAAI,eAAJ,CAAoB,OAApB,CAAN;AAAA,GAAD,EAAqC,CAAC,OAAD,CAArC,CAA/B;AAEA,MAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,qBAAR,CAAlC;AAEA,MAAM,aAAa,GAAG,WAAW;AAChC,qBAAO,KAAP,EAAc,GAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACmC,cAAc,CAAC;AAChD,wBAAM,EAAE,OAAO,CAAC,GADgC;AAEhD,sBAAI,EAAE,OAAO,CAAC,IAFkC;AAGhD,wBAAM,EAAE,KAHwC;AAIhD,uBAAK,EAAE;AAJyC,iBAAD,CADjD;;AAAA;AAAA;AACS,wBADT,yBACS,QADT;AACmB,qBADnB,yBACmB,KADnB;AAAA,iDAQQ;AACN,uBAAK,EAAE,QADD;AAEN,2BAAS,EAAE;AAFL,iBARR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AADgC;AAAA,OAchC,CAAC,cAAD,EAAiB,OAAO,CAAC,GAAzB,EAA8B,OAAO,CAAC,IAAtC,CAdgC,CAAjC;;AAiBA,8BAA4C,wBAAwB,CACnE,eADmE,EAEnE,aAFmE,EAGnE,OAAO,CAAC,YAAK;AACZ,QAAM,kBAAkB,GAAG,SAAS,CAAC,oBAAD,CAApC;AACA,WAAO,kBAAkB,GAAG,QAAQ,CAAC,kBAAD,EAAqB,EAArB,CAAX,GAAsC,SAA/D;AACA,GAHM,EAGJ,EAHI,CAH4D,CAApE;AAAA,MAAQ,aAAR,yBAAQ,aAAR;AAAA,MAAuB,gBAAvB,yBAAuB,gBAAvB;;AAQA,gCAA8B,CAAC,eAAD,EAAkB,GAAlB,EAAuB,OAAO,CAAC,GAA/B,CAA9B;AAEA,SAAO;AACN,mBAAe,EAAf,eADM;AAEN,iBAAa,EAAb,aAFM;AAGN,oBAAgB,EAAhB;AAHM,GAAP;AAKA,CA5CM,C","file":"dynamic/client/views/room/contextualBar/Discussions/useDiscussionsList.ts","sourcesContent":["import { useCallback, useMemo } from 'react';\n\nimport { IUser } from '../../../../../definition/IUser';\nimport { useEndpoint } from '../../../../contexts/ServerContext';\nimport { useScrollableMessageList } from '../../../../hooks/lists/useScrollableMessageList';\nimport { useStreamUpdatesForMessageList } from '../../../../hooks/lists/useStreamUpdatesForMessageList';\nimport { DiscussionsList, DiscussionsListOptions } from '../../../../lib/lists/DiscussionsList';\nimport { getConfig } from '../../../../lib/utils/getConfig';\n\nexport const useDiscussionsList = (\n\toptions: DiscussionsListOptions,\n\tuid: IUser['_id'],\n): {\n\tdiscussionsList: DiscussionsList;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst discussionsList = useMemo(() => new DiscussionsList(options), [options]);\n\n\tconst getDiscussions = useEndpoint('GET', 'chat.getDiscussions');\n\n\tconst fetchMessages = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { messages, total } = await getDiscussions({\n\t\t\t\troomId: options.rid,\n\t\t\t\ttext: options.text,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: messages,\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getDiscussions, options.rid, options.text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableMessageList(\n\t\tdiscussionsList,\n\t\tfetchMessages,\n\t\tuseMemo(() => {\n\t\t\tconst discussionListSize = getConfig('discussionListSize');\n\t\t\treturn discussionListSize ? parseInt(discussionListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\tuseStreamUpdatesForMessageList(discussionsList, uid, options.rid);\n\n\treturn {\n\t\tdiscussionsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
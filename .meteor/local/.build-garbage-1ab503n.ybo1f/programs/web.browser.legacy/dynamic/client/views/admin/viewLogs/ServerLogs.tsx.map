{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/viewLogs/ServerLogs.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/admin/viewLogs/ServerLogs.tsx","sourcesContent":["import { Box, Icon, Scrollable } from '@rocket.chat/fuselage';\nimport React, { useEffect, useRef, useState, useCallback, ReactElement } from 'react';\n\nimport { Serialized } from '../../../../definition/Serialized';\nimport { useEndpoint, useStream } from '../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { ansispan } from './ansispan';\n\ntype StdOutLogEntry = {\n\tid: string;\n\tstring: string;\n\tts: Date;\n};\n\nconst compareEntries = (a: StdOutLogEntry, b: StdOutLogEntry): number => a.ts.getTime() - b.ts.getTime();\n\nconst unserializeEntry = ({ ts, ...entry }: Serialized<StdOutLogEntry>): StdOutLogEntry => ({\n\tts: new Date(ts),\n\t...entry,\n});\n\nconst ServerLogs = (): ReactElement => {\n\tconst [entries, setEntries] = useState<StdOutLogEntry[]>([]);\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst getStdoutQueue = useEndpoint('GET', 'stdout.queue');\n\tconst subscribeToStdout = useStream('stdout');\n\n\tuseEffect(() => {\n\t\tconst fetchLines = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst { queue } = await getStdoutQueue(undefined);\n\t\t\t\tsetEntries(queue.map(unserializeEntry).sort(compareEntries));\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t};\n\n\t\tfetchLines();\n\t}, [dispatchToastMessage, getStdoutQueue]);\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsubscribeToStdout('stdout', (entry: StdOutLogEntry) => {\n\t\t\t\tsetEntries((entries) => [...entries, entry]);\n\t\t\t}),\n\t\t[subscribeToStdout],\n\t);\n\n\tconst t = useTranslation();\n\n\tconst wrapperRef = useRef<HTMLElement>();\n\tconst atBottomRef = useRef<boolean>(false);\n\n\tconst [newLogsVisible, setNewLogsVisible] = useState(false);\n\n\tconst isAtBottom = useCallback((scrollThreshold = 0) => {\n\t\tconst wrapper = wrapperRef.current;\n\n\t\tif (!wrapper) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (wrapper.scrollTop + scrollThreshold >= wrapper.scrollHeight - wrapper.clientHeight) {\n\t\t\tsetNewLogsVisible(false);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}, []);\n\n\tconst sendToBottom = useCallback(() => {\n\t\tconst wrapper = wrapperRef.current;\n\n\t\tif (!wrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\twrapper.scrollTop = wrapper.scrollHeight - wrapper.clientHeight;\n\t\tsetNewLogsVisible(false);\n\t}, []);\n\n\tconst checkIfScrollIsAtBottom = useCallback(() => {\n\t\tatBottomRef.current = isAtBottom(100);\n\t}, [isAtBottom]);\n\n\tconst sendToBottomIfNecessary = useCallback(() => {\n\t\tif (atBottomRef.current === true && isAtBottom() !== true) {\n\t\t\tsendToBottom();\n\t\t} else if (atBottomRef.current === false) {\n\t\t\tsetNewLogsVisible(true);\n\t\t}\n\t}, [isAtBottom, sendToBottom]);\n\n\tuseEffect(() => {\n\t\tconst wrapper = wrapperRef.current;\n\n\t\tif (!wrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (window.MutationObserver) {\n\t\t\tconst observer = new MutationObserver((mutations) => {\n\t\t\t\tmutations.forEach(() => {\n\t\t\t\t\tsendToBottomIfNecessary();\n\t\t\t\t});\n\t\t\t});\n\t\t\tobserver.observe(wrapper, { childList: true });\n\n\t\t\treturn (): void => {\n\t\t\t\tobserver.disconnect();\n\t\t\t};\n\t\t}\n\n\t\tconst handleSubtreeModified = (): void => {\n\t\t\tsendToBottomIfNecessary();\n\t\t};\n\t\twrapper.addEventListener('DOMSubtreeModified', handleSubtreeModified);\n\n\t\treturn (): void => {\n\t\t\twrapper.removeEventListener('DOMSubtreeModified', handleSubtreeModified);\n\t\t};\n\t}, [sendToBottomIfNecessary]);\n\n\tuseEffect(() => {\n\t\tconst handleWindowResize = (): void => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsendToBottomIfNecessary();\n\t\t\t}, 100);\n\t\t};\n\n\t\twindow.addEventListener('resize', handleWindowResize);\n\n\t\treturn (): void => {\n\t\t\twindow.removeEventListener('resize', handleWindowResize);\n\t\t};\n\t}, [sendToBottomIfNecessary]);\n\n\tconst handleWheel = useCallback(() => {\n\t\tatBottomRef.current = false;\n\t\tsetTimeout(() => {\n\t\t\tcheckIfScrollIsAtBottom();\n\t\t}, 100);\n\t}, [checkIfScrollIsAtBottom]);\n\n\tconst handleTouchStart = (): void => {\n\t\tatBottomRef.current = false;\n\t};\n\n\tconst handleTouchEnd = useCallback(() => {\n\t\tsetTimeout(() => {\n\t\t\tcheckIfScrollIsAtBottom();\n\t\t}, 100);\n\t}, [checkIfScrollIsAtBottom]);\n\n\tconst handleScroll = useCallback(() => {\n\t\tatBottomRef.current = false;\n\t\tsetTimeout(() => {\n\t\t\tcheckIfScrollIsAtBottom();\n\t\t}, 100);\n\t}, [checkIfScrollIsAtBottom]);\n\n\tconst handleClick = useCallback(() => {\n\t\tatBottomRef.current = true;\n\t\tsendToBottomIfNecessary();\n\t}, [sendToBottomIfNecessary]);\n\n\treturn (\n\t\t<Box width='full' height='full' overflow='hidden' position='relative' display='flex' marginBlock='x8'>\n\t\t\t<Scrollable vertical>\n\t\t\t\t<Box\n\t\t\t\t\tref={wrapperRef}\n\t\t\t\t\tdisplay='flex'\n\t\t\t\t\tflexDirection='column'\n\t\t\t\t\tpadding='x8'\n\t\t\t\t\tflexGrow={1}\n\t\t\t\t\tfontFamily='mono'\n\t\t\t\t\tcolor='alternative'\n\t\t\t\t\tbackgroundColor='neutral-800'\n\t\t\t\t\tstyle={{ wordBreak: 'break-all' }}\n\t\t\t\t\tonWheel={handleWheel}\n\t\t\t\t\tonTouchStart={handleTouchStart}\n\t\t\t\t\tonTouchEnd={handleTouchEnd}\n\t\t\t\t\tonScroll={handleScroll}\n\t\t\t\t>\n\t\t\t\t\t{entries.sort(compareEntries).map(({ string }, i) => (\n\t\t\t\t\t\t<span key={i} dangerouslySetInnerHTML={{ __html: ansispan(string) }} />\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t</Scrollable>\n\t\t\t<Box\n\t\t\t\tposition='absolute'\n\t\t\t\tinsetBlockEnd='x8'\n\t\t\t\tinsetInlineStart='50%'\n\t\t\t\twidth='x132'\n\t\t\t\theight='x32'\n\t\t\t\tmarginInline='neg-x64'\n\t\t\t\tpaddingBlock='x8'\n\t\t\t\tfontScale='c1'\n\t\t\t\tborderRadius='full'\n\t\t\t\tcolor='primary-500'\n\t\t\t\tbackgroundColor='surface'\n\t\t\t\tonClick={handleClick}\n\t\t\t\ttextAlign='center'\n\t\t\t\tstyle={{\n\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\ttransition: 'transform 0.3s ease-out',\n\t\t\t\t\ttransform: newLogsVisible ? 'translateY(0)' : 'translateY(150%)',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Icon name='jump' size='x16' /> {t('New_logs')}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default ServerLogs;\n"]}
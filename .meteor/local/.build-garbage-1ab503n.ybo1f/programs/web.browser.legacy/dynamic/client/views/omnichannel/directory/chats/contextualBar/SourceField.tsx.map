{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAO,MAAO,KAAP,CAAa,uBAAb,EAAqC;AAAA;AAAA;AAAA;AAAA,CAArC,EAAqC,CAArC;AAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAc5C,IAAM,WAAW,GAAyB,gBAAa;AAAA,MAAV,IAAU,QAAV,IAAU;AACtD,MAAM,CAAC,GAAG,cAAc,EAAxB;AAEA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAL,CAAY,KAAZ,IAAqB,IAAI,CAAC,MAAL,CAAY,EAAjC,IAAuC,IAAI,CAAC,MAAL,CAAY,IAAtE,CAHsD,CAKtD;AACA;;AACA,MAAM,kBAAkB,GAOpB;AACH,UAAM,EAAE,CAAC,CAAC,UAAD,CADN;AAEH,SAAK,EAAE,CAAC,CAAC,OAAD,CAFL;AAGH,OAAG,EAAE,CAAC,CAAC,KAAD,CAHH;AAIH,OAAG,EAAE,IAAI,CAAC,MAAL,CAAY,KAAZ,IAAqB,CAAC,CAAC,oBAAD,CAJxB;AAKH,OAAG,EAAE,IAAI,CAAC,MAAL,CAAY,KAAZ,IAAqB,CAAC,CAAC,oBAAD,CALxB;AAMH,SAAK,EAAE,CAAC,CAAC,oBAAD;AANL,GAPJ;AAgBA,MAAM,uBAAuB,GAOzB;AACH,UAAM,EAAE,EADL;AAEH,SAAK,EAAE,IAAF,aAAE,IAAF,uBAAE,IAAI,CAAE,MAAN,CAAa,EAFjB;AAGH,OAAG,EAAE,CAAC,CAAC,UAAD,CAHH;AAIH,OAAG,EAAE,IAAI,CAAC,MAAL,CAAY,KAAZ,IAAqB,CAAC,CAAC,UAAD,CAJxB;AAKH,OAAG,EAAE,IAAI,CAAC,MAAL,CAAY,KAAZ,IAAqB,CAAC,CAAC,UAAD,CALxB;AAMH,SAAK,EAAE,CAAC,CAAC,UAAD;AANL,GAPJ;AAgBA,sBACC,oBAAC,KAAD,qBACC,oBAAC,KAAD,QAAQ,CAAC,CAAC,SAAD,CAAT,CADD,eAEC,oBAAC,IAAD,qBACC,oBAAC,GAAD;AAAK,WAAO,EAAC,MAAb;AAAoB,cAAU,EAAC;AAA/B,kBACC,oBAAC,mBAAD;AAAqB,QAAI,EAAE,IAA3B;AAAiC,QAAI,EAAC,KAAtC;AAA4C,aAAS,EAAC;AAAtD,IADD,eAEC,oBAAC,KAAD;AAAO,MAAE,EAAC,IAAV;AAAe,OAAG,EAAC;AAAnB,KACE,kBAAkB,CAAC,IAAI,CAAC,MAAL,CAAY,IAAb,CAAlB,IAAwC,UAD1C,CAFD,EAKE,uBAAuB,CAAC,IAAI,CAAC,MAAL,CAAY,IAAb,CALzB,CADD,CAFD,CADD;AAcA,CArDD;;AAdA,OAAO,aAAP,CAqEe,WArEf,E","file":"dynamic/client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx","sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport React, { FC } from 'react';\n\nimport { IOmnichannelRoom } from '../../../../../../definition/IRoom';\nimport { OmnichannelRoomIcon } from '../../../../../components/RoomIcon/OmnichannelRoomIcon';\nimport { useTranslation } from '../../../../../contexts/TranslationContext';\nimport Field from '../../../components/Field';\nimport Info from '../../../components/Info';\nimport Label from '../../../components/Label';\n\ntype SourceFieldProps = {\n\troom: IOmnichannelRoom;\n};\n\nconst SourceField: FC<SourceFieldProps> = ({ room }) => {\n\tconst t = useTranslation();\n\n\tconst roomSource = room.source.alias || room.source.id || room.source.type;\n\n\t// TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\n\t// so we don't have to write this object again and again\n\tconst defaultTypesLabels: {\n\t\twidget: string;\n\t\temail: string;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: t('Livechat'),\n\t\temail: t('Email'),\n\t\tsms: t('SMS'),\n\t\tapp: room.source.alias || t('Custom_Integration'),\n\t\tapi: room.source.alias || t('Custom_Integration'),\n\t\tother: t('Custom_Integration'),\n\t};\n\n\tconst defaultTypesVisitorData: {\n\t\twidget: string | undefined;\n\t\temail: string | undefined;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: '',\n\t\temail: room?.source.id,\n\t\tsms: t('External'),\n\t\tapp: room.source.label || t('External'),\n\t\tapi: room.source.label || t('External'),\n\t\tother: t('External'),\n\t};\n\n\treturn (\n\t\t<Field>\n\t\t\t<Label>{t('Channel')}</Label>\n\t\t\t<Info>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<OmnichannelRoomIcon room={room} size='x24' placement='default' />\n\t\t\t\t\t<Label mi='x8' mbe='0'>\n\t\t\t\t\t\t{defaultTypesLabels[room.source.type] || roomSource}\n\t\t\t\t\t</Label>\n\t\t\t\t\t{defaultTypesVisitorData[room.source.type]}\n\t\t\t\t</Box>\n\t\t\t</Info>\n\t\t</Field>\n\t);\n};\n\nexport default SourceField;\n"]}
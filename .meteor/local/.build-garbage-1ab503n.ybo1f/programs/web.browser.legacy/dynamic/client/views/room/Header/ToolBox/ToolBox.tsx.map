{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Header/ToolBox/ToolBox.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/room/Header/ToolBox/ToolBox.tsx","sourcesContent":["import { Menu, Option, MenuProps, Box } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { memo, ReactNode, useRef, ComponentProps, FC } from 'react';\n// import tinykeys from 'tinykeys';\n\n// used to open the menu option by keyboard\nimport { IRoom } from '../../../../../definition/IRoom';\nimport Header from '../../../../components/Header';\nimport { useLayout } from '../../../../contexts/LayoutContext';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport { ToolboxActionConfig, OptionRenderer } from '../../lib/Toolbox';\nimport { useToolboxContext } from '../../lib/Toolbox/ToolboxContext';\nimport { useTab, useTabBarOpen } from '../../providers/ToolboxProvider';\n\nconst renderMenuOption: OptionRenderer = ({ label: { title, icon }, ...props }: any): ReactNode => (\n\t<Option label={title} icon={icon} {...props} />\n);\n\ntype ToolBoxProps = {\n\tclassName?: ComponentProps<typeof Box>['className'];\n\troom?: IRoom;\n};\n\nconst ToolBox: FC<ToolBoxProps> = ({ className }) => {\n\tconst tab = useTab();\n\tconst openTabBar = useTabBarOpen();\n\tconst { isMobile } = useLayout();\n\tconst t = useTranslation();\n\tconst hiddenActionRenderers = useRef<{ [key: string]: OptionRenderer }>({});\n\n\tconst { actions: mapActions } = useToolboxContext();\n\n\tconst actions = (Array.from(mapActions.values()) as ToolboxActionConfig[]).sort((a, b) => (a.order || 0) - (b.order || 0));\n\tconst visibleActions = isMobile ? [] : actions.slice(0, 6);\n\n\tconst hiddenActions: MenuProps['options'] = Object.fromEntries(\n\t\t(isMobile ? actions : actions.slice(6)).map((item) => {\n\t\t\thiddenActionRenderers.current = {\n\t\t\t\t...hiddenActionRenderers.current,\n\t\t\t\t[item.id]: item.renderOption || renderMenuOption,\n\t\t\t};\n\t\t\treturn [\n\t\t\t\titem.id,\n\t\t\t\t{\n\t\t\t\t\tlabel: { title: t(item.title), icon: item.icon },\n\t\t\t\t\taction: (): void => {\n\t\t\t\t\t\topenTabBar(item.id);\n\t\t\t\t\t},\n\t\t\t\t\t...item,\n\t\t\t\t},\n\t\t\t] as any;\n\t\t}),\n\t);\n\n\tconst actionDefault = useMutableCallback((e) => {\n\t\tconst index = e.currentTarget.getAttribute('data-toolbox');\n\t\topenTabBar(actions[index].id);\n\t});\n\n\t// const open = useMutableCallback((index) => {\n\t// \topenTabBar(actions[index].id);\n\t// });\n\n\t// useEffect(() => {\n\t// \tif (!visibleActions.length) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst unsubscribe = tinykeys(window, Object.fromEntries(new Array(visibleActions.length).fill(true).map((_, index) => [`$mod+${ index + 1 }`, (): void => { open(index); }])));\n\n\t// \treturn (): void => {\n\t// \t\tunsubscribe();\n\t// \t};\n\t// }, [visibleActions.length, open]);\n\n\treturn (\n\t\t<>\n\t\t\t{visibleActions.map(({ renderAction, id, icon, title, action = actionDefault }, index) => {\n\t\t\t\tconst props = {\n\t\t\t\t\tid,\n\t\t\t\t\ticon,\n\t\t\t\t\t'title': t(title),\n\t\t\t\t\tclassName,\n\t\t\t\t\tindex,\n\t\t\t\t\t'info': id === tab?.id,\n\t\t\t\t\t'data-toolbox': index,\n\t\t\t\t\taction,\n\t\t\t\t\t'key': id,\n\t\t\t\t};\n\t\t\t\tif (renderAction) {\n\t\t\t\t\treturn renderAction(props);\n\t\t\t\t}\n\t\t\t\treturn <Header.ToolBoxAction {...props} />;\n\t\t\t})}\n\t\t\t{actions.length > 6 && (\n\t\t\t\t<Menu\n\t\t\t\t\ttiny={!isMobile}\n\t\t\t\t\ttitle={t('Options')}\n\t\t\t\t\tmaxHeight='initial'\n\t\t\t\t\tclassName={className}\n\t\t\t\t\taria-keyshortcuts='alt'\n\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\toptions={hiddenActions}\n\t\t\t\t\trenderItem={({ value, ...props }): ReactNode => value && hiddenActionRenderers.current[value](props)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default memo(ToolBox);\n"]}
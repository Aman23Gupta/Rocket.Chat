{"version":3,"sources":["meteor://ðŸ’»app/client/views/hooks/useMembersList.ts"],"names":[],"mappings":"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","file":"dynamic/client/views/hooks/useMembersList.ts","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nimport { IUser } from '../../../definition/IUser';\nimport { useEndpoint } from '../../contexts/ServerContext';\nimport { useScrollableRecordList } from '../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../lib/lists/RecordList';\nimport { getConfig } from '../../lib/utils/getConfig';\n\ntype MembersListOptions = {\n\trid: string;\n\ttype: 'all' | 'online';\n\tlimit: number;\n\tdebouncedText: string;\n\troomType: 'd' | 'p' | 'c';\n};\n\nconst endpointsByRoomType = {\n\td: 'im.members',\n\tp: 'groups.members',\n\tc: 'channels.members',\n} as const;\n\nexport const useMembersList = (\n\toptions: MembersListOptions,\n): {\n\tmembersList: RecordList<IUser>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst getMembers = useEndpoint('GET', endpointsByRoomType[options.roomType]);\n\tconst [membersList, setMembersList] = useState(() => new RecordList<IUser>());\n\tconst reload = useCallback(() => setMembersList(new RecordList<IUser>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { members, total } = await getMembers({\n\t\t\t\troomId: options.rid,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\t...(options.debouncedText && { filter: options.debouncedText }),\n\t\t\t\t...(options.type !== 'all' && { status: [options.type] }),\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: members.map((members: any) => {\n\t\t\t\t\tmembers._updatedAt = new Date(members._updatedAt);\n\t\t\t\t\treturn members;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getMembers, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tmembersList,\n\t\tfetchData,\n\t\tuseMemo(() => {\n\t\t\tconst filesListSize = getConfig('teamsChannelListSize');\n\t\t\treturn filesListSize ? parseInt(filesListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tmembersList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
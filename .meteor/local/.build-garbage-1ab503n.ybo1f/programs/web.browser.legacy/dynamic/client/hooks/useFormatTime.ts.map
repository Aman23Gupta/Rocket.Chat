{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useFormatTime.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAa;AAAA,eAAe;AAAA;AAAA;AAAf,CAAb;AAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM5B,IAAM,SAAS,GAAG,CAAC,QAAD,EAAW,MAAX,CAAlB;;AAEO,IAAM,aAAa,GAAG,YAA8C;AAC1E,MAAM,SAAS,GAAG,iBAAiB,CAAQ,WAAR,CAAnC;AACA,MAAM,MAAM,GAAG,UAAU,CAAC,oBAAD,CAAzB;AACA,MAAM,OAAO,GAAG,SAAS,KAAK,SAAd,GAA0B,SAAS,CAAC,SAAS,GAAG,CAAb,CAAnC,GAAqD,MAArE;AAEA,SAAO,WAAW,CACjB,UAAC,IAAD,EAAS;AACR,YAAQ,SAAR;AACC,WAAK,CAAL;AACA,WAAK,CAAL;AACC,eAAO,MAAM,CAAC,IAAD,CAAN,CAAa,MAAb,CAAoB,OAApB,CAAP;;AAED;AACC,eAAO,MAAM,CAAC,IAAD,CAAN,CAAa,MAAb,CAAoB,MAApB,CAAP;AANF;AAQA,GAVgB,EAWjB,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,CAXiB,CAAlB;AAaA,CAlBM,C","file":"dynamic/client/hooks/useFormatTime.ts","sourcesContent":["import moment from 'moment';\nimport { useCallback } from 'react';\n\nimport { useSetting } from '../contexts/SettingsContext';\nimport { useUserPreference } from '../contexts/UserContext';\n\nconst dayFormat = ['h:mm A', 'H:mm'] as const;\n\nexport const useFormatTime = (): ((input: moment.MomentInput) => string) => {\n\tconst clockMode = useUserPreference<1 | 2>('clockMode');\n\tconst format = useSetting('Message_TimeFormat') as string;\n\tconst sameDay = clockMode !== undefined ? dayFormat[clockMode - 1] : format;\n\n\treturn useCallback(\n\t\t(time) => {\n\t\t\tswitch (clockMode) {\n\t\t\t\tcase 1:\n\t\t\t\tcase 2:\n\t\t\t\t\treturn moment(time).format(sameDay);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn moment(time).format(format);\n\t\t\t}\n\t\t},\n\t\t[clockMode, format, sameDay],\n\t);\n};\n"]}
{"version":3,"sources":["meteor://ğŸ’»app/client/hooks/useEndpointUpload.js"],"names":["_regeneratorRuntime","module","link","default","v","export","useEndpointUpload","useCallback","useUpload","useToastMessageDispatch","endpoint","params","successMessage","sendData","dispatchToastMessage","args","data","promise","Promise","success","Error","status","type","message"],"mappings":";;;;;;;;AAAA,IAAIA,mBAAJ;;AAAwBC,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACC,SAAO,EAAC,UAASC,CAAT,EAAW;AAACJ,uBAAmB,GAACI,CAApB;AAAsB;AAA3C,CAAzC,EAAsF,CAAtF;AAAxBH,MAAM,CAACI,MAAP,CAAc;AAACC,mBAAiB,EAAC,YAAU;AAAC,WAAOA,iBAAP;AAAyB;AAAvD,CAAd;AAAwE,IAAIC,WAAJ;AAAgBN,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACK,aAAW,EAAC,UAASH,CAAT,EAAW;AAACG,eAAW,GAACH,CAAZ;AAAc;AAAvC,CAApB,EAA6D,CAA7D;AAAgE,IAAII,SAAJ;AAAcP,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACM,WAAS,EAAC,UAASJ,CAAT,EAAW;AAACI,aAAS,GAACJ,CAAV;AAAY;AAAnC,CAAxC,EAA6E,CAA7E;AAAgF,IAAIK,uBAAJ;AAA4BR,MAAM,CAACC,IAAP,CAAY,kCAAZ,EAA+C;AAACO,yBAAuB,EAAC,UAASL,CAAT,EAAW;AAACK,2BAAuB,GAACL,CAAxB;AAA0B;AAA/D,CAA/C,EAAgH,CAAhH;;AAK3Q,IAAME,iBAAiB,GAAG,UAACI,QAAD,EAA2C;AAAA,MAAhCC,MAAgC,uEAAvB,EAAuB;AAAA,MAAnBC,cAAmB;AAC3E,MAAMC,QAAQ,GAAGL,SAAS,CAACE,QAAD,CAA1B;AACA,MAAMI,oBAAoB,GAAGL,uBAAuB,EAApD;AAEA,SAAOF,WAAW;AACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0CAAUQ,IAAV;AAAUA,sBAAV;AAAA;;AAEMC,oBAFN,GAEaH,QAAQ,MAAR,UAASF,MAAT,SAAoBI,IAApB,EAFb;AAGQE,uBAHR,GAGkBD,IAAI,YAAYE,OAAhB,GAA0BF,IAA1B,GAAiCA,IAAI,CAACC,OAHxD;AAAA;AAAA,iDAKeA,OALf;;AAAA;AAKED,oBALF;;AAAA,oBAOOA,IAAI,CAACG,OAPZ;AAAA;AAAA;AAAA;;AAAA,sBAQS,IAAIC,KAAJ,CAAUJ,IAAI,CAACK,MAAf,CART;;AAAA;AAWET,8BAAc,IAAIE,oBAAoB,CAAC;AAAEQ,sBAAI,EAAE,SAAR;AAAmBC,yBAAO,EAAEX;AAA5B,iBAAD,CAAtC;AAXF,iDAaSI,IAbT;;AAAA;AAAA;AAAA;AAeEF,oCAAoB,CAAC;AAAEQ,sBAAI,EAAE,OAAR;AAAiBC,yBAAO;AAAxB,iBAAD,CAApB;AAfF,iDAgBS;AAAEJ,yBAAO,EAAE;AAAX,iBAhBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AADiB;AAAA,OAoBjB,CAACL,oBAAD,EAAuBH,MAAvB,EAA+BE,QAA/B,EAAyCD,cAAzC,CApBiB,CAAlB;AAsBA,CA1BM,C","file":"dynamic/client/hooks/useEndpointUpload.js","sourcesContent":["import { useCallback } from 'react';\n\nimport { useUpload } from '../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../contexts/ToastMessagesContext';\n\nexport const useEndpointUpload = (endpoint, params = {}, successMessage) => {\n\tconst sendData = useUpload(endpoint);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useCallback(\n\t\tasync (...args) => {\n\t\t\ttry {\n\t\t\t\tlet data = sendData(params, ...args);\n\t\t\t\tconst promise = data instanceof Promise ? data : data.promise;\n\n\t\t\t\tdata = await promise;\n\n\t\t\t\tif (!data.success) {\n\t\t\t\t\tthrow new Error(data.status);\n\t\t\t\t}\n\n\t\t\t\tsuccessMessage && dispatchToastMessage({ type: 'success', message: successMessage });\n\n\t\t\t\treturn data;\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\treturn { success: false };\n\t\t\t}\n\t\t},\n\t\t[dispatchToastMessage, params, sendData, successMessage],\n\t);\n};\n"]}
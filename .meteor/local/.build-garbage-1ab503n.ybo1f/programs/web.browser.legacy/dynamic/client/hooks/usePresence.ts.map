{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/usePresence.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,aAAe,cAAQ;AAAA;AAAA;AAAvB,CAAT;AAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAczB,IAAM,WAAW,GAAG,UAAC,GAAD,EAA0C;AACpE,MAAM,YAAY,GAAG,OAAO,CAC3B;AAAA,WAAO;AACN,qBAAe,EAAE;AAAA,eAAiC,GAAG,GAAG,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAmB,GAAnB,CAAH,GAA6B,SAAjE;AAAA,OADX;AAEN,eAAS,EAAE,UAAC,QAAD,EAAuB;AACjC,WAAG,IAAI,QAAQ,CAAC,MAAT,CAAgB,GAAhB,EAAqB,QAArB,CAAP;AACA,eAAO,YAAW;AACjB,aAAG,IAAI,QAAQ,CAAC,IAAT,CAAc,GAAd,EAAmB,QAAnB,CAAP;AACA,SAFD;AAGA;AAPK,KAAP;AAAA,GAD2B,EAU3B,CAAC,GAAD,CAV2B,CAA5B;AAaA,SAAO,eAAe,CAAC,YAAD,CAAtB;AACA,CAfM,C","file":"dynamic/client/hooks/usePresence.ts","sourcesContent":["import { useMemo } from 'react';\nimport { useSubscription } from 'use-subscription';\n\nimport { Presence, UserPresence } from '../lib/presence';\n\ntype Presence = 'online' | 'offline' | 'busy' | 'away' | 'loading';\n\n/**\n * Hook to fetch and subscribe users presence\n *\n * @param uid - User Id\n * @returns UserPresence\n * @public\n */\nexport const usePresence = (uid: string): UserPresence | undefined => {\n\tconst subscription = useMemo(\n\t\t() => ({\n\t\t\tgetCurrentValue: (): UserPresence | undefined => (uid ? Presence.store.get(uid) : undefined),\n\t\t\tsubscribe: (callback: any): any => {\n\t\t\t\tuid && Presence.listen(uid, callback);\n\t\t\t\treturn (): void => {\n\t\t\t\t\tuid && Presence.stop(uid, callback);\n\t\t\t\t};\n\t\t\t},\n\t\t}),\n\t\t[uid],\n\t);\n\n\treturn useSubscription(subscription);\n};\n"]}
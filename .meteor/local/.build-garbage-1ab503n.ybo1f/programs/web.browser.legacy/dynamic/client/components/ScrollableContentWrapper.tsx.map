{"version":3,"sources":["meteor://ðŸ’»app/client/components/ScrollableContentWrapper.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAAyC,8DAAgB;AAAA;AAAA;AAAA;AAAA,CAAhB,EAAgB,CAAhB;;AAAgB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzD;AAAS,MAA0B,KAA1B,CAAgC,eAAhC,EAAgD;AAAA;AAAA;AAAA;AAAA,CAAhD,EAAgD,CAAhD;AAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGzD,IAAM,YAAY,GAAG;AACpB,OAAK,EAAE,MADa;AAEpB,QAAM,EAAE,MAFY;AAGpB,UAAQ,EAAE,CAHU;AAIpB,YAAU,EAAE,WAJQ;AAKpB,WAAS,EAAE;AALS,CAArB;AAiBA,IAAM,wBAAwB,gBAAG,UAAU;AAAqC,WAAS,gBAAT,OAE/E,GAF+E,EAE5E;AAAA,QADD,QACC,QADD,QACC;AAAA,QADS,KACT,QADS,KACT;AAAA,QADgB,QAChB,QADgB,QAChB;AAAA,QAD0B,SAC1B,QAD0B,SAC1B;AAAA,QADqC,UACrC,QADqC,UACrC;AAEH,QAAM,eAAe,GAAG,OAAO,CAAC;AAAA,6CAAY,KAAZ,GAAsB,YAAtB;AAAA,KAAD,EAAwC,CAAC,KAAD,CAAxC,CAA/B;AAEA,wBACC,oBAAC,UAAD;AACC,cAAQ,MADT;AAEC,qBAAe,EAAE,IAFlB;AAGC,sBAAgB,EAAE,GAHnB;AAIC,WAAK,EAAE,eAJR;AAKC,mBAAa,EAAE,QALhB;AAMC,gBAAU,EAAE,UANb;AAOC,2BAAqB,EACpB,SAAS,GAAG,SAAH,GAAe,UAAC,KAAD;AAAA,4BAAyB,wCAAS,KAAT;AAAgB,mBAAS,EAAC,kBAA1B;AAA6C,eAAK,EAAE;AAAE,mBAAO,EAAE;AAAX;AAApD,WAAzB;AAAA,OAR1B;AAUC,yBAAmB,EAAE;AAAA,YAAG,KAAH,SAAG,KAAH;AAAA,YAAa,KAAb;;AAAA,4BACpB,wCAAS,KAAT;AAAgB,eAAK,kCAAO,KAAP;AAAc,2BAAe,EAAE,oBAA/B;AAAqD,wBAAY,EAAE;AAAnE;AAArB,WADoB;AAAA,OAVtB;AAaC,cAAQ,EAAE,QAbX;AAcC,SAAG,EAAE,UAAC,IAAD,EAAe;AACnB,YAAI,GAAG,IAAI,IAAX,EAAiB;AAChB,cAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;AAAA;;AAC9B,eAAG,eAAC,IAAI,CAAC,IAAN,mDAAc,IAAd,CAAH;AACA;AACA;;AAEA,aAAiD,CAAC,OAAlD,GAA4D,IAAI,CAAC,IAAjE;AACD;AACD;AAvBF,MADD;AA2BA;;AAjC0C,SAA8C,gBAA9C;AAAA,IAA3C;AApBA,OAAO,aAAP,eAuDe,IAAI,CAAC,wBAAD,CAvDnB,E","file":"dynamic/client/components/ScrollableContentWrapper.tsx","sourcesContent":["import { Scrollbars, ScrollValues } from 'rc-scrollbars';\nimport React, { MutableRefObject, CSSProperties, useMemo, memo, forwardRef, ReactNode, ReactElement } from 'react';\n\nconst styleDefault = {\n\twidth: '100%',\n\theight: '100%',\n\tflexGrow: 1,\n\twillChange: 'transform',\n\toverflowY: 'hidden',\n};\n\nexport type CustomScrollbarsProps = {\n\toverflowX?: boolean;\n\tstyle?: CSSProperties;\n\tchildren?: ReactNode;\n\tonScroll?: (values: ScrollValues) => void;\n\trenderView?: typeof Scrollbars.defaultProps.renderView;\n\trenderTrackHorizontal?: typeof Scrollbars.defaultProps.renderTrackHorizontal;\n};\n\nconst ScrollableContentWrapper = forwardRef<HTMLElement, CustomScrollbarsProps>(function WrappedComponent(\n\t{ children, style, onScroll, overflowX, renderView },\n\tref,\n) {\n\tconst scrollbarsStyle = useMemo(() => ({ ...style, ...styleDefault }), [style]) as CSSProperties;\n\n\treturn (\n\t\t<Scrollbars\n\t\t\tautoHide\n\t\t\tautoHideTimeout={2000}\n\t\t\tautoHideDuration={500}\n\t\t\tstyle={scrollbarsStyle}\n\t\t\tonScrollFrame={onScroll}\n\t\t\trenderView={renderView}\n\t\t\trenderTrackHorizontal={\n\t\t\t\toverflowX ? undefined : (props): ReactElement => <div {...props} className='track-horizontal' style={{ display: 'none' }} />\n\t\t\t}\n\t\t\trenderThumbVertical={({ style, ...props }): JSX.Element => (\n\t\t\t\t<div {...props} style={{ ...style, backgroundColor: 'rgba(0, 0, 0, 0.5)', borderRadius: '7px' }} />\n\t\t\t)}\n\t\t\tchildren={children}\n\t\t\tref={(sRef): void => {\n\t\t\t\tif (ref && sRef) {\n\t\t\t\t\tif (typeof ref === 'function') {\n\t\t\t\t\t\tref(sRef.view ?? null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t(ref as MutableRefObject<HTMLElement | undefined>).current = sRef.view;\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n});\n\nexport default memo(ScrollableContentWrapper);\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/components/Message/Attachments/ActionAttachtment.tsx"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAc;AAAA,kBAAQ,cAAmB;AAAA;AAAwB;AAAnD,CAAd;AAAiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAK1D,IAAM,gBAAgB,GAAgC;AAAA,MAAG,OAAH,QAAG,OAAH;AAAA,sBAC5D,oBAAC,WAAD;AAAa,MAAE,EAAC,IAAhB;AAA4B,SAAK,EAAE;AAAnC,KACE,OAAO,CACN,MADD,CAEC;AAAA,QAAG,IAAH,SAAG,IAAH;AAAA,QAA6B,eAA7B,SAAS,kBAAT;AAAA,QAA8C,GAA9C,SAA8C,GAA9C;AAAA,QAA8D,KAA9D,SAAmD,SAAnD;AAAA,QAAqE,IAArE,SAAqE,IAArE;AAAA,WACC,IAAI,KAAK,QAAT,KAAsB,KAAK,IAAI,IAA/B,MAAyC,GAAG,IAAI,eAAhD,CADD;AAAA,GAFD,EAKC,GALD,CAKK,iBAAmG,KAAnG,EAA4G;AAAA,QAAzG,IAAyG,SAAzG,IAAyG;AAAA,QAAnG,GAAmG,SAAnG,GAAmG;AAAA,QAA9F,KAA8F,SAA9F,KAA8F;AAAA,QAAvF,GAAuF,SAAvF,GAAuF;AAAA,sCAAlF,mBAAkF;AAAA,QAA7D,cAA6D,sCAA5C,aAA4C;AAAA,QAAlB,KAAkB,SAA7B,SAA6B;AAChH,QAAM,OAAO,GAAG,KAAK,gBAAG,oBAAC,GAAD;AAAK,QAAE,EAAC,KAAR;AAAc,SAAG,EAAE,KAAnB;AAA0B,eAAS,EAAE;AAArC,MAAH,GAAkD,IAAvE;;AACA,QAAI,GAAJ,EAAS;AACR,0BACC,oBAAC,MAAD;AAAQ,UAAE,EAAC,GAAX;AAAe,YAAI,EAAE,GAArB;AAA0B,cAAM,EAAC,QAAjC;AAA0C,WAAG,EAAC,qBAA9C;AAAoE,WAAG,EAAE,KAAzE;AAAgF,aAAK;AAArF,SACE,OADF,CADD;AAKA;;AACD,wBACC,oBAAC,MAAD;AAAQ,eAAS,uBAAqB,cAAtC;AAAwD,SAAG,EAAE,KAA7D;AAAoE,WAAK,MAAzE;AAA0E,WAAK,EAAE,GAAjF;AAAsF,QAAE,EAAE;AAA1F,OACE,OADF,CADD;AAKA,GAnBD,CADF,CAD4D;AAAA,CAAtD,C","file":"dynamic/client/components/Message/Attachments/ActionAttachtment.tsx","sourcesContent":["import { Box, Button, ButtonGroup } from '@rocket.chat/fuselage';\nimport React, { FC } from 'react';\n\nimport { MessageAttachmentAction } from '../../../../definition/IMessage/MessageAttachment/MessageAttachmentAction';\n\nexport const ActionAttachment: FC<MessageAttachmentAction> = ({ actions }) => (\n\t<ButtonGroup mb='x4' {...({ small: true } as any)}>\n\t\t{actions\n\t\t\t.filter(\n\t\t\t\t({ type, msg_in_chat_window: msgInChatWindow, url, image_url: image, text }) =>\n\t\t\t\t\ttype === 'button' && (image || text) && (url || msgInChatWindow),\n\t\t\t)\n\t\t\t.map(({ text, url, msgId, msg, msg_processing_type: processingType = 'sendMessage', image_url: image }, index) => {\n\t\t\t\tconst content = image ? <Box is='img' src={image} maxHeight={200} /> : text;\n\t\t\t\tif (url) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Button is='a' href={url} target='_blank' rel='noopener noreferrer' key={index} small>\n\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<Button className={`js-actionButton-${processingType}`} key={index} small value={msg} id={msgId}>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t})}\n\t</ButtonGroup>\n);\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/components/Omnichannel/hooks/useDepartmentsList.ts"],"names":[],"mappings":"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","file":"dynamic/client/components/Omnichannel/hooks/useDepartmentsList.ts","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { ILivechatDepartmentRecord } from '../../../../definition/ILivechatDepartmentRecord';\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype DepartmentsListOptions = {\n\tfilter: string;\n\tdepartmentId?: string;\n\tonlyMyDepartments?: boolean;\n\thaveAll?: boolean;\n\thaveNone?: boolean;\n\texcludeDepartmentId?: string;\n};\n\nexport const useDepartmentsList = (\n\toptions: DepartmentsListOptions,\n): {\n\titemsList: RecordList<ILivechatDepartmentRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatDepartmentRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatDepartmentRecord>()), []);\n\tconst endpoint = 'livechat/department';\n\n\tconst getDepartments = useEndpoint('GET', endpoint);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { departments, total } = await getDepartments({\n\t\t\t\tonlyMyDepartments: `${!!options.onlyMyDepartments}`,\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t\texcludeDepartmentId: options.excludeDepartmentId,\n\t\t\t});\n\n\t\t\tconst items = departments\n\t\t\t\t.filter((department) => {\n\t\t\t\t\tif (options.departmentId && department._id === options.departmentId) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.map((department: any) => {\n\t\t\t\t\tdepartment._updatedAt = new Date(department._updatedAt);\n\t\t\t\t\tdepartment.label = department.name;\n\t\t\t\t\tdepartment.value = { value: department._id, label: department.name };\n\t\t\t\t\treturn department;\n\t\t\t\t});\n\n\t\t\toptions.haveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: { value: 'all', label: t('All') },\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\toptions.haveNone &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('None'),\n\t\t\t\t\tvalue: { value: '', label: t('None') },\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: options.departmentId ? total - 1 : total,\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tgetDepartments,\n\t\t\toptions.departmentId,\n\t\t\toptions.filter,\n\t\t\toptions.haveAll,\n\t\t\toptions.onlyMyDepartments,\n\t\t\toptions.haveNone,\n\t\t\toptions.excludeDepartmentId,\n\t\t\tt,\n\t\t],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/components/RoomIcon/RoomIcon.tsx"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAa;AAAE,UAAM;AAAA;AAAwB;AAAhC,CAAb;AAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOtC,IAAM,QAAQ,GAKhB,gBAAsC;AAAA,MAAnC,IAAmC,QAAnC,IAAmC;AAAA,uBAA7B,IAA6B;AAAA,MAA7B,IAA6B,0BAAtB,KAAsB;AAAA,MAAf,SAAe,QAAf,SAAe;;AAC1C,MAAI,IAAI,CAAC,IAAT,EAAe;AACd,wBAAO,oBAAC,IAAD;AAAM,UAAI,EAAC,SAAX;AAAqB,UAAI,EAAE;AAA3B,MAAP;AACA;;AAED,MAAI,IAAI,CAAC,QAAT,EAAmB;AAClB,wBAAO,oBAAC,IAAD;AAAM,UAAI,EAAE,IAAI,CAAC,CAAL,KAAW,GAAX,GAAiB,WAAjB,GAA+B,MAA3C;AAAmD,UAAI,EAAE;AAAzD,MAAP;AACA;;AAED,MAAI,iBAAiB,CAAC,IAAD,CAArB,EAA6B;AAC5B,wBAAO,oBAAC,mBAAD;AAAqB,eAAS,EAAE,SAAhC;AAA2C,UAAI,EAAE,IAAjD;AAAuD,UAAI,EAAE;AAA7D,MAAP;AACA;;AACD,MAAI,mBAAmB,CAAC,IAAD,CAAvB,EAA+B;AAC9B,QAAI,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,CAApC,EAAuC;AACtC,0BAAO,oBAAC,IAAD;AAAM,YAAI,EAAC,SAAX;AAAqB,YAAI,EAAE;AAA3B,QAAP;AACA;;AACD,QAAI,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,CAApC,EAAuC;AACtC,0BAAO,oBAAC,kBAAD;AAAoB,WAAG,EAAE,IAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,UAAC,GAAD;AAAA,iBAAS,GAAG,KAAK,IAAI,CAAC,CAAL,CAAO,GAAxB;AAAA,SAAjB,EAA8C,CAA9C,KAAoD,IAAI,CAAC,CAAL,CAAO;AAApF,QAAP;AACA;;AACD,wBAAO,oBAAC,IAAD;AAAM,UAAI,EAAC,IAAX;AAAgB,UAAI,EAAE;AAAtB,MAAP;AACA;;AAED,UAAQ,IAAI,CAAC,CAAb;AACC,SAAK,GAAL;AACC,0BAAO,oBAAC,IAAD;AAAM,YAAI,EAAC,cAAX;AAA0B,YAAI,EAAE;AAAhC,QAAP;;AACD,SAAK,GAAL;AACC,0BAAO,oBAAC,IAAD;AAAM,YAAI,EAAC,MAAX;AAAkB,YAAI,EAAE;AAAxB,QAAP;;AACD;AACC,aAAO,IAAP;AANF;AAQA,CAnCM,C","file":"dynamic/client/components/RoomIcon/RoomIcon.tsx","sourcesContent":["import { Icon } from '@rocket.chat/fuselage';\nimport React, { ComponentProps, FC } from 'react';\n\nimport { IRoom, isDirectMessageRoom, isOmnichannelRoom } from '../../../definition/IRoom';\nimport { ReactiveUserStatus } from '../UserStatus';\nimport { OmnichannelRoomIcon } from './OmnichannelRoomIcon';\n\nexport const RoomIcon: FC<{\n\troom: IRoom;\n\tsize: ComponentProps<typeof Icon>['size'];\n\thighlighted?: boolean;\n\tplacement: 'sidebar' | 'default';\n}> = ({ room, size = 'x16', placement }) => {\n\tif (room.prid) {\n\t\treturn <Icon name='baloons' size={size} />;\n\t}\n\n\tif (room.teamMain) {\n\t\treturn <Icon name={room.t === 'p' ? 'team-lock' : 'team'} size={size} />;\n\t}\n\n\tif (isOmnichannelRoom(room)) {\n\t\treturn <OmnichannelRoomIcon placement={placement} room={room} size={size} />;\n\t}\n\tif (isDirectMessageRoom(room)) {\n\t\tif (room.uids && room.uids.length > 2) {\n\t\t\treturn <Icon name='balloon' size={size} />;\n\t\t}\n\t\tif (room.uids && room.uids.length > 0) {\n\t\t\treturn <ReactiveUserStatus uid={room.uids.filter((uid) => uid !== room.u._id)[0] || room.u._id} />;\n\t\t}\n\t\treturn <Icon name='at' size={size} />;\n\t}\n\n\tswitch (room.t) {\n\t\tcase 'p':\n\t\t\treturn <Icon name='hashtag-lock' size={size} />;\n\t\tcase 'c':\n\t\t\treturn <Icon name='hash' size={size} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n"]}
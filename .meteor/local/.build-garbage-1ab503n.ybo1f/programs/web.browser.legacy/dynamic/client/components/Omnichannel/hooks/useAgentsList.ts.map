{"version":3,"sources":["meteor://ðŸ’»app/client/components/Omnichannel/hooks/useAgentsList.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAAsB,MAAQ,KAAR,CAAU,4BAAV,EAAwB;AAAA;AAAA;AAAA;AAAA,CAAxB,EAAwB,CAAxB;;AAAwB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9C,OAAO,MAAP,CAAS;AAAA,eAAa,cAAgB;AAAA,WAAQ,aAAR;AAAQ;AAArC,CAAT;AAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcvC,IAAM,aAAa,GAAG,UAC5B,OAD4B,EAOzB;AACH,MAAM,CAAC,GAAG,cAAc,EAAxB;;AACA,kBAAkC,QAAQ,CAAC;AAAA,WAAM,IAAI,UAAJ,EAAN;AAAA,GAAD,CAA1C;AAAA;AAAA,MAAO,SAAP;AAAA,MAAkB,YAAlB;;AACA,MAAM,MAAM,GAAG,WAAW,CAAC;AAAA,WAAM,YAAY,CAAC,IAAI,UAAJ,EAAD,CAAlB;AAAA,GAAD,EAA6D,EAA7D,CAA1B;AACA,MAAM,QAAQ,GAAG,sBAAjB;AAEA,MAAM,SAAS,GAAG,WAAW,CAAC,KAAD,EAAQ,QAAR,CAA7B;AAEA,uBAAqB,CAAC,YAAK;AAC1B,WAAO,IAAI,MAAM,EAAjB;AACA,GAFoB,EAElB,CAAC,OAAD,EAAU,MAAV,CAFkB,CAArB;AAIA,MAAM,SAAS,GAAG,WAAW;AAC5B,qBAAO,KAAP,EAAc,GAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACwC,SAAS,iCAC3C,OAAO,CAAC,IAAR,IAAgB;AAAE,sBAAI,EAAE,OAAO,CAAC;AAAhB,iBAD2B;AAE/C,wBAAM,EAAE,KAFuC;AAG/C,uBAAK,EAAE,GAAG,GAAG,KAHkC;AAI/C,sBAAI;AAJ2C,mBADjD;;AAAA;AAAA;AACgB,sBADhB,oBACS,KADT;AACwB,qBADxB,oBACwB,KADxB;AAQO,qBARP,GAQe,MAAM,CAAC,GAAP,CAAW,UAAC,KAAD,EAAe;AACvC,uBAAK,CAAC,UAAN,GAAmB,IAAI,IAAJ,CAAS,KAAK,CAAC,UAAf,CAAnB;AACA,uBAAK,CAAC,KAAN,GAAc,KAAK,CAAC,QAApB;AACA,uBAAK,CAAC,KAAN,GAAc,KAAK,CAAC,GAApB;AACA,yBAAO,KAAP;AACA,iBALa,CARf;AAeC,uBAAO,CAAC,OAAR,IACC,KAAK,CAAC,OAAN,CAAc;AACb,uBAAK,EAAE,CAAC,CAAC,KAAD,CADK;AAEb,uBAAK,EAAE,KAFM;AAGb,4BAAU,EAAE,IAAI,IAAJ;AAHC,iBAAd,CADD;AAfD,iDAsBQ;AACN,uBAAK,EAAL,KADM;AAEN,2BAAS,EAAE,KAAK,GAAG;AAFb,iBAtBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAD4B;AAAA,OA4B5B,CAAC,SAAD,EAAY,OAAO,CAAC,OAApB,EAA6B,OAAO,CAAC,IAArC,EAA2C,CAA3C,CA5B4B,CAA7B;;AA+BA,8BAA4C,uBAAuB,CAAC,SAAD,EAAY,SAAZ,EAAuB,EAAvB,CAAnE;AAAA,MAAQ,aAAR,yBAAQ,aAAR;AAAA,MAAuB,gBAAvB,yBAAuB,gBAAvB;;AAEA,SAAO;AACN,UAAM,EAAN,MADM;AAEN,aAAS,EAAT,SAFM;AAGN,iBAAa,EAAb,aAHM;AAIN,oBAAgB,EAAhB;AAJM,GAAP;AAMA,CA1DM,C","file":"dynamic/client/components/Omnichannel/hooks/useAgentsList.ts","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { ILivechatAgentRecord } from '../../../../definition/ILivechatAgentRecord';\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype AgentsListOptions = {\n\ttext: string;\n\thaveAll: boolean;\n};\n\nexport const useAgentsList = (\n\toptions: AgentsListOptions,\n): {\n\titemsList: RecordList<ILivechatAgentRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatAgentRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatAgentRecord>()), []);\n\tconst endpoint = 'livechat/users/agent';\n\n\tconst getAgents = useEndpoint('GET', endpoint);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { users: agents, total } = await getAgents({\n\t\t\t\t...(options.text && { text: options.text }),\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t});\n\n\t\t\tconst items = agents.map((agent: any) => {\n\t\t\t\tagent._updatedAt = new Date(agent._updatedAt);\n\t\t\t\tagent.label = agent.username;\n\t\t\t\tagent.value = agent._id;\n\t\t\t\treturn agent;\n\t\t\t});\n\n\t\t\toptions.haveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: 'all',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: total + 1,\n\t\t\t};\n\t\t},\n\t\t[getAgents, options.haveAll, options.text, t],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/components/SortList/ViewModeList.js"],"names":["ToggleSwitch","RadioButton","OptionTitle","module","link","v","React","useCallback","useMethod","useTranslation","useUserPreference","ListItem","style","textTransform","checkBoxStyle","paddingLeft","paddingInlineStart","ViewModeList","t","saveUserPreferences","useHandleChange","value","sidebarViewMode","sidebarDisplayAvatar","setToExtended","setToMedium","setToCondensed","handleChangeSidebarDisplayAvatar","exportDefault"],"mappings":"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","file":"dynamic/client/components/SortList/ViewModeList.js","sourcesContent":["import { ToggleSwitch, RadioButton, OptionTitle } from '@rocket.chat/fuselage';\nimport React, { useCallback } from 'react';\n\nimport { useMethod } from '../../contexts/ServerContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { useUserPreference } from '../../contexts/UserContext';\nimport ListItem from '../Sidebar/ListItem';\n\nconst style = {\n\ttextTransform: 'uppercase',\n};\n\nconst checkBoxStyle = {\n\tpaddingLeft: '24px',\n\tpaddingInlineStart: '24px',\n};\n\nfunction ViewModeList() {\n\tconst t = useTranslation();\n\n\tconst saveUserPreferences = useMethod('saveUserPreferences');\n\n\tconst useHandleChange = (value) => useCallback(() => saveUserPreferences({ sidebarViewMode: value }), [value]);\n\n\tconst sidebarViewMode = useUserPreference('sidebarViewMode', 'extended');\n\tconst sidebarDisplayAvatar = useUserPreference('sidebarDisplayAvatar', false);\n\n\tconst setToExtended = useHandleChange('extended');\n\tconst setToMedium = useHandleChange('medium');\n\tconst setToCondensed = useHandleChange('condensed');\n\n\tconst handleChangeSidebarDisplayAvatar = useCallback(\n\t\t() => saveUserPreferences({ sidebarDisplayAvatar: !sidebarDisplayAvatar }),\n\t\t[saveUserPreferences, sidebarDisplayAvatar],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<OptionTitle style={style}>{t('Display')}</OptionTitle>\n\t\t\t<ul className='rc-popover__list'>\n\t\t\t\t<ListItem\n\t\t\t\t\ticon={'extended-view'}\n\t\t\t\t\ttext={t('Extended')}\n\t\t\t\t\tinput={\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tstyle={checkBoxStyle}\n\t\t\t\t\t\t\tonChange={setToExtended}\n\t\t\t\t\t\t\tname='sidebarViewMode'\n\t\t\t\t\t\t\tvalue='extended'\n\t\t\t\t\t\t\tchecked={sidebarViewMode === 'extended'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListItem\n\t\t\t\t\ticon={'medium-view'}\n\t\t\t\t\ttext={t('Medium')}\n\t\t\t\t\tinput={\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tstyle={checkBoxStyle}\n\t\t\t\t\t\t\tonChange={setToMedium}\n\t\t\t\t\t\t\tname='sidebarViewMode'\n\t\t\t\t\t\t\tvalue='medium'\n\t\t\t\t\t\t\tchecked={sidebarViewMode === 'medium'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListItem\n\t\t\t\t\ticon={'condensed-view'}\n\t\t\t\t\ttext={t('Condensed')}\n\t\t\t\t\tinput={\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tstyle={checkBoxStyle}\n\t\t\t\t\t\t\tonChange={setToCondensed}\n\t\t\t\t\t\t\tname='sidebarViewMode'\n\t\t\t\t\t\t\tvalue='condensed'\n\t\t\t\t\t\t\tchecked={sidebarViewMode === 'condensed'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListItem\n\t\t\t\t\ticon={'user-rounded'}\n\t\t\t\t\ttext={t('Avatars')}\n\t\t\t\t\tinput={\n\t\t\t\t\t\t<ToggleSwitch\n\t\t\t\t\t\t\tstyle={checkBoxStyle}\n\t\t\t\t\t\t\tonChange={handleChangeSidebarDisplayAvatar}\n\t\t\t\t\t\t\tname='sidebarDisplayAvatar'\n\t\t\t\t\t\t\tchecked={sidebarDisplayAvatar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n\nexport default ViewModeList;\n"]}
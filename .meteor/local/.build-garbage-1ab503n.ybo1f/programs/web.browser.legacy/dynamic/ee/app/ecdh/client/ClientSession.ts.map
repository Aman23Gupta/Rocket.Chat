{"version":3,"sources":["meteor://ðŸ’»app/ee/app/ecdh/client/ClientSession.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAAwB,YAAY,4BAAZ,EAAa;AAAA;AAAA;AAAA;AAAA,CAAb,EAAa,CAAb;;AAAa;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAArC,OAAO,MAAP,CAAS;AAAA,eAAe,cAAa;AAAA;AAAA;AAA5B,CAAT;AAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;;IAExB,a;;;;;;;;;SACN,I;AAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACsB,KAAK,MAAL,EADtB;;AAAA;AACO,sBADP;AAAA;AAAA,iDAG6B,MAAM,CAAC,kBAAP,EAH7B;;AAAA;AAGO,6BAHP;AAAA;AAAA,iDAIwB,MAAM,CAAC,oBAAP,CAA4B,aAA5B,CAJxB;;AAAA;AAIC,qBAAK,SAJN;AAAA;AAAA,iDAKwB,MAAM,CAAC,oBAAP,CAA4B,aAA5B,CALxB;;AAAA;AAKC,qBAAK,SALN;AAAA,iDAOQ,KAAK,SAAL,CAAe,QAAf,CAAwB,KAAK,eAA7B,CAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAUM,Y;AAAN,0BAAmB,YAAnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACsB,KAAK,MAAL,EADtB;;AAAA;AACO,sBADP;AAAA;AAAA,iDAGwC,MAAM,CAAC,6BAAP,CACtC,KAAK,SADiC,EAEtC,KAAK,SAFiC,EAGtC,KAAK,mBAAL,CAAyB,YAAzB,CAHsC,CAHxC;;AAAA;AAAA;AAAA;AAGQ,0BAHR;AAGoB,0BAHpB;AASC,qBAAK,UAAL,GAAkB,UAAlB;AACA,qBAAK,UAAL,GAAkB,UAAlB;;AAVD;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;EAXkC,O","file":"dynamic/ee/app/ecdh/client/ClientSession.ts","sourcesContent":["import { Session } from '../Session';\n\nexport class ClientSession extends Session {\n\tasync init(): Promise<string> {\n\t\tconst sodium = await this.sodium();\n\n\t\tconst clientKeypair = await sodium.crypto_box_keypair();\n\t\tthis.secretKey = await sodium.crypto_box_secretkey(clientKeypair);\n\t\tthis.publicKey = await sodium.crypto_box_publickey(clientKeypair);\n\n\t\treturn this.publicKey.toString(this.stringFormatKey);\n\t}\n\n\tasync setServerKey(serverPublic: string): Promise<void> {\n\t\tconst sodium = await this.sodium();\n\n\t\tconst [decryptKey, encryptKey] = await sodium.crypto_kx_client_session_keys(\n\t\t\tthis.publicKey,\n\t\t\tthis.secretKey,\n\t\t\tthis.publicKeyFromString(serverPublic),\n\t\t);\n\n\t\tthis.decryptKey = decryptKey;\n\t\tthis.encryptKey = encryptKey;\n\t}\n}\n"]}
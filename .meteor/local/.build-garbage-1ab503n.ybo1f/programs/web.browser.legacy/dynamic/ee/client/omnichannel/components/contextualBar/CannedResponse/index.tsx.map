{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/components/contextualBar/CannedResponse/index.tsx"],"names":[],"mappings":"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","file":"dynamic/ee/client/omnichannel/components/contextualBar/CannedResponse/index.tsx","sourcesContent":["import { useDebouncedValue, useLocalStorage, useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { FC, memo, MouseEvent, useCallback, useMemo, useState } from 'react';\n\nimport { chatMessages } from '../../../../../../app/ui';\nimport { useSetModal } from '../../../../../../client/contexts/ModalContext';\nimport { useCurrentRoute, useRoute } from '../../../../../../client/contexts/RouterContext';\nimport { useRecordList } from '../../../../../../client/hooks/lists/useRecordList';\nimport { AsyncStatePhase } from '../../../../../../client/lib/asyncState';\nimport { useRoom } from '../../../../../../client/views/room/contexts/RoomContext';\nimport { useCannedResponseFilterOptions } from '../../../hooks/useCannedResponseFilterOptions';\nimport { useCannedResponseList } from '../../../hooks/useCannedResponseList';\nimport CreateCannedResponse from '../../CannedResponse/modals';\nimport CannedResponseList from './CannedResponseList';\n\nexport const WrapCannedResponseList: FC<{ tabBar: any }> = ({ tabBar }) => {\n\tconst room = useRoom();\n\tconst [name] = useCurrentRoute();\n\tconst channelRoute = useRoute(name || '');\n\tconst setModal = useSetModal();\n\n\tconst options = useCannedResponseFilterOptions() as [string, string][];\n\n\tconst [text, setText] = useState('');\n\tconst [type, setType] = useLocalStorage('canned-response-list-type', 'all');\n\n\tconst handleTextChange = useCallback((event) => {\n\t\tsetText(event.currentTarget.value);\n\t}, []);\n\n\tconst debouncedText = useDebouncedValue(text, 400);\n\n\tconst { cannedList, loadMoreItems, reload } = useCannedResponseList(\n\t\tuseMemo(() => ({ filter: debouncedText, type }), [debouncedText, type]),\n\t);\n\tconst { phase, items, itemCount } = useRecordList(cannedList);\n\n\tconst onClickItem = useMutableCallback((data) => {\n\t\tconst { _id: context } = data;\n\n\t\tchannelRoute?.push({\n\t\t\tid: room._id,\n\t\t\ttab: 'canned-responses',\n\t\t\tcontext,\n\t\t});\n\t});\n\n\tconst onClickUse = (e: MouseEvent<HTMLOrSVGElement>, text: string): void => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tconst { input } = chatMessages[room._id];\n\n\t\tinput.value = text;\n\t\tinput.focus();\n\t};\n\n\tconst onClickCreate = (): void => {\n\t\tsetModal(<CreateCannedResponse reloadCannedList={reload} />);\n\t};\n\n\treturn (\n\t\t<CannedResponseList\n\t\t\tloadMoreItems={loadMoreItems}\n\t\t\tcannedItems={items}\n\t\t\titemCount={itemCount}\n\t\t\tonClose={tabBar.close}\n\t\t\tloading={phase === AsyncStatePhase.LOADING}\n\t\t\toptions={options}\n\t\t\ttext={text}\n\t\t\tsetText={handleTextChange}\n\t\t\ttype={type}\n\t\t\tsetType={setType}\n\t\t\tonClickUse={onClickUse}\n\t\t\tonClickItem={onClickItem}\n\t\t\tonClickCreate={onClickCreate}\n\t\t\treload={reload}\n\t\t/>\n\t);\n};\n\nexport default memo(WrapCannedResponseList);\n"]}
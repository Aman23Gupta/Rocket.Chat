{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/data/DownloadDataButton.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAAc,YAAc,gCAAd,EAA4C;AAAA;AAAA;AAAA;AAAA,CAA5C,EAA4C,CAA5C;;AAA4C;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAc,MAAc,KAAd,CAAoB,uBAApB,EAA4C;AAAA;AAAA;AAAA;AAAA,CAA5C,EAA4C,CAA5C;AAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkB1D,IAAM,kBAAkB,GAAG,gBAMoB;AAAA,MAL9C,cAK8C,QAL9C,cAK8C;AAAA,MAJ9C,OAI8C,QAJ9C,OAI8C;AAAA,MAH9C,aAG8C,QAH9C,aAG8C;AAAA,MAF9C,aAE8C,QAF9C,aAE8C;AAAA,MAD3C,KAC2C;;AAC9C,MAAM,CAAC,GAAG,cAAc,EAAxB;AACA,MAAM,oBAAoB,GAAG,uBAAuB,EAApD;;AAEA,MAAM,WAAW,GAAG,YAAW;AAC9B,QAAI,CAAC,aAAL,EAAoB;AACnB;AACA;;AAED,WAAO,CAAC,OAAR,CAAgB,aAAa,EAA7B,EACE,IADF,CACO,UAAC,IAAD,EAAS;AACd,UAAI,CAAC,IAAL,EAAW;AACV;AACA;;AAED,mBAAa,EAAE,OAAF,4BAAc,IAAd,IAAqB,cAArB,CAAb;AACA,KAPF,EAQE,KARF,CAQQ,UAAC,KAAD,EAAU;AAChB,0BAAoB,CAAC;AAAE,YAAI,EAAE,OAAR;AAAiB,eAAO,EAAE;AAA1B,OAAD,CAApB;AACA,KAVF;AAWA,GAhBD;;AAkBA,sBACC,oBAAC,YAAD;AACC,SAAK,MADN;AAEC,OAAG,EAAC,KAFL;AAGC,YAAQ,EAAE,CAAC,aAHZ;AAIC,WAAO,EAAE,WAJV;AAKC,kBAAY,CAAC,CAAC,eAAD,CALd;AAMC,QAAI,EAAC;AANN,KAOK,KAPL,EADD;AAWA,CAvCD;;AAlBA,OAAO,aAAP,CA2De,kBA3Df,E","file":"dynamic/ee/client/views/admin/engagementDashboard/data/DownloadDataButton.tsx","sourcesContent":["import { Box, ActionButton } from '@rocket.chat/fuselage';\nimport React, { ComponentProps, ReactElement } from 'react';\n\nimport { useToastMessageDispatch } from '../../../../../../client/contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../../../client/contexts/TranslationContext';\nimport { downloadCsvAs } from '../../../../../../client/lib/download';\n\ntype RowFor<THeaders extends readonly string[]> = readonly unknown[] & {\n\tlength: THeaders['length'];\n};\n\ntype DownloadDataButtonProps<THeaders extends readonly string[]> = {\n\tattachmentName: string;\n\theaders: RowFor<THeaders>;\n\tdataAvailable: boolean;\n\tdataExtractor: () => Promise<RowFor<THeaders>[] | undefined> | RowFor<THeaders>[] | undefined;\n} & Omit<ComponentProps<typeof Box>, 'attachmentName' | 'headers' | 'data'>;\n\nconst DownloadDataButton = <H extends readonly string[]>({\n\tattachmentName,\n\theaders,\n\tdataAvailable,\n\tdataExtractor,\n\t...props\n}: DownloadDataButtonProps<H>): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst handleClick = (): void => {\n\t\tif (!dataAvailable) {\n\t\t\treturn;\n\t\t}\n\n\t\tPromise.resolve(dataExtractor())\n\t\t\t.then((data) => {\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdownloadCsvAs([headers, ...data], attachmentName);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<ActionButton\n\t\t\tsmall\n\t\t\tmis='x16'\n\t\t\tdisabled={!dataAvailable}\n\t\t\tonClick={handleClick}\n\t\t\taria-label={t('Download_Info')}\n\t\t\ticon='download'\n\t\t\t{...props}\n\t\t/>\n\t);\n};\n\nexport default DownloadDataButton;\n"]}
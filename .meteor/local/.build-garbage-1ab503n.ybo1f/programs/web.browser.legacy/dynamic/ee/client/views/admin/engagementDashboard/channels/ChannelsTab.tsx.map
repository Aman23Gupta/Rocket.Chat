{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/channels/ChannelsTab.tsx"],"names":[],"mappings":";;;;;;;;AAAA;;AAAkB,MAAE,KAAF,CAAW,sCAAX,EAAoD;AAAA;AAAA,kBAAwB,IAAxB;AAAwB;AAAxB,CAApD,EAA4E,CAA5E;AAAlB,SAAO,IAAP,EAAY,OAAZ,EAAoB,UAApB,EAA6B,QAA7B,EAAyC,KAAzC,EAAyC,IAAzC;AAAmD,MAAO,KAAP,CAAa,uBAAb,EAAmB;AAAA,OAAuB,UAAC,CAAD,EAAC;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA,GAAxB;AAAwB;AAAA;AAAA;AAAxB,CAAnB,EAA2C,CAA3C;AAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAY9F,IAAM,WAAW,GAAG,YAAmB;AACtC,8BAAsC,sBAAsB,CAAC,aAAD,EAAgB,cAAhB,EAAgC,cAAhC,CAA5D;AAAA;AAAA,MAAO,MAAP;AAAA,MAAe,mBAAf;;AAEA,MAAM,CAAC,GAAG,cAAc,EAAxB;;AAEA,kBAA8B,QAAQ,CAAC,CAAD,CAAtC;AAAA;AAAA,MAAO,OAAP;AAAA,MAAgB,UAAhB;;AACA,mBAAwC,QAAQ,CAAgB,EAAhB,CAAhD;AAAA;AAAA,MAAO,YAAP;AAAA,MAAqB,eAArB;;AAEA,yBAAiB,eAAe,CAAC;AAChC,UAAM,EAAN,MADgC;AAEhC,UAAM,EAAE,OAFwB;AAGhC,SAAK,EAAE;AAHyB,GAAD,CAAhC;AAAA,MAAQ,IAAR,oBAAQ,IAAR;;AAMA,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAK;AAAA;;AAC7B,QAAI,CAAC,IAAL,EAAW;AACV;AACA;;AAED,WAAO,IAAP,aAAO,IAAP,yCAAO,IAAI,CAAE,QAAb,mDAAO,eAAgB,GAAhB,CAAoB;AAAA,2BAAG,IAAH;AAAA,UAAW,CAAX,aAAW,CAAX;AAAA,UAAc,IAAd,aAAc,IAAd;AAAA,UAAoB,SAApB,aAAoB,SAApB;AAAA,UAA+B,EAA/B,aAA+B,EAA/B;AAAA,UAAmC,UAAnC,aAAmC,UAAnC;AAAA,UAAiD,QAAjD,QAAiD,QAAjD;AAAA,UAA2D,gBAA3D,QAA2D,gBAA3D;AAAA,aAAmF;AAC7G,SAAC,EAAD,CAD6G;AAE7G,YAAI,EAAE,IAAI,KAAI,SAAJ,aAAI,SAAJ,uBAAI,SAAS,CAAE,IAAX,CAAgB,KAAhB,CAAJ,CAFmG;AAG7G,iBAAS,EAAE,EAHkG;AAI7G,iBAAS,EAAE,UAJkG;AAK7G,qBAAa,EAAE,QAL8F;AAM7G,yBAAiB,EAAE;AAN0F,OAAnF;AAAA,KAApB,CAAP;AAQA,GAbuB,EAarB,CAAC,IAAD,CAbqB,CAAxB;AAeA,sBACC,oBAAC,OAAD;AACC,UAAM,eACL,uDACC,oBAAC,cAAD,EAAoB,mBAApB,CADD,eAEC,oBAAC,kBAAD;AACC,oBAAc,uBAAoB,IAApB,aAAoB,IAApB,uBAAoB,IAAI,CAAE,KAA1B,eAAuC,IAAvC,aAAuC,IAAvC,uBAAuC,IAAI,CAAE,GAA7C,CADf;AAEC,aAAO,EAAE,CAAC,WAAD,EAAc,MAAd,EAAsB,UAAtB,EAAkC,kBAAlC,EAAsD,eAAtD,CAFV;AAGC,mBAAa,EAAE,CAAC,CAAC,IAHlB;AAIC,mBAAa,EAAE;AAAA;;AAAA,eACd,IADc,aACd,IADc,0CACd,IAAI,CAAE,QADQ,oDACd,gBAAgB,GAAhB,CAAoB;AAAA,iCAAG,IAAH;AAAA,cAAW,CAAX,cAAW,CAAX;AAAA,cAAc,IAAd,cAAc,IAAd;AAAA,cAAoB,SAApB,cAAoB,SAApB;AAAA,cAA+B,EAA/B,cAA+B,EAA/B;AAAA,cAAmC,UAAnC,cAAmC,UAAnC;AAAA,cAAiD,QAAjD,SAAiD,QAAjD;AAAA,iBAAgE,CACnF,CADmF,EAEnF,IAAI,KAAI,SAAJ,aAAI,SAAJ,uBAAI,SAAS,CAAE,IAAX,CAAgB,KAAhB,CAAJ,CAF+E,EAGnF,QAHmF,EAInF,UAJmF,EAKnF,EALmF,CAAhE;AAAA,SAApB,CADc;AAAA;AAJhB,MAFD;AAFF,kBAqBC,oBAAC,GAAD,QACE,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAtB,iBACA,oBAAC,IAAD;AAAM,aAAS,EAAC,IAAhB;AAAqB,SAAK,EAAC,MAA3B;AAAkC,SAAK,EAAE;AAAE,eAAS,EAAE;AAAb;AAAzC,KACE,CAAC,CAAC,eAAD,CADH,CAFF,EAME,CAAC,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAvB,kBACA,oBAAC,KAAD,qBACC,oBAAC,KAAD,CAAO,IAAP,qBACC,oBAAC,KAAD,CAAO,GAAP,qBACC,oBAAC,KAAD,CAAO,IAAP,QAAa,GAAb,CADD,eAEC,oBAAC,KAAD,CAAO,IAAP,QAAa,CAAC,CAAC,SAAD,CAAd,CAFD,eAGC,oBAAC,KAAD,CAAO,IAAP,QAAa,CAAC,CAAC,SAAD,CAAd,CAHD,eAIC,oBAAC,KAAD,CAAO,IAAP,QAAa,CAAC,CAAC,aAAD,CAAd,CAJD,eAKC,oBAAC,KAAD,CAAO,IAAP,QAAa,CAAC,CAAC,eAAD,CAAd,CALD,CADD,CADD,eAUC,oBAAC,KAAD,CAAO,IAAP,QACE,QADF,aACE,QADF,uBACE,QAAQ,CAAE,GAAV,CAAc,iBAAsE,CAAtE;AAAA,QAAG,CAAH,SAAG,CAAH;AAAA,QAAM,IAAN,SAAM,IAAN;AAAA,QAAY,SAAZ,SAAY,SAAZ;AAAA,QAAuB,SAAvB,SAAuB,SAAvB;AAAA,QAAkC,aAAlC,SAAkC,aAAlC;AAAA,QAAiD,iBAAjD,SAAiD,iBAAjD;AAAA,wBACd,oBAAC,KAAD,CAAO,GAAP;AAAW,SAAG,EAAE;AAAhB,oBACC,oBAAC,KAAD,CAAO,IAAP,QAAa,CAAC,GAAG,CAAjB,MADD,eAEC,oBAAC,KAAD,CAAO,IAAP,qBACC,oBAAC,OAAD;AAAS,eAAS,EAAC;AAAnB,OACG,CAAC,KAAK,GAAN,iBAAa,oBAAC,IAAD;AAAM,UAAI,EAAC;AAAX,MAAd,IAAsC,CAAC,KAAK,GAAN,iBAAa,oBAAC,IAAD;AAAM,UAAI,EAAC;AAAX,MAAnD,IAA6E,CAAC,KAAK,GAAN,iBAAa,oBAAC,IAAD;AAAM,UAAI,EAAC;AAAX,MAD5F,CADD,EAIE,IAJF,CAFD,eAQC,oBAAC,KAAD,CAAO,IAAP,QAAa,MAAM,CAAC,SAAD,CAAN,CAAkB,MAAlB,CAAyB,GAAzB,CAAb,CARD,eASC,oBAAC,KAAD,CAAO,IAAP,QAAa,MAAM,CAAC,SAAD,CAAN,CAAkB,MAAlB,CAAyB,GAAzB,CAAb,CATD,eAUC,oBAAC,KAAD,CAAO,IAAP,QACE,aADF,oBACiB,oBAAC,MAAD,QAAS,iBAAT,CADjB,CAVD,CADc;AAAA,GAAd,CADF,EAiBE,CAAC,QAAD,IACA,KAAK,CAAC,IAAN,CAAW;AAAE,UAAM,EAAE;AAAV,GAAX,EAA0B,UAAC,CAAD,EAAI,CAAJ;AAAA,wBACzB,oBAAC,KAAD,CAAO,GAAP;AAAW,SAAG,EAAE;AAAhB,oBACC,oBAAC,KAAD,CAAO,IAAP,qBACC,oBAAC,QAAD;AAAU,WAAK,EAAC;AAAhB,MADD,CADD,eAIC,oBAAC,KAAD,CAAO,IAAP,qBACC,oBAAC,QAAD;AAAU,WAAK,EAAC;AAAhB,MADD,CAJD,eAOC,oBAAC,KAAD,CAAO,IAAP,qBACC,oBAAC,QAAD;AAAU,WAAK,EAAC;AAAhB,MADD,CAPD,eAUC,oBAAC,KAAD,CAAO,IAAP,qBACC,oBAAC,QAAD;AAAU,WAAK,EAAC;AAAhB,MADD,CAVD,eAaC,oBAAC,KAAD,CAAO,IAAP,qBACC,oBAAC,QAAD;AAAU,WAAK,EAAC;AAAhB,MADD,CAbD,CADyB;AAAA,GAA1B,CAlBF,CAVD,CAPF,eAyDC,oBAAC,UAAD;AACC,WAAO,EAAE,OADV;AAEC,gBAAY,EAAE,YAFf;AAGC,qBAAiB,EAAE;AAAA,aAAc,CAAC,CAAC,iBAAD,CAAf;AAAA,KAHpB;AAIC,uBAAmB,EAAE;AAAA,UAAG,KAAH,SAAG,KAAH;AAAA,UAAU,OAAV,SAAU,OAAV;AAAA,UAAmB,YAAnB,SAAmB,YAAnB;AAAA,aACpB,CAAC,CAAC,oBAAD,EAAuB,OAAO,GAAG,CAAjC,EAAoC,IAAI,CAAC,GAAL,CAAS,OAAO,GAAG,YAAnB,EAAiC,KAAjC,CAApC,EAA6E,KAA7E,CADmB;AAAA,KAJtB;AAOC,SAAK,EAAE,KAAI,SAAJ,QAAI,WAAJ,gBAAI,CAAE,KAAN,KAAe,CAPvB;AAQC,qBAAiB,EAAE,eARpB;AASC,gBAAY,EAAE;AATf,IAzDD,CArBD,CADD;AA6FA,CA1HD;;AAZA,OAAO,aAAP,CAwIe,WAxIf,E","file":"dynamic/ee/client/views/admin/engagementDashboard/channels/ChannelsTab.tsx","sourcesContent":["import { Box, Icon, Margins, Pagination, Skeleton, Table, Tile } from '@rocket.chat/fuselage';\nimport moment from 'moment';\nimport React, { ReactElement, useMemo, useState } from 'react';\n\nimport Growth from '../../../../../../client/components/data/Growth';\nimport { useTranslation } from '../../../../../../client/contexts/TranslationContext';\nimport Section from '../Section';\nimport DownloadDataButton from '../data/DownloadDataButton';\nimport PeriodSelector from '../data/PeriodSelector';\nimport { usePeriodSelectorState } from '../data/usePeriodSelectorState';\nimport { useChannelsList } from './useChannelsList';\n\nconst ChannelsTab = (): ReactElement => {\n\tconst [period, periodSelectorProps] = usePeriodSelectorState('last 7 days', 'last 30 days', 'last 90 days');\n\n\tconst t = useTranslation();\n\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\n\tconst { data } = useChannelsList({\n\t\tperiod,\n\t\toffset: current,\n\t\tcount: itemsPerPage,\n\t});\n\n\tconst channels = useMemo(() => {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn data?.channels?.map(({ room: { t, name, usernames, ts, _updatedAt }, messages, diffFromLastWeek }) => ({\n\t\t\tt,\n\t\t\tname: name || usernames?.join(' Ã— '),\n\t\t\tcreatedAt: ts,\n\t\t\tupdatedAt: _updatedAt,\n\t\t\tmessagesCount: messages,\n\t\t\tmessagesVariation: diffFromLastWeek,\n\t\t}));\n\t}, [data]);\n\n\treturn (\n\t\t<Section\n\t\t\tfilter={\n\t\t\t\t<>\n\t\t\t\t\t<PeriodSelector {...periodSelectorProps} />\n\t\t\t\t\t<DownloadDataButton\n\t\t\t\t\t\tattachmentName={`Channels_start_${data?.start}_end_${data?.end}`}\n\t\t\t\t\t\theaders={['Room type', 'Name', 'Messages', 'Last Update Date', 'Creation Date']}\n\t\t\t\t\t\tdataAvailable={!!data}\n\t\t\t\t\t\tdataExtractor={(): unknown[][] | undefined =>\n\t\t\t\t\t\t\tdata?.channels?.map(({ room: { t, name, usernames, ts, _updatedAt }, messages }) => [\n\t\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\t\tname || usernames?.join(' Ã— '),\n\t\t\t\t\t\t\t\tmessages,\n\t\t\t\t\t\t\t\t_updatedAt,\n\t\t\t\t\t\t\t\tts,\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t>\n\t\t\t<Box>\n\t\t\t\t{channels && !channels.length && (\n\t\t\t\t\t<Tile fontScale='p1' color='info' style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t{t('No_data_found')}\n\t\t\t\t\t</Tile>\n\t\t\t\t)}\n\t\t\t\t{(!channels || channels.length) && (\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<Table.Head>\n\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t<Table.Cell>{'#'}</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>{t('Channel')}</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>{t('Created')}</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>{t('Last_active')}</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>{t('Messages_sent')}</Table.Cell>\n\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t</Table.Head>\n\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t{channels?.map(({ t, name, createdAt, updatedAt, messagesCount, messagesVariation }, i) => (\n\t\t\t\t\t\t\t\t<Table.Row key={i}>\n\t\t\t\t\t\t\t\t\t<Table.Cell>{i + 1}.</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t<Margins inlineEnd='x4'>\n\t\t\t\t\t\t\t\t\t\t\t{(t === 'd' && <Icon name='at' />) || (t === 'c' && <Icon name='lock' />) || (t === 'p' && <Icon name='hashtag' />)}\n\t\t\t\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>{moment(createdAt).format('L')}</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>{moment(updatedAt).format('L')}</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t{messagesCount} <Growth>{messagesVariation}</Growth>\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{!channels &&\n\t\t\t\t\t\t\t\tArray.from({ length: 5 }, (_, i) => (\n\t\t\t\t\t\t\t\t\t<Table.Row key={i}>\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Table.Body>\n\t\t\t\t\t</Table>\n\t\t\t\t)}\n\t\t\t\t<Pagination\n\t\t\t\t\tcurrent={current}\n\t\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\t\titemsPerPageLabel={(): string => t('Items_per_page:')}\n\t\t\t\t\tshowingResultsLabel={({ count, current, itemsPerPage }): string =>\n\t\t\t\t\t\tt('Showing_results_of', current + 1, Math.min(current + itemsPerPage, count), count)\n\t\t\t\t\t}\n\t\t\t\t\tcount={data?.total || 0}\n\t\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</Section>\n\t);\n};\n\nexport default ChannelsTab;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/additionalForms/CustomFieldsAdditionalForm.js"],"names":["Box","Field","TextInput","ToggleSwitch","Select","module","link","v","React","useMemo","useTranslation","CustomFieldsAdditionalForm","values","handlers","state","className","errors","t","type","required","defaultValue","options","isPublic","public","handleType","handleRequired","handleDefaultValue","handleOptions","handlePublic","optionsError","typeOptions","visibility","exportDefault"],"mappings":"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","file":"dynamic/ee/client/omnichannel/additionalForms/CustomFieldsAdditionalForm.js","sourcesContent":["import { Box, Field, TextInput, ToggleSwitch, Select } from '@rocket.chat/fuselage';\nimport React, { useMemo } from 'react';\n\nimport { useTranslation } from '../../../../client/contexts/TranslationContext';\n\nconst CustomFieldsAdditionalForm = ({ values = {}, handlers = {}, state, className, errors }) => {\n\tconst t = useTranslation();\n\n\tconst { type, required, defaultValue, options, public: isPublic } = values;\n\n\tconst { handleType, handleRequired, handleDefaultValue, handleOptions, handlePublic } = handlers;\n\n\tconst { optionsError } = errors;\n\n\tconst typeOptions = useMemo(\n\t\t() => [\n\t\t\t['input', t('Input')],\n\t\t\t['select', t('Select')],\n\t\t],\n\t\t[t],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Field className={className}>\n\t\t\t\t<Box display='flex' flexDirection='row'>\n\t\t\t\t\t<Field.Label htmlFor='required'>{t('Required')}</Field.Label>\n\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t<ToggleSwitch id='required' checked={required} onChange={handleRequired} />\n\t\t\t\t\t</Field.Row>\n\t\t\t\t</Box>\n\t\t\t</Field>\n\t\t\t<Field className={className}>\n\t\t\t\t<Field.Label>{t('Type')}</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<Select options={typeOptions} value={type} onChange={handleType} />\n\t\t\t\t</Field.Row>\n\t\t\t</Field>\n\t\t\t<Field className={className}>\n\t\t\t\t<Field.Label>{t('Default_value')}</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<TextInput value={defaultValue} onChange={handleDefaultValue} placeholder={t('Default_value')} />\n\t\t\t\t</Field.Row>\n\t\t\t</Field>\n\t\t\t<Field className={className}>\n\t\t\t\t<Field.Label>{t('Options')}</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<TextInput value={options} onChange={handleOptions} error={optionsError} disabled={type === 'input'} placeholder={t('Options')} />\n\t\t\t\t</Field.Row>\n\t\t\t\t<Field.Hint>{t('Livechat_custom_fields_options_placeholder')}</Field.Hint>\n\t\t\t\t{optionsError && <Field.Error>{optionsError}</Field.Error>}\n\t\t\t</Field>\n\t\t\t<Field className={className}>\n\t\t\t\t<Box display='flex' flexDirection='row'>\n\t\t\t\t\t<Field.Label htmlFor='public'>{t('Public')}</Field.Label>\n\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t<ToggleSwitch disabled={!state.visibility} id='public' checked={isPublic} onChange={handlePublic} />\n\t\t\t\t\t</Field.Row>\n\t\t\t\t</Box>\n\t\t\t\t<Field.Hint>{t('Livechat_custom_fields_public_description')}</Field.Hint>\n\t\t\t</Field>\n\t\t</>\n\t);\n};\n\nexport default CustomFieldsAdditionalForm;\n"]}
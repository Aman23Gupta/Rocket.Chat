{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/hooks/useCannedResponseList.ts"],"names":[],"mappings":"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","file":"dynamic/ee/client/omnichannel/hooks/useCannedResponseList.ts","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport { useEndpoint } from '../../../../client/contexts/ServerContext';\nimport { useScrollableRecordList } from '../../../../client/hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../client/hooks/useComponentDidUpdate';\nimport { CannedResponseList } from '../../../../client/lib/lists/CannedResponseList';\n\nexport const useCannedResponseList = (\n\toptions: any,\n): {\n\treload: () => void;\n\tcannedList: CannedResponseList;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [cannedList, setCannedList] = useState(() => new CannedResponseList(options));\n\tconst reload = useCallback(() => setCannedList(new CannedResponseList(options)), [options]);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tuseEffect(() => {\n\t\tif (cannedList.options !== options) {\n\t\t\tcannedList.updateFilters(options);\n\t\t}\n\t}, [cannedList, options]);\n\n\tconst getCannedResponses = useEndpoint('GET', 'canned-responses');\n\tconst getDepartments = useEndpoint('GET', 'livechat/department');\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { cannedResponses, total } = await getCannedResponses({\n\t\t\t\t...(options.filter && { text: options.filter }),\n\t\t\t\t...(options.type && ['global', 'user'].find((option) => option === options.type) && { scope: options.type }),\n\t\t\t\t...(options.type &&\n\t\t\t\t\t!['global', 'user', 'all'].find((option) => option === options.type) && {\n\t\t\t\t\t\tscope: 'department',\n\t\t\t\t\t\tdepartmentId: options.type,\n\t\t\t\t\t}),\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\n\t\t\tconst { departments } = await getDepartments({ text: '' });\n\n\t\t\treturn {\n\t\t\t\titems: cannedResponses.map((cannedResponse: any) => {\n\t\t\t\t\tif (cannedResponse.departmentId) {\n\t\t\t\t\t\tdepartments.forEach((department: any) => {\n\t\t\t\t\t\t\tif (cannedResponse.departmentId === department._id) {\n\t\t\t\t\t\t\t\tcannedResponse.departmentName = department.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tcannedResponse._updatedAt = new Date(cannedResponse._updatedAt);\n\t\t\t\t\tcannedResponse._createdAt = new Date(cannedResponse._createdAt);\n\t\t\t\t\treturn cannedResponse;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getCannedResponses, getDepartments, options.filter, options.type],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(cannedList, fetchData);\n\n\treturn {\n\t\treload,\n\t\tcannedList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
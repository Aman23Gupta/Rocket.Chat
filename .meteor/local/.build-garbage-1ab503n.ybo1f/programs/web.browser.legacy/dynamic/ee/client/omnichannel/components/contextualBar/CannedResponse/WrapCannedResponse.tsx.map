{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/components/contextualBar/CannedResponse/WrapCannedResponse.tsx"],"names":[],"mappings":";;;;;;;;AAAA,WAAO,IAAP;AAAc,MAAU,CAAiC,IAA3C,CAA2C,OAA3C,EAAwD;AAAC;AAAA;AAAA,GAAD;AAAC;AAAA;AAAA;AAAD,CAAxD,EAAyD,CAAzD;AAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOvE,IAAM,kBAAkB,GAKnB,gBAAwH;AAAA,6BAArH,UAAqH;AAAA,MAAvG,GAAuG,mBAAvG,GAAuG;AAAA,MAAlG,cAAkG,mBAAlG,cAAkG;AAAA,MAAlF,YAAkF,mBAAlF,YAAkF;AAAA,MAApE,QAAoE,mBAApE,QAAoE;AAAA,MAA1D,IAA0D,mBAA1D,IAA0D;AAAA,MAApD,KAAoD,mBAApD,KAAoD;AAAA,MAA7C,IAA6C,mBAA7C,IAA6C;AAAA,MAArC,WAAqC,QAArC,WAAqC;AAAA,MAAxB,UAAwB,QAAxB,UAAwB;AAAA,MAAZ,MAAY,QAAZ,MAAY;AAC5H,MAAM,QAAQ,GAAG,WAAW,EAA5B;;AACA,MAAM,WAAW,GAAG,YAAW;AAC9B,YAAQ,eAAC,oBAAC,oBAAD;AAAsB,UAAI,EAAE;AAAE,WAAG,EAAH,GAAF;AAAO,oBAAY,EAAZ,YAAP;AAAqB,gBAAQ,EAAR,QAArB;AAA+B,YAAI,EAAJ,IAA/B;AAAqC,aAAK,EAAL,KAArC;AAA4C,YAAI,EAAJ;AAA5C,OAA5B;AAAgF,sBAAgB,EAAE;AAAlG,MAAD,CAAR;AACA,GAFD;;AAIA,MAAM,oBAAoB,GAAG,aAAa,CAAC,2BAAD,CAA1C;AACA,MAAM,oBAAoB,GAAG,aAAa,CAAC,kCAAD,CAA1C;AAEA,MAAM,OAAO,GAAG,oBAAoB,IAAK,oBAAoB,IAAI,KAAK,KAAK,QAA3D,IAAwE,KAAK,KAAK,MAAlG;AAEA,sBACC,oBAAC,cAAD;AACC,WAAO,EAAE,OADV;AAEC,QAAI,EAAE;AACL,oBAAc,EAAd,cADK;AAEL,cAAQ,EAAR,QAFK;AAGL,UAAI,EAAJ,IAHK;AAIL,WAAK,EAAL,KAJK;AAKL,UAAI,EAAJ;AALK,KAFP;AASC,eAAW,EAAE,WATd;AAUC,eAAW,EAAE,WAVd;AAWC,cAAU,EAAE,UAAC,CAAD,EAAY;AACvB,gBAAU,CAAC,CAAD,EAAI,IAAJ,CAAV;AACA;AAbF,IADD;AAiBA,CAjCD;;AAPA,OAAO,aAAP,eA0Ce,IAAI,CAAC,kBAAD,CA1CnB,E","file":"dynamic/ee/client/omnichannel/components/contextualBar/CannedResponse/WrapCannedResponse.tsx","sourcesContent":["import React, { FC, memo, MouseEvent, MouseEventHandler } from 'react';\n\nimport { usePermission } from '../../../../../../client/contexts/AuthorizationContext';\nimport { useSetModal } from '../../../../../../client/contexts/ModalContext';\nimport CreateCannedResponse from '../../CannedResponse/modals';\nimport CannedResponse from './CannedResponse';\n\nconst WrapCannedResponse: FC<{\n\tcannedItem: any;\n\tonClickBack: MouseEventHandler<HTMLOrSVGElement>;\n\tonClickUse: (e: MouseEvent<HTMLOrSVGElement>, text: string) => void;\n\treload: () => void;\n}> = ({ cannedItem: { _id, departmentName, departmentId, shortcut, tags, scope, text }, onClickBack, onClickUse, reload }) => {\n\tconst setModal = useSetModal();\n\tconst onClickEdit = (): void => {\n\t\tsetModal(<CreateCannedResponse data={{ _id, departmentId, shortcut, tags, scope, text }} reloadCannedList={reload} />);\n\t};\n\n\tconst hasManagerPermission = usePermission('view-all-canned-responses');\n\tconst hasMonitorPermission = usePermission('save-department-canned-responses');\n\n\tconst canEdit = hasManagerPermission || (hasMonitorPermission && scope !== 'global') || scope === 'user';\n\n\treturn (\n\t\t<CannedResponse\n\t\t\tcanEdit={canEdit}\n\t\t\tdata={{\n\t\t\t\tdepartmentName,\n\t\t\t\tshortcut,\n\t\t\t\ttags,\n\t\t\t\tscope,\n\t\t\t\ttext,\n\t\t\t}}\n\t\t\tonClickBack={onClickBack}\n\t\t\tonClickEdit={onClickEdit}\n\t\t\tonClickUse={(e): void => {\n\t\t\t\tonClickUse(e, text);\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default memo(WrapCannedResponse);\n"]}
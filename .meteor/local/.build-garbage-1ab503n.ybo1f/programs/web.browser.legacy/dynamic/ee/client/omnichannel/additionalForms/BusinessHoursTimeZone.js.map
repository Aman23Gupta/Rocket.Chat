{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/additionalForms/BusinessHoursTimeZone.js"],"names":["SelectFiltered","Field","module","link","v","React","useMemo","useTranslation","useForm","useTimezoneNameList","getInitialData","data","name","BusinessHoursTimeZone","onChange","className","hasChanges","t","values","handlers","hasUnsavedChanges","handleName","timeZones","timeZonesOptions","map","exportDefault"],"mappings":"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","file":"dynamic/ee/client/omnichannel/additionalForms/BusinessHoursTimeZone.js","sourcesContent":["import { SelectFiltered, Field } from '@rocket.chat/fuselage';\nimport React, { useMemo } from 'react';\n\nimport { useTranslation } from '../../../../client/contexts/TranslationContext';\nimport { useForm } from '../../../../client/hooks/useForm';\nimport { useTimezoneNameList } from '../../../../client/hooks/useTimezoneNameList';\n\nconst getInitialData = (data = {}) => ({\n\tname: data ?? '',\n});\n\nconst BusinessHoursTimeZone = ({ onChange, data, className, hasChanges = () => {} }) => {\n\tconst t = useTranslation();\n\n\tconst { values, handlers, hasUnsavedChanges } = useForm(getInitialData(data));\n\n\tconst { name } = values;\n\tconst { handleName } = handlers;\n\n\tconst timeZones = useTimezoneNameList();\n\n\tconst timeZonesOptions = useMemo(() => timeZones.map((name) => [name, t(name)]), [t, timeZones]);\n\n\tonChange && onChange({ name });\n\thasChanges(hasUnsavedChanges);\n\n\treturn (\n\t\t<Field className={className}>\n\t\t\t<Field.Label>{t('Timezone')}</Field.Label>\n\t\t\t<Field.Row>\n\t\t\t\t<SelectFiltered options={timeZonesOptions} value={name} onChange={handleName} />\n\t\t\t</Field.Row>\n\t\t</Field>\n\t);\n};\n\nexport default BusinessHoursTimeZone;\n"]}
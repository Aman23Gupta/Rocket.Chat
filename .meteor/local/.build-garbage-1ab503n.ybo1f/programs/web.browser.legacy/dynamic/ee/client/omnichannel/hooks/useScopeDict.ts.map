{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/hooks/useScopeDict.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,cAAgB,cAAM;AAAA;AAAA;AAAtB,CAAT;AAA+B;AAAiD;AAAA;AAAA;AAAA;AAAA;;AAIzE,IAAM,YAAY,GAAG,UAAC,KAAD,EAA6C,cAA7C,EAAoG;AAC/H,MAAM,CAAC,GAAG,cAAc,EAAxB;AAEA,MAAM,IAAI,GAA2B;AACpC,UAAM,EAAE,CAAC,CAAC,QAAD,CAD2B;AAEpC,QAAI,EAAE,CAAC,CAAC,SAAD;AAF6B,GAArC;AAKA,SAAO,IAAI,CAAC,KAAD,CAAJ,IAAe,cAAtB;AACA,CATM,C","file":"dynamic/ee/client/omnichannel/hooks/useScopeDict.ts","sourcesContent":["import { useTranslation } from '../../../../client/contexts/TranslationContext';\nimport { ILivechatDepartment } from '../../../../definition/ILivechatDepartment';\nimport { IOmnichannelCannedResponse } from '../../../../definition/IOmnichannelCannedResponse';\n\nexport const useScopeDict = (scope: IOmnichannelCannedResponse['scope'], departmentName: ILivechatDepartment['name']): string => {\n\tconst t = useTranslation();\n\n\tconst dict: Record<string, string> = {\n\t\tglobal: t('Public'),\n\t\tuser: t('Private'),\n\t};\n\n\treturn dict[scope] || departmentName;\n};\n"]}
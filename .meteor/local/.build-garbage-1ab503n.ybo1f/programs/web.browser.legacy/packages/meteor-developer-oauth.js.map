{"version":3,"sources":["meteor://ðŸ’»app/packages/meteor-developer-oauth/meteor_developer_common.js","meteor://ðŸ’»app/packages/meteor-developer-oauth/meteor_developer_client.js"],"names":["MeteorDeveloperAccounts","_server","_config","options","developerAccountsServer","requestCredential","credentialRequestCompleteCallback","config","ServiceConfiguration","configurations","findOne","service","ConfigError","credentialToken","Random","secret","loginStyle","OAuth","_loginStyle","loginUrl","_stateParam","redirectUrl","clientId","details","userEmail","loginHint","encodeURIComponent","_redirectUri","launchLogin","loginService","popupOptions","width","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,uBAAuB,GAAG,EAA1B;AAEAA,uBAAuB,CAACC,OAAxB,GAAkC,wBAAlC,C,CAEA;AACA;;AACAD,uBAAuB,CAACE,OAAxB,GAAkC,UAAAC,OAAO,EAAI;AAC3C,MAAIA,OAAO,CAACC,uBAAZ,EAAqC;AACnCJ,2BAAuB,CAACC,OAAxB,GAAkCE,OAAO,CAACC,uBAA1C;AACD;AACF,CAJD,C;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA,IAAMC,iBAAiB,GAAG,UAACF,OAAD,EAAUG,iCAAV,EAAgD;AACxE;AACA,MAAI,CAAEA,iCAAF,IAAuC,OAAOH,OAAP,KAAmB,UAA9D,EAA0E;AACxEG,qCAAiC,GAAGH,OAApC;AACAA,WAAO,GAAG,IAAV;AACD;;AAED,MAAMI,MAAM,GAAGC,oBAAoB,CAACC,cAArB,CAAoCC,OAApC,CAA4C;AACzDC,WAAO,EAAE;AADgD,GAA5C,CAAf;;AAGA,MAAI,CAACJ,MAAL,EAAa;AACXD,qCAAiC,IAC/BA,iCAAiC,CAAC,IAAIE,oBAAoB,CAACI,WAAzB,EAAD,CADnC;AAEA;AACD;;AAED,MAAMC,eAAe,GAAGC,MAAM,CAACC,MAAP,EAAxB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,CAACC,WAAN,CAAkB,kBAAlB,EAAsCX,MAAtC,EAA8CJ,OAA9C,CAAnB;;AAEA,MAAIgB,QAAQ,GACNnB,uBAAuB,CAACC,OAAxB,GACA,oBADA,eAESgB,KAAK,CAACG,WAAN,CAAkBJ,UAAlB,EAA8BH,eAA9B,EAA+CV,OAAO,IAAIA,OAAO,CAACkB,WAAlE,CAFT,IAGA,sBAHA,mBAIad,MAAM,CAACe,QAJpB,IAI+BnB,OAAO,IAAIA,OAAO,CAACoB,OAAnB,kBAAyCpB,OAAO,IAAIA,OAAO,CAACoB,OAA5D,IAAwE,EAJvG,EADN;AAOA;AACF;AACA;;AACE,MAAIpB,OAAO,IAAIA,OAAO,CAACqB,SAAnB,IAAgC,CAACrB,OAAO,CAACsB,SAA7C,EAAwD;AACtDtB,WAAO,CAACsB,SAAR,GAAoBtB,OAAO,CAACqB,SAA5B;AACA,WAAOrB,OAAO,CAACqB,SAAf;AACD;;AAED,MAAIrB,OAAO,IAAIA,OAAO,CAACsB,SAAvB,EAAkC;AAChCN,YAAQ,qBAAmBO,kBAAkB,CAACvB,OAAO,CAACsB,SAAT,CAA7C;AACD;;AAEDN,UAAQ,uBAAqBF,KAAK,CAACU,YAAN,CAAmB,kBAAnB,EAAuCpB,MAAvC,CAA7B;AAEAU,OAAK,CAACW,WAAN,CAAkB;AAChBC,gBAAY,EAAE,kBADE;AAEhBb,cAAU,EAAVA,UAFgB;AAGhBG,YAAQ,EAARA,QAHgB;AAIhBb,qCAAiC,EAAjCA,iCAJgB;AAKhBO,mBAAe,EAAfA,eALgB;AAMhBiB,gBAAY,EAAE;AAACC,WAAK,EAAE,GAAR;AAAaC,YAAM,EAAE;AAArB;AANE,GAAlB;AAQD,CAjDD;;AAmDAhC,uBAAuB,CAACK,iBAAxB,GAA4CA,iBAA5C,C","file":"/packages/meteor-developer-oauth.js","sourcesContent":["MeteorDeveloperAccounts = {};\n\nMeteorDeveloperAccounts._server = \"https://www.meteor.com\";\n\n// Options are:\n//  - developerAccountsServer: defaults to \"https://www.meteor.com\"\nMeteorDeveloperAccounts._config = options => {\n  if (options.developerAccountsServer) {\n    MeteorDeveloperAccounts._server = options.developerAccountsServer;\n  }\n};\n","// Request Meteor developer account credentials for the user\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nconst requestCredential = (options, credentialRequestCompleteCallback) => {\n  // support a callback without options\n  if (! credentialRequestCompleteCallback && typeof options === \"function\") {\n    credentialRequestCompleteCallback = options;\n    options = null;\n  }\n\n  const config = ServiceConfiguration.configurations.findOne({\n    service: 'meteor-developer'\n  });\n  if (!config) {\n    credentialRequestCompleteCallback &&\n      credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  const credentialToken = Random.secret();\n\n  const loginStyle = OAuth._loginStyle('meteor-developer', config, options);\n\n  let loginUrl =\n        MeteorDeveloperAccounts._server +\n        \"/oauth2/authorize?\" +\n        `state=${OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl)}` +\n        \"&response_type=code&\" +\n        `client_id=${config.clientId}${options && options.details ? `&details=${options && options.details}` : ''}`;\n\n  /**\n   * @deprecated in 1.3.0\n   */\n  if (options && options.userEmail && !options.loginHint) {\n    options.loginHint = options.userEmail;\n    delete options.userEmail;\n  }\n\n  if (options && options.loginHint) {\n    loginUrl += `&user_email=${encodeURIComponent(options.loginHint)}`;\n  }\n\n  loginUrl += `&redirect_uri=${OAuth._redirectUri('meteor-developer', config)}`;\n\n  OAuth.launchLogin({\n    loginService: \"meteor-developer\",\n    loginStyle,\n    loginUrl,\n    credentialRequestCompleteCallback,\n    credentialToken,\n    popupOptions: {width: 497, height: 749}\n  });\n};\n\nMeteorDeveloperAccounts.requestCredential = requestCredential;\n"]}
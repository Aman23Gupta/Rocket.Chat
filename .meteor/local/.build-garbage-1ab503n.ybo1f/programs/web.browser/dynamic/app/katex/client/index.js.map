{"version":3,"sources":["meteor://ðŸ’»app/app/katex/client/index.js"],"names":["module","export","createKatexMessageRendering","Random","link","v","katex","default","unescapeHTML","escapeHTML","Boundary","length","end","start","extract","str","substr","Katex","constructor","dollarSyntax","parenthesisSyntax","renderLatex","latex","displayMode","renderToString","macros","message","renderMessage","render","html","trim","tokens","token","id","push","text","delimitersMap","opener","closer","enabled","findOpeningDelimiter","matches","filter","options","map","pos","indexOf","positions","minPos","Math","min","matchIndex","findIndex","match","getLatexBoundaries","closerIndex","inner","outer","findLatex","openingDelimiterMatch","extractLatex","before","after","renderFunction","result","parts","rendered","instance"],"mappings":"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","file":"dynamic/app/katex/client/index.js","sourcesContent":["import { Random } from 'meteor/random';\nimport katex from 'katex';\nimport { unescapeHTML, escapeHTML } from '@rocket.chat/string-helpers';\n\nimport 'katex/dist/katex.min.css';\nimport './style.css';\n\nclass Boundary {\n\tlength() {\n\t\treturn this.end - this.start;\n\t}\n\n\textract(str) {\n\t\treturn str.substr(this.start, this.length());\n\t}\n}\n\nclass Katex {\n\tconstructor(katex, { dollarSyntax, parenthesisSyntax }) {\n\t\tthis.katex = katex;\n\t\tthis.delimitersMap = [\n\t\t\t{\n\t\t\t\topener: '\\\\[',\n\t\t\t\tcloser: '\\\\]',\n\t\t\t\tdisplayMode: true,\n\t\t\t\tenabled: () => parenthesisSyntax,\n\t\t\t},\n\t\t\t{\n\t\t\t\topener: '\\\\(',\n\t\t\t\tcloser: '\\\\)',\n\t\t\t\tdisplayMode: false,\n\t\t\t\tenabled: () => parenthesisSyntax,\n\t\t\t},\n\t\t\t{\n\t\t\t\topener: '$$',\n\t\t\t\tcloser: '$$',\n\t\t\t\tdisplayMode: true,\n\t\t\t\tenabled: () => dollarSyntax,\n\t\t\t},\n\t\t\t{\n\t\t\t\topener: '$',\n\t\t\t\tcloser: '$',\n\t\t\t\tdisplayMode: false,\n\t\t\t\tenabled: () => dollarSyntax,\n\t\t\t},\n\t\t];\n\t}\n\n\tfindOpeningDelimiter(str, start) {\n\t\tconst matches = this.delimitersMap\n\t\t\t.filter((options) => options.enabled())\n\t\t\t.map((options) => ({\n\t\t\t\toptions,\n\t\t\t\tpos: str.indexOf(options.opener, start),\n\t\t\t}));\n\n\t\tconst positions = matches.filter(({ pos }) => pos >= 0).map(({ pos }) => pos);\n\n\t\t// No opening delimiters were found\n\t\tif (positions.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Take the first delimiter found\n\t\tconst minPos = Math.min(...positions);\n\n\t\tconst matchIndex = matches.findIndex(({ pos }) => pos === minPos);\n\n\t\tconst match = matches[matchIndex];\n\t\treturn match;\n\t}\n\n\tgetLatexBoundaries(str, { options: { closer }, pos }) {\n\t\tconst closerIndex = str.substr(pos + closer.length).indexOf(closer);\n\t\tif (closerIndex < 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst inner = new Boundary();\n\t\tconst outer = new Boundary();\n\n\t\tinner.start = pos + closer.length;\n\t\tinner.end = inner.start + closerIndex;\n\n\t\touter.start = pos;\n\t\touter.end = inner.end + closer.length;\n\n\t\treturn {\n\t\t\touter,\n\t\t\tinner,\n\t\t};\n\t}\n\n\t// Searches for the first latex block in the given string\n\tfindLatex(str) {\n\t\tlet start = 0;\n\t\tlet openingDelimiterMatch;\n\n\t\twhile ((openingDelimiterMatch = this.findOpeningDelimiter(str, start++)) != null) {\n\t\t\tconst match = this.getLatexBoundaries(str, openingDelimiterMatch);\n\t\t\tif (match && match.inner.extract(str).trim().length) {\n\t\t\t\tmatch.options = openingDelimiterMatch.options;\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// Breaks a message to what comes before, after and to the content of a\n\t// matched latex block\n\textractLatex(str, match) {\n\t\tconst before = str.substr(0, match.outer.start);\n\t\tconst after = str.substr(match.outer.end);\n\t\tlet latex = match.inner.extract(str);\n\t\tlatex = unescapeHTML(latex);\n\t\treturn {\n\t\t\tbefore,\n\t\t\tlatex,\n\t\t\tafter,\n\t\t};\n\t}\n\n\t// Takes a latex math string and the desired display mode and renders it\n\t// to HTML using the KaTeX library\n\trenderLatex = (latex, displayMode) => {\n\t\ttry {\n\t\t\treturn this.katex.renderToString(latex, {\n\t\t\t\tdisplayMode,\n\t\t\t\tmacros: {\n\t\t\t\t\t'\\\\href': '\\\\@secondoftwo',\n\t\t\t\t},\n\t\t\t});\n\t\t} catch ({ message }) {\n\t\t\treturn `<div class=\"katex-error katex-${displayMode ? 'block' : 'inline'}-error\">${escapeHTML(message)}</div>`;\n\t\t}\n\t};\n\n\t// Takes a string and renders all latex blocks inside it\n\trender(str, renderFunction) {\n\t\tlet result = '';\n\t\twhile (this.findLatex(str) != null) {\n\t\t\t// Find the first latex block in the string\n\t\t\tconst match = this.findLatex(str);\n\t\t\tconst parts = this.extractLatex(str, match);\n\n\t\t\t// Add to the reuslt what comes before the latex block as well as\n\t\t\t// the rendered latex content\n\t\t\tconst rendered = renderFunction(parts.latex, match.options.displayMode);\n\t\t\tresult += parts.before + rendered;\n\t\t\t// Set what comes after the latex block to be examined next\n\t\t\tstr = parts.after;\n\t\t}\n\t\tresult += str;\n\t\treturn result;\n\t}\n\n\trenderMessage = (message) => {\n\t\tif (typeof message === 'string') {\n\t\t\treturn this.render(message, this.renderLatex);\n\t\t}\n\n\t\tif (!message.html?.trim()) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!message.tokens) {\n\t\t\tmessage.tokens = [];\n\t\t}\n\n\t\tmessage.html = this.render(message.html, (latex, displayMode) => {\n\t\t\tconst token = `=!=${Random.id()}=!=`;\n\t\t\tmessage.tokens.push({\n\t\t\t\ttoken,\n\t\t\t\ttext: this.renderLatex(latex, displayMode),\n\t\t\t});\n\t\t\treturn token;\n\t\t});\n\n\t\treturn message;\n\t};\n}\n\nexport const createKatexMessageRendering = (options) => {\n\tconst instance = new Katex(katex, options);\n\treturn (message) => instance.renderMessage(message);\n};\n"]}
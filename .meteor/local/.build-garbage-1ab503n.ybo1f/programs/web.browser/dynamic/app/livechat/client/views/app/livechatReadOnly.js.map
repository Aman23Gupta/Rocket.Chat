{"version":3,"sources":["meteor://ðŸ’»app/app/livechat/client/views/app/livechatReadOnly.js"],"names":["_objectWithoutProperties","module","link","default","v","Meteor","Template","ReactiveVar","FlowRouter","ChatRoom","CachedChatRoom","callWithErrorHandling","APIClient","inquiryDataStream","livechatReadOnly","helpers","inquiryOpen","inquiry","instance","get","room","status","servedBy","roomOpen","open","showPreview","config","routingConfig","previewRoom","currentData","onHold","isPreparing","preparing","isOnHold","events","event","preventDefault","stopPropagation","_id","clientAction","loadInquiry","rid","onCreated","updateInquiry","remove","save","go","set","call","err","roomId","v1","on","autorun","findOne","fields","onDestroyed","removeListener"],"mappings":"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","file":"dynamic/app/livechat/client/views/app/livechatReadOnly.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\n\nimport { ChatRoom, CachedChatRoom } from '../../../../models';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport './livechatReadOnly.html';\nimport { APIClient } from '../../../../utils/client';\nimport { inquiryDataStream } from '../../lib/stream/inquiry';\n\nTemplate.livechatReadOnly.helpers({\n\tinquiryOpen() {\n\t\tconst inquiry = Template.instance().inquiry.get();\n\t\tconst room = Template.instance().room.get();\n\t\treturn (inquiry && inquiry.status === 'queued') || !room.servedBy;\n\t},\n\n\troomOpen() {\n\t\tconst room = Template.instance().room.get();\n\t\treturn room && room.open === true;\n\t},\n\n\tshowPreview() {\n\t\tconst config = Template.instance().routingConfig.get();\n\t\treturn config.previewRoom || Template.currentData().onHold;\n\t},\n\n\tisPreparing() {\n\t\treturn Template.instance().preparing.get();\n\t},\n\n\tisOnHold() {\n\t\treturn Template.currentData().onHold;\n\t},\n});\n\nTemplate.livechatReadOnly.events({\n\tasync 'click .js-take-it'(event, instance) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tconst inquiry = instance.inquiry.get();\n\t\tconst { _id } = inquiry;\n\t\tawait callWithErrorHandling('livechat:takeInquiry', _id, { clientAction: true });\n\t\tinstance.loadInquiry(inquiry.rid);\n\t},\n\n\tasync 'click .js-resume-it'(event, instance) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tconst room = instance.room.get();\n\n\t\tawait callWithErrorHandling('livechat:resumeOnHold', room._id, { clientAction: true });\n\t},\n});\n\nTemplate.livechatReadOnly.onCreated(function () {\n\tthis.rid = Template.currentData().rid;\n\tthis.room = new ReactiveVar();\n\tthis.inquiry = new ReactiveVar();\n\tthis.routingConfig = new ReactiveVar({});\n\tthis.preparing = new ReactiveVar(true);\n\n\tthis.updateInquiry = async ({ clientAction, ...inquiry }) => {\n\t\tif (clientAction === 'removed') {\n\t\t\t// this will force to refresh the room\n\t\t\t// since the client wont get notified of room changes when chats are on queue (no one assigned)\n\t\t\t// a better approach should be performed when refactoring these templates to use react\n\t\t\tChatRoom.remove(this.rid);\n\t\t\tCachedChatRoom.save();\n\t\t\treturn FlowRouter.go('/home');\n\t\t}\n\n\t\tthis.inquiry.set(inquiry);\n\t};\n\n\tMeteor.call('livechat:getRoutingConfig', (err, config) => {\n\t\tif (config) {\n\t\t\tthis.routingConfig.set(config);\n\t\t}\n\t});\n\n\tthis.loadInquiry = async (roomId) => {\n\t\tthis.preparing.set(true);\n\t\tconst { inquiry } = await APIClient.v1.get(`livechat/inquiries.getOne?roomId=${roomId}`);\n\t\tthis.inquiry.set(inquiry);\n\t\tif (inquiry && inquiry._id) {\n\t\t\tinquiryDataStream.on(inquiry._id, this.updateInquiry);\n\t\t}\n\t\tthis.preparing.set(false);\n\t};\n\n\tthis.autorun(() => this.loadInquiry(this.rid));\n\tthis.autorun(() => {\n\t\tthis.room.set(ChatRoom.findOne({ _id: Template.currentData().rid }, { fields: { open: 1, servedBy: 1 } }));\n\t});\n});\n\nTemplate.livechatReadOnly.onDestroyed(function () {\n\tconst inquiry = this.inquiry.get();\n\tif (inquiry && inquiry._id) {\n\t\tinquiryDataStream.removeListener(inquiry._id, this.updateInquiry);\n\t}\n});\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/app/livechat/client/lib/chartHandler.js"],"names":["_objectSpread","module","link","default","v","export","drawLineChart","drawDoughnutChart","updateChart","TAPi18n","lineChartConfiguration","legends","anim","smallTicks","displayColors","tooltipCallbacks","config","layout","padding","top","bottom","legend","display","title","tooltips","enabled","mode","scales","xAxes","scaleLabel","gridLines","color","yAxes","ticks","beginAtZero","hover","animationDuration","responsive","maintainAspectRatio","responsiveAnimationDuration","animation","duration","labels","boxWidth","fontSize","doughnutChartConfiguration","position","text","chart","chartContext","chartLabels","dataLabels","dataSets","options","console","log","destroy","colors","datasets","forEach","chartLabel","index","push","label","__","data","backgroundColor","borderColor","borderWidth","fill","chartImport","Chart","type","dataPoints","c","indexOf","dataset","idx","update"],"mappings":"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","file":"dynamic/app/livechat/client/lib/chartHandler.js","sourcesContent":["import { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nconst lineChartConfiguration = ({ legends = false, anim = false, smallTicks = false, displayColors = false, tooltipCallbacks = {} }) => {\n\tconst config = {\n\t\tlayout: {\n\t\t\tpadding: {\n\t\t\t\ttop: 10,\n\t\t\t\tbottom: 0,\n\t\t\t},\n\t\t},\n\t\tlegend: {\n\t\t\tdisplay: false,\n\t\t},\n\t\ttitle: {\n\t\t\tdisplay: false,\n\t\t},\n\t\ttooltips: {\n\t\t\tenabled: true,\n\t\t\tmode: 'point',\n\t\t\tdisplayColors,\n\t\t\t...tooltipCallbacks,\n\t\t},\n\t\tscales: {\n\t\t\txAxes: [\n\t\t\t\t{\n\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.03)',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxes: [\n\t\t\t\t{\n\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.03)',\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\thover: {\n\t\t\tanimationDuration: 0, // duration of animations when hovering an item\n\t\t},\n\t\tresponsive: true,\n\t\tmaintainAspectRatio: false,\n\t\tresponsiveAnimationDuration: 0, // animation duration after a resize\n\t};\n\n\tif (!anim) {\n\t\tconfig.animation = {\n\t\t\tduration: 0, // general animation time\n\t\t};\n\t}\n\n\tif (legends) {\n\t\tconfig.legend = {\n\t\t\tdisplay: true,\n\t\t\tlabels: {\n\t\t\t\tboxWidth: 20,\n\t\t\t\tfontSize: 8,\n\t\t\t},\n\t\t};\n\t}\n\n\tif (smallTicks) {\n\t\tconfig.scales.xAxes[0].ticks = {\n\t\t\tfontSize: 8,\n\t\t};\n\n\t\tconfig.scales.yAxes[0].ticks = {\n\t\t\tbeginAtZero: true,\n\t\t\tfontSize: 8,\n\t\t};\n\t}\n\n\treturn config;\n};\n\nconst doughnutChartConfiguration = (title, tooltipCallbacks = {}) => ({\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tbottom: 0,\n\t\t},\n\t},\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'right',\n\t\tlabels: {\n\t\t\tboxWidth: 20,\n\t\t\tfontSize: 8,\n\t\t},\n\t},\n\ttitle: {\n\t\tdisplay: 'true',\n\t\ttext: title,\n\t},\n\ttooltips: {\n\t\tenabled: true,\n\t\tmode: 'point',\n\t\tdisplayColors: false, // hide color box\n\t\t...tooltipCallbacks,\n\t},\n\t// animation: {\n\t// \tduration: 0 // general animation time\n\t// },\n\thover: {\n\t\tanimationDuration: 0, // duration of animations when hovering an item\n\t},\n\tresponsive: true,\n\tmaintainAspectRatio: false,\n\tresponsiveAnimationDuration: 0, // animation duration after a resize\n});\n\n/**\n *\n * @param {Object} chart - chart element\n * @param {Object} chartContext - Context of chart\n * @param {Array(String)} chartLabel\n * @param {Array(String)} dataLabels\n * @param {Array(Array(Double))} dataPoints\n */\nexport const drawLineChart = async (chart, chartContext, chartLabels, dataLabels, dataSets, options = {}) => {\n\tif (!chart) {\n\t\tconsole.log('No chart element');\n\t\treturn;\n\t}\n\tif (chartContext) {\n\t\tchartContext.destroy();\n\t}\n\tconst colors = ['#2de0a5', '#ffd21f', '#f5455c', '#cbced1'];\n\n\tconst datasets = [];\n\n\tchartLabels.forEach(function (chartLabel, index) {\n\t\tdatasets.push({\n\t\t\tlabel: TAPi18n.__(chartLabel), // chart label\n\t\t\tdata: dataSets[index], // data points corresponding to data labels, x-axis points\n\t\t\tbackgroundColor: [colors[index]],\n\t\t\tborderColor: [colors[index]],\n\t\t\tborderWidth: 3,\n\t\t\tfill: false,\n\t\t});\n\t});\n\tconst chartImport = await import('chart.js');\n\tconst Chart = chartImport.default;\n\treturn new Chart(chart, {\n\t\ttype: 'line',\n\t\tdata: {\n\t\t\tlabels: dataLabels, // data labels, y-axis points\n\t\t\tdatasets,\n\t\t},\n\t\toptions: lineChartConfiguration(options),\n\t});\n};\n\n/**\n *\n * @param {Object} chart - chart element\n * @param {Object} chartContext - Context of chart\n * @param {Array(String)} dataLabels\n * @param {Array(Double)} dataPoints\n */\nexport const drawDoughnutChart = async (chart, title, chartContext, dataLabels, dataPoints) => {\n\tif (!chart) {\n\t\treturn;\n\t}\n\tif (chartContext) {\n\t\tchartContext.destroy();\n\t}\n\tconst chartImport = await import('chart.js');\n\tconst Chart = chartImport.default;\n\treturn new Chart(chart, {\n\t\ttype: 'doughnut',\n\t\tdata: {\n\t\t\tlabels: dataLabels, // data labels, y-axis points\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tdata: dataPoints, // data points corresponding to data labels, x-axis points\n\t\t\t\t\tbackgroundColor: ['#2de0a5', '#cbced1', '#f5455c', '#ffd21f'],\n\t\t\t\t\tborderWidth: 0,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\toptions: doughnutChartConfiguration(title),\n\t});\n};\n\n/**\n * Update chart\n * @param  {Object} chart [Chart context]\n * @param  {String} label [chart label]\n * @param  {Array(Double)} data  [updated data]\n */\nexport const updateChart = async (c, label, data) => {\n\tconst chart = await c;\n\tif (chart.data.labels.indexOf(label) === -1) {\n\t\t// insert data\n\t\tchart.data.labels.push(label);\n\t\tchart.data.datasets.forEach((dataset, idx) => {\n\t\t\tdataset.data.push(data[idx]);\n\t\t});\n\t} else {\n\t\t// update data\n\t\tconst index = chart.data.labels.indexOf(label);\n\t\tchart.data.datasets.forEach((dataset, idx) => {\n\t\t\tdataset.data[index] = data[idx];\n\t\t});\n\t}\n\n\tchart.update();\n};\n"]}
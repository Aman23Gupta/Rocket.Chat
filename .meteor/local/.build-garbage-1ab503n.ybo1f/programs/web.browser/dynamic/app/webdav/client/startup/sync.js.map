{"version":3,"sources":["meteor://ðŸ’»app/app/webdav/client/startup/sync.js"],"names":["Meteor","module","link","v","Tracker","APIClient","WebdavAccounts","Notifications","events","changed","account","upsert","_id","removed","remove","autorun","userId","accounts","v1","get","forEach","insert","onUser","type"],"mappings":";;;;;;;;AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,QAAM,CAACG,CAAD,EAAG;AAACH,UAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,OAAJ;AAAYH,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACE,SAAO,CAACD,CAAD,EAAG;AAACC,WAAO,GAACD,CAAR;AAAU;;AAAtB,CAA7B,EAAqD,CAArD;AAAwD,IAAIE,SAAJ;AAAcJ,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACG,WAAS,CAACF,CAAD,EAAG;AAACE,aAAS,GAACF,CAAV;AAAY;;AAA1B,CAApC,EAAgE,CAAhE;AAAmE,IAAIG,cAAJ;AAAmBL,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACI,gBAAc,CAACH,CAAD,EAAG;AAACG,kBAAc,GAACH,CAAf;AAAiB;;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAII,aAAJ;AAAkBN,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAACK,eAAa,CAACJ,CAAD,EAAG;AAACI,iBAAa,GAACJ,CAAd;AAAgB;;AAAlC,CAA5C,EAAgF,CAAhF;AAOxU,MAAMK,MAAM,GAAG;AACdC,SAAO,EAAGC,OAAD,IAAaJ,cAAc,CAACK,MAAf,CAAsB;AAAEC,OAAG,EAAEF,OAAO,CAACE;AAAf,GAAtB,EAA4CF,OAA5C,CADR;AAEdG,SAAO,EAAE;AAAA,QAAC;AAAED;AAAF,KAAD;AAAA,WAAaN,cAAc,CAACQ,MAAf,CAAsB;AAAEF;AAAF,KAAtB,CAAb;AAAA;AAFK,CAAf;AAKAR,OAAO,CAACW,OAAR,CAAgB,YAAY;AAC3B,MAAI,CAACf,MAAM,CAACgB,MAAP,EAAL,EAAsB;AACrB;AACA;;AACD,QAAM;AAAEC;AAAF,MAAe,MAAMZ,SAAS,CAACa,EAAV,CAAaC,GAAb,CAAiB,sBAAjB,CAA3B;AACAF,UAAQ,CAACG,OAAT,CAAkBV,OAAD,IAAaJ,cAAc,CAACe,MAAf,CAAsBX,OAAtB,CAA9B;AACAH,eAAa,CAACe,MAAd,CAAqB,QAArB,EAA+B;AAAA,QAAC;AAAEC,UAAF;AAAQb;AAAR,KAAD;AAAA,WAAuBF,MAAM,CAACe,IAAD,CAAN,CAAab,OAAb,CAAvB;AAAA,GAA/B;AACA,CAPD,E","file":"dynamic/app/webdav/client/startup/sync.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { APIClient } from '../../../utils/client';\nimport { WebdavAccounts } from '../../../models/client';\nimport { Notifications } from '../../../notifications/client';\n\nconst events = {\n\tchanged: (account) => WebdavAccounts.upsert({ _id: account._id }, account),\n\tremoved: ({ _id }) => WebdavAccounts.remove({ _id }),\n};\n\nTracker.autorun(async () => {\n\tif (!Meteor.userId()) {\n\t\treturn;\n\t}\n\tconst { accounts } = await APIClient.v1.get('webdav.getMyAccounts');\n\taccounts.forEach((account) => WebdavAccounts.insert(account));\n\tNotifications.onUser('webdav', ({ type, account }) => events[type](account));\n});\n"]}
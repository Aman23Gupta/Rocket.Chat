{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/units/UnitEditWithData.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAS,MAAS,KAAT,CAAe,uBAAf,EAAuC;AAAA;AAAA;AAAA;;AAAA,CAAvC,EAAuC,CAAvC;AAAuC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAShD,MAAM,gBAAgB,GAIjB,SAAS,gBAAT,OAAmD;AAAA,MAAzB;AAAE,UAAF;AAAU,UAAV;AAAkB;AAAlB,GAAyB;AACvD,QAAM,KAAK,GAAG,OAAO,CAAC,OAAO;AAAE;AAAF,GAAP,CAAD,EAAqB,CAAC,MAAD,CAArB,CAArB;AAEA,QAAM;AAAE,SAAK,EAAE,IAAT;AAAe,SAAK,EAAE,KAAtB;AAA6B;AAA7B,MAAuC,eAAe,CAAC,uBAAD,EAA0B,KAA1B,CAA5D;AAEA,QAAM;AAAE,SAAK,EAAE,YAAT;AAAuB,SAAK,EAAE,iBAA9B;AAAiD,SAAK,EAAE;AAAxD,MAA8E,eAAe,CAAC,4BAAD,EAA+B,KAA/B,CAAnG;AAEA,QAAM;AACL,SAAK,EAAE,eADF;AAEL,SAAK,EAAE,oBAFF;AAGL,SAAK,EAAE;AAHF,MAIF,eAAe,wCAAiC,MAAjC,EAJnB;AAMA,QAAM,CAAC,GAAG,cAAc,EAAxB;;AAEA,MAAI,CAAC,KAAD,EAAQ,iBAAR,EAA2B,oBAA3B,EAAiD,QAAjD,CAA0D,eAAe,CAAC,OAA1E,CAAJ,EAAwF;AACvF,wBAAO,oBAAC,YAAD,OAAP;AACA;;AAED,MAAI,KAAK,IAAI,iBAAT,IAA8B,oBAAlC,EAAwD;AACvD,wBACC,oBAAC,OAAD;AAAS,OAAC,EAAC,KAAX;AAAiB,UAAI,EAAC;AAAtB,OACE,CAAC,CAAC,eAAD,CADH,CADD;AAKA;;AAED,sBACC,oBAAC,QAAD;AACC,SAAK,EAAE,KADR;AAEC,UAAM,EAAE,MAFT;AAGC,QAAI,EAAE,IAHP;AAIC,gBAAY,EAAE,YAJf;AAKC,mBAAe,EAAE,eALlB;AAMC,UAAM,EAAE,MANT;AAOC,SAAK,EAAE;AAPR,IADD;AAWA,CA1CD;;AATA,OAAO,aAAP,CAqDe,gBArDf,E","file":"dynamic/ee/client/omnichannel/units/UnitEditWithData.tsx","sourcesContent":["import { Callout } from '@rocket.chat/fuselage';\nimport React, { useMemo, FC } from 'react';\n\nimport { FormSkeleton } from '../../../../client/components/Skeleton';\nimport { useTranslation } from '../../../../client/contexts/TranslationContext';\nimport { AsyncStatePhase } from '../../../../client/hooks/useAsyncState';\nimport { useEndpointData } from '../../../../client/hooks/useEndpointData';\nimport UnitEdit from './UnitEdit';\n\nconst UnitEditWithData: FC<{\n\tunitId: string;\n\ttitle: string;\n\treload: () => void;\n}> = function UnitEditWithData({ unitId, reload, title }) {\n\tconst query = useMemo(() => ({ unitId }), [unitId]);\n\n\tconst { value: data, phase: state, error } = useEndpointData('livechat/units.getOne', query);\n\n\tconst { value: unitMonitors, phase: unitMonitorsState, error: unitMonitorsError } = useEndpointData('livechat/unitMonitors.list', query);\n\n\tconst {\n\t\tvalue: unitDepartments,\n\t\tphase: unitDepartmentsState,\n\t\terror: unitDepartmentsError,\n\t} = useEndpointData(`livechat/departments.by-unit/${unitId}`);\n\n\tconst t = useTranslation();\n\n\tif ([state, unitMonitorsState, unitDepartmentsState].includes(AsyncStatePhase.LOADING)) {\n\t\treturn <FormSkeleton />;\n\t}\n\n\tif (error || unitMonitorsError || unitDepartmentsError) {\n\t\treturn (\n\t\t\t<Callout m='x16' type='danger'>\n\t\t\t\t{t('Not_Available')}\n\t\t\t</Callout>\n\t\t);\n\t}\n\n\treturn (\n\t\t<UnitEdit\n\t\t\ttitle={title}\n\t\t\tunitId={unitId}\n\t\t\tdata={data}\n\t\t\tunitMonitors={unitMonitors}\n\t\t\tunitDepartments={unitDepartments}\n\t\t\treload={reload}\n\t\t\tisNew={false}\n\t\t/>\n\t);\n};\n\nexport default UnitEditWithData;\n"]}
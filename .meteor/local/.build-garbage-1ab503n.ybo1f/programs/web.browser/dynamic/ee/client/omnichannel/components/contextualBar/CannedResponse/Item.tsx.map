{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/components/contextualBar/CannedResponse/Item.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAAoB,4DAAyB;AAAA;AAAA;AAAA;;AAAA,CAAzB,EAAyB,CAAzB;AAApB;AAAO,MAAO,KAAP,CAAa,wBAAb,EAAsC;AAAA;AAAA;AAAA;;AAAA,CAAtC,EAAsC,CAAtC;AAAsC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAS7C,MAAM,IAAI,GAIL,QAAsC;AAAA,MAArC;AAAE,QAAF;AAAQ,eAAR;AAAqB;AAArB,GAAqC;AAC1C,QAAM,CAAC,GAAG,cAAc,EAAxB;AAEA,QAAM,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,KAAN,EAAa,IAAI,CAAC,cAAlB,CAA1B;AAEA,QAAM,SAAS,GAAG,GAAH,+FAAf;AAIA,QAAM,CAAC,UAAD,EAAa,aAAb,IAA8B,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACC,oBAAC,GAAD;AACC,OAAG,EAAE,EADN;AAEC,OAAG,EAAE,EAFN;AAGC,MAAE,EAAE,EAHL;AAIC,uBAAmB,EAAC,KAJrB;AAKC,uBAAmB,EAAC,aALrB;AAMC,uBAAmB,EAAC,OANrB;AAOC,WAAO,EAAE,WAPV;AAQC,aAAS,EAAE,SARZ;AASC,gBAAY,EAAE,MAAY,aAAa,CAAC,IAAD,CATxC;AAUC,gBAAY,EAAE,MAAY,aAAa,CAAC,KAAD;AAVxC,kBAYC,oBAAC,GAAD;AAAK,WAAO,EAAC,MAAb;AAAoB,iBAAa,EAAC,KAAlC;AAAwC,kBAAc,EAAC,eAAvD;AAAuE,cAAU,EAAC;AAAlF,kBACC,oBAAC,GAAD;AAAK,KAAC,EAAC,MAAP;AAAc,YAAQ,EAAE;AAAxB,kBACC,oBAAC,GAAD;AAAK,aAAS,EAAC,KAAf;AAAqB,qBAAiB;AAAtC,UACG,IAAI,CAAC,QADR,CADD,eAIC,oBAAC,GAAD;AAAK,aAAS,EAAC,IAAf;AAAoB,SAAK,EAAC,MAA1B;AAAiC,qBAAiB;AAAlD,KACE,KADF,CAJD,CADD,eASC,oBAAC,GAAD;AAAK,WAAO,EAAC,MAAb;AAAoB,iBAAa,EAAC,KAAlC;AAAwC,cAAU,EAAC;AAAnD,kBACC,oBAAC,MAAD;AACC,WAAO,EAAE,UAAU,GAAG,OAAH,GAAa,MADjC;AAEC,SAAK,MAFN;AAGC,WAAO,EAAG,CAAD,IAAY;AACpB,gBAAU,CAAC,CAAD,EAAI,IAAI,CAAC,IAAT,CAAV;AACA;AALF,KAOE,CAAC,CAAC,KAAD,CAPH,CADD,eAUC,oBAAC,IAAD;AAAM,QAAI,EAAC,cAAX;AAA0B,QAAI,EAAE,EAAhC;AAAoC,SAAK,EAAC;AAA1C,IAVD,CATD,CAZD,eAkCC,oBAAC,GAAD;AAAK,aAAS,EAAC,IAAf;AAAoB,OAAG,EAAC,KAAxB;AAA8B,SAAK,EAAC,MAApC;AAA2C,qBAAiB;AAA5D,WACG,IAAI,CAAC,IADR,OAlCD,EAqCE,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,CAAhC,iBACA,oBAAC,GAAD;AAAK,WAAO,EAAC,MAAb;AAAoB,KAAC,EAAC,MAAtB;AAA6B,iBAAa,EAAC,KAA3C;AAAiD,OAAG,EAAC,KAArD;AAA2D,YAAQ,EAAC;AAApE,KACE,IAAI,CAAC,IAAL,CAAU,GAAV,CAAc,CAAC,GAAD,EAAc,GAAd,kBACd,oBAAC,GAAD;AAAK,OAAG,EAAE,GAAV;AAAe,OAAG,EAAC,KAAnB;AAAyB,OAAG,EAAC;AAA7B,kBACC,oBAAC,GAAD,QAAM,GAAN,CADD,CADA,CADF,CAtCF,CADD;AAiDA,CAhED;;AATA,OAAO,aAAP,eA2Ee,IAAI,CAAC,IAAD,CA3EnB,E","file":"dynamic/ee/client/omnichannel/components/contextualBar/CannedResponse/Item.tsx","sourcesContent":["import { css } from '@rocket.chat/css-in-js';\nimport { Box, Button, Icon, Tag } from '@rocket.chat/fuselage';\nimport React, { FC, memo, MouseEvent, useState } from 'react';\n\nimport { useTranslation } from '../../../../../../client/contexts/TranslationContext';\nimport { ILivechatDepartment } from '../../../../../../definition/ILivechatDepartment';\nimport { IOmnichannelCannedResponse } from '../../../../../../definition/IOmnichannelCannedResponse';\nimport { useScopeDict } from '../../../hooks/useScopeDict';\n\nconst Item: FC<{\n\tdata: IOmnichannelCannedResponse & { departmentName: ILivechatDepartment['name'] };\n\tonClickItem: (e: MouseEvent<HTMLOrSVGElement>) => void;\n\tonClickUse: (e: MouseEvent<HTMLOrSVGElement>, text: string) => void;\n}> = ({ data, onClickItem, onClickUse }) => {\n\tconst t = useTranslation();\n\n\tconst scope = useScopeDict(data.scope, data.departmentName);\n\n\tconst clickable = css`\n\t\tcursor: pointer;\n\t`;\n\n\tconst [visibility, setVisibility] = useState(false);\n\n\treturn (\n\t\t<Box\n\t\t\tpbs={16}\n\t\t\tpbe={12}\n\t\t\tpi={24}\n\t\t\tborderBlockEndWidth='2px'\n\t\t\tborderBlockEndColor='neutral-200'\n\t\t\tborderBlockEndStyle='solid'\n\t\t\tonClick={onClickItem}\n\t\t\tclassName={clickable}\n\t\t\tonMouseEnter={(): void => setVisibility(true)}\n\t\t\tonMouseLeave={(): void => setVisibility(false)}\n\t\t>\n\t\t\t<Box display='flex' flexDirection='row' justifyContent='space-between' alignItems='center'>\n\t\t\t\t<Box w='full' minWidth={0}>\n\t\t\t\t\t<Box fontScale='p2m' withTruncatedText>\n\t\t\t\t\t\t!{data.shortcut}\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box fontScale='c1' color='info' withTruncatedText>\n\t\t\t\t\t\t{scope}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Box display='flex' flexDirection='row' alignItems='center'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisplay={visibility ? 'block' : 'none'}\n\t\t\t\t\t\tsmall\n\t\t\t\t\t\tonClick={(e): void => {\n\t\t\t\t\t\t\tonClickUse(e, data.text);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Use')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Icon name='chevron-left' size={24} color='neutral-700' />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box fontScale='p2' mbs='8px' color='info' withTruncatedText>\n\t\t\t\t\"{data.text}\"\n\t\t\t</Box>\n\t\t\t{data.tags && data.tags.length > 0 && (\n\t\t\t\t<Box display='flex' w='full' flexDirection='row' mbs='8px' flexWrap='wrap'>\n\t\t\t\t\t{data.tags.map((tag: string, idx: number) => (\n\t\t\t\t\t\t<Box key={idx} mie='4px' mbe='4px'>\n\t\t\t\t\t\t\t<Tag>{tag}</Tag>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</Box>\n\t);\n};\n\nexport default memo(Item);\n"]}
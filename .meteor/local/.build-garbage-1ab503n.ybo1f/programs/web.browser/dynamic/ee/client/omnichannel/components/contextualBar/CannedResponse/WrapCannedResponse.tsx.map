{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/components/contextualBar/CannedResponse/WrapCannedResponse.tsx"],"names":[],"mappings":";;;;;;;;AAAA,WAAO,IAAP;AAAc,MAAU,CAAiC,IAA3C,CAA2C,OAA3C,EAAwD;AAAC;AAAA;AAAA,GAAD;;AAAC;AAAA;AAAA;;AAAD,CAAxD,EAAyD,CAAzD;AAAyD;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAOvE,MAAM,kBAAkB,GAKnB,QAAwH;AAAA,MAAvH;AAAE,cAAU,EAAE;AAAE,SAAF;AAAO,oBAAP;AAAuB,kBAAvB;AAAqC,cAArC;AAA+C,UAA/C;AAAqD,WAArD;AAA4D;AAA5D,KAAd;AAAkF,eAAlF;AAA+F,cAA/F;AAA2G;AAA3G,GAAuH;AAC5H,QAAM,QAAQ,GAAG,WAAW,EAA5B;;AACA,QAAM,WAAW,GAAG,MAAW;AAC9B,YAAQ,eAAC,oBAAC,oBAAD;AAAsB,UAAI,EAAE;AAAE,WAAF;AAAO,oBAAP;AAAqB,gBAArB;AAA+B,YAA/B;AAAqC,aAArC;AAA4C;AAA5C,OAA5B;AAAgF,sBAAgB,EAAE;AAAlG,MAAD,CAAR;AACA,GAFD;;AAIA,QAAM,oBAAoB,GAAG,aAAa,CAAC,2BAAD,CAA1C;AACA,QAAM,oBAAoB,GAAG,aAAa,CAAC,kCAAD,CAA1C;AAEA,QAAM,OAAO,GAAG,oBAAoB,IAAK,oBAAoB,IAAI,KAAK,KAAK,QAA3D,IAAwE,KAAK,KAAK,MAAlG;AAEA,sBACC,oBAAC,cAAD;AACC,WAAO,EAAE,OADV;AAEC,QAAI,EAAE;AACL,oBADK;AAEL,cAFK;AAGL,UAHK;AAIL,WAJK;AAKL;AALK,KAFP;AASC,eAAW,EAAE,WATd;AAUC,eAAW,EAAE,WAVd;AAWC,cAAU,EAAG,CAAD,IAAY;AACvB,gBAAU,CAAC,CAAD,EAAI,IAAJ,CAAV;AACA;AAbF,IADD;AAiBA,CAjCD;;AAPA,OAAO,aAAP,eA0Ce,IAAI,CAAC,kBAAD,CA1CnB,E","file":"dynamic/ee/client/omnichannel/components/contextualBar/CannedResponse/WrapCannedResponse.tsx","sourcesContent":["import React, { FC, memo, MouseEvent, MouseEventHandler } from 'react';\n\nimport { usePermission } from '../../../../../../client/contexts/AuthorizationContext';\nimport { useSetModal } from '../../../../../../client/contexts/ModalContext';\nimport CreateCannedResponse from '../../CannedResponse/modals';\nimport CannedResponse from './CannedResponse';\n\nconst WrapCannedResponse: FC<{\n\tcannedItem: any;\n\tonClickBack: MouseEventHandler<HTMLOrSVGElement>;\n\tonClickUse: (e: MouseEvent<HTMLOrSVGElement>, text: string) => void;\n\treload: () => void;\n}> = ({ cannedItem: { _id, departmentName, departmentId, shortcut, tags, scope, text }, onClickBack, onClickUse, reload }) => {\n\tconst setModal = useSetModal();\n\tconst onClickEdit = (): void => {\n\t\tsetModal(<CreateCannedResponse data={{ _id, departmentId, shortcut, tags, scope, text }} reloadCannedList={reload} />);\n\t};\n\n\tconst hasManagerPermission = usePermission('view-all-canned-responses');\n\tconst hasMonitorPermission = usePermission('save-department-canned-responses');\n\n\tconst canEdit = hasManagerPermission || (hasMonitorPermission && scope !== 'global') || scope === 'user';\n\n\treturn (\n\t\t<CannedResponse\n\t\t\tcanEdit={canEdit}\n\t\t\tdata={{\n\t\t\t\tdepartmentName,\n\t\t\t\tshortcut,\n\t\t\t\ttags,\n\t\t\t\tscope,\n\t\t\t\ttext,\n\t\t\t}}\n\t\t\tonClickBack={onClickBack}\n\t\t\tonClickEdit={onClickEdit}\n\t\t\tonClickUse={(e): void => {\n\t\t\t\tonClickUse(e, text);\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default memo(WrapCannedResponse);\n"]}
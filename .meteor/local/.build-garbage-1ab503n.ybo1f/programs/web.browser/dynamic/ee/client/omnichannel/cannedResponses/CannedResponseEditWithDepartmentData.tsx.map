{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/cannedResponses/CannedResponseEditWithDepartmentData.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAS,MAAS,KAAT,CAAe,uBAAf,EAAuC;AAAA;AAAA;AAAA;;AAAA,CAAvC,EAAuC,CAAvC;AAAuC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAWhD,MAAM,0BAA0B,GAQ3B,QAAsC;AAAA,MAArC;AAAE,QAAF;AAAQ,UAAR;AAAgB;AAAhB,GAAqC;AAC1C,QAAM,YAAY,GAAG,OAAO,CAAC;AAAA;;AAAA,WAAM,IAAN,aAAM,IAAN,+CAAM,IAAI,CAAE,cAAZ,yDAAM,qBAAsB,YAA5B;AAAA,GAAD,EAA2C,CAAC,IAAD,CAA3C,CAA5B;AACA,QAAM;AAAE,SAAK,EAAE,cAAT;AAAyB,SAAK,EAAE,KAAhC;AAAuC;AAAvC,MAAiD,eAAe,+BAAwB,YAAxB,EAAtE;AAEA,QAAM,CAAC,GAAG,cAAc,EAAxB;;AAEA,MAAI,KAAK,KAAK,eAAe,CAAC,OAA9B,EAAuC;AACtC,wBAAO,oBAAC,YAAD,OAAP;AACA;;AAED,MAAI,KAAJ,EAAW;AACV,wBACC,oBAAC,OAAD;AAAS,OAAC,EAAC,KAAX;AAAiB,UAAI,EAAC;AAAtB,OACE,CAAC,CAAC,eAAD,CADH,CADD;AAKA;;AAED,sBACC,oBAAC,kBAAD;AACC,QAAI,EAAE,IADP;AAEC,UAAM,EAAE,MAFT;AAGC,mBAAe,EAAE,eAHlB,CAIC;AAJD;AAKC,kBAAc,EAAE;AALjB,IADD;AASA,CAnCD;;AAXA,OAAO,aAAP,CAgDe,0BAhDf,E","file":"dynamic/ee/client/omnichannel/cannedResponses/CannedResponseEditWithDepartmentData.tsx","sourcesContent":["import { Callout } from '@rocket.chat/fuselage';\nimport React, { useMemo, FC } from 'react';\n\nimport { FormSkeleton } from '../../../../client/components/Skeleton';\nimport { useTranslation } from '../../../../client/contexts/TranslationContext';\nimport { AsyncStatePhase } from '../../../../client/hooks/useAsyncState';\nimport { useEndpointData } from '../../../../client/hooks/useEndpointData';\nimport { IOmnichannelCannedResponse } from '../../../../definition/IOmnichannelCannedResponse';\nimport { Serialized } from '../../../../definition/Serialized';\nimport CannedResponseEdit from './CannedResponseEdit';\n\nconst CannedResponseEditWithData: FC<{\n\tdata:\n\t\t| {\n\t\t\t\tcannedResponse: Serialized<IOmnichannelCannedResponse>;\n\t\t  }\n\t\t| undefined;\n\treload: () => void;\n\ttotalDataReload: () => void;\n}> = ({ data, reload, totalDataReload }) => {\n\tconst departmentId = useMemo(() => data?.cannedResponse?.departmentId, [data]) as string;\n\tconst { value: departmentData, phase: state, error } = useEndpointData(`livechat/department/${departmentId}`);\n\n\tconst t = useTranslation();\n\n\tif (state === AsyncStatePhase.LOADING) {\n\t\treturn <FormSkeleton />;\n\t}\n\n\tif (error) {\n\t\treturn (\n\t\t\t<Callout m='x16' type='danger'>\n\t\t\t\t{t('Not_Available')}\n\t\t\t</Callout>\n\t\t);\n\t}\n\n\treturn (\n\t\t<CannedResponseEdit\n\t\t\tdata={data}\n\t\t\treload={reload}\n\t\t\ttotalDataReload={totalDataReload}\n\t\t\t// @ts-expect-error - Path is inferring union type instead of most-specific one\n\t\t\tdepartmentData={departmentData}\n\t\t/>\n\t);\n};\n\nexport default CannedResponseEditWithData;\n"]}
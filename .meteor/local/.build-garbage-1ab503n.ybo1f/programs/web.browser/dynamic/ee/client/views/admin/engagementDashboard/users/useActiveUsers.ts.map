{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/users/useActiveUsers.ts"],"names":[],"mappings":";;;;;;;;AAAA;;AAAa,MAAM,KAAN,CAAe,sCAAf,EAAe;AAAA;AAAA;AAAA;;AAAA,CAAf,EAAe,CAAf;AAAb,OAAO,MAAP,CAAa;AAAA,gBAAe;AAAf,CAAb;AAA4B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AASrB,MAAM,cAAc,GAAG;AAAA,MAAC;AAAE;AAAF,GAAD;AAAA,SAC7B,QAAQ,CACP,CAAC,yCAAD,EAA4C;AAAE;AAAF,GAA5C,CADO,EAEP,YAAW;AACV,UAAM;AAAE,WAAF;AAAS;AAAT,QAAiB,cAAc,CAAC,cAAD,EAAiB,GAAjB,CAArC;AAEA,UAAM,QAAQ,GAAG,MAAM,cAAc,CAAC,6CAAD,CAAd,CAA8D;AACpF,WAAK,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAP,CAAW,KAAX,CAAH,GAAuB,MAAM,CAAC,KAAD,CAAjC,EAA0C,QAA1C,CAAmD,EAAnD,EAAuD,MAAvD,EAA+D,WAA/D,EAD6E;AAEpF,SAAG,EAAE,GAAG,CAAC,WAAJ;AAF+E,KAA9D,CAAvB;AAKA,WAAO,QAAQ,mCAET,QAFS;AAGZ,WAHY;AAIZ;AAJY,SAMZ,SANH;AAOA,GAjBM,EAkBP;AACC,mBAAe,EAAE,IAAI,EAAJ,GAAS;AAD3B,GAlBO,CADqB;AAAA,CAAvB,C","file":"dynamic/ee/client/views/admin/engagementDashboard/users/useActiveUsers.ts","sourcesContent":["import moment from 'moment';\nimport { useQuery } from 'react-query';\n\nimport { getFromRestApi } from '../../../../lib/getFromRestApi';\nimport { getPeriodRange } from '../data/periods';\n\ntype UseActiveUsersOptions = { utc: boolean };\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useActiveUsers = ({ utc }: UseActiveUsersOptions) =>\n\tuseQuery(\n\t\t['admin/engagement-dashboard/users/active', { utc }],\n\t\tasync () => {\n\t\t\tconst { start, end } = getPeriodRange('last 30 days', utc);\n\n\t\t\tconst response = await getFromRestApi('/v1/engagement-dashboard/users/active-users')({\n\t\t\t\tstart: (utc ? moment.utc(start) : moment(start)).subtract(29, 'days').toISOString(),\n\t\t\t\tend: end.toISOString(),\n\t\t\t});\n\n\t\t\treturn response\n\t\t\t\t? {\n\t\t\t\t\t\t...response,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend,\n\t\t\t\t  }\n\t\t\t\t: undefined;\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/audit/RoomAutoComplete/RoomAutoComplete.js"],"names":["_extends","module","link","default","v","_objectWithoutProperties","_objectSpread","AutoComplete","Option","React","memo","useMemo","useState","useEndpointData","Avatar","query","name","selector","JSON","stringify","RoomAutoComplete","props","filter","setFilter","value","data","options","items","map","_id","fname","avatarETag","t","label","type","exportDefault"],"mappings":"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","file":"dynamic/ee/client/audit/RoomAutoComplete/RoomAutoComplete.js","sourcesContent":["import { AutoComplete, Option } from '@rocket.chat/fuselage';\nimport React, { memo, useMemo, useState } from 'react';\n\nimport { useEndpointData } from '../../../../client/hooks/useEndpointData';\nimport Avatar from './Avatar';\n\nconst query = (name = '') => ({ selector: JSON.stringify({ name }) });\n\nconst RoomAutoComplete = (props) => {\n\tconst [filter, setFilter] = useState('');\n\tconst { value: data } = useEndpointData(\n\t\t'rooms.autocomplete.adminRooms',\n\t\tuseMemo(() => query(filter), [filter]),\n\t);\n\tconst options = useMemo(\n\t\t() =>\n\t\t\t(data &&\n\t\t\t\tdata.items.map(({ name, _id, fname, avatarETag, t }) => ({\n\t\t\t\t\tvalue: _id,\n\t\t\t\t\tlabel: { name: fname || name, avatarETag, type: t },\n\t\t\t\t}))) ||\n\t\t\t[],\n\t\t[data],\n\t);\n\n\treturn (\n\t\t<AutoComplete\n\t\t\t{...props}\n\t\t\tfilter={filter}\n\t\t\tsetFilter={setFilter}\n\t\t\trenderSelected={({ value, label }) => <Option label={label.name} avatar={<Avatar value={value} room={{ _id: value, ...label }} />} />}\n\t\t\trenderItem={({ value, label, ...props }) => (\n\t\t\t\t<Option key={value} {...props} label={label.name} avatar={<Avatar value={value} {...label} />} />\n\t\t\t)}\n\t\t\toptions={options}\n\t\t/>\n\t);\n};\n\nexport default memo(RoomAutoComplete);\n"]}
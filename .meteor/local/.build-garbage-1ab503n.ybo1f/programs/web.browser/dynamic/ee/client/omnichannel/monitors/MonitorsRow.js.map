{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/monitors/MonitorsRow.js"],"names":["Table","Icon","Button","module","link","v","useMutableCallback","React","memo","default","GenericModal","useSetModal","useMethod","useToastMessageDispatch","useTranslation","MonitorsRow","props","_id","name","username","emails","onDelete","setModal","dispatchToastMessage","t","removeMonitor","handleRemove","onDeleteMonitor","type","message","error","find","address","exportDefault"],"mappings":"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","file":"dynamic/ee/client/omnichannel/monitors/MonitorsRow.js","sourcesContent":["import { Table, Icon, Button } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { memo } from 'react';\n\nimport GenericModal from '../../../../client/components/GenericModal';\nimport { useSetModal } from '../../../../client/contexts/ModalContext';\nimport { useMethod } from '../../../../client/contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../../client/contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../client/contexts/TranslationContext';\n\nfunction MonitorsRow(props) {\n\tconst { _id, name, username, emails, onDelete } = props;\n\n\tconst setModal = useSetModal();\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst t = useTranslation();\n\n\tconst removeMonitor = useMethod('livechat:removeMonitor');\n\n\tconst handleRemove = useMutableCallback(() => {\n\t\tconst onDeleteMonitor = async () => {\n\t\t\ttry {\n\t\t\t\tawait removeMonitor(username);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Monitor_removed') });\n\t\t\t\tonDelete();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\tsetModal();\n\t\t};\n\n\t\tsetModal(<GenericModal variant='danger' onConfirm={onDeleteMonitor} onCancel={() => setModal()} confirmText={t('Delete')} />);\n\t});\n\n\treturn (\n\t\t<Table.Row key={_id} role='link' action tabIndex={0}>\n\t\t\t<Table.Cell withTruncatedText>{name}</Table.Cell>\n\t\t\t<Table.Cell withTruncatedText>{username}</Table.Cell>\n\t\t\t<Table.Cell withTruncatedText>{emails?.find(({ address }) => !!address)?.address}</Table.Cell>\n\t\t\t<Table.Cell withTruncatedText>\n\t\t\t\t<Button small ghost title={t('Remove')} onClick={handleRemove}>\n\t\t\t\t\t<Icon name='trash' size='x16' />\n\t\t\t\t</Button>\n\t\t\t</Table.Cell>\n\t\t</Table.Row>\n\t);\n}\n\nexport default memo(MonitorsRow);\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/additionalForms/BusinessHoursTimeZone.js"],"names":["SelectFiltered","Field","module","link","v","React","useMemo","default","useTranslation","useForm","useTimezoneNameList","getInitialData","data","name","BusinessHoursTimeZone","onChange","className","hasChanges","t","values","handlers","hasUnsavedChanges","handleName","timeZones","timeZonesOptions","map","exportDefault"],"mappings":";;;;;;;;AAAA,IAAIA,cAAJ,EAAmBC,KAAnB;AAAyBC,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACH,gBAAc,CAACI,CAAD,EAAG;AAACJ,kBAAc,GAACI,CAAf;AAAiB,GAApC;;AAAqCH,OAAK,CAACG,CAAD,EAAG;AAACH,SAAK,GAACG,CAAN;AAAQ;;AAAtD,CAApC,EAA4F,CAA5F;AAA+F,IAAIC,KAAJ,EAAUC,OAAV;AAAkBJ,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACI,SAAO,CAACH,CAAD,EAAG;AAACC,SAAK,GAACD,CAAN;AAAQ,GAApB;;AAAqBE,SAAO,CAACF,CAAD,EAAG;AAACE,WAAO,GAACF,CAAR;AAAU;;AAA1C,CAApB,EAAgE,CAAhE;AAAmE,IAAII,cAAJ;AAAmBN,MAAM,CAACC,IAAP,CAAY,gDAAZ,EAA6D;AAACK,gBAAc,CAACJ,CAAD,EAAG;AAACI,kBAAc,GAACJ,CAAf;AAAiB;;AAApC,CAA7D,EAAmG,CAAnG;AAAsG,IAAIK,OAAJ;AAAYP,MAAM,CAACC,IAAP,CAAY,kCAAZ,EAA+C;AAACM,SAAO,CAACL,CAAD,EAAG;AAACK,WAAO,GAACL,CAAR;AAAU;;AAAtB,CAA/C,EAAuE,CAAvE;AAA0E,IAAIM,mBAAJ;AAAwBR,MAAM,CAACC,IAAP,CAAY,8CAAZ,EAA2D;AAACO,qBAAmB,CAACN,CAAD,EAAG;AAACM,uBAAmB,GAACN,CAApB;AAAsB;;AAA9C,CAA3D,EAA2G,CAA3G;;AAOpb,MAAMO,cAAc,GAAG;AAAA,MAACC,IAAD,uEAAQ,EAAR;AAAA,SAAgB;AACtCC,QAAI,EAAED,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAU;AADwB,GAAhB;AAAA,CAAvB;;AAIA,MAAME,qBAAqB,GAAG,QAA0D;AAAA,MAAzD;AAAEC,YAAF;AAAYH,QAAZ;AAAkBI,aAAlB;AAA6BC,cAAU,GAAG,MAAM,CAAE;AAAlD,GAAyD;AACvF,QAAMC,CAAC,GAAGV,cAAc,EAAxB;AAEA,QAAM;AAAEW,UAAF;AAAUC,YAAV;AAAoBC;AAApB,MAA0CZ,OAAO,CAACE,cAAc,CAACC,IAAD,CAAf,CAAvD;AAEA,QAAM;AAAEC;AAAF,MAAWM,MAAjB;AACA,QAAM;AAAEG;AAAF,MAAiBF,QAAvB;AAEA,QAAMG,SAAS,GAAGb,mBAAmB,EAArC;AAEA,QAAMc,gBAAgB,GAAGlB,OAAO,CAAC,MAAMiB,SAAS,CAACE,GAAV,CAAeZ,IAAD,IAAU,CAACA,IAAD,EAAOK,CAAC,CAACL,IAAD,CAAR,CAAxB,CAAP,EAAiD,CAACK,CAAD,EAAIK,SAAJ,CAAjD,CAAhC;AAEAR,UAAQ,IAAIA,QAAQ,CAAC;AAAEF;AAAF,GAAD,CAApB;AACAI,YAAU,CAACI,iBAAD,CAAV;AAEA,sBACC,oBAAC,KAAD;AAAO,aAAS,EAAEL;AAAlB,kBACC,oBAAC,KAAD,CAAO,KAAP,QAAcE,CAAC,CAAC,UAAD,CAAf,CADD,eAEC,oBAAC,KAAD,CAAO,GAAP,qBACC,oBAAC,cAAD;AAAgB,WAAO,EAAEM,gBAAzB;AAA2C,SAAK,EAAEX,IAAlD;AAAwD,YAAQ,EAAES;AAAlE,IADD,CAFD,CADD;AAQA,CAvBD;;AAXApB,MAAM,CAACwB,aAAP,CAoCeZ,qBApCf,E","file":"dynamic/ee/client/omnichannel/additionalForms/BusinessHoursTimeZone.js","sourcesContent":["import { SelectFiltered, Field } from '@rocket.chat/fuselage';\nimport React, { useMemo } from 'react';\n\nimport { useTranslation } from '../../../../client/contexts/TranslationContext';\nimport { useForm } from '../../../../client/hooks/useForm';\nimport { useTimezoneNameList } from '../../../../client/hooks/useTimezoneNameList';\n\nconst getInitialData = (data = {}) => ({\n\tname: data ?? '',\n});\n\nconst BusinessHoursTimeZone = ({ onChange, data, className, hasChanges = () => {} }) => {\n\tconst t = useTranslation();\n\n\tconst { values, handlers, hasUnsavedChanges } = useForm(getInitialData(data));\n\n\tconst { name } = values;\n\tconst { handleName } = handlers;\n\n\tconst timeZones = useTimezoneNameList();\n\n\tconst timeZonesOptions = useMemo(() => timeZones.map((name) => [name, t(name)]), [t, timeZones]);\n\n\tonChange && onChange({ name });\n\thasChanges(hasUnsavedChanges);\n\n\treturn (\n\t\t<Field className={className}>\n\t\t\t<Field.Label>{t('Timezone')}</Field.Label>\n\t\t\t<Field.Row>\n\t\t\t\t<SelectFiltered options={timeZonesOptions} value={name} onChange={handleName} />\n\t\t\t</Field.Row>\n\t\t</Field>\n\t);\n};\n\nexport default BusinessHoursTimeZone;\n"]}
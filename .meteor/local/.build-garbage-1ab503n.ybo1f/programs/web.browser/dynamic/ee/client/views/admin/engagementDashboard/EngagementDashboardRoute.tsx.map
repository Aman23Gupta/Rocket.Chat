{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/EngagementDashboardRoute.tsx"],"names":[],"mappings":";;;;;;;;AAAA,WAAO,SAAP;AAA8B,MAAS,CAAE,IAAX,CAAW,OAAX,EAAwB;AAAC;AAAA;AAAA,GAAD;;AAAC;AAAA;AAAA;;AAAD,CAAxB,EAAyB,CAAzB;AAAyB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAOvD,MAAM,UAAU,GAAI,GAAD,IAClB,OAAO,GAAP,KAAe,QAAf,IAA2B,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,QAAlC,CAA2C,GAA3C,CAD5B;;AAGA,MAAM,wBAAwB,GAAG,MAA0B;AAC1D,QAAM,0BAA0B,GAAG,aAAa,CAAC,2BAAD,CAAhD;AACA,QAAM,wBAAwB,GAAG,QAAQ,CAAC,sBAAD,CAAzC;AACA,QAAM,CAAC,SAAD,EAAY,WAAZ,IAA2B,eAAe,EAAhD;AACA,QAAM;AAAE;AAAF,MAAU,WAAV,aAAU,WAAV,cAAU,WAAV,GAAyB,EAA/B;AAEA,WAAS,CAAC,MAAK;AACd,QAAI,SAAS,KAAK,sBAAlB,EAA0C;AACzC;AACA;;AAED,QAAI,CAAC,UAAU,CAAC,GAAD,CAAf,EAAsB;AACrB,8BAAwB,CAAC,OAAzB,CAAiC;AAAE,WAAG,EAAE;AAAP,OAAjC;AACA;AACD,GARQ,EAQN,CAAC,SAAD,EAAY,wBAAZ,EAAsC,GAAtC,CARM,CAAT;;AAUA,MAAI,CAAC,UAAU,CAAC,GAAD,CAAf,EAAsB;AACrB,WAAO,IAAP;AACA;;AAED,MAAI,CAAC,0BAAL,EAAiC;AAChC,wBAAO,oBAAC,iBAAD,OAAP;AACA;;AAED,sBAAO,oBAAC,uBAAD;AAAyB,OAAG,EAAE,GAA9B;AAAmC,eAAW,EAAG,GAAD,IAAe,wBAAwB,CAAC,IAAzB,CAA8B;AAAE;AAAF,KAA9B;AAA/D,IAAP;AACA,CAzBD;;AAVA,OAAO,aAAP,CAqCe,wBArCf,E","file":"dynamic/ee/client/views/admin/engagementDashboard/EngagementDashboardRoute.tsx","sourcesContent":["import React, { ReactElement, useEffect } from 'react';\n\nimport NotAuthorizedPage from '../../../../../client/components/NotAuthorizedPage';\nimport { usePermission } from '../../../../../client/contexts/AuthorizationContext';\nimport { useCurrentRoute, useRoute } from '../../../../../client/contexts/RouterContext';\nimport EngagementDashboardPage from './EngagementDashboardPage';\n\nconst isValidTab = (tab: string | undefined): tab is 'users' | 'messages' | 'channels' =>\n\ttypeof tab === 'string' && ['users', 'messages', 'channels'].includes(tab);\n\nconst EngagementDashboardRoute = (): ReactElement | null => {\n\tconst canViewEngagementDashboard = usePermission('view-engagement-dashboard');\n\tconst engagementDashboardRoute = useRoute('engagement-dashboard');\n\tconst [routeName, routeParams] = useCurrentRoute();\n\tconst { tab } = routeParams ?? {};\n\n\tuseEffect(() => {\n\t\tif (routeName !== 'engagement-dashboard') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isValidTab(tab)) {\n\t\t\tengagementDashboardRoute.replace({ tab: 'users' });\n\t\t}\n\t}, [routeName, engagementDashboardRoute, tab]);\n\n\tif (!isValidTab(tab)) {\n\t\treturn null;\n\t}\n\n\tif (!canViewEngagementDashboard) {\n\t\treturn <NotAuthorizedPage />;\n\t}\n\n\treturn <EngagementDashboardPage tab={tab} onSelectTab={(tab): void => engagementDashboardRoute.push({ tab })} />;\n};\n\nexport default EngagementDashboardRoute;\n"]}
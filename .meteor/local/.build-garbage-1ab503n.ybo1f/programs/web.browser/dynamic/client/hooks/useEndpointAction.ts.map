{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useEndpointAction.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,mBAAmB,QAAQ;AAA3B,CAAT;AAAoC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAO7B,MAAM,iBAAiB,GAAG,UAChC,MADgC,EAEhC,IAFgC,EAOmD;AAAA,MAJnF,MAImF,uEAJX,EAIW;AAAA,MADnF,cACmF;AACnF,QAAM,QAAQ,GAAG,WAAW,CAAC,MAAD,EAAS,IAAT,CAA5B;AACA,QAAM,oBAAoB,GAAG,uBAAuB,EAApD;AAEA,SAAO,WAAW,CAAC,YAAW;AAC7B,QAAI;AACH,YAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,MAAD,CAA3B;;AAEA,UAAI,cAAJ,EAAoB;AACnB,4BAAoB,CAAC;AAAE,cAAI,EAAE,SAAR;AAAmB,iBAAO,EAAE;AAA5B,SAAD,CAApB;AACA;;AAED,aAAO,IAAP;AACA,KARD,CAQE,OAAO,KAAP,EAAc;AACf,0BAAoB,CAAC;AAAE,YAAI,EAAE,OAAR;AAAiB,eAAO,EAAE;AAA1B,OAAD,CAApB;AACA,YAAM,KAAN;AACA;AACD,GAbiB,EAaf,CAAC,oBAAD,EAAuB,MAAvB,EAA+B,QAA/B,EAAyC,cAAzC,CAbe,CAAlB;AAcA,CAzBM,C","file":"dynamic/client/hooks/useEndpointAction.ts","sourcesContent":["import { useCallback } from 'react';\n\nimport { Serialized } from '../../definition/Serialized';\nimport { MatchPathPattern, Method, OperationParams, OperationResult, PathFor } from '../../definition/rest';\nimport { useEndpoint } from '../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../contexts/ToastMessagesContext';\n\nexport const useEndpointAction = <TMethod extends Method, TPath extends PathFor<TMethod>>(\n\tmethod: TMethod,\n\tpath: TPath,\n\tparams: Serialized<OperationParams<TMethod, MatchPathPattern<TPath>>> = {} as Serialized<\n\t\tOperationParams<TMethod, MatchPathPattern<TPath>>\n\t>,\n\tsuccessMessage?: string,\n): (() => Promise<Serialized<OperationResult<TMethod, MatchPathPattern<TPath>>>>) => {\n\tconst sendData = useEndpoint(method, path);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useCallback(async () => {\n\t\ttry {\n\t\t\tconst data = await sendData(params);\n\n\t\t\tif (successMessage) {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: successMessage });\n\t\t\t}\n\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\tthrow error;\n\t\t}\n\t}, [dispatchToastMessage, params, sendData, successMessage]);\n};\n"]}
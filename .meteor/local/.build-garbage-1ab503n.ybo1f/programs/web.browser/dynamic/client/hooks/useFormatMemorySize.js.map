{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useFormatMemorySize.js"],"names":["module","export","useFormatMemorySize","s","link","default","v","formatMemorySize","memorySize","units","order","length","upperLimit","Math","pow","divider","decimalDigits","numberFormat"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,qBAAmB,EAAC,MAAIA;AAAzB,CAAd;AAA6D,IAAIC,CAAJ;AAAMH,MAAM,CAACI,IAAP,CAAY,mBAAZ,EAAgC;AAACC,SAAO,CAACC,CAAD,EAAG;AAACH,KAAC,GAACG,CAAF;AAAI;;AAAhB,CAAhC,EAAkD,CAAlD;;AAEnE,MAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AACxC,MAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AACnC,WAAO,IAAP;AACA;;AAED,QAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,CAAd;AAEA,MAAIC,KAAJ;;AACA,OAAKA,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvC,EAA0C,EAAED,KAA5C,EAAmD;AAClD,UAAME,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAeJ,KAAK,GAAG,CAAvB,CAAnB;;AAEA,QAAIF,UAAU,GAAGI,UAAjB,EAA6B;AAC5B;AACA;AACD;;AAED,QAAMG,OAAO,GAAGF,IAAI,CAACC,GAAL,CAAS,IAAT,EAAeJ,KAAf,CAAhB;AACA,QAAMM,aAAa,GAAGN,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,CAAxC;AACA,mBAAUP,CAAC,CAACc,YAAF,CAAeT,UAAU,GAAGO,OAA5B,EAAqCC,aAArC,CAAV,cAAiEP,KAAK,CAACC,KAAD,CAAtE;AACA,CAnBD;;AAqBO,MAAMR,mBAAmB,GAAG,MAAMK,gBAAlC,C","file":"dynamic/client/hooks/useFormatMemorySize.js","sourcesContent":["import s from 'underscore.string';\n\nconst formatMemorySize = (memorySize) => {\n\tif (typeof memorySize !== 'number') {\n\t\treturn null;\n\t}\n\n\tconst units = ['bytes', 'kB', 'MB', 'GB'];\n\n\tlet order;\n\tfor (order = 0; order < units.length - 1; ++order) {\n\t\tconst upperLimit = Math.pow(1024, order + 1);\n\n\t\tif (memorySize < upperLimit) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst divider = Math.pow(1024, order);\n\tconst decimalDigits = order === 0 ? 0 : 2;\n\treturn `${s.numberFormat(memorySize / divider, decimalDigits)} ${units[order]}`;\n};\n\nexport const useFormatMemorySize = () => formatMemorySize;\n"]}
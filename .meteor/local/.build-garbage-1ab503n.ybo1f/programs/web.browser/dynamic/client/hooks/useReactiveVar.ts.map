{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useReactiveVar.ts"],"names":[],"mappings":";;;;;;;;AACA,OAAO,MAAP,CAAS;AAAA,gBAAe;AAAf,CAAT;AAAyC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAIlC,MAAM,cAAc,GAAO,QAAJ,IAAmC;AAChE,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAC,MAAM,OAAO,CAAC,WAAR,CAAoB,MAAM,QAAQ,CAAC,GAAT,EAA1B,CAAP,CAAlC;AAEA,WAAS,CAAC,MAAK;AACd,UAAM,WAAW,GAAG,OAAO,CAAC,OAAR,CAAgB,MAAK;AACxC,YAAM,KAAK,GAAG,QAAQ,CAAC,GAAT,EAAd;AACA,cAAQ,CAAC,MAAM,KAAP,CAAR;AACA,KAHmB,CAApB;AAKA,WAAO,MAAW;AACjB,iBAAW,CAAC,IAAZ;AACA,KAFD;AAGA,GATQ,EASN,CAAC,QAAD,CATM,CAAT;AAWA,SAAO,KAAP;AACA,CAfM,C","file":"dynamic/client/hooks/useReactiveVar.ts","sourcesContent":["import { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport { useEffect, useState } from 'react';\n\n/** @deprecated */\nexport const useReactiveVar = <T>(variable: ReactiveVar<T>): T => {\n\tconst [value, setValue] = useState(() => Tracker.nonreactive(() => variable.get()));\n\n\tuseEffect(() => {\n\t\tconst computation = Tracker.autorun(() => {\n\t\t\tconst value = variable.get();\n\t\t\tsetValue(() => value);\n\t\t});\n\n\t\treturn (): void => {\n\t\t\tcomputation.stop();\n\t\t};\n\t}, [variable]);\n\n\treturn value;\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useUpdateAvatar.js"],"names":["_objectSpread","module","link","default","v","export","useUpdateAvatar","useMemo","useCallback","useMethod","useToastMessageDispatch","useTranslation","useEndpointAction","useEndpointUpload","avatarObj","userId","t","avatarUrl","successText","setAvatarFromService","dispatchToastMessage","saveAvatarQuery","resetAvatarQuery","saveAvatarAction","saveAvatarUrlAction","resetAvatarAction","updateAvatar","service","blob","contentType","type","message","error","FormData","set"],"mappings":";;;;;;;;AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,SAAO,CAACC,CAAD,EAAG;AAACJ,iBAAa,GAACI,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;AAAlBH,MAAM,CAACI,MAAP,CAAc;AAACC,iBAAe,EAAC,MAAIA;AAArB,CAAd;AAAqD,IAAIC,OAAJ,EAAYC,WAAZ;AAAwBP,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACK,SAAO,CAACH,CAAD,EAAG;AAACG,WAAO,GAACH,CAAR;AAAU,GAAtB;;AAAuBI,aAAW,CAACJ,CAAD,EAAG;AAACI,eAAW,GAACJ,CAAZ;AAAc;;AAApD,CAApB,EAA0E,CAA1E;AAA6E,IAAIK,SAAJ;AAAcR,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACO,WAAS,CAACL,CAAD,EAAG;AAACK,aAAS,GAACL,CAAV;AAAY;;AAA1B,CAAxC,EAAoE,CAApE;AAAuE,IAAIM,uBAAJ;AAA4BT,MAAM,CAACC,IAAP,CAAY,kCAAZ,EAA+C;AAACQ,yBAAuB,CAACN,CAAD,EAAG;AAACM,2BAAuB,GAACN,CAAxB;AAA0B;;AAAtD,CAA/C,EAAuG,CAAvG;AAA0G,IAAIO,cAAJ;AAAmBV,MAAM,CAACC,IAAP,CAAY,gCAAZ,EAA6C;AAACS,gBAAc,CAACP,CAAD,EAAG;AAACO,kBAAc,GAACP,CAAf;AAAiB;;AAApC,CAA7C,EAAmF,CAAnF;AAAsF,IAAIQ,iBAAJ;AAAsBX,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACU,mBAAiB,CAACR,CAAD,EAAG;AAACQ,qBAAiB,GAACR,CAAlB;AAAoB;;AAA1C,CAAlC,EAA8E,CAA9E;AAAiF,IAAIS,iBAAJ;AAAsBZ,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACW,mBAAiB,CAACT,CAAD,EAAG;AAACS,qBAAiB,GAACT,CAAlB;AAAoB;;AAA1C,CAAlC,EAA8E,CAA9E;;AAQplB,MAAME,eAAe,GAAG,CAACQ,SAAD,EAAYC,MAAZ,KAAuB;AACrD,QAAMC,CAAC,GAAGL,cAAc,EAAxB;AACA,QAAMM,SAAS,GAAGH,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEG,SAA7B;AAEA,QAAMC,WAAW,GAAGF,CAAC,CAAC,6BAAD,CAArB;AACA,QAAMG,oBAAoB,GAAGV,SAAS,CAAC,sBAAD,CAAtC;AAEA,QAAMW,oBAAoB,GAAGV,uBAAuB,EAApD;AAEA,QAAMW,eAAe,GAAGd,OAAO,CAC9B;AACCQ;AADD,KAEKE,SAAS,IAAI;AAAEA;AAAF,GAFlB,CAD8B,EAK9B,CAACA,SAAD,EAAYF,MAAZ,CAL8B,CAA/B;AAQA,QAAMO,gBAAgB,GAAGf,OAAO,CAC/B,OAAO;AACNQ;AADM,GAAP,CAD+B,EAI/B,CAACA,MAAD,CAJ+B,CAAhC;AAOA,QAAMQ,gBAAgB,GAAGV,iBAAiB,CAAC,iBAAD,EAAoBQ,eAApB,EAAqCH,WAArC,CAA1C;AACA,QAAMM,mBAAmB,GAAGZ,iBAAiB,CAAC,MAAD,EAAS,iBAAT,EAA4BS,eAA5B,EAA6CH,WAA7C,CAA7C;AACA,QAAMO,iBAAiB,GAAGb,iBAAiB,CAAC,MAAD,EAAS,mBAAT,EAA8BU,gBAA9B,EAAgDJ,WAAhD,CAA3C;AAEA,QAAMQ,YAAY,GAAGlB,WAAW,CAAC,YAAY;AAC5C,QAAIM,SAAS,KAAK,OAAlB,EAA2B;AAC1B,aAAOW,iBAAiB,EAAxB;AACA;;AACD,QAAIX,SAAS,CAACG,SAAd,EAAyB;AACxB,aAAOO,mBAAmB,EAA1B;AACA;;AACD,QAAIV,SAAS,CAACa,OAAd,EAAuB;AACtB,YAAM;AAAEC,YAAF;AAAQC,mBAAR;AAAqBF;AAArB,UAAiCb,SAAvC;;AACA,UAAI;AACH,cAAMK,oBAAoB,CAACS,IAAD,EAAOC,WAAP,EAAoBF,OAApB,CAA1B;AACAP,4BAAoB,CAAC;AAAEU,cAAI,EAAE,SAAR;AAAmBC,iBAAO,EAAEb;AAA5B,SAAD,CAApB;AACA,OAHD,CAGE,OAAOc,KAAP,EAAc;AACfZ,4BAAoB,CAAC;AAAEU,cAAI,EAAE,OAAR;AAAiBC,iBAAO,EAAEC;AAA1B,SAAD,CAApB;AACA;;AACD;AACA;;AACD,QAAIlB,SAAS,YAAYmB,QAAzB,EAAmC;AAClCnB,eAAS,CAACoB,GAAV,CAAc,QAAd,EAAwBnB,MAAxB;AACA,aAAOQ,gBAAgB,CAACT,SAAD,CAAvB;AACA;AACD,GArB+B,EAqB7B,CACFA,SADE,EAEFM,oBAFE,EAGFK,iBAHE,EAIFF,gBAJE,EAKFC,mBALE,EAMFL,oBANE,EAOFD,WAPE,EAQFH,MARE,CArB6B,CAAhC;AAgCA,SAAOW,YAAP;AACA,CA7DM,C","file":"dynamic/client/hooks/useUpdateAvatar.js","sourcesContent":["import { useMemo, useCallback } from 'react';\n\nimport { useMethod } from '../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../contexts/ToastMessagesContext';\nimport { useTranslation } from '../contexts/TranslationContext';\nimport { useEndpointAction } from './useEndpointAction';\nimport { useEndpointUpload } from './useEndpointUpload';\n\nexport const useUpdateAvatar = (avatarObj, userId) => {\n\tconst t = useTranslation();\n\tconst avatarUrl = avatarObj?.avatarUrl;\n\n\tconst successText = t('Avatar_changed_successfully');\n\tconst setAvatarFromService = useMethod('setAvatarFromService');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst saveAvatarQuery = useMemo(\n\t\t() => ({\n\t\t\tuserId,\n\t\t\t...(avatarUrl && { avatarUrl }),\n\t\t}),\n\t\t[avatarUrl, userId],\n\t);\n\n\tconst resetAvatarQuery = useMemo(\n\t\t() => ({\n\t\t\tuserId,\n\t\t}),\n\t\t[userId],\n\t);\n\n\tconst saveAvatarAction = useEndpointUpload('users.setAvatar', saveAvatarQuery, successText);\n\tconst saveAvatarUrlAction = useEndpointAction('POST', 'users.setAvatar', saveAvatarQuery, successText);\n\tconst resetAvatarAction = useEndpointAction('POST', 'users.resetAvatar', resetAvatarQuery, successText);\n\n\tconst updateAvatar = useCallback(async () => {\n\t\tif (avatarObj === 'reset') {\n\t\t\treturn resetAvatarAction();\n\t\t}\n\t\tif (avatarObj.avatarUrl) {\n\t\t\treturn saveAvatarUrlAction();\n\t\t}\n\t\tif (avatarObj.service) {\n\t\t\tconst { blob, contentType, service } = avatarObj;\n\t\t\ttry {\n\t\t\t\tawait setAvatarFromService(blob, contentType, service);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: successText });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (avatarObj instanceof FormData) {\n\t\t\tavatarObj.set('userId', userId);\n\t\t\treturn saveAvatarAction(avatarObj);\n\t\t}\n\t}, [\n\t\tavatarObj,\n\t\tdispatchToastMessage,\n\t\tresetAvatarAction,\n\t\tsaveAvatarAction,\n\t\tsaveAvatarUrlAction,\n\t\tsetAvatarFromService,\n\t\tsuccessText,\n\t\tuserId,\n\t]);\n\n\treturn updateAvatar;\n};\n"]}
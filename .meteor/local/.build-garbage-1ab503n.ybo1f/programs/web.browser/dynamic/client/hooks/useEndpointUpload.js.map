{"version":3,"sources":["meteor://ğŸ’»app/client/hooks/useEndpointUpload.js"],"names":["module","export","useEndpointUpload","useCallback","link","v","useUpload","useToastMessageDispatch","endpoint","params","successMessage","sendData","dispatchToastMessage","args","data","promise","Promise","success","Error","status","type","message","error"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,mBAAiB,EAAC,MAAIA;AAAvB,CAAd;AAAyD,IAAIC,WAAJ;AAAgBH,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACD,aAAW,CAACE,CAAD,EAAG;AAACF,eAAW,GAACE,CAAZ;AAAc;;AAA9B,CAApB,EAAoD,CAApD;AAAuD,IAAIC,SAAJ;AAAcN,MAAM,CAACI,IAAP,CAAY,2BAAZ,EAAwC;AAACE,WAAS,CAACD,CAAD,EAAG;AAACC,aAAS,GAACD,CAAV;AAAY;;AAA1B,CAAxC,EAAoE,CAApE;AAAuE,IAAIE,uBAAJ;AAA4BP,MAAM,CAACI,IAAP,CAAY,kCAAZ,EAA+C;AAACG,yBAAuB,CAACF,CAAD,EAAG;AAACE,2BAAuB,GAACF,CAAxB;AAA0B;;AAAtD,CAA/C,EAAuG,CAAvG;;AAK1O,MAAMH,iBAAiB,GAAG,UAACM,QAAD,EAA2C;AAAA,MAAhCC,MAAgC,uEAAvB,EAAuB;AAAA,MAAnBC,cAAmB;AAC3E,QAAMC,QAAQ,GAAGL,SAAS,CAACE,QAAD,CAA1B;AACA,QAAMI,oBAAoB,GAAGL,uBAAuB,EAApD;AAEA,SAAOJ,WAAW,CACjB,kBAAmB;AAClB,QAAI;AAAA,wCADKU,IACL;AADKA,YACL;AAAA;;AACH,UAAIC,IAAI,GAAGH,QAAQ,CAACF,MAAD,EAAS,GAAGI,IAAZ,CAAnB;AACA,YAAME,OAAO,GAAGD,IAAI,YAAYE,OAAhB,GAA0BF,IAA1B,GAAiCA,IAAI,CAACC,OAAtD;AAEAD,UAAI,GAAG,MAAMC,OAAb;;AAEA,UAAI,CAACD,IAAI,CAACG,OAAV,EAAmB;AAClB,cAAM,IAAIC,KAAJ,CAAUJ,IAAI,CAACK,MAAf,CAAN;AACA;;AAEDT,oBAAc,IAAIE,oBAAoB,CAAC;AAAEQ,YAAI,EAAE,SAAR;AAAmBC,eAAO,EAAEX;AAA5B,OAAD,CAAtC;AAEA,aAAOI,IAAP;AACA,KAbD,CAaE,OAAOQ,KAAP,EAAc;AACfV,0BAAoB,CAAC;AAAEQ,YAAI,EAAE,OAAR;AAAiBC,eAAO,EAAEC;AAA1B,OAAD,CAApB;AACA,aAAO;AAAEL,eAAO,EAAE;AAAX,OAAP;AACA;AACD,GAnBgB,EAoBjB,CAACL,oBAAD,EAAuBH,MAAvB,EAA+BE,QAA/B,EAAyCD,cAAzC,CApBiB,CAAlB;AAsBA,CA1BM,C","file":"dynamic/client/hooks/useEndpointUpload.js","sourcesContent":["import { useCallback } from 'react';\n\nimport { useUpload } from '../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../contexts/ToastMessagesContext';\n\nexport const useEndpointUpload = (endpoint, params = {}, successMessage) => {\n\tconst sendData = useUpload(endpoint);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useCallback(\n\t\tasync (...args) => {\n\t\t\ttry {\n\t\t\t\tlet data = sendData(params, ...args);\n\t\t\t\tconst promise = data instanceof Promise ? data : data.promise;\n\n\t\t\t\tdata = await promise;\n\n\t\t\t\tif (!data.success) {\n\t\t\t\t\tthrow new Error(data.status);\n\t\t\t\t}\n\n\t\t\t\tsuccessMessage && dispatchToastMessage({ type: 'success', message: successMessage });\n\n\t\t\t\treturn data;\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\treturn { success: false };\n\t\t\t}\n\t\t},\n\t\t[dispatchToastMessage, params, sendData, successMessage],\n\t);\n};\n"]}
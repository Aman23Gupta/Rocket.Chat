{"version":3,"sources":["meteor://ðŸ’»app/client/lib/lists/FilesList.ts"],"names":[],"mappings":";;;;;;;;AACA,OAAO,MAAP,CAAS;AAAA,WAAa,QAAM;AAAnB,CAAT;AAA4B,IAAgB,WAAhB;AAAgB;AAAA;AAAA;AAAA;;AAAA;;AAU5C,MAAM,mBAAmB,GAAG,CAAC,OAAD,EAAoB,GAApB,KAAsE,OAAO,CAAC,GAAR,KAAgB,GAAhB,IAAuB,SAAS,OAAlI;;AAEM,MAAO,SAAP,SAAyB,WAAzB,CAAoC;AACzC,cAA2B,QAA3B,EAAqD;AACpD;AADoD,SAA1B,QAA0B;AAA1B;AAE1B;;AAEiB,MAAP,OAAO;AACjB,WAAO,KAAK,QAAZ;AACA;;AAEM,eAAa,CAAC,OAAD,EAA0B;AAC7C,SAAK,QAAL,GAAgB,OAAhB;AACA,SAAK,KAAL;AACA;;AAES,QAAM,CAAC,OAAD,EAAkB;AACjC,UAAM;AAAE;AAAF,QAAU,KAAK,QAArB;;AAEA,QAAI,CAAC,mBAAmB,CAAC,OAAD,EAAU,GAAV,CAAxB,EAAwC;AACvC,aAAO,KAAP;AACA;;AAED,WAAO,IAAP;AACA;;AAES,SAAO,CAAC,CAAD,EAAc,CAAd,EAAyB;AAAA;;AACzC,WAAO,WAAC,CAAC,CAAC,GAAH,2CAAU,CAAC,CAAC,EAAZ,EAAgB,OAAhB,KAA4B,WAAC,CAAC,CAAC,GAAH,2CAAU,CAAC,CAAC,EAAZ,EAAgB,OAAhB,EAAnC;AACA;;AA1BwC,C","file":"dynamic/client/lib/lists/FilesList.ts","sourcesContent":["import type { IMessage } from '../../../definition/IMessage';\nimport { MessageList } from './MessageList';\n\ntype FilesMessage = Omit<IMessage, 'rid'> & Required<Pick<IMessage, 'rid'>>;\n\nexport type FilesListOptions = {\n\trid: IMessage['rid'];\n\ttype: string;\n\ttext: string;\n};\n\nconst isFileMessageInRoom = (message: IMessage, rid: IMessage['rid']): message is FilesMessage => message.rid === rid && 'rid' in message;\n\nexport class FilesList extends MessageList {\n\tpublic constructor(private _options: FilesListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): FilesListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: FilesListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IMessage): boolean {\n\t\tconst { rid } = this._options;\n\n\t\tif (!isFileMessageInRoom(message, rid)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected compare(a: IMessage, b: IMessage): number {\n\t\treturn (b.tlm ?? b.ts).getTime() - (a.tlm ?? a.ts).getTime();\n\t}\n}\n"]}
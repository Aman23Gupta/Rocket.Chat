{"version":3,"sources":["meteor://ðŸ’»app/client/lib/lists/DiscussionsList.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,iBAAoB;AAApB,CAAT;AAA6B;AAA8B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAY3D,MAAM,yBAAyB,GAAG,CAAC,OAAD,EAAoB,GAApB,KACjC,OAAO,CAAC,GAAR,KAAgB,GAAhB,IAAuB,UAAU,OADlC;;AAGA,MAAM,wBAAwB,GAAG,CAAC,iBAAD,EAAuC,KAAvC,KAAkE,KAAK,CAAC,IAAN,CAAW,iBAAiB,CAAC,GAA7B,CAAnG;;AAEM,MAAO,eAAP,SAA+B,WAA/B,CAA0C;AAC/C,cAA2B,QAA3B,EAA2D;AAC1D;AAD0D,SAAhC,QAAgC;AAAhC;AAE1B;;AAEiB,MAAP,OAAO;AACjB,WAAO,KAAK,QAAZ;AACA;;AAEM,eAAa,CAAC,OAAD,EAAgC;AACnD,SAAK,QAAL,GAAgB,OAAhB;AACA,SAAK,KAAL;AACA;;AAES,QAAM,CAAC,OAAD,EAAkB;AACjC,UAAM;AAAE;AAAF,QAAU,KAAK,QAArB;;AAEA,QAAI,CAAC,yBAAyB,CAAC,OAAD,EAAU,GAAV,CAA9B,EAA8C;AAC7C,aAAO,KAAP;AACA;;AAED,QAAI,KAAK,QAAL,CAAc,IAAlB,EAAwB;AACvB,YAAM,KAAK,GAAG,IAAI,MAAJ,CAAW,YAAY,CAAC,KAAK,QAAL,CAAc,IAAf,CAAvB,EAA6C,GAA7C,CAAd;;AACA,UAAI,CAAC,wBAAwB,CAAC,OAAD,EAAU,KAAV,CAA7B,EAA+C;AAC9C,eAAO,KAAP;AACA;AACD;;AAED,WAAO,IAAP;AACA;;AAES,SAAO,CAAC,CAAD,EAAc,CAAd,EAAyB;AAAA;;AACzC,WAAO,WAAC,CAAC,CAAC,GAAH,2CAAU,CAAC,CAAC,EAAZ,EAAgB,OAAhB,KAA4B,WAAC,CAAC,CAAC,GAAH,2CAAU,CAAC,CAAC,EAAZ,EAAgB,OAAhB,EAAnC;AACA;;AAjC8C,C","file":"dynamic/client/lib/lists/DiscussionsList.ts","sourcesContent":["import { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport type { IMessage } from '../../../definition/IMessage';\nimport { MessageList } from './MessageList';\n\ntype DiscussionMessage = Omit<IMessage, 'drid'> & Required<Pick<IMessage, 'drid'>>;\n\nexport type DiscussionsListOptions = {\n\trid: IMessage['rid'];\n\ttext?: string;\n};\n\nconst isDiscussionMessageInRoom = (message: IMessage, rid: IMessage['rid']): message is DiscussionMessage =>\n\tmessage.rid === rid && 'drid' in message;\n\nconst isDiscussionTextMatching = (discussionMessage: DiscussionMessage, regex: RegExp): boolean => regex.test(discussionMessage.msg);\n\nexport class DiscussionsList extends MessageList {\n\tpublic constructor(private _options: DiscussionsListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): DiscussionsListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: DiscussionsListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IMessage): boolean {\n\t\tconst { rid } = this._options;\n\n\t\tif (!isDiscussionMessageInRoom(message, rid)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._options.text) {\n\t\t\tconst regex = new RegExp(escapeRegExp(this._options.text), 'i');\n\t\t\tif (!isDiscussionTextMatching(message, regex)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected compare(a: IMessage, b: IMessage): number {\n\t\treturn (b.tlm ?? b.ts).getTime() - (a.tlm ?? a.ts).getTime();\n\t}\n}\n"]}
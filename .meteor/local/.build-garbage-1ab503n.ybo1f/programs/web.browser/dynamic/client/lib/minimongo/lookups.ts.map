{"version":3,"sources":["meteor://ðŸ’»app/client/lib/minimongo/lookups.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,sBAAoB;AAApB,CAAT;AAA6C;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAE7C,MAAM,cAAc,GAAI,GAAD,IAA2C,GAAG,KAAK,SAAR,IAAqB,GAAG,KAAK,IAA/F;;AAEA,MAAM,gBAAgB,GAAI,GAAD,IACxB,GAAG,KAAK,SAAR,IAAqB,GAAG,KAAK,IAA7B,KAAsC,OAAO,GAAP,KAAe,QAAf,IAA2B,OAAO,GAAP,KAAe,UAAhF,CADD;;AAGA,MAAM,iBAAiB,GAAG,CAAI,KAAJ,EAAoB,iBAApB,KAAiE,KAAK,CAAC,OAAN,CAAc,KAAd,KAAwB,iBAAnH;;AAEO,MAAM,oBAAoB,GAAO,GAAJ,IAA4C;AAC/E,QAAM,CAAC,KAAD,EAAQ,IAAR,IAAgB,GAAG,CAAC,KAAJ,CAAU,QAAV,CAAtB;;AAEA,MAAI,CAAC,IAAL,EAAW;AACV,WAAW,GAAJ,IAAyB;AAC/B,UAAI,cAAc,CAAC,GAAD,CAAd,IAAuB,CAAC,gBAAgB,CAAC,GAAD,CAA5C,EAAmD;AAClD,eAAO,CAAC,SAAD,CAAP;AACA;;AAED,aAAO,CAAC,GAAG,CAAC,KAAD,CAAJ,CAAP;AACA,KAND;AAOA;;AAED,QAAM,UAAU,GAAG,oBAAoB,CAAC,IAAD,CAAvC;AACA,QAAM,aAAa,GAAG,aAAa,IAAb,CAAkB,IAAlB,CAAtB;AAEA,SAAW,GAAJ,IAAyB;AAC/B,QAAI,cAAc,CAAC,GAAD,CAAd,IAAuB,CAAC,gBAAgB,CAAC,GAAD,CAA5C,EAAmD;AAClD,aAAO,CAAC,SAAD,CAAP;AACA;;AAED,UAAM,UAAU,GAAG,GAAG,CAAC,KAAD,CAAtB;;AAEA,QAAI,YAAY,CAAC,UAAD,CAAhB,EAA8B;AAC7B,aAAO,CAAC,SAAD,CAAP;AACA;;AAED,UAAM,IAAI,GAAG,iBAAiB,CAAC,UAAD,EAAa,aAAb,CAAjB,GAA+C,UAA/C,GAA4D,CAAC,UAAD,CAAzE;AACA,WAAO,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,KAAvB,CAA6B,EAA7B,EAAiC,IAAI,CAAC,GAAL,CAAS,UAAT,CAAjC,CAAP;AACA,GAbD;AAcA,CA9BM,C","file":"dynamic/client/lib/minimongo/lookups.ts","sourcesContent":["import { isEmptyArray } from './comparisons';\n\nconst isNullDocument = (doc: unknown): doc is undefined | null => doc === undefined || doc === null;\n\nconst isRecordDocument = (doc: unknown): doc is Record<string, unknown> =>\n\tdoc !== undefined && doc !== null && (typeof doc === 'object' || typeof doc === 'function');\n\nconst isIndexedByNumber = <T>(value: unknown, isIndexedByNumber: boolean): value is T[] => Array.isArray(value) || isIndexedByNumber;\n\nexport const createLookupFunction = <T>(key: string): ((doc: T) => unknown[]) => {\n\tconst [first, rest] = key.split(/\\.(.+)/);\n\n\tif (!rest) {\n\t\treturn <T>(doc: T): unknown[] => {\n\t\t\tif (isNullDocument(doc) || !isRecordDocument(doc)) {\n\t\t\t\treturn [undefined];\n\t\t\t}\n\n\t\t\treturn [doc[first]];\n\t\t};\n\t}\n\n\tconst lookupRest = createLookupFunction(rest);\n\tconst nextIsNumeric = /^\\d+(\\.|$)/.test(rest);\n\n\treturn <T>(doc: T): unknown[] => {\n\t\tif (isNullDocument(doc) || !isRecordDocument(doc)) {\n\t\t\treturn [undefined];\n\t\t}\n\n\t\tconst firstLevel = doc[first];\n\n\t\tif (isEmptyArray(firstLevel)) {\n\t\t\treturn [undefined];\n\t\t}\n\n\t\tconst docs = isIndexedByNumber(firstLevel, nextIsNumeric) ? firstLevel : [firstLevel as T];\n\t\treturn Array.prototype.concat.apply([], docs.map(lookupRest));\n\t};\n};\n"]}
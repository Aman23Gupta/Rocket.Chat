{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/queueList/index.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/omnichannel/queueList/index.tsx","sourcesContent":["import { Box, Table } from '@rocket.chat/fuselage';\nimport { useDebouncedValue, useMediaQuery, useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport GenericTable from '../../../components/GenericTable';\nimport UserAvatar from '../../../components/avatar/UserAvatar';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useEndpointData } from '../../../hooks/useEndpointData';\nimport { QueueListPage } from './QueueListPage';\nimport { useQuery } from './hooks/useQuery';\n\nconst QueueList = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst [sort, setSort] = useState<[string, 'asc' | 'desc']>(['servedBy', 'desc']);\n\n\tconst onHeaderClick = useMutableCallback((id) => {\n\t\tconst [sortBy, sortDirection] = sort;\n\n\t\tif (sortBy === id) {\n\t\t\tsetSort([id, sortDirection === 'asc' ? 'desc' : 'asc']);\n\t\t\treturn;\n\t\t}\n\t\tsetSort([id, 'asc']);\n\t});\n\n\tconst mediaQuery = useMediaQuery('(min-width: 1024px)');\n\n\tconst header = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\tmediaQuery && (\n\t\t\t\t\t<GenericTable.HeaderCell\n\t\t\t\t\t\tkey={'servedBy'}\n\t\t\t\t\t\tdirection={sort[1]}\n\t\t\t\t\t\tactive={sort[0] === 'servedBy'}\n\t\t\t\t\t\tonClick={onHeaderClick}\n\t\t\t\t\t\tsort='servedBy'\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Served_By')}\n\t\t\t\t\t</GenericTable.HeaderCell>\n\t\t\t\t),\n\t\t\t\t<GenericTable.HeaderCell\n\t\t\t\t\tkey={'department'}\n\t\t\t\t\tdirection={sort[1]}\n\t\t\t\t\tactive={sort[0] === 'departmend'}\n\t\t\t\t\tonClick={onHeaderClick}\n\t\t\t\t\tsort='department'\n\t\t\t\t>\n\t\t\t\t\t{t('Department')}\n\t\t\t\t</GenericTable.HeaderCell>,\n\t\t\t\t<GenericTable.HeaderCell key={'total'} direction={sort[1]} active={sort[0] === 'total'} onClick={onHeaderClick} sort='total'>\n\t\t\t\t\t{t('Total')}\n\t\t\t\t</GenericTable.HeaderCell>,\n\t\t\t\t<GenericTable.HeaderCell key={'status'} direction={sort[1]} active={sort[0] === 'status'} onClick={onHeaderClick} sort='status'>\n\t\t\t\t\t{t('Status')}\n\t\t\t\t</GenericTable.HeaderCell>,\n\t\t\t].filter(Boolean),\n\t\t[mediaQuery, sort, onHeaderClick, t],\n\t);\n\n\tconst renderRow = useCallback(\n\t\t({ user, department, chats }) => {\n\t\t\tconst getStatusText = (): string => {\n\t\t\t\tif (user.status === 'online') {\n\t\t\t\t\treturn t('Online');\n\t\t\t\t}\n\n\t\t\t\treturn t('Offline');\n\t\t\t};\n\n\t\t\treturn (\n\t\t\t\t<Table.Row key={user._id} tabIndex={0}>\n\t\t\t\t\t<Table.Cell withTruncatedText>\n\t\t\t\t\t\t<Box display='flex' alignItems='center' mb='5px'>\n\t\t\t\t\t\t\t<UserAvatar size={mediaQuery ? 'x28' : 'x40'} username={user.username} />\n\t\t\t\t\t\t\t<Box display='flex' mi='x8'>\n\t\t\t\t\t\t\t\t{user.username}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t<Table.Cell withTruncatedText>{department ? department.name : ''}</Table.Cell>\n\t\t\t\t\t<Table.Cell withTruncatedText>{chats}</Table.Cell>\n\t\t\t\t\t<Table.Cell withTruncatedText>{getStatusText()}</Table.Cell>\n\t\t\t\t</Table.Row>\n\t\t\t);\n\t\t},\n\t\t[mediaQuery, t],\n\t);\n\n\tconst [params, setParams] = useState({\n\t\tservedBy: '',\n\t\tstatus: '',\n\t\tdepartmentId: '',\n\t\titemsPerPage: 25,\n\t\tcurrent: 0,\n\t});\n\tconst debouncedParams = useDebouncedValue(params, 500);\n\tconst debouncedSort = useDebouncedValue(sort, 500);\n\tconst query = useQuery(debouncedParams, debouncedSort);\n\tconst { value: data } = useEndpointData('livechat/queue', query);\n\n\treturn (\n\t\t<QueueListPage title={t('Livechat_Queue')} header={header} data={data} renderRow={renderRow} params={params} setParams={setParams} />\n\t);\n};\n\nexport default QueueList;\n"]}
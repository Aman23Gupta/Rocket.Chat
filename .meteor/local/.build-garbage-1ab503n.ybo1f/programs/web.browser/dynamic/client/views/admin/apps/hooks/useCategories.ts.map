{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/apps/hooks/useCategories.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,eAAa,QAAW;AAAxB,CAAT;AAA0C,IAAU,WAAV,EAAuB,SAAvB,EAAwB,OAAxB,EAAwB,QAAxB;AAAwB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAiB3D,MAAM,aAAa,GAAG,MAKzB;AACH,QAAM,CAAC,GAAG,cAAc,EAAxB;AACA,QAAM,CAAC,UAAD,EAAa,aAAb,IAA8B,QAAQ,CAAsC,EAAtC,CAA5C;AAEA,QAAM,eAAe,GAAG,WAAW,CAAC,YAA0B;AAC7D,QAAI;AACH,YAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,aAAL,EAAhC;AAEA,YAAM,gBAAgB,GAAG,iBAAiB,CAAC,GAAlB,CAAuB,eAAD,KAAgC;AAC9E,UAAE,EAAE,eAAe,CAAC,EAD0D;AAE9E,aAAK,EAAE,eAAe,CAAC,KAFuD;AAG9E,eAAO,EAAE;AAHqE,OAAhC,CAAtB,CAAzB;AAMA,mBAAa,CAAC,CACb;AACC,aAAK,EAAE,CACN;AACC,YAAE,EAAE,KADL;AAEC,eAAK,EAAE,CAAC,CAAC,gBAAD;AAFT,SADM;AADR,OADa,EASb;AACC,aAAK,EAAE,CAAC,CAAC,oBAAD,CADT;AAEC,aAAK,EAAE;AAFR,OATa,CAAD,CAAb;AAcA,KAvBD,CAuBE,OAAO,CAAP,EAAU;AACX,oBAAc,CAAC,CAAD,CAAd;AACA;AACD,GA3BkC,EA2BhC,CAAC,CAAD,CA3BgC,CAAnC;AA6BA,WAAS,CAAC,MAAK;AACd,UAAM,sBAAsB,GAAG,YAA0B;AACxD,YAAM,eAAe,EAArB;AACA,KAFD;;AAIA,0BAAsB;AACtB,GANQ,EAMN,CAAC,eAAD,CANM,CAAT;AAQA,QAAM,UAAU,GAAG,iBAAiB,CAAC,aAAD,CAApC;AACA,QAAM,cAAc,GAAG,mBAAmB,CAAC,UAAD,CAA1C;AACA,QAAM,YAAY,GAAG,mBAAmB,CAAC,UAAD,CAAnB,CAAgC,MAArD;AAEA,QAAM,kBAAkB,GAAG,OAAO,CACjC,MAAM,cAAc,CAAC,MAAf,CAAuB,QAAD,IAAc,OAAO,CAAC,QAAQ,CAAC,OAAV,CAA3C,CAD2B,EAEjC,CAAC,cAAD,CAFiC,CAAlC;AAIA,SAAO,CAAC,UAAD,EAAa,kBAAb,EAAiC,YAAY,KAAK,kBAAkB,CAAC,MAApC,GAA6C,EAA7C,GAAkD,kBAAnF,EAAuG,UAAvG,CAAP;AACA,CAvDM,C","file":"dynamic/client/views/admin/apps/hooks/useCategories.ts","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { Apps } from '../../../../../app/apps/client/orchestrator';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport { CategoryDropdownItem, CategoryDropDownListProps } from '../definitions/CategoryDropdownDefinitions';\nimport { handleAPIError } from '../helpers';\nimport { useCategoryFlatList } from './useCategoryFlatList';\nimport { useCategoryToggle } from './useCategoryToggle';\n\ntype Category = {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\tcreatedDate: string;\n\tmodifiedDate: string;\n};\n\nexport const useCategories = (): [\n\tCategoryDropDownListProps['groups'],\n\t(CategoryDropdownItem & { checked: true })[],\n\t(CategoryDropdownItem & { checked: true })[],\n\tCategoryDropDownListProps['onSelected'],\n] => {\n\tconst t = useTranslation();\n\tconst [categories, setCategories] = useState<CategoryDropDownListProps['groups']>([]);\n\n\tconst fetchCategories = useCallback(async (): Promise<void> => {\n\t\ttry {\n\t\t\tconst fetchedCategories = await Apps.getCategories();\n\n\t\t\tconst mappedCategories = fetchedCategories.map((currentCategory: Category) => ({\n\t\t\t\tid: currentCategory.id,\n\t\t\t\tlabel: currentCategory.title,\n\t\t\t\tchecked: false,\n\t\t\t}));\n\n\t\t\tsetCategories([\n\t\t\t\t{\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'all',\n\t\t\t\t\t\t\tlabel: t('All_categories'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: t('Filter_by_category'),\n\t\t\t\t\titems: mappedCategories,\n\t\t\t\t},\n\t\t\t]);\n\t\t} catch (e) {\n\t\t\thandleAPIError(e);\n\t\t}\n\t}, [t]);\n\n\tuseEffect(() => {\n\t\tconst fetchCategoriesWrapper = async (): Promise<void> => {\n\t\t\tawait fetchCategories();\n\t\t};\n\n\t\tfetchCategoriesWrapper();\n\t}, [fetchCategories]);\n\n\tconst onSelected = useCategoryToggle(setCategories);\n\tconst flatCategories = useCategoryFlatList(categories);\n\tconst originalSize = useCategoryFlatList(categories).length;\n\n\tconst selectedCategories = useMemo(\n\t\t() => flatCategories.filter((category) => Boolean(category.checked)),\n\t\t[flatCategories],\n\t) as (CategoryDropdownItem & { checked: true })[];\n\treturn [categories, selectedCategories, originalSize === selectedCategories.length ? [] : selectedCategories, onSelected];\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/hooks/useDepartmentsByUnitsList.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,2BAA6B,QAAO;AAApC,CAAT;AAA8C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAavC,MAAM,yBAAyB,GACrC,OADwC,IAOrC;AACH,QAAM,CAAC,SAAD,EAAY,YAAZ,IAA4B,QAAQ,CAAC,MAAM,IAAI,UAAJ,EAAP,CAA1C;AACA,QAAM,MAAM,GAAG,WAAW,CAAC,MAAM,YAAY,CAAC,IAAI,UAAJ,EAAD,CAAnB,EAAkE,EAAlE,CAA1B;AACA,QAAM,QAAQ,oDAA6C,OAAO,CAAC,MAAR,IAAkB,MAA/D,CAAd;AAEA,QAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,QAAR,CAAlC;AAEA,uBAAqB,CAAC,MAAK;AAC1B,WAAO,IAAI,MAAM,EAAjB;AACA,GAFoB,EAElB,CAAC,OAAD,EAAU,MAAV,CAFkB,CAArB;AAIA,QAAM,SAAS,GAAG,WAAW,CAC5B,OAAO,KAAP,EAAc,GAAd,KAAqB;AACpB,UAAM;AAAE,iBAAF;AAAe;AAAf,QAAyB,MAAM,cAAc,CAAC;AACnD,UAAI,EAAE,OAAO,CAAC,MADqC;AAEnD,YAAM,EAAE,KAF2C;AAGnD,WAAK,EAAE,GAAG,GAAG;AAHsC,KAAD,CAAnD;AAMA,WAAO;AACN,WAAK,EAAE,WAAW,CAAC,GAAZ,CAAiB,UAAD,IAAoB;AAC1C,kBAAU,CAAC,UAAX,GAAwB,IAAI,IAAJ,CAAS,UAAU,CAAC,UAApB,CAAxB;AACA,kBAAU,CAAC,KAAX,GAAmB,UAAU,CAAC,IAA9B;AACA,kBAAU,CAAC,KAAX,GAAmB;AAAE,eAAK,EAAE,UAAU,CAAC,GAApB;AAAyB,eAAK,EAAE,UAAU,CAAC;AAA3C,SAAnB;AACA,eAAO,UAAP;AACA,OALM,CADD;AAON,eAAS,EAAE;AAPL,KAAP;AASA,GAjB2B,EAkB5B,CAAC,cAAD,EAAiB,OAAO,CAAC,MAAzB,CAlB4B,CAA7B;AAqBA,QAAM;AAAE,iBAAF;AAAiB;AAAjB,MAAsC,uBAAuB,CAAC,SAAD,EAAY,SAAZ,EAAuB,EAAvB,CAAnE;AAEA,SAAO;AACN,UADM;AAEN,aAFM;AAGN,iBAHM;AAIN;AAJM,GAAP;AAMA,CA/CM,C","file":"dynamic/client/views/hooks/useDepartmentsByUnitsList.ts","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { ILivechatDepartmentRecord } from '../../../definition/ILivechatDepartmentRecord';\nimport { useEndpoint } from '../../contexts/ServerContext';\nimport { useScrollableRecordList } from '../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../lib/lists/RecordList';\n\ntype DepartmentsListOptions = {\n\tunitId: string;\n\tfilter: string;\n};\n\nexport const useDepartmentsByUnitsList = (\n\toptions: DepartmentsListOptions,\n): {\n\titemsList: RecordList<ILivechatDepartmentRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatDepartmentRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatDepartmentRecord>()), []);\n\tconst endpoint = `livechat/departments.available-by-unit/${options.unitId || 'none'}` as const;\n\n\tconst getDepartments = useEndpoint('GET', endpoint);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { departments, total } = await getDepartments({\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: departments.map((department: any) => {\n\t\t\t\t\tdepartment._updatedAt = new Date(department._updatedAt);\n\t\t\t\t\tdepartment.label = department.name;\n\t\t\t\t\tdepartment.value = { value: department._id, label: department.name };\n\t\t\t\t\treturn department;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getDepartments, options.filter],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
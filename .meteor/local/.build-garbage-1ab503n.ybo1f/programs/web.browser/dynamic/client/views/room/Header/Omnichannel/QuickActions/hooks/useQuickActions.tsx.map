{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport React, { useCallback, useState, useEffect } from 'react';\n\nimport { RoomManager } from '../../../../../../../app/ui-utils/client';\nimport { IOmnichannelRoom } from '../../../../../../../definition/IRoom';\nimport PlaceChatOnHoldModal from '../../../../../../../ee/app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal';\nimport CloseChatModal from '../../../../../../components/Omnichannel/modals/CloseChatModal';\nimport CloseChatModalData from '../../../../../../components/Omnichannel/modals/CloseChatModalData';\nimport ForwardChatModal from '../../../../../../components/Omnichannel/modals/ForwardChatModal';\nimport ReturnChatQueueModal from '../../../../../../components/Omnichannel/modals/ReturnChatQueueModal';\nimport TranscriptModal from '../../../../../../components/Omnichannel/modals/TranscriptModal';\nimport { usePermission, useRole } from '../../../../../../contexts/AuthorizationContext';\nimport { useSetModal } from '../../../../../../contexts/ModalContext';\nimport { useOmnichannelRouteConfig } from '../../../../../../contexts/OmnichannelContext';\nimport { useEndpoint, useMethod } from '../../../../../../contexts/ServerContext';\nimport { useSetting } from '../../../../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../../../contexts/TranslationContext';\nimport { useUserId } from '../../../../../../contexts/UserContext';\nimport { handleError } from '../../../../../../lib/utils/handleError';\nimport { QuickActionsActionConfig, QuickActionsEnum } from '../../../../lib/QuickActions';\nimport { useQuickActionsContext } from '../../../../lib/QuickActions/QuickActionsContext';\n\nexport const useQuickActions = (\n\troom: IOmnichannelRoom,\n): {\n\tvisibleActions: QuickActionsActionConfig[];\n\tactionDefault: (e: unknown) => void;\n\tgetAction: (id: string) => void;\n} => {\n\tconst setModal = useSetModal();\n\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst context = useQuickActionsContext();\n\tconst actions = (Array.from(context.actions.values()) as QuickActionsActionConfig[]).sort((a, b) => (a.order || 0) - (b.order || 0));\n\n\tconst [onHoldModalActive, setOnHoldModalActive] = useState(false);\n\n\tconst visitorRoomId = room.v._id;\n\tconst rid = room._id;\n\tconst uid = useUserId();\n\tconst roomLastMessage = room.lastMessage;\n\n\tconst getVisitorInfo = useEndpoint('GET', 'livechat/visitors.info');\n\n\tconst getVisitorEmail = useMutableCallback(async () => {\n\t\tif (!visitorRoomId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tvisitor: { visitorEmails },\n\t\t} = await getVisitorInfo({ visitorId: visitorRoomId });\n\n\t\tif (visitorEmails?.length && visitorEmails[0].address) {\n\t\t\treturn visitorEmails[0].address;\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (onHoldModalActive && roomLastMessage?.token) {\n\t\t\tsetModal(null);\n\t\t}\n\t}, [roomLastMessage, onHoldModalActive, setModal]);\n\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tconst closeOnHoldModal = useCallback(() => {\n\t\tcloseModal();\n\t\tsetOnHoldModalActive(false);\n\t}, [closeModal]);\n\n\tconst methodReturn = useMethod('livechat:returnAsInquiry');\n\n\tconst handleMoveChat = useCallback(async () => {\n\t\ttry {\n\t\t\tawait methodReturn(rid);\n\t\t\tcloseModal();\n\t\t\tSession.set('openedRoom', null);\n\t\t\tFlowRouter.go('/home');\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [closeModal, methodReturn, rid]);\n\n\tconst requestTranscript = useMethod('livechat:requestTranscript');\n\n\tconst handleRequestTranscript = useCallback(\n\t\tasync (email: string, subject: string) => {\n\t\t\ttry {\n\t\t\t\tawait requestTranscript(rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t\tRoomManager.close(`l${rid}`);\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: t('Livechat_transcript_has_been_requested'),\n\t\t\t\t});\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, requestTranscript, rid, t],\n\t);\n\n\tconst sendTranscript = useMethod('livechat:sendTranscript');\n\n\tconst handleSendTranscript = useCallback(\n\t\tasync (email: string, subject: string, token: string) => {\n\t\t\ttry {\n\t\t\t\tawait sendTranscript(token, rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, rid, sendTranscript],\n\t);\n\n\tconst discardTranscript = useMethod('livechat:discardTranscript');\n\n\tconst handleDiscardTranscript = useCallback(async () => {\n\t\ttry {\n\t\t\tawait discardTranscript(rid);\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Livechat_transcript_request_has_been_canceled'),\n\t\t\t});\n\t\t\tcloseModal();\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [closeModal, discardTranscript, dispatchToastMessage, rid, t]);\n\n\tconst forwardChat = useMethod('livechat:transfer');\n\n\tconst handleForwardChat = useCallback(\n\t\tasync (departmentId?: string, userId?: string, comment?: string) => {\n\t\t\tif (departmentId && userId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst transferData: {\n\t\t\t\troomId: string;\n\t\t\t\tclientAction: boolean;\n\t\t\t\tcomment?: string;\n\t\t\t\tdepartmentId?: string;\n\t\t\t\tuserId?: string;\n\t\t\t} = {\n\t\t\t\troomId: rid,\n\t\t\t\tcomment,\n\t\t\t\tclientAction: true,\n\t\t\t};\n\n\t\t\tif (departmentId) {\n\t\t\t\ttransferData.departmentId = departmentId;\n\t\t\t}\n\t\t\tif (userId) {\n\t\t\t\ttransferData.userId = userId;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst result = await forwardChat(transferData);\n\t\t\t\tif (!result) {\n\t\t\t\t\tthrow new Error(departmentId ? t('error-no-agents-online-in-department') : t('error-forwarding-chat'));\n\t\t\t\t}\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Transferred') });\n\t\t\t\tFlowRouter.go('/');\n\t\t\t\tcloseModal();\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, forwardChat, rid, t],\n\t);\n\n\tconst closeChat = useMethod('livechat:closeRoom');\n\n\tconst handleClose = useCallback(\n\t\tasync (comment: string, tags: string[]) => {\n\t\t\ttry {\n\t\t\t\tawait closeChat(rid, comment, { clientAction: true, tags });\n\t\t\t\tcloseModal();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_closed_successfully') });\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeChat, closeModal, dispatchToastMessage, rid, t],\n\t);\n\n\tconst onHoldChat = useEndpoint('POST', 'livechat/room.onHold');\n\n\tconst handleOnHoldChat = useCallback(async () => {\n\t\ttry {\n\t\t\tawait onHoldChat({ roomId: rid });\n\t\t\tcloseModal();\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_On_Hold_Successfully') });\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [onHoldChat, rid, closeModal, dispatchToastMessage, t]);\n\n\tconst openModal = useMutableCallback(async (id: string) => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\tsetModal(<ReturnChatQueueModal onMoveChat={handleMoveChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\tconst visitorEmail = await getVisitorEmail();\n\n\t\t\t\tif (!visitorEmail) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Customer_without_registered_email') });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsetModal(\n\t\t\t\t\t<TranscriptModal\n\t\t\t\t\t\troom={room}\n\t\t\t\t\t\temail={visitorEmail}\n\t\t\t\t\t\tonRequest={handleRequestTranscript}\n\t\t\t\t\t\tonSend={handleSendTranscript}\n\t\t\t\t\t\tonDiscard={handleDiscardTranscript}\n\t\t\t\t\t\tonCancel={closeModal}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\tsetModal(<ForwardChatModal room={room} onForward={handleForwardChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\tsetModal(\n\t\t\t\t\troom.departmentId ? (\n\t\t\t\t\t\t<CloseChatModalData departmentId={room.departmentId} onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CloseChatModal onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\tsetModal(<PlaceChatOnHoldModal onOnHoldChat={handleOnHoldChat} onCancel={closeOnHoldModal} />);\n\t\t\t\tsetOnHoldModalActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst omnichannelRouteConfig = useOmnichannelRouteConfig();\n\n\tconst manualOnHoldAllowed = useSetting('Livechat_allow_manual_on_hold');\n\n\tconst hasManagerRole = useRole('livechat-manager');\n\n\tconst roomOpen = room?.open && (room.u?._id === uid || hasManagerRole) && room?.lastMessage?.t !== 'livechat-close';\n\tconst canMoveQueue = !!omnichannelRouteConfig?.returnQueue && room?.u !== undefined;\n\tconst canForwardGuest = usePermission('transfer-livechat-guest');\n\tconst canSendTranscript = usePermission('send-omnichannel-chat-transcript');\n\tconst canCloseRoom = usePermission('close-livechat-room');\n\tconst canCloseOthersRoom = usePermission('close-others-livechat-room');\n\tconst canPlaceChatOnHold = Boolean(!room.onHold && room.u && !(room as any).lastMessage?.token && manualOnHoldAllowed);\n\n\tconst hasPermissionButtons = (id: string): boolean => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\treturn !!roomOpen && canMoveQueue;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\treturn !!roomOpen && canForwardGuest;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\treturn canSendTranscript;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\treturn !!roomOpen && (canCloseRoom || canCloseOthersRoom);\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\treturn !!roomOpen && canPlaceChatOnHold;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst visibleActions = actions.filter(({ id }) => hasPermissionButtons(id));\n\n\tconst actionDefault = useMutableCallback((e) => {\n\t\tconst index = e.currentTarget.getAttribute('data-quick-actions');\n\t\tconst { id } = visibleActions[index];\n\t\topenModal(id);\n\t});\n\n\tconst getAction = useMutableCallback((id) => {\n\t\topenModal(id);\n\t});\n\n\treturn { visibleActions, actionDefault, getAction };\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/root/MainLayout/TwoFactorAuthSetupCheck.tsx"],"names":[],"mappings":";;;;;;;;AAAA,WAAO,IAAP,EAAc,WAAd;AAA+C,MAAW,KAAX,CAAa,OAAb,EAAmB;AAAO,SAAC;AAAA;AAAA,GAAR;;AAAQ;AAAA;AAAA,GAAR;;AAAQ;AAAA;AAAA;;AAAR,CAAnB,EAA2B,CAA3B;AAA2B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAU1E,MAAM,mBAAmB,gBAAG,IAAI,CAAC,MAAM,qBAAO,4CAAP,CAAP,CAAhC;;AAEA,MAAM,uBAAuB,GAAG,QAAwD;AAAA,MAAvD;AAAE;AAAF,GAAuD;AACvF,QAAM;AAAE,cAAU,EAAE;AAAd,MAAiC,SAAS,EAAhD;AACA,QAAM,IAAI,GAAG,OAAO,EAApB;AACA,QAAM,UAAU,GAAG,UAAU,CAAC,0CAAD,CAA7B;AACA,QAAM,eAAe,GAAG,gBAAgB,CACvC,WAAW,CAAC,MAAK;AAAA;;AAChB;AACA,QAAI,CAAC,IAAD,IAAS,IAAT,aAAS,IAAT,iCAAS,IAAI,CAAE,QAAf,kEAAS,eAAgB,IAAzB,gDAAS,oBAAsB,OAA/B,IAA0C,IAA1C,aAA0C,IAA1C,kCAA0C,IAAI,CAAE,QAAhD,qEAA0C,gBAAgB,QAA1D,kDAA0C,sBAA0B,OAAxE,EAAiF;AAChF,aAAO,KAAP;AACA;;AAED,UAAM,aAAa,GAAG,KAAK,CAAC,OAAN,CAAc;AAAE,SAAG,EAAE;AAAE,WAAG,EAAE,IAAI,CAAC;AAAZ,OAAP;AAA4B,kBAAY,EAAE;AAA1C,KAAd,CAAtB;AACA,WAAO,aAAa,KAAK,SAAlB,IAA+B,UAAtC;AACA,GARU,EAQR,CAAC,UAAD,EAAa,IAAb,CARQ,CAD4B,CAAxC;;AAYA,MAAI,eAAJ,EAAqB;AACpB,wBACC;AAAM,QAAE,EAAC,aAAT;AAAuB,eAAS,EAAE,cAAc,GAAG,eAAH,GAAqB;AAArE,oBACC;AAAK,eAAS,EAAC;AAAf,oBACC,oBAAC,mBAAD,OADD,CADD,CADD;AAOA;;AAED,sBAAO,oBAAC,iBAAD,QAAoB,QAApB,CAAP;AACA,CA3BD;;AAZA,OAAO,aAAP,CAyCe,uBAzCf,E","file":"dynamic/client/views/root/MainLayout/TwoFactorAuthSetupCheck.tsx","sourcesContent":["import React, { lazy, ReactElement, ReactNode, useCallback } from 'react';\n\nimport { Roles } from '../../../../app/models/client';\nimport { IUser } from '../../../../definition/IUser';\nimport { useLayout } from '../../../contexts/LayoutContext';\nimport { useSetting } from '../../../contexts/SettingsContext';\nimport { useUser } from '../../../contexts/UserContext';\nimport { useReactiveValue } from '../../../hooks/useReactiveValue';\nimport LayoutWithSidebar from './LayoutWithSidebar';\n\nconst AccountSecurityPage = lazy(() => import('../../account/security/AccountSecurityPage'));\n\nconst TwoFactorAuthSetupCheck = ({ children }: { children: ReactNode }): ReactElement => {\n\tconst { isEmbedded: embeddedLayout } = useLayout();\n\tconst user = useUser() as IUser | null;\n\tconst tfaEnabled = useSetting('Accounts_TwoFactorAuthentication_Enabled');\n\tconst require2faSetup = useReactiveValue(\n\t\tuseCallback(() => {\n\t\t\t// User is already using 2fa\n\t\t\tif (!user || user?.services?.totp?.enabled || user?.services?.email2fa?.enabled) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst mandatoryRole = Roles.findOne({ _id: { $in: user.roles }, mandatory2fa: true });\n\t\t\treturn mandatoryRole !== undefined && tfaEnabled;\n\t\t}, [tfaEnabled, user]),\n\t);\n\n\tif (require2faSetup) {\n\t\treturn (\n\t\t\t<main id='rocket-chat' className={embeddedLayout ? 'embedded-view' : undefined}>\n\t\t\t\t<div className='rc-old main-content content-background-color'>\n\t\t\t\t\t<AccountSecurityPage />\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t);\n\t}\n\n\treturn <LayoutWithSidebar>{children}</LayoutWithSidebar>;\n};\n\nexport default TwoFactorAuthSetupCheck;\n"]}
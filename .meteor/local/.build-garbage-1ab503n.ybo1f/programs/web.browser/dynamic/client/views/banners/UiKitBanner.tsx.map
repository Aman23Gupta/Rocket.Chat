{"version":3,"sources":["meteor://ðŸ’»app/client/views/banners/UiKitBanner.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAA,YAA4B,uBAA5B,EAA4B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,CAA5B,EAA4B,CAA5B;AAA4B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAiB5B;AACA,MAAM,MAAM,GAAG;AAAA,MAAC;AAAE;AAAF,GAAD,uEAA8B;AAAE,QAAI,EAAE;AAAR,GAA9B;AAAA,sBAA0D,oBAAC,YAAD;AAAc,WAAO,EAAC,QAAtB;AAA+B,WAAO,EAAE;AAAxC,IAA1D;AAAA,CAAf;;AAEA,YAAY,CAAC,MAAb,GAAsB,MAAtB;;AAEA,MAAM,WAAW,GAAyB,QAAgB;AAAA,MAAf;AAAE;AAAF,GAAe;AACzD,QAAM,KAAK,GAAG,oBAAoB,CAAqB,OAArB,CAAlC;AAEA,QAAM,IAAI,GAAG,OAAO,CAAC,MAAK;AACzB,QAAI,KAAK,CAAC,IAAV,EAAgB;AACf,0BAAO,oBAAC,IAAD;AAAM,YAAI,EAAE,KAAK,CAAC,IAAlB;AAA+D,YAAI,EAAE;AAArE,QAAP;AACA;;AAED,WAAO,IAAP;AACA,GANmB,EAMjB,CAAC,KAAK,CAAC,IAAP,CANiB,CAApB;AAQA,QAAM,WAAW,GAAG,mBAAmB,CAAC,KAAD,EAAQ,MAAM,OAAO,CAAC,KAAR,EAAd,CAAvC;AAEA,QAAM,MAAM,GAAG,oBAAoB,CAAC,KAAD,CAAnC;AAEA,QAAM,YAAY,GAAG,OAAO,CAC3B,OAAO;AACN,UAAM,EAAE,kBAAiC;AACxC,YAAM,MAAM,CAAC,YAAD,CAAZ;AACA,aAAO,CAAC,SAAR,CAAkB,KAAK,CAAC,MAAxB;AACA,KAJK;AAKN,SAAK,EAAE,MAAY,SALb;AAMN,SAAK,EAAE,KAAK,CAAC;AANP,GAAP,CAD2B,EAS3B,CAAC,MAAD,EAAS,KAAK,CAAC,KAAf,EAAsB,KAAK,CAAC,MAA5B,CAT2B,CAA5B;AAYA,sBACC,oBAAC,MAAD;AAAQ,aAAS,MAAjB;AAAkB,QAAI,EAAE,IAAxB;AAA8B,UAAM,EAAE,KAAK,CAAC,MAA5C;AAAoD,SAAK,EAAE,KAAK,CAAC,KAAjE;AAAwE,WAAO,EAAE,KAAK,CAAC,OAAvF;AAAgG,WAAO,EAAE;AAAzG,kBACC,oBAAC,UAAD,CAAY,QAAZ;AAAqB,SAAK,EAAE;AAA5B,KAA2C,uBAAuB,CAAC,KAAK,CAAC,MAAP,EAAe;AAAE,UAAM,EAAE;AAAV,GAAf,CAAlE,CADD,CADD;AAKA,CAhCD;;AAtBA,qBAwDe,WAxDf,E","file":"dynamic/client/views/banners/UiKitBanner.tsx","sourcesContent":["/* eslint-disable new-cap */\nimport { Banner, Icon } from '@rocket.chat/fuselage';\nimport {\n\tkitContext,\n\t// @ts-ignore\n\tbannerParser,\n\tUiKitBanner as renderUiKitBannerBlocks,\n} from '@rocket.chat/fuselage-ui-kit';\nimport React, { Context, FC, useMemo, ReactNode, ComponentProps } from 'react';\n\nimport { UiKitBannerProps, UiKitBannerPayload } from '../../../definition/UIKit';\nimport { useUIKitHandleAction } from '../../UIKit/hooks/useUIKitHandleAction';\nimport { useUIKitHandleClose } from '../../UIKit/hooks/useUIKitHandleClose';\nimport { useUIKitStateManager } from '../../UIKit/hooks/useUIKitStateManager';\nimport MarkdownText from '../../components/MarkdownText';\nimport * as banners from '../../lib/banners';\n\n// TODO: move this to fuselage-ui-kit itself\nconst mrkdwn = ({ text }: { text: string } = { text: '' }): ReactNode => <MarkdownText variant='inline' content={text} />;\n\nbannerParser.mrkdwn = mrkdwn;\n\nconst UiKitBanner: FC<UiKitBannerProps> = ({ payload }) => {\n\tconst state = useUIKitStateManager<UiKitBannerPayload>(payload);\n\n\tconst icon = useMemo(() => {\n\t\tif (state.icon) {\n\t\t\treturn <Icon name={state.icon as ComponentProps<typeof Icon>['name']} size={20} />;\n\t\t}\n\n\t\treturn null;\n\t}, [state.icon]);\n\n\tconst handleClose = useUIKitHandleClose(state, () => banners.close());\n\n\tconst action = useUIKitHandleAction(state);\n\n\tconst contextValue = useMemo<typeof kitContext extends Context<infer V> ? V : never>(\n\t\t() => ({\n\t\t\taction: async (...args): Promise<void> => {\n\t\t\t\tawait action(...args);\n\t\t\t\tbanners.closeById(state.viewId);\n\t\t\t},\n\t\t\tstate: (): void => undefined,\n\t\t\tappId: state.appId,\n\t\t}),\n\t\t[action, state.appId, state.viewId],\n\t);\n\n\treturn (\n\t\t<Banner closeable icon={icon} inline={state.inline} title={state.title} variant={state.variant} onClose={handleClose}>\n\t\t\t<kitContext.Provider value={contextValue}>{renderUiKitBannerBlocks(state.blocks, { engine: 'rocket.chat' })}</kitContext.Provider>\n\t\t</Banner>\n\t);\n};\n\nexport default UiKitBanner;\n"]}
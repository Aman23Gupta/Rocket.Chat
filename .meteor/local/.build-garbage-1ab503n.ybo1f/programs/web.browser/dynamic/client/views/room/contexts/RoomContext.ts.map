{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contexts/RoomContext.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,aAAe,mBAAf;AAAiC,SAAQ,eAAzC;AAAyC;AAAzC,CAAT;AAAkD;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAU3C,MAAM,WAAW,gBAAG,aAAa,CAA0B,IAA1B,CAAjC;;AAEA,MAAM,OAAO,GAAG,MAAY;AAClC,QAAM;AAAE;AAAF,MAAW,UAAU,CAAC,WAAD,CAAV,IAA2B,EAA5C;;AACA,MAAI,CAAC,IAAL,EAAW;AACV,UAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACA;;AACD,SAAO,IAAP;AACA,CANM;;AAQA,MAAM,kBAAkB,GAAG,MAAuB;AACxD,QAAM;AAAE;AAAF,MAAW,UAAU,CAAC,WAAD,CAAV,IAA2B,EAA5C;;AAEA,MAAI,CAAC,IAAL,EAAW;AACV,UAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACA;;AACD,MAAI,CAAC,iBAAiB,CAAC,IAAD,CAAtB,EAA8B;AAC7B,UAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACA;;AAED,SAAO,IAAP;AACA,CAXM,C","file":"dynamic/client/views/room/contexts/RoomContext.ts","sourcesContent":["import { createContext, useContext } from 'react';\n\nimport { IRoom, IOmnichannelRoom, isOmnichannelRoom } from '../../../../definition/IRoom';\n\nexport type RoomContextValue = {\n\trid: IRoom['_id'];\n\troom: IRoom;\n\tsubscribed: boolean;\n};\n\nexport const RoomContext = createContext<RoomContextValue | null>(null);\n\nexport const useRoom = (): IRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\treturn room;\n};\n\nexport const useOmnichannelRoom = (): IOmnichannelRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\tif (!isOmnichannelRoom(room)) {\n\t\tthrow new Error('invalid room type');\n\t}\n\n\treturn room;\n};\n"]}
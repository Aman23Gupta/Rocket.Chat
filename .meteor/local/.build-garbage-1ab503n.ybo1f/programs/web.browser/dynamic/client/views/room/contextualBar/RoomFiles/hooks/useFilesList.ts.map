{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts"],"names":[],"mappings":"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","file":"dynamic/client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { useEndpoint } from '../../../../../contexts/ServerContext';\nimport { useUserRoom, useUserId } from '../../../../../contexts/UserContext';\nimport { useScrollableMessageList } from '../../../../../hooks/lists/useScrollableMessageList';\nimport { useStreamUpdatesForMessageList } from '../../../../../hooks/lists/useStreamUpdatesForMessageList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { FilesList, FilesListOptions } from '../../../../../lib/lists/FilesList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\n\nexport const useFilesList = (\n\toptions: FilesListOptions,\n): {\n\tfilesList: FilesList;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [filesList, setFilesList] = useState(() => new FilesList(options));\n\tconst reload = useCallback(() => setFilesList(new FilesList(options)), [options]);\n\tconst room = useUserRoom(options.rid);\n\tconst uid = useUserId();\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tuseEffect(() => {\n\t\tif (filesList.options !== options) {\n\t\t\tfilesList.updateFilters(options);\n\t\t}\n\t}, [filesList, options]);\n\n\tconst roomTypes = {\n\t\tc: 'channels.files',\n\t\tl: 'channels.files',\n\t\td: 'im.files',\n\t\tp: 'groups.files',\n\t} as const;\n\n\tconst apiEndPoint = room ? roomTypes[room.t] : 'channels.files';\n\n\tconst getFiles = useEndpoint('GET', apiEndPoint);\n\n\tconst fetchMessages = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { files, total } = await getFiles({\n\t\t\t\troomId: options.rid,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tsort: JSON.stringify({ uploadedAt: -1 }),\n\t\t\t\tquery: JSON.stringify({\n\t\t\t\t\tname: { $regex: options.text || '', $options: 'i' },\n\t\t\t\t\t...(options.type !== 'all' && {\n\t\t\t\t\t\ttypeGroup: options.type,\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: files,\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getFiles, options.rid, options.type, options.text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableMessageList(\n\t\tfilesList,\n\t\tfetchMessages,\n\t\tuseMemo(() => {\n\t\t\tconst filesListSize = getConfig('discussionListSize');\n\t\t\treturn filesListSize ? parseInt(filesListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\tuseStreamUpdatesForMessageList(filesList, uid, options.rid);\n\n\treturn {\n\t\treload,\n\t\tfilesList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/invite/SecretURLPage.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAO,MAAuB,KAAvB,CAA6B,OAA7B,EAAqC;AAAA;AAAA;AAAA;;AAAA,CAArC,EAAqC,CAArC;AAAqC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAW5C,MAAM,aAAa,GAAG,MAAmB;AACxC,QAAM,CAAC,GAAG,cAAc,EAAxB;AAEA,QAAM,IAAI,GAAG,iBAAiB,CAAC,MAAD,CAA9B;AACA,QAAM,gBAAgB,GAAG,UAAU,CAAC,2BAAD,CAAnC;AACA,QAAM,oBAAoB,GAAG,kBAAkB,CAAC,mBAAD,CAA/C;AAEA,QAAM;AAAE;AAAF,MAAgB,QAAQ,CAC7B,CAAC,WAAD,EAAc,IAAd,CAD6B,EAE7B,YAAW;AACV,QAAI,gBAAgB,KAAK,YAArB,IAAqC,CAAC,IAA1C,EAAgD;AAC/C,aAAO,KAAP;AACA;;AAED,WAAO,IAAI,CAAC,4BAAD,EAA+B,IAA/B,CAAX;AACA,GAR4B,EAS7B;AACC,aAAS,EAAG,KAAD,IAAU;AACpB,UAAI,CAAC,KAAL,EAAY;AACX;AACA;;AAED,0BAAoB,CAAC,UAAD,CAApB;AACA,yBAAmB,CAAC,oBAApB;AACA;AARF,GAT6B,CAA9B;;AAqBA,MAAI,SAAJ,EAAe;AACd,wBAAO,oBAAC,WAAD,OAAP;AACA;;AAED,sBACC;AAAS,aAAS,EAAC;AAAnB,kBACC;AAAK,aAAS,EAAC;AAAf,kBACC,iDACC;AAAG,aAAS,EAAC,MAAb;AAAoB,QAAI,EAAC;AAAzB,kBACC;AAAK,OAAG,EAAC;AAAT,IADD,CADD,CADD,eAMC;AAAK,aAAS,EAAC;AAAf,kBACC;AAAK,aAAS,EAAC;AAAf,kBACC;AAAG,aAAS,EAAC;AAAb,IADD,EAEE,CAAC,CAAC,4BAAD,CAFH,CADD,CAND,CADD,CADD;AAiBA,CAjDD;;AAXA,OAAO,aAAP,CA8De,aA9Df,E","file":"dynamic/client/views/invite/SecretURLPage.tsx","sourcesContent":["import React, { ReactElement } from 'react';\nimport { useQuery } from 'react-query';\n\nimport { KonchatNotification } from '../../../app/ui';\nimport { useRouteParameter } from '../../contexts/RouterContext';\nimport { useSessionDispatch } from '../../contexts/SessionContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { call } from '../../lib/utils/call';\nimport PageLoading from '../root/PageLoading';\n\nconst SecretURLPage = (): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst hash = useRouteParameter('hash');\n\tconst registrationForm = useSetting('Accounts_RegistrationForm');\n\tconst setLoginDefaultState = useSessionDispatch('loginDefaultState');\n\n\tconst { isLoading } = useQuery(\n\t\t['secretURL', hash],\n\t\tasync () => {\n\t\t\tif (registrationForm !== 'Secret URL' || !hash) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn call('checkRegistrationSecretURL', hash);\n\t\t},\n\t\t{\n\t\t\tonSuccess: (valid) => {\n\t\t\t\tif (!valid) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetLoginDefaultState('register');\n\t\t\t\tKonchatNotification.getDesktopPermission();\n\t\t\t},\n\t\t},\n\t);\n\n\tif (isLoading) {\n\t\treturn <PageLoading />;\n\t}\n\n\treturn (\n\t\t<section className='rc-old full-page color-tertiary-font-color'>\n\t\t\t<div className='wrapper'>\n\t\t\t\t<header>\n\t\t\t\t\t<a className='logo' href='/'>\n\t\t\t\t\t\t<img src='images/logo/logo.svg?v=3' />\n\t\t\t\t\t</a>\n\t\t\t\t</header>\n\t\t\t\t<div className='content'>\n\t\t\t\t\t<div className='attention-message'>\n\t\t\t\t\t\t<i className='icon-attention'></i>\n\t\t\t\t\t\t{t('Invalid_secret_URL_message')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default SecretURLPage;\n"]}
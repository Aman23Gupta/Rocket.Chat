{"version":3,"sources":["meteor://ğŸ’»app/client/views/omnichannel/departments/AddAgent.js"],"names":["_extends","module","link","default","v","_objectSpread","_objectWithoutProperties","Box","Button","useMutableCallback","React","useState","AutoCompleteAgent","useToastMessageDispatch","useTranslation","useEndpointAction","AddAgent","agentList","setAgentsAdded","setAgentList","props","t","userId","setUserId","getAgent","dispatchToastMessage","handleAgent","e","handleSave","user","filter","agentId","_id","length","agents","type","message","exportDefault"],"mappings":"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","file":"dynamic/client/views/omnichannel/departments/AddAgent.js","sourcesContent":["import { Box, Button } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { useState } from 'react';\n\nimport AutoCompleteAgent from '../../../components/AutoCompleteAgent';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useEndpointAction } from '../../../hooks/useEndpointAction';\n\nfunction AddAgent({ agentList, setAgentsAdded, setAgentList, ...props }) {\n\tconst t = useTranslation();\n\tconst [userId, setUserId] = useState();\n\tconst getAgent = useEndpointAction('GET', `livechat/users/agent/${userId}`);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst handleAgent = useMutableCallback((e) => setUserId(e));\n\n\tconst handleSave = useMutableCallback(async () => {\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\t\tconst { user } = await getAgent();\n\n\t\tif (agentList.filter((e) => e.agentId === user._id).length === 0) {\n\t\t\tsetAgentList([{ ...user, agentId: user._id }, ...agentList]);\n\t\t\tsetUserId();\n\t\t\tsetAgentsAdded((agents) => [...agents, { agentId: user._id }]);\n\t\t} else {\n\t\t\tdispatchToastMessage({ type: 'error', message: t('This_agent_was_already_selected') });\n\t\t}\n\t});\n\treturn (\n\t\t<Box display='flex' alignItems='center' {...props}>\n\t\t\t<AutoCompleteAgent empty value={userId} onChange={handleAgent} />\n\t\t\t<Button disabled={!userId} onClick={handleSave} mis='x8' primary>\n\t\t\t\t{t('Add')}\n\t\t\t</Button>\n\t\t</Box>\n\t);\n}\n\nexport default AddAgent;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useWebRTC.ts"],"names":[],"mappings":"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","file":"dynamic/client/views/room/hooks/useWebRTC.ts","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { WebRTC } from '../../../../app/webrtc/client';\n\ntype callParams = {\n\taudio: boolean;\n\tvideo: boolean;\n};\n\nexport type useWebRTCProps = {\n\tshouldAllowCalls: boolean;\n\tcallInProgress: boolean;\n\tvideoAvaliable: boolean;\n\tshowUserWebRTC: boolean;\n\tmainVideoUrl: () => MediaStream | void;\n\tscreenShareEnabled: boolean;\n\tselfVideoUrl: MediaStream;\n\taudioAndVideoEnabled: boolean;\n\taudioEnabled: boolean;\n\tvideoEnabled: boolean;\n\tremoteVideoItems: Array<MediaStream>;\n\tisVideoActive: () => boolean;\n\thandleStopCall: () => void;\n\tscreenShareAvailable: boolean;\n\ttoggleScreenShare: () => void;\n\ttoggleOverlay: () => void;\n\ttoggleVideo: () => void;\n\ttoggleAudio: () => void;\n\toverlayEnabled: boolean;\n\tjoinCall: (params: callParams) => void;\n\tstartCall: (params: callParams) => void;\n\tmainVideo: string;\n\tsetMainVideo: (value: string) => void;\n};\n\nexport const useWebRTC = (rid: string): useWebRTCProps => {\n\tconst getWebRTCInstance = useCallback(() => WebRTC.getInstanceByRoomId(rid), [rid]);\n\tconst webRTCInstance = getWebRTCInstance();\n\tconst videoAvaliable = webRTCInstance != null;\n\n\tconst [mainVideo, setMainVideo] = useState<string>('$auto');\n\n\tconst getShouldAllowCalls = (): boolean => {\n\t\tif (!webRTCInstance) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { localUrl, remoteItems } = webRTCInstance;\n\t\tconst r = remoteItems.get() || [];\n\t\tif (localUrl.get() === null && r.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst isVideoActive = (): boolean => {\n\t\tlet { remoteItems } = getWebRTCInstance();\n\t\tconst { localUrl } = getWebRTCInstance();\n\t\tremoteItems = remoteItems.get() || [];\n\t\treturn localUrl.get() != null || remoteItems.length > 0;\n\t};\n\n\tconst mainVideoUrl = (): void => {\n\t\tif (mainVideo === '$self') {\n\t\t\treturn webRTCInstance?.localUrl.get();\n\t\t}\n\n\t\tif (mainVideo === '$auto') {\n\t\t\tconst remoteItems = webRTCInstance?.remoteItems.get() || [];\n\t\t\tif (remoteItems.length > 0) {\n\t\t\t\treturn remoteItems[0].url;\n\t\t\t}\n\t\t\treturn webRTCInstance?.localUrl.get();\n\t\t}\n\n\t\tif (webRTCInstance?.remoteItemsById.get()[mainVideo] != null) {\n\t\t\treturn webRTCInstance?.remoteItemsById.get()[mainVideo].url;\n\t\t}\n\n\t\tsetMainVideo('$auto');\n\t};\n\n\tconst showUserWebRTC = videoAvaliable && isVideoActive();\n\n\tconst shouldAllowCalls = getShouldAllowCalls();\n\tconst callInProgress = webRTCInstance?.callInProgress.get();\n\tconst overlayEnabled = webRTCInstance?.overlayEnabled.get();\n\tconst audioEnabled = webRTCInstance?.audioEnabled.get();\n\tconst videoEnabled = webRTCInstance?.videoEnabled.get();\n\tconst audioAndVideoEnabled = webRTCInstance?.audioEnabled.get() && webRTCInstance?.videoEnabled.get();\n\n\tconst screenShareEnabled = webRTCInstance?.screenShareEnabled.get();\n\tconst remoteVideoItems = webRTCInstance?.remoteItems.get();\n\tconst selfVideoUrl = webRTCInstance?.localUrl.get();\n\n\tconst handleStopCall = (): void => webRTCInstance?.stop();\n\tconst toggleOverlay = (): void => (overlayEnabled ? webRTCInstance?.overlayEnabled.set(false) : webRTCInstance?.overlayEnabled.set(true));\n\tconst toggleScreenShare = (): void => (screenShareEnabled ? webRTCInstance?.disableScreenShare() : webRTCInstance?.enableScreenShare());\n\tconst toggleVideo = (): void => (videoEnabled ? webRTCInstance?.disableVideo() : webRTCInstance?.enableVideo());\n\tconst toggleAudio = (): void => (audioEnabled ? webRTCInstance?.disableAudio() : webRTCInstance?.enableAudio());\n\n\tconst joinCall = (params: callParams): void => webRTCInstance?.joinCall(params);\n\tconst startCall = (params: callParams): void => webRTCInstance?.startCall(params);\n\n\treturn {\n\t\tshouldAllowCalls,\n\t\tcallInProgress,\n\t\tvideoAvaliable,\n\t\tshowUserWebRTC,\n\t\tmainVideoUrl,\n\t\tscreenShareEnabled,\n\t\tselfVideoUrl,\n\t\taudioAndVideoEnabled,\n\t\taudioEnabled,\n\t\tvideoEnabled,\n\t\tremoteVideoItems,\n\t\tisVideoActive,\n\t\thandleStopCall,\n\t\tscreenShareAvailable: webRTCInstance?.screenShareAvailable,\n\t\ttoggleScreenShare,\n\t\ttoggleOverlay,\n\t\ttoggleVideo,\n\t\ttoggleAudio,\n\t\toverlayEnabled,\n\t\tjoinCall,\n\t\tstartCall,\n\t\tmainVideo,\n\t\tsetMainVideo,\n\t};\n};\n"]}
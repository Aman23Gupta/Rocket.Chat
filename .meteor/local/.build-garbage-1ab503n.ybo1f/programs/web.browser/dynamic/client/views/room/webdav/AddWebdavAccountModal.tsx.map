{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/webdav/AddWebdavAccountModal.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/room/webdav/AddWebdavAccountModal.tsx","sourcesContent":["import { Modal, Field, FieldGroup, TextInput, PasswordInput, ButtonGroup, Button } from '@rocket.chat/fuselage';\nimport React, { useState, ReactElement } from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\n\nimport { IWebdavAccountPayload } from '../../../../definition/IWebdavAccount';\nimport { useMethod } from '../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\n\ntype AddWebdavAccountModalPayload = IWebdavAccountPayload;\n\ntype AddWebdavAccountModalProps = {\n\tonClose: () => void;\n\tonConfirm: () => void;\n};\n\nconst AddWebdavAccountModal = ({ onClose, onConfirm }: AddWebdavAccountModalProps): ReactElement => {\n\tconst handleAddWebdavAccount = useMethod('addWebdavAccount');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<AddWebdavAccountModalPayload>();\n\tconst t = useTranslation();\n\n\tconst onSubmit: SubmitHandler<AddWebdavAccountModalPayload> = async (data) => {\n\t\tsetIsLoading(true);\n\n\t\ttry {\n\t\t\tawait handleAddWebdavAccount(data);\n\t\t\treturn dispatchToastMessage({ type: 'success', message: t('webdav-account-saved') });\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\treturn dispatchToastMessage({ type: 'error', message: error });\n\t\t} finally {\n\t\t\tonConfirm();\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Modal is='form' onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>{t('Webdav_add_new_account')}</Modal.Title>\n\t\t\t\t<Modal.Close onClick={onClose} />\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Content>\n\t\t\t\t<FieldGroup>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Label>{t('Name_optional')}</Field.Label>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<TextInput placeholder={t('Name_optional')} {...register('name')} />\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Label>{t('Webdav_Server_URL')}</Field.Label>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<TextInput placeholder={t('Webdav_Server_URL')} {...register('serverURL', { required: true })} />\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t{errors.serverURL && <Field.Error>{t('error-the-field-is-required', { field: t('Webdav_Server_URL') })}</Field.Error>}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Label>{t('Username')}</Field.Label>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<TextInput placeholder={t('Username')} {...register('username', { required: true })} />\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t{errors.username && <Field.Error>{t('error-the-field-is-required', { field: t('Username') })}</Field.Error>}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Label>{t('Password')}</Field.Label>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<PasswordInput placeholder={t('Password')} {...register('password', { required: true })} />\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t{errors.password && <Field.Error>{t('error-the-field-is-required', { field: t('Password') })}</Field.Error>}\n\t\t\t\t\t</Field>\n\t\t\t\t</FieldGroup>\n\t\t\t</Modal.Content>\n\t\t\t<Modal.Footer>\n\t\t\t\t<ButtonGroup align='end'>\n\t\t\t\t\t<Button ghost onClick={onClose}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button primary type='submit' disabled={isLoading}>\n\t\t\t\t\t\t{isLoading ? t('Please_wait') : t('Webdav_add_new_account')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\nexport default AddWebdavAccountModal;\n"]}
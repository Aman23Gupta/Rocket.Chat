{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/inputs/CodeSettingInput.js"],"names":["Box","Button","Field","Flex","module","link","v","useToggle","React","default","useTranslation","ResetSettingButton","CodeMirror","CodeSettingInput","_id","label","value","code","placeholder","readonly","autocomplete","disabled","hasResetButton","onChangeValue","onResetButtonClick","t","fullScreen","toggleFullScreen","handleChange","filter","Boolean","join","undefined","exportDefault"],"mappings":";;;;;;;;AAAA,IAAIA,GAAJ,EAAQC,MAAR,EAAeC,KAAf,EAAqBC,IAArB;AAA0BC,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACL,KAAG,CAACM,CAAD,EAAG;AAACN,OAAG,GAACM,CAAJ;AAAM,GAAd;;AAAeL,QAAM,CAACK,CAAD,EAAG;AAACL,UAAM,GAACK,CAAP;AAAS,GAAlC;;AAAmCJ,OAAK,CAACI,CAAD,EAAG;AAACJ,SAAK,GAACI,CAAN;AAAQ,GAApD;;AAAqDH,MAAI,CAACG,CAAD,EAAG;AAACH,QAAI,GAACG,CAAL;AAAO;;AAApE,CAApC,EAA0G,CAA1G;AAA6G,IAAIC,SAAJ;AAAcH,MAAM,CAACC,IAAP,CAAY,6BAAZ,EAA0C;AAACE,WAAS,CAACD,CAAD,EAAG;AAACC,aAAS,GAACD,CAAV;AAAY;;AAA1B,CAA1C,EAAsE,CAAtE;AAAyE,IAAIE,KAAJ;AAAUJ,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACI,SAAO,CAACH,CAAD,EAAG;AAACE,SAAK,GAACF,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAII,cAAJ;AAAmBN,MAAM,CAACC,IAAP,CAAY,yCAAZ,EAAsD;AAACK,gBAAc,CAACJ,CAAD,EAAG;AAACI,kBAAc,GAACJ,CAAf;AAAiB;;AAApC,CAAtD,EAA4F,CAA5F;AAA+F,IAAIK,kBAAJ;AAAuBP,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACI,SAAO,CAACH,CAAD,EAAG;AAACK,sBAAkB,GAACL,CAAnB;AAAqB;;AAAjC,CAApC,EAAuE,CAAvE;AAA0E,IAAIM,UAAJ;AAAeR,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACI,SAAO,CAACH,CAAD,EAAG;AAACM,cAAU,GAACN,CAAX;AAAa;;AAAzB,CAA3B,EAAsD,CAAtD;;AAQvf,SAASO,gBAAT,OAYG;AAAA,MAZuB;AACzBC,OADyB;AAEzBC,SAFyB;AAGzBC,SAAK,GAAG,EAHiB;AAIzBC,QAJyB;AAKzBC,eALyB;AAMzBC,YANyB;AAOzBC,gBAPyB;AAQzBC,YARyB;AASzBC,kBATyB;AAUzBC,iBAVyB;AAWzBC;AAXyB,GAYvB;AACF,QAAMC,CAAC,GAAGf,cAAc,EAAxB;AAEA,QAAM,CAACgB,UAAD,EAAaC,gBAAb,IAAiCpB,SAAS,CAAC,KAAD,CAAhD;;AAEA,QAAMqB,YAAY,GAAIZ,KAAD,IAAW;AAC/BO,iBAAa,CAACP,KAAD,CAAb;AACA,GAFD;;AAIA,sBACC,uDACC,oBAAC,IAAD,CAAM,SAAN,qBACC,oBAAC,GAAD,qBACC,oBAAC,KAAD,CAAO,KAAP;AAAa,WAAO,EAAEF,GAAtB;AAA2B,SAAK,EAAEA;AAAlC,KACEC,KADF,CADD,EAIEO,cAAc,iBAAI,oBAAC,kBAAD;AAAoB,gCAA0BR,GAA9C;AAAmD,WAAO,EAAEU;AAA5D,IAJpB,CADD,CADD,eASC;AAAK,aAAS,EAAE,CAAC,iBAAD,EAAoBE,UAAU,IAAI,qDAAlC,EAAyFG,MAAzF,CAAgGC,OAAhG,EAAyGC,IAAzG,CAA8G,GAA9G;AAAhB,kBACC;AAAK,aAAS,EAAC;AAAf,KAAwBhB,KAAxB,CADD,eAEC,oBAAC,UAAD;AACC,0BAAoBD,GADrB;AAEC,MAAE,EAAEA,GAFL;AAGC,QAAI,EAAEG,IAHP;AAIC,SAAK,EAAED,KAJR;AAKC,eAAW,EAAEE,WALd;AAMC,YAAQ,EAAEG,QANX;AAOC,YAAQ,EAAEF,QAPX;AAQC,gBAAY,EAAEC,YAAY,KAAK,KAAjB,GAAyB,KAAzB,GAAiCY,SARhD;AASC,YAAQ,EAAEJ;AATX,IAFD,eAaC;AAAK,aAAS,EAAC;AAAf,kBACC,oBAAC,MAAD;AAAQ,WAAO,MAAf;AAAgB,WAAO,EAAE,MAAMD,gBAAgB;AAA/C,KACED,UAAU,GAAGD,CAAC,CAAC,kBAAD,CAAJ,GAA2BA,CAAC,CAAC,aAAD,CADxC,CADD,CAbD,CATD,CADD;AA+BA;;AA5DDrB,MAAM,CAAC6B,aAAP,CA8DepB,gBA9Df,E","file":"dynamic/client/views/admin/settings/inputs/CodeSettingInput.js","sourcesContent":["import { Box, Button, Field, Flex } from '@rocket.chat/fuselage';\nimport { useToggle } from '@rocket.chat/fuselage-hooks';\nimport React from 'react';\n\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport ResetSettingButton from '../ResetSettingButton';\nimport CodeMirror from './CodeMirror';\n\nfunction CodeSettingInput({\n\t_id,\n\tlabel,\n\tvalue = '',\n\tcode,\n\tplaceholder,\n\treadonly,\n\tautocomplete,\n\tdisabled,\n\thasResetButton,\n\tonChangeValue,\n\tonResetButtonClick,\n}) {\n\tconst t = useTranslation();\n\n\tconst [fullScreen, toggleFullScreen] = useToggle(false);\n\n\tconst handleChange = (value) => {\n\t\tonChangeValue(value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Flex.Container>\n\t\t\t\t<Box>\n\t\t\t\t\t<Field.Label htmlFor={_id} title={_id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Field.Label>\n\t\t\t\t\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\n\t\t\t\t</Box>\n\t\t\t</Flex.Container>\n\t\t\t<div className={['code-mirror-box', fullScreen && 'code-mirror-box-fullscreen content-background-color'].filter(Boolean).join(' ')}>\n\t\t\t\t<div className='title'>{label}</div>\n\t\t\t\t<CodeMirror\n\t\t\t\t\tdata-qa-setting-id={_id}\n\t\t\t\t\tid={_id}\n\t\t\t\t\tmode={code}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\treadOnly={readonly}\n\t\t\t\t\tautoComplete={autocomplete === false ? 'off' : undefined}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<div className='buttons'>\n\t\t\t\t\t<Button primary onClick={() => toggleFullScreen()}>\n\t\t\t\t\t\t{fullScreen ? t('Exit_Full_Screen') : t('Full_Screen')}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default CodeSettingInput;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/sidebar/AdminSidebarSettings.tsx"],"names":[],"mappings":";;;;;;;;AAAA,SAAO,IAAP,EAAY,WAAZ,EAAoB,QAApB;AAAiC,OAAQ,IAAR,CAAU,uBAAV,EAAgB;AAAA,KAAwB;AAAA;AAAA,GAAxB;;AAAwB;AAAA;AAAA,GAAxB;;AAAwB;AAAA;AAAA,GAAxB;;AAAwB;AAAA;AAAA;;AAAxB,CAAhB,EAAwC,CAAxC;AAAwC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AASzE,MAAM,iBAAiB,GAAI,MAAD,IAA+B;AACxD,QAAM,QAAQ,GAAG,WAAW,EAA5B;AAEA,QAAM,CAAC,GAAG,cAAc,EAAxB;AAEA,QAAM,eAAe,GAAG,OAAO,CAAC,MAAK;AACpC,QAAI,CAAC,MAAL,EAAa;AACZ,aAAO,MAAe,IAAtB;AACA;;AAED,UAAM,mBAAmB,GAAI,OAAD,IAC3B,CAAC,OAAO,CAAC,SAAR,IAAqB,CAAC,CAAC,OAAO,CAAC,SAAT,CAAvB,EAA8D,CAAC,CAAC,OAAO,CAAC,GAAT,CAA/D,EAAgG,OAAO,CAAC,GAAxG,EAA6G,MAA7G,CAAoH,OAApH,CADD;;AAGA,QAAI;AACH,YAAM,WAAW,GAAG,IAAI,MAAJ,CAAW,MAAX,EAAmB,GAAnB,CAApB;AACA,aAAQ,OAAD,IAAgC,mBAAmB,CAAC,OAAD,CAAnB,CAA6B,IAA7B,CAAmC,IAAD,IAAU,WAAW,CAAC,IAAZ,CAAiB,IAAjB,CAA5C,CAAvC;AACA,KAHD,CAGE,OAAO,CAAP,EAAU;AACX,aAAQ,OAAD,IAAgC,mBAAmB,CAAC,OAAD,CAAnB,CAA6B,IAA7B,CAAmC,IAAD,IAAU,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,MAAM,CAAC,MAArB,MAAiC,MAA7E,CAAvC;AACA;AACD,GAd8B,EAc5B,CAAC,MAAD,EAAS,CAAT,CAd4B,CAA/B;AAgBA,SAAO,OAAO,CAAC,MAAK;AACnB,UAAM,QAAQ,GAAG,KAAK,CAAC,IAAN,CAChB,IAAI,GAAJ,CACC,QAAQ,CAAC,MAAT,CAAgB,eAAhB,EAAiC,GAAjC,CAAsC,OAAD,IAAY;AAChD,UAAI,OAAO,CAAC,IAAR,KAAiB,OAArB,EAA8B;AAC7B,eAAO,OAAO,CAAC,GAAf;AACA;;AAED,aAAO,OAAO,CAAC,KAAf;AACA,KAND,CADD,CADgB,CAAjB;AAYA,WAAO,QAAQ,CACb,MADK,CACE;AAAA,UAAC;AAAE,YAAF;AAAQ,aAAR;AAAe;AAAf,OAAD;AAAA,aAA0B,IAAI,KAAK,OAAT,IAAoB,QAAQ,CAAC,QAAT,CAAkB,KAAK,IAAI,GAA3B,CAA9C;AAAA,KADF,EAEL,IAFK,CAEA,CAAC,CAAD,EAAI,CAAJ,KAAU,CAAC,CAAE,CAAC,CAAC,SAAF,IAAe,CAAC,CAAC,GAAnB,CAAD,CAA4C,aAA5C,CAA0D,CAAC,CAAE,CAAC,CAAC,SAAF,IAAe,CAAC,CAAC,GAAnB,CAA3D,CAFV,CAAP;AAGA,GAhBa,EAgBX,CAAC,QAAD,EAAW,eAAX,EAA4B,CAA5B,CAhBW,CAAd;AAiBA,CAtCD;;AA4CA,MAAM,oBAAoB,GAAkC,SAAoB;AAAA,MAAnB;AAAE;AAAF,GAAmB;AAC/E,QAAM,CAAC,GAAG,cAAc,EAAxB;AACA,QAAM,CAAC,MAAD,EAAS,SAAT,IAAsB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,YAAY,GAAG,WAAW,CAAE,CAAD,IAAO,SAAS,CAAC,CAAC,CAAC,aAAF,CAAgB,KAAjB,CAAjB,EAA0C,EAA1C,CAAhC;AAEA,QAAM,MAAM,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,MAAD,EAAS,GAAT,CAAlB,CAAhC;AACA,QAAM,eAAe,GAAG,KAAxB,CAN+E,CAMhD;;AAE/B,sBACC,oBAAC,GAAD;AAAK,MAAE,EAAC,SAAR;AAAkB,WAAO,EAAC,MAA1B;AAAiC,iBAAa,EAAC,QAA/C;AAAwD,cAAU,EAAE,CAApE;AAAuE,MAAE,EAAC;AAA1E,kBACC,oBAAC,GAAD;AAAK,MAAE,EAAC,KAAR;AAAc,MAAE,EAAC,IAAjB;AAAsB,aAAS,EAAC,KAAhC;AAAsC,SAAK,EAAC;AAA5C,KACE,CAAC,CAAC,UAAD,CADH,CADD,eAIC,oBAAC,GAAD;AAAK,MAAE,EAAC,KAAR;AAAc,MAAE,EAAC,IAAjB;AAAsB,WAAO,EAAC;AAA9B,kBACC,oBAAC,WAAD;AAAa,SAAK,EAAE,MAApB;AAA4B,eAAW,EAAE,CAAC,CAAC,QAAD,CAA1C;AAAsD,YAAQ,EAAE,YAAhE;AAA8E,SAAK,eAAE,oBAAC,IAAD;AAAM,UAAI,EAAC,WAAX;AAAuB,UAAI,EAAC;AAA5B;AAArF,IADD,CAJD,eAOC,oBAAC,GAAD;AAAK,MAAE,EAAC,KAAR;AAAc,WAAO,EAAC,MAAtB;AAA6B,iBAAa,EAAC;AAA3C,KACE,eAAe,iBAAI,oBAAC,QAAD,OADrB,EAEE,CAAC,eAAD,IAAoB,CAAC,CAAC,MAAM,CAAC,MAA7B,iBACA,oBAAC,OAAD,CAAS,cAAT;AACC,SAAK,EAAE,MAAM,CAAC,GAAP,CAAY,KAAD,KAAY;AAC7B,UAAI,EAAE,CAAC,CAAE,KAAK,CAAC,SAAN,IAAmB,KAAK,CAAC,GAA3B,CADsB;AAE7B,iBAAW,EAAE,OAFgB;AAG7B,eAAS,EAAE,KAAK,CAAC;AAHY,KAAZ,CAAX,CADR;AAMC,eAAW,EAAE;AANd,IAHF,EAYE,CAAC,eAAD,IAAoB,CAAC,MAAM,CAAC,MAA5B,iBACA,oBAAC,GAAD;AAAK,MAAE,EAAC,KAAR;AAAc,MAAE,EAAC,IAAjB;AAAsB,SAAK,EAAC;AAA5B,KACE,CAAC,CAAC,eAAD,CADH,CAbF,CAPD,CADD;AA4BA,CApCD;;AArDA,OAAO,aAAP,CA2Fe,oBA3Ff,E","file":"dynamic/client/views/admin/sidebar/AdminSidebarSettings.tsx","sourcesContent":["import { Box, Icon, SearchInput, Skeleton } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport React, { useCallback, useState, useMemo, FC } from 'react';\n\nimport { ISetting } from '../../../../definition/ISetting';\nimport Sidebar from '../../../components/Sidebar';\nimport { useSettings } from '../../../contexts/SettingsContext';\nimport { TranslationKey, useTranslation } from '../../../contexts/TranslationContext';\n\nconst useSettingsGroups = (filter: string): ISetting[] => {\n\tconst settings = useSettings();\n\n\tconst t = useTranslation();\n\n\tconst filterPredicate = useMemo(() => {\n\t\tif (!filter) {\n\t\t\treturn (): boolean => true;\n\t\t}\n\n\t\tconst getMatchableStrings = (setting: ISetting): string[] =>\n\t\t\t[setting.i18nLabel && t(setting.i18nLabel as TranslationKey), t(setting._id as TranslationKey), setting._id].filter(Boolean);\n\n\t\ttry {\n\t\t\tconst filterRegex = new RegExp(filter, 'i');\n\t\t\treturn (setting: ISetting): boolean => getMatchableStrings(setting).some((text) => filterRegex.test(text));\n\t\t} catch (e) {\n\t\t\treturn (setting: ISetting): boolean => getMatchableStrings(setting).some((text) => text.slice(0, filter.length) === filter);\n\t\t}\n\t}, [filter, t]);\n\n\treturn useMemo(() => {\n\t\tconst groupIds = Array.from(\n\t\t\tnew Set(\n\t\t\t\tsettings.filter(filterPredicate).map((setting) => {\n\t\t\t\t\tif (setting.type === 'group') {\n\t\t\t\t\t\treturn setting._id;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn setting.group;\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\treturn settings\n\t\t\t.filter(({ type, group, _id }) => type === 'group' && groupIds.includes(group || _id))\n\t\t\t.sort((a, b) => t((a.i18nLabel || a._id) as TranslationKey).localeCompare(t((b.i18nLabel || b._id) as TranslationKey)));\n\t}, [settings, filterPredicate, t]);\n};\n\ntype AdminSidebarSettingsProps = {\n\tcurrentPath: string;\n};\n\nconst AdminSidebarSettings: FC<AdminSidebarSettingsProps> = ({ currentPath }) => {\n\tconst t = useTranslation();\n\tconst [filter, setFilter] = useState('');\n\tconst handleChange = useCallback((e) => setFilter(e.currentTarget.value), []);\n\n\tconst groups = useSettingsGroups(useDebouncedValue(filter, 400));\n\tconst isLoadingGroups = false; // TODO: get from PrivilegedSettingsContext\n\n\treturn (\n\t\t<Box is='section' display='flex' flexDirection='column' flexShrink={0} pb='x24'>\n\t\t\t<Box pi='x24' pb='x8' fontScale='p2m' color='info'>\n\t\t\t\t{t('Settings')}\n\t\t\t</Box>\n\t\t\t<Box pi='x24' pb='x8' display='flex'>\n\t\t\t\t<SearchInput value={filter} placeholder={t('Search')} onChange={handleChange} addon={<Icon name='magnifier' size='x20' />} />\n\t\t\t</Box>\n\t\t\t<Box pb='x16' display='flex' flexDirection='column'>\n\t\t\t\t{isLoadingGroups && <Skeleton />}\n\t\t\t\t{!isLoadingGroups && !!groups.length && (\n\t\t\t\t\t<Sidebar.ItemsAssembler\n\t\t\t\t\t\titems={groups.map((group) => ({\n\t\t\t\t\t\t\tname: t((group.i18nLabel || group._id) as TranslationKey),\n\t\t\t\t\t\t\tpathSection: 'admin',\n\t\t\t\t\t\t\tpathGroup: group._id,\n\t\t\t\t\t\t}))}\n\t\t\t\t\t\tcurrentPath={currentPath}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!isLoadingGroups && !groups.length && (\n\t\t\t\t\t<Box pi='x28' mb='x4' color='hint'>\n\t\t\t\t\t\t{t('Nothing_found')}\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default AdminSidebarSettings;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/SettingsRoute.js"],"names":["module","export","SettingsRoute","React","link","default","v","NotAuthorizedPage","useRouteParameter","useIsPrivilegedSettingsContext","EditableSettingsProvider","GroupSelector","hasPermission","groupId","exportDefault"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,eAAa,EAAC,MAAIA;AAAnB,CAAd;AAAiD,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACH,SAAK,GAACG,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,iBAAJ;AAAsBP,MAAM,CAACI,IAAP,CAAY,uCAAZ,EAAoD;AAACC,SAAO,CAACC,CAAD,EAAG;AAACC,qBAAiB,GAACD,CAAlB;AAAoB;;AAAhC,CAApD,EAAsF,CAAtF;AAAyF,IAAIE,iBAAJ;AAAsBR,MAAM,CAACI,IAAP,CAAY,iCAAZ,EAA8C;AAACI,mBAAiB,CAACF,CAAD,EAAG;AAACE,qBAAiB,GAACF,CAAlB;AAAoB;;AAA1C,CAA9C,EAA0F,CAA1F;AAA6F,IAAIG,8BAAJ;AAAmCT,MAAM,CAACI,IAAP,CAAY,mCAAZ,EAAgD;AAACK,gCAA8B,CAACH,CAAD,EAAG;AAACG,kCAA8B,GAACH,CAA/B;AAAiC;;AAApE,CAAhD,EAAsH,CAAtH;AAAyH,IAAII,wBAAJ;AAA6BV,MAAM,CAACI,IAAP,CAAY,6CAAZ,EAA0D;AAACC,SAAO,CAACC,CAAD,EAAG;AAACI,4BAAwB,GAACJ,CAAzB;AAA2B;;AAAvC,CAA1D,EAAmG,CAAnG;AAAsG,IAAIK,aAAJ;AAAkBX,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA8B;AAACC,SAAO,CAACC,CAAD,EAAG;AAACK,iBAAa,GAACL,CAAd;AAAgB;;AAA5B,CAA9B,EAA4D,CAA5D;;AAQpnB,SAASJ,aAAT,GAAyB;AAC/B,QAAMU,aAAa,GAAGH,8BAA8B,EAApD;AAEA,QAAMI,OAAO,GAAGL,iBAAiB,CAAC,OAAD,CAAjC;;AAEA,MAAI,CAACI,aAAL,EAAoB;AACnB,wBAAO,oBAAC,iBAAD,OAAP;AACA;;AAED,sBACC,oBAAC,wBAAD,qBACC,oBAAC,aAAD;AAAe,WAAO,EAAEC;AAAxB,IADD,CADD;AAKA;;AAtBDb,MAAM,CAACc,aAAP,CAwBeZ,aAxBf,E","file":"dynamic/client/views/admin/settings/SettingsRoute.js","sourcesContent":["import React from 'react';\n\nimport NotAuthorizedPage from '../../../components/NotAuthorizedPage';\nimport { useRouteParameter } from '../../../contexts/RouterContext';\nimport { useIsPrivilegedSettingsContext } from '../../../contexts/SettingsContext';\nimport EditableSettingsProvider from '../../../providers/EditableSettingsProvider';\nimport GroupSelector from './GroupSelector';\n\nexport function SettingsRoute() {\n\tconst hasPermission = useIsPrivilegedSettingsContext();\n\n\tconst groupId = useRouteParameter('group');\n\n\tif (!hasPermission) {\n\t\treturn <NotAuthorizedPage />;\n\t}\n\n\treturn (\n\t\t<EditableSettingsProvider>\n\t\t\t<GroupSelector groupId={groupId} />\n\t\t</EditableSettingsProvider>\n\t);\n}\n\nexport default SettingsRoute;\n"]}
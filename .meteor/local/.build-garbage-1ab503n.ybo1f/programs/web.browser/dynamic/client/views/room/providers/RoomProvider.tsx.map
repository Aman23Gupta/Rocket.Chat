{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/providers/RoomProvider.tsx"],"names":[],"mappings":";;;;;;;;AAAA;;AAA2B,MAAO,CAAE,IAAT,CAAa,sCAAb,EAAwC;AAAA;AAAA;AAAA;;AAAA,CAAxC,EAAwC,CAAxC;AAA3B,WAAO,OAAP,EAA2B,IAA3B,EAAkC,SAAlC;AAA0C,OAAS,IAAT,CAAW,OAAX,EAAiB;AAAA,SAAQ;AAAA;AAAA,GAAR;;AAAQ;AAAA;AAAA,GAAR;;AAAQ;AAAA;AAAA,GAAR;;AAAQ;AAAA;AAAA;;AAAR,CAAjB,EAAyB,CAAzB;AAAyB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAiBnE,MAAM,MAAM,GAAG,EAAf;;AAEA,MAAM,YAAY,GAAG,QAA0C;AAAA,MAAzC;AAAE,OAAF;AAAO;AAAP,GAAyC;AAC9D,QAAM;AAAE,SAAF;AAAS,SAAK,EAAE;AAAhB,MAAyB,aAAa,CAAC,GAAD,CAA5C;AAEA,QAAM,UAAU,GAAG,OAAO,CAAC,mBAAmB,CAAC,GAAD,EAAM,MAAN,CAApB,CAA1B;AACA,QAAM,OAAO,GAAG,OAAO,CAAC,MAAK;AAC5B,QAAI,CAAC,IAAL,EAAW;AACV,aAAO,IAAP;AACA;;AACD,QAAI,CAAC,GAAL,GAAW,GAAX;AACA,WAAO;AACN,gBADM;AAEN,SAFM;AAGN,UAAI,kCAAO,IAAP;AAAa,YAAI,EAAE,SAAS,CAAC,WAAV,CAAsB,IAAI,CAAC,CAA3B,EAA8B,IAA9B;AAAnB;AAHE,KAAP;AAKA,GAVsB,EAUpB,CAAC,IAAD,EAAO,GAAP,EAAY,UAAZ,CAVoB,CAAvB;AAYA,WAAS,CAAC,MAAK;AACd,eAAW,CAAC,IAAZ,CAAiB,GAAjB;AACA,WAAO,MAAW;AACjB,iBAAW,CAAC,IAAZ,CAAiB,GAAjB;AACA,KAFD;AAGA,GALQ,EAKN,CAAC,GAAD,CALM,CAAT;AAOA,WAAS,CAAC,MAAK;AACd,QAAI,CAAC,UAAL,EAAiB;AAChB,aAAO,MAAY,SAAnB;AACA;;AAED,cAAU,CAAC,SAAX,CAAqB,GAArB;AACA,WAAO,MAAW;AACjB,gBAAU,CAAC,MAAX,CAAkB,GAAlB;AACA,KAFD;AAGA,GATQ,EASN,CAAC,GAAD,EAAM,UAAN,CATM,CAAT;;AAWA,MAAI,KAAK,KAAK,eAAe,CAAC,OAA1B,IAAqC,CAAC,IAA1C,EAAgD;AAC/C,wBAAO,oBAAC,QAAD,OAAP;AACA;;AAED,sBACC,oBAAC,WAAD,CAAa,QAAb;AAAsB,SAAK,EAAE;AAA7B,kBACC,oBAAC,eAAD;AAAiB,QAAI,EAAE;AAAvB,KAA8B,QAA9B,CADD,CADD;AAKA,CA3CD;;AAnBA,OAAO,aAAP,eAgEe,IAAI,CAAC,YAAD,CAhEnB,E","file":"dynamic/client/views/room/providers/RoomProvider.tsx","sourcesContent":["import React, { ReactNode, useMemo, memo, useEffect } from 'react';\n\nimport { UserAction } from '../../../../app/ui';\nimport { roomTypes } from '../../../../app/utils/client';\nimport { IRoom } from '../../../../definition/IRoom';\nimport { useUserSubscription } from '../../../contexts/UserContext';\nimport { RoomManager, useHandleRoom } from '../../../lib/RoomManager';\nimport { AsyncStatePhase } from '../../../lib/asyncState';\nimport Skeleton from '../Room/Skeleton';\nimport { RoomContext } from '../contexts/RoomContext';\nimport ToolboxProvider from './ToolboxProvider';\n\nexport type Props = {\n\tchildren: ReactNode;\n\trid: IRoom['_id'];\n};\n\nconst fields = {};\n\nconst RoomProvider = ({ rid, children }: Props): JSX.Element => {\n\tconst { phase, value: room } = useHandleRoom(rid);\n\n\tconst subscribed = Boolean(useUserSubscription(rid, fields));\n\tconst context = useMemo(() => {\n\t\tif (!room) {\n\t\t\treturn null;\n\t\t}\n\t\troom._id = rid;\n\t\treturn {\n\t\t\tsubscribed,\n\t\t\trid,\n\t\t\troom: { ...room, name: roomTypes.getRoomName(room.t, room) },\n\t\t};\n\t}, [room, rid, subscribed]);\n\n\tuseEffect(() => {\n\t\tRoomManager.open(rid);\n\t\treturn (): void => {\n\t\t\tRoomManager.back(rid);\n\t\t};\n\t}, [rid]);\n\n\tuseEffect(() => {\n\t\tif (!subscribed) {\n\t\t\treturn (): void => undefined;\n\t\t}\n\n\t\tUserAction.addStream(rid);\n\t\treturn (): void => {\n\t\t\tUserAction.cancel(rid);\n\t\t};\n\t}, [rid, subscribed]);\n\n\tif (phase === AsyncStatePhase.LOADING || !room) {\n\t\treturn <Skeleton />;\n\t}\n\n\treturn (\n\t\t<RoomContext.Provider value={context}>\n\t\t\t<ToolboxProvider room={room}>{children}</ToolboxProvider>\n\t\t</RoomContext.Provider>\n\t);\n};\n\nexport default memo(RoomProvider);\n"]}
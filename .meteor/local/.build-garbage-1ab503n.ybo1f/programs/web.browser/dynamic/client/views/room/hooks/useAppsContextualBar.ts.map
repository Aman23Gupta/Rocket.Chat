{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useAppsContextualBar.ts"],"names":[],"mappings":";;;;;;;;AACA,OAAO,MAAP,CAAS;AAAA,sBAAqB,EAAM;AAA3B,CAAT;AAA4C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAerC,MAAM,oBAAoB,GAAG,MAAwC;AAC3E,QAAM,GAAG,MAAH,IAAa,eAAe,EAAlC;AACA,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,EAAtC;AACA,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,EAAtC;AAEA,QAAM;AAAE,OAAG,EAAE;AAAP,MAAkB,OAAO,EAA/B;AAEA,QAAM,MAAM,GAAG,MAAH,aAAG,MAAH,uBAAG,MAAM,CAAE,OAAvB;AAEA,WAAS,CAAC,MAAK;AACd,mBAAe,UAAf,CAA0B,KAA1B,EAAuC;AACtC,YAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAlB;AACA,gBAAU,CAAC,GAAD,CAAV;AACA;;AAED,QAAI,MAAJ,EAAY;AACX,gBAAU,CAAC,iCAAiC,CAAC,MAAD,CAAlC,CAAV;AACA;;AAED,QAAI,OAAJ,aAAI,OAAJ,eAAI,OAAO,CAAE,KAAb,EAAoB;AACnB,gBAAU,CAAC,OAAO,CAAC,KAAT,CAAV;AACA;;AAED,WAAO,MAAW;AACjB,gBAAU,CAAC,SAAD,CAAV;AACA,gBAAU,CAAC,SAAD,CAAV;AACA,KAHD;AAIA,GAlBQ,EAkBN,CAAC,MAAD,EAAS,OAAT,aAAS,OAAT,uBAAS,OAAO,CAAE,KAAlB,CAlBM,CAAT;;AAoBA,MAAI,MAAM,IAAI,OAAV,IAAqB,OAAzB,EAAkC;AACjC,WAAO;AACN,YADM;AAEN,YAFM;AAGN,aAHM;AAIN;AAJM,KAAP;AAMA;;AAED,SAAO,SAAP;AACA,CAvCM,C","file":"dynamic/client/views/room/hooks/useAppsContextualBar.ts","sourcesContent":["import { IUIKitContextualBarInteraction } from '@rocket.chat/apps-engine/definition/uikit';\nimport { useEffect, useState } from 'react';\n\nimport { Apps } from '../../../../app/apps/client/orchestrator';\nimport { getUserInteractionPayloadByViewId } from '../../../../app/ui-message/client/ActionManager';\nimport { useCurrentRoute } from '../../../contexts/RouterContext';\nimport { App } from '../../admin/apps/types';\nimport { useRoom } from '../contexts/RoomContext';\n\ntype AppsContextualBarData = {\n\tviewId: string;\n\troomId: string;\n\tpayload: IUIKitContextualBarInteraction;\n\tappInfo: App;\n};\n\nexport const useAppsContextualBar = (): AppsContextualBarData | undefined => {\n\tconst [, params] = useCurrentRoute();\n\tconst [payload, setPayload] = useState<IUIKitContextualBarInteraction>();\n\tconst [appInfo, setAppInfo] = useState<App>();\n\n\tconst { _id: roomId } = useRoom();\n\n\tconst viewId = params?.context;\n\n\tuseEffect(() => {\n\t\tasync function getAppData(appId: string): Promise<void> {\n\t\t\tconst app = await Apps.getApp(appId);\n\t\t\tsetAppInfo(app);\n\t\t}\n\n\t\tif (viewId) {\n\t\t\tsetPayload(getUserInteractionPayloadByViewId(viewId) as IUIKitContextualBarInteraction);\n\t\t}\n\n\t\tif (payload?.appId) {\n\t\t\tgetAppData(payload.appId);\n\t\t}\n\n\t\treturn (): void => {\n\t\t\tsetPayload(undefined);\n\t\t\tsetAppInfo(undefined);\n\t\t};\n\t}, [viewId, payload?.appId]);\n\n\tif (viewId && payload && appInfo) {\n\t\treturn {\n\t\t\tviewId,\n\t\t\troomId,\n\t\t\tpayload,\n\t\t\tappInfo,\n\t\t};\n\t}\n\n\treturn undefined;\n};\n"]}
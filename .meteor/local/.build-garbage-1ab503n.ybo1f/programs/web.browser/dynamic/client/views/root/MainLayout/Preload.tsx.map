{"version":3,"sources":["meteor://ğŸ’»app/client/views/root/MainLayout/Preload.tsx"],"names":[],"mappings":";;;;;;;;AAAA,WAAO,SAAP;AAAyC,MAAS,CAAE,IAAX,CAAW,OAAX,EAAwB;AAAC;AAAA;AAAA,GAAD;;AAAC;AAAA;AAAA;;AAAD,CAAxB,EAAyB,CAAzB;AAAyB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAWlE,MAAM,OAAO,GAAG,QAAwD;AAAA,MAAvD;AAAE;AAAF,GAAuD;AACvE,QAAM,GAAG,GAAG,SAAS,EAArB;AACA,QAAM,kBAAkB,GAAG,cAAc,CAAC,sBAAsB,CAAC,KAAxB,CAAzC;AACA,QAAM,aAAa,GAAG,cAAc,CAAC,QAAQ,CAAC,gBAAT,CAA0B,KAA3B,CAApC;AACA,QAAM,aAAa,GAAG,cAAc,CAAC,WAAD,CAApC;AAEA,QAAM,KAAK,GAAG,CAAC,GAAD,IAAS,aAAa,IAAI,kBAAjB,IAAuC,aAA9D;AAEA,WAAS,CAAC,MAAK;AACd,2BAAuB,CAAC,WAAxB,GAAsC,KAAtC;AACA,aAAS,CAAC,GAAV,CAAc,KAAd;AACA,GAHQ,EAGN,CAAC,KAAD,CAHM,CAAT;;AAKA,MAAI,CAAC,KAAL,EAAY;AACX,wBAAO,oBAAC,WAAD,OAAP;AACA;;AAED,sBAAO,0CAAG,QAAH,CAAP;AACA,CAlBD;;AAXA,OAAO,aAAP,CA+Be,OA/Bf,E","file":"dynamic/client/views/root/MainLayout/Preload.tsx","sourcesContent":["import React, { ReactElement, ReactNode, useEffect } from 'react';\n\nimport { CachedChatSubscription } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { CachedCollectionManager } from '../../../../app/ui-cached-collection';\nimport { mainReady } from '../../../../app/ui-utils/client';\nimport { useUserId } from '../../../contexts/UserContext';\nimport { useReactiveVar } from '../../../hooks/useReactiveVar';\nimport { isSyncReady } from '../../../lib/userData';\nimport PageLoading from '../PageLoading';\n\nconst Preload = ({ children }: { children: ReactNode }): ReactElement => {\n\tconst uid = useUserId();\n\tconst subscriptionsReady = useReactiveVar(CachedChatSubscription.ready);\n\tconst settingsReady = useReactiveVar(settings.cachedCollection.ready);\n\tconst userDataReady = useReactiveVar(isSyncReady);\n\n\tconst ready = !uid || (userDataReady && subscriptionsReady && settingsReady);\n\n\tuseEffect(() => {\n\t\tCachedCollectionManager.syncEnabled = ready;\n\t\tmainReady.set(ready);\n\t}, [ready]);\n\n\tif (!ready) {\n\t\treturn <PageLoading />;\n\t}\n\n\treturn <>{children}</>;\n};\n\nexport default Preload;\n"]}
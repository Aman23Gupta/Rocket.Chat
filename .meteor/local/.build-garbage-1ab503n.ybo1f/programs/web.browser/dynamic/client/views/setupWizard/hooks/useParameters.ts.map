{"version":3,"sources":["meteor://ðŸ’»app/client/views/setupWizard/hooks/useParameters.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,eAAmB,QAAE;AAArB,CAAT;AAA4C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAKrC,MAAM,aAAa,GAAG,MAIzB;AACH,QAAM,CAAC,MAAD,EAAS,SAAT,IAAsB,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM,CAAC,QAAD,EAAW,WAAX,IAA0B,QAAQ,CAAkB,EAAlB,CAAxC;AACA,QAAM,CAAC,4BAAD,EAA+B,qCAA/B,IAAwE,QAAQ,CAAU,KAAV,CAAtF;AACA,QAAM,wBAAwB,GAAG,SAAS,CAAC,0BAAD,CAA1C;AAEA,WAAS,CAAC,MAAK;AACd,QAAI,OAAO,GAAG,IAAd;;AACA,UAAM,iBAAiB,GAAG,YAA0B;AACnD,UAAI;AACH,cAAM;AAAE,kBAAQ,GAAG,EAAb;AAAiB,+BAAqB,GAAG;AAAzC,YAAmD,CAAC,MAAM,wBAAwB,EAA/B,KAAsC,EAA/F;;AAEA,YAAI,CAAC,OAAL,EAAc;AACb;AACA;;AAED,iBAAS,CAAC,IAAD,CAAT;AACA,mBAAW,CAAC,QAAD,CAAX;AACA,6CAAqC,CAAC,qBAAD,CAArC;AACA,OAVD,CAUE,OAAO,KAAP,EAAc;AACf,iBAAS,CAAC,KAAD,CAAT;AACA,mBAAW,CAAC,EAAD,CAAX;AACA,6CAAqC,CAAC,KAAD,CAArC;AACA;AACD,KAhBD;;AAkBA,qBAAiB;AAEjB,WAAO,MAAW;AACjB,aAAO,GAAG,KAAV;AACA,KAFD;AAGA,GAzBQ,EAyBN,CAAC,wBAAD,CAzBM,CAAT;AA2BA,SAAO;AACN,UADM;AAEN,YAFM;AAGN;AAHM,GAAP;AAKA,CA1CM,C","file":"dynamic/client/views/setupWizard/hooks/useParameters.ts","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { ISetting } from '../../../../definition/ISetting';\nimport { useMethod } from '../../../contexts/ServerContext';\n\nexport const useParameters = (): {\n\tloaded: boolean;\n\tsettings: Array<ISetting>;\n\tcanDeclineServerRegistration: boolean;\n} => {\n\tconst [loaded, setLoaded] = useState<boolean>(false);\n\tconst [settings, setSettings] = useState<Array<ISetting>>([]);\n\tconst [canDeclineServerRegistration, setCapableOfDeclineServerRegistration] = useState<boolean>(false);\n\tconst getSetupWizardParameters = useMethod('getSetupWizardParameters');\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tconst requestParameters = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst { settings = [], allowStandaloneServer = false } = (await getSetupWizardParameters()) || {};\n\n\t\t\t\tif (!mounted) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetLoaded(true);\n\t\t\t\tsetSettings(settings);\n\t\t\t\tsetCapableOfDeclineServerRegistration(allowStandaloneServer);\n\t\t\t} catch (error) {\n\t\t\t\tsetLoaded(false);\n\t\t\t\tsetSettings([]);\n\t\t\t\tsetCapableOfDeclineServerRegistration(false);\n\t\t\t}\n\t\t};\n\n\t\trequestParameters();\n\n\t\treturn (): void => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [getSetupWizardParameters]);\n\n\treturn {\n\t\tloaded,\n\t\tsettings,\n\t\tcanDeclineServerRegistration,\n\t};\n};\n"]}
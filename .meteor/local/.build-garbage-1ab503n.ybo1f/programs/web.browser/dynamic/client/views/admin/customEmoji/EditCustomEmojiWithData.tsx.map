{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/customEmoji/EditCustomEmojiWithData.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/admin/customEmoji/EditCustomEmojiWithData.tsx","sourcesContent":["import { Box, Button, ButtonGroup, Skeleton, Throbber, InputBox, Callout } from '@rocket.chat/fuselage';\nimport React, { useMemo, FC } from 'react';\n\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { AsyncStatePhase } from '../../../hooks/useAsyncState';\nimport { useEndpointData } from '../../../hooks/useEndpointData';\nimport EditCustomEmoji from './EditCustomEmoji';\n\ntype EditCustomEmojiWithDataProps = {\n\t_id: string;\n\tclose: () => void;\n\tonChange: () => void;\n};\n\nconst EditCustomEmojiWithData: FC<EditCustomEmojiWithDataProps> = ({ _id, onChange, close, ...props }) => {\n\tconst t = useTranslation();\n\tconst query = useMemo(() => ({ query: JSON.stringify({ _id }) }), [_id]);\n\n\tconst {\n\t\tvalue: data = {\n\t\t\temojis: {\n\t\t\t\tupdate: [],\n\t\t\t},\n\t\t},\n\t\tphase: state,\n\t\terror,\n\t\treload,\n\t} = useEndpointData('emoji-custom.list', query);\n\n\tif (state === AsyncStatePhase.LOADING) {\n\t\treturn (\n\t\t\t<Box pb='x20'>\n\t\t\t\t<Skeleton mbs='x8' />\n\t\t\t\t<InputBox.Skeleton w='full' />\n\t\t\t\t<Skeleton mbs='x8' />\n\t\t\t\t<InputBox.Skeleton w='full' />\n\t\t\t\t<ButtonGroup stretch w='full' mbs='x8'>\n\t\t\t\t\t<Button disabled>\n\t\t\t\t\t\t<Throbber inheritColor />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button primary disabled>\n\t\t\t\t\t\t<Throbber inheritColor />\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t\t<ButtonGroup stretch w='full' mbs='x8'>\n\t\t\t\t\t<Button primary danger disabled>\n\t\t\t\t\t\t<Throbber inheritColor />\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (error || !data || !data.emojis || data.emojis.update.length < 1) {\n\t\treturn <Callout title={t('Custom_Emoji_Error_Invalid_Emoji')} type='danger' />;\n\t}\n\n\tconst handleChange = (): void => {\n\t\tonChange?.();\n\t\treload?.();\n\t};\n\n\treturn <EditCustomEmoji data={data.emojis.update[0]} close={close} onChange={handleChange} {...props} />;\n};\n\nexport default EditCustomEmojiWithData;\n"]}
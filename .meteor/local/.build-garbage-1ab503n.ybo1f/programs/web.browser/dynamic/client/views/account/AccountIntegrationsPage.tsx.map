{"version":3,"sources":["meteor://ðŸ’»app/client/views/account/AccountIntegrationsPage.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/account/AccountIntegrationsPage.tsx","sourcesContent":["import { Box, Select, SelectOptions, Field, Button } from '@rocket.chat/fuselage';\nimport React, { useMemo, useCallback, ReactElement } from 'react';\n\nimport { WebdavAccounts } from '../../../app/models/client';\nimport { IWebdavAccount } from '../../../definition/IWebdavAccount';\nimport Page from '../../components/Page';\nimport { useMethod } from '../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { useForm } from '../../hooks/useForm';\nimport { useReactiveValue } from '../../hooks/useReactiveValue';\n\ntype WebdavAccountIntegration = Omit<IWebdavAccount, 'userId' | 'password' | '_updatedAt'>;\n\nconst getWebdavAccounts = (): Array<WebdavAccountIntegration> => WebdavAccounts.find().fetch();\n\nconst getServerName = ({ name, serverURL, username }: Omit<WebdavAccountIntegration, '_id'>): string =>\n\tname || `${username}@${serverURL?.replace(/^https?\\:\\/\\//i, '')}`;\n\nconst AccountIntegrationsPage = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst accounts = useReactiveValue(getWebdavAccounts);\n\tconst removeWebdavAccount = useMethod('removeWebdavAccount');\n\n\tconst {\n\t\tvalues: { selected },\n\t\thandlers: { handleSelected },\n\t} = useForm({ selected: [] });\n\n\tconst options: SelectOptions = useMemo(() => accounts.map(({ _id, ...current }) => [_id, getServerName(current)]), [accounts]);\n\n\tconst handleClickRemove = useCallback(() => {\n\t\ttry {\n\t\t\tremoveWebdavAccount(selected as string);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Webdav_account_removed') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [dispatchToastMessage, removeWebdavAccount, selected, t]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Integrations')} />\n\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Label>{t('WebDAV_Accounts')}</Field.Label>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<Select options={options} onChange={handleSelected} value={selected as string} placeholder={t('Select_an_option')} />\n\t\t\t\t\t\t\t<Button primary danger onClick={handleClickRemove}>\n\t\t\t\t\t\t\t\t{t('Remove')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t</Field>\n\t\t\t\t</Box>\n\t\t\t</Page.ScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default AccountIntegrationsPage;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/users/InviteUsers.js"],"names":["_objectWithoutProperties","module","link","default","v","export","InviteUsers","Box","Button","Icon","TextAreaInput","React","useCallback","useState","validateEmail","VerticalBar","useMethod","useToastMessageDispatch","useTranslation","data","props","t","dispatchToastMessage","text","setText","sendInvites","getEmails","split","filter","val","handleClick","type","message","error","e","currentTarget","value","length"],"mappings":"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","file":"dynamic/client/views/admin/users/InviteUsers.js","sourcesContent":["import { Box, Button, Icon, TextAreaInput } from '@rocket.chat/fuselage';\nimport React, { useCallback, useState } from 'react';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport VerticalBar from '../../../components/VerticalBar';\nimport { useMethod } from '../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\n\nexport function InviteUsers({ data, ...props }) {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst [text, setText] = useState('');\n\tconst sendInvites = useMethod('sendInvitationEmail');\n\tconst getEmails = useCallback((text) => text.split(/[\\ ,;]+/i).filter((val) => validateEmail(val)), []);\n\tconst handleClick = async () => {\n\t\ttry {\n\t\t\tawait sendInvites(getEmails(text));\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Emails_sent_successfully!') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error.message });\n\t\t}\n\t};\n\treturn (\n\t\t<VerticalBar.ScrollableContent {...props}>\n\t\t\t<Box is='h2' fontScale='h2' mb='x8'>\n\t\t\t\t{t('Send_invitation_email')}\n\t\t\t</Box>\n\t\t\t<Box fontScale='p2' mb='x8'>\n\t\t\t\t{t('Send_invitation_email_info')}\n\t\t\t</Box>\n\t\t\t<TextAreaInput rows={5} flexGrow={0} onChange={(e) => setText(e.currentTarget.value)} />\n\t\t\t<Button primary onClick={handleClick} disabled={!getEmails(text).length} alignItems='stretch' mb='x8'>\n\t\t\t\t<Icon name='send' size='x16' />\n\t\t\t\t{t('Send')}\n\t\t\t</Button>\n\t\t</VerticalBar.ScrollableContent>\n\t);\n}\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/info/InformationRoute.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/admin/info/InformationRoute.tsx","sourcesContent":["import { Callout, ButtonGroup, Button, Icon } from '@rocket.chat/fuselage';\nimport React, { useState, useEffect, memo, ReactElement } from 'react';\n\nimport { IStats } from '../../../../definition/IStats';\nimport NotAuthorizedPage from '../../../components/NotAuthorizedPage';\nimport Page from '../../../components/Page';\nimport PageSkeleton from '../../../components/PageSkeleton';\nimport { usePermission } from '../../../contexts/AuthorizationContext';\nimport { useMethod, useServerInformation, useEndpoint } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { downloadJsonAs } from '../../../lib/download';\nimport InformationPage from './InformationPage';\n\ntype fetchStatisticsCallback = ((params: { refresh: boolean }) => void) | (() => void);\n\nconst InformationRoute = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst canViewStatistics = usePermission('view-statistics');\n\n\tconst [isLoading, setLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\tconst [statistics, setStatistics] = useState<IStats>();\n\tconst [instances, setInstances] = useState([]);\n\tconst [fetchStatistics, setFetchStatistics] = useState<fetchStatisticsCallback>(() => (): void => undefined);\n\tconst getStatistics = useEndpoint('GET', 'statistics');\n\tconst getInstances = useMethod('instances/get');\n\n\tuseEffect(() => {\n\t\tlet didCancel = false;\n\n\t\tconst fetchStatistics = async ({ refresh = false } = {}): Promise<void> => {\n\t\t\tsetLoading(true);\n\t\t\tsetError(false);\n\n\t\t\ttry {\n\t\t\t\tconst [statistics, instances] = await Promise.all([getStatistics({ refresh }), getInstances()]);\n\n\t\t\t\tif (didCancel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetStatistics(statistics);\n\t\t\t\tsetInstances(instances);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(error);\n\t\t\t} finally {\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tsetFetchStatistics(() => fetchStatistics);\n\n\t\tfetchStatistics();\n\n\t\treturn (): void => {\n\t\t\tdidCancel = true;\n\t\t};\n\t}, [canViewStatistics, getInstances, getStatistics]);\n\n\tconst info = useServerInformation();\n\n\tconst handleClickRefreshButton = (): void => {\n\t\tif (isLoading) {\n\t\t\treturn;\n\t\t}\n\n\t\tfetchStatistics({ refresh: true });\n\t};\n\n\tconst handleClickDownloadInfo = (): void => {\n\t\tif (isLoading) {\n\t\t\treturn;\n\t\t}\n\t\tdownloadJsonAs(statistics, 'statistics');\n\t};\n\n\tif (isLoading) {\n\t\treturn <PageSkeleton />;\n\t}\n\n\tif (error || !statistics) {\n\t\treturn (\n\t\t\t<Page>\n\t\t\t\t<Page.Header title={t('Info')}>\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t<Button primary type='button' onClick={handleClickRefreshButton}>\n\t\t\t\t\t\t\t<Icon name='reload' /> {t('Refresh')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</Page.Header>\n\t\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t\t<Callout type='danger'>{t('Error_loading_pages')}</Callout>\n\t\t\t\t</Page.ScrollableContentWithShadow>\n\t\t\t</Page>\n\t\t);\n\t}\n\n\tif (canViewStatistics) {\n\t\treturn (\n\t\t\t<InformationPage\n\t\t\t\tcanViewStatistics={canViewStatistics}\n\t\t\t\tinfo={info}\n\t\t\t\tstatistics={statistics}\n\t\t\t\tinstances={instances}\n\t\t\t\tonClickRefreshButton={handleClickRefreshButton}\n\t\t\t\tonClickDownloadInfo={handleClickDownloadInfo}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn <NotAuthorizedPage />;\n};\n\nexport default memo(InformationRoute);\n"]}
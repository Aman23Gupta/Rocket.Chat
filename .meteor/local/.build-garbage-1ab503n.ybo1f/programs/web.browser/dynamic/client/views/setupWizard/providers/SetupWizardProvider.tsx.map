{"version":3,"sources":["meteor://ðŸ’»app/client/views/setupWizard/providers/SetupWizardProvider.tsx"],"names":[],"mappings":"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","file":"dynamic/client/views/setupWizard/providers/SetupWizardProvider.tsx","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Meteor } from 'meteor/meteor';\nimport React, { useCallback, useMemo, useState, ReactElement, ContextType, useEffect } from 'react';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport { useMethod, useEndpoint } from '../../../contexts/ServerContext';\nimport { useSessionDispatch } from '../../../contexts/SessionContext';\nimport { useSettingSetValue, useSetting, useSettingsDispatch } from '../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useLoginWithPassword, useUserId } from '../../../contexts/UserContext';\nimport { SetupWizardContext } from '../contexts/SetupWizardContext';\nimport { useParameters } from '../hooks/useParameters';\nimport { useStepRouting } from '../hooks/useStepRouting';\n\nconst initialData: ContextType<typeof SetupWizardContext>['setupWizardData'] = {\n\tadminData: { fullname: '', username: '', companyEmail: '', password: '' },\n\torganizationData: {\n\t\torganizationName: '',\n\t\torganizationType: '',\n\t\torganizationIndustry: '',\n\t\torganizationSize: '',\n\t\tcountry: '',\n\t},\n\tserverData: {\n\t\tagreement: false,\n\t\temail: '',\n\t\tregisterType: 'registered',\n\t\tupdates: false,\n\t},\n\t// eslint-disable-next-line @typescript-eslint/camelcase\n\tregistrationData: { cloudEmail: '', device_code: '', user_code: '' },\n};\n\ntype HandleRegisterServer = (params: { email: string; resend?: boolean }) => Promise<void>;\n\nconst SetupWizardProvider = ({ children }: { children: ReactElement }): ReactElement => {\n\tconst [setupWizardData, setSetupWizardData] = useState<ContextType<typeof SetupWizardContext>['setupWizardData']>(initialData);\n\tconst [currentStep, setCurrentStep] = useStepRouting();\n\tconst { loaded, settings, canDeclineServerRegistration } = useParameters();\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst dispatchSettings = useSettingsDispatch();\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst cloudEmail = useSetting('Organization_mail') as string;\n\tconst t = useTranslation();\n\n\tconst registerUser = useMethod('registerUser');\n\tconst defineUsername = useMethod('setUsername');\n\n\tconst userId = useUserId();\n\tconst loginWithPassword = useLoginWithPassword();\n\tconst setForceLogin = useSessionDispatch('forceLogin');\n\n\tconst createRegistrationIntent = useEndpoint('POST', 'cloud.createRegistrationIntent');\n\n\tuseEffect(() => {\n\t\tsetSetupWizardData((prev) => ({\n\t\t\t...prev,\n\t\t\tregistrationData: { ...prev.registrationData, cloudEmail },\n\t\t}));\n\t}, [cloudEmail]);\n\n\tconst goToPreviousStep = useCallback(() => setCurrentStep((currentStep) => currentStep - 1), [setCurrentStep]);\n\tconst goToNextStep = useCallback(() => setCurrentStep((currentStep) => currentStep + 1), [setCurrentStep]);\n\tconst goToStep = useCallback((step) => setCurrentStep(() => step), [setCurrentStep]);\n\n\tconst _validateEmail = useCallback(\n\t\t(email: string): true | string => {\n\t\t\tif (!validateEmail(email)) {\n\t\t\t\treturn t('Invalid_email');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[t],\n\t);\n\n\tconst registerAdminUser = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\tadminData: { fullname, username, companyEmail, password },\n\t\t} = setupWizardData;\n\t\tawait registerUser({ name: fullname, username, email: companyEmail, pass: password });\n\t\tcallbacks.run('userRegistered', {});\n\n\t\ttry {\n\t\t\tawait loginWithPassword(companyEmail, password);\n\t\t} catch (error) {\n\t\t\tif (error instanceof Meteor.Error && error.error === 'error-invalid-email') {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('We_have_sent_registration_email') });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (error instanceof Error || typeof error === 'string') {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\tsetForceLogin(false);\n\n\t\tawait defineUsername(username);\n\t\tawait dispatchSettings([{ _id: 'Organization_Email', value: companyEmail }]);\n\t\tcallbacks.run('usernameSet', {});\n\t}, [defineUsername, dispatchToastMessage, loginWithPassword, registerUser, setForceLogin, dispatchSettings, setupWizardData, t]);\n\n\tconst saveWorkspaceData = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\tserverData: { updates, agreement },\n\t\t} = setupWizardData;\n\n\t\tawait dispatchSettings([\n\t\t\t{\n\t\t\t\t_id: 'Statistics_reporting',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Apps_Framework_enabled',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Register_Server',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Allow_Marketing_Emails',\n\t\t\t\tvalue: updates,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Cloud_Service_Agree_PrivacyTerms',\n\t\t\t\tvalue: agreement,\n\t\t\t},\n\t\t]);\n\t}, [dispatchSettings, setupWizardData]);\n\n\tconst saveOrganizationData = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\torganizationData: { organizationName, organizationType, organizationIndustry, organizationSize, country },\n\t\t} = setupWizardData;\n\n\t\tawait dispatchSettings([\n\t\t\t{\n\t\t\t\t_id: 'Country',\n\t\t\t\tvalue: country,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Organization_Type',\n\t\t\t\tvalue: organizationType,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Industry',\n\t\t\t\tvalue: organizationIndustry,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Size',\n\t\t\t\tvalue: organizationSize,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Organization_Name',\n\t\t\t\tvalue: organizationName,\n\t\t\t},\n\t\t]);\n\t}, [dispatchSettings, setupWizardData]);\n\n\tconst registerServer: HandleRegisterServer = useMutableCallback(async ({ email, resend = false }): Promise<void> => {\n\t\tif (!userId) {\n\t\t\ttry {\n\t\t\t\tawait registerAdminUser();\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof Error || typeof e === 'string')\n\t\t\t\t\treturn dispatchToastMessage({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tmessage: e,\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait saveOrganizationData();\n\t\t\tconst { intentData } = await createRegistrationIntent({ resend, email });\n\n\t\t\tsetSetupWizardData((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tregistrationData: { ...intentData, cloudEmail: email },\n\t\t\t}));\n\n\t\t\tgoToStep(5);\n\t\t\tsetShowSetupWizard('in_progress');\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t});\n\n\tconst value = useMemo(\n\t\t() => ({\n\t\t\tsetupWizardData,\n\t\t\tsetSetupWizardData,\n\t\t\tcurrentStep,\n\t\t\tloaded,\n\t\t\tsettings,\n\t\t\tcanDeclineServerRegistration,\n\t\t\tgoToPreviousStep,\n\t\t\tgoToNextStep,\n\t\t\tgoToStep,\n\t\t\tregisterAdminUser,\n\t\t\tvalidateEmail: _validateEmail,\n\t\t\tregisterServer,\n\t\t\tsaveWorkspaceData,\n\t\t\tsaveOrganizationData,\n\t\t}),\n\t\t[\n\t\t\tsetupWizardData,\n\t\t\tsetSetupWizardData,\n\t\t\tcurrentStep,\n\t\t\tloaded,\n\t\t\tregisterAdminUser,\n\t\t\tsettings,\n\t\t\tcanDeclineServerRegistration,\n\t\t\tgoToPreviousStep,\n\t\t\tgoToNextStep,\n\t\t\tgoToStep,\n\t\t\t_validateEmail,\n\t\t\tregisterServer,\n\t\t\tsaveWorkspaceData,\n\t\t\tsaveOrganizationData,\n\t\t],\n\t);\n\n\treturn <SetupWizardContext.Provider value={value}>{children}</SetupWizardContext.Provider>;\n};\n\nexport default SetupWizardProvider;\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/providers/SessionProvider.tsx"],"names":[],"mappings":";;;;;;;;AAAA;AAAS,MAAS,KAAT,CAAe,gBAAf,EAAgC;AAAA;AAAA;AAAA;;AAAA,CAAhC,EAAgC,CAAhC;AAAgC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMzC,MAAM,YAAY,GAAG;AACpB,OAAK,EAAE,iCAAiC,CAAW,IAAD,IAAU,OAAO,CAAC,GAAR,CAAY,IAAZ,CAApB,CADpB;AAEpB,UAAQ,EAAE,CAAC,IAAD,EAAe,KAAf,KAAuC;AAChD,WAAO,CAAC,GAAR,CAAY,IAAZ,EAAkB,KAAlB;AACA;AAJmB,CAArB;;AAOA,MAAM,eAAe,GAAO;AAAA,MAAC;AAAE;AAAF,GAAD;AAAA,sBAAkB,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,YAAQ,EAAE,QAAnC;AAA6C,SAAK,EAAE;AAApD,IAAlB;AAAA,CAA5B;;AAbA,OAAO,aAAP,CAee,eAff,E","file":"dynamic/client/providers/SessionProvider.tsx","sourcesContent":["import { Session } from 'meteor/session';\nimport React, { FC } from 'react';\n\nimport { SessionContext } from '../contexts/SessionContext';\nimport { createReactiveSubscriptionFactory } from './createReactiveSubscriptionFactory';\n\nconst contextValue = {\n\tquery: createReactiveSubscriptionFactory<unknown>((name) => Session.get(name)),\n\tdispatch: (name: string, value: unknown): void => {\n\t\tSession.set(name, value);\n\t},\n};\n\nconst SessionProvider: FC = ({ children }) => <SessionContext.Provider children={children} value={contextValue} />;\n\nexport default SessionProvider;\n"]}
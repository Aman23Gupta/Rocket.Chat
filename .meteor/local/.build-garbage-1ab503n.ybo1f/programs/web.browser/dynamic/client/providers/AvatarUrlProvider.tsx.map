{"version":3,"sources":["meteor://ðŸ’»app/client/providers/AvatarUrlProvider.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAAgB,MAAO,CAAM,IAAb,CAAa,sCAAb,EAA2B;AAAA;AAAA;AAAA;;AAAA,CAA3B,EAA2B,CAA3B;;AAA2B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA3C,WAAO,OAAP;AAAgB,MAAO,CAAM,IAAb,CAAa,OAAb,EAA0B;AAAC;AAAA;AAAA,GAAD;;AAAC;AAAA;AAAA;;AAAD,CAA1B,EAA2B,CAA3B;AAA2B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAO3C,MAAM,iBAAiB,GAAO,QAAiB;AAAA,MAAhB;AAAE;AAAF,GAAgB;AAC9C,QAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,YAAD,CAAV,IAA4B,EAA7B,CAA3B;AACA,QAAM,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,oCAAD,CAAV,IAAoD,EAArD,CAAlC;AACA,QAAM,YAAY,GAAG,OAAO,CAC3B,OAAO;AACN,qBAAiB,EAAE,CAAC,MAA+C;AAClE,UAAI,mBAAJ,EAAyB;AACxB,eAAQ,GAAD,IAAyB,mBAAmB,CAAC,IAApB,GAA2B,OAA3B,CAAmC,MAAnC,EAA2C,EAA3C,EAA+C,OAA/C,CAAuD,YAAvD,EAAqE,GAArE,CAAhC;AACA;;AACD,UAAI,YAAJ,EAAkB;AACjB,eAAO,CAAC,GAAD,EAAc,IAAd,eAA2C,YAA3C,qBAAkE,GAAlE,SAAwE,IAAI,mBAAY,IAAZ,IAAqB,EAAjG,CAAP;AACA;;AACD,aAAO,CAAC,GAAD,EAAc,IAAd,KAAwC,MAAM,mBAAY,GAAZ,SAAkB,IAAI,mBAAY,IAAZ,IAAqB,EAA3C,EAArD;AACA,KARkB,GADb;AAUN,qBAAiB,EAAE;AAAA,UAAC;AAAE;AAAF,OAAD;AAAA,UAAY,IAAZ;;AAAA,aAClB,SAAS,CAAC,SAAV,CAAoB,IAAI,IAAI,IAAI,CAAC,CAAjC,EAAoC,aAApC;AAAoD,gBAAQ,EAAE,IAAI,CAAC;AAAnE,SAA2E,IAA3E,EADkB;AAAA;AAVb,GAAP,CAD2B,EAc3B,CAAC,mBAAD,EAAsB,YAAtB,CAd2B,CAA5B;AAiBA,sBAAO,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,YAAQ,EAAE,QAArC;AAA+C,SAAK,EAAE;AAAtD,IAAP;AACA,CArBD;;AAPA,OAAO,aAAP,CA8Be,iBA9Bf,E","file":"dynamic/client/providers/AvatarUrlProvider.tsx","sourcesContent":["import React, { useMemo, FC } from 'react';\n\nimport { roomTypes } from '../../app/utils/client';\nimport { getURL } from '../../app/utils/lib/getURL';\nimport { AvatarUrlContext } from '../contexts/AvatarUrlContext';\nimport { useSetting } from '../contexts/SettingsContext';\n\nconst AvatarUrlProvider: FC = ({ children }) => {\n\tconst cdnAvatarUrl = String(useSetting('CDN_PREFIX') || '');\n\tconst externalProviderUrl = String(useSetting('Accounts_AvatarExternalProviderUrl') || '');\n\tconst contextValue = useMemo(\n\t\t() => ({\n\t\t\tgetUserPathAvatar: ((): ((uid: string, etag?: string) => string) => {\n\t\t\t\tif (externalProviderUrl) {\n\t\t\t\t\treturn (uid: string): string => externalProviderUrl.trim().replace(/\\/+$/, '').replace('{username}', uid);\n\t\t\t\t}\n\t\t\t\tif (cdnAvatarUrl) {\n\t\t\t\t\treturn (uid: string, etag?: string): string => `${cdnAvatarUrl}/avatar/${uid}${etag ? `?etag=${etag}` : ''}`;\n\t\t\t\t}\n\t\t\t\treturn (uid: string, etag?: string): string => getURL(`/avatar/${uid}${etag ? `?etag=${etag}` : ''}`);\n\t\t\t})(),\n\t\t\tgetRoomPathAvatar: ({ type, ...room }: any): string =>\n\t\t\t\troomTypes.getConfig(type || room.t).getAvatarPath({ username: room._id, ...room }),\n\t\t}),\n\t\t[externalProviderUrl, cdnAvatarUrl],\n\t);\n\n\treturn <AvatarUrlContext.Provider children={children} value={contextValue} />;\n};\n\nexport default AvatarUrlProvider;\n"]}
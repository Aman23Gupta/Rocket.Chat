{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/hooks/useRoomList.ts"],"names":[],"mappings":"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","file":"dynamic/client/sidebar/hooks/useRoomList.ts","sourcesContent":["import { useDebouncedState } from '@rocket.chat/fuselage-hooks';\nimport { useEffect } from 'react';\n\nimport { IRoom } from '../../../definition/IRoom';\nimport { ISubscription } from '../../../definition/ISubscription';\nimport { useQueuedInquiries, useOmnichannelEnabled } from '../../contexts/OmnichannelContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useUserPreference, useUserSubscriptions } from '../../contexts/UserContext';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: IRoom[] = [];\n\nexport const useRoomList = (): Array<ISubscription> => {\n\tconst [roomList, setRoomList] = useDebouncedState<ISubscription[]>([], 150);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tlet queue: IRoom[] = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tuseEffect(() => {\n\t\tsetRoomList(() => {\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tshowOmnichannel && groups.set('Omnichannel', []);\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\t\t\treturn [...groups.entries()].flatMap(([key, group]) => [key, ...group]);\n\t\t});\n\t}, [\n\t\trooms,\n\t\tshowOmnichannel,\n\t\tinquiries.enabled,\n\t\tqueue,\n\t\tsidebarShowUnread,\n\t\tfavoritesEnabled,\n\t\tsidebarGroupByType,\n\t\tsetRoomList,\n\t\tisDiscussionEnabled,\n\t]);\n\n\treturn roomList;\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/client/contexts/OmnichannelContext.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,CAAS;AAAA,oBAAe,EAAU,MAAE,kBAA3B;AAAyC,sCAAzC;AAAyC,gEAAzC;AAAyC,4DAAzC;AAAyC,kEAAzC;AAAyC,8CAAzC;AAAyC;AAAzC,CAAT;AAAkD;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAY3C,MAAM,kBAAkB,gBAAG,aAAa,CAA0B;AACxE,WAAS,EAAE;AAAE,WAAO,EAAE;AAAX,GAD6D;AAExE,SAAO,EAAE,KAF+D;AAGxE,gBAAc,EAAE,KAHwD;AAIxE,0BAAwB,EAAE;AAJ8C,CAA1B,CAAxC;;AAOA,MAAM,cAAc,GAAG,MAA+B,UAAU,CAAC,kBAAD,CAAhE;;AACA,MAAM,2BAA2B,GAAG,MAAe,cAAc,GAAG,wBAApE;;AACA,MAAM,yBAAyB,GAAG,MAA2C,cAAc,GAAG,WAA9F;;AACA,MAAM,4BAA4B,GAAG,MAAe,cAAc,GAAG,cAArE;;AACA,MAAM,kBAAkB,GAAG,MAAiB,cAAc,GAAG,SAA7D;;AACA,MAAM,qBAAqB,GAAG,MAAe,cAAc,GAAG,OAA9D,C","file":"dynamic/client/contexts/OmnichannelContext.ts","sourcesContent":["import { createContext, useContext } from 'react';\n\nimport { OmichannelRoutingConfig, Inquiries } from '../../definition/OmichannelRoutingConfig';\n\nexport type OmnichannelContextValue = {\n\tinquiries: Inquiries;\n\tenabled: boolean;\n\tagentAvailable: boolean;\n\trouteConfig?: OmichannelRoutingConfig;\n\tshowOmnichannelQueueLink: boolean;\n};\n\nexport const OmnichannelContext = createContext<OmnichannelContextValue>({\n\tinquiries: { enabled: false },\n\tenabled: false,\n\tagentAvailable: false,\n\tshowOmnichannelQueueLink: false,\n});\n\nexport const useOmnichannel = (): OmnichannelContextValue => useContext(OmnichannelContext);\nexport const useOmnichannelShowQueueLink = (): boolean => useOmnichannel().showOmnichannelQueueLink;\nexport const useOmnichannelRouteConfig = (): OmichannelRoutingConfig | undefined => useOmnichannel().routeConfig;\nexport const useOmnichannelAgentAvailable = (): boolean => useOmnichannel().agentAvailable;\nexport const useQueuedInquiries = (): Inquiries => useOmnichannel().inquiries;\nexport const useOmnichannelEnabled = (): boolean => useOmnichannel().enabled;\n"]}
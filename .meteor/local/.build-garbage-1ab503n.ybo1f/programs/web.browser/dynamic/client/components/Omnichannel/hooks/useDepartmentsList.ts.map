{"version":3,"sources":["meteor://ðŸ’»app/client/components/Omnichannel/hooks/useDepartmentsList.ts"],"names":[],"mappings":"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","file":"dynamic/client/components/Omnichannel/hooks/useDepartmentsList.ts","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { ILivechatDepartmentRecord } from '../../../../definition/ILivechatDepartmentRecord';\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype DepartmentsListOptions = {\n\tfilter: string;\n\tdepartmentId?: string;\n\tonlyMyDepartments?: boolean;\n\thaveAll?: boolean;\n\thaveNone?: boolean;\n\texcludeDepartmentId?: string;\n};\n\nexport const useDepartmentsList = (\n\toptions: DepartmentsListOptions,\n): {\n\titemsList: RecordList<ILivechatDepartmentRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatDepartmentRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatDepartmentRecord>()), []);\n\tconst endpoint = 'livechat/department';\n\n\tconst getDepartments = useEndpoint('GET', endpoint);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { departments, total } = await getDepartments({\n\t\t\t\tonlyMyDepartments: `${!!options.onlyMyDepartments}`,\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t\texcludeDepartmentId: options.excludeDepartmentId,\n\t\t\t});\n\n\t\t\tconst items = departments\n\t\t\t\t.filter((department) => {\n\t\t\t\t\tif (options.departmentId && department._id === options.departmentId) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.map((department: any) => {\n\t\t\t\t\tdepartment._updatedAt = new Date(department._updatedAt);\n\t\t\t\t\tdepartment.label = department.name;\n\t\t\t\t\tdepartment.value = { value: department._id, label: department.name };\n\t\t\t\t\treturn department;\n\t\t\t\t});\n\n\t\t\toptions.haveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: { value: 'all', label: t('All') },\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\toptions.haveNone &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('None'),\n\t\t\t\t\tvalue: { value: '', label: t('None') },\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: options.departmentId ? total - 1 : total,\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tgetDepartments,\n\t\t\toptions.departmentId,\n\t\t\toptions.filter,\n\t\t\toptions.haveAll,\n\t\t\toptions.onlyMyDepartments,\n\t\t\toptions.haveNone,\n\t\t\toptions.excludeDepartmentId,\n\t\t\tt,\n\t\t],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}
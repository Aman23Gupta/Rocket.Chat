{"version":3,"sources":["meteor://ðŸ’»app/client/components/Message/Attachments/components/Image.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAAY,MAAI,CAAI,IAAR,CAAc,gCAAd,EAA+C;AAAA;AAAA;AAAA;;AAAA,CAA/C,EAA+C,CAA/C;;AAA+C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA3D,WAAO,IAAP,EAAc,QAAd,EAA0B,OAA1B;AAAoC,OAAO,IAAP,CAAS,OAAT,EAAe;AAAA,SAAQ;AAAA;AAAA,GAAR;;AAAQ;AAAA;AAAA,GAAR;;AAAQ;AAAA;AAAA,GAAR;;AAAQ;AAAA;AAAA;;AAAR,CAAf,EAAuB,CAAvB;AAAuB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAiB3D,MAAM,aAAa,GAAG,CACrB,aADqB,EAErB,cAFqB,EAGrB,MAHqB,KAIiB;AACtC,QAAM,UAAU,GAAG,aAAa,IAAI,MAAM,CAAC,KAAP,GAAe,CAAnB,CAAhC;AACA,QAAM,WAAW,GAAG,cAAc,GAAG,MAAM,CAAC,MAA5C;;AAEA,MAAI,UAAU,GAAG,WAAjB,EAA8B;AAC7B,UAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,aAAT,EAAwB,MAAM,CAAC,KAAP,GAAe,CAAvC,CAAd;AACA,WAAO;AAAE,WAAF;AAAS,YAAM,EAAG,KAAK,GAAG,aAAT,GAA0B;AAA3C,KAAP;AACA;;AAED,QAAM,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,cAAT,EAAyB,MAAM,CAAC,MAAhC,CAAf;AACA,SAAO;AAAE,SAAK,EAAG,MAAM,GAAG,cAAV,GAA4B,aAArC;AAAoD;AAApD,GAAP;AACA,CAfD;;AAiBA,MAAM,KAAK,GAAmB,QAA0E;AAAA,MAAzE;AAAE,cAAF;AAAc,WAAd;AAAuB,aAAS,GAAG,IAAnC;AAAyC,gBAAzC;AAAuD;AAAvD,GAAyE;AAAA,MAAV,IAAU;;AACvG,QAAM,MAAM,GAAG,uBAAuB,EAAtC;AACA,QAAM;AAAE,SAAK,GAAG,MAAM,CAAC,KAAjB;AAAwB,UAAM,GAAG,MAAM,CAAC;AAAxC,MAAmD,IAAzD;AACA,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAM;AAAE,eAAF;AAAe;AAAf,MAAiC,OAAO,CAC7C,OAAO;AACN,eAAW,EAAE,MAAY,QAAQ,CAAC,IAAD,CAD3B;AAEN,iBAAa,EAAE,MAAY,QAAQ,CAAC,KAAD;AAF7B,GAAP,CAD6C,EAK7C,EAL6C,CAA9C;AAQA,QAAM,UAAU,GAAG,aAAa,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,CAAhC;AAEA,QAAM,UAAU,GAAG,UAAU,kBAAW,UAAX,4CAA7B;;AAEA,MAAI,CAAC,SAAL,EAAgB;AACf,wBAAO,oBAAC,IAAD,eAAU,UAAV,EAA0B,MAA1B;AAAkC,UAAI,EAAE;AAAxC,OAAP;AACA;;AAED,MAAI,KAAJ,EAAW;AACV,wBAAO,oBAAC,KAAD,eAAW,UAAX;AAAuB,WAAK,EAAE;AAA9B,OAAP;AACA;;AAED,sBACC,oBAAC,QAAD;AACC,WAAO,EAAE;AADV,KAEM,UAAU,IAAK;AAAE,SAAK,EAAE;AAAE,gBAAF;AAAc,eAAS,EAAE;AAAzB;AAAT,GAFrB,EAGK,UAHL;AAIC,MAAE,EAAC;AAJJ,mBAMC;AAAK,aAAS,EAAC,cAAf;AAA8B,gBAAU,OAAO,IAAI,GAAnD;AAAwD,OAAG,EAAE;AAA7D,KAAsE,UAAtE,EAND,CADD;AAUA,CAnCD;;AAlCA,OAAO,aAAP,eAuEe,IAAI,CAAC,KAAD,CAvEnB,E","file":"dynamic/client/components/Message/Attachments/components/Image.tsx","sourcesContent":["import React, { memo, FC, useState, useMemo } from 'react';\n\nimport { Dimensions } from '../../../../../definition/IMessage/MessageAttachment/Files/Dimensions';\nimport { useAttachmentDimensions } from '../context/AttachmentContext';\nimport ImageBox from './ImageBox';\nimport Load from './Load';\nimport Retry from './Retry';\n\ntype ImageProps = {\n\tpreviewUrl?: string;\n\tdataSrc?: string;\n\tsrc: string;\n\tloadImage?: boolean;\n\tsetLoadImage: () => void;\n} & Dimensions &\n\t({ loadImage: true } | { loadImage: false; setLoadImage: () => void });\n\nconst getDimensions = (\n\toriginalWidth: Dimensions['width'],\n\toriginalHeight: Dimensions['height'],\n\tlimits: { width: number; height: number },\n): { width: number; height: number } => {\n\tconst widthRatio = originalWidth / (limits.width - 4);\n\tconst heightRatio = originalHeight / limits.height;\n\n\tif (widthRatio > heightRatio) {\n\t\tconst width = Math.min(originalWidth, limits.width - 4);\n\t\treturn { width, height: (width / originalWidth) * originalHeight };\n\t}\n\n\tconst height = Math.min(originalHeight, limits.height);\n\treturn { width: (height / originalHeight) * originalWidth, height };\n};\n\nconst Image: FC<ImageProps> = ({ previewUrl, dataSrc, loadImage = true, setLoadImage, src, ...size }) => {\n\tconst limits = useAttachmentDimensions();\n\tconst { width = limits.width, height = limits.height } = size;\n\tconst [error, setError] = useState(false);\n\n\tconst { setHasError, setHasNoError } = useMemo(\n\t\t() => ({\n\t\t\tsetHasError: (): void => setError(true),\n\t\t\tsetHasNoError: (): void => setError(false),\n\t\t}),\n\t\t[],\n\t);\n\n\tconst dimensions = getDimensions(width, height, limits);\n\n\tconst background = previewUrl && `url(${previewUrl}) center center / cover no-repeat fixed`;\n\n\tif (!loadImage) {\n\t\treturn <Load {...dimensions} {...limits} load={setLoadImage} />;\n\t}\n\n\tif (error) {\n\t\treturn <Retry {...dimensions} retry={setHasNoError} />;\n\t}\n\n\treturn (\n\t\t<ImageBox\n\t\t\tonError={setHasError}\n\t\t\t{...(previewUrl && ({ style: { background, boxSizing: 'content-box' } } as any))}\n\t\t\t{...dimensions}\n\t\t\tis='picture'\n\t\t>\n\t\t\t<img className='gallery-item' data-src={dataSrc || src} src={src} {...dimensions} />\n\t\t</ImageBox>\n\t);\n};\n\nexport default memo(Image);\n"]}
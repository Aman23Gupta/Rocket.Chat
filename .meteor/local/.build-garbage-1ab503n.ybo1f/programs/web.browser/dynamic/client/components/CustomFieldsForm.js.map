{"version":3,"sources":["meteor://ðŸ’»app/client/components/CustomFieldsForm.js"],"names":["_extends","module","link","default","v","_objectSpread","_objectWithoutProperties","export","CustomFieldsForm","TextInput","Select","Field","capitalize","React","useMemo","useEffect","useState","useSetting","useTranslation","useComponentDidUpdate","useForm","CustomTextInput","label","name","required","minLength","maxLength","setState","state","className","setCustomFieldsError","t","inputError","setInputError","verify","errors","push","length","join","oldErrors","filter","item","e","currentTarget","value","CustomSelect","options","selectError","setSelectError","mappedOptions","Object","values","map","val","CustomFieldsAssembler","formValues","formHandlers","customFields","props","entries","key","extraProps","type","jsonCustomFields","customFieldsData","setCustomFieldsData","onLoadFields","accountsCustomFieldsJson","JSON","parse","hasCustomFields","Boolean","defaultFields","reduce","data","defaultValue","handlers"],"mappings":"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","file":"dynamic/client/components/CustomFieldsForm.js","sourcesContent":["import { TextInput, Select, Field } from '@rocket.chat/fuselage';\nimport { capitalize } from '@rocket.chat/string-helpers';\nimport React, { useMemo, useEffect, useState } from 'react';\n\nimport { useSetting } from '../contexts/SettingsContext';\nimport { useTranslation } from '../contexts/TranslationContext';\nimport { useComponentDidUpdate } from '../hooks/useComponentDidUpdate';\nimport { useForm } from '../hooks/useForm';\n\nconst CustomTextInput = ({ label, name, required, minLength, maxLength, setState, state, className, setCustomFieldsError = () => [] }) => {\n\tconst t = useTranslation();\n\n\tconst [inputError, setInputError] = useState('');\n\n\tconst verify = useMemo(() => {\n\t\tconst errors = [];\n\t\tif (!state && required) {\n\t\t\terrors.push(t('The_field_is_required', label || name));\n\t\t}\n\n\t\tif (state.length < minLength && state.length > 0) {\n\t\t\terrors.push(t('Min_length_is', minLength));\n\t\t}\n\n\t\treturn errors.join(', ');\n\t}, [state, required, minLength, t, label, name]);\n\n\tuseEffect(() => {\n\t\tsetCustomFieldsError((oldErrors) => (verify ? [...oldErrors, { name }] : oldErrors.filter((item) => item.name !== name)));\n\t}, [name, setCustomFieldsError, verify]);\n\n\tuseComponentDidUpdate(() => {\n\t\tsetInputError(verify);\n\t}, [verify]);\n\n\treturn useMemo(\n\t\t() => (\n\t\t\t<Field className={className}>\n\t\t\t\t<Field.Label>\n\t\t\t\t\t{label || t(name)}\n\t\t\t\t\t{required && '*'}\n\t\t\t\t</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\terror={inputError}\n\t\t\t\t\t\tmaxLength={maxLength}\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\tonChange={(e) => setState(e.currentTarget.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Field.Row>\n\t\t\t\t<Field.Error>{inputError}</Field.Error>\n\t\t\t</Field>\n\t\t),\n\t\t[className, label, t, name, required, inputError, maxLength, state, setState],\n\t);\n};\n\nconst CustomSelect = ({ label, name, required, options = {}, setState, state, className, setCustomFieldsError = () => [] }) => {\n\tconst t = useTranslation();\n\tconst [selectError, setSelectError] = useState('');\n\n\tconst mappedOptions = useMemo(() => Object.values(options).map((value) => [value, value]), [options]);\n\tconst verify = useMemo(\n\t\t() => (!state.length && required ? t('The_field_is_required', label || name) : ''),\n\t\t[name, label, required, state.length, t],\n\t);\n\n\tuseEffect(() => {\n\t\tsetCustomFieldsError((oldErrors) => (verify ? [...oldErrors, { name }] : oldErrors.filter((item) => item.name !== name)));\n\t}, [name, setCustomFieldsError, verify]);\n\n\tuseComponentDidUpdate(() => {\n\t\tsetSelectError(verify);\n\t}, [verify]);\n\n\treturn useMemo(\n\t\t() => (\n\t\t\t<Field className={className}>\n\t\t\t\t<Field.Label>\n\t\t\t\t\t{label || t(name)}\n\t\t\t\t\t{required && '*'}\n\t\t\t\t</Field.Label>\n\t\t\t\t<Field.Row>\n\t\t\t\t\t<Select name={name} error={selectError} flexGrow={1} value={state} options={mappedOptions} onChange={(val) => setState(val)} />\n\t\t\t\t</Field.Row>\n\t\t\t\t<Field.Error>{selectError}</Field.Error>\n\t\t\t</Field>\n\t\t),\n\t\t[className, label, t, name, required, selectError, state, mappedOptions, setState],\n\t);\n};\n\nconst CustomFieldsAssembler = ({ formValues, formHandlers, customFields, ...props }) =>\n\tObject.entries(customFields).map(([key, value]) => {\n\t\tconst extraProps = {\n\t\t\tkey,\n\t\t\tname: key,\n\t\t\tsetState: formHandlers[`handle${capitalize(key)}`],\n\t\t\tstate: formValues[key],\n\t\t\t...value,\n\t\t};\n\n\t\tif (value.type === 'select') {\n\t\t\treturn <CustomSelect {...extraProps} {...props} />;\n\t\t}\n\n\t\tif (value.type === 'text') {\n\t\t\treturn <CustomTextInput {...extraProps} {...props} />;\n\t\t}\n\n\t\treturn null;\n\t});\n\nexport default function CustomFieldsForm({ jsonCustomFields, customFieldsData, setCustomFieldsData, onLoadFields = () => {}, ...props }) {\n\tconst accountsCustomFieldsJson = useSetting('Accounts_CustomFields');\n\n\tconst [customFields] = useState(() => {\n\t\ttry {\n\t\t\treturn jsonCustomFields || JSON.parse(accountsCustomFieldsJson || '{}');\n\t\t} catch {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tconst hasCustomFields = Boolean(Object.values(customFields).length);\n\tconst defaultFields = useMemo(\n\t\t() =>\n\t\t\tObject.entries(customFields).reduce((data, [key, value]) => {\n\t\t\t\tdata[key] = value.defaultValue ?? '';\n\t\t\t\treturn data;\n\t\t\t}, {}),\n\t\t[customFields],\n\t);\n\n\tconst { values, handlers } = useForm({ ...defaultFields, ...customFieldsData });\n\n\tuseEffect(() => {\n\t\tonLoadFields(hasCustomFields);\n\t\tif (hasCustomFields) {\n\t\t\tsetCustomFieldsData(values);\n\t\t}\n\t}, [hasCustomFields, onLoadFields, setCustomFieldsData, values]);\n\n\tif (!hasCustomFields) {\n\t\treturn null;\n\t}\n\n\treturn <CustomFieldsAssembler formValues={values} formHandlers={handlers} customFields={customFields} {...props} />;\n}\n"]}
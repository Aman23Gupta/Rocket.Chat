{"version":3,"sources":["meteor://ðŸ’»app/client/components/Message/Body/Inline.tsx"],"names":[],"mappings":";;;;;;;;AACA;AAAO,MAAa,KAAb,CAAmB,OAAnB,EAA2B;AAAA;AAAA;AAAA;;AAAA,CAA3B,EAA2B,CAA3B;AAA2B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAalC,MAAM,MAAM,GAAmE;AAAA,MAAC;AAAE,SAAK,GAAG,EAAV;AAAc,YAAQ,GAAG;AAAzB,GAAD;AAAA,sBAC9E,0CACE,KAAK,CAAC,GAAN,CAAU,CAAC,KAAD,EAAQ,GAAR,KAAe;AACzB,YAAQ,KAAK,CAAC,IAAd;AACC,WAAK,OAAL;AACC,4BAAO,oBAAC,KAAD;AAAO,aAAG,EAAE,GAAZ;AAAiB,eAAK,EAAE,KAAK,CAAC;AAA9B,UAAP;;AACD,WAAK,YAAL;AACC,eAAO,KAAK,CAAC,KAAb;;AACD,WAAK,MAAL;AACC,4BAAO,oBAAC,IAAD;AAAM,aAAG,EAAE,GAAX;AAAgB,eAAK,EAAE,KAAK,CAAC;AAA7B,UAAP;;AACD,WAAK,QAAL;AACC,4BAAO,oBAAC,MAAD;AAAQ,aAAG,EAAE,GAAb;AAAkB,eAAK,EAAE,KAAK,CAAC;AAA/B,UAAP;;AACD,WAAK,QAAL;AACC,4BAAO,oBAAC,MAAD;AAAQ,aAAG,EAAE,GAAb;AAAkB,eAAK,EAAE,KAAK,CAAC;AAA/B,UAAP;;AACD,WAAK,MAAL;AACC,4BAAO,oBAAC,IAAD;AAAM,aAAG,EAAE,GAAX;AAAgB,eAAK,EAAE,KAAK,CAAC;AAA7B,UAAP;;AACD,WAAK,cAAL;AACC,4BAAO,oBAAC,OAAD;AAAS,aAAG,EAAE,GAAd;AAAmB,eAAK,EAAE,KAAK,CAAC,KAAhC;AAAuC,kBAAQ,EAAE;AAAjD,UAAP;;AACD,WAAK,OAAL;AACC,4BAAO,oBAAC,KAAD;AAAO,aAAG,EAAE,GAAZ;AAAiB,qBAAW,aAAM,KAAK,CAAC,KAAN,CAAY,KAAlB;AAA5B,UAAP;;AACD,WAAK,iBAAL;AACC;AACA,4BAAO,oBAAC,KAAD;AAAO,aAAG,EAAE,GAAZ;AAAiB,eAAK,EAAE,KAAK,CAAC;AAA9B,UAAP;;AACD,WAAK,aAAL;AACC,4BAAO,oBAAC,UAAD;AAAY,aAAG,EAAE,GAAjB;AAAsB,eAAK,EAAE,KAAK,CAAC;AAAnC,UAAP;;AACD;AACC,eAAO,IAAP;AAvBF;AAyBA,GA1BA,CADF,CAD8E;AAAA,CAA/E;;AAbA,OAAO,aAAP,CA6Ce,MA7Cf,E","file":"dynamic/client/components/Message/Body/Inline.tsx","sourcesContent":["import { Paragraph as ASTParagraph } from '@rocket.chat/message-parser';\nimport React, { FC } from 'react';\n\nimport Emoji from '../../Emoji';\nimport Bold from './Bold';\nimport Image from './Image';\nimport InlineCode from './InlineCode';\nimport Italic from './Italic';\nimport Link from './Link';\nimport Mention from './Mention';\nimport Plain from './Plain';\nimport Strike from './Strike';\nimport { UserMention } from './definitions/UserMention';\n\nconst Inline: FC<{ value: ASTParagraph['value']; mentions?: UserMention[] }> = ({ value = [], mentions = [] }) => (\n\t<>\n\t\t{value.map((block, idx) => {\n\t\t\tswitch (block.type) {\n\t\t\t\tcase 'IMAGE':\n\t\t\t\t\treturn <Image key={idx} value={block.value} />;\n\t\t\t\tcase 'PLAIN_TEXT':\n\t\t\t\t\treturn block.value;\n\t\t\t\tcase 'BOLD':\n\t\t\t\t\treturn <Bold key={idx} value={block.value} />;\n\t\t\t\tcase 'STRIKE':\n\t\t\t\t\treturn <Strike key={idx} value={block.value} />;\n\t\t\t\tcase 'ITALIC':\n\t\t\t\t\treturn <Italic key={idx} value={block.value} />;\n\t\t\t\tcase 'LINK':\n\t\t\t\t\treturn <Link key={idx} value={block.value} />;\n\t\t\t\tcase 'MENTION_USER':\n\t\t\t\t\treturn <Mention key={idx} value={block.value} mentions={mentions} />;\n\t\t\t\tcase 'EMOJI':\n\t\t\t\t\treturn <Emoji key={idx} emojiHandle={`:${block.value.value}:`} />;\n\t\t\t\tcase 'MENTION_CHANNEL':\n\t\t\t\t\t// case 'COLOR':\n\t\t\t\t\treturn <Plain key={idx} value={block.value} />;\n\t\t\t\tcase 'INLINE_CODE':\n\t\t\t\t\treturn <InlineCode key={idx} value={block.value} />;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t})}\n\t</>\n);\n\nexport default Inline;\n"]}
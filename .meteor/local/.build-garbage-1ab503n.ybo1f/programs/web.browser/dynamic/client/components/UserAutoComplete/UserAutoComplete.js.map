{"version":3,"sources":["meteor://ðŸ’»app/client/components/UserAutoComplete/UserAutoComplete.js"],"names":["_extends","module","link","default","v","_objectWithoutProperties","AutoComplete","Option","Box","Chip","useDebouncedValue","React","memo","useMemo","useState","useEndpointData","UserAvatar","Avatar","query","term","conditions","selector","JSON","stringify","UserAutoComplete","props","filter","setFilter","debouncedFilter","value","data","options","items","map","user","username","label","name","onChange","exportDefault"],"mappings":"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","file":"dynamic/client/components/UserAutoComplete/UserAutoComplete.js","sourcesContent":["import { AutoComplete, Option, Box, Chip } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport React, { memo, useMemo, useState } from 'react';\n\nimport { useEndpointData } from '../../hooks/useEndpointData';\nimport UserAvatar from '../avatar/UserAvatar';\nimport Avatar from './Avatar';\n\nconst query = (term = '', conditions = {}) => ({ selector: JSON.stringify({ term, conditions }) });\n\nconst UserAutoComplete = (props) => {\n\tconst { conditions = {} } = props;\n\tconst [filter, setFilter] = useState('');\n\tconst debouncedFilter = useDebouncedValue(filter, 1000);\n\tconst { value: data } = useEndpointData(\n\t\t'users.autocomplete',\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tuseMemo(() => query(debouncedFilter, conditions), [filter]),\n\t);\n\n\tconst options = useMemo(() => (data && data.items.map((user) => ({ value: user.username, label: user.name }))) || [], [data]);\n\n\treturn (\n\t\t<AutoComplete\n\t\t\t{...props}\n\t\t\tfilter={filter}\n\t\t\tsetFilter={setFilter}\n\t\t\trenderSelected={({ value, label }) => {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Chip height='x20' value={value} onClick={() => props.onChange()} mie='x4'>\n\t\t\t\t\t\t<UserAvatar size='x20' username={value} />\n\t\t\t\t\t\t<Box verticalAlign='middle' is='span' margin='none' mi='x4'>\n\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Chip>\n\t\t\t\t);\n\t\t\t}}\n\t\t\trenderItem={({ value, ...props }) => <Option key={value} {...props} avatar={<Avatar value={value} />} />}\n\t\t\toptions={options}\n\t\t/>\n\t);\n};\n\nexport default memo(UserAutoComplete);\n"]}
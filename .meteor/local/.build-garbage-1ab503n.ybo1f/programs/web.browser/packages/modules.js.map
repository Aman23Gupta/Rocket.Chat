{"version":3,"sources":["meteor://ðŸ’»app/../src/Enum.js","meteor://ðŸ’»app/../src/Utility.js","meteor://ðŸ’»app/../src/Tokenizer.js","meteor://ðŸ’»app/../src/Parser.js","meteor://ðŸ’»app/../src/Prefixer.js","meteor://ðŸ’»app/../src/Serializer.js","meteor://ðŸ’»app/../src/Middleware.js"],"names":["RULESET","DECLARATION","CHARSET","VIEWPORT","SUPPORTS","KEYFRAMES","Math","from","String","fromCharCode","assign","hash","value","length","charat","trim","match","pattern","exec","replacement","replace","indexof","search","indexOf","index","charCodeAt","substr","end","begin","array","push","combine","callback","map","join","column","root","props","parent","type","children","line","return","MS","MOZ","WEBKIT","COMMENT","PAGE","MEDIA","IMPORT","DOCUMENT","NAMESPACE","FONT_FACE","COUNTER_STYLE","FONT_FEATURE_VALUES","abs","Object","slice","strlen","sizeof","append","position","character","characters","node","copy","char","prev","next","peek","caret","token","alloc","dealloc","delimit","delimiter","tokenize","tokenizer","whitespace","identifier","escaping","count","commenter","compile","parse","rule","rules","rulesets","pseudo","points","declarations","offset","atrule","property","previous","variable","scanning","ampersand","reference","comment","declaration","ruleset","post","size","i","j","k","x","y","z","prefix","serialize","output","stringify","element","middleware","collection","rulesheet","prefixer","namespace"],"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","file":"/packages/modules.js","sourcesContent":["export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3)\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && characters.charCodeAt(length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import {MS, MOZ, WEBKIT} from './Enum.js'\nimport {hash, charat, strlen, indexof, replace} from './Utility.js'\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {string}\n */\nexport function prefix (value, length) {\n\tswitch (hash(value, length)) {\n\t\t// color-adjust\n\t\tcase 5103:\n\t\t\treturn WEBKIT + 'print-' + value + value\n\t\t// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\t\tcase 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:\n\t\t// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\t\tcase 5572: case 6356: case 5844: case 3191: case 6645: case 3005:\n\t\t// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\t\tcase 6391: case 5879: case 5623: case 6135: case 4599: case 4855:\n\t\t// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\t\tcase 4215: case 6389: case 5109: case 5365: case 5621: case 3829:\n\t\t\treturn WEBKIT + value + value\n\t\t// appearance, user-select, transform, hyphens, text-size-adjust\n\t\tcase 5349: case 4246: case 4810: case 6968: case 2756:\n\t\t\treturn WEBKIT + value + MOZ + value + MS + value + value\n\t\t// flex, flex-direction\n\t\tcase 6828: case 4268:\n\t\t\treturn WEBKIT + value + MS + value + value\n\t\t// order\n\t\tcase 6165:\n\t\t\treturn WEBKIT + value + MS + 'flex-' + value + value\n\t\t// align-items\n\t\tcase 5187:\n\t\t\treturn WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value\n\t\t// align-self\n\t\tcase 5443:\n\t\t\treturn WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value\n\t\t// align-content\n\t\tcase 4675:\n\t\t\treturn WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value\n\t\t// flex-shrink\n\t\tcase 5548:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value\n\t\t// flex-basis\n\t\tcase 5292:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value\n\t\t// flex-grow\n\t\tcase 6060:\n\t\t\treturn WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value\n\t\t// transition\n\t\tcase 4554:\n\t\t\treturn WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value\n\t\t// cursor\n\t\tcase 6187:\n\t\t\treturn replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value\n\t\t// background, background-image\n\t\tcase 5495: case 3959:\n\t\t\treturn replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1')\n\t\t// justify-content\n\t\tcase 4968:\n\t\t\treturn replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value\n\t\t// (margin|padding)-inline-(start|end)\n\t\tcase 4095: case 3583: case 4068: case 2532:\n\t\t\treturn replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value\n\t\t// (min|max)?(width|height|inline-size|block-size)\n\t\tcase 8116: case 7059: case 5753: case 5535:\n\t\tcase 5445: case 5701: case 4933: case 4677:\n\t\tcase 5533: case 5789: case 5021: case 4765:\n\t\t\t// stretch, max-content, min-content, fill-available\n\t\t\tif (strlen(value) - 1 - length > 6)\n\t\t\t\tswitch (charat(value, length + 1)) {\n\t\t\t\t\t// (m)ax-content, (m)in-content\n\t\t\t\t\tcase 109:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (charat(value, length + 4) !== 45)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t// (f)ill-available, (f)it-content\n\t\t\t\t\tcase 102:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value\n\t\t\t\t\t// (s)tretch\n\t\t\t\t\tcase 115:\n\t\t\t\t\t\treturn ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value\n\t\t\t\t}\n\t\t\tbreak\n\t\t// position: sticky\n\t\tcase 4949:\n\t\t\t// (s)ticky?\n\t\t\tif (charat(value, length + 1) !== 115)\n\t\t\t\tbreak\n\t\t// display: (flex|inline-flex)\n\t\tcase 6444:\n\t\t\tswitch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n\t\t\t\t// stic(k)y\n\t\t\t\tcase 107:\n\t\t\t\t\treturn replace(value, ':', ':' + WEBKIT) + value\n\t\t\t\t// (inline-)?fl(e)x\n\t\t\t\tcase 101:\n\t\t\t\t\treturn replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value\n\t\t\t}\n\t\t\tbreak\n\t\t// writing-mode\n\t\tcase 5936:\n\t\t\tswitch (charat(value, length + 11)) {\n\t\t\t\t// vertical-l(r)\n\t\t\t\tcase 114:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value\n\t\t\t\t// vertical-r(l)\n\t\t\t\tcase 108:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value\n\t\t\t\t// horizontal(-)tb\n\t\t\t\tcase 45:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value\n\t\t\t}\n\n\t\t\treturn WEBKIT + value + MS + value + value\n\t}\n\n\treturn value\n}\n","import {IMPORT, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length)\n\t\t\t\t\tbreak\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n"]}
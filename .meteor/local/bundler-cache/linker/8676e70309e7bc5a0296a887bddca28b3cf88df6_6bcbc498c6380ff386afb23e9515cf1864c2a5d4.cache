[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar _ = Package.underscore._;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar Mongo = Package.mongo.Mongo;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"jalik:ufs\":{\"ufs.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs.js                                                                                     //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n!function (module1) {\n  var _typeof;\n\n  module1.link(\"@babel/runtime/helpers/typeof\", {\n    default: function (v) {\n      _typeof = v;\n    }\n  }, 0);\n  module1.export({\n    UploadFS: function () {\n      return UploadFS;\n    }\n  });\n  var Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor: function (v) {\n      Meteor = v;\n    }\n  }, 0);\n  var Random;\n  module1.link(\"meteor/random\", {\n    Random: function (v) {\n      Random = v;\n    }\n  }, 1);\n  var Config;\n  module1.link(\"./ufs-config\", {\n    Config: function (v) {\n      Config = v;\n    }\n  }, 2);\n  var Filter;\n  module1.link(\"./ufs-filter\", {\n    Filter: function (v) {\n      Filter = v;\n    }\n  }, 3);\n  var MIME;\n  module1.link(\"./ufs-mime\", {\n    MIME: function (v) {\n      MIME = v;\n    }\n  }, 4);\n  var Store;\n  module1.link(\"./ufs-store\", {\n    Store: function (v) {\n      Store = v;\n    }\n  }, 5);\n  var StorePermissions;\n  module1.link(\"./ufs-store-permissions\", {\n    StorePermissions: function (v) {\n      StorePermissions = v;\n    }\n  }, 6);\n  var Tokens;\n  module1.link(\"./ufs-tokens\", {\n    Tokens: function (v) {\n      Tokens = v;\n    }\n  }, 7);\n  var Uploader;\n  module1.link(\"./ufs-uploader\", {\n    Uploader: function (v) {\n      Uploader = v;\n    }\n  }, 8);\n  var stores = {};\n  var UploadFS = {\n    /**\n     * Contains all stores\n     */\n    store: {},\n\n    /**\n     * Collection of tokens\n     */\n    tokens: Tokens,\n\n    /**\n     * Adds the \"etag\" attribute to files\n     * @param where\n     */\n    addETagAttributeToFiles: function (where) {\n      var _this = this;\n\n      this.getStores().forEach(function (store) {\n        var files = store.getCollection(); // By default update only files with no path set\n\n        files.find(where || {\n          etag: null\n        }, {\n          fields: {\n            _id: 1\n          }\n        }).forEach(function (file) {\n          files.direct.update(file._id, {\n            $set: {\n              etag: _this.generateEtag()\n            }\n          });\n        });\n      });\n    },\n\n    /**\n     * Adds the MIME type for an extension\n     * @param extension\n     * @param mime\n     */\n    addMimeType: function (extension, mime) {\n      MIME[extension.toLowerCase()] = mime;\n    },\n\n    /**\n     * Adds the \"path\" attribute to files\n     * @param where\n     */\n    addPathAttributeToFiles: function (where) {\n      this.getStores().forEach(function (store) {\n        var files = store.getCollection(); // By default update only files with no path set\n\n        files.find(where || {\n          path: null\n        }, {\n          fields: {\n            _id: 1\n          }\n        }).forEach(function (file) {\n          files.direct.update(file._id, {\n            $set: {\n              path: store.getFileRelativeURL(file._id)\n            }\n          });\n        });\n      });\n    },\n\n    /**\n     * Registers the store\n     * @param store\n     */\n    addStore: function (store) {\n      if (!(store instanceof Store)) {\n        throw new TypeError('ufs: store is not an instance of UploadFS.Store.');\n      }\n\n      stores[store.getName()] = store;\n    },\n\n    /**\n     * Generates a unique ETag\n     * @return {string}\n     */\n    generateEtag: function () {\n      return Random.id();\n    },\n\n    /**\n     * Returns the MIME type of the extension\n     * @param extension\n     * @returns {*}\n     */\n    getMimeType: function (extension) {\n      extension = extension.toLowerCase();\n      return MIME[extension];\n    },\n\n    /**\n     * Returns all MIME types\n     */\n    getMimeTypes: function () {\n      return MIME;\n    },\n\n    /**\n     * Returns the store by its name\n     * @param name\n     * @return {UploadFS.Store}\n     */\n    getStore: function (name) {\n      return stores[name];\n    },\n\n    /**\n     * Returns all stores\n     * @return {object}\n     */\n    getStores: function () {\n      return stores;\n    },\n\n    /**\n     * Returns the temporary file path\n     * @param fileId\n     * @return {string}\n     */\n    getTempFilePath: function (fileId) {\n      return this.config.tmpDir + \"/\" + fileId;\n    },\n\n    /**\n     * Imports a file from a URL\n     * @param url\n     * @param file\n     * @param store\n     * @param callback\n     */\n    importFromURL: function (url, file, store, callback) {\n      if (typeof store === 'string') {\n        Meteor.call('ufsImportURL', url, file, store, callback);\n      } else if (_typeof(store) === 'object') {\n        store.importFromURL(url, file, callback);\n      }\n    },\n\n    /**\n     * Returns file and data as ArrayBuffer for each files in the event\n     * @deprecated\n     * @param event\n     * @param callback\n     */\n    readAsArrayBuffer: function () {\n      console.error('UploadFS.readAsArrayBuffer is deprecated, see https://github.com/jalik/jalik-ufs#uploading-from-a-file');\n    },\n\n    /**\n     * Opens a dialog to select a single file\n     * @param callback\n     */\n    selectFile: function (callback) {\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.multiple = false;\n\n      input.onchange = function (ev) {\n        var files = ev.target.files;\n        callback.call(UploadFS, files[0]);\n      }; // Fix for iOS/Safari\n\n\n      var div = document.createElement('div');\n      div.className = 'ufs-file-selector';\n      div.style = 'display:none; height:0; width:0; overflow: hidden;';\n      div.appendChild(input);\n      document.body.appendChild(div); // Trigger file selection\n\n      input.click();\n    },\n\n    /**\n     * Opens a dialog to select multiple files\n     * @param callback\n     */\n    selectFiles: function (callback) {\n      var input = document.createElement('input');\n      input.type = 'file';\n      input.multiple = true;\n\n      input.onchange = function (ev) {\n        var files = ev.target.files;\n\n        for (var i = 0; i < files.length; i += 1) {\n          callback.call(UploadFS, files[i]);\n        }\n      }; // Fix for iOS/Safari\n\n\n      var div = document.createElement('div');\n      div.className = 'ufs-file-selector';\n      div.style = 'display:none; height:0; width:0; overflow: hidden;';\n      div.appendChild(input);\n      document.body.appendChild(div); // Trigger file selection\n\n      input.click();\n    }\n  };\n\n  if (Meteor.isServer) {\n    require('./ufs-methods');\n\n    require('./ufs-server');\n  }\n  /**\n   * UploadFS Configuration\n   * @type {Config}\n   */\n\n\n  UploadFS.config = new Config(); // Add classes to global namespace\n\n  UploadFS.Config = Config;\n  UploadFS.Filter = Filter;\n  UploadFS.Store = Store;\n  UploadFS.StorePermissions = StorePermissions;\n  UploadFS.Uploader = Uploader;\n\n  if (Meteor.isServer) {\n    // Expose the module globally\n    if (typeof global !== 'undefined') {\n      global.UploadFS = UploadFS;\n    }\n  } else if (Meteor.isClient) {\n    // Expose the module globally\n    if (typeof window !== 'undefined') {\n      window.UploadFS = UploadFS;\n    }\n  }\n}.call(this, module);\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-config.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-config.js                                                                              //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  Config: function () {\n    return Config;\n  }\n});\n\nvar _;\n\nmodule.link(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 0);\nvar StorePermissions;\nmodule.link(\"./ufs-store-permissions\", {\n  StorePermissions: function (v) {\n    StorePermissions = v;\n  }\n}, 1);\n\nvar Config = function () {\n  function Config(options) {\n    // Default options\n    options = _.extend({\n      defaultStorePermissions: null,\n      https: false,\n      simulateReadDelay: 0,\n      simulateUploadSpeed: 0,\n      simulateWriteDelay: 0,\n      storesPath: 'ufs',\n      tmpDir: '/tmp/ufs',\n      tmpDirPermissions: '0700'\n    }, options); // Check options\n\n    if (options.defaultStorePermissions && !(options.defaultStorePermissions instanceof StorePermissions)) {\n      throw new TypeError('Config: defaultStorePermissions is not an instance of StorePermissions');\n    }\n\n    if (typeof options.https !== 'boolean') {\n      throw new TypeError('Config: https is not a function');\n    }\n\n    if (typeof options.simulateReadDelay !== 'number') {\n      throw new TypeError('Config: simulateReadDelay is not a number');\n    }\n\n    if (typeof options.simulateUploadSpeed !== 'number') {\n      throw new TypeError('Config: simulateUploadSpeed is not a number');\n    }\n\n    if (typeof options.simulateWriteDelay !== 'number') {\n      throw new TypeError('Config: simulateWriteDelay is not a number');\n    }\n\n    if (typeof options.storesPath !== 'string') {\n      throw new TypeError('Config: storesPath is not a string');\n    }\n\n    if (typeof options.tmpDir !== 'string') {\n      throw new TypeError('Config: tmpDir is not a string');\n    }\n\n    if (typeof options.tmpDirPermissions !== 'string') {\n      throw new TypeError('Config: tmpDirPermissions is not a string');\n    }\n    /**\n     * Default store permissions\n     * @type {UploadFS.StorePermissions}\n     */\n\n\n    this.defaultStorePermissions = options.defaultStorePermissions;\n    /**\n     * Use or not secured protocol in URLS\n     * @type {boolean}\n     */\n\n    this.https = options.https;\n    /**\n     * The simulation read delay\n     * @type {Number}\n     */\n\n    this.simulateReadDelay = parseInt(options.simulateReadDelay);\n    /**\n     * The simulation upload speed\n     * @type {Number}\n     */\n\n    this.simulateUploadSpeed = parseInt(options.simulateUploadSpeed);\n    /**\n     * The simulation write delay\n     * @type {Number}\n     */\n\n    this.simulateWriteDelay = parseInt(options.simulateWriteDelay);\n    /**\n     * The URL root path of stores\n     * @type {string}\n     */\n\n    this.storesPath = options.storesPath;\n    /**\n     * The temporary directory of uploading files\n     * @type {string}\n     */\n\n    this.tmpDir = options.tmpDir;\n    /**\n     * The permissions of the temporary directory\n     * @type {string}\n     */\n\n    this.tmpDirPermissions = options.tmpDirPermissions;\n  }\n\n  return Config;\n}();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-filter.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-filter.js                                                                              //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nvar _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nmodule.export({\n  Filter: function () {\n    return Filter;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\n\nvar _;\n\nmodule.link(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 1);\n\nvar Filter = /*#__PURE__*/function () {\n  function Filter(options) {\n    var self = this; // Default options\n\n    options = _.extend({\n      contentTypes: null,\n      extensions: null,\n      minSize: 1,\n      maxSize: 0,\n      invalidFileError: function () {\n        return new Meteor.Error('invalid-file', 'File is not valid');\n      },\n      fileTooSmallError: function (fileSize, minFileSize) {\n        return new Meteor.Error('file-too-small', \"File size (size = \" + fileSize + \") is too small (min = \" + minFileSize + \")\");\n      },\n      fileTooLargeError: function (fileSize, maxFileSize) {\n        return new Meteor.Error('file-too-large', \"File size (size = \" + fileSize + \") is too large (max = \" + maxFileSize + \")\");\n      },\n      invalidFileExtension: function (fileExtension, allowedExtensions) {\n        return new Meteor.Error('invalid-file-extension', \"File extension \\\"\" + fileExtension + \"\\\" is not accepted (\" + allowedExtensions + \")\");\n      },\n      invalidFileType: function (fileType, allowedContentTypes) {\n        return new Meteor.Error('invalid-file-type', \"File type \\\"\" + fileType + \"\\\" is not accepted (\" + allowedContentTypes + \")\");\n      },\n      onCheck: this.onCheck\n    }, options); // Check options\n\n    if (options.contentTypes && !(options.contentTypes instanceof Array)) {\n      throw new TypeError('Filter: contentTypes is not an Array');\n    }\n\n    if (options.extensions && !(options.extensions instanceof Array)) {\n      throw new TypeError('Filter: extensions is not an Array');\n    }\n\n    if (typeof options.minSize !== 'number') {\n      throw new TypeError('Filter: minSize is not a number');\n    }\n\n    if (typeof options.maxSize !== 'number') {\n      throw new TypeError('Filter: maxSize is not a number');\n    }\n\n    if (options.onCheck && typeof options.onCheck !== 'function') {\n      throw new TypeError('Filter: onCheck is not a function');\n    } // Public attributes\n\n\n    self.options = options;\n    ['onCheck'].forEach(function (method) {\n      if (typeof options[method] === 'function') {\n        self[method] = options[method];\n      }\n    });\n  }\n  /**\n   * Checks the file\n   * @param file\n   */\n\n\n  var _proto = Filter.prototype;\n\n  _proto.check = function () {\n    function check(file) {\n      var error = null;\n\n      if (_typeof(file) !== 'object' || !file) {\n        error = this.options.invalidFileError();\n      } // Check size\n\n\n      var fileSize = file.size;\n      var minSize = this.getMinSize();\n\n      if (fileSize <= 0 || fileSize < minSize) {\n        error = this.options.fileTooSmallError(fileSize, minSize);\n      }\n\n      var maxSize = this.getMaxSize();\n\n      if (maxSize > 0 && fileSize > maxSize) {\n        error = this.options.fileTooLargeError(fileSize, maxSize);\n      } // Check extension\n\n\n      var allowedExtensions = this.getExtensions();\n      var fileExtension = file.extension;\n\n      if (allowedExtensions && !allowedExtensions.includes(fileExtension)) {\n        error = this.options.invalidFileExtension(fileExtension, allowedExtensions);\n      } // Check content type\n\n\n      var allowedContentTypes = this.getContentTypes();\n      var fileTypes = file.type;\n\n      if (allowedContentTypes && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\n        error = this.options.invalidFileType(fileTypes, allowedContentTypes);\n      } // Apply custom check\n\n\n      if (typeof this.onCheck === 'function' && !this.onCheck(file)) {\n        error = new Meteor.Error('invalid-file', 'File does not match filter');\n      }\n\n      if (error) {\n        throw error;\n      }\n    }\n\n    return check;\n  }()\n  /**\n   * Returns the allowed content types\n   * @return {Array}\n   */\n  ;\n\n  _proto.getContentTypes = function () {\n    function getContentTypes() {\n      return this.options.contentTypes;\n    }\n\n    return getContentTypes;\n  }()\n  /**\n   * Returns the allowed extensions\n   * @return {Array}\n   */\n  ;\n\n  _proto.getExtensions = function () {\n    function getExtensions() {\n      return this.options.extensions;\n    }\n\n    return getExtensions;\n  }()\n  /**\n   * Returns the maximum file size\n   * @return {Number}\n   */\n  ;\n\n  _proto.getMaxSize = function () {\n    function getMaxSize() {\n      return this.options.maxSize;\n    }\n\n    return getMaxSize;\n  }()\n  /**\n   * Returns the minimum file size\n   * @return {Number}\n   */\n  ;\n\n  _proto.getMinSize = function () {\n    function getMinSize() {\n      return this.options.minSize;\n    }\n\n    return getMinSize;\n  }()\n  /**\n   * Checks if content type is in the given list\n   * @param type\n   * @param list\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isContentTypeInList = function () {\n    function isContentTypeInList(type, list) {\n      if (typeof type === 'string' && list instanceof Array) {\n        if (list.includes(type)) {\n          return true;\n        }\n\n        var wildCardGlob = '/*';\n        var wildcards = list.filter(function (item) {\n          return item.indexOf(wildCardGlob) > 0;\n        });\n\n        if (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    return isContentTypeInList;\n  }()\n  /**\n   * Checks if the file matches filter\n   * @param file\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isValid = function () {\n    function isValid(file) {\n      var result = true;\n\n      try {\n        this.check(file);\n      } catch (err) {\n        result = false;\n      }\n\n      return result;\n    }\n\n    return isValid;\n  }()\n  /**\n   * Executes custom checks\n   * @param file\n   * @return {boolean}\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onCheck = function () {\n    function onCheck(file) {\n      return true;\n    }\n\n    return onCheck;\n  }();\n\n  return Filter;\n}();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-methods.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-methods.js                                                                             //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nvar _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar UploadFS;\nmodule.link(\"./ufs\", {\n  UploadFS: function (v) {\n    UploadFS = v;\n  }\n}, 2);\nvar Filter;\nmodule.link(\"./ufs-filter\", {\n  Filter: function (v) {\n    Filter = v;\n  }\n}, 3);\nvar Tokens;\nmodule.link(\"./ufs-tokens\", {\n  Tokens: function (v) {\n    Tokens = v;\n  }\n}, 4);\n\nvar fs = Npm.require('fs');\n\nvar http = Npm.require('http');\n\nvar https = Npm.require('https');\n\nvar Future = Npm.require('fibers/future');\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    /**\n     * Completes the file transfer\n     * @param fileId\n     * @param storeName\n     * @param token\n     */\n    ufsComplete: function (fileId, storeName, token) {\n      check(fileId, String);\n      check(storeName, String);\n      check(token, String); // Get store\n\n      var store = UploadFS.getStore(storeName);\n\n      if (!store) {\n        throw new Meteor.Error('invalid-store', 'Store not found');\n      } // Check token\n\n\n      if (!store.checkToken(token, fileId)) {\n        throw new Meteor.Error('invalid-token', 'Token is not valid');\n      }\n\n      var fut = new Future();\n      var tmpFile = UploadFS.getTempFilePath(fileId);\n\n      var removeTempFile = function () {\n        fs.unlink(tmpFile, function (err) {\n          err && console.error(\"ufs: cannot delete temp file \\\"\" + tmpFile + \"\\\" (\" + err.message + \")\");\n        });\n      };\n\n      try {\n        // todo check if temp file exists\n        // Get file\n        var file = store.getCollection().findOne({\n          _id: fileId\n        }); // Validate file before moving to the store\n\n        store.validate(file); // Get the temp file\n\n        var rs = fs.createReadStream(tmpFile, {\n          flags: 'r',\n          encoding: null,\n          autoClose: true\n        }); // Clean upload if error occurs\n\n        rs.on('error', Meteor.bindEnvironment(function (err) {\n          console.error(err);\n          store.getCollection().remove({\n            _id: fileId\n          });\n          fut.throw(err);\n        })); // Save file in the store\n\n        store.write(rs, fileId, Meteor.bindEnvironment(function (err, file) {\n          removeTempFile();\n\n          if (err) {\n            fut.throw(err);\n          } else {\n            // File has been fully uploaded\n            // so we don't need to keep the token anymore.\n            // Also this ensure that the file cannot be modified with extra chunks later.\n            Tokens.remove({\n              fileId: fileId\n            });\n            fut.return(file);\n          }\n        })); // catch will not work if fut.wait() is outside try/catch\n\n        return fut.wait();\n      } catch (err) {\n        // If write failed, remove the file\n        store.getCollection().remove({\n          _id: fileId\n        }); // removeTempFile(); // todo remove temp file on error or try again ?\n\n        throw new Meteor.Error('ufs: cannot upload file', err);\n      }\n    },\n\n    /**\n     * Creates the file and returns the file upload token\n     * @param file\n     * @return {{fileId: string, token: *, url: *}}\n     */\n    ufsCreate: function (file) {\n      check(file, Object);\n\n      if (typeof file.name !== 'string' || !file.name.length) {\n        throw new Meteor.Error('invalid-file-name', 'file name is not valid');\n      }\n\n      if (typeof file.store !== 'string' || !file.store.length) {\n        throw new Meteor.Error('invalid-store', 'store is not valid');\n      } // Get store\n\n\n      var store = UploadFS.getStore(file.store);\n\n      if (!store) {\n        throw new Meteor.Error('invalid-store', 'Store not found');\n      } // Set default info\n\n\n      file.complete = false;\n      file.uploading = false;\n      file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase(); // Assign file MIME type based on the extension\n\n      if (file.extension && !file.type) {\n        file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\n      }\n\n      file.progress = 0;\n      file.size = parseInt(file.size) || 0;\n      file.userId = file.userId || this.userId; // Check if the file matches store filter\n\n      var filter = store.getFilter();\n\n      if (filter instanceof Filter) {\n        filter.check(file);\n      } // Create the file\n\n\n      var fileId = store.create(file);\n      var token = store.createToken(fileId);\n      var uploadUrl = store.getURL(fileId + \"?token=\" + token);\n      return {\n        fileId: fileId,\n        token: token,\n        url: uploadUrl\n      };\n    },\n\n    /**\n     * Deletes a file\n     * @param fileId\n     * @param storeName\n     * @param token\n     * @returns {*}\n     */\n    ufsDelete: function (fileId, storeName, token) {\n      check(fileId, String);\n      check(storeName, String);\n      check(token, String); // Check store\n\n      var store = UploadFS.getStore(storeName);\n\n      if (!store) {\n        throw new Meteor.Error('invalid-store', 'Store not found');\n      } // Ignore files that does not exist\n\n\n      if (store.getCollection().find({\n        _id: fileId\n      }).count() === 0) {\n        return 1;\n      } // Check token\n\n\n      if (!store.checkToken(token, fileId)) {\n        throw new Meteor.Error('invalid-token', 'Token is not valid');\n      }\n\n      return store.getCollection().remove({\n        _id: fileId\n      });\n    },\n\n    /**\n     * Imports a file from the URL\n     * @param url\n     * @param file\n     * @param storeName\n     * @return {*}\n     */\n    ufsImportURL: function (url, file, storeName) {\n      check(url, String);\n      check(file, Object);\n      check(storeName, String); // Check URL\n\n      if (typeof url !== 'string' || url.length <= 0) {\n        throw new Meteor.Error('invalid-url', 'The url is not valid');\n      } // Check file\n\n\n      if (_typeof(file) !== 'object' || file === null) {\n        throw new Meteor.Error('invalid-file', 'The file is not valid');\n      } // Check store\n\n\n      var store = UploadFS.getStore(storeName);\n\n      if (!store) {\n        throw new Meteor.Error('invalid-store', 'The store does not exist');\n      }\n\n      var parsedUrl;\n\n      try {\n        parsedUrl = new URL(url);\n      } catch (e) {\n        throw new Meteor.Error('invalid-url', 'The url is not valid');\n      }\n\n      if (['localhost', '127.0.0.1', '0.0.0.0'].includes(parsedUrl.hostname)) {\n        throw new Meteor.Error('invalid-url', 'URL cannot reference localhost');\n      } // Extract file info\n\n\n      if (!file.name) {\n        file.name = url.replace(/\\?.*$/, '').split('/').pop();\n      }\n\n      if (file.name && !file.extension) {\n        file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\n      }\n\n      if (file.extension && !file.type) {\n        // Assign file MIME type based on the extension\n        file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\n      } // Check if file is valid\n\n\n      if (store.getFilter() instanceof Filter) {\n        store.getFilter().check(file);\n      }\n\n      if (file.originalUrl) {\n        console.warn('ufs: The \"originalUrl\" attribute is automatically set when importing a file from a URL');\n      } // Add original URL\n\n\n      file.originalUrl = url; // Create the file\n\n      file.complete = false;\n      file.uploading = true;\n      file.progress = 0;\n      file._id = store.create(file);\n      var fut = new Future();\n      var proto; // Detect protocol to use\n\n      if (/http:\\/\\//i.test(url)) {\n        proto = http;\n      } else if (/https:\\/\\//i.test(url)) {\n        proto = https;\n      }\n\n      this.unblock(); // Download file\n\n      proto.get(url, Meteor.bindEnvironment(function (res) {\n        // Save the file in the store\n        store.write(res, file._id, function (err, file) {\n          if (err) {\n            fut.throw(err);\n          } else {\n            fut.return(file);\n          }\n        });\n      })).on('error', function (err) {\n        fut.throw(err);\n      });\n      return fut.wait();\n    },\n\n    /**\n     * Marks the file uploading as stopped\n     * @param fileId\n     * @param storeName\n     * @param token\n     * @returns {*}\n     */\n    ufsStop: function (fileId, storeName, token) {\n      check(fileId, String);\n      check(storeName, String);\n      check(token, String); // Check store\n\n      var store = UploadFS.getStore(storeName);\n\n      if (!store) {\n        throw new Meteor.Error('invalid-store', 'Store not found');\n      } // Check file\n\n\n      var file = store.getCollection().find({\n        _id: fileId\n      }, {\n        fields: {\n          userId: 1\n        }\n      });\n\n      if (!file) {\n        throw new Meteor.Error('invalid-file', 'File not found');\n      } // Check token\n\n\n      if (!store.checkToken(token, fileId)) {\n        throw new Meteor.Error('invalid-token', 'Token is not valid');\n      }\n\n      return store.getCollection().update({\n        _id: fileId\n      }, {\n        $set: {\n          uploading: false\n        }\n      });\n    }\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-mime.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-mime.js                                                                                //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  MIME: function () {\n    return MIME;\n  }\n});\nvar MIME = {\n  // application\n  '7z': 'application/x-7z-compressed',\n  'arc': 'application/octet-stream',\n  'ai': 'application/postscript',\n  'bin': 'application/octet-stream',\n  'bz': 'application/x-bzip',\n  'bz2': 'application/x-bzip2',\n  'eps': 'application/postscript',\n  'exe': 'application/octet-stream',\n  'gz': 'application/x-gzip',\n  'gzip': 'application/x-gzip',\n  'js': 'application/javascript',\n  'json': 'application/json',\n  'ogx': 'application/ogg',\n  'pdf': 'application/pdf',\n  'ps': 'application/postscript',\n  'psd': 'application/octet-stream',\n  'rar': 'application/x-rar-compressed',\n  'rev': 'application/x-rar-compressed',\n  'swf': 'application/x-shockwave-flash',\n  'tar': 'application/x-tar',\n  'xhtml': 'application/xhtml+xml',\n  'xml': 'application/xml',\n  'zip': 'application/zip',\n  // audio\n  'aif': 'audio/aiff',\n  'aifc': 'audio/aiff',\n  'aiff': 'audio/aiff',\n  'au': 'audio/basic',\n  'flac': 'audio/flac',\n  'midi': 'audio/midi',\n  'mp2': 'audio/mpeg',\n  'mp3': 'audio/mpeg',\n  'mpa': 'audio/mpeg',\n  'oga': 'audio/ogg',\n  'ogg': 'audio/ogg',\n  'opus': 'audio/ogg',\n  'ra': 'audio/vnd.rn-realaudio',\n  'spx': 'audio/ogg',\n  'wav': 'audio/x-wav',\n  'weba': 'audio/webm',\n  'wma': 'audio/x-ms-wma',\n  // image\n  'avs': 'image/avs-video',\n  'bmp': 'image/x-windows-bmp',\n  'gif': 'image/gif',\n  'ico': 'image/vnd.microsoft.icon',\n  'jpeg': 'image/jpeg',\n  'jpg': 'image/jpg',\n  'mjpg': 'image/x-motion-jpeg',\n  'pic': 'image/pic',\n  'png': 'image/png',\n  'svg': 'image/svg+xml',\n  'tif': 'image/tiff',\n  'tiff': 'image/tiff',\n  // text\n  'css': 'text/css',\n  'csv': 'text/csv',\n  'html': 'text/html',\n  'txt': 'text/plain',\n  // video\n  'avi': 'video/avi',\n  'dv': 'video/x-dv',\n  'flv': 'video/x-flv',\n  'mov': 'video/quicktime',\n  'mp4': 'video/mp4',\n  'mpeg': 'video/mpeg',\n  'mpg': 'video/mpg',\n  'ogv': 'video/ogg',\n  'vdo': 'video/vdo',\n  'webm': 'video/webm',\n  'wmv': 'video/x-ms-wmv',\n  // specific to vendors\n  'doc': 'application/msword',\n  'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'odb': 'application/vnd.oasis.opendocument.database',\n  'odc': 'application/vnd.oasis.opendocument.chart',\n  'odf': 'application/vnd.oasis.opendocument.formula',\n  'odg': 'application/vnd.oasis.opendocument.graphics',\n  'odi': 'application/vnd.oasis.opendocument.image',\n  'odm': 'application/vnd.oasis.opendocument.text-master',\n  'odp': 'application/vnd.oasis.opendocument.presentation',\n  'ods': 'application/vnd.oasis.opendocument.spreadsheet',\n  'odt': 'application/vnd.oasis.opendocument.text',\n  'otg': 'application/vnd.oasis.opendocument.graphics-template',\n  'otp': 'application/vnd.oasis.opendocument.presentation-template',\n  'ots': 'application/vnd.oasis.opendocument.spreadsheet-template',\n  'ott': 'application/vnd.oasis.opendocument.text-template',\n  'ppt': 'application/vnd.ms-powerpoint',\n  'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'xls': 'application/vnd.ms-excel',\n  'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-server.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-server.js                                                                              //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nvar _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp: function (v) {\n    WebApp = v;\n  }\n}, 1);\nvar SparkMD5;\nmodule.link(\"spark-md5\", {\n  \"default\": function (v) {\n    SparkMD5 = v;\n  }\n}, 2);\nvar UploadFS;\nmodule.link(\"./ufs\", {\n  UploadFS: function (v) {\n    UploadFS = v;\n  }\n}, 3);\n\nif (Meteor.isServer) {\n  var domain = Npm.require('domain');\n\n  var fs = Npm.require('fs'); // eslint-disable-next-line no-unused-vars\n\n\n  var http = Npm.require('http'); // eslint-disable-next-line no-unused-vars\n\n\n  var https = Npm.require('https');\n\n  var mkdirp = Npm.require('mkdirp');\n\n  var stream = Npm.require('stream');\n\n  var URL = Npm.require('url');\n\n  var zlib = Npm.require('zlib');\n\n  Meteor.startup(function () {\n    var path = UploadFS.config.tmpDir;\n    var mode = UploadFS.config.tmpDirPermissions;\n    fs.stat(path, function (err) {\n      if (err) {\n        // Create the temp directory\n        mkdirp(path, {\n          mode: mode\n        }, function (err) {\n          if (err) {\n            console.error(\"ufs: cannot create temp directory at \\\"\" + path + \"\\\" (\" + err.message + \")\");\n          } else {\n            console.log(\"ufs: temp directory created at \\\"\" + path + \"\\\"\");\n          }\n        });\n      } else {\n        // Set directory permissions\n        fs.chmod(path, mode, function (err) {\n          err && console.error(\"ufs: cannot set temp directory permissions \" + mode + \" (\" + err.message + \")\");\n        });\n      }\n    });\n  }); // Create domain to handle errors\n  // and possibly avoid server crashes.\n\n  var d = domain.create();\n  d.on('error', function (err) {\n    console.error(\"ufs: \" + err.message);\n  }); // Listen HTTP requests to serve files\n\n  WebApp.connectHandlers.use(function (req, res, next) {\n    // Quick check to see if request should be caught\n    if (!req.url.includes(\"/\" + UploadFS.config.storesPath + \"/\")) {\n      next();\n      return;\n    } // Remove store path\n\n\n    var parsedUrl = URL.parse(req.url);\n    var path = parsedUrl.pathname.substr(UploadFS.config.storesPath.length + 1);\n\n    var allowCORS = function () {\n      // res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\n      res.setHeader('Access-Control-Allow-Methods', 'POST');\n      res.setHeader('Access-Control-Allow-Origin', '*');\n      res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n    };\n\n    if (req.method === 'OPTIONS') {\n      var regExp = new RegExp('^/([^/?]+)/([^/?]+)$');\n      var match = regExp.exec(path); // Request is not valid\n\n      if (match === null) {\n        res.writeHead(400);\n        res.end();\n        return;\n      } // Get store\n\n\n      var store = UploadFS.getStore(match[1]);\n\n      if (!store) {\n        res.writeHead(404);\n        res.end();\n        return;\n      } // If a store is found, go ahead and allow the origin\n\n\n      allowCORS();\n      next();\n    } else if (req.method === 'POST') {\n      // Get store\n      var _regExp = new RegExp('^/([^/?]+)/([^/?]+)$');\n\n      var _match = _regExp.exec(path); // Request is not valid\n\n\n      if (_match === null) {\n        res.writeHead(400);\n        res.end();\n        return;\n      } // Get store\n\n\n      var _store = UploadFS.getStore(_match[1]);\n\n      if (!_store) {\n        res.writeHead(404);\n        res.end();\n        return;\n      } // If a store is found, go ahead and allow the origin\n\n\n      allowCORS(); // Get file\n\n      var fileId = _match[2];\n\n      if (_store.getCollection().find({\n        _id: fileId\n      }).count() === 0) {\n        res.writeHead(404);\n        res.end();\n        return;\n      } // Check upload token\n\n\n      if (!_store.checkToken(req.query.token, fileId)) {\n        res.writeHead(403);\n        res.end();\n        return;\n      } // Check if duplicate\n\n\n      var unique = function (hash) {\n        var originalId = _store.getCollection().findOne({\n          hash: hash,\n          _id: {\n            $ne: fileId\n          }\n        });\n\n        return originalId ? originalId._id : false;\n      };\n\n      var spark = new SparkMD5.ArrayBuffer();\n      var tmpFile = UploadFS.getTempFilePath(fileId);\n      var ws = fs.createWriteStream(tmpFile, {\n        flags: 'a'\n      });\n      var fields = {\n        uploading: true\n      };\n      var progress = parseFloat(req.query.progress);\n\n      if (!isNaN(progress) && progress > 0) {\n        fields.progress = Math.min(progress, 1);\n      }\n\n      req.on('data', function (chunk) {\n        ws.write(chunk);\n        spark.append(chunk);\n      }); // eslint-disable-next-line no-unused-vars\n\n      req.on('error', function (err) {\n        res.writeHead(500);\n        res.end();\n      });\n      req.on('end', Meteor.bindEnvironment(function () {\n        // Update completed state without triggering hooks\n        fields.hash = spark.end();\n        fields.originalId = unique(fields.hash);\n\n        _store.getCollection().direct.update({\n          _id: fileId\n        }, {\n          $set: fields\n        });\n\n        ws.end();\n      }));\n      ws.on('error', function (err) {\n        console.error(\"ufs: cannot write chunk of file \\\"\" + fileId + \"\\\" (\" + err.message + \")\");\n        fs.unlink(tmpFile, function (err) {\n          err && console.error(\"ufs: cannot delete temp file \\\"\" + tmpFile + \"\\\" (\" + err.message + \")\");\n        });\n        res.writeHead(500);\n        res.end();\n      });\n      ws.on('finish', function () {\n        res.writeHead(204, {\n          'Content-Type': 'text/plain'\n        });\n        res.end();\n      });\n    } else if (req.method === 'GET') {\n      // Get store, file Id and file name\n      var _regExp2 = new RegExp('^/([^/?]+)/([^/?]+)(?:/([^/?]+))?$');\n\n      var _match2 = _regExp2.exec(path); // Avoid 504 Gateway timeout error\n      // if file is not handled by UploadFS.\n\n\n      if (_match2 === null) {\n        next();\n        return;\n      } // Get store\n\n\n      var storeName = _match2[1];\n\n      var _store2 = UploadFS.getStore(storeName);\n\n      if (!_store2) {\n        res.writeHead(404);\n        res.end();\n        return;\n      }\n\n      if (_store2.onRead !== null && _store2.onRead !== undefined && typeof _store2.onRead !== 'function') {\n        console.error(\"ufs: Store.onRead is not a function in store \\\"\" + storeName + \"\\\"\");\n        res.writeHead(500);\n        res.end();\n        return;\n      } // Remove file extension from file Id\n\n\n      var index = _match2[2].indexOf('.');\n\n      var _fileId = index !== -1 ? _match2[2].substr(0, index) : _match2[2]; // Get file from database\n\n\n      var file = _store2.getCollection().findOne({\n        _id: _fileId\n      });\n\n      if (!file) {\n        res.writeHead(404);\n        res.end();\n        return;\n      } // Simulate read speed\n\n\n      if (UploadFS.config.simulateReadDelay) {\n        Meteor._sleepForMs(UploadFS.config.simulateReadDelay);\n      }\n\n      d.run(function () {\n        // Check if the file can be accessed\n        if (_store2.onRead.call(_store2, _fileId, file, req, res) !== false) {\n          var options = {};\n          var status = 200; // Prepare response headers\n\n          var headers = {\n            'Content-Type': file.type,\n            'Content-Length': file.size\n          }; // Add ETag header\n\n          if (typeof file.etag === 'string') {\n            headers.ETag = file.etag;\n          } // Add Last-Modified header\n\n\n          if (file.modifiedAt instanceof Date) {\n            headers['Last-Modified'] = file.modifiedAt.toUTCString();\n          } else if (file.uploadedAt instanceof Date) {\n            headers['Last-Modified'] = file.uploadedAt.toUTCString();\n          } // Parse request headers\n\n\n          if (_typeof(req.headers) === 'object') {\n            // Compare ETag\n            if (req.headers['if-none-match']) {\n              if (file.etag === req.headers['if-none-match']) {\n                res.writeHead(304); // Not Modified\n\n                res.end();\n                return;\n              }\n            } // Compare file modification date\n\n\n            if (req.headers['if-modified-since']) {\n              var modifiedSince = new Date(req.headers['if-modified-since']);\n\n              if (file.modifiedAt instanceof Date && file.modifiedAt > modifiedSince || // eslint-disable-next-line no-mixed-operators\n              file.uploadedAt instanceof Date && file.uploadedAt > modifiedSince) {\n                res.writeHead(304); // Not Modified\n\n                res.end();\n                return;\n              }\n            } // Support range request\n\n\n            if (typeof req.headers.range === 'string') {\n              var range = req.headers.range; // Range is not valid\n\n              if (!range) {\n                res.writeHead(416);\n                res.end();\n                return;\n              }\n\n              var total = file.size;\n              var unit = range.substr(0, range.indexOf('='));\n\n              if (unit !== 'bytes') {\n                res.writeHead(416);\n                res.end();\n                return;\n              }\n\n              var ranges = range.substr(unit.length).replace(/[^0-9\\-,]/, '').split(',');\n\n              if (ranges.length > 1) {// todo: support multipart ranges: https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests\n              } else {\n                var r = ranges[0].split('-');\n                var start = parseInt(r[0], 10);\n                var end = r[1] ? parseInt(r[1], 10) : total - 1; // Range is not valid\n\n                if (start < 0 || end >= total || start > end) {\n                  res.writeHead(416);\n                  res.end();\n                  return;\n                } // Update headers\n\n\n                headers['Content-Range'] = \"bytes \" + start + \"-\" + end + \"/\" + total;\n                headers['Content-Length'] = end - start + 1;\n                options.start = start;\n                options.end = end;\n              }\n\n              status = 206; // partial content\n            }\n          } else {\n            headers['Accept-Ranges'] = 'bytes';\n          } // Open the file stream\n\n\n          var rs = _store2.getReadStream(_fileId, file, options);\n\n          var _ws = new stream.PassThrough();\n\n          rs.on('error', Meteor.bindEnvironment(function (err) {\n            _store2.onReadError.call(_store2, err, _fileId, file);\n\n            res.end();\n          }));\n\n          _ws.on('error', Meteor.bindEnvironment(function (err) {\n            _store2.onReadError.call(_store2, err, _fileId, file);\n\n            res.end();\n          }));\n\n          _ws.on('close', function () {\n            // Close output stream at the end\n            _ws.emit('end');\n          }); // Transform stream\n\n\n          _store2.transformRead(rs, _ws, _fileId, file, req, headers); // Parse request headers\n\n\n          if (_typeof(req.headers) === 'object') {\n            // Compress data using if needed (ignore audio/video as they are already compressed)\n            if (typeof req.headers['accept-encoding'] === 'string' && !/^(audio|video)/.test(file.type)) {\n              var accept = req.headers['accept-encoding']; // Compress with gzip\n\n              if (accept.match(/\\bgzip\\b/)) {\n                headers['Content-Encoding'] = 'gzip';\n                delete headers['Content-Length'];\n                res.writeHead(status, headers);\n\n                _ws.pipe(zlib.createGzip()).pipe(res);\n\n                return;\n              } // Compress with deflate\n\n\n              if (accept.match(/\\bdeflate\\b/)) {\n                headers['Content-Encoding'] = 'deflate';\n                delete headers['Content-Length'];\n                res.writeHead(status, headers);\n\n                _ws.pipe(zlib.createDeflate()).pipe(res);\n\n                return;\n              }\n            }\n          } // Send raw data\n\n\n          if (!headers['Content-Encoding']) {\n            res.writeHead(status, headers);\n\n            _ws.pipe(res);\n          }\n        } else {\n          res.end();\n        }\n      });\n    } else {\n      next();\n    }\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-store-permissions.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-store-permissions.js                                                                   //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  StorePermissions: function () {\n    return StorePermissions;\n  }\n});\n\nvar _;\n\nmodule.link(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 0);\n\nvar StorePermissions = /*#__PURE__*/function () {\n  function StorePermissions(options) {\n    // Default options\n    options = _.extend({\n      insert: null,\n      remove: null,\n      update: null\n    }, options); // Check options\n\n    if (options.insert && typeof options.insert !== 'function') {\n      throw new TypeError('StorePermissions: insert is not a function');\n    }\n\n    if (options.remove && typeof options.remove !== 'function') {\n      throw new TypeError('StorePermissions: remove is not a function');\n    }\n\n    if (options.update && typeof options.update !== 'function') {\n      throw new TypeError('StorePermissions: update is not a function');\n    } // Public attributes\n\n\n    this.actions = {\n      insert: options.insert,\n      remove: options.remove,\n      update: options.update\n    };\n  }\n  /**\n   * Checks the permission for the action\n   * @param action\n   * @param userId\n   * @param file\n   * @param fields\n   * @param modifiers\n   * @return {*}\n   */\n\n\n  var _proto = StorePermissions.prototype;\n\n  _proto.check = function () {\n    function check(action, userId, file, fields, modifiers) {\n      if (typeof this.actions[action] === 'function') {\n        return this.actions[action](userId, file, fields, modifiers);\n      }\n\n      return true; // by default allow all\n    }\n\n    return check;\n  }()\n  /**\n   * Checks the insert permission\n   * @param userId\n   * @param file\n   * @returns {*}\n   */\n  ;\n\n  _proto.checkInsert = function () {\n    function checkInsert(userId, file) {\n      return this.check('insert', userId, file);\n    }\n\n    return checkInsert;\n  }()\n  /**\n   * Checks the remove permission\n   * @param userId\n   * @param file\n   * @returns {*}\n   */\n  ;\n\n  _proto.checkRemove = function () {\n    function checkRemove(userId, file) {\n      return this.check('remove', userId, file);\n    }\n\n    return checkRemove;\n  }()\n  /**\n   * Checks the update permission\n   * @param userId\n   * @param file\n   * @param fields\n   * @param modifiers\n   * @returns {*}\n   */\n  ;\n\n  _proto.checkUpdate = function () {\n    function checkUpdate(userId, file, fields, modifiers) {\n      return this.check('update', userId, file, fields, modifiers);\n    }\n\n    return checkUpdate;\n  }();\n\n  return StorePermissions;\n}();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-store.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-store.js                                                                               //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nvar _excluded = [\"_id\", \"url\"];\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 0);\nmodule.export({\n  Store: function () {\n    return Store;\n  }\n});\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 2);\n\nvar _;\n\nmodule.link(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 3);\nvar UploadFS;\nmodule.link(\"./ufs\", {\n  UploadFS: function (v) {\n    UploadFS = v;\n  }\n}, 4);\nvar Filter;\nmodule.link(\"./ufs-filter\", {\n  Filter: function (v) {\n    Filter = v;\n  }\n}, 5);\nvar StorePermissions;\nmodule.link(\"./ufs-store-permissions\", {\n  StorePermissions: function (v) {\n    StorePermissions = v;\n  }\n}, 6);\nvar Tokens;\nmodule.link(\"./ufs-tokens\", {\n  Tokens: function (v) {\n    Tokens = v;\n  }\n}, 7);\n\nvar Store = /*#__PURE__*/function () {\n  function Store(options) {\n    var self = this; // Default options\n\n    options = _.extend({\n      collection: null,\n      filter: null,\n      name: null,\n      onCopyError: this.onCopyError,\n      onFinishUpload: this.onFinishUpload,\n      onRead: this.onRead,\n      onReadError: this.onReadError,\n      onValidate: this.onValidate,\n      onWriteError: this.onWriteError,\n      permissions: null,\n      transformRead: null,\n      transformWrite: null\n    }, options); // Check options\n\n    if (!(options.collection instanceof Mongo.Collection)) {\n      throw new TypeError('Store: collection is not a Mongo.Collection');\n    }\n\n    if (options.filter && !(options.filter instanceof Filter)) {\n      throw new TypeError('Store: filter is not a UploadFS.Filter');\n    }\n\n    if (typeof options.name !== 'string') {\n      throw new TypeError('Store: name is not a string');\n    }\n\n    if (UploadFS.getStore(options.name)) {\n      throw new TypeError('Store: name already exists');\n    }\n\n    if (options.onCopyError && typeof options.onCopyError !== 'function') {\n      throw new TypeError('Store: onCopyError is not a function');\n    }\n\n    if (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\n      throw new TypeError('Store: onFinishUpload is not a function');\n    }\n\n    if (options.onRead && typeof options.onRead !== 'function') {\n      throw new TypeError('Store: onRead is not a function');\n    }\n\n    if (options.onReadError && typeof options.onReadError !== 'function') {\n      throw new TypeError('Store: onReadError is not a function');\n    }\n\n    if (options.onWriteError && typeof options.onWriteError !== 'function') {\n      throw new TypeError('Store: onWriteError is not a function');\n    }\n\n    if (options.permissions && !(options.permissions instanceof StorePermissions)) {\n      throw new TypeError('Store: permissions is not a UploadFS.StorePermissions');\n    }\n\n    if (options.transformRead && typeof options.transformRead !== 'function') {\n      throw new TypeError('Store: transformRead is not a function');\n    }\n\n    if (options.transformWrite && typeof options.transformWrite !== 'function') {\n      throw new TypeError('Store: transformWrite is not a function');\n    }\n\n    if (options.onValidate && typeof options.onValidate !== 'function') {\n      throw new TypeError('Store: onValidate is not a function');\n    } // Public attributes\n\n\n    self.options = options;\n    self.permissions = options.permissions;\n    ['onCopyError', 'onFinishUpload', 'onRead', 'onReadError', 'onWriteError', 'onValidate'].forEach(function (method) {\n      if (typeof options[method] === 'function') {\n        self[method] = options[method];\n      }\n    }); // Add the store to the list\n\n    UploadFS.addStore(self); // Set default permissions\n\n    if (!(self.permissions instanceof StorePermissions)) {\n      // Uses custom default permissions or UFS default permissions\n      if (UploadFS.config.defaultStorePermissions instanceof StorePermissions) {\n        self.permissions = UploadFS.config.defaultStorePermissions;\n      } else {\n        self.permissions = new StorePermissions();\n        console.warn(\"ufs: permissions are not defined for store \\\"\" + options.name + \"\\\"\");\n      }\n    }\n\n    if (Meteor.isServer) {\n      /**\n       * Checks token validity\n       * @param token\n       * @param fileId\n       * @returns {boolean}\n       */\n      self.checkToken = function (token, fileId) {\n        check(token, String);\n        check(fileId, String);\n        return Tokens.find({\n          value: token,\n          fileId: fileId\n        }).count() === 1;\n      };\n      /**\n       * Copies the file to a store\n       * @param fileId\n       * @param store\n       * @param callback\n       */\n\n\n      self.copy = function (fileId, store, callback) {\n        check(fileId, String);\n\n        if (!(store instanceof Store)) {\n          throw new TypeError('store is not an instance of UploadFS.Store');\n        } // Get original file\n\n\n        var file = self.getCollection().findOne({\n          _id: fileId\n        });\n\n        if (!file) {\n          throw new Meteor.Error('file-not-found', 'File not found');\n        } // Silently ignore the file if it does not match filter\n\n\n        var filter = store.getFilter();\n\n        if (filter instanceof Filter && !filter.isValid(file)) {\n          return;\n        } // Prepare copy\n\n\n        var _id = file._id,\n            url = file.url,\n            copy = _objectWithoutProperties(file, _excluded);\n\n        copy.originalStore = self.getName();\n        copy.originalId = fileId; // Create the copy\n\n        var copyId = store.create(copy); // Get original stream\n\n        var rs = self.getReadStream(fileId, file); // Catch errors to avoid app crashing\n\n        rs.on('error', Meteor.bindEnvironment(function (err) {\n          callback.call(self, err, null);\n        })); // Copy file data\n\n        store.write(rs, copyId, Meteor.bindEnvironment(function (err) {\n          if (err) {\n            self.getCollection().remove({\n              _id: copyId\n            });\n            self.onCopyError.call(self, err, fileId, file);\n          }\n\n          if (typeof callback === 'function') {\n            callback.call(self, err, copyId, copy, store);\n          }\n        }));\n      };\n      /**\n       * Creates the file in the collection\n       * @param file\n       * @param callback\n       * @return {string}\n       */\n\n\n      self.create = function (file, callback) {\n        check(file, Object);\n        file.store = self.options.name; // assign store to file\n\n        return self.getCollection().insert(file, callback);\n      };\n      /**\n       * Creates a token for the file (only needed for client side upload)\n       * @param fileId\n       * @returns {*}\n       */\n\n\n      self.createToken = function (fileId) {\n        var token = self.generateToken(); // Check if token exists\n\n        if (Tokens.find({\n          fileId: fileId\n        }).count()) {\n          Tokens.update({\n            fileId: fileId\n          }, {\n            $set: {\n              createdAt: new Date(),\n              value: token\n            }\n          });\n        } else {\n          Tokens.insert({\n            createdAt: new Date(),\n            fileId: fileId,\n            value: token\n          });\n        }\n\n        return token;\n      };\n      /**\n       * Writes the file to the store\n       * @param rs\n       * @param fileId\n       * @param callback\n       */\n\n\n      self.write = function (rs, fileId, callback) {\n        var file = self.getCollection().findOne({\n          _id: fileId\n        });\n        var errorHandler = Meteor.bindEnvironment(function (err) {\n          self.onWriteError.call(self, err, fileId, file);\n          callback.call(self, err);\n        });\n        var finishHandler = Meteor.bindEnvironment(function () {\n          var size = 0;\n          var readStream = self.getReadStream(fileId, file);\n          readStream.on('error', Meteor.bindEnvironment(function (error) {\n            callback.call(self, error, null);\n          }));\n          readStream.on('data', Meteor.bindEnvironment(function (data) {\n            size += data.length;\n          }));\n          readStream.on('end', Meteor.bindEnvironment(function () {\n            if (file.complete) {\n              return;\n            } // Set file attribute\n\n\n            file.complete = true;\n            file.etag = UploadFS.generateEtag();\n            file.path = self.getFileRelativeURL(fileId);\n            file.progress = 1;\n            file.size = size;\n            file.token = self.generateToken();\n            file.uploading = false;\n            file.uploadedAt = new Date();\n            file.url = self.getFileURL(fileId); // Execute callback\n\n            if (typeof self.onFinishUpload === 'function') {\n              self.onFinishUpload.call(self, file);\n            } // Sets the file URL when file transfer is complete,\n            // this way, the image will loads entirely.\n\n\n            self.getCollection().direct.update({\n              _id: fileId\n            }, {\n              $set: {\n                complete: file.complete,\n                etag: file.etag,\n                path: file.path,\n                progress: file.progress,\n                size: file.size,\n                token: file.token,\n                uploading: file.uploading,\n                uploadedAt: file.uploadedAt,\n                url: file.url\n              }\n            }); // Return file info\n\n            callback.call(self, null, file); // Simulate write speed\n\n            if (UploadFS.config.simulateWriteDelay) {\n              Meteor._sleepForMs(UploadFS.config.simulateWriteDelay);\n            } // Copy file to other stores\n\n\n            if (self.options.copyTo instanceof Array) {\n              for (var i = 0; i < self.options.copyTo.length; i += 1) {\n                var store = self.options.copyTo[i];\n\n                if (!store.getFilter() || store.getFilter().isValid(file)) {\n                  self.copy(fileId, store);\n                }\n              }\n            }\n          }));\n        });\n        var ws = self.getWriteStream(fileId, file);\n        ws.on('error', errorHandler);\n        ws.once('finish', finishHandler); // Execute transformation\n\n        self.transformWrite(rs, ws, fileId, file);\n      };\n    }\n\n    if (Meteor.isServer) {\n      // eslint-disable-next-line no-undef\n      var fs = Npm.require('fs');\n\n      var collection = self.getCollection(); // Code executed after removing file\n\n      collection.after.remove(function (userId, file) {\n        // Remove associated tokens\n        Tokens.remove({\n          fileId: file._id\n        });\n\n        if (self.options.copyTo instanceof Array) {\n          for (var i = 0; i < self.options.copyTo.length; i += 1) {\n            // Remove copies in stores\n            self.options.copyTo[i].getCollection().remove({\n              originalId: file._id\n            });\n          }\n        }\n      }); // Code executed before inserting file\n\n      collection.before.insert(function (userId, file) {\n        if (!self.permissions.checkInsert(userId, file)) {\n          throw new Meteor.Error('forbidden', 'Forbidden');\n        }\n      }); // Code executed before updating file\n\n      collection.before.update(function (userId, file, fields, modifiers) {\n        if (!self.permissions.checkUpdate(userId, file, fields, modifiers)) {\n          throw new Meteor.Error('forbidden', 'Forbidden');\n        }\n      }); // Code executed before removing file\n\n      collection.before.remove(function (userId, file) {\n        if (!self.permissions.checkRemove(userId, file)) {\n          throw new Meteor.Error('forbidden', 'Forbidden');\n        } // Delete the physical file in the store\n\n\n        self.delete(file._id);\n        var tmpFile = UploadFS.getTempFilePath(file._id); // Delete the temp file\n\n        fs.stat(tmpFile, function (err) {\n          !err && fs.unlink(tmpFile, function (err) {\n            err && console.error(\"ufs: cannot delete temp file at \" + tmpFile + \" (\" + err.message + \")\");\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Deletes a file async\n   * @param fileId\n   * @param callback\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  var _proto = Store.prototype;\n\n  _proto.delete = function () {\n    function _delete(fileId, callback) {\n      throw new Error('delete is not implemented');\n    }\n\n    return _delete;\n  }()\n  /**\n   * Generates a random token\n   * @param pattern\n   * @return {string}\n   */\n  ;\n\n  _proto.generateToken = function () {\n    function generateToken(pattern) {\n      return (pattern || 'xyxyxyxyxy').replace(/[xy]/g, function (c) {\n        // eslint-disable-next-line no-mixed-operators\n        var r = Math.random() * 16 | 0;\n        var v = c === 'x' ? r : r & 0x3 | 0x8;\n        var s = v.toString(16);\n        return Math.round(Math.random()) ? s.toUpperCase() : s;\n      });\n    }\n\n    return generateToken;\n  }()\n  /**\n   * Returns the collection\n   * @return {Mongo.Collection}\n   */\n  ;\n\n  _proto.getCollection = function () {\n    function getCollection() {\n      return this.options.collection;\n    }\n\n    return getCollection;\n  }()\n  /**\n   * Returns the file URL\n   * @param fileId\n   * @return {string|null}\n   */\n  ;\n\n  _proto.getFileRelativeURL = function () {\n    function getFileRelativeURL(fileId) {\n      var file = this.getCollection().findOne(fileId, {\n        fields: {\n          name: 1\n        }\n      });\n      return file ? this.getRelativeURL(fileId + \"/\" + file.name) : null;\n    }\n\n    return getFileRelativeURL;\n  }()\n  /**\n   * Returns the file URL\n   * @param fileId\n   * @return {string|null}\n   */\n  ;\n\n  _proto.getFileURL = function () {\n    function getFileURL(fileId) {\n      var file = this.getCollection().findOne(fileId, {\n        fields: {\n          name: 1\n        }\n      });\n      return file ? this.getURL(fileId + \"/\" + file.name) : null;\n    }\n\n    return getFileURL;\n  }()\n  /**\n   * Returns the file filter\n   * @return {UploadFS.Filter}\n   */\n  ;\n\n  _proto.getFilter = function () {\n    function getFilter() {\n      return this.options.filter;\n    }\n\n    return getFilter;\n  }()\n  /**\n   * Returns the store name\n   * @return {string}\n   */\n  ;\n\n  _proto.getName = function () {\n    function getName() {\n      return this.options.name;\n    }\n\n    return getName;\n  }()\n  /**\n   * Returns the file read stream\n   * @param fileId\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.getReadStream = function () {\n    function getReadStream(fileId, file) {\n      throw new Error('Store.getReadStream is not implemented');\n    }\n\n    return getReadStream;\n  }()\n  /**\n   * Returns the store relative URL\n   * @param path\n   * @return {string}\n   */\n  ;\n\n  _proto.getRelativeURL = function () {\n    function getRelativeURL(path) {\n      var rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\n      var rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\n      var storeName = this.getName();\n      path = String(path).replace(/\\/$/, '').trim();\n      return encodeURI(rootPath + \"/\" + UploadFS.config.storesPath + \"/\" + storeName + \"/\" + path);\n    }\n\n    return getRelativeURL;\n  }()\n  /**\n   * Returns the store absolute URL\n   * @param path\n   * @return {string}\n   */\n  ;\n\n  _proto.getURL = function () {\n    function getURL(path) {\n      var rootUrl = Meteor.absoluteUrl({\n        secure: UploadFS.config.https\n      }).replace(/\\/+$/, '');\n      var storeName = this.getName();\n      path = String(path).replace(/\\/$/, '').trim();\n      return encodeURI(rootUrl + \"/\" + UploadFS.config.storesPath + \"/\" + storeName + \"/\" + path);\n    }\n\n    return getURL;\n  }()\n  /**\n   * Returns the file write stream\n   * @param fileId\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.getWriteStream = function () {\n    function getWriteStream(fileId, file) {\n      throw new Error('getWriteStream is not implemented');\n    }\n\n    return getWriteStream;\n  }()\n  /**\n   * Completes the file upload\n   * @param url\n   * @param file\n   * @param callback\n   */\n  ;\n\n  _proto.importFromURL = function () {\n    function importFromURL(url, file, callback) {\n      Meteor.call('ufsImportURL', url, file, this.getName(), callback);\n    }\n\n    return importFromURL;\n  }()\n  /**\n   * Called when a copy error happened\n   * @param err\n   * @param fileId\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onCopyError = function () {\n    function onCopyError(err, fileId, file) {\n      console.error(\"ufs: cannot copy file \\\"\" + fileId + \"\\\" (\" + err.message + \")\", err);\n    }\n\n    return onCopyError;\n  }()\n  /**\n   * Called when a file has been uploaded\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onFinishUpload = function () {\n    function onFinishUpload(file) {}\n\n    return onFinishUpload;\n  }()\n  /**\n   * Called when a file is read from the store\n   * @param fileId\n   * @param file\n   * @param request\n   * @param response\n   * @return boolean\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onRead = function () {\n    function onRead(fileId, file, request, response) {\n      return true;\n    }\n\n    return onRead;\n  }()\n  /**\n   * Called when a read error happened\n   * @param err\n   * @param fileId\n   * @param file\n   * @return boolean\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onReadError = function () {\n    function onReadError(err, fileId, file) {\n      console.error(\"ufs: cannot read file \\\"\" + fileId + \"\\\" (\" + err.message + \")\", err);\n    }\n\n    return onReadError;\n  }()\n  /**\n   * Called when file is being validated\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onValidate = function () {\n    function onValidate(file) {}\n\n    return onValidate;\n  }()\n  /**\n   * Called when a write error happened\n   * @param err\n   * @param fileId\n   * @param file\n   * @return boolean\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onWriteError = function () {\n    function onWriteError(err, fileId, file) {\n      console.error(\"ufs: cannot write file \\\"\" + fileId + \"\\\" (\" + err.message + \")\", err);\n    }\n\n    return onWriteError;\n  }()\n  /**\n   * Sets the store permissions\n   * @param permissions\n   */\n  ;\n\n  _proto.setPermissions = function () {\n    function setPermissions(permissions) {\n      if (!(permissions instanceof StorePermissions)) {\n        throw new TypeError('Permissions is not an instance of UploadFS.StorePermissions');\n      }\n\n      this.permissions = permissions;\n    }\n\n    return setPermissions;\n  }()\n  /**\n   * Transforms the file on reading\n   * @param readStream\n   * @param writeStream\n   * @param fileId\n   * @param file\n   * @param request\n   * @param headers\n   */\n  ;\n\n  _proto.transformRead = function () {\n    function transformRead(readStream, writeStream, fileId, file, request, headers) {\n      if (typeof this.options.transformRead === 'function') {\n        this.options.transformRead.call(this, readStream, writeStream, fileId, file, request, headers);\n      } else {\n        readStream.pipe(writeStream);\n      }\n    }\n\n    return transformRead;\n  }()\n  /**\n   * Transforms the file on writing\n   * @param readStream\n   * @param writeStream\n   * @param fileId\n   * @param file\n   */\n  ;\n\n  _proto.transformWrite = function () {\n    function transformWrite(readStream, writeStream, fileId, file) {\n      if (typeof this.options.transformWrite === 'function') {\n        this.options.transformWrite.call(this, readStream, writeStream, fileId, file);\n      } else {\n        readStream.pipe(writeStream);\n      }\n    }\n\n    return transformWrite;\n  }()\n  /**\n   * Validates the file\n   * @param file\n   */\n  ;\n\n  _proto.validate = function () {\n    function validate(file) {\n      if (typeof this.onValidate === 'function') {\n        this.onValidate(file);\n      }\n    }\n\n    return validate;\n  }();\n\n  return Store;\n}();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-tokens.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-tokens.js                                                                              //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  Tokens: function () {\n    return Tokens;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Tokens = new Mongo.Collection('ufsTokens');\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ufs-uploader.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/jalik_ufs/ufs-uploader.js                                                                            //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nvar _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nmodule.export({\n  Uploader: function () {\n    return Uploader;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\n\nvar _;\n\nmodule.link(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 1);\nvar Store;\nmodule.link(\"./ufs-store\", {\n  Store: function (v) {\n    Store = v;\n  }\n}, 2);\n\nvar Uploader = /*#__PURE__*/function () {\n  function Uploader(options) {\n    var self = this; // Set default options\n\n    options = _.extend({\n      adaptive: true,\n      capacity: 0.9,\n      chunkSize: 16 * 1024,\n      data: null,\n      file: null,\n      maxChunkSize: 4 * 1024 * 1000,\n      maxTries: 5,\n      onAbort: this.onAbort,\n      onComplete: this.onComplete,\n      onCreate: this.onCreate,\n      onError: this.onError,\n      onProgress: this.onProgress,\n      onStart: this.onStart,\n      onStop: this.onStop,\n      retryDelay: 2000,\n      store: null,\n      transferDelay: 100\n    }, options); // Check options\n\n    if (typeof options.adaptive !== 'boolean') {\n      throw new TypeError('adaptive is not a number');\n    }\n\n    if (typeof options.capacity !== 'number') {\n      throw new TypeError('capacity is not a number');\n    }\n\n    if (options.capacity <= 0 || options.capacity > 1) {\n      throw new RangeError('capacity must be a float between 0.1 and 1.0');\n    }\n\n    if (typeof options.chunkSize !== 'number') {\n      throw new TypeError('chunkSize is not a number');\n    }\n\n    if (!(options.data instanceof Blob) && !(options.data instanceof File)) {\n      throw new TypeError('data is not an Blob or File');\n    }\n\n    if (options.file === null || _typeof(options.file) !== 'object') {\n      throw new TypeError('file is not an object');\n    }\n\n    if (typeof options.maxChunkSize !== 'number') {\n      throw new TypeError('maxChunkSize is not a number');\n    }\n\n    if (typeof options.maxTries !== 'number') {\n      throw new TypeError('maxTries is not a number');\n    }\n\n    if (typeof options.retryDelay !== 'number') {\n      throw new TypeError('retryDelay is not a number');\n    }\n\n    if (typeof options.transferDelay !== 'number') {\n      throw new TypeError('transferDelay is not a number');\n    }\n\n    if (typeof options.onAbort !== 'function') {\n      throw new TypeError('onAbort is not a function');\n    }\n\n    if (typeof options.onComplete !== 'function') {\n      throw new TypeError('onComplete is not a function');\n    }\n\n    if (typeof options.onCreate !== 'function') {\n      throw new TypeError('onCreate is not a function');\n    }\n\n    if (typeof options.onError !== 'function') {\n      throw new TypeError('onError is not a function');\n    }\n\n    if (typeof options.onProgress !== 'function') {\n      throw new TypeError('onProgress is not a function');\n    }\n\n    if (typeof options.onStart !== 'function') {\n      throw new TypeError('onStart is not a function');\n    }\n\n    if (typeof options.onStop !== 'function') {\n      throw new TypeError('onStop is not a function');\n    }\n\n    if (typeof options.store !== 'string' && !(options.store instanceof Store)) {\n      throw new TypeError('store must be the name of the store or an instance of UploadFS.Store');\n    } // Public attributes\n\n\n    self.adaptive = options.adaptive;\n    self.capacity = parseFloat(options.capacity);\n    self.chunkSize = parseInt(options.chunkSize);\n    self.maxChunkSize = parseInt(options.maxChunkSize);\n    self.maxTries = parseInt(options.maxTries);\n    self.retryDelay = parseInt(options.retryDelay);\n    self.transferDelay = parseInt(options.transferDelay);\n    self.onAbort = options.onAbort;\n    self.onComplete = options.onComplete;\n    self.onCreate = options.onCreate;\n    self.onError = options.onError;\n    self.onProgress = options.onProgress;\n    self.onStart = options.onStart;\n    self.onStop = options.onStop; // Private attributes\n\n    var _options = options,\n        store = _options.store;\n    var _options2 = options,\n        data = _options2.data;\n    var capacityMargin = 0.1;\n    var _options3 = options,\n        file = _options3.file;\n    var fileId = null;\n    var offset = 0;\n    var loaded = 0;\n    var total = data.size;\n    var tries = 0;\n    var postUrl = null;\n    var token = null;\n    var complete = false;\n    var uploading = false;\n    var timeA = null;\n    var timeB = null;\n    var elapsedTime = 0;\n    var startTime = 0; // Keep only the name of the store\n\n    if (store instanceof Store) {\n      store = store.getName();\n    } // Assign file to store\n\n\n    file.store = store;\n\n    function finish() {\n      // Finish the upload by telling the store the upload is complete\n      Meteor.call('ufsComplete', fileId, store, token, function (err, uploadedFile) {\n        if (err) {\n          self.onError(err, file);\n          self.abort();\n        } else if (uploadedFile) {\n          uploading = false;\n          complete = true;\n          file = uploadedFile;\n          self.onComplete(uploadedFile);\n        }\n      });\n    }\n    /**\n     * Aborts the current transfer\n     */\n\n\n    self.abort = function () {\n      // Remove the file from database\n      // eslint-disable-next-line no-unused-vars\n      Meteor.call('ufsDelete', fileId, store, token, function (err, result) {\n        if (err) {\n          self.onError(err, file);\n        }\n      }); // Reset uploader status\n\n      uploading = false;\n      fileId = null;\n      offset = 0;\n      tries = 0;\n      loaded = 0;\n      complete = false;\n      startTime = null;\n      self.onAbort(file);\n    };\n    /**\n     * Returns the average speed in bytes per second\n     * @returns {number}\n     */\n\n\n    self.getAverageSpeed = function () {\n      var seconds = self.getElapsedTime() / 1000;\n      return self.getLoaded() / seconds;\n    };\n    /**\n     * Returns the elapsed time in milliseconds\n     * @returns {number}\n     */\n\n\n    self.getElapsedTime = function () {\n      if (startTime && self.isUploading()) {\n        return elapsedTime + (Date.now() - startTime);\n      }\n\n      return elapsedTime;\n    };\n    /**\n     * Returns the file\n     * @return {object}\n     */\n\n\n    self.getFile = function () {\n      return file;\n    };\n    /**\n     * Returns the loaded bytes\n     * @return {number}\n     */\n\n\n    self.getLoaded = function () {\n      return loaded;\n    };\n    /**\n     * Returns current progress\n     * @return {number}\n     */\n\n\n    self.getProgress = function () {\n      return Math.min(loaded / total * 100 / 100, 1.0);\n    };\n    /**\n     * Returns the remaining time in milliseconds\n     * @returns {number}\n     */\n\n\n    self.getRemainingTime = function () {\n      var averageSpeed = self.getAverageSpeed();\n      var remainingBytes = total - self.getLoaded();\n      return averageSpeed && remainingBytes ? Math.max(remainingBytes / averageSpeed, 0) : 0;\n    };\n    /**\n     * Returns the upload speed in bytes per second\n     * @returns {number}\n     */\n\n\n    self.getSpeed = function () {\n      if (timeA && timeB && self.isUploading()) {\n        var seconds = (timeB - timeA) / 1000;\n        return self.chunkSize / seconds;\n      }\n\n      return 0;\n    };\n    /**\n     * Returns the total bytes\n     * @return {number}\n     */\n\n\n    self.getTotal = function () {\n      return total;\n    };\n    /**\n     * Checks if the transfer is complete\n     * @return {boolean}\n     */\n\n\n    self.isComplete = function () {\n      return complete;\n    };\n    /**\n     * Checks if the transfer is active\n     * @return {boolean}\n     */\n\n\n    self.isUploading = function () {\n      return uploading;\n    };\n    /**\n     * Reads a portion of file\n     * @param start\n     * @param length\n     * @param callback\n     * @returns {Blob}\n     */\n\n\n    self.readChunk = function (start, length, callback) {\n      if (typeof callback !== 'function') {\n        throw new Error('readChunk is missing callback');\n      }\n\n      try {\n        var end; // Calculate the chunk size\n\n        if (length && start + length > total) {\n          end = total;\n        } else {\n          end = start + length;\n        } // Get chunk\n\n\n        var chunk = data.slice(start, end); // Pass chunk to callback\n\n        callback.call(self, null, chunk);\n      } catch (err) {\n        console.error('read error', err); // Retry to read chunk\n\n        Meteor.setTimeout(function () {\n          if (tries < self.maxTries) {\n            tries += 1;\n            self.readChunk(start, length, callback);\n          }\n        }, self.retryDelay);\n      }\n    };\n    /**\n     * Sends a file chunk to the store\n     */\n\n\n    self.sendChunk = function () {\n      if (!complete && startTime !== null) {\n        if (offset < total) {\n          var chunkSize = self.chunkSize; // Use adaptive length\n\n          if (self.adaptive && timeA && timeB && timeB > timeA) {\n            var duration = (timeB - timeA) / 1000;\n            var max = self.capacity * (1 + capacityMargin);\n            var min = self.capacity * (1 - capacityMargin);\n\n            if (duration >= max) {\n              chunkSize = Math.abs(Math.round(chunkSize * (max - duration)));\n            } else if (duration < min) {\n              chunkSize = Math.round(chunkSize * (min / duration));\n            } // Limit to max chunk size\n\n\n            if (self.maxChunkSize > 0 && chunkSize > self.maxChunkSize) {\n              chunkSize = self.maxChunkSize;\n            }\n          } // Reduce chunk size to fit total\n\n\n          if (offset + chunkSize > total) {\n            chunkSize = total - offset;\n          } // Prepare the chunk\n\n\n          self.readChunk(offset, chunkSize, function (err, chunk) {\n            if (err) {\n              self.onError(err, file);\n              return;\n            }\n\n            var xhr = new XMLHttpRequest();\n\n            xhr.onreadystatechange = function () {\n              if (xhr.readyState === 4) {\n                if ([200, 201, 202, 204].includes(xhr.status)) {\n                  timeB = Date.now();\n                  offset += chunkSize;\n                  loaded += chunkSize; // Send next chunk\n\n                  self.onProgress(file, self.getProgress()); // Finish upload\n\n                  if (loaded >= total) {\n                    elapsedTime = Date.now() - startTime;\n                    finish();\n                  } else {\n                    Meteor.setTimeout(self.sendChunk, self.transferDelay);\n                  }\n                } else if (![402, 403, 404, 500].includes(xhr.status)) {\n                  // Retry until max tries is reach\n                  // But don't retry if these errors occur\n                  if (tries <= self.maxTries) {\n                    tries += 1; // Wait before retrying\n\n                    Meteor.setTimeout(self.sendChunk, self.retryDelay);\n                  } else {\n                    self.abort();\n                  }\n                } else {\n                  self.abort();\n                }\n              }\n            }; // Calculate upload progress\n\n\n            var progress = (offset + chunkSize) / total; // let formData = new FormData();\n            // formData.append('progress', progress);\n            // formData.append('chunk', chunk);\n\n            var url = postUrl + \"&progress=\" + progress;\n            timeA = Date.now();\n            timeB = null;\n            uploading = true; // Send chunk to the store\n\n            xhr.open('POST', url, true);\n            xhr.send(chunk);\n          });\n        }\n      }\n    };\n    /**\n     * Starts or resumes the transfer\n     */\n\n\n    self.start = function () {\n      if (!fileId) {\n        // Create the file document and get the token\n        // that allows the user to send chunks to the store.\n        Meteor.call('ufsCreate', _.extend({}, file), function (err, result) {\n          if (err) {\n            self.onError(err, file);\n          } else if (result) {\n            token = result.token;\n            postUrl = result.url;\n            fileId = result.fileId;\n            file._id = result.fileId;\n            self.onCreate(file);\n            tries = 0;\n            startTime = Date.now();\n            self.onStart(file);\n            self.sendChunk();\n          }\n        });\n      } else if (!uploading && !complete) {\n        // Resume uploading\n        tries = 0;\n        startTime = Date.now();\n        self.onStart(file);\n        self.sendChunk();\n      }\n    };\n    /**\n     * Stops the transfer\n     */\n\n\n    self.stop = function () {\n      if (uploading) {\n        // Update elapsed time\n        elapsedTime = Date.now() - startTime;\n        startTime = null;\n        uploading = false;\n        self.onStop(file); // eslint-disable-next-line no-unused-vars\n\n        Meteor.call('ufsStop', fileId, store, token, function (err, result) {\n          if (err) {\n            self.onError(err, file);\n          }\n        });\n      }\n    };\n  }\n  /**\n   * Called when the file upload is aborted\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  var _proto = Uploader.prototype;\n\n  _proto.onAbort = function () {\n    function onAbort(file) {}\n\n    return onAbort;\n  }()\n  /**\n   * Called when the file upload is complete\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onComplete = function () {\n    function onComplete(file) {}\n\n    return onComplete;\n  }()\n  /**\n   * Called when the file is created in the collection\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onCreate = function () {\n    function onCreate(file) {}\n\n    return onCreate;\n  }()\n  /**\n   * Called when an error occurs during file upload\n   * @param err\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onError = function () {\n    function onError(err, file) {\n      console.error(\"ufs: \" + err.message);\n    }\n\n    return onError;\n  }()\n  /**\n   * Called when a file chunk has been sent\n   * @param file\n   * @param progress is a float from 0.0 to 1.0\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onProgress = function () {\n    function onProgress(file, progress) {}\n\n    return onProgress;\n  }()\n  /**\n   * Called when the file upload starts\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onStart = function () {\n    function onStart(file) {}\n\n    return onStart;\n  }()\n  /**\n   * Called when the file upload stops\n   * @param file\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onStop = function () {\n    function onStop(file) {}\n\n    return onStop;\n  }();\n\n  return Uploader;\n}();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"node_modules\":{\"spark-md5\":{\"package.json\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// node_modules/meteor/jalik_ufs/node_modules/spark-md5/package.json                                             //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.exports = {\n  \"name\": \"spark-md5\",\n  \"version\": \"3.0.0\",\n  \"main\": \"spark-md5.js\"\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"spark-md5.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// node_modules/meteor/jalik_ufs/node_modules/spark-md5/spark-md5.js                                             //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/jalik:ufs/ufs.js\");\n\n/* Exports */\nPackage._define(\"jalik:ufs\", exports);\n\n})();\n","servePath":"/packages/jalik_ufs.js","sourceMap":{"version":3,"sources":["packages/jalik:ufs/ufs.js","packages/jalik:ufs/ufs-config.js","packages/jalik:ufs/ufs-filter.js","packages/jalik:ufs/ufs-methods.js","packages/jalik:ufs/ufs-mime.js","packages/jalik:ufs/ufs-server.js","packages/jalik:ufs/ufs-store-permissions.js","packages/jalik:ufs/ufs-store.js","packages/jalik:ufs/ufs-tokens.js","packages/jalik:ufs/ufs-uploader.js"],"names":["_typeof","module1","link","default","v","export","UploadFS","Meteor","Random","Config","Filter","MIME","Store","StorePermissions","Tokens","Uploader","stores","store","tokens","addETagAttributeToFiles","where","getStores","forEach","files","getCollection","find","etag","fields","_id","file","direct","update","$set","generateEtag","addMimeType","extension","mime","toLowerCase","addPathAttributeToFiles","path","getFileRelativeURL","addStore","TypeError","getName","id","getMimeType","getMimeTypes","getStore","name","getTempFilePath","fileId","config","tmpDir","importFromURL","url","callback","call","readAsArrayBuffer","console","error","selectFile","input","document","createElement","type","multiple","onchange","ev","target","div","className","style","appendChild","body","click","selectFiles","i","length","isServer","require","global","isClient","window","module","_","options","extend","defaultStorePermissions","https","simulateReadDelay","simulateUploadSpeed","simulateWriteDelay","storesPath","tmpDirPermissions","parseInt","self","contentTypes","extensions","minSize","maxSize","invalidFileError","Error","fileTooSmallError","fileSize","minFileSize","fileTooLargeError","maxFileSize","invalidFileExtension","fileExtension","allowedExtensions","invalidFileType","fileType","allowedContentTypes","onCheck","Array","method","check","size","getMinSize","getMaxSize","getExtensions","includes","getContentTypes","fileTypes","isContentTypeInList","list","wildCardGlob","wildcards","filter","item","indexOf","replace","isValid","result","err","fs","Npm","http","Future","methods","ufsComplete","storeName","token","String","checkToken","fut","tmpFile","removeTempFile","unlink","message","findOne","validate","rs","createReadStream","flags","encoding","autoClose","on","bindEnvironment","remove","throw","write","return","wait","ufsCreate","Object","complete","uploading","substr","lastIndexOf","progress","userId","getFilter","create","createToken","uploadUrl","getURL","ufsDelete","count","ufsImportURL","parsedUrl","URL","e","hostname","split","pop","originalUrl","warn","proto","test","unblock","get","res","ufsStop","WebApp","SparkMD5","domain","mkdirp","stream","zlib","startup","mode","stat","log","chmod","d","connectHandlers","use","req","next","parse","pathname","allowCORS","setHeader","regExp","RegExp","match","exec","writeHead","end","query","unique","hash","originalId","$ne","spark","ArrayBuffer","ws","createWriteStream","parseFloat","isNaN","Math","min","chunk","append","onRead","undefined","index","_sleepForMs","run","status","headers","ETag","modifiedAt","Date","toUTCString","uploadedAt","modifiedSince","range","total","unit","ranges","r","start","getReadStream","PassThrough","onReadError","emit","transformRead","accept","pipe","createGzip","createDeflate","insert","actions","action","modifiers","checkInsert","checkRemove","checkUpdate","_objectWithoutProperties","Mongo","collection","onCopyError","onFinishUpload","onValidate","onWriteError","permissions","transformWrite","Collection","value","copy","originalStore","copyId","generateToken","createdAt","errorHandler","finishHandler","readStream","data","getFileURL","copyTo","getWriteStream","once","after","before","delete","pattern","c","random","s","toString","round","toUpperCase","getRelativeURL","rootUrl","absoluteUrl","rootPath","trim","encodeURI","secure","request","response","setPermissions","writeStream","adaptive","capacity","chunkSize","maxChunkSize","maxTries","onAbort","onComplete","onCreate","onError","onProgress","onStart","onStop","retryDelay","transferDelay","RangeError","Blob","File","capacityMargin","offset","loaded","tries","postUrl","timeA","timeB","elapsedTime","startTime","finish","uploadedFile","abort","getAverageSpeed","seconds","getElapsedTime","getLoaded","isUploading","now","getFile","getProgress","getRemainingTime","averageSpeed","remainingBytes","max","getSpeed","getTotal","isComplete","readChunk","slice","setTimeout","sendChunk","duration","abs","xhr","XMLHttpRequest","onreadystatechange","readyState","open","send","stop"],"mappings":"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","file":"/packages/jalik_ufs.js","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { Config } from './ufs-config';\nimport { Filter } from './ufs-filter';\nimport { MIME } from './ufs-mime';\nimport { Store } from './ufs-store';\nimport { StorePermissions } from './ufs-store-permissions';\nimport { Tokens } from './ufs-tokens';\nimport { Uploader } from './ufs-uploader';\n\nconst stores = {};\n\nexport const UploadFS = {\n\t/**\n\t * Contains all stores\n\t */\n\tstore: {},\n\n\t/**\n\t * Collection of tokens\n\t */\n\ttokens: Tokens,\n\n\t/**\n\t * Adds the \"etag\" attribute to files\n\t * @param where\n\t */\n\taddETagAttributeToFiles(where) {\n\t\tthis.getStores().forEach((store) => {\n\t\t\tconst files = store.getCollection();\n\n\t\t\t// By default update only files with no path set\n\t\t\tfiles.find(where || { etag: null }, { fields: { _id: 1 } }).forEach((file) => {\n\t\t\t\tfiles.direct.update(file._id, { $set: { etag: this.generateEtag() } });\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * Adds the MIME type for an extension\n\t * @param extension\n\t * @param mime\n\t */\n\taddMimeType(extension, mime) {\n\t\tMIME[extension.toLowerCase()] = mime;\n\t},\n\n\t/**\n\t * Adds the \"path\" attribute to files\n\t * @param where\n\t */\n\taddPathAttributeToFiles(where) {\n\t\tthis.getStores().forEach((store) => {\n\t\t\tconst files = store.getCollection();\n\n\t\t\t// By default update only files with no path set\n\t\t\tfiles.find(where || { path: null }, { fields: { _id: 1 } }).forEach((file) => {\n\t\t\t\tfiles.direct.update(file._id, { $set: { path: store.getFileRelativeURL(file._id) } });\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * Registers the store\n\t * @param store\n\t */\n\taddStore(store) {\n\t\tif (!(store instanceof Store)) {\n\t\t\tthrow new TypeError('ufs: store is not an instance of UploadFS.Store.');\n\t\t}\n\t\tstores[store.getName()] = store;\n\t},\n\n\t/**\n\t * Generates a unique ETag\n\t * @return {string}\n\t */\n\tgenerateEtag() {\n\t\treturn Random.id();\n\t},\n\n\t/**\n\t * Returns the MIME type of the extension\n\t * @param extension\n\t * @returns {*}\n\t */\n\tgetMimeType(extension) {\n\t\textension = extension.toLowerCase();\n\t\treturn MIME[extension];\n\t},\n\n\t/**\n\t * Returns all MIME types\n\t */\n\tgetMimeTypes() {\n\t\treturn MIME;\n\t},\n\n\t/**\n\t * Returns the store by its name\n\t * @param name\n\t * @return {UploadFS.Store}\n\t */\n\tgetStore(name) {\n\t\treturn stores[name];\n\t},\n\n\t/**\n\t * Returns all stores\n\t * @return {object}\n\t */\n\tgetStores() {\n\t\treturn stores;\n\t},\n\n\t/**\n\t * Returns the temporary file path\n\t * @param fileId\n\t * @return {string}\n\t */\n\tgetTempFilePath(fileId) {\n\t\treturn `${this.config.tmpDir}/${fileId}`;\n\t},\n\n\t/**\n\t * Imports a file from a URL\n\t * @param url\n\t * @param file\n\t * @param store\n\t * @param callback\n\t */\n\timportFromURL(url, file, store, callback) {\n\t\tif (typeof store === 'string') {\n\t\t\tMeteor.call('ufsImportURL', url, file, store, callback);\n\t\t} else if (typeof store === 'object') {\n\t\t\tstore.importFromURL(url, file, callback);\n\t\t}\n\t},\n\n\t/**\n\t * Returns file and data as ArrayBuffer for each files in the event\n\t * @deprecated\n\t * @param event\n\t * @param callback\n\t */\n\treadAsArrayBuffer() {\n\t\tconsole.error('UploadFS.readAsArrayBuffer is deprecated, see https://github.com/jalik/jalik-ufs#uploading-from-a-file');\n\t},\n\n\t/**\n\t * Opens a dialog to select a single file\n\t * @param callback\n\t */\n\tselectFile(callback) {\n\t\tconst input = document.createElement('input');\n\t\tinput.type = 'file';\n\t\tinput.multiple = false;\n\t\tinput.onchange = (ev) => {\n\t\t\tconst { files } = ev.target;\n\t\t\tcallback.call(UploadFS, files[0]);\n\t\t};\n\t\t// Fix for iOS/Safari\n\t\tconst div = document.createElement('div');\n\t\tdiv.className = 'ufs-file-selector';\n\t\tdiv.style = 'display:none; height:0; width:0; overflow: hidden;';\n\t\tdiv.appendChild(input);\n\t\tdocument.body.appendChild(div);\n\t\t// Trigger file selection\n\t\tinput.click();\n\t},\n\n\t/**\n\t * Opens a dialog to select multiple files\n\t * @param callback\n\t */\n\tselectFiles(callback) {\n\t\tconst input = document.createElement('input');\n\t\tinput.type = 'file';\n\t\tinput.multiple = true;\n\t\tinput.onchange = (ev) => {\n\t\t\tconst { files } = ev.target;\n\n\t\t\tfor (let i = 0; i < files.length; i += 1) {\n\t\t\t\tcallback.call(UploadFS, files[i]);\n\t\t\t}\n\t\t};\n\t\t// Fix for iOS/Safari\n\t\tconst div = document.createElement('div');\n\t\tdiv.className = 'ufs-file-selector';\n\t\tdiv.style = 'display:none; height:0; width:0; overflow: hidden;';\n\t\tdiv.appendChild(input);\n\t\tdocument.body.appendChild(div);\n\t\t// Trigger file selection\n\t\tinput.click();\n\t},\n};\n\nif (Meteor.isServer) {\n\trequire('./ufs-methods');\n\trequire('./ufs-server');\n}\n\n/**\n * UploadFS Configuration\n * @type {Config}\n */\nUploadFS.config = new Config();\n\n// Add classes to global namespace\nUploadFS.Config = Config;\nUploadFS.Filter = Filter;\nUploadFS.Store = Store;\nUploadFS.StorePermissions = StorePermissions;\nUploadFS.Uploader = Uploader;\n\nif (Meteor.isServer) {\n\t// Expose the module globally\n\tif (typeof global !== 'undefined') {\n\t\tglobal.UploadFS = UploadFS;\n\t}\n} else if (Meteor.isClient) {\n\t// Expose the module globally\n\tif (typeof window !== 'undefined') {\n\t\twindow.UploadFS = UploadFS;\n\t}\n}\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\nimport { _ } from 'meteor/underscore';\n\nimport { StorePermissions } from './ufs-store-permissions';\n\n/**\n * UploadFS configuration\n */\nexport class Config {\n\tconstructor(options) {\n\t\t// Default options\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\tdefaultStorePermissions: null,\n\t\t\t\thttps: false,\n\t\t\t\tsimulateReadDelay: 0,\n\t\t\t\tsimulateUploadSpeed: 0,\n\t\t\t\tsimulateWriteDelay: 0,\n\t\t\t\tstoresPath: 'ufs',\n\t\t\t\ttmpDir: '/tmp/ufs',\n\t\t\t\ttmpDirPermissions: '0700',\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (options.defaultStorePermissions && !(options.defaultStorePermissions instanceof StorePermissions)) {\n\t\t\tthrow new TypeError('Config: defaultStorePermissions is not an instance of StorePermissions');\n\t\t}\n\t\tif (typeof options.https !== 'boolean') {\n\t\t\tthrow new TypeError('Config: https is not a function');\n\t\t}\n\t\tif (typeof options.simulateReadDelay !== 'number') {\n\t\t\tthrow new TypeError('Config: simulateReadDelay is not a number');\n\t\t}\n\t\tif (typeof options.simulateUploadSpeed !== 'number') {\n\t\t\tthrow new TypeError('Config: simulateUploadSpeed is not a number');\n\t\t}\n\t\tif (typeof options.simulateWriteDelay !== 'number') {\n\t\t\tthrow new TypeError('Config: simulateWriteDelay is not a number');\n\t\t}\n\t\tif (typeof options.storesPath !== 'string') {\n\t\t\tthrow new TypeError('Config: storesPath is not a string');\n\t\t}\n\t\tif (typeof options.tmpDir !== 'string') {\n\t\t\tthrow new TypeError('Config: tmpDir is not a string');\n\t\t}\n\t\tif (typeof options.tmpDirPermissions !== 'string') {\n\t\t\tthrow new TypeError('Config: tmpDirPermissions is not a string');\n\t\t}\n\n\t\t/**\n\t\t * Default store permissions\n\t\t * @type {UploadFS.StorePermissions}\n\t\t */\n\t\tthis.defaultStorePermissions = options.defaultStorePermissions;\n\t\t/**\n\t\t * Use or not secured protocol in URLS\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.https = options.https;\n\t\t/**\n\t\t * The simulation read delay\n\t\t * @type {Number}\n\t\t */\n\t\tthis.simulateReadDelay = parseInt(options.simulateReadDelay);\n\t\t/**\n\t\t * The simulation upload speed\n\t\t * @type {Number}\n\t\t */\n\t\tthis.simulateUploadSpeed = parseInt(options.simulateUploadSpeed);\n\t\t/**\n\t\t * The simulation write delay\n\t\t * @type {Number}\n\t\t */\n\t\tthis.simulateWriteDelay = parseInt(options.simulateWriteDelay);\n\t\t/**\n\t\t * The URL root path of stores\n\t\t * @type {string}\n\t\t */\n\t\tthis.storesPath = options.storesPath;\n\t\t/**\n\t\t * The temporary directory of uploading files\n\t\t * @type {string}\n\t\t */\n\t\tthis.tmpDir = options.tmpDir;\n\t\t/**\n\t\t * The permissions of the temporary directory\n\t\t * @type {string}\n\t\t */\n\t\tthis.tmpDirPermissions = options.tmpDirPermissions;\n\t}\n}\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\nimport { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\n\n/**\n * File filter\n */\nexport class Filter {\n\tconstructor(options) {\n\t\tconst self = this;\n\n\t\t// Default options\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\tcontentTypes: null,\n\t\t\t\textensions: null,\n\t\t\t\tminSize: 1,\n\t\t\t\tmaxSize: 0,\n\t\t\t\tinvalidFileError: () => new Meteor.Error('invalid-file', 'File is not valid'),\n\t\t\t\tfileTooSmallError: (fileSize, minFileSize) =>\n\t\t\t\t\tnew Meteor.Error('file-too-small', `File size (size = ${fileSize}) is too small (min = ${minFileSize})`),\n\t\t\t\tfileTooLargeError: (fileSize, maxFileSize) =>\n\t\t\t\t\tnew Meteor.Error('file-too-large', `File size (size = ${fileSize}) is too large (max = ${maxFileSize})`),\n\t\t\t\tinvalidFileExtension: (fileExtension, allowedExtensions) =>\n\t\t\t\t\tnew Meteor.Error('invalid-file-extension', `File extension \"${fileExtension}\" is not accepted (${allowedExtensions})`),\n\t\t\t\tinvalidFileType: (fileType, allowedContentTypes) =>\n\t\t\t\t\tnew Meteor.Error('invalid-file-type', `File type \"${fileType}\" is not accepted (${allowedContentTypes})`),\n\t\t\t\tonCheck: this.onCheck,\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (options.contentTypes && !(options.contentTypes instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: contentTypes is not an Array');\n\t\t}\n\t\tif (options.extensions && !(options.extensions instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: extensions is not an Array');\n\t\t}\n\t\tif (typeof options.minSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: minSize is not a number');\n\t\t}\n\t\tif (typeof options.maxSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: maxSize is not a number');\n\t\t}\n\t\tif (options.onCheck && typeof options.onCheck !== 'function') {\n\t\t\tthrow new TypeError('Filter: onCheck is not a function');\n\t\t}\n\n\t\t// Public attributes\n\t\tself.options = options;\n\t\t['onCheck'].forEach((method) => {\n\t\t\tif (typeof options[method] === 'function') {\n\t\t\t\tself[method] = options[method];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks the file\n\t * @param file\n\t */\n\tcheck(file) {\n\t\tlet error = null;\n\t\tif (typeof file !== 'object' || !file) {\n\t\t\terror = this.options.invalidFileError();\n\t\t}\n\t\t// Check size\n\t\tconst fileSize = file.size;\n\t\tconst minSize = this.getMinSize();\n\t\tif (fileSize <= 0 || fileSize < minSize) {\n\t\t\terror = this.options.fileTooSmallError(fileSize, minSize);\n\t\t}\n\t\tconst maxSize = this.getMaxSize();\n\t\tif (maxSize > 0 && fileSize > maxSize) {\n\t\t\terror = this.options.fileTooLargeError(fileSize, maxSize);\n\t\t}\n\t\t// Check extension\n\t\tconst allowedExtensions = this.getExtensions();\n\t\tconst fileExtension = file.extension;\n\t\tif (allowedExtensions && !allowedExtensions.includes(fileExtension)) {\n\t\t\terror = this.options.invalidFileExtension(fileExtension, allowedExtensions);\n\t\t}\n\t\t// Check content type\n\t\tconst allowedContentTypes = this.getContentTypes();\n\t\tconst fileTypes = file.type;\n\t\tif (allowedContentTypes && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\n\t\t\terror = this.options.invalidFileType(fileTypes, allowedContentTypes);\n\t\t}\n\t\t// Apply custom check\n\t\tif (typeof this.onCheck === 'function' && !this.onCheck(file)) {\n\t\t\terror = new Meteor.Error('invalid-file', 'File does not match filter');\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the allowed content types\n\t * @return {Array}\n\t */\n\tgetContentTypes() {\n\t\treturn this.options.contentTypes;\n\t}\n\n\t/**\n\t * Returns the allowed extensions\n\t * @return {Array}\n\t */\n\tgetExtensions() {\n\t\treturn this.options.extensions;\n\t}\n\n\t/**\n\t * Returns the maximum file size\n\t * @return {Number}\n\t */\n\tgetMaxSize() {\n\t\treturn this.options.maxSize;\n\t}\n\n\t/**\n\t * Returns the minimum file size\n\t * @return {Number}\n\t */\n\tgetMinSize() {\n\t\treturn this.options.minSize;\n\t}\n\n\t/**\n\t * Checks if content type is in the given list\n\t * @param type\n\t * @param list\n\t * @return {boolean}\n\t */\n\tisContentTypeInList(type, list) {\n\t\tif (typeof type === 'string' && list instanceof Array) {\n\t\t\tif (list.includes(type)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst wildCardGlob = '/*';\n\t\t\tconst wildcards = list.filter((item) => item.indexOf(wildCardGlob) > 0);\n\n\t\t\tif (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Checks if the file matches filter\n\t * @param file\n\t * @return {boolean}\n\t */\n\tisValid(file) {\n\t\tlet result = true;\n\t\ttry {\n\t\t\tthis.check(file);\n\t\t} catch (err) {\n\t\t\tresult = false;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Executes custom checks\n\t * @param file\n\t * @return {boolean}\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonCheck(file) {\n\t\treturn true;\n\t}\n}\n","/* eslint-disable no-undef */\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { UploadFS } from './ufs';\nimport { Filter } from './ufs-filter';\nimport { Tokens } from './ufs-tokens';\n\nconst fs = Npm.require('fs');\nconst http = Npm.require('http');\nconst https = Npm.require('https');\nconst Future = Npm.require('fibers/future');\n\nif (Meteor.isServer) {\n\tMeteor.methods({\n\t\t/**\n\t\t * Completes the file transfer\n\t\t * @param fileId\n\t\t * @param storeName\n\t\t * @param token\n\t\t */\n\t\tufsComplete(fileId, storeName, token) {\n\t\t\tcheck(fileId, String);\n\t\t\tcheck(storeName, String);\n\t\t\tcheck(token, String);\n\n\t\t\t// Get store\n\t\t\tconst store = UploadFS.getStore(storeName);\n\t\t\tif (!store) {\n\t\t\t\tthrow new Meteor.Error('invalid-store', 'Store not found');\n\t\t\t}\n\t\t\t// Check token\n\t\t\tif (!store.checkToken(token, fileId)) {\n\t\t\t\tthrow new Meteor.Error('invalid-token', 'Token is not valid');\n\t\t\t}\n\n\t\t\tconst fut = new Future();\n\t\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\n\t\t\tconst removeTempFile = function () {\n\t\t\t\tfs.unlink(tmpFile, function (err) {\n\t\t\t\t\terr && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\t// todo check if temp file exists\n\n\t\t\t\t// Get file\n\t\t\t\tconst file = store.getCollection().findOne({ _id: fileId });\n\n\t\t\t\t// Validate file before moving to the store\n\t\t\t\tstore.validate(file);\n\n\t\t\t\t// Get the temp file\n\t\t\t\tconst rs = fs.createReadStream(tmpFile, {\n\t\t\t\t\tflags: 'r',\n\t\t\t\t\tencoding: null,\n\t\t\t\t\tautoClose: true,\n\t\t\t\t});\n\n\t\t\t\t// Clean upload if error occurs\n\t\t\t\trs.on(\n\t\t\t\t\t'error',\n\t\t\t\t\tMeteor.bindEnvironment(function (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\tstore.getCollection().remove({ _id: fileId });\n\t\t\t\t\t\tfut.throw(err);\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\t// Save file in the store\n\t\t\t\tstore.write(\n\t\t\t\t\trs,\n\t\t\t\t\tfileId,\n\t\t\t\t\tMeteor.bindEnvironment(function (err, file) {\n\t\t\t\t\t\tremoveTempFile();\n\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tfut.throw(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// File has been fully uploaded\n\t\t\t\t\t\t\t// so we don't need to keep the token anymore.\n\t\t\t\t\t\t\t// Also this ensure that the file cannot be modified with extra chunks later.\n\t\t\t\t\t\t\tTokens.remove({ fileId });\n\t\t\t\t\t\t\tfut.return(file);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\t// catch will not work if fut.wait() is outside try/catch\n\t\t\t\treturn fut.wait();\n\t\t\t} catch (err) {\n\t\t\t\t// If write failed, remove the file\n\t\t\t\tstore.getCollection().remove({ _id: fileId });\n\t\t\t\t// removeTempFile(); // todo remove temp file on error or try again ?\n\t\t\t\tthrow new Meteor.Error('ufs: cannot upload file', err);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Creates the file and returns the file upload token\n\t\t * @param file\n\t\t * @return {{fileId: string, token: *, url: *}}\n\t\t */\n\t\tufsCreate(file) {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (typeof file.name !== 'string' || !file.name.length) {\n\t\t\t\tthrow new Meteor.Error('invalid-file-name', 'file name is not valid');\n\t\t\t}\n\t\t\tif (typeof file.store !== 'string' || !file.store.length) {\n\t\t\t\tthrow new Meteor.Error('invalid-store', 'store is not valid');\n\t\t\t}\n\t\t\t// Get store\n\t\t\tconst store = UploadFS.getStore(file.store);\n\t\t\tif (!store) {\n\t\t\t\tthrow new Meteor.Error('invalid-store', 'Store not found');\n\t\t\t}\n\n\t\t\t// Set default info\n\t\t\tfile.complete = false;\n\t\t\tfile.uploading = false;\n\t\t\tfile.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\n\t\t\t// Assign file MIME type based on the extension\n\t\t\tif (file.extension && !file.type) {\n\t\t\t\tfile.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\n\t\t\t}\n\t\t\tfile.progress = 0;\n\t\t\tfile.size = parseInt(file.size) || 0;\n\t\t\tfile.userId = file.userId || this.userId;\n\n\t\t\t// Check if the file matches store filter\n\t\t\tconst filter = store.getFilter();\n\t\t\tif (filter instanceof Filter) {\n\t\t\t\tfilter.check(file);\n\t\t\t}\n\n\t\t\t// Create the file\n\t\t\tconst fileId = store.create(file);\n\t\t\tconst token = store.createToken(fileId);\n\t\t\tconst uploadUrl = store.getURL(`${fileId}?token=${token}`);\n\n\t\t\treturn {\n\t\t\t\tfileId,\n\t\t\t\ttoken,\n\t\t\t\turl: uploadUrl,\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Deletes a file\n\t\t * @param fileId\n\t\t * @param storeName\n\t\t * @param token\n\t\t * @returns {*}\n\t\t */\n\t\tufsDelete(fileId, storeName, token) {\n\t\t\tcheck(fileId, String);\n\t\t\tcheck(storeName, String);\n\t\t\tcheck(token, String);\n\n\t\t\t// Check store\n\t\t\tconst store = UploadFS.getStore(storeName);\n\t\t\tif (!store) {\n\t\t\t\tthrow new Meteor.Error('invalid-store', 'Store not found');\n\t\t\t}\n\t\t\t// Ignore files that does not exist\n\t\t\tif (store.getCollection().find({ _id: fileId }).count() === 0) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t// Check token\n\t\t\tif (!store.checkToken(token, fileId)) {\n\t\t\t\tthrow new Meteor.Error('invalid-token', 'Token is not valid');\n\t\t\t}\n\t\t\treturn store.getCollection().remove({ _id: fileId });\n\t\t},\n\n\t\t/**\n\t\t * Imports a file from the URL\n\t\t * @param url\n\t\t * @param file\n\t\t * @param storeName\n\t\t * @return {*}\n\t\t */\n\t\tufsImportURL(url, file, storeName) {\n\t\t\tcheck(url, String);\n\t\t\tcheck(file, Object);\n\t\t\tcheck(storeName, String);\n\n\t\t\t// Check URL\n\t\t\tif (typeof url !== 'string' || url.length <= 0) {\n\t\t\t\tthrow new Meteor.Error('invalid-url', 'The url is not valid');\n\t\t\t}\n\t\t\t// Check file\n\t\t\tif (typeof file !== 'object' || file === null) {\n\t\t\t\tthrow new Meteor.Error('invalid-file', 'The file is not valid');\n\t\t\t}\n\t\t\t// Check store\n\t\t\tconst store = UploadFS.getStore(storeName);\n\t\t\tif (!store) {\n\t\t\t\tthrow new Meteor.Error('invalid-store', 'The store does not exist');\n\t\t\t}\n\n\t\t\tlet parsedUrl;\n\t\t\ttry {\n\t\t\t\tparsedUrl = new URL(url);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Meteor.Error('invalid-url', 'The url is not valid');\n\t\t\t}\n\n\t\t\tif (['localhost', '127.0.0.1', '0.0.0.0'].includes(parsedUrl.hostname)) {\n\t\t\t\tthrow new Meteor.Error('invalid-url', 'URL cannot reference localhost');\n\t\t\t}\n\n\t\t\t// Extract file info\n\t\t\tif (!file.name) {\n\t\t\t\tfile.name = url.replace(/\\?.*$/, '').split('/').pop();\n\t\t\t}\n\t\t\tif (file.name && !file.extension) {\n\t\t\t\tfile.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\n\t\t\t}\n\t\t\tif (file.extension && !file.type) {\n\t\t\t\t// Assign file MIME type based on the extension\n\t\t\t\tfile.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\n\t\t\t}\n\t\t\t// Check if file is valid\n\t\t\tif (store.getFilter() instanceof Filter) {\n\t\t\t\tstore.getFilter().check(file);\n\t\t\t}\n\n\t\t\tif (file.originalUrl) {\n\t\t\t\tconsole.warn('ufs: The \"originalUrl\" attribute is automatically set when importing a file from a URL');\n\t\t\t}\n\n\t\t\t// Add original URL\n\t\t\tfile.originalUrl = url;\n\n\t\t\t// Create the file\n\t\t\tfile.complete = false;\n\t\t\tfile.uploading = true;\n\t\t\tfile.progress = 0;\n\t\t\tfile._id = store.create(file);\n\n\t\t\tconst fut = new Future();\n\t\t\tlet proto;\n\n\t\t\t// Detect protocol to use\n\t\t\tif (/http:\\/\\//i.test(url)) {\n\t\t\t\tproto = http;\n\t\t\t} else if (/https:\\/\\//i.test(url)) {\n\t\t\t\tproto = https;\n\t\t\t}\n\n\t\t\tthis.unblock();\n\n\t\t\t// Download file\n\t\t\tproto\n\t\t\t\t.get(\n\t\t\t\t\turl,\n\t\t\t\t\tMeteor.bindEnvironment(function (res) {\n\t\t\t\t\t\t// Save the file in the store\n\t\t\t\t\t\tstore.write(res, file._id, function (err, file) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tfut.throw(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfut.return(file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\t.on('error', function (err) {\n\t\t\t\t\tfut.throw(err);\n\t\t\t\t});\n\t\t\treturn fut.wait();\n\t\t},\n\n\t\t/**\n\t\t * Marks the file uploading as stopped\n\t\t * @param fileId\n\t\t * @param storeName\n\t\t * @param token\n\t\t * @returns {*}\n\t\t */\n\t\tufsStop(fileId, storeName, token) {\n\t\t\tcheck(fileId, String);\n\t\t\tcheck(storeName, String);\n\t\t\tcheck(token, String);\n\n\t\t\t// Check store\n\t\t\tconst store = UploadFS.getStore(storeName);\n\t\t\tif (!store) {\n\t\t\t\tthrow new Meteor.Error('invalid-store', 'Store not found');\n\t\t\t}\n\t\t\t// Check file\n\t\t\tconst file = store.getCollection().find({ _id: fileId }, { fields: { userId: 1 } });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Meteor.Error('invalid-file', 'File not found');\n\t\t\t}\n\t\t\t// Check token\n\t\t\tif (!store.checkToken(token, fileId)) {\n\t\t\t\tthrow new Meteor.Error('invalid-token', 'Token is not valid');\n\t\t\t}\n\n\t\t\treturn store.getCollection().update(\n\t\t\t\t{ _id: fileId },\n\t\t\t\t{\n\t\t\t\t\t$set: { uploading: false },\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t});\n}\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\n/**\n * MIME types and extensions\n */\nexport const MIME = {\n\t// application\n\t'7z': 'application/x-7z-compressed',\n\t'arc': 'application/octet-stream',\n\t'ai': 'application/postscript',\n\t'bin': 'application/octet-stream',\n\t'bz': 'application/x-bzip',\n\t'bz2': 'application/x-bzip2',\n\t'eps': 'application/postscript',\n\t'exe': 'application/octet-stream',\n\t'gz': 'application/x-gzip',\n\t'gzip': 'application/x-gzip',\n\t'js': 'application/javascript',\n\t'json': 'application/json',\n\t'ogx': 'application/ogg',\n\t'pdf': 'application/pdf',\n\t'ps': 'application/postscript',\n\t'psd': 'application/octet-stream',\n\t'rar': 'application/x-rar-compressed',\n\t'rev': 'application/x-rar-compressed',\n\t'swf': 'application/x-shockwave-flash',\n\t'tar': 'application/x-tar',\n\t'xhtml': 'application/xhtml+xml',\n\t'xml': 'application/xml',\n\t'zip': 'application/zip',\n\n\t// audio\n\t'aif': 'audio/aiff',\n\t'aifc': 'audio/aiff',\n\t'aiff': 'audio/aiff',\n\t'au': 'audio/basic',\n\t'flac': 'audio/flac',\n\t'midi': 'audio/midi',\n\t'mp2': 'audio/mpeg',\n\t'mp3': 'audio/mpeg',\n\t'mpa': 'audio/mpeg',\n\t'oga': 'audio/ogg',\n\t'ogg': 'audio/ogg',\n\t'opus': 'audio/ogg',\n\t'ra': 'audio/vnd.rn-realaudio',\n\t'spx': 'audio/ogg',\n\t'wav': 'audio/x-wav',\n\t'weba': 'audio/webm',\n\t'wma': 'audio/x-ms-wma',\n\n\t// image\n\t'avs': 'image/avs-video',\n\t'bmp': 'image/x-windows-bmp',\n\t'gif': 'image/gif',\n\t'ico': 'image/vnd.microsoft.icon',\n\t'jpeg': 'image/jpeg',\n\t'jpg': 'image/jpg',\n\t'mjpg': 'image/x-motion-jpeg',\n\t'pic': 'image/pic',\n\t'png': 'image/png',\n\t'svg': 'image/svg+xml',\n\t'tif': 'image/tiff',\n\t'tiff': 'image/tiff',\n\n\t// text\n\t'css': 'text/css',\n\t'csv': 'text/csv',\n\t'html': 'text/html',\n\t'txt': 'text/plain',\n\n\t// video\n\t'avi': 'video/avi',\n\t'dv': 'video/x-dv',\n\t'flv': 'video/x-flv',\n\t'mov': 'video/quicktime',\n\t'mp4': 'video/mp4',\n\t'mpeg': 'video/mpeg',\n\t'mpg': 'video/mpg',\n\t'ogv': 'video/ogg',\n\t'vdo': 'video/vdo',\n\t'webm': 'video/webm',\n\t'wmv': 'video/x-ms-wmv',\n\n\t// specific to vendors\n\t'doc': 'application/msword',\n\t'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t'odb': 'application/vnd.oasis.opendocument.database',\n\t'odc': 'application/vnd.oasis.opendocument.chart',\n\t'odf': 'application/vnd.oasis.opendocument.formula',\n\t'odg': 'application/vnd.oasis.opendocument.graphics',\n\t'odi': 'application/vnd.oasis.opendocument.image',\n\t'odm': 'application/vnd.oasis.opendocument.text-master',\n\t'odp': 'application/vnd.oasis.opendocument.presentation',\n\t'ods': 'application/vnd.oasis.opendocument.spreadsheet',\n\t'odt': 'application/vnd.oasis.opendocument.text',\n\t'otg': 'application/vnd.oasis.opendocument.graphics-template',\n\t'otp': 'application/vnd.oasis.opendocument.presentation-template',\n\t'ots': 'application/vnd.oasis.opendocument.spreadsheet-template',\n\t'ott': 'application/vnd.oasis.opendocument.text-template',\n\t'ppt': 'application/vnd.ms-powerpoint',\n\t'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t'xls': 'application/vnd.ms-excel',\n\t'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n};\n","/* eslint-disable no-undef */\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\nimport { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\n// eslint-disable-next-line import/no-unresolved\nimport SparkMD5 from 'spark-md5';\n\nimport { UploadFS } from './ufs';\n\nif (Meteor.isServer) {\n\tconst domain = Npm.require('domain');\n\tconst fs = Npm.require('fs');\n\t// eslint-disable-next-line no-unused-vars\n\tconst http = Npm.require('http');\n\t// eslint-disable-next-line no-unused-vars\n\tconst https = Npm.require('https');\n\tconst mkdirp = Npm.require('mkdirp');\n\tconst stream = Npm.require('stream');\n\tconst URL = Npm.require('url');\n\tconst zlib = Npm.require('zlib');\n\n\tMeteor.startup(() => {\n\t\tconst path = UploadFS.config.tmpDir;\n\t\tconst mode = UploadFS.config.tmpDirPermissions;\n\n\t\tfs.stat(path, (err) => {\n\t\t\tif (err) {\n\t\t\t\t// Create the temp directory\n\t\t\t\tmkdirp(path, { mode }, (err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.error(`ufs: cannot create temp directory at \"${path}\" (${err.message})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(`ufs: temp directory created at \"${path}\"`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Set directory permissions\n\t\t\t\tfs.chmod(path, mode, (err) => {\n\t\t\t\t\terr && console.error(`ufs: cannot set temp directory permissions ${mode} (${err.message})`);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\t// Create domain to handle errors\n\t// and possibly avoid server crashes.\n\tconst d = domain.create();\n\n\td.on('error', (err) => {\n\t\tconsole.error(`ufs: ${err.message}`);\n\t});\n\n\t// Listen HTTP requests to serve files\n\tWebApp.connectHandlers.use((req, res, next) => {\n\t\t// Quick check to see if request should be caught\n\t\tif (!req.url.includes(`/${UploadFS.config.storesPath}/`)) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove store path\n\t\tconst parsedUrl = URL.parse(req.url);\n\t\tconst path = parsedUrl.pathname.substr(UploadFS.config.storesPath.length + 1);\n\n\t\tconst allowCORS = () => {\n\t\t\t// res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\n\t\t\tres.setHeader('Access-Control-Allow-Methods', 'POST');\n\t\t\tres.setHeader('Access-Control-Allow-Origin', '*');\n\t\t\tres.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n\t\t};\n\n\t\tif (req.method === 'OPTIONS') {\n\t\t\tconst regExp = new RegExp('^/([^/?]+)/([^/?]+)$');\n\t\t\tconst match = regExp.exec(path);\n\n\t\t\t// Request is not valid\n\t\t\tif (match === null) {\n\t\t\t\tres.writeHead(400);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get store\n\t\t\tconst store = UploadFS.getStore(match[1]);\n\t\t\tif (!store) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a store is found, go ahead and allow the origin\n\t\t\tallowCORS();\n\n\t\t\tnext();\n\t\t} else if (req.method === 'POST') {\n\t\t\t// Get store\n\t\t\tconst regExp = new RegExp('^/([^/?]+)/([^/?]+)$');\n\t\t\tconst match = regExp.exec(path);\n\n\t\t\t// Request is not valid\n\t\t\tif (match === null) {\n\t\t\t\tres.writeHead(400);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get store\n\t\t\tconst store = UploadFS.getStore(match[1]);\n\t\t\tif (!store) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a store is found, go ahead and allow the origin\n\t\t\tallowCORS();\n\n\t\t\t// Get file\n\t\t\tconst fileId = match[2];\n\t\t\tif (store.getCollection().find({ _id: fileId }).count() === 0) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check upload token\n\t\t\tif (!store.checkToken(req.query.token, fileId)) {\n\t\t\t\tres.writeHead(403);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check if duplicate\n\t\t\tconst unique = function (hash) {\n\t\t\t\tconst originalId = store.getCollection().findOne({ hash, _id: { $ne: fileId } });\n\t\t\t\treturn originalId ? originalId._id : false;\n\t\t\t};\n\n\t\t\tconst spark = new SparkMD5.ArrayBuffer();\n\t\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\t\t\tconst ws = fs.createWriteStream(tmpFile, { flags: 'a' });\n\t\t\tconst fields = { uploading: true };\n\t\t\tconst progress = parseFloat(req.query.progress);\n\t\t\tif (!isNaN(progress) && progress > 0) {\n\t\t\t\tfields.progress = Math.min(progress, 1);\n\t\t\t}\n\n\t\t\treq.on('data', (chunk) => {\n\t\t\t\tws.write(chunk);\n\t\t\t\tspark.append(chunk);\n\t\t\t});\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\treq.on('error', (err) => {\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t});\n\t\t\treq.on(\n\t\t\t\t'end',\n\t\t\t\tMeteor.bindEnvironment(() => {\n\t\t\t\t\t// Update completed state without triggering hooks\n\t\t\t\t\tfields.hash = spark.end();\n\t\t\t\t\tfields.originalId = unique(fields.hash);\n\t\t\t\t\tstore.getCollection().direct.update({ _id: fileId }, { $set: fields });\n\t\t\t\t\tws.end();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tws.on('error', (err) => {\n\t\t\t\tconsole.error(`ufs: cannot write chunk of file \"${fileId}\" (${err.message})`);\n\t\t\t\tfs.unlink(tmpFile, (err) => {\n\t\t\t\t\terr && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\n\t\t\t\t});\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t});\n\t\t\tws.on('finish', () => {\n\t\t\t\tres.writeHead(204, { 'Content-Type': 'text/plain' });\n\t\t\t\tres.end();\n\t\t\t});\n\t\t} else if (req.method === 'GET') {\n\t\t\t// Get store, file Id and file name\n\t\t\tconst regExp = new RegExp('^/([^/?]+)/([^/?]+)(?:/([^/?]+))?$');\n\t\t\tconst match = regExp.exec(path);\n\n\t\t\t// Avoid 504 Gateway timeout error\n\t\t\t// if file is not handled by UploadFS.\n\t\t\tif (match === null) {\n\t\t\t\tnext();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get store\n\t\t\tconst storeName = match[1];\n\t\t\tconst store = UploadFS.getStore(storeName);\n\n\t\t\tif (!store) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (store.onRead !== null && store.onRead !== undefined && typeof store.onRead !== 'function') {\n\t\t\t\tconsole.error(`ufs: Store.onRead is not a function in store \"${storeName}\"`);\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove file extension from file Id\n\t\t\tconst index = match[2].indexOf('.');\n\t\t\tconst fileId = index !== -1 ? match[2].substr(0, index) : match[2];\n\n\t\t\t// Get file from database\n\t\t\tconst file = store.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Simulate read speed\n\t\t\tif (UploadFS.config.simulateReadDelay) {\n\t\t\t\tMeteor._sleepForMs(UploadFS.config.simulateReadDelay);\n\t\t\t}\n\n\t\t\td.run(() => {\n\t\t\t\t// Check if the file can be accessed\n\t\t\t\tif (store.onRead.call(store, fileId, file, req, res) !== false) {\n\t\t\t\t\tconst options = {};\n\t\t\t\t\tlet status = 200;\n\n\t\t\t\t\t// Prepare response headers\n\t\t\t\t\tconst headers = {\n\t\t\t\t\t\t'Content-Type': file.type,\n\t\t\t\t\t\t'Content-Length': file.size,\n\t\t\t\t\t};\n\n\t\t\t\t\t// Add ETag header\n\t\t\t\t\tif (typeof file.etag === 'string') {\n\t\t\t\t\t\theaders.ETag = file.etag;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add Last-Modified header\n\t\t\t\t\tif (file.modifiedAt instanceof Date) {\n\t\t\t\t\t\theaders['Last-Modified'] = file.modifiedAt.toUTCString();\n\t\t\t\t\t} else if (file.uploadedAt instanceof Date) {\n\t\t\t\t\t\theaders['Last-Modified'] = file.uploadedAt.toUTCString();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Parse request headers\n\t\t\t\t\tif (typeof req.headers === 'object') {\n\t\t\t\t\t\t// Compare ETag\n\t\t\t\t\t\tif (req.headers['if-none-match']) {\n\t\t\t\t\t\t\tif (file.etag === req.headers['if-none-match']) {\n\t\t\t\t\t\t\t\tres.writeHead(304); // Not Modified\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Compare file modification date\n\t\t\t\t\t\tif (req.headers['if-modified-since']) {\n\t\t\t\t\t\t\tconst modifiedSince = new Date(req.headers['if-modified-since']);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(file.modifiedAt instanceof Date && file.modifiedAt > modifiedSince) ||\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-mixed-operators\n\t\t\t\t\t\t\t\t(file.uploadedAt instanceof Date && file.uploadedAt > modifiedSince)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tres.writeHead(304); // Not Modified\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Support range request\n\t\t\t\t\t\tif (typeof req.headers.range === 'string') {\n\t\t\t\t\t\t\tconst { range } = req.headers;\n\n\t\t\t\t\t\t\t// Range is not valid\n\t\t\t\t\t\t\tif (!range) {\n\t\t\t\t\t\t\t\tres.writeHead(416);\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst total = file.size;\n\t\t\t\t\t\t\tconst unit = range.substr(0, range.indexOf('='));\n\n\t\t\t\t\t\t\tif (unit !== 'bytes') {\n\t\t\t\t\t\t\t\tres.writeHead(416);\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst ranges = range\n\t\t\t\t\t\t\t\t.substr(unit.length)\n\t\t\t\t\t\t\t\t.replace(/[^0-9\\-,]/, '')\n\t\t\t\t\t\t\t\t.split(',');\n\n\t\t\t\t\t\t\tif (ranges.length > 1) {\n\t\t\t\t\t\t\t\t// todo: support multipart ranges: https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst r = ranges[0].split('-');\n\t\t\t\t\t\t\t\tconst start = parseInt(r[0], 10);\n\t\t\t\t\t\t\t\tconst end = r[1] ? parseInt(r[1], 10) : total - 1;\n\n\t\t\t\t\t\t\t\t// Range is not valid\n\t\t\t\t\t\t\t\tif (start < 0 || end >= total || start > end) {\n\t\t\t\t\t\t\t\t\tres.writeHead(416);\n\t\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Update headers\n\t\t\t\t\t\t\t\theaders['Content-Range'] = `bytes ${start}-${end}/${total}`;\n\t\t\t\t\t\t\t\theaders['Content-Length'] = end - start + 1;\n\t\t\t\t\t\t\t\toptions.start = start;\n\t\t\t\t\t\t\t\toptions.end = end;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstatus = 206; // partial content\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\theaders['Accept-Ranges'] = 'bytes';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Open the file stream\n\t\t\t\t\tconst rs = store.getReadStream(fileId, file, options);\n\t\t\t\t\tconst ws = new stream.PassThrough();\n\n\t\t\t\t\trs.on(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\tMeteor.bindEnvironment((err) => {\n\t\t\t\t\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tws.on(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\tMeteor.bindEnvironment((err) => {\n\t\t\t\t\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tws.on('close', () => {\n\t\t\t\t\t\t// Close output stream at the end\n\t\t\t\t\t\tws.emit('end');\n\t\t\t\t\t});\n\n\t\t\t\t\t// Transform stream\n\t\t\t\t\tstore.transformRead(rs, ws, fileId, file, req, headers);\n\n\t\t\t\t\t// Parse request headers\n\t\t\t\t\tif (typeof req.headers === 'object') {\n\t\t\t\t\t\t// Compress data using if needed (ignore audio/video as they are already compressed)\n\t\t\t\t\t\tif (typeof req.headers['accept-encoding'] === 'string' && !/^(audio|video)/.test(file.type)) {\n\t\t\t\t\t\t\tconst accept = req.headers['accept-encoding'];\n\n\t\t\t\t\t\t\t// Compress with gzip\n\t\t\t\t\t\t\tif (accept.match(/\\bgzip\\b/)) {\n\t\t\t\t\t\t\t\theaders['Content-Encoding'] = 'gzip';\n\t\t\t\t\t\t\t\tdelete headers['Content-Length'];\n\t\t\t\t\t\t\t\tres.writeHead(status, headers);\n\t\t\t\t\t\t\t\tws.pipe(zlib.createGzip()).pipe(res);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Compress with deflate\n\t\t\t\t\t\t\tif (accept.match(/\\bdeflate\\b/)) {\n\t\t\t\t\t\t\t\theaders['Content-Encoding'] = 'deflate';\n\t\t\t\t\t\t\t\tdelete headers['Content-Length'];\n\t\t\t\t\t\t\t\tres.writeHead(status, headers);\n\t\t\t\t\t\t\t\tws.pipe(zlib.createDeflate()).pipe(res);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Send raw data\n\t\t\t\t\tif (!headers['Content-Encoding']) {\n\t\t\t\t\t\tres.writeHead(status, headers);\n\t\t\t\t\t\tws.pipe(res);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.end();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t});\n}\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\nimport { _ } from 'meteor/underscore';\n\n/**\n * Store permissions\n */\nexport class StorePermissions {\n\tconstructor(options) {\n\t\t// Default options\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\tinsert: null,\n\t\t\t\tremove: null,\n\t\t\t\tupdate: null,\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (options.insert && typeof options.insert !== 'function') {\n\t\t\tthrow new TypeError('StorePermissions: insert is not a function');\n\t\t}\n\t\tif (options.remove && typeof options.remove !== 'function') {\n\t\t\tthrow new TypeError('StorePermissions: remove is not a function');\n\t\t}\n\t\tif (options.update && typeof options.update !== 'function') {\n\t\t\tthrow new TypeError('StorePermissions: update is not a function');\n\t\t}\n\n\t\t// Public attributes\n\t\tthis.actions = {\n\t\t\tinsert: options.insert,\n\t\t\tremove: options.remove,\n\t\t\tupdate: options.update,\n\t\t};\n\t}\n\n\t/**\n\t * Checks the permission for the action\n\t * @param action\n\t * @param userId\n\t * @param file\n\t * @param fields\n\t * @param modifiers\n\t * @return {*}\n\t */\n\tcheck(action, userId, file, fields, modifiers) {\n\t\tif (typeof this.actions[action] === 'function') {\n\t\t\treturn this.actions[action](userId, file, fields, modifiers);\n\t\t}\n\t\treturn true; // by default allow all\n\t}\n\n\t/**\n\t * Checks the insert permission\n\t * @param userId\n\t * @param file\n\t * @returns {*}\n\t */\n\tcheckInsert(userId, file) {\n\t\treturn this.check('insert', userId, file);\n\t}\n\n\t/**\n\t * Checks the remove permission\n\t * @param userId\n\t * @param file\n\t * @returns {*}\n\t */\n\tcheckRemove(userId, file) {\n\t\treturn this.check('remove', userId, file);\n\t}\n\n\t/**\n\t * Checks the update permission\n\t * @param userId\n\t * @param file\n\t * @param fields\n\t * @param modifiers\n\t * @returns {*}\n\t */\n\tcheckUpdate(userId, file, fields, modifiers) {\n\t\treturn this.check('update', userId, file, fields, modifiers);\n\t}\n}\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { _ } from 'meteor/underscore';\n\nimport { UploadFS } from './ufs';\nimport { Filter } from './ufs-filter';\nimport { StorePermissions } from './ufs-store-permissions';\nimport { Tokens } from './ufs-tokens';\n\n/**\n * File store\n */\nexport class Store {\n\tconstructor(options) {\n\t\tconst self = this;\n\n\t\t// Default options\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\tcollection: null,\n\t\t\t\tfilter: null,\n\t\t\t\tname: null,\n\t\t\t\tonCopyError: this.onCopyError,\n\t\t\t\tonFinishUpload: this.onFinishUpload,\n\t\t\t\tonRead: this.onRead,\n\t\t\t\tonReadError: this.onReadError,\n\t\t\t\tonValidate: this.onValidate,\n\t\t\t\tonWriteError: this.onWriteError,\n\t\t\t\tpermissions: null,\n\t\t\t\ttransformRead: null,\n\t\t\t\ttransformWrite: null,\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (!(options.collection instanceof Mongo.Collection)) {\n\t\t\tthrow new TypeError('Store: collection is not a Mongo.Collection');\n\t\t}\n\t\tif (options.filter && !(options.filter instanceof Filter)) {\n\t\t\tthrow new TypeError('Store: filter is not a UploadFS.Filter');\n\t\t}\n\t\tif (typeof options.name !== 'string') {\n\t\t\tthrow new TypeError('Store: name is not a string');\n\t\t}\n\t\tif (UploadFS.getStore(options.name)) {\n\t\t\tthrow new TypeError('Store: name already exists');\n\t\t}\n\t\tif (options.onCopyError && typeof options.onCopyError !== 'function') {\n\t\t\tthrow new TypeError('Store: onCopyError is not a function');\n\t\t}\n\t\tif (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\n\t\t\tthrow new TypeError('Store: onFinishUpload is not a function');\n\t\t}\n\t\tif (options.onRead && typeof options.onRead !== 'function') {\n\t\t\tthrow new TypeError('Store: onRead is not a function');\n\t\t}\n\t\tif (options.onReadError && typeof options.onReadError !== 'function') {\n\t\t\tthrow new TypeError('Store: onReadError is not a function');\n\t\t}\n\t\tif (options.onWriteError && typeof options.onWriteError !== 'function') {\n\t\t\tthrow new TypeError('Store: onWriteError is not a function');\n\t\t}\n\t\tif (options.permissions && !(options.permissions instanceof StorePermissions)) {\n\t\t\tthrow new TypeError('Store: permissions is not a UploadFS.StorePermissions');\n\t\t}\n\t\tif (options.transformRead && typeof options.transformRead !== 'function') {\n\t\t\tthrow new TypeError('Store: transformRead is not a function');\n\t\t}\n\t\tif (options.transformWrite && typeof options.transformWrite !== 'function') {\n\t\t\tthrow new TypeError('Store: transformWrite is not a function');\n\t\t}\n\t\tif (options.onValidate && typeof options.onValidate !== 'function') {\n\t\t\tthrow new TypeError('Store: onValidate is not a function');\n\t\t}\n\n\t\t// Public attributes\n\t\tself.options = options;\n\t\tself.permissions = options.permissions;\n\t\t['onCopyError', 'onFinishUpload', 'onRead', 'onReadError', 'onWriteError', 'onValidate'].forEach((method) => {\n\t\t\tif (typeof options[method] === 'function') {\n\t\t\t\tself[method] = options[method];\n\t\t\t}\n\t\t});\n\n\t\t// Add the store to the list\n\t\tUploadFS.addStore(self);\n\n\t\t// Set default permissions\n\t\tif (!(self.permissions instanceof StorePermissions)) {\n\t\t\t// Uses custom default permissions or UFS default permissions\n\t\t\tif (UploadFS.config.defaultStorePermissions instanceof StorePermissions) {\n\t\t\t\tself.permissions = UploadFS.config.defaultStorePermissions;\n\t\t\t} else {\n\t\t\t\tself.permissions = new StorePermissions();\n\t\t\t\tconsole.warn(`ufs: permissions are not defined for store \"${options.name}\"`);\n\t\t\t}\n\t\t}\n\n\t\tif (Meteor.isServer) {\n\t\t\t/**\n\t\t\t * Checks token validity\n\t\t\t * @param token\n\t\t\t * @param fileId\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tself.checkToken = function (token, fileId) {\n\t\t\t\tcheck(token, String);\n\t\t\t\tcheck(fileId, String);\n\t\t\t\treturn Tokens.find({ value: token, fileId }).count() === 1;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Copies the file to a store\n\t\t\t * @param fileId\n\t\t\t * @param store\n\t\t\t * @param callback\n\t\t\t */\n\t\t\tself.copy = function (fileId, store, callback) {\n\t\t\t\tcheck(fileId, String);\n\n\t\t\t\tif (!(store instanceof Store)) {\n\t\t\t\t\tthrow new TypeError('store is not an instance of UploadFS.Store');\n\t\t\t\t}\n\t\t\t\t// Get original file\n\t\t\t\tconst file = self.getCollection().findOne({ _id: fileId });\n\t\t\t\tif (!file) {\n\t\t\t\t\tthrow new Meteor.Error('file-not-found', 'File not found');\n\t\t\t\t}\n\t\t\t\t// Silently ignore the file if it does not match filter\n\t\t\t\tconst filter = store.getFilter();\n\t\t\t\tif (filter instanceof Filter && !filter.isValid(file)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prepare copy\n\t\t\t\tconst { _id, url, ...copy } = file;\n\t\t\t\tcopy.originalStore = self.getName();\n\t\t\t\tcopy.originalId = fileId;\n\n\t\t\t\t// Create the copy\n\t\t\t\tconst copyId = store.create(copy);\n\n\t\t\t\t// Get original stream\n\t\t\t\tconst rs = self.getReadStream(fileId, file);\n\n\t\t\t\t// Catch errors to avoid app crashing\n\t\t\t\trs.on(\n\t\t\t\t\t'error',\n\t\t\t\t\tMeteor.bindEnvironment(function (err) {\n\t\t\t\t\t\tcallback.call(self, err, null);\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\t// Copy file data\n\t\t\t\tstore.write(\n\t\t\t\t\trs,\n\t\t\t\t\tcopyId,\n\t\t\t\t\tMeteor.bindEnvironment(function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tself.getCollection().remove({ _id: copyId });\n\t\t\t\t\t\t\tself.onCopyError.call(self, err, fileId, file);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\t\tcallback.call(self, err, copyId, copy, store);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Creates the file in the collection\n\t\t\t * @param file\n\t\t\t * @param callback\n\t\t\t * @return {string}\n\t\t\t */\n\t\t\tself.create = function (file, callback) {\n\t\t\t\tcheck(file, Object);\n\t\t\t\tfile.store = self.options.name; // assign store to file\n\t\t\t\treturn self.getCollection().insert(file, callback);\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Creates a token for the file (only needed for client side upload)\n\t\t\t * @param fileId\n\t\t\t * @returns {*}\n\t\t\t */\n\t\t\tself.createToken = function (fileId) {\n\t\t\t\tconst token = self.generateToken();\n\n\t\t\t\t// Check if token exists\n\t\t\t\tif (Tokens.find({ fileId }).count()) {\n\t\t\t\t\tTokens.update(\n\t\t\t\t\t\t{ fileId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tcreatedAt: new Date(),\n\t\t\t\t\t\t\t\tvalue: token,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tTokens.insert({\n\t\t\t\t\t\tcreatedAt: new Date(),\n\t\t\t\t\t\tfileId,\n\t\t\t\t\t\tvalue: token,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn token;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Writes the file to the store\n\t\t\t * @param rs\n\t\t\t * @param fileId\n\t\t\t * @param callback\n\t\t\t */\n\t\t\tself.write = function (rs, fileId, callback) {\n\t\t\t\tconst file = self.getCollection().findOne({ _id: fileId });\n\n\t\t\t\tconst errorHandler = Meteor.bindEnvironment(function (err) {\n\t\t\t\t\tself.onWriteError.call(self, err, fileId, file);\n\t\t\t\t\tcallback.call(self, err);\n\t\t\t\t});\n\n\t\t\t\tconst finishHandler = Meteor.bindEnvironment(function () {\n\t\t\t\t\tlet size = 0;\n\t\t\t\t\tconst readStream = self.getReadStream(fileId, file);\n\n\t\t\t\t\treadStream.on(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\tMeteor.bindEnvironment(function (error) {\n\t\t\t\t\t\t\tcallback.call(self, error, null);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\treadStream.on(\n\t\t\t\t\t\t'data',\n\t\t\t\t\t\tMeteor.bindEnvironment(function (data) {\n\t\t\t\t\t\t\tsize += data.length;\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\treadStream.on(\n\t\t\t\t\t\t'end',\n\t\t\t\t\t\tMeteor.bindEnvironment(function () {\n\t\t\t\t\t\t\tif (file.complete) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Set file attribute\n\t\t\t\t\t\t\tfile.complete = true;\n\t\t\t\t\t\t\tfile.etag = UploadFS.generateEtag();\n\t\t\t\t\t\t\tfile.path = self.getFileRelativeURL(fileId);\n\t\t\t\t\t\t\tfile.progress = 1;\n\t\t\t\t\t\t\tfile.size = size;\n\t\t\t\t\t\t\tfile.token = self.generateToken();\n\t\t\t\t\t\t\tfile.uploading = false;\n\t\t\t\t\t\t\tfile.uploadedAt = new Date();\n\t\t\t\t\t\t\tfile.url = self.getFileURL(fileId);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (typeof self.onFinishUpload === 'function') {\n\t\t\t\t\t\t\t\tself.onFinishUpload.call(self, file);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Sets the file URL when file transfer is complete,\n\t\t\t\t\t\t\t// this way, the image will loads entirely.\n\t\t\t\t\t\t\tself.getCollection().direct.update(\n\t\t\t\t\t\t\t\t{ _id: fileId },\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\t\t\tcomplete: file.complete,\n\t\t\t\t\t\t\t\t\t\tetag: file.etag,\n\t\t\t\t\t\t\t\t\t\tpath: file.path,\n\t\t\t\t\t\t\t\t\t\tprogress: file.progress,\n\t\t\t\t\t\t\t\t\t\tsize: file.size,\n\t\t\t\t\t\t\t\t\t\ttoken: file.token,\n\t\t\t\t\t\t\t\t\t\tuploading: file.uploading,\n\t\t\t\t\t\t\t\t\t\tuploadedAt: file.uploadedAt,\n\t\t\t\t\t\t\t\t\t\turl: file.url,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Return file info\n\t\t\t\t\t\t\tcallback.call(self, null, file);\n\n\t\t\t\t\t\t\t// Simulate write speed\n\t\t\t\t\t\t\tif (UploadFS.config.simulateWriteDelay) {\n\t\t\t\t\t\t\t\tMeteor._sleepForMs(UploadFS.config.simulateWriteDelay);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Copy file to other stores\n\t\t\t\t\t\t\tif (self.options.copyTo instanceof Array) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < self.options.copyTo.length; i += 1) {\n\t\t\t\t\t\t\t\t\tconst store = self.options.copyTo[i];\n\n\t\t\t\t\t\t\t\t\tif (!store.getFilter() || store.getFilter().isValid(file)) {\n\t\t\t\t\t\t\t\t\t\tself.copy(fileId, store);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tconst ws = self.getWriteStream(fileId, file);\n\t\t\t\tws.on('error', errorHandler);\n\t\t\t\tws.once('finish', finishHandler);\n\n\t\t\t\t// Execute transformation\n\t\t\t\tself.transformWrite(rs, ws, fileId, file);\n\t\t\t};\n\t\t}\n\n\t\tif (Meteor.isServer) {\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tconst fs = Npm.require('fs');\n\t\t\tconst collection = self.getCollection();\n\n\t\t\t// Code executed after removing file\n\t\t\tcollection.after.remove(function (userId, file) {\n\t\t\t\t// Remove associated tokens\n\t\t\t\tTokens.remove({ fileId: file._id });\n\n\t\t\t\tif (self.options.copyTo instanceof Array) {\n\t\t\t\t\tfor (let i = 0; i < self.options.copyTo.length; i += 1) {\n\t\t\t\t\t\t// Remove copies in stores\n\t\t\t\t\t\tself.options.copyTo[i].getCollection().remove({ originalId: file._id });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Code executed before inserting file\n\t\t\tcollection.before.insert(function (userId, file) {\n\t\t\t\tif (!self.permissions.checkInsert(userId, file)) {\n\t\t\t\t\tthrow new Meteor.Error('forbidden', 'Forbidden');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Code executed before updating file\n\t\t\tcollection.before.update(function (userId, file, fields, modifiers) {\n\t\t\t\tif (!self.permissions.checkUpdate(userId, file, fields, modifiers)) {\n\t\t\t\t\tthrow new Meteor.Error('forbidden', 'Forbidden');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Code executed before removing file\n\t\t\tcollection.before.remove(function (userId, file) {\n\t\t\t\tif (!self.permissions.checkRemove(userId, file)) {\n\t\t\t\t\tthrow new Meteor.Error('forbidden', 'Forbidden');\n\t\t\t\t}\n\n\t\t\t\t// Delete the physical file in the store\n\t\t\t\tself.delete(file._id);\n\n\t\t\t\tconst tmpFile = UploadFS.getTempFilePath(file._id);\n\n\t\t\t\t// Delete the temp file\n\t\t\t\tfs.stat(tmpFile, function (err) {\n\t\t\t\t\t!err &&\n\t\t\t\t\t\tfs.unlink(tmpFile, function (err) {\n\t\t\t\t\t\t\terr && console.error(`ufs: cannot delete temp file at ${tmpFile} (${err.message})`);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Deletes a file async\n\t * @param fileId\n\t * @param callback\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tdelete(fileId, callback) {\n\t\tthrow new Error('delete is not implemented');\n\t}\n\n\t/**\n\t * Generates a random token\n\t * @param pattern\n\t * @return {string}\n\t */\n\tgenerateToken(pattern) {\n\t\treturn (pattern || 'xyxyxyxyxy').replace(/[xy]/g, (c) => {\n\t\t\t// eslint-disable-next-line no-mixed-operators\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\t\tconst s = v.toString(16);\n\t\t\treturn Math.round(Math.random()) ? s.toUpperCase() : s;\n\t\t});\n\t}\n\n\t/**\n\t * Returns the collection\n\t * @return {Mongo.Collection}\n\t */\n\tgetCollection() {\n\t\treturn this.options.collection;\n\t}\n\n\t/**\n\t * Returns the file URL\n\t * @param fileId\n\t * @return {string|null}\n\t */\n\tgetFileRelativeURL(fileId) {\n\t\tconst file = this.getCollection().findOne(fileId, { fields: { name: 1 } });\n\t\treturn file ? this.getRelativeURL(`${fileId}/${file.name}`) : null;\n\t}\n\n\t/**\n\t * Returns the file URL\n\t * @param fileId\n\t * @return {string|null}\n\t */\n\tgetFileURL(fileId) {\n\t\tconst file = this.getCollection().findOne(fileId, { fields: { name: 1 } });\n\t\treturn file ? this.getURL(`${fileId}/${file.name}`) : null;\n\t}\n\n\t/**\n\t * Returns the file filter\n\t * @return {UploadFS.Filter}\n\t */\n\tgetFilter() {\n\t\treturn this.options.filter;\n\t}\n\n\t/**\n\t * Returns the store name\n\t * @return {string}\n\t */\n\tgetName() {\n\t\treturn this.options.name;\n\t}\n\n\t/**\n\t * Returns the file read stream\n\t * @param fileId\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tgetReadStream(fileId, file) {\n\t\tthrow new Error('Store.getReadStream is not implemented');\n\t}\n\n\t/**\n\t * Returns the store relative URL\n\t * @param path\n\t * @return {string}\n\t */\n\tgetRelativeURL(path) {\n\t\tconst rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\n\t\tconst rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\n\t\tconst storeName = this.getName();\n\t\tpath = String(path).replace(/\\/$/, '').trim();\n\t\treturn encodeURI(`${rootPath}/${UploadFS.config.storesPath}/${storeName}/${path}`);\n\t}\n\n\t/**\n\t * Returns the store absolute URL\n\t * @param path\n\t * @return {string}\n\t */\n\tgetURL(path) {\n\t\tconst rootUrl = Meteor.absoluteUrl({ secure: UploadFS.config.https }).replace(/\\/+$/, '');\n\t\tconst storeName = this.getName();\n\t\tpath = String(path).replace(/\\/$/, '').trim();\n\t\treturn encodeURI(`${rootUrl}/${UploadFS.config.storesPath}/${storeName}/${path}`);\n\t}\n\n\t/**\n\t * Returns the file write stream\n\t * @param fileId\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tgetWriteStream(fileId, file) {\n\t\tthrow new Error('getWriteStream is not implemented');\n\t}\n\n\t/**\n\t * Completes the file upload\n\t * @param url\n\t * @param file\n\t * @param callback\n\t */\n\timportFromURL(url, file, callback) {\n\t\tMeteor.call('ufsImportURL', url, file, this.getName(), callback);\n\t}\n\n\t/**\n\t * Called when a copy error happened\n\t * @param err\n\t * @param fileId\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonCopyError(err, fileId, file) {\n\t\tconsole.error(`ufs: cannot copy file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\t/**\n\t * Called when a file has been uploaded\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonFinishUpload(file) {}\n\n\t/**\n\t * Called when a file is read from the store\n\t * @param fileId\n\t * @param file\n\t * @param request\n\t * @param response\n\t * @return boolean\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonRead(fileId, file, request, response) {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Called when a read error happened\n\t * @param err\n\t * @param fileId\n\t * @param file\n\t * @return boolean\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonReadError(err, fileId, file) {\n\t\tconsole.error(`ufs: cannot read file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\t/**\n\t * Called when file is being validated\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonValidate(file) {}\n\n\t/**\n\t * Called when a write error happened\n\t * @param err\n\t * @param fileId\n\t * @param file\n\t * @return boolean\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonWriteError(err, fileId, file) {\n\t\tconsole.error(`ufs: cannot write file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\t/**\n\t * Sets the store permissions\n\t * @param permissions\n\t */\n\tsetPermissions(permissions) {\n\t\tif (!(permissions instanceof StorePermissions)) {\n\t\t\tthrow new TypeError('Permissions is not an instance of UploadFS.StorePermissions');\n\t\t}\n\t\tthis.permissions = permissions;\n\t}\n\n\t/**\n\t * Transforms the file on reading\n\t * @param readStream\n\t * @param writeStream\n\t * @param fileId\n\t * @param file\n\t * @param request\n\t * @param headers\n\t */\n\ttransformRead(readStream, writeStream, fileId, file, request, headers) {\n\t\tif (typeof this.options.transformRead === 'function') {\n\t\t\tthis.options.transformRead.call(this, readStream, writeStream, fileId, file, request, headers);\n\t\t} else {\n\t\t\treadStream.pipe(writeStream);\n\t\t}\n\t}\n\n\t/**\n\t * Transforms the file on writing\n\t * @param readStream\n\t * @param writeStream\n\t * @param fileId\n\t * @param file\n\t */\n\ttransformWrite(readStream, writeStream, fileId, file) {\n\t\tif (typeof this.options.transformWrite === 'function') {\n\t\t\tthis.options.transformWrite.call(this, readStream, writeStream, fileId, file);\n\t\t} else {\n\t\t\treadStream.pipe(writeStream);\n\t\t}\n\t}\n\n\t/**\n\t * Validates the file\n\t * @param file\n\t */\n\tvalidate(file) {\n\t\tif (typeof this.onValidate === 'function') {\n\t\t\tthis.onValidate(file);\n\t\t}\n\t}\n}\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\nimport { Mongo } from 'meteor/mongo';\n\n/**\n * Collection of upload tokens\n * @type {Mongo.Collection}\n */\nexport const Tokens = new Mongo.Collection('ufsTokens');\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\n\nimport { Store } from './ufs-store';\n\n/**\n * File uploader\n */\nexport class Uploader {\n\tconstructor(options) {\n\t\tconst self = this;\n\n\t\t// Set default options\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\tadaptive: true,\n\t\t\t\tcapacity: 0.9,\n\t\t\t\tchunkSize: 16 * 1024,\n\t\t\t\tdata: null,\n\t\t\t\tfile: null,\n\t\t\t\tmaxChunkSize: 4 * 1024 * 1000,\n\t\t\t\tmaxTries: 5,\n\t\t\t\tonAbort: this.onAbort,\n\t\t\t\tonComplete: this.onComplete,\n\t\t\t\tonCreate: this.onCreate,\n\t\t\t\tonError: this.onError,\n\t\t\t\tonProgress: this.onProgress,\n\t\t\t\tonStart: this.onStart,\n\t\t\t\tonStop: this.onStop,\n\t\t\t\tretryDelay: 2000,\n\t\t\t\tstore: null,\n\t\t\t\ttransferDelay: 100,\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (typeof options.adaptive !== 'boolean') {\n\t\t\tthrow new TypeError('adaptive is not a number');\n\t\t}\n\t\tif (typeof options.capacity !== 'number') {\n\t\t\tthrow new TypeError('capacity is not a number');\n\t\t}\n\t\tif (options.capacity <= 0 || options.capacity > 1) {\n\t\t\tthrow new RangeError('capacity must be a float between 0.1 and 1.0');\n\t\t}\n\t\tif (typeof options.chunkSize !== 'number') {\n\t\t\tthrow new TypeError('chunkSize is not a number');\n\t\t}\n\t\tif (!(options.data instanceof Blob) && !(options.data instanceof File)) {\n\t\t\tthrow new TypeError('data is not an Blob or File');\n\t\t}\n\t\tif (options.file === null || typeof options.file !== 'object') {\n\t\t\tthrow new TypeError('file is not an object');\n\t\t}\n\t\tif (typeof options.maxChunkSize !== 'number') {\n\t\t\tthrow new TypeError('maxChunkSize is not a number');\n\t\t}\n\t\tif (typeof options.maxTries !== 'number') {\n\t\t\tthrow new TypeError('maxTries is not a number');\n\t\t}\n\t\tif (typeof options.retryDelay !== 'number') {\n\t\t\tthrow new TypeError('retryDelay is not a number');\n\t\t}\n\t\tif (typeof options.transferDelay !== 'number') {\n\t\t\tthrow new TypeError('transferDelay is not a number');\n\t\t}\n\t\tif (typeof options.onAbort !== 'function') {\n\t\t\tthrow new TypeError('onAbort is not a function');\n\t\t}\n\t\tif (typeof options.onComplete !== 'function') {\n\t\t\tthrow new TypeError('onComplete is not a function');\n\t\t}\n\t\tif (typeof options.onCreate !== 'function') {\n\t\t\tthrow new TypeError('onCreate is not a function');\n\t\t}\n\t\tif (typeof options.onError !== 'function') {\n\t\t\tthrow new TypeError('onError is not a function');\n\t\t}\n\t\tif (typeof options.onProgress !== 'function') {\n\t\t\tthrow new TypeError('onProgress is not a function');\n\t\t}\n\t\tif (typeof options.onStart !== 'function') {\n\t\t\tthrow new TypeError('onStart is not a function');\n\t\t}\n\t\tif (typeof options.onStop !== 'function') {\n\t\t\tthrow new TypeError('onStop is not a function');\n\t\t}\n\t\tif (typeof options.store !== 'string' && !(options.store instanceof Store)) {\n\t\t\tthrow new TypeError('store must be the name of the store or an instance of UploadFS.Store');\n\t\t}\n\n\t\t// Public attributes\n\t\tself.adaptive = options.adaptive;\n\t\tself.capacity = parseFloat(options.capacity);\n\t\tself.chunkSize = parseInt(options.chunkSize);\n\t\tself.maxChunkSize = parseInt(options.maxChunkSize);\n\t\tself.maxTries = parseInt(options.maxTries);\n\t\tself.retryDelay = parseInt(options.retryDelay);\n\t\tself.transferDelay = parseInt(options.transferDelay);\n\t\tself.onAbort = options.onAbort;\n\t\tself.onComplete = options.onComplete;\n\t\tself.onCreate = options.onCreate;\n\t\tself.onError = options.onError;\n\t\tself.onProgress = options.onProgress;\n\t\tself.onStart = options.onStart;\n\t\tself.onStop = options.onStop;\n\n\t\t// Private attributes\n\t\tlet { store } = options;\n\t\tconst { data } = options;\n\t\tconst capacityMargin = 0.1;\n\t\tlet { file } = options;\n\t\tlet fileId = null;\n\t\tlet offset = 0;\n\t\tlet loaded = 0;\n\t\tconst total = data.size;\n\t\tlet tries = 0;\n\t\tlet postUrl = null;\n\t\tlet token = null;\n\t\tlet complete = false;\n\t\tlet uploading = false;\n\n\t\tlet timeA = null;\n\t\tlet timeB = null;\n\n\t\tlet elapsedTime = 0;\n\t\tlet startTime = 0;\n\n\t\t// Keep only the name of the store\n\t\tif (store instanceof Store) {\n\t\t\tstore = store.getName();\n\t\t}\n\n\t\t// Assign file to store\n\t\tfile.store = store;\n\n\t\tfunction finish() {\n\t\t\t// Finish the upload by telling the store the upload is complete\n\t\t\tMeteor.call('ufsComplete', fileId, store, token, function (err, uploadedFile) {\n\t\t\t\tif (err) {\n\t\t\t\t\tself.onError(err, file);\n\t\t\t\t\tself.abort();\n\t\t\t\t} else if (uploadedFile) {\n\t\t\t\t\tuploading = false;\n\t\t\t\t\tcomplete = true;\n\t\t\t\t\tfile = uploadedFile;\n\t\t\t\t\tself.onComplete(uploadedFile);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Aborts the current transfer\n\t\t */\n\t\tself.abort = function () {\n\t\t\t// Remove the file from database\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tMeteor.call('ufsDelete', fileId, store, token, function (err, result) {\n\t\t\t\tif (err) {\n\t\t\t\t\tself.onError(err, file);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Reset uploader status\n\t\t\tuploading = false;\n\t\t\tfileId = null;\n\t\t\toffset = 0;\n\t\t\ttries = 0;\n\t\t\tloaded = 0;\n\t\t\tcomplete = false;\n\t\t\tstartTime = null;\n\t\t\tself.onAbort(file);\n\t\t};\n\n\t\t/**\n\t\t * Returns the average speed in bytes per second\n\t\t * @returns {number}\n\t\t */\n\t\tself.getAverageSpeed = function () {\n\t\t\tconst seconds = self.getElapsedTime() / 1000;\n\t\t\treturn self.getLoaded() / seconds;\n\t\t};\n\n\t\t/**\n\t\t * Returns the elapsed time in milliseconds\n\t\t * @returns {number}\n\t\t */\n\t\tself.getElapsedTime = function () {\n\t\t\tif (startTime && self.isUploading()) {\n\t\t\t\treturn elapsedTime + (Date.now() - startTime);\n\t\t\t}\n\t\t\treturn elapsedTime;\n\t\t};\n\n\t\t/**\n\t\t * Returns the file\n\t\t * @return {object}\n\t\t */\n\t\tself.getFile = function () {\n\t\t\treturn file;\n\t\t};\n\n\t\t/**\n\t\t * Returns the loaded bytes\n\t\t * @return {number}\n\t\t */\n\t\tself.getLoaded = function () {\n\t\t\treturn loaded;\n\t\t};\n\n\t\t/**\n\t\t * Returns current progress\n\t\t * @return {number}\n\t\t */\n\t\tself.getProgress = function () {\n\t\t\treturn Math.min(((loaded / total) * 100) / 100, 1.0);\n\t\t};\n\n\t\t/**\n\t\t * Returns the remaining time in milliseconds\n\t\t * @returns {number}\n\t\t */\n\t\tself.getRemainingTime = function () {\n\t\t\tconst averageSpeed = self.getAverageSpeed();\n\t\t\tconst remainingBytes = total - self.getLoaded();\n\t\t\treturn averageSpeed && remainingBytes ? Math.max(remainingBytes / averageSpeed, 0) : 0;\n\t\t};\n\n\t\t/**\n\t\t * Returns the upload speed in bytes per second\n\t\t * @returns {number}\n\t\t */\n\t\tself.getSpeed = function () {\n\t\t\tif (timeA && timeB && self.isUploading()) {\n\t\t\t\tconst seconds = (timeB - timeA) / 1000;\n\t\t\t\treturn self.chunkSize / seconds;\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\t\t/**\n\t\t * Returns the total bytes\n\t\t * @return {number}\n\t\t */\n\t\tself.getTotal = function () {\n\t\t\treturn total;\n\t\t};\n\n\t\t/**\n\t\t * Checks if the transfer is complete\n\t\t * @return {boolean}\n\t\t */\n\t\tself.isComplete = function () {\n\t\t\treturn complete;\n\t\t};\n\n\t\t/**\n\t\t * Checks if the transfer is active\n\t\t * @return {boolean}\n\t\t */\n\t\tself.isUploading = function () {\n\t\t\treturn uploading;\n\t\t};\n\n\t\t/**\n\t\t * Reads a portion of file\n\t\t * @param start\n\t\t * @param length\n\t\t * @param callback\n\t\t * @returns {Blob}\n\t\t */\n\t\tself.readChunk = function (start, length, callback) {\n\t\t\tif (typeof callback !== 'function') {\n\t\t\t\tthrow new Error('readChunk is missing callback');\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tlet end;\n\n\t\t\t\t// Calculate the chunk size\n\t\t\t\tif (length && start + length > total) {\n\t\t\t\t\tend = total;\n\t\t\t\t} else {\n\t\t\t\t\tend = start + length;\n\t\t\t\t}\n\t\t\t\t// Get chunk\n\t\t\t\tconst chunk = data.slice(start, end);\n\t\t\t\t// Pass chunk to callback\n\t\t\t\tcallback.call(self, null, chunk);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('read error', err);\n\t\t\t\t// Retry to read chunk\n\t\t\t\tMeteor.setTimeout(function () {\n\t\t\t\t\tif (tries < self.maxTries) {\n\t\t\t\t\t\ttries += 1;\n\t\t\t\t\t\tself.readChunk(start, length, callback);\n\t\t\t\t\t}\n\t\t\t\t}, self.retryDelay);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Sends a file chunk to the store\n\t\t */\n\t\tself.sendChunk = function () {\n\t\t\tif (!complete && startTime !== null) {\n\t\t\t\tif (offset < total) {\n\t\t\t\t\tlet { chunkSize } = self;\n\n\t\t\t\t\t// Use adaptive length\n\t\t\t\t\tif (self.adaptive && timeA && timeB && timeB > timeA) {\n\t\t\t\t\t\tconst duration = (timeB - timeA) / 1000;\n\t\t\t\t\t\tconst max = self.capacity * (1 + capacityMargin);\n\t\t\t\t\t\tconst min = self.capacity * (1 - capacityMargin);\n\n\t\t\t\t\t\tif (duration >= max) {\n\t\t\t\t\t\t\tchunkSize = Math.abs(Math.round(chunkSize * (max - duration)));\n\t\t\t\t\t\t} else if (duration < min) {\n\t\t\t\t\t\t\tchunkSize = Math.round(chunkSize * (min / duration));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Limit to max chunk size\n\t\t\t\t\t\tif (self.maxChunkSize > 0 && chunkSize > self.maxChunkSize) {\n\t\t\t\t\t\t\tchunkSize = self.maxChunkSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reduce chunk size to fit total\n\t\t\t\t\tif (offset + chunkSize > total) {\n\t\t\t\t\t\tchunkSize = total - offset;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prepare the chunk\n\t\t\t\t\tself.readChunk(offset, chunkSize, function (err, chunk) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tself.onError(err, file);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\t\t\t\tif ([200, 201, 202, 204].includes(xhr.status)) {\n\t\t\t\t\t\t\t\t\ttimeB = Date.now();\n\t\t\t\t\t\t\t\t\toffset += chunkSize;\n\t\t\t\t\t\t\t\t\tloaded += chunkSize;\n\n\t\t\t\t\t\t\t\t\t// Send next chunk\n\t\t\t\t\t\t\t\t\tself.onProgress(file, self.getProgress());\n\n\t\t\t\t\t\t\t\t\t// Finish upload\n\t\t\t\t\t\t\t\t\tif (loaded >= total) {\n\t\t\t\t\t\t\t\t\t\telapsedTime = Date.now() - startTime;\n\t\t\t\t\t\t\t\t\t\tfinish();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tMeteor.setTimeout(self.sendChunk, self.transferDelay);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (![402, 403, 404, 500].includes(xhr.status)) {\n\t\t\t\t\t\t\t\t\t// Retry until max tries is reach\n\t\t\t\t\t\t\t\t\t// But don't retry if these errors occur\n\t\t\t\t\t\t\t\t\tif (tries <= self.maxTries) {\n\t\t\t\t\t\t\t\t\t\ttries += 1;\n\t\t\t\t\t\t\t\t\t\t// Wait before retrying\n\t\t\t\t\t\t\t\t\t\tMeteor.setTimeout(self.sendChunk, self.retryDelay);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tself.abort();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tself.abort();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Calculate upload progress\n\t\t\t\t\t\tconst progress = (offset + chunkSize) / total;\n\t\t\t\t\t\t// let formData = new FormData();\n\t\t\t\t\t\t// formData.append('progress', progress);\n\t\t\t\t\t\t// formData.append('chunk', chunk);\n\t\t\t\t\t\tconst url = `${postUrl}&progress=${progress}`;\n\n\t\t\t\t\t\ttimeA = Date.now();\n\t\t\t\t\t\ttimeB = null;\n\t\t\t\t\t\tuploading = true;\n\n\t\t\t\t\t\t// Send chunk to the store\n\t\t\t\t\t\txhr.open('POST', url, true);\n\t\t\t\t\t\txhr.send(chunk);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Starts or resumes the transfer\n\t\t */\n\t\tself.start = function () {\n\t\t\tif (!fileId) {\n\t\t\t\t// Create the file document and get the token\n\t\t\t\t// that allows the user to send chunks to the store.\n\t\t\t\tMeteor.call('ufsCreate', _.extend({}, file), function (err, result) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tself.onError(err, file);\n\t\t\t\t\t} else if (result) {\n\t\t\t\t\t\ttoken = result.token;\n\t\t\t\t\t\tpostUrl = result.url;\n\t\t\t\t\t\tfileId = result.fileId;\n\t\t\t\t\t\tfile._id = result.fileId;\n\t\t\t\t\t\tself.onCreate(file);\n\t\t\t\t\t\ttries = 0;\n\t\t\t\t\t\tstartTime = Date.now();\n\t\t\t\t\t\tself.onStart(file);\n\t\t\t\t\t\tself.sendChunk();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (!uploading && !complete) {\n\t\t\t\t// Resume uploading\n\t\t\t\ttries = 0;\n\t\t\t\tstartTime = Date.now();\n\t\t\t\tself.onStart(file);\n\t\t\t\tself.sendChunk();\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Stops the transfer\n\t\t */\n\t\tself.stop = function () {\n\t\t\tif (uploading) {\n\t\t\t\t// Update elapsed time\n\t\t\t\telapsedTime = Date.now() - startTime;\n\t\t\t\tstartTime = null;\n\t\t\t\tuploading = false;\n\t\t\t\tself.onStop(file);\n\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tMeteor.call('ufsStop', fileId, store, token, function (err, result) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tself.onError(err, file);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Called when the file upload is aborted\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonAbort(file) {}\n\n\t/**\n\t * Called when the file upload is complete\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonComplete(file) {}\n\n\t/**\n\t * Called when the file is created in the collection\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonCreate(file) {}\n\n\t/**\n\t * Called when an error occurs during file upload\n\t * @param err\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonError(err, file) {\n\t\tconsole.error(`ufs: ${err.message}`);\n\t}\n\n\t/**\n\t * Called when a file chunk has been sent\n\t * @param file\n\t * @param progress is a float from 0.0 to 1.0\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonProgress(file, progress) {}\n\n\t/**\n\t * Called when the file upload starts\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonStart(file) {}\n\n\t/**\n\t * Called when the file upload stops\n\t * @param file\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonStop(file) {}\n}\n"]}}]
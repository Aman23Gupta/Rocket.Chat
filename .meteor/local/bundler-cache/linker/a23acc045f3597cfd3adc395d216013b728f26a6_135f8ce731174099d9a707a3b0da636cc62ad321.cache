[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar OAuth = Package.oauth.OAuth;\nvar Random = Package.random.Random;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"pauli:linkedin-oauth\":{\"linkedin-client.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/pauli_linkedin-oauth/linkedin-client.js                                  //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nvar _excluded = [\"requestPermissions\"];\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\nmodule.export({\n  Linkedin: function () {\n    return Linkedin;\n  }\n});\nvar ServiceConfiguration;\nmodule.link(\"meteor/service-configuration\", {\n  ServiceConfiguration: function (v) {\n    ServiceConfiguration = v;\n  }\n}, 0);\nvar Random;\nmodule.link(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 1);\nvar OAuth;\nmodule.link(\"meteor/oauth\", {\n  OAuth: function (v) {\n    OAuth = v;\n  }\n}, 2);\nvar Linkedin = {};\n\n// Request LinkedIn credentials for the user\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nLinkedin.requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({\n    service: 'linkedin'\n  });\n\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError('Service not configured'));\n    return;\n  }\n\n  var credentialToken = Random.secret();\n  var scope;\n\n  var _options = options,\n      requestPermissions = _options.requestPermissions,\n      otherOptionsToPassThrough = _objectWithoutProperties(_options, _excluded);\n\n  if (requestPermissions) {\n    scope = requestPermissions.join('+');\n  } else {\n    // If extra permissions not passed, we need to request basic, available to all\n    scope = 'r_emailaddress+r_liteprofile';\n  }\n\n  var loginStyle = OAuth._loginStyle('linkedin', config, options);\n\n  if (!otherOptionsToPassThrough.popupOptions) {\n    // the default dimensions (https://github.com/meteor/meteor/blob/release-1.6.1/packages/oauth/oauth_browser.js#L15) don't play well with the content shown by linkedin\n    // so override popup dimensions to something appropriate (might have to change if LinkedIn login page changes its layout)\n    otherOptionsToPassThrough.popupOptions = {\n      width: 390,\n      height: 628\n    };\n  }\n\n  var loginUrl = \"https://www.linkedin.com/uas/oauth2/authorization?response_type=code&client_id=\" + config.clientId + \"&redirect_uri=\" + OAuth._redirectUri('linkedin', config) + \"&state=\" + OAuth._stateParam(loginStyle, credentialToken) + \"&scope=\" + scope;\n  OAuth.launchLogin(_objectSpread({\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,\n    credentialToken: credentialToken,\n    loginService: 'linkedin',\n    loginStyle: loginStyle,\n    loginUrl: loginUrl\n  }, otherOptionsToPassThrough));\n};\n///////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/pauli:linkedin-oauth/linkedin-client.js\");\n\n/* Exports */\nPackage._define(\"pauli:linkedin-oauth\", exports);\n\n})();\n","servePath":"/packages/pauli_linkedin-oauth.js","sourceMap":{"version":3,"sources":["packages/pauli:linkedin-oauth/linkedin-client.js"],"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","export","Linkedin","ServiceConfiguration","Random","OAuth","requestCredential","options","credentialRequestCompleteCallback","config","configurations","findOne","service","ConfigError","credentialToken","secret","scope","requestPermissions","otherOptionsToPassThrough","join","loginStyle","_loginStyle","popupOptions","width","height","loginUrl","clientId","_redirectUri","_stateParam","launchLogin","loginService"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,SAAO,EAAC,UAASC,CAAT,EAAW;AAACJ,iBAAa,GAACI,CAAd;AAAgB;AAArC,CAAnD,EAA0F,CAA1F;;AAA6F,IAAIC,wBAAJ;;AAA6BJ,MAAM,CAACC,IAAP,CAAY,gDAAZ,EAA6D;AAACC,SAAO,EAAC,UAASC,CAAT,EAAW;AAACC,4BAAwB,GAACD,CAAzB;AAA2B;AAAhD,CAA7D,EAA+G,CAA/G;AAA5IH,MAAM,CAACK,MAAP,CAAc;AAACC,UAAQ,EAAC,YAAU;AAAC,WAAOA,QAAP;AAAgB;AAArC,CAAd;AAAsD,IAAIC,oBAAJ;AAAyBP,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACM,sBAAoB,EAAC,UAASJ,CAAT,EAAW;AAACI,wBAAoB,GAACJ,CAArB;AAAuB;AAAzD,CAA3C,EAAsG,CAAtG;AAAyG,IAAIK,MAAJ;AAAWR,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACO,QAAM,EAAC,UAASL,CAAT,EAAW;AAACK,UAAM,GAACL,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAIM,KAAJ;AAAUT,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACQ,OAAK,EAAC,UAASN,CAAT,EAAW;AAACM,SAAK,GAACN,CAAN;AAAQ;AAA3B,CAA3B,EAAwD,CAAxD;AAIpQ,IAAMG,QAAQ,GAAG,EAAjB;;AAEP;AACA;AACA;AACA;AACA;AACAA,QAAQ,CAACI,iBAAT,GAA6B,UAAUC,OAAV,EAAmBC,iCAAnB,EAAsD;AAClF;AACA,MAAI,CAACA,iCAAD,IAAsC,OAAOD,OAAP,KAAmB,UAA7D,EAAyE;AACxEC,qCAAiC,GAAGD,OAApC;AACAA,WAAO,GAAG,EAAV;AACA;;AAED,MAAME,MAAM,GAAGN,oBAAoB,CAACO,cAArB,CAAoCC,OAApC,CAA4C;AAAEC,WAAO,EAAE;AAAX,GAA5C,CAAf;;AACA,MAAI,CAACH,MAAL,EAAa;AACZD,qCAAiC,IAAIA,iCAAiC,CAAC,IAAIL,oBAAoB,CAACU,WAAzB,CAAqC,wBAArC,CAAD,CAAtE;AACA;AACA;;AAED,MAAMC,eAAe,GAAGV,MAAM,CAACW,MAAP,EAAxB;AAEA,MAAIC,KAAJ;;AACA,iBAA6DT,OAA7D;AAAA,MAAQU,kBAAR,YAAQA,kBAAR;AAAA,MAA+BC,yBAA/B;;AACA,MAAID,kBAAJ,EAAwB;AACvBD,SAAK,GAAGC,kBAAkB,CAACE,IAAnB,CAAwB,GAAxB,CAAR;AACA,GAFD,MAEO;AACN;AACAH,SAAK,GAAG,8BAAR;AACA;;AACD,MAAMI,UAAU,GAAGf,KAAK,CAACgB,WAAN,CAAkB,UAAlB,EAA8BZ,MAA9B,EAAsCF,OAAtC,CAAnB;;AACA,MAAI,CAACW,yBAAyB,CAACI,YAA/B,EAA6C;AAC5C;AACA;AACAJ,6BAAyB,CAACI,YAA1B,GAAyC;AACxCC,WAAK,EAAE,GADiC;AAExCC,YAAM,EAAE;AAFgC,KAAzC;AAIA;;AAED,MAAMC,QAAQ,uFACbhB,MAAM,CAACiB,QADM,sBAEGrB,KAAK,CAACsB,YAAN,CAAmB,UAAnB,EAA+BlB,MAA/B,CAFH,eAEmDJ,KAAK,CAACuB,WAAN,CAAkBR,UAAlB,EAA8BN,eAA9B,CAFnD,eAE2GE,KAFzH;AAIAX,OAAK,CAACwB,WAAN;AACCrB,qCAAiC,EAAjCA,iCADD;AAECM,mBAAe,EAAfA,eAFD;AAGCgB,gBAAY,EAAE,UAHf;AAICV,cAAU,EAAVA,UAJD;AAKCK,YAAQ,EAARA;AALD,KAMIP,yBANJ;AAQA,CA7CD,C","file":"/packages/pauli_linkedin-oauth.js","sourcesContent":["import { ServiceConfiguration } from 'meteor/service-configuration';\nimport { Random } from 'meteor/random';\nimport { OAuth } from 'meteor/oauth';\n\nexport const Linkedin = {};\n\n// Request LinkedIn credentials for the user\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nLinkedin.requestCredential = function (options, credentialRequestCompleteCallback) {\n\t// support both (options, callback) and (callback).\n\tif (!credentialRequestCompleteCallback && typeof options === 'function') {\n\t\tcredentialRequestCompleteCallback = options;\n\t\toptions = {};\n\t}\n\n\tconst config = ServiceConfiguration.configurations.findOne({ service: 'linkedin' });\n\tif (!config) {\n\t\tcredentialRequestCompleteCallback && credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError('Service not configured'));\n\t\treturn;\n\t}\n\n\tconst credentialToken = Random.secret();\n\n\tlet scope;\n\tconst { requestPermissions, ...otherOptionsToPassThrough } = options;\n\tif (requestPermissions) {\n\t\tscope = requestPermissions.join('+');\n\t} else {\n\t\t// If extra permissions not passed, we need to request basic, available to all\n\t\tscope = 'r_emailaddress+r_liteprofile';\n\t}\n\tconst loginStyle = OAuth._loginStyle('linkedin', config, options);\n\tif (!otherOptionsToPassThrough.popupOptions) {\n\t\t// the default dimensions (https://github.com/meteor/meteor/blob/release-1.6.1/packages/oauth/oauth_browser.js#L15) don't play well with the content shown by linkedin\n\t\t// so override popup dimensions to something appropriate (might have to change if LinkedIn login page changes its layout)\n\t\totherOptionsToPassThrough.popupOptions = {\n\t\t\twidth: 390,\n\t\t\theight: 628,\n\t\t};\n\t}\n\n\tconst loginUrl = `https://www.linkedin.com/uas/oauth2/authorization?response_type=code&client_id=${\n\t\tconfig.clientId\n\t}&redirect_uri=${OAuth._redirectUri('linkedin', config)}&state=${OAuth._stateParam(loginStyle, credentialToken)}&scope=${scope}`;\n\n\tOAuth.launchLogin({\n\t\tcredentialRequestCompleteCallback,\n\t\tcredentialToken,\n\t\tloginService: 'linkedin',\n\t\tloginStyle,\n\t\tloginUrl,\n\t\t...otherOptionsToPassThrough,\n\t});\n};\n"]}}]
[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar Session = Package.session.Session;\nvar Template = Package['templating-runtime'].Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/mystor_device-detection/packages/mystor_device-detection.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/mystor:device-detection/device_detection.js                                                          //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n(function() {                                                                                                    // 1\n  var Device = function() {                                                                                      // 2\n    // Constructor                                                                                               // 3\n    this._deps = new Deps.Dependency;                                                                            // 4\n    this._type = 'desktop';                                                                                      // 5\n                                                                                                                 // 6\n    this._suffix_deps = {                                                                                        // 7\n      tv: new Deps.Dependency,                                                                                   // 8\n      tablet: new Deps.Dependency,                                                                               // 9\n      phone: new Deps.Dependency,                                                                                // 10\n      desktop: new Deps.Dependency,                                                                              // 11\n      bot: new Deps.Dependency                                                                                   // 12\n    }                                                                                                            // 13\n                                                                                                                 // 14\n    this._suffix = {                                                                                             // 15\n      tv: '_tv',                                                                                                 // 16\n      tablet: '_tablet',                                                                                         // 17\n      phone: '_phone',                                                                                           // 18\n      desktop: '_desktop',                                                                                       // 19\n      bot: '_bot'                                                                                                // 20\n    }                                                                                                            // 21\n                                                                                                                 // 22\n    this.emptyUserAgentDeviceType = 'desktop';                                                                   // 23\n    this.botUserAgentDeviceType = 'bot';                                                                         // 24\n    this.unknownUserAgentDeviceType = 'phone';                                                                   // 25\n                                                                                                                 // 26\n    Session.setDefault('devices_user_type_preference', 'no_preference');                                         // 27\n  };                                                                                                             // 28\n                                                                                                                 // 29\n  /*                                                                                                             // 30\n   * Setting Suffixes                                                                                            // 31\n   */                                                                                                            // 32\n  Device.prototype.setSuffix = function(type, suffix) {                                                          // 33\n    this._suffix[type] = suffix;                                                                                 // 34\n    this._suffix_deps[type].changed();                                                                           // 35\n  }                                                                                                              // 36\n                                                                                                                 // 37\n  // Helper Functions                                                                                            // 38\n  Device.prototype.setTVSuffix = function(suffix) {                                                              // 39\n    this.setSuffix('tv', suffix);                                                                                // 40\n  }                                                                                                              // 41\n                                                                                                                 // 42\n  Device.prototype.setTabletSuffix = function(suffix) {                                                          // 43\n    this.setSuffix('tablet', suffix);                                                                            // 44\n  }                                                                                                              // 45\n                                                                                                                 // 46\n  Device.prototype.setPhoneSuffix = function(suffix) {                                                           // 47\n    this.setSuffix('phone', suffix);                                                                             // 48\n  }                                                                                                              // 49\n                                                                                                                 // 50\n  Device.prototype.setDesktopSuffix = function(suffix) {                                                         // 51\n    this.setSuffix('desktop', suffix);                                                                           // 52\n  }                                                                                                              // 53\n                                                                                                                 // 54\n  Device.prototype.setBotSuffix = function(suffix) {                                                             // 55\n    this.setSuffix('bot', suffix);                                                                               // 56\n  }                                                                                                              // 57\n                                                                                                                 // 58\n  /*                                                                                                             // 59\n   * Getting Suffixes                                                                                            // 60\n   */                                                                                                            // 61\n  Device.prototype.getSuffix = function(type) {                                                                  // 62\n    this._suffix_deps[type].depend();                                                                            // 63\n    return this._suffix[type];                                                                                   // 64\n  }                                                                                                              // 65\n                                                                                                                 // 66\n  // Helper Functions                                                                                            // 67\n  Device.prototype.TVSuffix = function() {                                                                       // 68\n    return getSuffix('tv');                                                                                      // 69\n  }                                                                                                              // 70\n                                                                                                                 // 71\n  Device.prototype.TabletSuffix = function() {                                                                   // 72\n    return getSuffix('tablet');                                                                                  // 73\n  }                                                                                                              // 74\n                                                                                                                 // 75\n  Device.prototype.PhoneSuffix = function() {                                                                    // 76\n    return getSuffix('phone');                                                                                   // 77\n  }                                                                                                              // 78\n                                                                                                                 // 79\n  Device.prototype.DesktopSuffix = function() {                                                                  // 80\n    return getSuffix('desktop');                                                                                 // 81\n  }                                                                                                              // 82\n                                                                                                                 // 83\n  Device.prototype.BotSuffix = function() {                                                                      // 84\n    return getSuffix('bot');                                                                                     // 85\n  }                                                                                                              // 86\n                                                                                                                 // 87\n  /*                                                                                                             // 88\n   * Setting Preferences                                                                                         // 89\n   */                                                                                                            // 90\n  Device.prototype.setPreference = function(type) {                                                              // 91\n    this._type = type;                                                                                           // 92\n    Session.set('devices_user_type_preference', type);                                                           // 93\n    this._deps.changed();                                                                                        // 94\n  }                                                                                                              // 95\n                                                                                                                 // 96\n  Device.prototype.hasPreference = function() {                                                                  // 97\n    return !Session.equals('devices_user_type_preference', 'no_preference');                                     // 98\n  }                                                                                                              // 99\n                                                                                                                 // 100\n  // Helper Functions                                                                                            // 101\n  Device.prototype.clearPreference = function() {                                                                // 102\n    this.setPreference('no_preference');                                                                         // 103\n    this.detectDevice();                                                                                         // 104\n  }                                                                                                              // 105\n                                                                                                                 // 106\n  Device.prototype.preferTV = function() {                                                                       // 107\n    this.setPreference('tv');                                                                                    // 108\n  }                                                                                                              // 109\n                                                                                                                 // 110\n  Device.prototype.preferTablet = function() {                                                                   // 111\n    this.setPreference('tablet');                                                                                // 112\n  }                                                                                                              // 113\n                                                                                                                 // 114\n  Device.prototype.preferPhone = function() {                                                                    // 115\n    this.setPreference('phone');                                                                                 // 116\n  }                                                                                                              // 117\n                                                                                                                 // 118\n  Device.prototype.preferDesktop = function() {                                                                  // 119\n    this.setPreference('desktop');                                                                               // 120\n  }                                                                                                              // 121\n                                                                                                                 // 122\n  Device.prototype.preferBot = function() {                                                                      // 123\n    this.setPreference('bot');                                                                                   // 124\n  }                                                                                                              // 125\n                                                                                                                 // 126\n  /*                                                                                                             // 127\n   * Getting Type                                                                                                // 128\n   */                                                                                                            // 129\n  Device.prototype.type = function() {                                                                           // 130\n    this._deps.depend();                                                                                         // 131\n    return this._type;                                                                                           // 132\n  }                                                                                                              // 133\n                                                                                                                 // 134\n  Device.prototype.isType = function(type) {                                                                     // 135\n    return type === this.type();                                                                                 // 136\n  }                                                                                                              // 137\n                                                                                                                 // 138\n  // Helper Functions                                                                                            // 139\n  Device.prototype.isTV = function() {                                                                           // 140\n    return this.isType('tv');                                                                                    // 141\n  };                                                                                                             // 142\n                                                                                                                 // 143\n  Device.prototype.isTablet = function() {                                                                       // 144\n    return this.isType('tablet');                                                                                // 145\n  };                                                                                                             // 146\n                                                                                                                 // 147\n  Device.prototype.isPhone = function() {                                                                        // 148\n    return this.isType('phone');                                                                                 // 149\n  };                                                                                                             // 150\n                                                                                                                 // 151\n  Device.prototype.isDesktop = function() {                                                                      // 152\n    return this.isType('desktop');                                                                               // 153\n  };                                                                                                             // 154\n                                                                                                                 // 155\n  Device.prototype.isBot = function() {                                                                          // 156\n    return this.isType('bot');                                                                                   // 157\n  };                                                                                                             // 158\n                                                                                                                 // 159\n  /*                                                                                                             // 160\n   * Automatically detect the type                                                                               // 161\n   * Run when code first executes, can be run again later.                                                       // 162\n   * This will not overwrite user preferences                                                                    // 163\n   */                                                                                                            // 164\n  Device.prototype.detectDevice = function() {                                                                   // 165\n    if (!Session.equals('devices_user_type_preference', 'no_preference')) {                                      // 166\n      // Don't override the user's preferences                                                                   // 167\n      this._type = Session.get('devices_user_type_preference');                                                  // 168\n      this._deps.changed();                                                                                      // 169\n      return;                                                                                                    // 170\n    }                                                                                                            // 171\n                                                                                                                 // 172\n    var ua = navigator.userAgent;                                                                                // 173\n    var options = this;                                                                                          // 174\n                                                                                                                 // 175\n    this._type = (function() {                                                                                   // 176\n      if (!ua || ua === '') {                                                                                    // 177\n        // No user agent                                                                                         // 178\n        return options.emptyUserAgentDeviceType||'desktop';                                                      // 179\n      }                                                                                                          // 180\n                                                                                                                 // 181\n      if (ua.match(/GoogleTV|SmartTV|Internet TV|NetCast|NETTV|AppleTV|boxee|Kylo|Roku|DLNADOC|CE\\-HTML/i)) {    // 182\n        // if user agent is a smart TV - http://goo.gl/FocDk                                                     // 183\n        return 'tv';                                                                                             // 184\n      } else if (ua.match(/Xbox|PLAYSTATION 3|Wii/i)) {                                                          // 185\n        // if user agent is a TV Based Gaming Console                                                            // 186\n        return 'tv';                                                                                             // 187\n      } else if (ua.match(/iP(a|ro)d/i) || (ua.match(/tablet/i) && !ua.match(/RX-34/i)) || ua.match(/FOLIO/i)) { // 188\n        // if user agent is a Tablet                                                                             // 189\n        return 'tablet';                                                                                         // 190\n      } else if (ua.match(/Linux/i) && ua.match(/Android/i) && !ua.match(/Fennec|mobi|HTC Magic|HTCX06HT|Nexus One|SC-02B|fone 945/i)) {\n        // if user agent is an Android Tablet                                                                    // 192\n        return 'tablet';                                                                                         // 193\n      } else if (ua.match(/Kindle/i) || (ua.match(/Mac OS/i) && ua.match(/Silk/i))) {                            // 194\n        // if user agent is a Kindle or Kindle Fire                                                              // 195\n        return 'tablet';                                                                                         // 196\n      } else if (ua.match(/GT-P10|SC-01C|SHW-M180S|SGH-T849|SCH-I800|SHW-M180L|SPH-P100|SGH-I987|zt180|HTC( Flyer|_Flyer)|Sprint ATP51|ViewPad7|pandigital(sprnova|nova)|Ideos S7|Dell Streak 7|Advent Vega|A101IT|A70BHT|MID7015|Next2|nook/i) || (ua.match(/MB511/i) && ua.match(/RUTEM/i))) {\n        // if user agent is a pre Android 3.0 Tablet                                                             // 198\n        return 'tablet';                                                                                         // 199\n      } else if (ua.match(/BOLT|Fennec|Iris|Maemo|Minimo|Mobi|mowser|NetFront|Novarra|Prism|RX-34|Skyfire|Tear|XV6875|XV6975|Google Wireless Transcoder/i)) {\n        // if user agent is unique mobile User Agent                                                             // 201\n        return 'phone';                                                                                          // 202\n      } else if (ua.match(/Opera/i) && ua.match(/Windows NT 5/i) && ua.match(/HTC|Xda|Mini|Vario|SAMSUNG\\-GT\\-i8000|SAMSUNG\\-SGH\\-i9/i)) {\n        // if user agent is an odd Opera User Agent - http://goo.gl/nK90K                                        // 204\n        return 'phone';                                                                                          // 205\n      } else if ((ua.match(/Windows (NT|XP|ME|9)/) && !ua.match(/Phone/i)) && !ua.match(/Bot|Spider|ia_archiver|NewsGator/i) || ua.match(/Win( ?9|NT)/i)) {\n        // if user agent is Windows Desktop                                                                      // 207\n        return 'desktop';                                                                                        // 208\n      } else if (ua.match(/Macintosh|PowerPC/i) && !ua.match(/Silk/i)) {                                         // 209\n        // if agent is Mac Desktop                                                                               // 210\n        return 'desktop';                                                                                        // 211\n      } else if (ua.match(/Linux/i) && ua.match(/X11/i) && !ua.match(/Charlotte/i)) {                            // 212\n        // if user agent is a Linux Desktop                                                                      // 213\n        return 'desktop';                                                                                        // 214\n      } else if (ua.match(/CrOS/)) {                                                                             // 215\n        // if user agent is a Chrome Book                                                                        // 216\n        return 'desktop';                                                                                        // 217\n      } else if (ua.match(/Solaris|SunOS|BSD/i)) {                                                               // 218\n        // if user agent is a Solaris, SunOS, BSD Desktop                                                        // 219\n        return 'desktop';                                                                                        // 220\n      } else if (ua.match(/curl|Bot|B-O-T|Crawler|Spider|Spyder|Yahoo|ia_archiver|Covario-IDS|findlinks|DataparkSearch|larbin|Mediapartners-Google|NG-Search|Snappy|Teoma|Jeeves|Charlotte|NewsGator|TinEye|Cerberian|SearchSight|Zao|Scrubby|Qseero|PycURL|Pompos|oegp|SBIder|yoogliFetchAgent|yacy|webcollage|VYU2|voyager|updated|truwoGPS|StackRambler|Sqworm|silk|semanticdiscovery|ScoutJet|Nymesis|NetResearchServer|MVAClient|mogimogi|Mnogosearch|Arachmo|Accoona|holmes|htdig|ichiro|webis|LinkWalker|lwp-trivial/i) && !ua.match(/mobile|Playstation/i)) {\n        // if user agent is a BOT/Crawler/Spider                                                                 // 222\n        return options.botUserAgentDeviceType||'bot';                                                            // 223\n      } else {                                                                                                   // 224\n        // Otherwise assume it is a mobile Device                                                                // 225\n        return options.unknownUserAgentDeviceType||'phone';                                                      // 226\n      }                                                                                                          // 227\n    })();                                                                                                        // 228\n                                                                                                                 // 229\n    this._deps.changed();                                                                                        // 230\n  }                                                                                                              // 231\n                                                                                                                 // 232\n                                                                                                                 // 233\n  Meteor.Device = new Device;                                                                                    // 234\n  Meteor.Device.detectDevice();                                                                                  // 235\n})();                                                                                                            // 236\n                                                                                                                 // 237\n                                                                                                                 // 238\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/mystor:device-detection/device_helpers.js                                                            //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nif (typeof UI !== 'undefined') {                                                                                 // 1\n  /*                                                                                                             // 2\n   * Template Rendering Shortcut                                                                                 // 3\n   */                                                                                                            // 4\n  UI.registerHelper('deviceRender', function() {                                                                 // 5\n    var name = this;                                                                                             // 6\n    if (! _.isString(name)) {                                                                                    // 7\n      // If meteor-router is installed, no passed name will load Meteor.Router.page()                            // 8\n      if (typeof Meteor.Router !== 'undefined') {                                                                // 9\n        name = Meteor.Router.page();                                                                             // 10\n      } else {                                                                                                   // 11\n        name = '';                                                                                               // 12\n      }                                                                                                          // 13\n    }                                                                                                            // 14\n                                                                                                                 // 15\n    var device_type = Meteor.Device.type();                                                                      // 16\n    var suffix = Meteor.Device.getSuffix(device_type);                                                           // 17\n                                                                                                                 // 18\n    var device_name = name + (suffix || '');                                                                     // 19\n                                                                                                                 // 20\n    if (Template[device_name]) {                                                                                 // 21\n      // Try to load the suffixed template                                                                       // 22\n      return Template[device_name];                                                                              // 23\n    } else if (Template[name]) {                                                                                 // 24\n      // Fallback to unsuffixed template if suffixed template doesn't exist                                      // 25\n      return Template[name];                                                                                     // 26\n    } else {                                                                                                     // 27\n      // Blaze gets grumpy if you return undefined                                                               // 28\n      return null;                                                                                               // 29\n    }                                                                                                            // 30\n  });                                                                                                            // 31\n                                                                                                                 // 32\n  /*                                                                                                             // 33\n   * Device Type Helpers                                                                                         // 34\n   */                                                                                                            // 35\n  UI.registerHelper('isTV', function() {                                                                         // 36\n    return Meteor.Device.isTV();                                                                                 // 37\n  });                                                                                                            // 38\n  UI.registerHelper('isTablet', function() {                                                                     // 39\n    return Meteor.Device.isTablet();                                                                             // 40\n  });                                                                                                            // 41\n  UI.registerHelper('isPhone', function() {                                                                      // 42\n    return Meteor.Device.isPhone();                                                                              // 43\n  });                                                                                                            // 44\n  UI.registerHelper('isDesktop', function() {                                                                    // 45\n    return Meteor.Device.isDesktop();                                                                            // 46\n  });                                                                                                            // 47\n  UI.registerHelper('isBot', function() {                                                                        // 48\n    return Meteor.Device.isBot();                                                                                // 49\n  });                                                                                                            // 50\n                                                                                                                 // 51\n  UI.registerHelper('device_type', function() {                                                                  // 52\n    return Meteor.Device.type();                                                                                 // 53\n  });                                                                                                            // 54\n}                                                                                                                // 55\n                                                                                                                 // 56\n                                                                                                                 // 57\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"mystor:device-detection\");\n\n})();\n","servePath":"/packages/mystor_device-detection.js"}]
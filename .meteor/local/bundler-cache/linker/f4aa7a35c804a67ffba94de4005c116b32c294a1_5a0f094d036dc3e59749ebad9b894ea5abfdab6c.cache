[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar UsersSessions, UserPresence;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"konecty:user-presence\":{\"common\":{\"common.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// packages/konecty_user-presence/common/common.js                                             //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\n/* globals UsersSessions */\n\n/* exported UsersSessions */\nUsersSessions = new Meteor.Collection('usersSessions');\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"client\":{\"client.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// packages/konecty_user-presence/client/client.js                                             //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar debounce;\nmodule.link(\"../utils\", {\n  debounce: function (v) {\n    debounce = v;\n  }\n}, 0);\nvar timer, status;\nvar setUserPresence = debounce(function (newStatus) {\n  if (!UserPresence.connected || newStatus === status) {\n    UserPresence.startTimer();\n    return;\n  }\n\n  switch (newStatus) {\n    case 'online':\n      Meteor.call('UserPresence:online', UserPresence.userId);\n      break;\n\n    case 'away':\n      Meteor.call('UserPresence:away', UserPresence.userId);\n      UserPresence.stopTimer();\n      break;\n\n    default:\n      return;\n  }\n\n  status = newStatus;\n}, 1000);\nUserPresence = {\n  awayTime: 60000,\n  // 1 minute\n  awayOnWindowBlur: false,\n  callbacks: [],\n  connected: true,\n  started: false,\n  userId: null,\n\n  /**\n   * The callback will receive the following parameters: user, status\n   */\n  onSetUserStatus: function (callback) {\n    this.callbacks.push(callback);\n  },\n  runCallbacks: function (user, status) {\n    this.callbacks.forEach(function (callback) {\n      callback.call(null, user, status);\n    });\n  },\n  startTimer: function () {\n    UserPresence.stopTimer();\n\n    if (!UserPresence.awayTime) {\n      return;\n    }\n\n    timer = setTimeout(UserPresence.setAway, UserPresence.awayTime);\n  },\n  stopTimer: function () {\n    clearTimeout(timer);\n  },\n  restartTimer: function () {\n    UserPresence.startTimer();\n  },\n  setAway: function () {\n    return setUserPresence('away');\n  },\n  setOnline: function () {\n    return setUserPresence('online');\n  },\n  start: function (userId) {\n    var _this = this;\n\n    // after first call overwrite start function to only call startTimer\n    this.start = function () {\n      _this.startTimer();\n    };\n\n    this.userId = userId; // register a tracker on connection status so we can setup the away timer again (on reconnect)\n\n    Tracker.autorun(function () {\n      var _Meteor$status = Meteor.status(),\n          connected = _Meteor$status.connected;\n\n      _this.connected = connected;\n\n      if (connected) {\n        _this.startTimer();\n\n        status = 'online';\n        return;\n      }\n\n      _this.stopTimer();\n\n      status = 'offline';\n    });\n    ['mousemove', 'mousedown', 'touchend', 'keydown'].forEach(function (key) {\n      return document.addEventListener(key, _this.setOnline);\n    });\n    window.addEventListener('focus', this.setOnline);\n\n    if (this.awayOnWindowBlur === true) {\n      window.addEventListener('blur', this.setAway);\n    }\n  }\n};\nMeteor.methods({\n  'UserPresence:setDefaultStatus': function (status) {\n    check(status, String);\n    Meteor.users.update({\n      _id: Meteor.userId()\n    }, {\n      $set: {\n        status: status,\n        statusDefault: status\n      }\n    });\n  },\n  'UserPresence:online': function () {\n    var user = Meteor.user();\n\n    if (user && user.status !== 'online' && user.statusDefault === 'online') {\n      Meteor.users.update({\n        _id: Meteor.userId()\n      }, {\n        $set: {\n          status: 'online'\n        }\n      });\n    }\n\n    UserPresence.runCallbacks(user, 'online');\n  },\n  'UserPresence:away': function () {\n    var user = Meteor.user();\n    UserPresence.runCallbacks(user, 'away');\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils\":{\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// packages/konecty_user-presence/utils/index.js                                               //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nmodule.export({\n  debounce: function () {\n    return debounce;\n  }\n});\n\nfunction debounce(func, wait) {\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return func.apply(void 0, args);\n    }, wait);\n  };\n}\n\n;\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/konecty:user-presence/common/common.js\");\nrequire(\"/node_modules/meteor/konecty:user-presence/client/client.js\");\n\n/* Exports */\nPackage._define(\"konecty:user-presence\", {\n  UserPresence: UserPresence,\n  UsersSessions: UsersSessions\n});\n\n})();\n","servePath":"/packages/konecty_user-presence.js","sourceMap":{"version":3,"sources":["packages/konecty:user-presence/common/common.js","packages/konecty:user-presence/client/client.js","packages/konecty:user-presence/utils/index.js"],"names":["UsersSessions","Meteor","Collection","debounce","module","link","v","timer","status","setUserPresence","newStatus","UserPresence","connected","startTimer","call","userId","stopTimer","awayTime","awayOnWindowBlur","callbacks","started","onSetUserStatus","callback","push","runCallbacks","user","forEach","setTimeout","setAway","clearTimeout","restartTimer","setOnline","start","Tracker","autorun","key","document","addEventListener","window","methods","check","String","users","update","_id","$set","statusDefault","export","func","wait","timeout","args"],"mappings":"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","file":"/packages/konecty_user-presence.js","sourcesContent":["/* globals UsersSessions */\n/* exported UsersSessions */\n\nUsersSessions = new Meteor.Collection('usersSessions');\n","/* globals UserPresence */\nimport { debounce } from '../utils';\nlet timer, status;\nconst setUserPresence = debounce((newStatus) => {\n\tif (!UserPresence.connected || newStatus === status) {\n\t\tUserPresence.startTimer();\n\t\treturn;\n\t}\n\tswitch (newStatus) {\n\t\tcase 'online':\n\t\t\tMeteor.call('UserPresence:online', UserPresence.userId);\n\t\t\tbreak;\n\t\tcase 'away':\n\t\t\tMeteor.call('UserPresence:away', UserPresence.userId);\n\t\t\tUserPresence.stopTimer();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn;\n\t}\n\tstatus = newStatus;\n}, 1000);\n\nUserPresence = {\n\tawayTime: 60000, // 1 minute\n\tawayOnWindowBlur: false,\n\tcallbacks: [],\n\tconnected: true,\n\tstarted: false,\n\tuserId: null,\n\n\t/**\n\t * The callback will receive the following parameters: user, status\n\t */\n\tonSetUserStatus: function(callback) {\n\t\tthis.callbacks.push(callback);\n\t},\n\n\trunCallbacks: function(user, status) {\n\t\tthis.callbacks.forEach(function(callback) {\n\t\t\tcallback.call(null, user, status);\n\t\t});\n\t},\n\n\tstartTimer: function() {\n\t\tUserPresence.stopTimer();\n\t\tif (!UserPresence.awayTime) {\n\t\t\treturn;\n\t\t}\n\t\ttimer = setTimeout(UserPresence.setAway, UserPresence.awayTime);\n\t},\n\tstopTimer: function() {\n\t\tclearTimeout(timer);\n\t},\n\trestartTimer: function() {\n\t\tUserPresence.startTimer();\n\t},\n\tsetAway: () => setUserPresence('away'),\n\tsetOnline: () => setUserPresence('online'),\n\tstart: function(userId) {\n\t\t// after first call overwrite start function to only call startTimer\n\t\tthis.start = () => { this.startTimer(); };\n\t\tthis.userId = userId;\n\n\t\t// register a tracker on connection status so we can setup the away timer again (on reconnect)\n\t\tTracker.autorun(() => {\n\t\t\tconst { connected } = Meteor.status();\n\t\t\tthis.connected = connected;\n\t\t\tif (connected) {\n\t\t\t\tthis.startTimer();\n\t\t\t\tstatus = 'online';\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.stopTimer();\n\t\t\tstatus = 'offline';\n\t\t});\n\n\t\t['mousemove', 'mousedown', 'touchend', 'keydown']\n\t\t\t.forEach(key => document.addEventListener(key, this.setOnline));\n\n\t\twindow.addEventListener('focus', this.setOnline);\n\n\t\tif (this.awayOnWindowBlur === true) {\n\t\t\twindow.addEventListener('blur', this.setAway);\n\t\t}\n\t}\n};\n\nMeteor.methods({\n\t'UserPresence:setDefaultStatus': function(status) {\n\t\tcheck(status, String);\n\t\tMeteor.users.update({_id: Meteor.userId()}, {$set: { status, statusDefault: status }});\n\t},\n\t'UserPresence:online': function() {\n\t\tconst user = Meteor.user();\n\t\tif (user && user.status !== 'online' && user.statusDefault === 'online') {\n\t\t\tMeteor.users.update({_id: Meteor.userId()}, {$set: {status: 'online'}});\n\t\t}\n\t\tUserPresence.runCallbacks(user, 'online');\n\t},\n\t'UserPresence:away': function() {\n\t\tvar user = Meteor.user();\n\t\tUserPresence.runCallbacks(user, 'away');\n\t}\n});\n","export function debounce(func, wait) {\n\tlet timeout;\n\n\treturn (...args) => {\n\t\tif (timeout) clearTimeout(timeout);\n\t\ttimeout = setTimeout(() => func(...args), wait);\n\t};\n};\n"]}}]
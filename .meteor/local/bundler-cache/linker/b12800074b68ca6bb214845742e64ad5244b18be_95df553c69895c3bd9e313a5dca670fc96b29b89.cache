[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar Github = Package['github-oauth'].Github;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"accounts-github\":{\"notice.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/accounts-github/notice.js                                                                    //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nif (Package['accounts-ui'] && !Package['service-configuration'] && !Object.prototype.hasOwnProperty.call(Package, 'github-config-ui')) {\n  console.warn(\"Note: You're using accounts-ui and accounts-github,\\n\" + \"but didn't install the configuration UI for the GitHub\\n\" + \"OAuth. You can install it with:\\n\" + \"\\n\" + \"    meteor add github-config-ui\" + \"\\n\");\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"github.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/accounts-github/github.js                                                                    //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nAccounts.oauth.registerService('github');\n\nif (Meteor.isClient) {\n  const loginWithGithub = (options, callback) => {\n    // support a callback without options\n    if (!callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Github.requestCredential(options, credentialRequestCompleteCallback);\n  };\n\n  Accounts.registerClientLoginFunction('github', loginWithGithub);\n\n  Meteor.loginWithGithub = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return Accounts.applyLoginFunction('github', args);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // not sure whether the github api can be used from the browser,\n    // thus not sure if we should be sending access tokens; but we do it\n    // for all other oauth2 providers, and it may come in handy.\n    forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/accounts-github/notice.js\");\nrequire(\"/node_modules/meteor/accounts-github/github.js\");\n\n/* Exports */\nPackage._define(\"accounts-github\");\n\n})();\n","servePath":"/packages/accounts-github.js","sourceMap":{"version":3,"sources":["packages/accounts-github/notice.js","packages/accounts-github/github.js"],"names":["Package","Object","prototype","hasOwnProperty","call","console","warn","Accounts","oauth","registerService","Meteor","isClient","loginWithGithub","options","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","Github","requestCredential","registerClientLoginFunction","args","applyLoginFunction","addAutopublishFields","forLoggedInUser","forOtherUsers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAO,CAAC,aAAD,CAAP,IACG,CAACA,OAAO,CAAC,uBAAD,CADX,IAEG,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,OAArC,EAA8C,kBAA9C,CAFR,EAE2E;AACzEK,SAAO,CAACC,IAAR,CACE,0DACA,0DADA,GAEA,mCAFA,GAGA,IAHA,GAIA,iCAJA,GAKA,IANF;AAQD,C;;;;;;;;;;;ACXDC,QAAQ,CAACC,KAAT,CAAeC,eAAf,CAA+B,QAA/B;;AAEA,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,QAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC7C;AACA,QAAI,CAAEA,QAAF,IAAc,OAAOD,OAAP,KAAmB,UAArC,EAAiD;AAC/CC,cAAQ,GAAGD,OAAX;AACAA,aAAO,GAAG,IAAV;AACD;;AAED,UAAME,iCAAiC,GAAGR,QAAQ,CAACC,KAAT,CAAeQ,gCAAf,CAAgDF,QAAhD,CAA1C;AACAG,UAAM,CAACC,iBAAP,CAAyBL,OAAzB,EAAkCE,iCAAlC;AACD,GATD;;AAUAR,UAAQ,CAACY,2BAAT,CAAqC,QAArC,EAA+CP,eAA/C;;AACAF,QAAM,CAACE,eAAP,GACE;AAAA,sCAAIQ,IAAJ;AAAIA,UAAJ;AAAA;;AAAA,WAAab,QAAQ,CAACc,kBAAT,CAA4B,QAA5B,EAAsCD,IAAtC,CAAb;AAAA,GADF;AAED,CAdD,MAcO;AACLb,UAAQ,CAACe,oBAAT,CAA8B;AAC5B;AACA;AACA;AACAC,mBAAe,EAAE,CAAC,iBAAD,CAJW;AAK5BC,iBAAa,EAAE,CAAC,0BAAD;AALa,GAA9B;AAOD,C","file":"/packages/accounts-github.js","sourcesContent":["if (Package['accounts-ui']\n    && !Package['service-configuration']\n    && !Object.prototype.hasOwnProperty.call(Package, 'github-config-ui')) {\n  console.warn(\n    \"Note: You're using accounts-ui and accounts-github,\\n\" +\n    \"but didn't install the configuration UI for the GitHub\\n\" +\n    \"OAuth. You can install it with:\\n\" +\n    \"\\n\" +\n    \"    meteor add github-config-ui\" +\n    \"\\n\"\n  );\n}\n","Accounts.oauth.registerService('github');\n\nif (Meteor.isClient) {\n  const loginWithGithub = (options, callback) => {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Github.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('github', loginWithGithub);\n  Meteor.loginWithGithub = \n    (...args) => Accounts.applyLoginFunction('github', args);\n} else {\n  Accounts.addAutopublishFields({\n    // not sure whether the github api can be used from the browser,\n    // thus not sure if we should be sending access tokens; but we do it\n    // for all other oauth2 providers, and it may come in handy.\n    forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n  });\n}\n"]}}]